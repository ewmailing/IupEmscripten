// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var s = func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - asm.stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var WASM_PAGE_SIZE = 64 * 1024;

var totalMemory = WASM_PAGE_SIZE;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024;
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var lastChar, end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);    
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



var /* show errors on likely calls to FS when it was not included */ FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;


// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 362480;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocate([1,0,0,0,50,48,0,0,251,68,0,0,148,62,0,0,198,48,0,0,29,49,0,0,0,0,0,0,36,49,0,0,2,0,0,0,44,49,0,0,2,0,0,0,51,49,0,0,0,0,0,0,62,49,0,0,0,0,0,0,74,49,0,0,0,0,0,0,80,49,0,0,0,0,0,0,87,49,0,0,1,0,0,0,97,49,0,0,1,0,0,0,102,49,0,0,1,0,0,0,113,49,0,0,0,0,0,0,119,49,0,0,0,0,0,0,135,49,0,0,0,0,0,0,151,49,0,0,0,0,0,0,161,49,0,0,0,0,0,0,176,49,0,0,0,0,0,0,190,49,0,0,0,0,0,0,199,49,0,0,0,0,0,0,214,49,0,0,0,0,0,0,213,55,0,0,4,0,0,0,229,49,0,0,8,0,0,0,175,78,0,0,209,80,0,0,180,78,0,0,119,0,0,0,1,0,0,0,87,0,0,0,2,0,0,0,100,0,0,0,3,0,0,0,68,0,0,0,4,0,0,0,83,0,0,0,5,0,0,0,115,0,0,0,6,0,0,0,98,0,0,0,7,0,0,0,108,0,0,0,8,0,0,0,76,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,254,57,0,0,239,77,0,0,15,78,0,0,249,57,0,0,255,255,255,255,255,255,255,255,255,255,255,255,213,62,0,0,223,62,0,0,229,62,0,0,0,0,0,0,0,0,0,0,234,62,0,0,242,62,0,0,246,62,0,0,0,0,0,0,0,0,0,0,250,62,0,0,146,69,0,0,1,63,0,0,5,63,0,0,0,0,0,0,10,63,0,0,25,63,0,0,44,63,0,0,64,63,0,0,0,0,0,0,86,63,0,0,100,63,0,0,134,63,0,0,169,63,0,0,0,0,0,0,206,63,0,0,223,63,0,0,244,63,0,0,0,0,0,0,0,0,0,0,9,64,0,0,27,64,0,0,52,64,0,0,0,0,0,0,0,0,0,0,74,64,0,0,91,64,0,0,105,64,0,0,121,64,0,0,0,0,0,0,138,64,0,0,156,64,0,0,180,64,0,0,204,64,0,0,0,0,0,0,229,64,0,0,240,64,0,0,248,64,0,0,0,0,0,0,0,0,0,0,4,65,0,0,13,65,0,0,18,65,0,0,0,0,0,0,0,0,0,0,24,65,0,0,38,65,0,0,55,65,0,0,76,65,0,0,0,0,0,0,98,65,0,0,105,65,0,0,105,65,0,0,0,0,0,0,0,0,0,0,108,65,0,0,119,65,0,0,126,65,0,0,0,0,0,0,0,0,0,0,135,65,0,0,145,65,0,0,151,65,0,0,0,0,0,0,0,0,0,0,159,65,0,0,169,65,0,0,175,65,0,0,0,0,0,0,0,0,0,0,189,65,0,0,202,65,0,0,218,65,0,0,233,65,0,0,0,0,0,0,250,65,0,0,3,66,0,0,8,66,0,0,0,0,0,0,0,0,0,0,14,66,0,0,22,66,0,0,28,66,0,0,0,0,0,0,0,0,0,0,39,66,0,0,49,66,0,0,57,66,0,0,0,0,0,0,0,0,0,0,65,66,0,0,74,66,0,0,81,66,0,0,0,0,0,0,0,0,0,0,88,66,0,0,96,66,0,0,102,66,0,0,0,0,0,0,0,0,0,0,110,66,0,0,125,66,0,0,138,66,0,0,150,66,0,0,0,0,0,0,164,66,0,0,178,66,0,0,0,0,0,0,190,66,0,0,0,0,0,0,204,66,0,0,216,66,0,0,226,66,0,0,0,0,0,0,0,0,0,0,238,66,0,0,250,66,0,0,4,67,0,0,0,0,0,0,0,0,0,0,13,67,0,0,22,67,0,0,27,67,0,0,0,0,0,0,0,0,0,0,38,67,0,0,48,67,0,0,54,67,0,0,0,0,0,0,0,0,0,0,60,67,0,0,71,67,0,0,79,67,0,0,88,67,0,0,0,0,0,0,98,67,0,0,108,67,0,0,115,67,0,0,0,0,0,0,0,0,0,0,123,67,0,0,132,67,0,0,138,67,0,0,0,0,0,0,0,0,0,0,147,67,0,0,158,67,0,0,166,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,101,0,0,0,145,1,0,0,65,6,0,0,161,15,0,0,73,31,0,0,129,62,0,0,3,125,0,0,7,250,0,0,188,78,0,0,209,80,0,0,194,78,0,0,69,78,0,0,75,78,0,0,81,78,0,0,86,78,0,0,91,78,0,0,94,78,0,0,97,78,0,0,100,78,0,0,209,80,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,244,4,0,0,5,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,12,0,0,0,222,131,5,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,5,0,0,5,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,12,0,0,0,230,131,5,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,95,112,137,0,255,9,47,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,91,0,0,230,135,5,0,230,135,5,0,230,135,5,0,230,135,5,0,230,135,5,0,230,135,5,0,230,135,5,0,230,135,5,0,230,135,5,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,51,46,49,53,0,50,48,49,53,47,48,55,47,48,54,0,37,115,37,100,0,95,73,85,80,95,78,65,77,69,40,37,112,41,0,95,73,85,80,95,88,89,50,80,79,83,95,67,66,0,98,97,99,107,103,114,111,117,110,100,98,111,120,0,67,71,65,80,0,78,71,65,80,0,78,67,71,65,80,0,72,79,77,79,71,69,78,69,79,85,83,0,98,117,116,116,111,110,0,73,77,80,82,69,83,83,66,79,82,68,69,82,0,70,79,67,85,83,79,78,67,76,73,67,75,0,87,79,77,95,67,66,0,75,69,89,80,82,69,83,83,95,67,66,0,102,102,0,105,102,102,0,87,72,69,69,76,95,67,66,0,102,105,105,115,0,88,77,73,78,0,89,77,73,78,0,76,73,78,69,88,0,76,73,78,69,89,0,89,65,85,84,79,72,73,68,69,0,88,65,85,84,79,72,73,68,69,0,88,72,73,68,68,69,78,0,89,72,73,68,68,69,78,0,99,98,111,120,0,67,88,0,67,89,0,73,68,86,65,76,85,69,0,66,65,67,75,71,82,79,85,78,68,0,95,73,85,80,95,68,73,65,76,79,71,95,67,72,73,76,68,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,79,82,73,90,79,78,84,65,76,70,82,69,69,0,86,69,82,84,73,67,65,76,70,82,69,69,0,78,79,82,77,65,76,73,90,69,82,71,82,79,85,80,0,67,72,65,82,83,73,90,69,0,78,65,84,85,82,65,76,83,73,90,69,0,85,83,69,82,83,73,90,69,0,54,53,53,51,53,120,54,53,53,51,53,0,70,79,78,84,83,73,90,69,0,70,79,78,84,70,65,67,69,0,84,73,80,0,84,73,80,86,73,83,73,66,76,69,0,84,73,80,68,69,76,65,89,0,53,48,48,48,0,84,73,80,66,71,67,79,76,79,82,0,50,53,53,32,50,53,53,32,50,50,53,0,84,73,80,70,71,67,79,76,79,82,0,84,73,80,82,69,67,84,0,71,69,84,70,79,67,85,83,95,67,66,0,75,73,76,76,70,79,67,85,83,95,67,66,0,99,111,108,111,114,100,108,103,0,100,101,116,97,99,104,98,111,120,0,68,69,84,65,67,72,69,68,95,67,66,0,79,76,68,80,65,82,69,78,84,95,72,65,78,68,76,69,0,79,76,68,66,82,79,84,72,69,82,95,72,65,78,68,76,69,0,82,69,83,84,79,82,69,0,68,69,84,65,67,72,0,73,117,112,68,101,116,97,99,104,66,111,120,67,117,114,115,111,114,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,1,4,4,4,4,4,4,4,4,4,4,4,4,1,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,1,0,0,1,3,3,3,2,2,2,3,3,3,3,3,3,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,3,1,1,4,4,4,4,4,2,2,2,4,4,4,4,1,3,1,1,4,4,4,4,4,2,2,2,4,4,4,4,1,1,1,1,3,3,3,3,3,2,2,2,3,3,3,3,1,0,0,1,3,3,3,2,2,2,2,2,2,2,3,3,1,0,0,1,3,3,3,3,2,2,2,2,2,3,3,3,1,0,0,1,3,3,3,3,3,2,2,2,3,3,3,3,1,0,0,1,3,3,3,3,3,3,2,3,3,3,3,3,1,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,49,48,32,49,53,48,32,50,53,53,0,54,52,32,57,50,32,50,53,53,0,77,79,86,69,0,75,95,65,78,89,0,80,65,82,69,78,84,68,73,65,76,79,71,0,78,65,84,73,86,69,80,65,82,69,78,84,0,112,111,112,117,112,95,108,101,118,101,108,32,61,61,32,100,108,103,95,112,111,112,117,112,95,108,101,118,101,108,0,46,46,47,46,46,47,105,117,112,95,100,105,97,108,111,103,46,99,0,105,117,112,68,105,97,108,111,103,69,110,116,101,114,77,111,100,97,108,0,105,117,112,68,105,97,108,111,103,76,101,97,118,101,77,111,100,97,108,0,77,79,68,65,76,0,76,79,67,75,76,79,79,80,0,83,72,79,87,95,67,66,0,71,76,79,66,65,76,76,69,65,86,69,77,79,68,65,76,95,67,66,0,71,76,79,66,65,76,69,78,84,69,82,77,79,68,65,76,95,67,66,0,83,84,65,82,84,70,79,67,85,83,0,77,68,73,67,72,73,76,68,0,77,68,73,67,76,73,69,78,84,95,72,65,78,68,76,69,0,82,69,83,73,90,69,95,67,66,0,67,76,79,83,69,95,67,66,0,80,79,83,73,84,73,79,78,0,78,65,67,84,73,86,69,0,88,0,89,0,83,67,82,69,69,78,80,79,83,73,84,73,79,78,0,77,69,78,85,0,72,73,68,69,84,65,83,75,66,65,82,0,68,69,70,65,85,76,84,69,78,84,69,82,0,80,76,65,67,69,77,69,78,84,0,78,79,82,77,65,76,0,70,85,76,76,0,72,65,76,70,0,84,72,73,82,68,0,81,85,65,82,84,69,82,0,69,73,71,72,84,72,0,101,120,112,97,110,100,101,114,0,79,80,69,78,67,76,79,83,69,95,67,66,0,69,88,84,82,65,66,85,84,84,79,78,95,67,66,0,66,65,82,80,79,83,73,84,73,79,78,0,70,79,82,69,67,79,76,79,82,0,72,73,71,72,67,79,76,79,82,0,79,80,69,78,67,79,76,79,82,0,66,65,67,75,67,79,76,79,82,0,84,73,84,76,69,73,77,65,71,69,0,84,73,84,76,69,73,77,65,71,69,79,80,69,78,0,84,73,84,76,69,73,77,65,71,69,72,73,71,72,76,73,71,72,84,0,84,73,84,76,69,73,77,65,71,69,79,80,69,78,72,73,71,72,76,73,71,72,84,0,84,73,84,76,69,69,88,80,65,78,68,0,65,85,84,79,83,72,79,87,0,69,88,84,82,65,66,85,84,84,79,78,83,0,65,78,73,77,65,84,73,79,78,0,78,85,77,70,82,65,77,69,83,0,70,82,65,77,69,84,73,77,69,0,51,48,0,73,77,65,71,69,79,80,69,78,0,73,77,65,71,69,79,80,69,78,72,73,71,72,76,73,71,72,84,0,73,77,65,71,69,69,88,84,82,65,49,0,73,77,65,71,69,69,88,84,82,65,80,82,69,83,83,49,0,73,77,65,71,69,69,88,84,82,65,72,73,71,72,76,73,71,72,84,49,0,73,77,65,71,69,69,88,84,82,65,50,0,73,77,65,71,69,69,88,84,82,65,80,82,69,83,83,50,0,73,77,65,71,69,69,88,84,82,65,72,73,71,72,76,73,71,72,84,50,0,73,77,65,71,69,69,88,84,82,65,51,0,73,77,65,71,69,69,88,84,82,65,80,82,69,83,83,51,0,73,77,65,71,69,69,88,84,82,65,72,73,71,72,76,73,71,72,84,51,0,73,117,112,65,114,114,111,119,85,112,0,73,117,112,65,114,114,111,119,68,111,119,110,0,73,117,112,65,114,114,111,119,76,101,102,116,0,73,117,112,65,114,114,111,119,82,105,103,104,116,0,73,117,112,65,114,114,111,119,85,112,72,105,103,104,108,105,103,104,116,0,73,117,112,65,114,114,111,119,68,111,119,110,72,105,103,104,108,105,103,104,116,0,73,117,112,65,114,114,111,119,76,101,102,116,72,105,103,104,108,105,103,104,116,0,73,117,112,65,114,114,111,119,82,105,103,104,116,72,105,103,104,108,105,103,104,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,0,0,0,159,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,116,116,116,255,0,0,0,171,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,255,255,255,255,116,116,116,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,211,0,0,0,24,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,255,255,255,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,175,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,211,0,0,0,24,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,255,255,255,255,116,116,116,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,116,116,116,255,0,0,0,171,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,255,0,0,0,159,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,159,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,171,116,116,116,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,116,116,116,255,255,255,255,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,211,116,116,116,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,116,116,116,255,255,255,255,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,211,116,116,116,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,116,116,116,255,255,255,255,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,171,116,116,116,255,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,159,116,116,116,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,143,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,0,0,0,143,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,116,116,116,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,159,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,171,116,116,116,255,255,255,255,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,171,0,0,0,4,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,116,116,116,255,255,255,255,255,116,116,116,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,211,116,116,116,255,0,0,0,211,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,175,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,175,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,211,116,116,116,255,0,0,0,211,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,116,116,116,255,255,255,255,255,116,116,116,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,171,116,116,116,255,255,255,255,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,171,0,0,0,4,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,116,116,116,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,116,116,116,255,0,0,0,159,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,143,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,116,116,116,255,0,0,0,143,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,171,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,171,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,211,0,0,0,255,0,0,0,211,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,175,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,159,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,171,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,211,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,211,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,171,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,159,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,159,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,171,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,211,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,211,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,171,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,159,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,175,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,211,0,0,0,255,0,0,0,211,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,195,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,195,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,171,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,171,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,159,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,77,65,71,69,69,88,84,82,65,72,73,71,72,76,73,71,72,84,0,69,88,84,82,65,66,85,84,84,79,78,95,78,85,77,66,69,82,0,73,77,65,71,69,69,88,84,82,65,0,73,77,65,71,69,69,88,84,82,65,80,82,69,83,83,0,83,76,73,68,69,0,67,85,82,84,65,73,78,0,49,48,48,48,0,95,73,85,80,95,69,88,80,65,78,68,69,82,0,73,78,80,85,84,67,65,76,76,66,65,67,75,83,0,71,76,79,66,65,76,77,79,84,73,79,78,95,67,66,0,95,73,85,80,95,79,76,68,95,71,76,79,66,65,76,77,79,84,73,79,78,95,67,66,0,95,73,85,80,95,69,88,80,65,78,68,69,82,95,71,76,79,66,65,76,0,79,76,68,95,77,65,88,83,73,90,69,0,95,73,85,80,95,70,73,78,65,76,95,72,69,73,71,72,84,0,95,73,85,80,95,67,76,79,83,73,78,71,0,95,73,85,80,95,87,73,68,84,72,0,95,73,85,80,95,67,72,73,76,68,0,69,76,65,80,83,69,68,84,73,77,69,0,48,120,37,100,0,37,115,72,105,103,104,108,105,103,104,116,0,48,120,49,0,50,120,50,0,67,76,79,83,69,0,102,105,108,101,100,108,103,0,70,73,76,69,95,67,66,0,78,79,67,72,65,78,71,69,68,73,82,0,79,80,69,78,0,80,82,69,86,73,69,87,68,67,0,80,82,69,86,73,69,87,87,73,68,84,72,0,80,82,69,86,73,69,87,72,69,73,71,72,84,0,65,76,76,79,87,78,69,87,0,68,73,82,69,67,84,79,82,89,0,70,73,76,69,0,70,73,76,84,69,82,0,78,79,79,86,69,82,87,82,73,84,69,80,82,79,77,80,84,0,83,72,79,87,72,73,68,68,69,78,0,83,72,79,87,80,82,69,86,73,69,87,0,70,73,76,69,69,88,73,83,84,0,70,79,78,84,0,70,76,65,84,95,65,67,84,73,79,78,0,70,76,65,84,95,66,85,84,84,79,78,95,67,66,0,70,76,65,84,95,70,79,67,85,83,95,67,66,0,70,76,65,84,95,69,78,84,69,82,87,73,78,68,79,87,95,67,66,0,70,76,65,84,95,76,69,65,86,69,87,73,78,68,79,87,95,67,66,0,65,67,69,78,84,69,82,58,65,67,69,78,84,69,82,0,83,80,65,67,73,78,71,0,66,79,82,68,69,82,67,79,76,79,82,0,53,48,32,49,53,48,32,50,53,53,0,66,79,82,68,69,82,87,73,68,84,72,0,72,76,67,79,76,79,82,0,50,48,48,32,50,50,53,32,50,52,53,0,80,83,67,79,76,79,82,0,49,53,48,32,50,48,48,32,50,51,53,0,73,77,65,71,69,80,82,69,83,83,0,73,77,65,71,69,72,73,71,72,76,73,71,72,84,0,73,77,65,71,69,73,78,65,67,84,73,86,69,0,73,77,65,71,69,80,79,83,73,84,73,79,78,0,76,69,70,84,0,66,65,67,75,73,77,65,71,69,0,66,65,67,75,73,77,65,71,69,80,82,69,83,83,0,66,65,67,75,73,77,65,71,69,72,73,71,72,76,73,71,72,84,0,66,65,67,75,73,77,65,71,69,73,78,65,67,84,73,86,69,0,70,73,84,84,79,66,65,67,75,73,77,65,71,69,0,70,82,79,78,84,73,77,65,71,69,0,70,82,79,78,84,73,77,65,71,69,80,82,69,83,83,0,70,82,79,78,84,73,77,65,71,69,72,73,71,72,76,73,71,72,84,0,70,82,79,78,84,73,77,65,71,69,73,78,65,67,84,73,86,69,0,66,79,84,84,79,77,0,37,115,58,37,115,0,95,73,85,80,95,70,76,65,84,66,85,84,84,79,78,95,76,65,83,84,82,65,68,73,79,0,75,95,67,82,0,32,32,32,32,32,32,32,32,32,32,0,80,82,69,83,83,0,72,73,71,72,76,73,71,72,84,0,73,78,65,67,84,73,86,69,0,65,67,84,73,86,69,0,78,111,114,109,97,108,0,79,98,108,105,113,117,101,0,73,116,97,108,105,99,0,83,109,97,108,108,45,67,97,112,115,0,85,108,116,114,97,45,76,105,103,104,116,0,76,105,103,104,116,0,77,101,100,105,117,109,0,83,101,109,105,45,66,111,108,100,0,66,111,108,100,0,85,108,116,114,97,45,66,111,108,100,0,72,101,97,118,121,0,85,108,116,114,97,45,67,111,110,100,101,110,115,101,100,0,69,120,116,114,97,45,67,111,110,100,101,110,115,101,100,0,67,111,110,100,101,110,115,101,100,0,83,101,109,105,45,67,111,110,100,101,110,115,101,100,0,83,101,109,105,45,69,120,112,97,110,100,101,100,0,69,120,112,97,110,100,101,100,0,69,120,116,114,97,45,69,120,112,97,110,100,101,100,0,85,108,116,114,97,45,69,120,112,97,110,100,101,100,0,83,116,114,105,107,101,111,117,116,0,72,101,108,118,101,116,105,99,97,0,72,69,76,86,69,84,73,67,65,95,0,67,111,117,114,105,101,114,0,67,79,85,82,73,69,82,95,0,84,105,109,101,115,0,84,73,77,69,83,95,0,78,79,82,77,65,76,95,0,73,84,65,76,73,67,95,0,66,79,76,68,95,0,37,115,44,32,37,115,32,37,100,0,83,84,65,78,68,65,82,68,70,79,78,84,0,45,0,98,111,108,100,0,58,0,58,44,0,66,79,76,68,0,73,84,65,76,73,67,0,85,78,68,69,82,76,73,78,69,0,83,84,82,73,75,69,79,85,84,0,66,111,108,100,32,0,73,116,97,108,105,99,32,0,85,110,100,101,114,108,105,110,101,32,0,83,116,114,105,107,101,111,117,116,32,0,37,115,44,32,37,115,37,115,37,115,37,115,32,37,100,0,37,115,44,32,37,115,37,115,37,115,37,115,32,37,115,0,37,115,37,115,37,115,37,115,0,102,111,110,116,100,108,103,0,77,111,116,105,102,0,83,84,65,84,85,83,0,102,114,97,109,101,0,83,85,78,75,69,78,0,95,73,85,80,70,82,65,77,69,95,72,65,83,95,84,73,84,76,69,0,73,68,76,69,95,65,67,84,73,79,78,0,68,69,70,65,85,76,84,95,65,67,84,73,79,78,0,37,100,32,37,100,32,37,100,0,68,69,70,65,85,76,84,70,79,78,84,83,73,90,69,0,68,69,70,65,85,76,84,70,79,78,84,83,84,89,76,69,0,68,69,70,65,85,76,84,70,79,78,84,70,65,67,69,0,77,79,85,83,69,66,85,84,84,79,78,0,37,100,120,37,100,32,37,99,32,37,100,0,95,73,85,80,95,85,83,69,82,95,68,69,70,65,85,76,84,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,72,73,70,84,75,69,89,0,67,79,78,84,82,79,76,75,69,89,0,77,79,68,75,69,89,83,84,65,84,69,0,83,67,82,69,69,78,83,73,90,69,0,70,85,76,76,83,73,90,69,0,83,67,82,69,69,78,68,69,80,84,72,0,83,67,82,69,69,78,68,80,73,0,83,89,83,84,69,77,76,79,67,65,76,69,0,83,67,82,79,76,76,66,65,82,83,73,90,69,0,103,114,105,100,98,111,120,0,67,77,65,82,71,73,78,0,78,77,65,82,71,73,78,0,78,67,77,65,82,71,73,78,0,69,88,80,65,78,68,67,72,73,76,68,82,69,78,0,72,79,77,79,71,69,78,69,79,85,83,76,73,78,0,72,79,77,79,71,69,78,69,79,85,83,67,79,76,0,78,79,82,77,65,76,73,90,69,83,73,90,69,0,71,65,80,76,73,78,0,67,71,65,80,76,73,78,0,71,65,80,67,79,76,0,67,71,65,80,67,79,76,0,78,71,65,80,76,73,78,0,78,67,71,65,80,76,73,78,0,78,71,65,80,67,79,76,0,78,67,71,65,80,67,79,76,0,65,76,73,71,78,77,69,78,84,76,73,78,0,65,76,73,71,78,77,69,78,84,67,79,76,0,78,85,77,68,73,86,0,65,85,84,79,0,78,85,77,67,79,76,0,78,85,77,76,73,78,0,83,73,90,69,76,73,78,0,83,73,90,69,67,79,76,0,70,73,84,84,79,67,72,73,76,68,82,69,78,0,70,73,84,77,65,88,72,69,73,71,72,84,0,70,73,84,77,65,88,87,73,68,84,72,0,85,80,68,65,84,69,65,84,84,82,73,66,70,82,79,77,70,79,78,84,0,104,98,111,120,0,95,73,85,80,83,84,79,67,75,95,76,79,65,68,0,95,73,85,80,83,84,79,67,75,95,76,79,65,68,95,72,65,78,68,76,69,0,105,109,97,103,101,114,103,98,0,105,109,97,103,101,114,103,98,97,0,95,73,85,80,73,77,65,71,69,95,77,65,83,75,0,95,73,85,80,73,77,65,71,69,95,73,67,79,78,0,95,73,85,80,73,77,65,71,69,95,67,85,82,83,79,82,0,66,80,80,0,95,73,85,80,73,77,65,71,69,95,73,77,65,71,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,73,78,65,67,84,73,86,69,0,95,73,85,80,95,66,71,67,79,76,79,82,95,68,69,80,69,78,68,0,40,0,41,0,70,76,65,84,95,65,76,80,72,65,0,73,77,73,78,65,67,84,73,86,69,0,73,77,80,82,69,83,83,0,105,109,97,103,101,0,67,72,65,78,78,69,76,83,0,105,105,99,0,87,73,68,84,72,0,72,69,73,71,72,84,0,72,79,84,83,80,79,84,0,48,58,48,0,95,73,85,80,73,77,65,71,69,95,73,77,65,71,69,0,95,73,85,80,73,77,65,71,69,95,66,85,70,70,69,82,0,95,73,85,80,73,77,65,71,69,95,66,85,70,70,69,82,95,73,78,65,67,84,73,86,69,0,75,95,77,73,68,68,76,69,0,75,95,80,65,85,83,69,0,75,95,83,67,82,79,76,76,0,75,95,69,83,67,0,75,95,72,79,77,69,0,75,95,76,69,70,84,0,75,95,85,80,0,75,95,82,73,71,72,84,0,75,95,68,79,87,78,0,75,95,80,71,85,80,0,75,95,80,71,68,78,0,75,95,69,78,68,0,75,95,80,114,105,110,116,0,75,95,73,78,83,0,75,95,77,101,110,117,0,75,95,78,85,77,0,75,95,70,49,0,75,95,70,50,0,75,95,70,51,0,75,95,70,52,0,75,95,70,53,0,75,95,70,54,0,75,95,70,55,0,75,95,70,56,0,75,95,70,57,0,75,95,70,49,48,0,75,95,70,49,49,0,75,95,70,49,50,0,75,95,76,83,72,73,70,84,0,75,95,82,83,72,73,70,84,0,75,95,76,67,84,82,76,0,75,95,82,67,84,82,76,0,75,95,67,65,80,83,0,75,95,76,65,76,84,0,75,95,82,65,76,84,0,75,95,68,69,76,0,83,69,80,65,82,65,84,79,82,0,83,72,82,73,78,75,0,77,73,78,83,73,90,69,0,77,65,88,83,73,90,69,0,108,97,98,101,108,0,108,105,110,107,0,115,115,0,85,82,76,0,65,82,82,79,87,0,76,73,78,75,70,71,67,79,76,79,82,0,70,79,78,84,83,84,89,76,69,0,85,110,100,101,114,108,105,110,101,0,69,78,84,69,82,87,73,78,68,79,87,95,67,66,0,76,69,65,86,69,87,73,78,68,79,87,95,67,66,0,72,65,78,68,0,95,73,85,80,76,73,83,84,95,79,76,68,86,65,76,85,69,0,108,105,115,116,0,115,105,105,0,77,85,76,84,73,83,69,76,69,67,84,95,67,66,0,68,82,79,80,68,79,87,78,95,67,66,0,68,66,76,67,76,73,67,75,95,67,66,0,69,68,73,84,95,67,66,0,68,82,79,80,68,79,87,78,0,69,68,73,84,66,79,88,0,86,65,76,85,69,83,84,82,73,78,71,0,73,78,83,69,82,84,73,84,69,77,0,65,80,80,69,78,68,73,84,69,77,0,82,69,77,79,86,69,73,84,69,77,0,83,72,79,87,73,77,65,71,69,0,68,82,65,71,68,82,79,80,76,73,83,84,0,95,73,85,80,95,76,73,83,84,95,83,79,85,82,67,69,80,79,83,0,83,69,76,69,67,84,73,79,78,0,65,76,76,0,87,87,87,87,87,0,91,43,47,45,93,63,47,100,43,0,47,100,43,0,40,47,100,43,47,44,63,47,100,42,124,47,44,47,100,43,41,0,91,43,47,45,93,63,40,47,100,43,47,44,63,47,100,42,124,47,44,47,100,43,41,0,40,47,100,43,47,46,63,47,100,42,124,47,46,47,100,43,41,0,91,43,47,45,93,63,40,47,100,43,47,46,63,47,100,42,124,47,46,47,100,43,41,0,124,42,43,40,41,91,93,45,94,47,46,63,94,36,123,125,126,0,37,50,120,0,37,51,111,0,37,51,100,0,115,101,112,97,114,97,116,111,114,0,78,65,77,69,0,105,116,101,109,0,72,73,71,72,76,73,71,72,84,95,67,66,0,72,69,76,80,95,67,66,0,65,85,84,79,84,79,71,71,76,69,0,115,117,98,109,101,110,117,0,115,104,0,109,101,110,117,0,79,80,69,78,95,67,66,0,77,69,78,85,67,76,79,83,69,95,67,66,0,109,101,115,115,97,103,101,100,108,103,0,68,73,65,76,79,71,84,89,80,69,0,77,69,83,83,65,71,69,0,66,85,84,84,79,78,83,0,66,85,84,84,79,78,68,69,70,65,85,76,84,0,66,85,84,84,79,78,82,69,83,80,79,78,83,69,0,95,73,85,80,95,76,65,83,84,72,65,78,68,76,69,78,65,77,69,0,66,79,84,72,0,78,79,78,69,0,102,105,108,108,0,110,111,114,109,97,108,105,122,101,114,0,78,79,82,77,65,76,73,90,69,0,65,68,68,67,79,78,84,82,79,76,95,72,65,78,68,76,69,0,65,68,68,67,79,78,84,82,79,76,0,68,69,83,84,82,79,89,95,67,66,0,76,68,69,83,84,82,79,89,95,67,66,0,69,78,71,76,73,83,72,0,86,69,82,83,73,79,78,0,67,79,80,89,82,73,71,72,84,0,83,89,83,84,69,77,0,83,89,83,84,69,77,86,69,82,83,73,79,78,0,67,79,77,80,85,84,69,82,78,65,77,69,0,85,83,69,82,78,65,77,69,0,68,69,70,65,85,76,84,70,79,78,84,0,68,69,70,65,85,76,84,80,82,69,67,73,83,73,79,78,0,73,85,80,95,81,85,73,69,84,0,73,85,80,32,37,115,32,37,115,10,0,73,85,80,95,86,69,82,83,73,79,78,0,95,64,73,85,80,95,79,75,0,68,73,65,76,79,71,70,82,65,77,69,0,68,73,65,76,79,71,72,73,78,84,0,67,111,112,121,114,105,103,104,116,32,40,67,41,32,49,57,57,52,45,50,48,49,53,32,84,101,99,103,114,97,102,44,32,80,85,67,45,82,105,111,46,0,73,85,80,32,86,101,114,115,105,111,110,0,112,114,111,103,114,101,115,115,98,97,114,0,50,48,48,120,51,48,0,100,105,97,108,111,103,0,112,114,111,103,114,101,115,115,100,108,103,0,67,65,78,67,69,76,95,67,66,0,84,79,84,65,76,67,79,85,78,84,0,73,78,67,0,80,69,82,67,69,78,84,0,83,84,65,84,69,0,68,69,83,67,82,73,80,84,73,79,78,0,95,73,85,80,95,80,68,76,71,95,68,65,84,65,0,65,66,79,82,84,69,68,0,80,82,79,67,69,83,83,73,78,71,0,85,78,68,69,70,73,78,69,68,0,77,65,82,81,85,69,69,0,73,68,76,69,0,50,53,48,120,51,48,0,49,48,48,0,95,64,73,85,80,95,67,65,78,67,69,76,0,80,65,68,68,73,78,71,0,53,120,51,0,68,69,70,65,85,76,84,69,83,67,0,53,120,53,0,82,69,83,73,90,69,0,77,65,88,66,79,88,0,77,73,78,66,79,88,0,77,69,78,85,66,79,88,0,114,97,100,105,111,0,103,108,116,111,103,103,108,101,0,102,108,97,116,98,117,116,116,111,110,0,84,79,71,71,76,69,0,115,98,111,120,0,82,69,83,73,90,69,95,87,69,0,82,69,83,73,90,69,95,78,83,0,99,97,110,118,97,115,0,115,99,114,111,108,108,98,111,120,0,68,82,65,87,83,73,90,69,0,80,79,83,88,0,80,79,83,89,0,88,77,65,88,0,89,77,65,88,0,68,88,0,68,89,0,83,67,82,79,76,76,95,67,66,0,95,73,85,80,95,68,82,65,71,95,83,66,0,95,73,85,80,95,83,84,65,82,84,95,88,0,95,73,85,80,95,83,84,65,82,84,95,89,0,95,73,85,80,95,83,84,65,82,84,95,80,79,83,88,0,95,73,85,80,95,83,84,65,82,84,95,80,79,83,89,0,85,78,77,65,80,95,67,66,0,77,65,80,95,67,66,0,115,112,105,110,0,73,117,112,83,112,105,110,85,112,73,109,97,103,101,0,73,117,112,83,112,105,110,68,111,119,110,73,109,97,103,101,0,73,117,112,83,112,105,110,84,105,109,101,114,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,95,73,85,80,83,80,73,78,95,66,85,84,84,79,78,0,95,73,85,80,83,80,73,78,95,83,84,65,84,85,83,0,95,73,85,80,83,80,73,78,95,68,73,82,0,95,73,85,80,83,80,73,78,95,67,79,85,78,84,0,53,48,0,50,53,0,95,73,85,80,83,80,73,78,95,66,79,88,0,75,95,83,80,0,75,95,115,83,80,0,75,95,99,83,80,0,45,49,0,48,120,48,0,52,48,48,0,115,112,105,110,98,111,120,0,104,0,115,112,108,105,116,0,104,104,0,67,79,76,79,82,0,49,54,48,32,49,54,48,32,49,54,48,0,68,73,82,69,67,84,73,79,78,0,53,48,48,0,76,65,89,79,85,84,68,82,65,71,0,83,72,79,87,71,82,73,80,0,66,65,82,83,73,90,69,0,77,73,78,77,65,88,0,48,58,49,48,48,48,0,70,76,79,65,84,73,78,71,0,73,71,78,79,82,69,0,76,73,78,69,83,0,67,85,82,83,79,82,0,83,80,76,73,84,84,69,82,95,86,69,82,84,0,83,80,76,73,84,84,69,82,95,72,79,82,73,90,0,67,65,78,70,79,67,85,83,0,70,79,67,85,83,95,67,66,0,90,79,82,68,69,82,0,84,79,80,0,79,70,70,0,79,78,0,78,79,84,68,69,70,0,37,100,0,37,46,57,102,0,37,46,49,56,102,0,37,100,37,99,37,100,0,37,50,88,37,50,88,37,50,88,0,37,117,32,37,117,32,37,117,0,37,102,0,37,108,102,0,73,85,80,95,69,82,82,79,82,0,69,114,114,111,114,0,69,114,114,111,0,73,85,80,95,89,69,83,0,89,101,115,0,83,105,109,0,73,85,80,95,78,79,0,78,227,111,0,78,195,163,111,0,73,85,80,95,73,78,86,65,76,73,68,68,73,82,0,73,110,118,97,108,105,100,32,100,105,114,101,99,116,111,114,121,46,0,68,105,114,101,116,243,114,105,111,32,105,110,118,225,108,105,100,111,46,0,68,105,114,101,116,195,179,114,105,111,32,105,110,118,195,161,108,105,100,111,46,0,73,85,80,95,70,73,76,69,73,83,68,73,82,0,84,104,101,32,115,101,108,101,99,116,101,100,32,110,97,109,101,32,105,115,32,97,32,100,105,114,101,99,116,111,114,121,46,0,79,32,110,111,109,101,32,115,101,108,101,99,105,111,110,97,100,111,32,233,32,117,109,32,100,105,114,101,116,243,114,105,111,46,0,79,32,110,111,109,101,32,115,101,108,101,99,105,111,110,97,100,111,32,195,169,32,117,109,32,100,105,114,101,116,195,179,114,105,111,46,0,73,85,80,95,70,73,76,69,78,79,84,69,88,73,83,84,0,70,105,108,101,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,46,0,65,114,113,117,105,118,111,32,105,110,101,120,105,115,116,101,110,116,101,46,0,73,85,80,95,70,73,76,69,79,86,69,82,87,82,73,84,69,0,79,118,101,114,119,114,105,116,101,32,101,120,105,115,116,105,110,103,32,102,105,108,101,63,0,83,111,98,114,101,115,99,114,101,118,101,114,32,97,114,113,117,105,118,111,63,0,73,85,80,95,67,82,69,65,84,69,70,79,76,68,69,82,0,67,114,101,97,116,101,32,70,111,108,100,101,114,0,67,114,105,97,114,32,68,105,114,101,116,243,114,105,111,0,67,114,105,97,114,32,68,105,114,101,116,195,179,114,105,111,0,73,85,80,95,78,65,77,69,78,69,87,70,79,76,68,69,82,0,78,97,109,101,32,111,102,32,116,104,101,32,110,101,119,32,102,111,108,100,101,114,58,0,78,111,109,101,32,100,111,32,110,111,118,111,32,100,105,114,101,116,243,114,105,111,58,0,78,111,109,101,32,100,111,32,110,111,118,111,32,100,105,114,101,116,195,179,114,105,111,58,0,73,85,80,95,83,65,86,69,65,83,0,83,97,118,101,32,65,115,0,83,97,108,118,97,114,32,67,111,109,111,0,73,85,80,95,79,80,69,78,0,79,112,101,110,0,65,98,114,105,114,0,73,85,80,95,83,69,76,69,67,84,68,73,82,0,83,101,108,101,99,116,32,68,105,114,101,99,116,111,114,121,0,83,101,108,101,99,105,111,110,97,114,32,68,105,114,101,116,243,114,105,111,0,83,101,108,101,99,105,111,110,97,114,32,68,105,114,101,116,195,179,114,105,111,0,73,85,80,95,79,75,0,79,75,0,73,85,80,95,67,65,78,67,69,76,0,67,97,110,99,101,108,0,67,97,110,99,101,108,97,114,0,73,85,80,95,65,80,80,76,89,0,65,112,112,108,121,0,65,112,108,105,99,97,114,0,73,85,80,95,82,69,83,69,84,0,82,101,115,101,116,0,82,101,105,110,105,99,105,97,108,105,122,97,114,0,73,85,80,95,71,69,84,67,79,76,79,82,0,67,111,108,111,114,32,83,101,108,101,99,116,105,111,110,0,83,101,108,101,231,227,111,32,100,101,32,67,111,114,0,83,101,108,101,195,167,195,163,111,32,100,101,32,67,111,114,0,73,85,80,95,72,69,76,80,0,72,101,108,112,0,65,106,117,100,97,0,73,85,80,95,82,69,68,0,38,82,101,100,58,0,38,86,101,114,109,101,108,104,111,58,0,73,85,80,95,71,82,69,69,78,0,38,71,114,101,101,110,58,0,86,38,101,114,100,101,58,0,73,85,80,95,66,76,85,69,0,38,66,108,117,101,58,0,38,65,122,117,108,58,0,73,85,80,95,72,85,69,0,38,72,117,101,58,0,38,77,97,116,105,122,58,0,73,85,80,95,83,65,84,85,82,65,84,73,79,78,0,38,83,97,116,117,114,97,116,105,111,110,58,0,38,83,97,116,117,114,97,231,227,111,58,0,38,83,97,116,117,114,97,195,167,195,163,111,58,0,73,85,80,95,73,78,84,69,78,83,73,84,89,0,38,73,110,116,101,110,115,105,116,121,58,0,38,73,110,116,101,110,115,105,100,97,100,101,58,0,73,85,80,95,79,80,65,67,73,84,89,0,38,79,112,97,99,105,116,121,58,0,38,79,112,97,99,105,100,97,100,101,58,0,73,85,80,95,80,65,76,69,84,84,69,0,38,80,97,108,101,116,116,101,58,0,38,80,97,108,101,116,97,58,0,73,85,80,95,84,82,85,69,0,84,114,117,101,0,86,101,114,100,97,100,101,105,114,111,0,73,85,80,95,70,65,76,83,69,0,70,97,108,115,101,0,70,97,108,115,111,0,73,85,80,95,70,65,77,73,76,89,0,70,97,109,105,108,121,58,0,70,97,109,237,108,105,97,58,0,70,97,109,195,173,108,105,97,58,0,73,85,80,95,83,84,89,76,69,0,83,116,121,108,101,58,0,69,115,116,105,108,111,58,0,73,85,80,95,83,73,90,69,0,83,105,122,101,58,0,84,97,109,97,110,104,111,58,0,73,85,80,95,83,65,77,80,76,69,0,83,97,109,112,108,101,58,0,69,120,101,109,112,108,111,58,0,85,84,70,56,77,79,68,69,0,80,79,82,84,85,71,85,69,83,69,0,84,65,66,84,73,84,76,69,0,116,97,98,115,0,84,65,66,67,72,65,78,71,69,95,67,66,0,110,110,0,84,65,66,67,72,65,78,71,69,80,79,83,95,67,66,0,83,72,79,87,67,76,79,83,69,0,67,72,73,76,68,79,70,70,83,69,84,0,84,65,66,73,77,65,71,69,0,32,32,32,32,32,0,95,73,85,80,84,65,66,83,95,86,65,76,85,69,95,72,65,78,68,76,69,0,95,73,85,80,84,65,66,95,67,79,78,84,65,73,78,69,82,0,116,101,120,116,0,109,117,108,116,105,108,105,110,101,0,97,0,67,65,82,69,84,95,67,66,0,105,105,105,0,83,80,73,78,95,67,66,0,83,67,82,79,76,76,66,65,82,0,65,85,84,79,72,73,68,69,0,77,85,76,84,73,76,73,78,69,0,65,80,80,69,78,68,78,69,87,76,73,78,69,0,86,65,76,85,69,77,65,83,75,69,68,0,77,65,83,75,67,65,83,69,73,0,77,65,83,75,68,69,67,73,77,65,76,83,89,77,66,79,76,0,77,65,83,75,0,77,65,83,75,73,78,84,0,77,65,83,75,70,76,79,65,84,0,77,65,83,75,82,69,65,76,0,79,76,68,95,77,65,83,75,95,68,65,84,65,0,66,79,82,68,69,82,0,83,80,73,78,0,83,80,73,78,65,76,73,71,78,0,82,73,71,72,84,0,83,80,73,78,65,85,84,79,0,83,80,73,78,87,82,65,80,0,86,73,83,73,66,76,69,67,79,76,85,77,78,83,0,86,73,83,73,66,76,69,76,73,78,69,83,0,87,79,82,68,87,82,65,80,0,85,78,83,73,71,78,69,68,0,95,73,85,80,95,77,85,76,84,73,76,73,78,69,95,84,69,88,84,0,87,87,87,87,87,87,87,87,87,87,0,116,105,109,101,114,0,65,67,84,73,79,78,95,67,66,0,87,73,68,0,82,85,78,0,84,73,77,69,0,116,111,103,103,108,101,0,115,97,0,82,65,68,73,79,0,70,76,65,84,0,78,111,0,73,77,71,76,69,65,70,0,73,77,71,67,79,76,76,65,80,83,69,68,0,73,77,71,69,88,80,65,78,68,69,68,0,76,65,83,84,65,68,68,78,79,68,69,0,116,114,101,101,0,84,79,71,71,76,69,86,65,76,85,69,95,67,66,0,105,105,0,83,69,76,69,67,84,73,79,78,95,67,66,0,77,85,76,84,73,83,69,76,69,67,84,73,79,78,95,67,66,0,73,105,0,77,85,76,84,73,85,78,83,69,76,69,67,84,73,79,78,95,67,66,0,66,82,65,78,67,72,79,80,69,78,95,67,66,0,105,0,66,82,65,78,67,72,67,76,79,83,69,95,67,66,0,69,88,69,67,85,84,69,76,69,65,70,95,67,66,0,83,72,79,87,82,69,78,65,77,69,95,67,66,0,82,69,78,65,77,69,95,67,66,0,105,115,0,68,82,65,71,68,82,79,80,95,67,66,0,105,105,105,105,0,82,73,71,72,84,67,76,73,67,75,95,67,66,0,77,79,84,73,79,78,95,67,66,0,105,105,115,0,105,105,105,105,115,0,68,82,65,71,68,82,79,80,84,82,69,69,0,83,72,79,87,68,82,65,71,68,82,79,80,0,83,72,79,87,82,69,78,65,77,69,0,83,72,79,87,84,79,71,71,76,69,0,65,68,68,69,88,80,65,78,68,69,68,0,67,79,85,78,84,0,65,68,68,82,79,79,84,0,68,82,79,80,69,81,85,65,76,68,82,65,71,0,67,84,82,76,0,83,72,73,70,84,0,77,65,82,75,77,79,68,69,0,83,73,78,71,76,69,0,65,68,68,76,69,65,70,0,65,68,68,66,82,65,78,67,72,0,73,78,83,69,82,84,76,69,65,70,0,73,78,83,69,82,84,66,82,65,78,67,72,0,84,79,84,65,76,67,72,73,76,68,67,79,85,78,84,0,85,83,69,82,68,65,84,65,0,73,77,71,66,76,65,78,75,0,73,77,71,80,65,80,69,82,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,5,5,0,0,0,0,0,0,0,0,0,0,4,5,5,1,6,1,5,0,0,0,0,0,0,0,0,3,4,4,5,5,1,6,1,5,0,0,0,0,0,0,0,3,4,4,4,5,5,1,1,5,0,0,0,0,0,0,0,2,3,4,4,4,5,5,5,4,0,0,0,0,0,0,0,2,3,3,4,4,4,5,4,4,0,0,0,0,0,0,0,0,2,3,3,4,4,4,4,0,0,0,0,0,0,0,0,0,0,2,2,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,2,6,5,5,7,2,3,0,0,0,0,0,0,0,0,2,4,4,4,4,4,4,2,2,2,2,2,2,0,0,0,2,5,5,5,5,5,5,5,5,5,5,7,4,3,0,0,2,5,7,7,7,7,7,7,7,7,7,1,4,3,0,0,2,5,7,7,7,7,7,7,1,7,1,7,4,3,0,0,2,5,7,7,7,7,7,7,7,1,7,1,4,3,0,0,2,5,7,7,7,7,1,7,1,7,1,7,4,3,0,0,2,5,7,7,7,7,7,1,7,1,7,1,4,3,0,0,2,5,7,7,7,7,1,7,1,7,1,1,4,3,0,0,2,5,1,7,1,1,7,1,7,1,1,1,4,3,0,0,2,4,4,4,4,4,4,4,4,4,4,4,4,3,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,2,0,0,0,0,0,0,0,0,0,2,1,3,3,3,3,1,2,2,2,2,2,2,0,0,0,2,1,3,3,3,3,3,3,1,1,1,1,6,4,0,0,2,1,3,3,3,3,3,3,3,3,3,3,6,4,0,2,2,2,2,2,2,2,2,2,2,2,6,3,6,4,0,2,1,3,3,3,3,3,5,3,5,6,4,6,6,4,0,2,1,3,3,3,3,3,3,5,3,6,4,6,6,4,0,0,2,0,3,3,3,3,5,3,5,5,2,4,2,4,0,0,2,0,3,3,5,5,3,5,5,5,6,4,2,4,0,0,0,2,0,5,3,3,5,5,5,5,6,2,4,4,0,0,0,2,2,2,2,2,2,2,2,2,2,2,4,4,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,3,4,3,4,3,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,5,4,0,0,0,0,0,4,1,1,1,1,1,1,1,1,5,1,4,0,0,0,0,3,1,1,1,1,1,1,1,1,2,2,2,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,5,5,5,5,5,5,5,5,5,5,5,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,3,4,3,4,3,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,5,4,0,0,0,0,0,4,1,1,1,1,1,1,1,1,5,1,4,0,0,0,0,3,1,4,3,4,3,4,3,4,2,2,2,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,3,4,3,4,3,4,3,4,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,4,3,4,3,4,3,4,3,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,3,4,3,4,3,4,3,4,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,1,4,3,4,3,4,3,4,3,1,5,2,0,0,0,4,1,1,1,1,1,1,1,1,1,1,5,2,0,0,0,3,5,5,5,5,5,5,5,5,5,5,5,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,49,57,50,32,49,57,50,32,49,57,50,0,50,0,53,54,32,53,54,32,53,54,0,51,0,57,57,32,57,57,32,57,57,0,52,0,49,50,56,32,49,50,56,32,49,50,56,0,53,0,49,54,49,32,49,54,49,32,49,54,49,0,54,0,50,50,50,32,50,50,50,32,50,50,50,0,50,53,53,32,50,48,54,32,49,53,54,0,49,53,54,32,49,53,54,32,48,0,48,32,48,32,48,0,50,48,54,32,50,48,54,32,57,57,0,50,53,53,32,50,53,53,32,50,48,54,0,50,52,55,32,50,52,55,32,50,52,55,0,55,0,50,53,53,32,50,53,53,32,49,53,54,0,50,53,53,32,50,53,53,32,50,53,53,0,48,48,48,32,48,48,48,32,48,48,48,0,49,49,57,32,49,49,57,32,49,49,57,0,49,51,54,32,49,51,54,32,49,51,54,0,49,56,55,32,49,56,55,32,49,56,55,0,77,85,76,84,73,80,76,69,0,51,83,84,65,84,69,0,68,82,65,71,66,69,71,73,78,95,67,66,0,68,82,65,71,68,65,84,65,83,73,90,69,95,67,66,0,68,82,65,71,68,65,84,65,95,67,66,0,68,82,65,71,69,78,68,95,67,66,0,68,82,79,80,68,65,84,65,95,67,66,0,95,73,85,80,95,84,82,69,69,95,83,79,85,82,67,69,80,79,83,0,68,82,65,71,83,79,85,82,67,69,77,79,86,69,0,68,69,76,78,79,68,69,48,0,77,65,82,75,69,68,0,52,48,48,120,50,48,48,0,117,115,101,114,0,67,76,69,65,82,65,84,84,82,73,66,85,84,69,83,0,118,97,108,0,115,0,86,65,76,85,69,67,72,65,78,71,69,68,95,67,66,0,77,65,88,0,49,0,77,73,78,0,48,0,84,89,80,69,0,72,79,82,73,90,79,78,84,65,76,0,79,82,73,69,78,84,65,84,73,79,78,0,73,78,86,69,82,84,69,68,0,86,69,82,84,73,67,65,76,0,37,100,120,37,100,0,118,98,111,120,0,83,73,90,69,0,82,65,83,84,69,82,83,73,90,69,0,69,88,80,65,78,68,87,69,73,71,72,84,0,122,98,111,120,0,78,79,82,84,72,0,83,79,85,84,72,0,87,69,83,84,0,69,65,83,84,0,78,69,0,83,69,0,78,87,0,83,87,0,103,0,69,88,80,65,78,68,0,67,76,73,69,78,84,83,73,90,69,0,67,76,73,69,78,84,79,70,70,83,69,84,0,86,65,76,85,69,0,86,65,76,85,69,80,79,83,0,86,65,76,85,69,95,72,65,78,68,76,69,0,86,73,83,73,66,76,69,0,78,79,0,65,84,79,80,0,65,66,79,84,84,79,77,0,65,76,69,70,84,0,65,82,73,71,72,84,0,73,77,65,71,69,0,99,108,105,112,98,111,97,114,100,0,69,88,84,70,73,76,84,69,82,0,70,73,76,84,69,82,73,78,70,79,0,70,73,76,84,69,82,85,83,69,68,0,77,85,76,84,73,80,76,69,70,73,76,69,83,0,76,65,78,71,85,65,71,69,0,67,85,82,83,79,82,80,79,83,0,85,84,70,56,65,85,84,79,67,79,78,86,69,82,84,0,75,69,89,80,82,69,83,83,0,75,69,89,82,69,76,69,65,83,69,0,75,69,89,0,66,71,67,79,76,79,82,0,114,101,100,0,68,82,79,80,70,73,76,69,83,95,67,66,0,68,82,79,80,70,73,76,69,83,84,65,82,71,69,84,0,68,76,71,66,71,67,79,76,79,82,0,68,76,71,70,71,67,79,76,79,82,0,84,88,84,66,71,67,79,76,79,82,0,84,88,84,70,71,67,79,76,79,82,0,77,69,78,85,66,71,67,79,76,79,82,0,77,69,78,85,70,71,67,79,76,79,82,0,68,82,73,86,69,82,0,69,109,115,99,114,105,112,116,101,110,0,95,73,85,80,95,82,69,83,69,84,95,71,76,79,66,65,76,67,79,76,79,82,83,0,89,69,83,0,79,110,66,117,116,116,111,110,67,97,108,108,98,97,99,107,40,41,10,0,73,117,112,32,66,117,116,116,111,110,32,37,100,0,65,67,84,73,79,78,0,73,117,112,32,65,99,116,105,118,105,116,121,32,84,105,116,108,101,32,37,100,0,84,73,84,76,69,0,67,66,32,84,101,115,116,0,66,85,84,84,79,78,95,67,66,0,73,117,112,32,65,99,116,105,118,105,116,121,32,84,105,116,108,101,0,73,117,112,32,66,117,116,116,111,110,0,67,97,108,108,98,97,99,107,0,84,101,115,116,76,97,98,101,108,0,84,101,115,116,76,97,98,101,108,45,45,45,50,0,84,101,115,116,76,97,98,101,108,45,45,45,45,51,0,70,71,67,79,76,79,82,0,50,48,32,50,48,48,32,49,49,49,0,49,48,48,32,50,53,53,32,49,48,48,0,55,48,32,55,48,32,48,0,79,86,69,82,87,82,73,84,69,0,71,65,80,0,49,48,0,77,65,82,71,73,78,0,49,48,120,49,48,0,65,76,73,71,78,77,69,78,84,0,65,67,69,78,84,69,82,0,69,78,84,82,89,95,80,79,73,78,84,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,105,110,102,105,110,105,116,121,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,46,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  var Label={};function _emjsLabel_SetBGColor(obj, val) {
      // console.log("bgcolor first arg: " + obj);
      // console.log("bgcolor sec arg: " + val);
    }

   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  
  var IupCommon={GetObjectForID:function (handle_id) {
  			return IupCommonGlobals.objectIDMap[handle_id];
  		},SetObjectForID:function (the_object, handle_id) {
  			IupCommonGlobals.objectIDMap[handle_id] = the_object;
  		},RegisterNewObject:function (the_object) {
  			var current_id = IupCommonGlobals.idCounter;
  			IupCommonGlobals.objectIDMap[current_id] = the_object;
  			the_object.handleID = current_id;
  			IupCommonGlobals.idCounter += 1;
  			return current_id;
  		},DeleteObject:function (handle_id) {
  			var the_object = IupCommonGlobals.objectIDMap[handle_id] = null;
  			the_object.handleID = null;
  			IupCommonGlobals.objectIDMap[handle_id] = null;
  			the_object = null;
  		}};var IupCommonGlobals={idCounter:1,objectIDMap:{}};function _emjsCommon_AddWidgetToDialog(parent_id, child_id) {
  		var parent_dialog = IupCommon.GetObjectForID(parent_id);
  		var parent_body = parent_dialog.document.getElementsByTagName("body")[0];
  		var child_widget = IupCommon.GetObjectForID(child_id);
  		parent_body.appendChild(child_widget);
  	}

   
  Module["_memset"] = _memset;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

   
  Module["_i64Add"] = _i64Add;

  function _clock() {
      if (_clock.start === undefined) _clock.start = Date.now();
      return ((Date.now() - _clock.start) * (1000000 / 1000))|0;
    }

  
  var Button={};function _emjsButton_CreateButton() {
      var widget_object;
      widget_object = document.createElement("button");
      var handle_id = IupCommon.RegisterNewObject(widget_object);
      return handle_id;
    }

  
  function _realloc() { throw 'bad' }
  Module["_realloc"] = _realloc; 
  Module["_saveSetjmp"] = _saveSetjmp;

  function _emjsCommon_SetFgColor(handle_id, r, g, b)
    {
      var current_widget = IupCommon.GetObjectForID(handle_id);
      console.log(current_widget);
      current_widget.style.color = "rgb(" + r + "," + g + "," + b + ")";
    }

  function _emjsButton_DestroyButton(handle_id) {
      // Do I need to removeEventListener?
      IupCommon.DeleteObject(handle_id);
    }

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function _emjsCommon_AddWidgetToWidget(parent_id, child_id) {
  		var parent_widget = IupCommon.GetObjectForID(parent_id);
  		var child_widget = IupCommon.GetObjectForID(child_id);
  
  		parent_widget.appendChild(child_widget);
  	}

  
   
  Module["_testSetjmp"] = _testSetjmp;function _longjmp(env, value) {
      asm['setThrew'](env, value || 1);
      throw 'longjmp';
    }

  
  var Dialog={hasCreatedFirstDialog:false};function _emjsDialog_DestroyDialog(handle_id) {
  
  		var dialog = IupCommon.GetObjectForID(handle_id);
  		if(dialog)
  		{
  
  			dialog.close();
  			IupCommon.DeleteObjectWithID(handle_id);
  		}
  	}

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _emjsLabel_CreateLabel() {
      var widget_object;
      widget_object = document.createElement("div");
      var handle_id = IupCommon.RegisterNewObject(widget_object);
      widget_object.id = 'label_' + handle_id;
      return handle_id;
    }

  
  
  
  
  var _environ=STATICTOP; STATICTOP += 16;;var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _emjsButton_SetTitle(handle_id, button_title) {
      var widget_object = IupCommon.GetObjectForID(handle_id);
      if(widget_object)
      {
        widget_object.innerHTML = Pointer_stringify(button_title);
      }
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___udivdi3"] = ___udivdi3;

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    } 
  Module["_sbrk"] = _sbrk;


  function _emjsButton_SetCallback(handle_id, ih_pointer) {
  
      var button = IupCommon.GetObjectForID(handle_id);
      //button.ihPointer = ih_pointer;
      if(button)
      {
        // ACTION corresponds to onlick in javascript
        button.addEventListener("click", function() { 
          var c_callback = Module.cwrap('emscriptenButtonCallbackTrampoline', null, ['number']);
          c_callback(handle_id);
          console.log('click happening');
        });
  
        // for BUTTON_CB, need on mousedown and onmouseup
        button.addEventListener("mousedown", function(e) {
          var clicktype = e.button;
          var xCoord = e.clientX;
          var yCoord = e.clientY;
          var c_callback = Module.cwrap('emscriptenButtonCallbackTrampoline_Cb', null, ['number', 'number', 'number', 'number', 'number', 'string']);
          var pressed = 1;
          console.log(handle_id);
          c_callback(handle_id, clicktype, pressed, xCoord, yCoord, "");
          console.log('bdown happening');
        });
  
        button.addEventListener("mouseup", function(e) {
          var clicktype = e.button;
          var xCoord = e.clientX;
          var yCoord = e.clientY;
          var c_callback = Module.cwrap('emscriptenButtonCallbackTrampoline_Cb', null, ['number', 'number', 'number', 'number', 'number', 'string']);
          var pressed = 0;
          c_callback(handle_id, clicktype, pressed, xCoord, yCoord, "");
          console.log('bup happening');
        });
      }
  
    }

  function _emjsLabel_SetTitle(handle_id, label_title) {
      console.log("label title " + label_title);
      var widget_object = IupCommon.GetObjectForID(handle_id);
      if(widget_object)
      {
        widget_object.innerHTML = Pointer_stringify(label_title);
      }
    }

   
  Module["___uremdi3"] = ___uremdi3;

  function _emjsDialog_CreateDialog(window_name, width, height) {
  
  		var dialog;
  
  		if(Dialog.hasCreatedFirstDialog)
  		{
  			var new_window_name = null;
  			if(window_name)
  			{
  				new_window_name = Pointer_stringify(window_name);
  			}
  			if(0 === width)
  			{
  				width = window.self.width;
  			}
  			if(0 === height)
  			{
  				height = window.self.height;
  			}
  
  			var attrib_str = "width=" + width + ",height=" + height;
  			dialog = window.open("", new_window_name, attrib_str);
  		}
  		else
  		{
  			//dialog = document.getElementsByTagName("body")[0];
  			dialog = window.self;
  			Dialog.hasCreatedFirstDialog = true;
  
  			if(window_name)
  			{
  				dialog.document.title = Pointer_stringify(window_name);
  			}
  
  
  		}
  
  		current_id = IupCommon.RegisterNewObject(dialog);
  
  		return current_id;
  
  	}

   
  Module["_pthread_self"] = _pthread_self;

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }
___buildEnvironment(ENV);;
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");



function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiidd(x) { Module["printErr"]("Invalid function pointer called with signature 'iiidd'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiidd(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiidd"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_iiii": nullFunc_iiii, "nullFunc_i": nullFunc_i, "nullFunc_vi": nullFunc_vi, "nullFunc_iiidd": nullFunc_iiidd, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_ii": nullFunc_ii, "nullFunc_viii": nullFunc_viii, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_viiiiii": nullFunc_viiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiii": invoke_iiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_iiidd": invoke_iiidd, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_emjsDialog_DestroyDialog": _emjsDialog_DestroyDialog, "_emjsLabel_SetTitle": _emjsLabel_SetTitle, "_emjsButton_SetTitle": _emjsButton_SetTitle, "___syscall6": ___syscall6, "___setErrNo": ___setErrNo, "_emjsLabel_CreateLabel": _emjsLabel_CreateLabel, "___assert_fail": ___assert_fail, "___buildEnvironment": ___buildEnvironment, "_longjmp": _longjmp, "_emjsCommon_AddWidgetToWidget": _emjsCommon_AddWidgetToWidget, "_emjsCommon_SetFgColor": _emjsCommon_SetFgColor, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_clock": _clock, "_getenv": _getenv, "___syscall54": ___syscall54, "_emjsButton_SetCallback": _emjsButton_SetCallback, "_emjsLabel_SetBGColor": _emjsLabel_SetBGColor, "_emjsButton_CreateButton": _emjsButton_CreateButton, "_emjsButton_DestroyButton": _emjsButton_DestroyButton, "_abort": _abort, "_pthread_cleanup_push": _pthread_cleanup_push, "_emjsDialog_CreateDialog": _emjsDialog_CreateDialog, "___syscall140": ___syscall140, "_emjsCommon_AddWidgetToDialog": _emjsCommon_AddWidgetToDialog, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_iiidd=env.nullFunc_iiidd;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_viiiiii=env.nullFunc_viiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_iiidd=env.invoke_iiidd;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _emjsDialog_DestroyDialog=env._emjsDialog_DestroyDialog;
  var _emjsLabel_SetTitle=env._emjsLabel_SetTitle;
  var _emjsButton_SetTitle=env._emjsButton_SetTitle;
  var ___syscall6=env.___syscall6;
  var ___setErrNo=env.___setErrNo;
  var _emjsLabel_CreateLabel=env._emjsLabel_CreateLabel;
  var ___assert_fail=env.___assert_fail;
  var ___buildEnvironment=env.___buildEnvironment;
  var _longjmp=env._longjmp;
  var _emjsCommon_AddWidgetToWidget=env._emjsCommon_AddWidgetToWidget;
  var _emjsCommon_SetFgColor=env._emjsCommon_SetFgColor;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _clock=env._clock;
  var _getenv=env._getenv;
  var ___syscall54=env.___syscall54;
  var _emjsButton_SetCallback=env._emjsButton_SetCallback;
  var _emjsLabel_SetBGColor=env._emjsLabel_SetBGColor;
  var _emjsButton_CreateButton=env._emjsButton_CreateButton;
  var _emjsButton_DestroyButton=env._emjsButton_DestroyButton;
  var _abort=env._abort;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _emjsDialog_CreateDialog=env._emjsDialog_CreateDialog;
  var ___syscall140=env.___syscall140;
  var _emjsCommon_AddWidgetToDialog=env._emjsCommon_AddWidgetToDialog;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _IupVersion() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1704|0); //@line 79 "../../iup.c"
}
function _IupVersionDate() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1709|0); //@line 87 "../../iup.c"
}
function _iupArrayCreate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = (_malloc(20)|0); //@line 27 "../../iup_array.c"
 $5 = $6; //@line 27 "../../iup_array.c"
 $7 = $5; //@line 28 "../../iup_array.c"
 $8 = ((($7)) + 4|0); //@line 28 "../../iup_array.c"
 HEAP32[$8>>2] = 0; //@line 28 "../../iup_array.c"
 $9 = $4; //@line 29 "../../iup_array.c"
 $10 = $5; //@line 29 "../../iup_array.c"
 $11 = ((($10)) + 12|0); //@line 29 "../../iup_array.c"
 HEAP32[$11>>2] = $9; //@line 29 "../../iup_array.c"
 $12 = $3; //@line 30 "../../iup_array.c"
 $13 = $5; //@line 30 "../../iup_array.c"
 $14 = ((($13)) + 8|0); //@line 30 "../../iup_array.c"
 HEAP32[$14>>2] = $12; //@line 30 "../../iup_array.c"
 $15 = $3; //@line 31 "../../iup_array.c"
 $16 = $5; //@line 31 "../../iup_array.c"
 $17 = ((($16)) + 16|0); //@line 31 "../../iup_array.c"
 HEAP32[$17>>2] = $15; //@line 31 "../../iup_array.c"
 $18 = $4; //@line 32 "../../iup_array.c"
 $19 = $3; //@line 32 "../../iup_array.c"
 $20 = Math_imul($18, $19)|0; //@line 32 "../../iup_array.c"
 $21 = (_malloc($20)|0); //@line 32 "../../iup_array.c"
 $22 = $5; //@line 32 "../../iup_array.c"
 HEAP32[$22>>2] = $21; //@line 32 "../../iup_array.c"
 $23 = $5; //@line 34 "../../iup_array.c"
 $24 = HEAP32[$23>>2]|0; //@line 34 "../../iup_array.c"
 $25 = ($24|0)!=(0|0); //@line 34 "../../iup_array.c"
 $26 = $5; //@line 39 "../../iup_array.c"
 if ($25) {
  $27 = HEAP32[$26>>2]|0; //@line 39 "../../iup_array.c"
  $28 = $4; //@line 39 "../../iup_array.c"
  $29 = $3; //@line 39 "../../iup_array.c"
  $30 = Math_imul($28, $29)|0; //@line 39 "../../iup_array.c"
  _memset(($27|0),0,($30|0))|0; //@line 39 "../../iup_array.c"
  $31 = $5; //@line 40 "../../iup_array.c"
  $2 = $31; //@line 40 "../../iup_array.c"
  $32 = $2; //@line 41 "../../iup_array.c"
  STACKTOP = sp;return ($32|0); //@line 41 "../../iup_array.c"
 } else {
  _free($26); //@line 36 "../../iup_array.c"
  $2 = 0; //@line 37 "../../iup_array.c"
  $32 = $2; //@line 41 "../../iup_array.c"
  STACKTOP = sp;return ($32|0); //@line 41 "../../iup_array.c"
 }
 return (0)|0;
}
function _iupArrayDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 46 "../../iup_array.c"
 $3 = ($2|0)!=(0|0); //@line 46 "../../iup_array.c"
 if (!($3)) {
  STACKTOP = sp;return; //@line 54 "../../iup_array.c"
 }
 $4 = $1; //@line 48 "../../iup_array.c"
 $5 = HEAP32[$4>>2]|0; //@line 48 "../../iup_array.c"
 $6 = ($5|0)!=(0|0); //@line 48 "../../iup_array.c"
 if ($6) {
  $7 = $1; //@line 50 "../../iup_array.c"
  $8 = HEAP32[$7>>2]|0; //@line 50 "../../iup_array.c"
  $9 = $1; //@line 50 "../../iup_array.c"
  $10 = ((($9)) + 12|0); //@line 50 "../../iup_array.c"
  $11 = HEAP32[$10>>2]|0; //@line 50 "../../iup_array.c"
  $12 = $1; //@line 50 "../../iup_array.c"
  $13 = ((($12)) + 8|0); //@line 50 "../../iup_array.c"
  $14 = HEAP32[$13>>2]|0; //@line 50 "../../iup_array.c"
  $15 = Math_imul($11, $14)|0; //@line 50 "../../iup_array.c"
  _memset(($8|0),0,($15|0))|0; //@line 50 "../../iup_array.c"
  $16 = $1; //@line 51 "../../iup_array.c"
  $17 = HEAP32[$16>>2]|0; //@line 51 "../../iup_array.c"
  _free($17); //@line 51 "../../iup_array.c"
 }
 $18 = $1; //@line 53 "../../iup_array.c"
 _free($18); //@line 53 "../../iup_array.c"
 STACKTOP = sp;return; //@line 54 "../../iup_array.c"
}
function _iupArrayGetData($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 59 "../../iup_array.c"
 $4 = ($3|0)!=(0|0); //@line 59 "../../iup_array.c"
 if ($4) {
  $5 = $2; //@line 61 "../../iup_array.c"
  $6 = HEAP32[$5>>2]|0; //@line 61 "../../iup_array.c"
  $1 = $6; //@line 61 "../../iup_array.c"
 } else {
  $1 = 0; //@line 60 "../../iup_array.c"
 }
 $7 = $1; //@line 62 "../../iup_array.c"
 STACKTOP = sp;return ($7|0); //@line 62 "../../iup_array.c"
}
function _iupArrayInc($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 67 "../../iup_array.c"
 $5 = ($4|0)!=(0|0); //@line 67 "../../iup_array.c"
 if (!($5)) {
  $1 = 0; //@line 68 "../../iup_array.c"
  $60 = $1; //@line 81 "../../iup_array.c"
  STACKTOP = sp;return ($60|0); //@line 81 "../../iup_array.c"
 }
 $6 = $2; //@line 69 "../../iup_array.c"
 $7 = ((($6)) + 4|0); //@line 69 "../../iup_array.c"
 $8 = HEAP32[$7>>2]|0; //@line 69 "../../iup_array.c"
 $9 = $2; //@line 69 "../../iup_array.c"
 $10 = ((($9)) + 8|0); //@line 69 "../../iup_array.c"
 $11 = HEAP32[$10>>2]|0; //@line 69 "../../iup_array.c"
 $12 = ($8|0)>=($11|0); //@line 69 "../../iup_array.c"
 do {
  if ($12) {
   $13 = $2; //@line 71 "../../iup_array.c"
   $14 = ((($13)) + 8|0); //@line 71 "../../iup_array.c"
   $15 = HEAP32[$14>>2]|0; //@line 71 "../../iup_array.c"
   $3 = $15; //@line 71 "../../iup_array.c"
   $16 = $2; //@line 72 "../../iup_array.c"
   $17 = ((($16)) + 16|0); //@line 72 "../../iup_array.c"
   $18 = HEAP32[$17>>2]|0; //@line 72 "../../iup_array.c"
   $19 = $2; //@line 72 "../../iup_array.c"
   $20 = ((($19)) + 8|0); //@line 72 "../../iup_array.c"
   $21 = HEAP32[$20>>2]|0; //@line 72 "../../iup_array.c"
   $22 = (($21) + ($18))|0; //@line 72 "../../iup_array.c"
   HEAP32[$20>>2] = $22; //@line 72 "../../iup_array.c"
   $23 = $2; //@line 73 "../../iup_array.c"
   $24 = HEAP32[$23>>2]|0; //@line 73 "../../iup_array.c"
   $25 = $2; //@line 73 "../../iup_array.c"
   $26 = ((($25)) + 12|0); //@line 73 "../../iup_array.c"
   $27 = HEAP32[$26>>2]|0; //@line 73 "../../iup_array.c"
   $28 = $2; //@line 73 "../../iup_array.c"
   $29 = ((($28)) + 8|0); //@line 73 "../../iup_array.c"
   $30 = HEAP32[$29>>2]|0; //@line 73 "../../iup_array.c"
   $31 = Math_imul($27, $30)|0; //@line 73 "../../iup_array.c"
   $32 = (_realloc($24,$31)|0); //@line 73 "../../iup_array.c"
   $33 = $2; //@line 73 "../../iup_array.c"
   HEAP32[$33>>2] = $32; //@line 73 "../../iup_array.c"
   $34 = $2; //@line 75 "../../iup_array.c"
   $35 = HEAP32[$34>>2]|0; //@line 75 "../../iup_array.c"
   $36 = ($35|0)!=(0|0); //@line 75 "../../iup_array.c"
   if ($36) {
    $37 = $2; //@line 77 "../../iup_array.c"
    $38 = HEAP32[$37>>2]|0; //@line 77 "../../iup_array.c"
    $39 = $2; //@line 77 "../../iup_array.c"
    $40 = ((($39)) + 12|0); //@line 77 "../../iup_array.c"
    $41 = HEAP32[$40>>2]|0; //@line 77 "../../iup_array.c"
    $42 = $3; //@line 77 "../../iup_array.c"
    $43 = Math_imul($41, $42)|0; //@line 77 "../../iup_array.c"
    $44 = (($38) + ($43)|0); //@line 77 "../../iup_array.c"
    $45 = $2; //@line 77 "../../iup_array.c"
    $46 = ((($45)) + 12|0); //@line 77 "../../iup_array.c"
    $47 = HEAP32[$46>>2]|0; //@line 77 "../../iup_array.c"
    $48 = $2; //@line 77 "../../iup_array.c"
    $49 = ((($48)) + 8|0); //@line 77 "../../iup_array.c"
    $50 = HEAP32[$49>>2]|0; //@line 77 "../../iup_array.c"
    $51 = $3; //@line 77 "../../iup_array.c"
    $52 = (($50) - ($51))|0; //@line 77 "../../iup_array.c"
    $53 = Math_imul($47, $52)|0; //@line 77 "../../iup_array.c"
    _memset(($44|0),0,($53|0))|0; //@line 77 "../../iup_array.c"
    break;
   }
   $1 = 0; //@line 76 "../../iup_array.c"
   $60 = $1; //@line 81 "../../iup_array.c"
   STACKTOP = sp;return ($60|0); //@line 81 "../../iup_array.c"
  }
 } while(0);
 $54 = $2; //@line 79 "../../iup_array.c"
 $55 = ((($54)) + 4|0); //@line 79 "../../iup_array.c"
 $56 = HEAP32[$55>>2]|0; //@line 79 "../../iup_array.c"
 $57 = (($56) + 1)|0; //@line 79 "../../iup_array.c"
 HEAP32[$55>>2] = $57; //@line 79 "../../iup_array.c"
 $58 = $2; //@line 80 "../../iup_array.c"
 $59 = HEAP32[$58>>2]|0; //@line 80 "../../iup_array.c"
 $1 = $59; //@line 80 "../../iup_array.c"
 $60 = $1; //@line 81 "../../iup_array.c"
 STACKTOP = sp;return ($60|0); //@line 81 "../../iup_array.c"
}
function _iupArrayCount($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 138 "../../iup_array.c"
 $4 = ($3|0)!=(0|0); //@line 138 "../../iup_array.c"
 if ($4) {
  $5 = $2; //@line 140 "../../iup_array.c"
  $6 = ((($5)) + 4|0); //@line 140 "../../iup_array.c"
  $7 = HEAP32[$6>>2]|0; //@line 140 "../../iup_array.c"
  $1 = $7; //@line 140 "../../iup_array.c"
 } else {
  $1 = 0; //@line 139 "../../iup_array.c"
 }
 $8 = $1; //@line 141 "../../iup_array.c"
 STACKTOP = sp;return ($8|0); //@line 141 "../../iup_array.c"
}
function _iupAttribUpdateFromParent($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $1 = $0;
 $7 = $1; //@line 111 "../../iup_attrib.c"
 $8 = ((($7)) + 4|0); //@line 111 "../../iup_attrib.c"
 $9 = HEAP32[$8>>2]|0; //@line 111 "../../iup_attrib.c"
 $2 = $9; //@line 111 "../../iup_attrib.c"
 $10 = $2; //@line 112 "../../iup_attrib.c"
 $11 = ((($10)) + 28|0); //@line 112 "../../iup_attrib.c"
 $12 = HEAP32[$11>>2]|0; //@line 112 "../../iup_attrib.c"
 $13 = (_iupTableFirst($12)|0); //@line 112 "../../iup_attrib.c"
 $3 = $13; //@line 112 "../../iup_attrib.c"
 while(1) {
  $14 = $3; //@line 113 "../../iup_attrib.c"
  $15 = ($14|0)!=(0|0); //@line 113 "../../iup_attrib.c"
  if (!($15)) {
   break;
  }
  $16 = $2; //@line 116 "../../iup_attrib.c"
  $17 = (_iupClassObjectCurAttribIsInherit($16)|0); //@line 116 "../../iup_attrib.c"
  $18 = ($17|0)!=(0); //@line 116 "../../iup_attrib.c"
  L4: do {
   if ($18) {
    $19 = $1; //@line 116 "../../iup_attrib.c"
    $20 = $3; //@line 116 "../../iup_attrib.c"
    $21 = (_iupAttribGet($19,$20)|0); //@line 116 "../../iup_attrib.c"
    $22 = ($21|0)!=(0|0); //@line 116 "../../iup_attrib.c"
    if (!($22)) {
     $23 = $1; //@line 119 "../../iup_attrib.c"
     $24 = ((($23)) + 60|0); //@line 119 "../../iup_attrib.c"
     $25 = HEAP32[$24>>2]|0; //@line 119 "../../iup_attrib.c"
     $4 = $25; //@line 119 "../../iup_attrib.c"
     while(1) {
      $26 = $4; //@line 120 "../../iup_attrib.c"
      $27 = ($26|0)!=(0|0); //@line 120 "../../iup_attrib.c"
      if (!($27)) {
       break L4;
      }
      $28 = $4; //@line 122 "../../iup_attrib.c"
      $29 = ((($28)) + 8|0); //@line 122 "../../iup_attrib.c"
      $30 = HEAP32[$29>>2]|0; //@line 122 "../../iup_attrib.c"
      $31 = $3; //@line 122 "../../iup_attrib.c"
      $32 = (_iupTableGet($30,$31)|0); //@line 122 "../../iup_attrib.c"
      $5 = $32; //@line 122 "../../iup_attrib.c"
      $33 = $5; //@line 123 "../../iup_attrib.c"
      $34 = ($33|0)!=(0|0); //@line 123 "../../iup_attrib.c"
      if ($34) {
       break;
      }
      $38 = $4; //@line 130 "../../iup_attrib.c"
      $39 = ((($38)) + 60|0); //@line 130 "../../iup_attrib.c"
      $40 = HEAP32[$39>>2]|0; //@line 130 "../../iup_attrib.c"
      $4 = $40; //@line 130 "../../iup_attrib.c"
     }
     $35 = $1; //@line 127 "../../iup_attrib.c"
     $36 = $3; //@line 127 "../../iup_attrib.c"
     $37 = $5; //@line 127 "../../iup_attrib.c"
     (_iupClassObjectSetAttribute($35,$36,$37,$6)|0); //@line 127 "../../iup_attrib.c"
    }
   }
  } while(0);
  $41 = $2; //@line 134 "../../iup_attrib.c"
  $42 = ((($41)) + 28|0); //@line 134 "../../iup_attrib.c"
  $43 = HEAP32[$42>>2]|0; //@line 134 "../../iup_attrib.c"
  $44 = (_iupTableNext($43)|0); //@line 134 "../../iup_attrib.c"
  $3 = $44; //@line 134 "../../iup_attrib.c"
 }
 STACKTOP = sp;return; //@line 136 "../../iup_attrib.c"
}
function _iupAttribGet($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 1151 "../../iup_attrib.c"
 $6 = ($5|0)!=(0|0); //@line 1151 "../../iup_attrib.c"
 $7 = $4; //@line 1151 "../../iup_attrib.c"
 $8 = ($7|0)!=(0|0); //@line 1151 "../../iup_attrib.c"
 $or$cond = $6 & $8; //@line 1151 "../../iup_attrib.c"
 if ($or$cond) {
  $9 = $3; //@line 1153 "../../iup_attrib.c"
  $10 = ((($9)) + 8|0); //@line 1153 "../../iup_attrib.c"
  $11 = HEAP32[$10>>2]|0; //@line 1153 "../../iup_attrib.c"
  $12 = $4; //@line 1153 "../../iup_attrib.c"
  $13 = (_iupTableGet($11,$12)|0); //@line 1153 "../../iup_attrib.c"
  $2 = $13; //@line 1153 "../../iup_attrib.c"
  $14 = $2; //@line 1154 "../../iup_attrib.c"
  STACKTOP = sp;return ($14|0); //@line 1154 "../../iup_attrib.c"
 } else {
  $2 = 0; //@line 1152 "../../iup_attrib.c"
  $14 = $2; //@line 1154 "../../iup_attrib.c"
  STACKTOP = sp;return ($14|0); //@line 1154 "../../iup_attrib.c"
 }
 return (0)|0;
}
function _iupAttribUpdateChildren($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 170 "../../iup_attrib.c"
 $5 = ((($4)) + 8|0); //@line 170 "../../iup_attrib.c"
 $6 = HEAP32[$5>>2]|0; //@line 170 "../../iup_attrib.c"
 $7 = (_iupTableFirst($6)|0); //@line 170 "../../iup_attrib.c"
 $2 = $7; //@line 170 "../../iup_attrib.c"
 while(1) {
  $8 = $2; //@line 171 "../../iup_attrib.c"
  $9 = ($8|0)!=(0|0); //@line 171 "../../iup_attrib.c"
  if (!($9)) {
   break;
  }
  $10 = $2; //@line 173 "../../iup_attrib.c"
  $11 = HEAP8[$10>>0]|0; //@line 173 "../../iup_attrib.c"
  $12 = $11 << 24 >> 24; //@line 173 "../../iup_attrib.c"
  $13 = ($12|0)==(95); //@line 173 "../../iup_attrib.c"
  if ($13) {
   $14 = $2; //@line 173 "../../iup_attrib.c"
   $15 = ((($14)) + 1|0); //@line 173 "../../iup_attrib.c"
   $16 = HEAP8[$15>>0]|0; //@line 173 "../../iup_attrib.c"
   $17 = $16 << 24 >> 24; //@line 173 "../../iup_attrib.c"
   $18 = ($17|0)==(73); //@line 173 "../../iup_attrib.c"
   if ($18) {
    $19 = $2; //@line 173 "../../iup_attrib.c"
    $20 = ((($19)) + 2|0); //@line 173 "../../iup_attrib.c"
    $21 = HEAP8[$20>>0]|0; //@line 173 "../../iup_attrib.c"
    $22 = $21 << 24 >> 24; //@line 173 "../../iup_attrib.c"
    $23 = ($22|0)==(85); //@line 173 "../../iup_attrib.c"
    if ($23) {
     $24 = $2; //@line 173 "../../iup_attrib.c"
     $25 = ((($24)) + 3|0); //@line 173 "../../iup_attrib.c"
     $26 = HEAP8[$25>>0]|0; //@line 173 "../../iup_attrib.c"
     $27 = $26 << 24 >> 24; //@line 173 "../../iup_attrib.c"
     $28 = ($27|0)==(80); //@line 173 "../../iup_attrib.c"
     if (!($28)) {
      label = 7;
     }
    } else {
     label = 7;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
  if ((label|0) == 7) {
   label = 0;
   $29 = $1; //@line 173 "../../iup_attrib.c"
   $30 = $2; //@line 173 "../../iup_attrib.c"
   $31 = (_iAttribIsInherit($29,$30)|0); //@line 173 "../../iup_attrib.c"
   $32 = ($31|0)!=(0); //@line 173 "../../iup_attrib.c"
   if ($32) {
    $33 = $1; //@line 176 "../../iup_attrib.c"
    $34 = ((($33)) + 8|0); //@line 176 "../../iup_attrib.c"
    $35 = HEAP32[$34>>2]|0; //@line 176 "../../iup_attrib.c"
    $36 = $2; //@line 176 "../../iup_attrib.c"
    $37 = (_iupTableGet($35,$36)|0); //@line 176 "../../iup_attrib.c"
    $3 = $37; //@line 176 "../../iup_attrib.c"
    $38 = $1; //@line 177 "../../iup_attrib.c"
    $39 = $2; //@line 177 "../../iup_attrib.c"
    $40 = $3; //@line 177 "../../iup_attrib.c"
    _iAttribNotifyChildren($38,$39,$40); //@line 177 "../../iup_attrib.c"
   }
  }
  $41 = $1; //@line 180 "../../iup_attrib.c"
  $42 = ((($41)) + 8|0); //@line 180 "../../iup_attrib.c"
  $43 = HEAP32[$42>>2]|0; //@line 180 "../../iup_attrib.c"
  $44 = (_iupTableNext($43)|0); //@line 180 "../../iup_attrib.c"
  $2 = $44; //@line 180 "../../iup_attrib.c"
 }
 STACKTOP = sp;return; //@line 182 "../../iup_attrib.c"
}
function _iAttribIsInherit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 142 "../../iup_attrib.c"
 $7 = $3; //@line 142 "../../iup_attrib.c"
 _iupClassObjectGetAttributeInfo($6,$7,$5,$4); //@line 142 "../../iup_attrib.c"
 $8 = HEAP32[$4>>2]|0; //@line 143 "../../iup_attrib.c"
 STACKTOP = sp;return ($8|0); //@line 143 "../../iup_attrib.c"
}
function _iAttribNotifyChildren($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3; //@line 149 "../../iup_attrib.c"
 $9 = ((($8)) + 64|0); //@line 149 "../../iup_attrib.c"
 $10 = HEAP32[$9>>2]|0; //@line 149 "../../iup_attrib.c"
 $7 = $10; //@line 149 "../../iup_attrib.c"
 while(1) {
  $11 = $7; //@line 150 "../../iup_attrib.c"
  $12 = ($11|0)!=(0|0); //@line 150 "../../iup_attrib.c"
  if (!($12)) {
   break;
  }
  $13 = $7; //@line 152 "../../iup_attrib.c"
  $14 = ((($13)) + 8|0); //@line 152 "../../iup_attrib.c"
  $15 = HEAP32[$14>>2]|0; //@line 152 "../../iup_attrib.c"
  $16 = $4; //@line 152 "../../iup_attrib.c"
  $17 = (_iupTableGet($15,$16)|0); //@line 152 "../../iup_attrib.c"
  $18 = ($17|0)!=(0|0); //@line 152 "../../iup_attrib.c"
  if (!($18)) {
   $19 = $7; //@line 155 "../../iup_attrib.c"
   $20 = $4; //@line 155 "../../iup_attrib.c"
   $21 = (_iAttribIsInherit($19,$20)|0); //@line 155 "../../iup_attrib.c"
   $22 = ($21|0)!=(0); //@line 155 "../../iup_attrib.c"
   if ($22) {
    $23 = $7; //@line 158 "../../iup_attrib.c"
    $24 = $4; //@line 158 "../../iup_attrib.c"
    $25 = $5; //@line 158 "../../iup_attrib.c"
    (_iupClassObjectSetAttribute($23,$24,$25,$6)|0); //@line 158 "../../iup_attrib.c"
    $26 = $7; //@line 160 "../../iup_attrib.c"
    $27 = $4; //@line 160 "../../iup_attrib.c"
    $28 = $5; //@line 160 "../../iup_attrib.c"
    _iAttribNotifyChildren($26,$27,$28); //@line 160 "../../iup_attrib.c"
   }
  }
  $29 = $7; //@line 164 "../../iup_attrib.c"
  $30 = ((($29)) + 68|0); //@line 164 "../../iup_attrib.c"
  $31 = HEAP32[$30>>2]|0; //@line 164 "../../iup_attrib.c"
  $7 = $31; //@line 164 "../../iup_attrib.c"
 }
 STACKTOP = sp;return; //@line 166 "../../iup_attrib.c"
}
function _iupAttribUpdate($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 4|0;
 $1 = $0;
 $6 = 0; //@line 188 "../../iup_attrib.c"
 $9 = $1; //@line 190 "../../iup_attrib.c"
 $10 = ((($9)) + 8|0); //@line 190 "../../iup_attrib.c"
 $11 = HEAP32[$10>>2]|0; //@line 190 "../../iup_attrib.c"
 $12 = (_iupTableCount($11)|0); //@line 190 "../../iup_attrib.c"
 $5 = $12; //@line 190 "../../iup_attrib.c"
 $13 = $5; //@line 191 "../../iup_attrib.c"
 $14 = ($13|0)!=(0); //@line 191 "../../iup_attrib.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 229 "../../iup_attrib.c"
 }
 $15 = $5; //@line 194 "../../iup_attrib.c"
 $16 = $15<<2; //@line 194 "../../iup_attrib.c"
 $17 = (_malloc($16)|0); //@line 194 "../../iup_attrib.c"
 $2 = $17; //@line 194 "../../iup_attrib.c"
 $18 = $1; //@line 197 "../../iup_attrib.c"
 $19 = ((($18)) + 8|0); //@line 197 "../../iup_attrib.c"
 $20 = HEAP32[$19>>2]|0; //@line 197 "../../iup_attrib.c"
 $21 = (_iupTableFirst($20)|0); //@line 197 "../../iup_attrib.c"
 $3 = $21; //@line 197 "../../iup_attrib.c"
 while(1) {
  $22 = $3; //@line 198 "../../iup_attrib.c"
  $23 = ($22|0)!=(0|0); //@line 198 "../../iup_attrib.c"
  if (!($23)) {
   break;
  }
  $24 = $3; //@line 200 "../../iup_attrib.c"
  $25 = HEAP8[$24>>0]|0; //@line 200 "../../iup_attrib.c"
  $26 = $25 << 24 >> 24; //@line 200 "../../iup_attrib.c"
  $27 = ($26|0)==(95); //@line 200 "../../iup_attrib.c"
  if ($27) {
   $28 = $3; //@line 200 "../../iup_attrib.c"
   $29 = ((($28)) + 1|0); //@line 200 "../../iup_attrib.c"
   $30 = HEAP8[$29>>0]|0; //@line 200 "../../iup_attrib.c"
   $31 = $30 << 24 >> 24; //@line 200 "../../iup_attrib.c"
   $32 = ($31|0)==(73); //@line 200 "../../iup_attrib.c"
   if ($32) {
    $33 = $3; //@line 200 "../../iup_attrib.c"
    $34 = ((($33)) + 2|0); //@line 200 "../../iup_attrib.c"
    $35 = HEAP8[$34>>0]|0; //@line 200 "../../iup_attrib.c"
    $36 = $35 << 24 >> 24; //@line 200 "../../iup_attrib.c"
    $37 = ($36|0)==(85); //@line 200 "../../iup_attrib.c"
    if ($37) {
     $38 = $3; //@line 200 "../../iup_attrib.c"
     $39 = ((($38)) + 3|0); //@line 200 "../../iup_attrib.c"
     $40 = HEAP8[$39>>0]|0; //@line 200 "../../iup_attrib.c"
     $41 = $40 << 24 >> 24; //@line 200 "../../iup_attrib.c"
     $42 = ($41|0)==(80); //@line 200 "../../iup_attrib.c"
     if (!($42)) {
      label = 8;
     }
    } else {
     label = 8;
    }
   } else {
    label = 8;
   }
  } else {
   label = 8;
  }
  if ((label|0) == 8) {
   label = 0;
   $43 = $3; //@line 202 "../../iup_attrib.c"
   $44 = $6; //@line 202 "../../iup_attrib.c"
   $45 = $2; //@line 202 "../../iup_attrib.c"
   $46 = (($45) + ($44<<2)|0); //@line 202 "../../iup_attrib.c"
   HEAP32[$46>>2] = $43; //@line 202 "../../iup_attrib.c"
   $47 = $6; //@line 203 "../../iup_attrib.c"
   $48 = (($47) + 1)|0; //@line 203 "../../iup_attrib.c"
   $6 = $48; //@line 203 "../../iup_attrib.c"
  }
  $49 = $1; //@line 206 "../../iup_attrib.c"
  $50 = ((($49)) + 8|0); //@line 206 "../../iup_attrib.c"
  $51 = HEAP32[$50>>2]|0; //@line 206 "../../iup_attrib.c"
  $52 = (_iupTableNext($51)|0); //@line 206 "../../iup_attrib.c"
  $3 = $52; //@line 206 "../../iup_attrib.c"
 }
 $53 = $6; //@line 208 "../../iup_attrib.c"
 $5 = $53; //@line 208 "../../iup_attrib.c"
 $6 = 0; //@line 211 "../../iup_attrib.c"
 while(1) {
  $54 = $6; //@line 211 "../../iup_attrib.c"
  $55 = $5; //@line 211 "../../iup_attrib.c"
  $56 = ($54|0)<($55|0); //@line 211 "../../iup_attrib.c"
  if (!($56)) {
   break;
  }
  $57 = $6; //@line 213 "../../iup_attrib.c"
  $58 = $2; //@line 213 "../../iup_attrib.c"
  $59 = (($58) + ($57<<2)|0); //@line 213 "../../iup_attrib.c"
  $60 = HEAP32[$59>>2]|0; //@line 213 "../../iup_attrib.c"
  $3 = $60; //@line 213 "../../iup_attrib.c"
  $61 = $1; //@line 216 "../../iup_attrib.c"
  $62 = ((($61)) + 8|0); //@line 216 "../../iup_attrib.c"
  $63 = HEAP32[$62>>2]|0; //@line 216 "../../iup_attrib.c"
  $64 = $3; //@line 216 "../../iup_attrib.c"
  $65 = (_iupTableGet($63,$64)|0); //@line 216 "../../iup_attrib.c"
  $4 = $65; //@line 216 "../../iup_attrib.c"
  $66 = $1; //@line 219 "../../iup_attrib.c"
  $67 = $3; //@line 219 "../../iup_attrib.c"
  $68 = $4; //@line 219 "../../iup_attrib.c"
  $69 = (_iupClassObjectSetAttribute($66,$67,$68,$7)|0); //@line 219 "../../iup_attrib.c"
  $8 = $69; //@line 219 "../../iup_attrib.c"
  $70 = HEAP32[$7>>2]|0; //@line 221 "../../iup_attrib.c"
  $71 = ($70|0)!=(0); //@line 221 "../../iup_attrib.c"
  if ($71) {
   $72 = $1; //@line 222 "../../iup_attrib.c"
   $73 = $3; //@line 222 "../../iup_attrib.c"
   $74 = $4; //@line 222 "../../iup_attrib.c"
   _iAttribNotifyChildren($72,$73,$74); //@line 222 "../../iup_attrib.c"
  }
  $75 = $8; //@line 224 "../../iup_attrib.c"
  $76 = ($75|0)==(0); //@line 224 "../../iup_attrib.c"
  if ($76) {
   $77 = $1; //@line 225 "../../iup_attrib.c"
   $78 = ((($77)) + 8|0); //@line 225 "../../iup_attrib.c"
   $79 = HEAP32[$78>>2]|0; //@line 225 "../../iup_attrib.c"
   $80 = $3; //@line 225 "../../iup_attrib.c"
   _iupTableRemove($79,$80); //@line 225 "../../iup_attrib.c"
  }
  $81 = $6; //@line 211 "../../iup_attrib.c"
  $82 = (($81) + 1)|0; //@line 211 "../../iup_attrib.c"
  $6 = $82; //@line 211 "../../iup_attrib.c"
 }
 $83 = $2; //@line 228 "../../iup_attrib.c"
 _free($83); //@line 228 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 229 "../../iup_attrib.c"
}
function _IupSetAttributeId($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $5; //@line 234 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 234 "../../iup_attrib.c"
 if (!($9)) {
  STACKTOP = sp;return; //@line 243 "../../iup_attrib.c"
 }
 $10 = $4; //@line 238 "../../iup_attrib.c"
 $11 = (_iupObjectCheck($10)|0); //@line 238 "../../iup_attrib.c"
 $12 = ($11|0)!=(0); //@line 238 "../../iup_attrib.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 243 "../../iup_attrib.c"
 }
 $13 = $4; //@line 241 "../../iup_attrib.c"
 $14 = $5; //@line 241 "../../iup_attrib.c"
 $15 = $6; //@line 241 "../../iup_attrib.c"
 $16 = $7; //@line 241 "../../iup_attrib.c"
 $17 = (_iupClassObjectSetAttributeId($13,$14,$15,$16)|0); //@line 241 "../../iup_attrib.c"
 $18 = ($17|0)!=(0); //@line 241 "../../iup_attrib.c"
 if (!($18)) {
  STACKTOP = sp;return; //@line 243 "../../iup_attrib.c"
 }
 $19 = $4; //@line 242 "../../iup_attrib.c"
 $20 = $5; //@line 242 "../../iup_attrib.c"
 $21 = $6; //@line 242 "../../iup_attrib.c"
 $22 = $7; //@line 242 "../../iup_attrib.c"
 _iupAttribSetId($19,$20,$21,$22); //@line 242 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 243 "../../iup_attrib.c"
}
function _iupAttribSetId($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $vararg_buffer = sp;
 $8 = sp + 24|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $5; //@line 958 "../../iup_attrib.c"
 $10 = $6; //@line 958 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $9; //@line 958 "../../iup_attrib.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 958 "../../iup_attrib.c"
 HEAP32[$vararg_ptr1>>2] = $10; //@line 958 "../../iup_attrib.c"
 (_sprintf($8,1720,$vararg_buffer)|0); //@line 958 "../../iup_attrib.c"
 $11 = $4; //@line 959 "../../iup_attrib.c"
 $12 = $7; //@line 959 "../../iup_attrib.c"
 _iupAttribSet($11,$8,$12); //@line 959 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 960 "../../iup_attrib.c"
}
function _iupAttribSet($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $5; //@line 900 "../../iup_attrib.c"
 $7 = ($6|0)!=(0|0); //@line 900 "../../iup_attrib.c"
 $8 = $3; //@line 903 "../../iup_attrib.c"
 $9 = ((($8)) + 8|0); //@line 903 "../../iup_attrib.c"
 $10 = HEAP32[$9>>2]|0; //@line 903 "../../iup_attrib.c"
 $11 = $4; //@line 903 "../../iup_attrib.c"
 if ($7) {
  $12 = $5; //@line 903 "../../iup_attrib.c"
  _iupTableSet($10,$11,$12,0); //@line 903 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 904 "../../iup_attrib.c"
 } else {
  _iupTableRemove($10,$11); //@line 901 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 904 "../../iup_attrib.c"
 }
}
function _iupAttribSetStrId($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $vararg_buffer = sp;
 $8 = sp + 24|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $5; //@line 965 "../../iup_attrib.c"
 $10 = $6; //@line 965 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $9; //@line 965 "../../iup_attrib.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 965 "../../iup_attrib.c"
 HEAP32[$vararg_ptr1>>2] = $10; //@line 965 "../../iup_attrib.c"
 (_sprintf($8,1720,$vararg_buffer)|0); //@line 965 "../../iup_attrib.c"
 $11 = $4; //@line 966 "../../iup_attrib.c"
 $12 = $7; //@line 966 "../../iup_attrib.c"
 _iupAttribSetStr($11,$8,$12); //@line 966 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 967 "../../iup_attrib.c"
}
function _iupAttribSetStr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $5; //@line 908 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 908 "../../iup_attrib.c"
 if (!($9)) {
  $10 = $3; //@line 909 "../../iup_attrib.c"
  $11 = ((($10)) + 8|0); //@line 909 "../../iup_attrib.c"
  $12 = HEAP32[$11>>2]|0; //@line 909 "../../iup_attrib.c"
  $13 = $4; //@line 909 "../../iup_attrib.c"
  _iupTableRemove($12,$13); //@line 909 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 922 "../../iup_attrib.c"
 }
 $6 = 1; //@line 912 "../../iup_attrib.c"
 $14 = $5; //@line 914 "../../iup_attrib.c"
 $15 = ($14|0)!=(0|0); //@line 914 "../../iup_attrib.c"
 if ($15) {
  $16 = $5; //@line 914 "../../iup_attrib.c"
  $17 = HEAP8[$16>>0]|0; //@line 914 "../../iup_attrib.c"
  $18 = $17 << 24 >> 24; //@line 914 "../../iup_attrib.c"
  $19 = ($18|0)==(95); //@line 914 "../../iup_attrib.c"
  if ($19) {
   $20 = $5; //@line 914 "../../iup_attrib.c"
   $21 = ((($20)) + 1|0); //@line 914 "../../iup_attrib.c"
   $22 = HEAP8[$21>>0]|0; //@line 914 "../../iup_attrib.c"
   $23 = $22 << 24 >> 24; //@line 914 "../../iup_attrib.c"
   $24 = ($23|0)==(64); //@line 914 "../../iup_attrib.c"
   if ($24) {
    $25 = $5; //@line 915 "../../iup_attrib.c"
    $26 = ((($25)) + 2|0); //@line 915 "../../iup_attrib.c"
    $27 = (_IupGetLanguageString($26)|0); //@line 915 "../../iup_attrib.c"
    $7 = $27; //@line 915 "../../iup_attrib.c"
    $28 = $7; //@line 915 "../../iup_attrib.c"
    $29 = $5; //@line 915 "../../iup_attrib.c"
    $30 = ((($29)) + 2|0); //@line 915 "../../iup_attrib.c"
    $31 = ($28|0)!=($30|0); //@line 915 "../../iup_attrib.c"
    if ($31) {
     $32 = $7; //@line 915 "../../iup_attrib.c"
     $5 = $32; //@line 915 "../../iup_attrib.c"
     $6 = 0; //@line 915 "../../iup_attrib.c"
    }
   }
  }
 }
 $33 = $6; //@line 917 "../../iup_attrib.c"
 $34 = ($33|0)!=(0); //@line 917 "../../iup_attrib.c"
 $35 = $3; //@line 918 "../../iup_attrib.c"
 $36 = ((($35)) + 8|0); //@line 918 "../../iup_attrib.c"
 $37 = HEAP32[$36>>2]|0; //@line 918 "../../iup_attrib.c"
 $38 = $4; //@line 918 "../../iup_attrib.c"
 $39 = $5; //@line 918 "../../iup_attrib.c"
 if ($34) {
  _iupTableSet($37,$38,$39,1); //@line 918 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 922 "../../iup_attrib.c"
 } else {
  _iupTableSet($37,$38,$39,0); //@line 920 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 922 "../../iup_attrib.c"
 }
}
function _IupGetAttributeId($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $5; //@line 279 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 279 "../../iup_attrib.c"
 if (!($9)) {
  $3 = 0; //@line 280 "../../iup_attrib.c"
  $24 = $3; //@line 291 "../../iup_attrib.c"
  STACKTOP = sp;return ($24|0); //@line 291 "../../iup_attrib.c"
 }
 $10 = $4; //@line 283 "../../iup_attrib.c"
 $11 = (_iupObjectCheck($10)|0); //@line 283 "../../iup_attrib.c"
 $12 = ($11|0)!=(0); //@line 283 "../../iup_attrib.c"
 if (!($12)) {
  $3 = 0; //@line 284 "../../iup_attrib.c"
  $24 = $3; //@line 291 "../../iup_attrib.c"
  STACKTOP = sp;return ($24|0); //@line 291 "../../iup_attrib.c"
 }
 $13 = $4; //@line 286 "../../iup_attrib.c"
 $14 = $5; //@line 286 "../../iup_attrib.c"
 $15 = $6; //@line 286 "../../iup_attrib.c"
 $16 = (_iupClassObjectGetAttributeId($13,$14,$15)|0); //@line 286 "../../iup_attrib.c"
 $7 = $16; //@line 286 "../../iup_attrib.c"
 $17 = $7; //@line 287 "../../iup_attrib.c"
 $18 = ($17|0)!=(0|0); //@line 287 "../../iup_attrib.c"
 if (!($18)) {
  $19 = $4; //@line 288 "../../iup_attrib.c"
  $20 = $5; //@line 288 "../../iup_attrib.c"
  $21 = $6; //@line 288 "../../iup_attrib.c"
  $22 = (_iupAttribGetId($19,$20,$21)|0); //@line 288 "../../iup_attrib.c"
  $7 = $22; //@line 288 "../../iup_attrib.c"
 }
 $23 = $7; //@line 290 "../../iup_attrib.c"
 $3 = $23; //@line 290 "../../iup_attrib.c"
 $24 = $3; //@line 291 "../../iup_attrib.c"
 STACKTOP = sp;return ($24|0); //@line 291 "../../iup_attrib.c"
}
function _iupAttribGetId($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $vararg_buffer = sp;
 $6 = sp + 20|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 1038 "../../iup_attrib.c"
 $8 = $5; //@line 1038 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $7; //@line 1038 "../../iup_attrib.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 1038 "../../iup_attrib.c"
 HEAP32[$vararg_ptr1>>2] = $8; //@line 1038 "../../iup_attrib.c"
 (_sprintf($6,1720,$vararg_buffer)|0); //@line 1038 "../../iup_attrib.c"
 $9 = $3; //@line 1039 "../../iup_attrib.c"
 $10 = (_iupAttribGet($9,$6)|0); //@line 1039 "../../iup_attrib.c"
 STACKTOP = sp;return ($10|0); //@line 1039 "../../iup_attrib.c"
}
function _IupSetAttribute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 528 "../../iup_attrib.c"
 $8 = ($7|0)!=(0|0); //@line 528 "../../iup_attrib.c"
 if (!($8)) {
  STACKTOP = sp;return; //@line 551 "../../iup_attrib.c"
 }
 $9 = $3; //@line 531 "../../iup_attrib.c"
 $10 = ($9|0)!=(0|0); //@line 531 "../../iup_attrib.c"
 if (!($10)) {
  $11 = $4; //@line 533 "../../iup_attrib.c"
  $12 = $5; //@line 533 "../../iup_attrib.c"
  _IupSetGlobal($11,$12); //@line 533 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 551 "../../iup_attrib.c"
 }
 $13 = $3; //@line 538 "../../iup_attrib.c"
 $14 = (_iupObjectCheck($13)|0); //@line 538 "../../iup_attrib.c"
 $15 = ($14|0)!=(0); //@line 538 "../../iup_attrib.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 551 "../../iup_attrib.c"
 }
 $16 = $4; //@line 541 "../../iup_attrib.c"
 $17 = HEAP8[$16>>0]|0; //@line 541 "../../iup_attrib.c"
 $18 = $17 << 24 >> 24; //@line 541 "../../iup_attrib.c"
 $19 = ($18|0)==(95); //@line 541 "../../iup_attrib.c"
 if ($19) {
  $20 = $4; //@line 541 "../../iup_attrib.c"
  $21 = ((($20)) + 1|0); //@line 541 "../../iup_attrib.c"
  $22 = HEAP8[$21>>0]|0; //@line 541 "../../iup_attrib.c"
  $23 = $22 << 24 >> 24; //@line 541 "../../iup_attrib.c"
  $24 = ($23|0)==(73); //@line 541 "../../iup_attrib.c"
  if ($24) {
   $25 = $4; //@line 541 "../../iup_attrib.c"
   $26 = ((($25)) + 2|0); //@line 541 "../../iup_attrib.c"
   $27 = HEAP8[$26>>0]|0; //@line 541 "../../iup_attrib.c"
   $28 = $27 << 24 >> 24; //@line 541 "../../iup_attrib.c"
   $29 = ($28|0)==(85); //@line 541 "../../iup_attrib.c"
   if ($29) {
    $30 = $4; //@line 541 "../../iup_attrib.c"
    $31 = ((($30)) + 3|0); //@line 541 "../../iup_attrib.c"
    $32 = HEAP8[$31>>0]|0; //@line 541 "../../iup_attrib.c"
    $33 = $32 << 24 >> 24; //@line 541 "../../iup_attrib.c"
    $34 = ($33|0)==(80); //@line 541 "../../iup_attrib.c"
    if ($34) {
     $35 = $3; //@line 542 "../../iup_attrib.c"
     $36 = $4; //@line 542 "../../iup_attrib.c"
     $37 = $5; //@line 542 "../../iup_attrib.c"
     _iupAttribSet($35,$36,$37); //@line 542 "../../iup_attrib.c"
     STACKTOP = sp;return; //@line 551 "../../iup_attrib.c"
    }
   }
  }
 }
 $38 = $3; //@line 545 "../../iup_attrib.c"
 $39 = $4; //@line 545 "../../iup_attrib.c"
 $40 = $5; //@line 545 "../../iup_attrib.c"
 $41 = (_iupClassObjectSetAttribute($38,$39,$40,$6)|0); //@line 545 "../../iup_attrib.c"
 $42 = ($41|0)!=(0); //@line 545 "../../iup_attrib.c"
 if ($42) {
  $43 = $3; //@line 546 "../../iup_attrib.c"
  $44 = $4; //@line 546 "../../iup_attrib.c"
  $45 = $5; //@line 546 "../../iup_attrib.c"
  _iupAttribSet($43,$44,$45); //@line 546 "../../iup_attrib.c"
 }
 $46 = HEAP32[$6>>2]|0; //@line 548 "../../iup_attrib.c"
 $47 = ($46|0)!=(0); //@line 548 "../../iup_attrib.c"
 if (!($47)) {
  STACKTOP = sp;return; //@line 551 "../../iup_attrib.c"
 }
 $48 = $3; //@line 549 "../../iup_attrib.c"
 $49 = $4; //@line 549 "../../iup_attrib.c"
 $50 = $5; //@line 549 "../../iup_attrib.c"
 _iAttribNotifyChildren($48,$49,$50); //@line 549 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 551 "../../iup_attrib.c"
}
function _IupSetStrAttribute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 555 "../../iup_attrib.c"
 $7 = $4; //@line 555 "../../iup_attrib.c"
 $8 = $5; //@line 555 "../../iup_attrib.c"
 _IupStoreAttribute($6,$7,$8); //@line 555 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 556 "../../iup_attrib.c"
}
function _IupStoreAttribute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $4; //@line 562 "../../iup_attrib.c"
 $10 = ($9|0)!=(0|0); //@line 562 "../../iup_attrib.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 595 "../../iup_attrib.c"
 }
 $11 = $3; //@line 565 "../../iup_attrib.c"
 $12 = ($11|0)!=(0|0); //@line 565 "../../iup_attrib.c"
 if (!($12)) {
  $13 = $4; //@line 567 "../../iup_attrib.c"
  $14 = $5; //@line 567 "../../iup_attrib.c"
  _IupStoreGlobal($13,$14); //@line 567 "../../iup_attrib.c"
  STACKTOP = sp;return; //@line 595 "../../iup_attrib.c"
 }
 $15 = $3; //@line 572 "../../iup_attrib.c"
 $16 = (_iupObjectCheck($15)|0); //@line 572 "../../iup_attrib.c"
 $17 = ($16|0)!=(0); //@line 572 "../../iup_attrib.c"
 if (!($17)) {
  STACKTOP = sp;return; //@line 595 "../../iup_attrib.c"
 }
 $18 = $4; //@line 575 "../../iup_attrib.c"
 $19 = HEAP8[$18>>0]|0; //@line 575 "../../iup_attrib.c"
 $20 = $19 << 24 >> 24; //@line 575 "../../iup_attrib.c"
 $21 = ($20|0)==(95); //@line 575 "../../iup_attrib.c"
 if ($21) {
  $22 = $4; //@line 575 "../../iup_attrib.c"
  $23 = ((($22)) + 1|0); //@line 575 "../../iup_attrib.c"
  $24 = HEAP8[$23>>0]|0; //@line 575 "../../iup_attrib.c"
  $25 = $24 << 24 >> 24; //@line 575 "../../iup_attrib.c"
  $26 = ($25|0)==(73); //@line 575 "../../iup_attrib.c"
  if ($26) {
   $27 = $4; //@line 575 "../../iup_attrib.c"
   $28 = ((($27)) + 2|0); //@line 575 "../../iup_attrib.c"
   $29 = HEAP8[$28>>0]|0; //@line 575 "../../iup_attrib.c"
   $30 = $29 << 24 >> 24; //@line 575 "../../iup_attrib.c"
   $31 = ($30|0)==(85); //@line 575 "../../iup_attrib.c"
   if ($31) {
    $32 = $4; //@line 575 "../../iup_attrib.c"
    $33 = ((($32)) + 3|0); //@line 575 "../../iup_attrib.c"
    $34 = HEAP8[$33>>0]|0; //@line 575 "../../iup_attrib.c"
    $35 = $34 << 24 >> 24; //@line 575 "../../iup_attrib.c"
    $36 = ($35|0)==(80); //@line 575 "../../iup_attrib.c"
    if ($36) {
     $37 = $3; //@line 576 "../../iup_attrib.c"
     $38 = $4; //@line 576 "../../iup_attrib.c"
     $39 = $5; //@line 576 "../../iup_attrib.c"
     _iupAttribSetStr($37,$38,$39); //@line 576 "../../iup_attrib.c"
     STACKTOP = sp;return; //@line 595 "../../iup_attrib.c"
    }
   }
  }
 }
 $7 = 1; //@line 579 "../../iup_attrib.c"
 $40 = $5; //@line 581 "../../iup_attrib.c"
 $41 = ($40|0)!=(0|0); //@line 581 "../../iup_attrib.c"
 if ($41) {
  $42 = $5; //@line 581 "../../iup_attrib.c"
  $43 = HEAP8[$42>>0]|0; //@line 581 "../../iup_attrib.c"
  $44 = $43 << 24 >> 24; //@line 581 "../../iup_attrib.c"
  $45 = ($44|0)==(95); //@line 581 "../../iup_attrib.c"
  if ($45) {
   $46 = $5; //@line 581 "../../iup_attrib.c"
   $47 = ((($46)) + 1|0); //@line 581 "../../iup_attrib.c"
   $48 = HEAP8[$47>>0]|0; //@line 581 "../../iup_attrib.c"
   $49 = $48 << 24 >> 24; //@line 581 "../../iup_attrib.c"
   $50 = ($49|0)==(64); //@line 581 "../../iup_attrib.c"
   if ($50) {
    $51 = $5; //@line 582 "../../iup_attrib.c"
    $52 = ((($51)) + 2|0); //@line 582 "../../iup_attrib.c"
    $53 = (_IupGetLanguageString($52)|0); //@line 582 "../../iup_attrib.c"
    $8 = $53; //@line 582 "../../iup_attrib.c"
    $54 = $8; //@line 582 "../../iup_attrib.c"
    $55 = $5; //@line 582 "../../iup_attrib.c"
    $56 = ((($55)) + 2|0); //@line 582 "../../iup_attrib.c"
    $57 = ($54|0)!=($56|0); //@line 582 "../../iup_attrib.c"
    if ($57) {
     $58 = $8; //@line 582 "../../iup_attrib.c"
     $5 = $58; //@line 582 "../../iup_attrib.c"
     $7 = 0; //@line 582 "../../iup_attrib.c"
    }
   }
  }
 }
 $59 = $3; //@line 584 "../../iup_attrib.c"
 $60 = $4; //@line 584 "../../iup_attrib.c"
 $61 = $5; //@line 584 "../../iup_attrib.c"
 $62 = (_iupClassObjectSetAttribute($59,$60,$61,$6)|0); //@line 584 "../../iup_attrib.c"
 $63 = ($62|0)==(1); //@line 584 "../../iup_attrib.c"
 do {
  if ($63) {
   $64 = $7; //@line 586 "../../iup_attrib.c"
   $65 = ($64|0)!=(0); //@line 586 "../../iup_attrib.c"
   $66 = $3; //@line 587 "../../iup_attrib.c"
   $67 = $4; //@line 587 "../../iup_attrib.c"
   $68 = $5; //@line 587 "../../iup_attrib.c"
   if ($65) {
    _iupAttribSetStr($66,$67,$68); //@line 587 "../../iup_attrib.c"
    break;
   } else {
    _iupAttribSet($66,$67,$68); //@line 589 "../../iup_attrib.c"
    break;
   }
  }
 } while(0);
 $69 = HEAP32[$6>>2]|0; //@line 592 "../../iup_attrib.c"
 $70 = ($69|0)!=(0); //@line 592 "../../iup_attrib.c"
 if (!($70)) {
  STACKTOP = sp;return; //@line 595 "../../iup_attrib.c"
 }
 $71 = $3; //@line 593 "../../iup_attrib.c"
 $72 = $4; //@line 593 "../../iup_attrib.c"
 $73 = $5; //@line 593 "../../iup_attrib.c"
 _iAttribNotifyChildren($71,$72,$73); //@line 593 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 595 "../../iup_attrib.c"
}
function _IupGetAttribute($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $8 = $4; //@line 633 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 633 "../../iup_attrib.c"
 if (!($9)) {
  $2 = 0; //@line 634 "../../iup_attrib.c"
  $66 = $2; //@line 672 "../../iup_attrib.c"
  STACKTOP = sp;return ($66|0); //@line 672 "../../iup_attrib.c"
 }
 $10 = $3; //@line 636 "../../iup_attrib.c"
 $11 = ($10|0)!=(0|0); //@line 636 "../../iup_attrib.c"
 if (!($11)) {
  $12 = $4; //@line 637 "../../iup_attrib.c"
  $13 = (_IupGetGlobal($12)|0); //@line 637 "../../iup_attrib.c"
  $2 = $13; //@line 637 "../../iup_attrib.c"
  $66 = $2; //@line 672 "../../iup_attrib.c"
  STACKTOP = sp;return ($66|0); //@line 672 "../../iup_attrib.c"
 }
 $14 = $3; //@line 640 "../../iup_attrib.c"
 $15 = (_iupObjectCheck($14)|0); //@line 640 "../../iup_attrib.c"
 $16 = ($15|0)!=(0); //@line 640 "../../iup_attrib.c"
 if (!($16)) {
  $2 = 0; //@line 641 "../../iup_attrib.c"
  $66 = $2; //@line 672 "../../iup_attrib.c"
  STACKTOP = sp;return ($66|0); //@line 672 "../../iup_attrib.c"
 }
 $17 = $4; //@line 643 "../../iup_attrib.c"
 $18 = HEAP8[$17>>0]|0; //@line 643 "../../iup_attrib.c"
 $19 = $18 << 24 >> 24; //@line 643 "../../iup_attrib.c"
 $20 = ($19|0)==(95); //@line 643 "../../iup_attrib.c"
 if ($20) {
  $21 = $4; //@line 643 "../../iup_attrib.c"
  $22 = ((($21)) + 1|0); //@line 643 "../../iup_attrib.c"
  $23 = HEAP8[$22>>0]|0; //@line 643 "../../iup_attrib.c"
  $24 = $23 << 24 >> 24; //@line 643 "../../iup_attrib.c"
  $25 = ($24|0)==(73); //@line 643 "../../iup_attrib.c"
  if ($25) {
   $26 = $4; //@line 643 "../../iup_attrib.c"
   $27 = ((($26)) + 2|0); //@line 643 "../../iup_attrib.c"
   $28 = HEAP8[$27>>0]|0; //@line 643 "../../iup_attrib.c"
   $29 = $28 << 24 >> 24; //@line 643 "../../iup_attrib.c"
   $30 = ($29|0)==(85); //@line 643 "../../iup_attrib.c"
   if ($30) {
    $31 = $4; //@line 643 "../../iup_attrib.c"
    $32 = ((($31)) + 3|0); //@line 643 "../../iup_attrib.c"
    $33 = HEAP8[$32>>0]|0; //@line 643 "../../iup_attrib.c"
    $34 = $33 << 24 >> 24; //@line 643 "../../iup_attrib.c"
    $35 = ($34|0)==(80); //@line 643 "../../iup_attrib.c"
    if ($35) {
     $36 = $3; //@line 644 "../../iup_attrib.c"
     $37 = $4; //@line 644 "../../iup_attrib.c"
     $38 = (_iupAttribGet($36,$37)|0); //@line 644 "../../iup_attrib.c"
     $2 = $38; //@line 644 "../../iup_attrib.c"
     $66 = $2; //@line 672 "../../iup_attrib.c"
     STACKTOP = sp;return ($66|0); //@line 672 "../../iup_attrib.c"
    }
   }
  }
 }
 $39 = $3; //@line 650 "../../iup_attrib.c"
 $40 = $4; //@line 650 "../../iup_attrib.c"
 $41 = (_iupClassObjectGetAttribute($39,$40,$7,$5)|0); //@line 650 "../../iup_attrib.c"
 $6 = $41; //@line 650 "../../iup_attrib.c"
 $42 = $6; //@line 652 "../../iup_attrib.c"
 $43 = ($42|0)!=(0|0); //@line 652 "../../iup_attrib.c"
 if (!($43)) {
  $44 = $3; //@line 653 "../../iup_attrib.c"
  $45 = $4; //@line 653 "../../iup_attrib.c"
  $46 = (_iupAttribGet($44,$45)|0); //@line 653 "../../iup_attrib.c"
  $6 = $46; //@line 653 "../../iup_attrib.c"
 }
 $47 = $6; //@line 655 "../../iup_attrib.c"
 $48 = ($47|0)==(0|0); //@line 655 "../../iup_attrib.c"
 $49 = HEAP32[$5>>2]|0; //@line 655 "../../iup_attrib.c"
 $50 = ($49|0)!=(0); //@line 655 "../../iup_attrib.c"
 $or$cond = $48 & $50; //@line 655 "../../iup_attrib.c"
 L23: do {
  if ($or$cond) {
   while(1) {
    $51 = $6; //@line 657 "../../iup_attrib.c"
    $52 = ($51|0)!=(0|0); //@line 657 "../../iup_attrib.c"
    $53 = $52 ^ 1; //@line 657 "../../iup_attrib.c"
    if (!($53)) {
     break L23;
    }
    $54 = $3; //@line 659 "../../iup_attrib.c"
    $55 = ((($54)) + 60|0); //@line 659 "../../iup_attrib.c"
    $56 = HEAP32[$55>>2]|0; //@line 659 "../../iup_attrib.c"
    $3 = $56; //@line 659 "../../iup_attrib.c"
    $57 = $3; //@line 660 "../../iup_attrib.c"
    $58 = ($57|0)!=(0|0); //@line 660 "../../iup_attrib.c"
    if (!($58)) {
     break L23;
    }
    $59 = $3; //@line 663 "../../iup_attrib.c"
    $60 = $4; //@line 663 "../../iup_attrib.c"
    $61 = (_iupAttribGet($59,$60)|0); //@line 663 "../../iup_attrib.c"
    $6 = $61; //@line 663 "../../iup_attrib.c"
   }
  }
 } while(0);
 $62 = $6; //@line 667 "../../iup_attrib.c"
 $63 = ($62|0)!=(0|0); //@line 667 "../../iup_attrib.c"
 if (!($63)) {
  $64 = HEAP32[$7>>2]|0; //@line 668 "../../iup_attrib.c"
  $6 = $64; //@line 668 "../../iup_attrib.c"
 }
 $65 = $6; //@line 670 "../../iup_attrib.c"
 $2 = $65; //@line 670 "../../iup_attrib.c"
 $66 = $2; //@line 672 "../../iup_attrib.c"
 STACKTOP = sp;return ($66|0); //@line 672 "../../iup_attrib.c"
}
function _IupGetFloat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 HEAPF32[$4>>2] = 0.0; //@line 676 "../../iup_attrib.c"
 $5 = $2; //@line 677 "../../iup_attrib.c"
 $6 = $3; //@line 677 "../../iup_attrib.c"
 $7 = (_IupGetAttribute($5,$6)|0); //@line 677 "../../iup_attrib.c"
 (_iupStrToFloat($7,$4)|0); //@line 677 "../../iup_attrib.c"
 $8 = +HEAPF32[$4>>2]; //@line 678 "../../iup_attrib.c"
 STACKTOP = sp;return (+$8); //@line 678 "../../iup_attrib.c"
}
function _IupGetInt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $2 = $0;
 $3 = $1;
 HEAP32[$4>>2] = 0; //@line 690 "../../iup_attrib.c"
 $6 = $2; //@line 691 "../../iup_attrib.c"
 $7 = $3; //@line 691 "../../iup_attrib.c"
 $8 = (_IupGetAttribute($6,$7)|0); //@line 691 "../../iup_attrib.c"
 $5 = $8; //@line 691 "../../iup_attrib.c"
 $9 = $5; //@line 692 "../../iup_attrib.c"
 $10 = ($9|0)!=(0|0); //@line 692 "../../iup_attrib.c"
 if ($10) {
  $11 = $5; //@line 694 "../../iup_attrib.c"
  $12 = (_iupStrToInt($11,$4)|0); //@line 694 "../../iup_attrib.c"
  $13 = ($12|0)!=(0); //@line 694 "../../iup_attrib.c"
  if (!($13)) {
   $14 = $5; //@line 696 "../../iup_attrib.c"
   $15 = (_iupStrBoolean($14)|0); //@line 696 "../../iup_attrib.c"
   $16 = ($15|0)!=(0); //@line 696 "../../iup_attrib.c"
   if ($16) {
    HEAP32[$4>>2] = 1; //@line 697 "../../iup_attrib.c"
   }
  }
 }
 $17 = HEAP32[$4>>2]|0; //@line 700 "../../iup_attrib.c"
 STACKTOP = sp;return ($17|0); //@line 700 "../../iup_attrib.c"
}
function _IupSetfAttribute($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp + 20|0;
 $8 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = (_iupStrGetLargeMem($6)|0); //@line 761 "../../iup_attrib.c"
 $7 = $9; //@line 761 "../../iup_attrib.c"
 HEAP32[$8>>2] = $varargs; //@line 763 "../../iup_attrib.c"
 $10 = $7; //@line 764 "../../iup_attrib.c"
 $11 = HEAP32[$6>>2]|0; //@line 764 "../../iup_attrib.c"
 $12 = $5; //@line 764 "../../iup_attrib.c"
 (_vsnprintf($10,$11,$12,$8)|0); //@line 764 "../../iup_attrib.c"
 $13 = $3; //@line 766 "../../iup_attrib.c"
 $14 = $4; //@line 766 "../../iup_attrib.c"
 $15 = $7; //@line 766 "../../iup_attrib.c"
 _IupStoreAttribute($13,$14,$15); //@line 766 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 767 "../../iup_attrib.c"
}
function _IupSetInt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer = sp;
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $5; //@line 772 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $7; //@line 772 "../../iup_attrib.c"
 (_sprintf($6,16038,$vararg_buffer)|0); //@line 772 "../../iup_attrib.c"
 $8 = $3; //@line 773 "../../iup_attrib.c"
 $9 = $4; //@line 773 "../../iup_attrib.c"
 _IupStoreAttribute($8,$9,$6); //@line 773 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 774 "../../iup_attrib.c"
}
function _iupAttribSetHandleName($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $vararg_buffer = sp;
 $2 = sp + 8|0;
 $1 = $0;
 $3 = $1; //@line 800 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $3; //@line 800 "../../iup_attrib.c"
 (_sprintf($2,1725,$vararg_buffer)|0); //@line 800 "../../iup_attrib.c"
 $4 = $1; //@line 801 "../../iup_attrib.c"
 (_IupSetHandle($2,$4)|0); //@line 801 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 802 "../../iup_attrib.c"
}
function _iupAttribGetHandleName($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $vararg_buffer = sp;
 $3 = sp + 12|0;
 $2 = $0;
 $4 = $2; //@line 807 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $4; //@line 807 "../../iup_attrib.c"
 (_sprintf($3,1725,$vararg_buffer)|0); //@line 807 "../../iup_attrib.c"
 $5 = (_IupGetHandle($3)|0); //@line 808 "../../iup_attrib.c"
 $6 = $2; //@line 808 "../../iup_attrib.c"
 $7 = ($5|0)==($6|0); //@line 808 "../../iup_attrib.c"
 if ($7) {
  $8 = (_iupStrReturnStr($3)|0); //@line 809 "../../iup_attrib.c"
  $1 = $8; //@line 809 "../../iup_attrib.c"
  $9 = $1; //@line 812 "../../iup_attrib.c"
  STACKTOP = sp;return ($9|0); //@line 812 "../../iup_attrib.c"
 } else {
  $1 = 0; //@line 811 "../../iup_attrib.c"
  $9 = $1; //@line 812 "../../iup_attrib.c"
  STACKTOP = sp;return ($9|0); //@line 812 "../../iup_attrib.c"
 }
 return (0)|0;
}
function _IupSetAttributeHandle($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 819 "../../iup_attrib.c"
 $8 = ($7|0)!=(0|0); //@line 819 "../../iup_attrib.c"
 $9 = $5; //@line 823 "../../iup_attrib.c"
 $10 = ($9|0)!=(0|0); //@line 823 "../../iup_attrib.c"
 $or$cond = $8 & $10; //@line 819 "../../iup_attrib.c"
 if (!($or$cond)) {
  STACKTOP = sp;return; //@line 834 "../../iup_attrib.c"
 }
 $11 = $5; //@line 826 "../../iup_attrib.c"
 $12 = (_IupGetName($11)|0); //@line 826 "../../iup_attrib.c"
 $6 = $12; //@line 826 "../../iup_attrib.c"
 $13 = $6; //@line 827 "../../iup_attrib.c"
 $14 = ($13|0)!=(0|0); //@line 827 "../../iup_attrib.c"
 if (!($14)) {
  $15 = $5; //@line 829 "../../iup_attrib.c"
  _iupAttribSetHandleName($15); //@line 829 "../../iup_attrib.c"
  $16 = $5; //@line 830 "../../iup_attrib.c"
  $17 = (_IupGetName($16)|0); //@line 830 "../../iup_attrib.c"
  $6 = $17; //@line 830 "../../iup_attrib.c"
 }
 $18 = $3; //@line 833 "../../iup_attrib.c"
 $19 = $4; //@line 833 "../../iup_attrib.c"
 $20 = $6; //@line 833 "../../iup_attrib.c"
 _IupStoreAttribute($18,$19,$20); //@line 833 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 834 "../../iup_attrib.c"
}
function _IupGetAttributeHandle($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 841 "../../iup_attrib.c"
 $7 = ($6|0)!=(0|0); //@line 841 "../../iup_attrib.c"
 if ($7) {
  $8 = $3; //@line 844 "../../iup_attrib.c"
  $9 = $4; //@line 844 "../../iup_attrib.c"
  $10 = (_IupGetAttribute($8,$9)|0); //@line 844 "../../iup_attrib.c"
  $5 = $10; //@line 844 "../../iup_attrib.c"
  $11 = $5; //@line 845 "../../iup_attrib.c"
  $12 = (_IupGetHandle($11)|0); //@line 845 "../../iup_attrib.c"
  $2 = $12; //@line 845 "../../iup_attrib.c"
  $13 = $2; //@line 846 "../../iup_attrib.c"
  STACKTOP = sp;return ($13|0); //@line 846 "../../iup_attrib.c"
 } else {
  $2 = 0; //@line 842 "../../iup_attrib.c"
  $13 = $2; //@line 846 "../../iup_attrib.c"
  STACKTOP = sp;return ($13|0); //@line 846 "../../iup_attrib.c"
 }
 return (0)|0;
}
function _iupAttribSetClassObject($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 868 "../../iup_attrib.c"
 $8 = $4; //@line 868 "../../iup_attrib.c"
 $9 = $5; //@line 868 "../../iup_attrib.c"
 (_iupClassObjectSetAttribute($7,$8,$9,$6)|0); //@line 868 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 869 "../../iup_attrib.c"
}
function _iupAttribSetInt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer = sp;
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $5; //@line 937 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $7; //@line 937 "../../iup_attrib.c"
 (_sprintf($6,16038,$vararg_buffer)|0); //@line 937 "../../iup_attrib.c"
 $8 = $3; //@line 938 "../../iup_attrib.c"
 $9 = $4; //@line 938 "../../iup_attrib.c"
 _iupAttribSetStr($8,$9,$6); //@line 938 "../../iup_attrib.c"
 STACKTOP = sp;return; //@line 939 "../../iup_attrib.c"
}
function _iupAttribGetIntId($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $vararg_buffer = sp;
 $6 = sp + 20|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 1045 "../../iup_attrib.c"
 $8 = $5; //@line 1045 "../../iup_attrib.c"
 HEAP32[$vararg_buffer>>2] = $7; //@line 1045 "../../iup_attrib.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 1045 "../../iup_attrib.c"
 HEAP32[$vararg_ptr1>>2] = $8; //@line 1045 "../../iup_attrib.c"
 (_sprintf($6,1720,$vararg_buffer)|0); //@line 1045 "../../iup_attrib.c"
 $9 = $3; //@line 1046 "../../iup_attrib.c"
 $10 = (_iupAttribGetInt($9,$6)|0); //@line 1046 "../../iup_attrib.c"
 STACKTOP = sp;return ($10|0); //@line 1046 "../../iup_attrib.c"
}
function _iupAttribGetInt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $2 = $0;
 $3 = $1;
 HEAP32[$4>>2] = 0; //@line 1118 "../../iup_attrib.c"
 $6 = $2; //@line 1119 "../../iup_attrib.c"
 $7 = $3; //@line 1119 "../../iup_attrib.c"
 $8 = (_iupAttribGetStr($6,$7)|0); //@line 1119 "../../iup_attrib.c"
 $5 = $8; //@line 1119 "../../iup_attrib.c"
 $9 = $5; //@line 1120 "../../iup_attrib.c"
 $10 = ($9|0)!=(0|0); //@line 1120 "../../iup_attrib.c"
 if ($10) {
  $11 = $5; //@line 1122 "../../iup_attrib.c"
  $12 = (_iupStrToInt($11,$4)|0); //@line 1122 "../../iup_attrib.c"
  $13 = ($12|0)!=(0); //@line 1122 "../../iup_attrib.c"
  if (!($13)) {
   $14 = $5; //@line 1124 "../../iup_attrib.c"
   $15 = (_iupStrBoolean($14)|0); //@line 1124 "../../iup_attrib.c"
   $16 = ($15|0)!=(0); //@line 1124 "../../iup_attrib.c"
   if ($16) {
    HEAP32[$4>>2] = 1; //@line 1125 "../../iup_attrib.c"
   }
  }
 }
 $17 = HEAP32[$4>>2]|0; //@line 1128 "../../iup_attrib.c"
 STACKTOP = sp;return ($17|0); //@line 1128 "../../iup_attrib.c"
}
function _iupAttribGetStr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $8 = $3; //@line 1159 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 1159 "../../iup_attrib.c"
 $10 = $4; //@line 1159 "../../iup_attrib.c"
 $11 = ($10|0)!=(0|0); //@line 1159 "../../iup_attrib.c"
 $or$cond = $9 & $11; //@line 1159 "../../iup_attrib.c"
 if (!($or$cond)) {
  $2 = 0; //@line 1160 "../../iup_attrib.c"
  $57 = $2; //@line 1187 "../../iup_attrib.c"
  STACKTOP = sp;return ($57|0); //@line 1187 "../../iup_attrib.c"
 }
 $12 = $3; //@line 1162 "../../iup_attrib.c"
 $13 = ((($12)) + 8|0); //@line 1162 "../../iup_attrib.c"
 $14 = HEAP32[$13>>2]|0; //@line 1162 "../../iup_attrib.c"
 $15 = $4; //@line 1162 "../../iup_attrib.c"
 $16 = (_iupTableGet($14,$15)|0); //@line 1162 "../../iup_attrib.c"
 $5 = $16; //@line 1162 "../../iup_attrib.c"
 $17 = $5; //@line 1164 "../../iup_attrib.c"
 $18 = ($17|0)!=(0|0); //@line 1164 "../../iup_attrib.c"
 do {
  if (!($18)) {
   $19 = $4; //@line 1164 "../../iup_attrib.c"
   $20 = HEAP8[$19>>0]|0; //@line 1164 "../../iup_attrib.c"
   $21 = $20 << 24 >> 24; //@line 1164 "../../iup_attrib.c"
   $22 = ($21|0)==(95); //@line 1164 "../../iup_attrib.c"
   if ($22) {
    $23 = $4; //@line 1164 "../../iup_attrib.c"
    $24 = ((($23)) + 1|0); //@line 1164 "../../iup_attrib.c"
    $25 = HEAP8[$24>>0]|0; //@line 1164 "../../iup_attrib.c"
    $26 = $25 << 24 >> 24; //@line 1164 "../../iup_attrib.c"
    $27 = ($26|0)==(73); //@line 1164 "../../iup_attrib.c"
    if ($27) {
     $28 = $4; //@line 1164 "../../iup_attrib.c"
     $29 = ((($28)) + 2|0); //@line 1164 "../../iup_attrib.c"
     $30 = HEAP8[$29>>0]|0; //@line 1164 "../../iup_attrib.c"
     $31 = $30 << 24 >> 24; //@line 1164 "../../iup_attrib.c"
     $32 = ($31|0)==(85); //@line 1164 "../../iup_attrib.c"
     if ($32) {
      $33 = $4; //@line 1164 "../../iup_attrib.c"
      $34 = ((($33)) + 3|0); //@line 1164 "../../iup_attrib.c"
      $35 = HEAP8[$34>>0]|0; //@line 1164 "../../iup_attrib.c"
      $36 = $35 << 24 >> 24; //@line 1164 "../../iup_attrib.c"
      $37 = ($36|0)==(80); //@line 1164 "../../iup_attrib.c"
      if ($37) {
       break;
      }
     }
    }
   }
   $38 = $3; //@line 1168 "../../iup_attrib.c"
   $39 = $4; //@line 1168 "../../iup_attrib.c"
   _iupClassObjectGetAttributeInfo($38,$39,$7,$6); //@line 1168 "../../iup_attrib.c"
   $40 = HEAP32[$6>>2]|0; //@line 1170 "../../iup_attrib.c"
   $41 = ($40|0)!=(0); //@line 1170 "../../iup_attrib.c"
   L12: do {
    if ($41) {
     while(1) {
      $42 = $5; //@line 1172 "../../iup_attrib.c"
      $43 = ($42|0)!=(0|0); //@line 1172 "../../iup_attrib.c"
      $44 = $43 ^ 1; //@line 1172 "../../iup_attrib.c"
      if (!($44)) {
       break L12;
      }
      $45 = $3; //@line 1174 "../../iup_attrib.c"
      $46 = ((($45)) + 60|0); //@line 1174 "../../iup_attrib.c"
      $47 = HEAP32[$46>>2]|0; //@line 1174 "../../iup_attrib.c"
      $3 = $47; //@line 1174 "../../iup_attrib.c"
      $48 = $3; //@line 1175 "../../iup_attrib.c"
      $49 = ($48|0)!=(0|0); //@line 1175 "../../iup_attrib.c"
      if (!($49)) {
       break L12;
      }
      $50 = $3; //@line 1178 "../../iup_attrib.c"
      $51 = $4; //@line 1178 "../../iup_attrib.c"
      $52 = (_iupAttribGet($50,$51)|0); //@line 1178 "../../iup_attrib.c"
      $5 = $52; //@line 1178 "../../iup_attrib.c"
     }
    }
   } while(0);
   $53 = $5; //@line 1182 "../../iup_attrib.c"
   $54 = ($53|0)!=(0|0); //@line 1182 "../../iup_attrib.c"
   if (!($54)) {
    $55 = HEAP32[$7>>2]|0; //@line 1183 "../../iup_attrib.c"
    $5 = $55; //@line 1183 "../../iup_attrib.c"
   }
  }
 } while(0);
 $56 = $5; //@line 1186 "../../iup_attrib.c"
 $2 = $56; //@line 1186 "../../iup_attrib.c"
 $57 = $2; //@line 1187 "../../iup_attrib.c"
 STACKTOP = sp;return ($57|0); //@line 1187 "../../iup_attrib.c"
}
function _iupAttribGetBoolean($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 1107 "../../iup_attrib.c"
 $7 = $4; //@line 1107 "../../iup_attrib.c"
 $8 = (_iupAttribGetStr($6,$7)|0); //@line 1107 "../../iup_attrib.c"
 $5 = $8; //@line 1107 "../../iup_attrib.c"
 $9 = $5; //@line 1108 "../../iup_attrib.c"
 $10 = ($9|0)!=(0|0); //@line 1108 "../../iup_attrib.c"
 if ($10) {
  $11 = $5; //@line 1110 "../../iup_attrib.c"
  $12 = (_iupStrBoolean($11)|0); //@line 1110 "../../iup_attrib.c"
  $13 = ($12|0)!=(0); //@line 1110 "../../iup_attrib.c"
  if ($13) {
   $2 = 1; //@line 1111 "../../iup_attrib.c"
   $14 = $2; //@line 1114 "../../iup_attrib.c"
   STACKTOP = sp;return ($14|0); //@line 1114 "../../iup_attrib.c"
  }
 }
 $2 = 0; //@line 1113 "../../iup_attrib.c"
 $14 = $2; //@line 1114 "../../iup_attrib.c"
 STACKTOP = sp;return ($14|0); //@line 1114 "../../iup_attrib.c"
}
function _iupAttribGetInherit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 1213 "../../iup_attrib.c"
 $7 = ($6|0)!=(0|0); //@line 1213 "../../iup_attrib.c"
 $8 = $4; //@line 1213 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 1213 "../../iup_attrib.c"
 $or$cond = $7 & $9; //@line 1213 "../../iup_attrib.c"
 if (!($or$cond)) {
  $2 = 0; //@line 1214 "../../iup_attrib.c"
  $25 = $2; //@line 1226 "../../iup_attrib.c"
  STACKTOP = sp;return ($25|0); //@line 1226 "../../iup_attrib.c"
 }
 $10 = $3; //@line 1216 "../../iup_attrib.c"
 $11 = $4; //@line 1216 "../../iup_attrib.c"
 $12 = (_iupAttribGet($10,$11)|0); //@line 1216 "../../iup_attrib.c"
 $5 = $12; //@line 1216 "../../iup_attrib.c"
 while(1) {
  $13 = $5; //@line 1217 "../../iup_attrib.c"
  $14 = ($13|0)!=(0|0); //@line 1217 "../../iup_attrib.c"
  $15 = $14 ^ 1; //@line 1217 "../../iup_attrib.c"
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = $3; //@line 1219 "../../iup_attrib.c"
  $17 = ((($16)) + 60|0); //@line 1219 "../../iup_attrib.c"
  $18 = HEAP32[$17>>2]|0; //@line 1219 "../../iup_attrib.c"
  $3 = $18; //@line 1219 "../../iup_attrib.c"
  $19 = $3; //@line 1220 "../../iup_attrib.c"
  $20 = ($19|0)!=(0|0); //@line 1220 "../../iup_attrib.c"
  if (!($20)) {
   label = 6;
   break;
  }
  $21 = $3; //@line 1223 "../../iup_attrib.c"
  $22 = $4; //@line 1223 "../../iup_attrib.c"
  $23 = (_iupAttribGet($21,$22)|0); //@line 1223 "../../iup_attrib.c"
  $5 = $23; //@line 1223 "../../iup_attrib.c"
 }
 if ((label|0) == 6) {
  $2 = 0; //@line 1221 "../../iup_attrib.c"
  $25 = $2; //@line 1226 "../../iup_attrib.c"
  STACKTOP = sp;return ($25|0); //@line 1226 "../../iup_attrib.c"
 }
 else if ((label|0) == 8) {
  $24 = $5; //@line 1225 "../../iup_attrib.c"
  $2 = $24; //@line 1225 "../../iup_attrib.c"
  $25 = $2; //@line 1226 "../../iup_attrib.c"
  STACKTOP = sp;return ($25|0); //@line 1226 "../../iup_attrib.c"
 }
 return (0)|0;
}
function _iupAttribGetInheritNativeParent($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 1231 "../../iup_attrib.c"
 $7 = ($6|0)!=(0|0); //@line 1231 "../../iup_attrib.c"
 $8 = $4; //@line 1231 "../../iup_attrib.c"
 $9 = ($8|0)!=(0|0); //@line 1231 "../../iup_attrib.c"
 $or$cond = $7 & $9; //@line 1231 "../../iup_attrib.c"
 if (!($or$cond)) {
  $2 = 0; //@line 1232 "../../iup_attrib.c"
  $21 = $2; //@line 1245 "../../iup_attrib.c"
  STACKTOP = sp;return ($21|0); //@line 1245 "../../iup_attrib.c"
 }
 $5 = 0; //@line 1234 "../../iup_attrib.c"
 while(1) {
  $10 = $5; //@line 1235 "../../iup_attrib.c"
  $11 = ($10|0)!=(0|0); //@line 1235 "../../iup_attrib.c"
  $12 = $11 ^ 1; //@line 1235 "../../iup_attrib.c"
  if (!($12)) {
   label = 8;
   break;
  }
  $13 = $3; //@line 1237 "../../iup_attrib.c"
  $14 = (_iupChildTreeGetNativeParent($13)|0); //@line 1237 "../../iup_attrib.c"
  $3 = $14; //@line 1237 "../../iup_attrib.c"
  $15 = $3; //@line 1238 "../../iup_attrib.c"
  $16 = ($15|0)!=(0|0); //@line 1238 "../../iup_attrib.c"
  if (!($16)) {
   label = 6;
   break;
  }
  $17 = $3; //@line 1241 "../../iup_attrib.c"
  $18 = $4; //@line 1241 "../../iup_attrib.c"
  $19 = (_iupAttribGet($17,$18)|0); //@line 1241 "../../iup_attrib.c"
  $5 = $19; //@line 1241 "../../iup_attrib.c"
 }
 if ((label|0) == 6) {
  $2 = 0; //@line 1239 "../../iup_attrib.c"
  $21 = $2; //@line 1245 "../../iup_attrib.c"
  STACKTOP = sp;return ($21|0); //@line 1245 "../../iup_attrib.c"
 }
 else if ((label|0) == 8) {
  $20 = $5; //@line 1244 "../../iup_attrib.c"
  $2 = $20; //@line 1244 "../../iup_attrib.c"
  $21 = $2; //@line 1245 "../../iup_attrib.c"
  STACKTOP = sp;return ($21|0); //@line 1245 "../../iup_attrib.c"
 }
 return (0)|0;
}
function _IupConvertXYToPos($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4; //@line 1384 "../../iup_attrib.c"
 $9 = (_iupObjectCheck($8)|0); //@line 1384 "../../iup_attrib.c"
 $10 = ($9|0)!=(0); //@line 1384 "../../iup_attrib.c"
 do {
  if ($10) {
   $11 = $4; //@line 1387 "../../iup_attrib.c"
   $12 = ((($11)) + 16|0); //@line 1387 "../../iup_attrib.c"
   $13 = HEAP32[$12>>2]|0; //@line 1387 "../../iup_attrib.c"
   $14 = ($13|0)!=(0|0); //@line 1387 "../../iup_attrib.c"
   if (!($14)) {
    $3 = -1; //@line 1388 "../../iup_attrib.c"
    break;
   }
   $15 = $4; //@line 1390 "../../iup_attrib.c"
   $16 = (_IupGetCallback($15,1739)|0); //@line 1390 "../../iup_attrib.c"
   $7 = $16; //@line 1390 "../../iup_attrib.c"
   $17 = $7; //@line 1391 "../../iup_attrib.c"
   $18 = ($17|0)!=(0|0); //@line 1391 "../../iup_attrib.c"
   if ($18) {
    $19 = $7; //@line 1392 "../../iup_attrib.c"
    $20 = $4; //@line 1392 "../../iup_attrib.c"
    $21 = $5; //@line 1392 "../../iup_attrib.c"
    $22 = $6; //@line 1392 "../../iup_attrib.c"
    $23 = (FUNCTION_TABLE_iiii[$19 & 1023]($20,$21,$22)|0); //@line 1392 "../../iup_attrib.c"
    $3 = $23; //@line 1392 "../../iup_attrib.c"
    break;
   } else {
    $3 = -1; //@line 1394 "../../iup_attrib.c"
    break;
   }
  } else {
   $3 = -1; //@line 1385 "../../iup_attrib.c"
  }
 } while(0);
 $24 = $3; //@line 1395 "../../iup_attrib.c"
 STACKTOP = sp;return ($24|0); //@line 1395 "../../iup_attrib.c"
}
function _iupBackgroundBoxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (_iupRegisterFindClass(15430)|0); //@line 119 "../../iup_backgroundbox.c"
 $3 = (_iupClassNew($2)|0); //@line 119 "../../iup_backgroundbox.c"
 $0 = $3; //@line 119 "../../iup_backgroundbox.c"
 $4 = $0; //@line 121 "../../iup_backgroundbox.c"
 HEAP32[$4>>2] = 1754; //@line 121 "../../iup_backgroundbox.c"
 $5 = $0; //@line 122 "../../iup_backgroundbox.c"
 $6 = ((($5)) + 4|0); //@line 122 "../../iup_backgroundbox.c"
 HEAP32[$6>>2] = 15852; //@line 122 "../../iup_backgroundbox.c"
 $7 = $0; //@line 123 "../../iup_backgroundbox.c"
 $8 = ((($7)) + 8|0); //@line 123 "../../iup_backgroundbox.c"
 HEAP32[$8>>2] = 2; //@line 123 "../../iup_backgroundbox.c"
 $9 = $0; //@line 124 "../../iup_backgroundbox.c"
 $10 = ((($9)) + 12|0); //@line 124 "../../iup_backgroundbox.c"
 HEAP32[$10>>2] = 2; //@line 124 "../../iup_backgroundbox.c"
 $11 = $0; //@line 125 "../../iup_backgroundbox.c"
 $12 = ((($11)) + 16|0); //@line 125 "../../iup_backgroundbox.c"
 HEAP32[$12>>2] = 0; //@line 125 "../../iup_backgroundbox.c"
 $13 = $0; //@line 128 "../../iup_backgroundbox.c"
 $14 = ((($13)) + 32|0); //@line 128 "../../iup_backgroundbox.c"
 HEAP32[$14>>2] = 15; //@line 128 "../../iup_backgroundbox.c"
 $15 = $0; //@line 129 "../../iup_backgroundbox.c"
 $16 = ((($15)) + 40|0); //@line 129 "../../iup_backgroundbox.c"
 HEAP32[$16>>2] = 16; //@line 129 "../../iup_backgroundbox.c"
 $17 = $0; //@line 131 "../../iup_backgroundbox.c"
 $18 = ((($17)) + 76|0); //@line 131 "../../iup_backgroundbox.c"
 HEAP32[$18>>2] = 17; //@line 131 "../../iup_backgroundbox.c"
 $19 = $0; //@line 132 "../../iup_backgroundbox.c"
 $20 = ((($19)) + 80|0); //@line 132 "../../iup_backgroundbox.c"
 HEAP32[$20>>2] = 18; //@line 132 "../../iup_backgroundbox.c"
 $21 = $0; //@line 133 "../../iup_backgroundbox.c"
 $22 = ((($21)) + 84|0); //@line 133 "../../iup_backgroundbox.c"
 HEAP32[$22>>2] = 19; //@line 133 "../../iup_backgroundbox.c"
 $23 = $0; //@line 136 "../../iup_backgroundbox.c"
 _iupClassRegisterAttribute($23,20073,20,0,(-1),20441,9); //@line 136 "../../iup_backgroundbox.c"
 $24 = $0; //@line 137 "../../iup_backgroundbox.c"
 _iupClassRegisterAttribute($24,20091,21,0,0,0,41); //@line 137 "../../iup_backgroundbox.c"
 HEAP32[$1>>2] = 0; //@line 139 "../../iup_backgroundbox.c"
 $25 = $0; //@line 140 "../../iup_backgroundbox.c"
 _iupClassRegisterGetAttribute($25,15447,$1,0,0,0,0); //@line 140 "../../iup_backgroundbox.c"
 $26 = $0; //@line 141 "../../iup_backgroundbox.c"
 $27 = HEAP32[$1>>2]|0; //@line 141 "../../iup_backgroundbox.c"
 _iupClassRegisterAttribute($26,20080,$27,0,0,0,33); //@line 141 "../../iup_backgroundbox.c"
 $28 = $0; //@line 145 "../../iup_backgroundbox.c"
 _iupClassRegisterAttribute($28,17403,0,0,0,0,9); //@line 145 "../../iup_backgroundbox.c"
 $29 = $0; //@line 148 "../../iup_backgroundbox.c"
 _iupClassRegisterAttribute($29,20290,22,23,(-1),20331,512); //@line 148 "../../iup_backgroundbox.c"
 $30 = $0; //@line 149 "../../iup_backgroundbox.c"
 _iupClassRegisterReplaceAttribDef($30,17637,20140,0); //@line 149 "../../iup_backgroundbox.c"
 $31 = $0; //@line 150 "../../iup_backgroundbox.c"
 _iupClassRegisterReplaceAttribFlags($31,17637,1); //@line 150 "../../iup_backgroundbox.c"
 $32 = $0; //@line 151 "../../iup_backgroundbox.c"
 _iupClassRegisterReplaceAttribDef($32,17508,20140,0); //@line 151 "../../iup_backgroundbox.c"
 $33 = $0; //@line 153 "../../iup_backgroundbox.c"
 STACKTOP = sp;return ($33|0); //@line 153 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 106 "../../iup_backgroundbox.c"
 _IupSetAttribute($5,15995,20140); //@line 106 "../../iup_backgroundbox.c"
 $6 = $3; //@line 108 "../../iup_backgroundbox.c"
 $7 = ($6|0)!=(0|0); //@line 108 "../../iup_backgroundbox.c"
 if (!($7)) {
  STACKTOP = sp;return 0; //@line 114 "../../iup_backgroundbox.c"
 }
 $8 = $3; //@line 110 "../../iup_backgroundbox.c"
 $4 = $8; //@line 110 "../../iup_backgroundbox.c"
 $9 = $4; //@line 111 "../../iup_backgroundbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 111 "../../iup_backgroundbox.c"
 $11 = ($10|0)!=(0|0); //@line 111 "../../iup_backgroundbox.c"
 if (!($11)) {
  STACKTOP = sp;return 0; //@line 114 "../../iup_backgroundbox.c"
 }
 $12 = $2; //@line 111 "../../iup_backgroundbox.c"
 $13 = $4; //@line 111 "../../iup_backgroundbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 111 "../../iup_backgroundbox.c"
 (_IupAppend($12,$14)|0); //@line 111 "../../iup_backgroundbox.c"
 STACKTOP = sp;return 0; //@line 114 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 65 "../../iup_backgroundbox.c"
 $10 = ((($9)) + 64|0); //@line 65 "../../iup_backgroundbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 65 "../../iup_backgroundbox.c"
 $12 = ($11|0)!=(0|0); //@line 65 "../../iup_backgroundbox.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 75 "../../iup_backgroundbox.c"
 }
 $13 = $4; //@line 67 "../../iup_backgroundbox.c"
 $14 = (_iBackgroundBoxGetBorder($13)|0); //@line 67 "../../iup_backgroundbox.c"
 $8 = $14; //@line 67 "../../iup_backgroundbox.c"
 $15 = $4; //@line 69 "../../iup_backgroundbox.c"
 $16 = ((($15)) + 64|0); //@line 69 "../../iup_backgroundbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 69 "../../iup_backgroundbox.c"
 _iupBaseComputeNaturalSize($17); //@line 69 "../../iup_backgroundbox.c"
 $18 = $4; //@line 71 "../../iup_backgroundbox.c"
 $19 = ((($18)) + 64|0); //@line 71 "../../iup_backgroundbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 71 "../../iup_backgroundbox.c"
 $21 = ((($20)) + 20|0); //@line 71 "../../iup_backgroundbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 71 "../../iup_backgroundbox.c"
 $23 = $7; //@line 71 "../../iup_backgroundbox.c"
 HEAP32[$23>>2] = $22; //@line 71 "../../iup_backgroundbox.c"
 $24 = $4; //@line 72 "../../iup_backgroundbox.c"
 $25 = ((($24)) + 64|0); //@line 72 "../../iup_backgroundbox.c"
 $26 = HEAP32[$25>>2]|0; //@line 72 "../../iup_backgroundbox.c"
 $27 = ((($26)) + 44|0); //@line 72 "../../iup_backgroundbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 72 "../../iup_backgroundbox.c"
 $29 = $8; //@line 72 "../../iup_backgroundbox.c"
 $30 = $29<<1; //@line 72 "../../iup_backgroundbox.c"
 $31 = (($28) + ($30))|0; //@line 72 "../../iup_backgroundbox.c"
 $32 = $5; //@line 72 "../../iup_backgroundbox.c"
 HEAP32[$32>>2] = $31; //@line 72 "../../iup_backgroundbox.c"
 $33 = $4; //@line 73 "../../iup_backgroundbox.c"
 $34 = ((($33)) + 64|0); //@line 73 "../../iup_backgroundbox.c"
 $35 = HEAP32[$34>>2]|0; //@line 73 "../../iup_backgroundbox.c"
 $36 = ((($35)) + 48|0); //@line 73 "../../iup_backgroundbox.c"
 $37 = HEAP32[$36>>2]|0; //@line 73 "../../iup_backgroundbox.c"
 $38 = $8; //@line 73 "../../iup_backgroundbox.c"
 $39 = $38<<1; //@line 73 "../../iup_backgroundbox.c"
 $40 = (($37) + ($39))|0; //@line 73 "../../iup_backgroundbox.c"
 $41 = $6; //@line 73 "../../iup_backgroundbox.c"
 HEAP32[$41>>2] = $40; //@line 73 "../../iup_backgroundbox.c"
 STACKTOP = sp;return; //@line 75 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $2; //@line 79 "../../iup_backgroundbox.c"
 $8 = ((($7)) + 64|0); //@line 79 "../../iup_backgroundbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 79 "../../iup_backgroundbox.c"
 $10 = ($9|0)!=(0|0); //@line 79 "../../iup_backgroundbox.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 86 "../../iup_backgroundbox.c"
 }
 $11 = $2; //@line 81 "../../iup_backgroundbox.c"
 $12 = (_iBackgroundBoxGetBorder($11)|0); //@line 81 "../../iup_backgroundbox.c"
 $4 = $12; //@line 81 "../../iup_backgroundbox.c"
 $13 = $2; //@line 82 "../../iup_backgroundbox.c"
 $14 = ((($13)) + 52|0); //@line 82 "../../iup_backgroundbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 82 "../../iup_backgroundbox.c"
 $16 = $4; //@line 82 "../../iup_backgroundbox.c"
 $17 = ($15|0)>($16|0); //@line 82 "../../iup_backgroundbox.c"
 if ($17) {
  $18 = $2; //@line 82 "../../iup_backgroundbox.c"
  $19 = ((($18)) + 52|0); //@line 82 "../../iup_backgroundbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 82 "../../iup_backgroundbox.c"
  $21 = $4; //@line 82 "../../iup_backgroundbox.c"
  $22 = (($20) - ($21))|0; //@line 82 "../../iup_backgroundbox.c"
  $23 = $22;
 } else {
  $23 = 0;
 }
 $5 = $23; //@line 82 "../../iup_backgroundbox.c"
 $24 = $2; //@line 83 "../../iup_backgroundbox.c"
 $25 = ((($24)) + 56|0); //@line 83 "../../iup_backgroundbox.c"
 $26 = HEAP32[$25>>2]|0; //@line 83 "../../iup_backgroundbox.c"
 $27 = $4; //@line 83 "../../iup_backgroundbox.c"
 $28 = ($26|0)>($27|0); //@line 83 "../../iup_backgroundbox.c"
 if ($28) {
  $29 = $2; //@line 83 "../../iup_backgroundbox.c"
  $30 = ((($29)) + 56|0); //@line 83 "../../iup_backgroundbox.c"
  $31 = HEAP32[$30>>2]|0; //@line 83 "../../iup_backgroundbox.c"
  $32 = $4; //@line 83 "../../iup_backgroundbox.c"
  $33 = (($31) - ($32))|0; //@line 83 "../../iup_backgroundbox.c"
  $34 = $33;
 } else {
  $34 = 0;
 }
 $6 = $34; //@line 83 "../../iup_backgroundbox.c"
 $35 = $2; //@line 84 "../../iup_backgroundbox.c"
 $36 = ((($35)) + 64|0); //@line 84 "../../iup_backgroundbox.c"
 $37 = HEAP32[$36>>2]|0; //@line 84 "../../iup_backgroundbox.c"
 $38 = $5; //@line 84 "../../iup_backgroundbox.c"
 $39 = $6; //@line 84 "../../iup_backgroundbox.c"
 $40 = $3; //@line 84 "../../iup_backgroundbox.c"
 _iupBaseSetCurrentSize($37,$38,$39,$40); //@line 84 "../../iup_backgroundbox.c"
 STACKTOP = sp;return; //@line 86 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 $7 = $3; //@line 90 "../../iup_backgroundbox.c"
 $8 = ((($7)) + 64|0); //@line 90 "../../iup_backgroundbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 90 "../../iup_backgroundbox.c"
 $10 = ($9|0)!=(0|0); //@line 90 "../../iup_backgroundbox.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 102 "../../iup_backgroundbox.c"
 }
 $11 = $3; //@line 92 "../../iup_backgroundbox.c"
 $12 = (_iupAttribGet($11,17403)|0); //@line 92 "../../iup_backgroundbox.c"
 $6 = $12; //@line 92 "../../iup_backgroundbox.c"
 HEAP32[$4>>2] = 0; //@line 95 "../../iup_backgroundbox.c"
 HEAP32[$5>>2] = 0; //@line 96 "../../iup_backgroundbox.c"
 $13 = $6; //@line 98 "../../iup_backgroundbox.c"
 $14 = ($13|0)!=(0|0); //@line 98 "../../iup_backgroundbox.c"
 if ($14) {
  $15 = $6; //@line 98 "../../iup_backgroundbox.c"
  (_iupStrToIntInt($15,$4,$5,120)|0); //@line 98 "../../iup_backgroundbox.c"
 }
 $16 = $3; //@line 100 "../../iup_backgroundbox.c"
 $17 = ((($16)) + 64|0); //@line 100 "../../iup_backgroundbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 100 "../../iup_backgroundbox.c"
 $19 = HEAP32[$4>>2]|0; //@line 100 "../../iup_backgroundbox.c"
 $20 = HEAP32[$5>>2]|0; //@line 100 "../../iup_backgroundbox.c"
 _iupBaseSetPosition($18,$19,$20); //@line 100 "../../iup_backgroundbox.c"
 STACKTOP = sp;return; //@line 102 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxGetClientOffsetAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0; //@line 54 "../../iup_backgroundbox.c"
 $3 = 0; //@line 54 "../../iup_backgroundbox.c"
 $4 = $1; //@line 55 "../../iup_backgroundbox.c"
 $5 = (_iupAttribGetBoolean($4,17637)|0); //@line 55 "../../iup_backgroundbox.c"
 $6 = ($5|0)!=(0); //@line 55 "../../iup_backgroundbox.c"
 if ($6) {
  $2 = 1; //@line 57 "../../iup_backgroundbox.c"
  $3 = 1; //@line 58 "../../iup_backgroundbox.c"
 }
 $7 = $2; //@line 60 "../../iup_backgroundbox.c"
 $8 = $3; //@line 60 "../../iup_backgroundbox.c"
 $9 = (_iupStrReturnIntInt($7,$8,120)|0); //@line 60 "../../iup_backgroundbox.c"
 STACKTOP = sp;return ($9|0); //@line 60 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxGetBgColorAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 31 "../../iup_backgroundbox.c"
 $4 = (_iupAttribGet($3,20290)|0); //@line 31 "../../iup_backgroundbox.c"
 $5 = ($4|0)!=(0|0); //@line 31 "../../iup_backgroundbox.c"
 if ($5) {
  $1 = 0; //@line 32 "../../iup_backgroundbox.c"
 } else {
  $6 = $2; //@line 34 "../../iup_backgroundbox.c"
  $7 = (_iupBaseNativeParentGetBgColorAttrib($6)|0); //@line 34 "../../iup_backgroundbox.c"
  $1 = $7; //@line 34 "../../iup_backgroundbox.c"
 }
 $8 = $1; //@line 35 "../../iup_backgroundbox.c"
 STACKTOP = sp;return ($8|0); //@line 35 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxSetBgColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 40 "../../iup_backgroundbox.c"
 _IupUpdate($4); //@line 40 "../../iup_backgroundbox.c"
 STACKTOP = sp;return 1; //@line 41 "../../iup_backgroundbox.c"
}
function _iBackgroundBoxGetBorder($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 46 "../../iup_backgroundbox.c"
 $4 = (_iupAttribGetBoolean($3,17637)|0); //@line 46 "../../iup_backgroundbox.c"
 $5 = ($4|0)!=(0); //@line 46 "../../iup_backgroundbox.c"
 if ($5) {
  $1 = 1; //@line 47 "../../iup_backgroundbox.c"
 } else {
  $1 = 0; //@line 49 "../../iup_backgroundbox.c"
 }
 $6 = $1; //@line 50 "../../iup_backgroundbox.c"
 STACKTOP = sp;return ($6|0); //@line 50 "../../iup_backgroundbox.c"
}
function _IupBackgroundBox($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 159 "../../iup_backgroundbox.c"
 HEAP32[$2>>2] = $3; //@line 159 "../../iup_backgroundbox.c"
 $4 = ((($2)) + 4|0); //@line 160 "../../iup_backgroundbox.c"
 HEAP32[$4>>2] = 0; //@line 160 "../../iup_backgroundbox.c"
 $5 = (_IupCreatev(1754,$2)|0); //@line 161 "../../iup_backgroundbox.c"
 STACKTOP = sp;return ($5|0); //@line 161 "../../iup_backgroundbox.c"
}
function _iupBoxNewClassBase() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 197 "../../iup_box.c"
 $0 = $1; //@line 197 "../../iup_box.c"
 $2 = $0; //@line 199 "../../iup_box.c"
 $3 = ((($2)) + 4|0); //@line 199 "../../iup_box.c"
 HEAP32[$3>>2] = 20071; //@line 199 "../../iup_box.c"
 $4 = $0; //@line 200 "../../iup_box.c"
 $5 = ((($4)) + 8|0); //@line 200 "../../iup_box.c"
 HEAP32[$5>>2] = 0; //@line 200 "../../iup_box.c"
 $6 = $0; //@line 201 "../../iup_box.c"
 $7 = ((($6)) + 12|0); //@line 201 "../../iup_box.c"
 HEAP32[$7>>2] = 1; //@line 201 "../../iup_box.c"
 $8 = $0; //@line 202 "../../iup_box.c"
 $9 = ((($8)) + 16|0); //@line 202 "../../iup_box.c"
 HEAP32[$9>>2] = 0; //@line 202 "../../iup_box.c"
 $10 = $0; //@line 205 "../../iup_box.c"
 $11 = ((($10)) + 32|0); //@line 205 "../../iup_box.c"
 HEAP32[$11>>2] = 24; //@line 205 "../../iup_box.c"
 $12 = $0; //@line 206 "../../iup_box.c"
 $13 = ((($12)) + 40|0); //@line 206 "../../iup_box.c"
 HEAP32[$13>>2] = 25; //@line 206 "../../iup_box.c"
 $14 = $0; //@line 207 "../../iup_box.c"
 $15 = ((($14)) + 44|0); //@line 207 "../../iup_box.c"
 HEAP32[$15>>2] = 26; //@line 207 "../../iup_box.c"
 $16 = $0; //@line 210 "../../iup_box.c"
 _iupBaseRegisterCommonAttrib($16); //@line 210 "../../iup_box.c"
 $17 = $0; //@line 213 "../../iup_box.c"
 _iupClassRegisterAttribute($17,20073,20,0,(-1),20441,9); //@line 213 "../../iup_box.c"
 $18 = $0; //@line 214 "../../iup_box.c"
 _iupClassRegisterAttribute($18,20080,27,0,0,0,41); //@line 214 "../../iup_box.c"
 $19 = $0; //@line 215 "../../iup_box.c"
 _iupClassRegisterAttribute($19,20091,28,0,0,0,41); //@line 215 "../../iup_box.c"
 $20 = $0; //@line 218 "../../iup_box.c"
 _iupClassRegisterAttribute($20,20659,29,30,(-1),19944,8); //@line 218 "../../iup_box.c"
 $21 = $0; //@line 219 "../../iup_box.c"
 _iupClassRegisterAttribute($21,1768,31,32,(-1),19944,520); //@line 219 "../../iup_box.c"
 $22 = $0; //@line 220 "../../iup_box.c"
 _iupClassRegisterAttribute($22,1773,29,30,(-1),19944,521); //@line 220 "../../iup_box.c"
 $23 = $0; //@line 221 "../../iup_box.c"
 _iupClassRegisterAttribute($23,1778,31,32,(-1),19944,521); //@line 221 "../../iup_box.c"
 $24 = $0; //@line 222 "../../iup_box.c"
 _iupClassRegisterAttribute($24,20666,33,34,(-1),15836,8); //@line 222 "../../iup_box.c"
 $25 = $0; //@line 223 "../../iup_box.c"
 _iupClassRegisterAttribute($25,13322,35,36,(-1),15836,520); //@line 223 "../../iup_box.c"
 $26 = $0; //@line 224 "../../iup_box.c"
 _iupClassRegisterAttribute($26,13330,33,34,(-1),15836,521); //@line 224 "../../iup_box.c"
 $27 = $0; //@line 225 "../../iup_box.c"
 _iupClassRegisterAttribute($27,13338,35,36,(-1),15836,521); //@line 225 "../../iup_box.c"
 $28 = $0; //@line 227 "../../iup_box.c"
 _iupClassRegisterAttribute($28,13347,37,38,0,0,9); //@line 227 "../../iup_box.c"
 $29 = $0; //@line 228 "../../iup_box.c"
 _iupClassRegisterAttribute($29,1784,39,40,0,0,9); //@line 228 "../../iup_box.c"
 $30 = $0; //@line 229 "../../iup_box.c"
 _iupClassRegisterAttribute($30,13392,41,42,(-1),14846,9); //@line 229 "../../iup_box.c"
 $31 = $0; //@line 231 "../../iup_box.c"
 STACKTOP = sp;return ($31|0); //@line 231 "../../iup_box.c"
}
function _iBoxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = (_calloc(1,36)|0); //@line 178 "../../iup_box.c"
 $6 = $2; //@line 178 "../../iup_box.c"
 $7 = ((($6)) + 72|0); //@line 178 "../../iup_box.c"
 HEAP32[$7>>2] = $5; //@line 178 "../../iup_box.c"
 $8 = $3; //@line 180 "../../iup_box.c"
 $9 = ($8|0)!=(0|0); //@line 180 "../../iup_box.c"
 if (!($9)) {
  $19 = $2; //@line 190 "../../iup_box.c"
  (_IupSetCallback($19,13577,43)|0); //@line 190 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 192 "../../iup_box.c"
 }
 $10 = $3; //@line 182 "../../iup_box.c"
 $4 = $10; //@line 182 "../../iup_box.c"
 while(1) {
  $11 = $4; //@line 183 "../../iup_box.c"
  $12 = HEAP32[$11>>2]|0; //@line 183 "../../iup_box.c"
  $13 = ($12|0)!=(0|0); //@line 183 "../../iup_box.c"
  if (!($13)) {
   break;
  }
  $14 = $2; //@line 185 "../../iup_box.c"
  $15 = $4; //@line 185 "../../iup_box.c"
  $16 = HEAP32[$15>>2]|0; //@line 185 "../../iup_box.c"
  (_IupAppend($14,$16)|0); //@line 185 "../../iup_box.c"
  $17 = $4; //@line 186 "../../iup_box.c"
  $18 = ((($17)) + 4|0); //@line 186 "../../iup_box.c"
  $4 = $18; //@line 186 "../../iup_box.c"
 }
 $19 = $2; //@line 190 "../../iup_box.c"
 (_IupSetCallback($19,13577,43)|0); //@line 190 "../../iup_box.c"
 STACKTOP = sp;return 0; //@line 192 "../../iup_box.c"
}
function _iBoxGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 26 "../../iup_box.c"
 $5 = ((($4)) + 52|0); //@line 26 "../../iup_box.c"
 $6 = HEAP32[$5>>2]|0; //@line 26 "../../iup_box.c"
 $2 = $6; //@line 26 "../../iup_box.c"
 $7 = $1; //@line 27 "../../iup_box.c"
 $8 = ((($7)) + 56|0); //@line 27 "../../iup_box.c"
 $9 = HEAP32[$8>>2]|0; //@line 27 "../../iup_box.c"
 $3 = $9; //@line 27 "../../iup_box.c"
 $10 = $1; //@line 28 "../../iup_box.c"
 $11 = ((($10)) + 72|0); //@line 28 "../../iup_box.c"
 $12 = HEAP32[$11>>2]|0; //@line 28 "../../iup_box.c"
 $13 = ((($12)) + 16|0); //@line 28 "../../iup_box.c"
 $14 = HEAP32[$13>>2]|0; //@line 28 "../../iup_box.c"
 $15 = $14<<1; //@line 28 "../../iup_box.c"
 $16 = $2; //@line 28 "../../iup_box.c"
 $17 = (($16) - ($15))|0; //@line 28 "../../iup_box.c"
 $2 = $17; //@line 28 "../../iup_box.c"
 $18 = $1; //@line 29 "../../iup_box.c"
 $19 = ((($18)) + 72|0); //@line 29 "../../iup_box.c"
 $20 = HEAP32[$19>>2]|0; //@line 29 "../../iup_box.c"
 $21 = ((($20)) + 20|0); //@line 29 "../../iup_box.c"
 $22 = HEAP32[$21>>2]|0; //@line 29 "../../iup_box.c"
 $23 = $22<<1; //@line 29 "../../iup_box.c"
 $24 = $3; //@line 29 "../../iup_box.c"
 $25 = (($24) - ($23))|0; //@line 29 "../../iup_box.c"
 $3 = $25; //@line 29 "../../iup_box.c"
 $26 = $2; //@line 30 "../../iup_box.c"
 $27 = ($26|0)<(0); //@line 30 "../../iup_box.c"
 if ($27) {
  $2 = 0; //@line 30 "../../iup_box.c"
 }
 $28 = $3; //@line 31 "../../iup_box.c"
 $29 = ($28|0)<(0); //@line 31 "../../iup_box.c"
 if (!($29)) {
  $30 = $2; //@line 32 "../../iup_box.c"
  $31 = $3; //@line 32 "../../iup_box.c"
  $32 = (_iupStrReturnIntInt($30,$31,120)|0); //@line 32 "../../iup_box.c"
  STACKTOP = sp;return ($32|0); //@line 32 "../../iup_box.c"
 }
 $3 = 0; //@line 31 "../../iup_box.c"
 $30 = $2; //@line 32 "../../iup_box.c"
 $31 = $3; //@line 32 "../../iup_box.c"
 $32 = (_iupStrReturnIntInt($30,$31,120)|0); //@line 32 "../../iup_box.c"
 STACKTOP = sp;return ($32|0); //@line 32 "../../iup_box.c"
}
function _iBoxGetGapAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 78 "../../iup_box.c"
 $3 = ((($2)) + 72|0); //@line 78 "../../iup_box.c"
 $4 = HEAP32[$3>>2]|0; //@line 78 "../../iup_box.c"
 $5 = ((($4)) + 24|0); //@line 78 "../../iup_box.c"
 $6 = HEAP32[$5>>2]|0; //@line 78 "../../iup_box.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 78 "../../iup_box.c"
 STACKTOP = sp;return ($7|0); //@line 78 "../../iup_box.c"
}
function _iBoxSetGapAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 72 "../../iup_box.c"
 $5 = $2; //@line 72 "../../iup_box.c"
 $6 = ((($5)) + 72|0); //@line 72 "../../iup_box.c"
 $7 = HEAP32[$6>>2]|0; //@line 72 "../../iup_box.c"
 $8 = ((($7)) + 24|0); //@line 72 "../../iup_box.c"
 (_iupStrToInt($4,$8)|0); //@line 72 "../../iup_box.c"
 STACKTOP = sp;return 0; //@line 73 "../../iup_box.c"
}
function _iBoxGetCGapAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0;
 var $28 = 0.0, $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $4 = sp;
 $2 = $0;
 $5 = $2; //@line 56 "../../iup_box.c"
 $6 = (_IupClassMatch($5,19998)|0); //@line 56 "../../iup_box.c"
 $7 = ($6|0)!=(0); //@line 56 "../../iup_box.c"
 $8 = $2; //@line 59 "../../iup_box.c"
 if ($7) {
  _iupdrvFontGetCharSize($8,0,$3); //@line 59 "../../iup_box.c"
  $9 = $2; //@line 60 "../../iup_box.c"
  $10 = ((($9)) + 72|0); //@line 60 "../../iup_box.c"
  $11 = HEAP32[$10>>2]|0; //@line 60 "../../iup_box.c"
  $12 = ((($11)) + 24|0); //@line 60 "../../iup_box.c"
  $13 = HEAP32[$12>>2]|0; //@line 60 "../../iup_box.c"
  $14 = (+($13|0)); //@line 60 "../../iup_box.c"
  $15 = $14 * 8.0; //@line 60 "../../iup_box.c"
  $16 = HEAP32[$3>>2]|0; //@line 60 "../../iup_box.c"
  $17 = (+($16|0)); //@line 60 "../../iup_box.c"
  $18 = $15 / $17; //@line 60 "../../iup_box.c"
  $19 = $18 + 0.5; //@line 60 "../../iup_box.c"
  $20 = (~~(($19))); //@line 60 "../../iup_box.c"
  $21 = (_iupStrReturnInt($20)|0); //@line 60 "../../iup_box.c"
  $1 = $21; //@line 60 "../../iup_box.c"
  $35 = $1; //@line 68 "../../iup_box.c"
  STACKTOP = sp;return ($35|0); //@line 68 "../../iup_box.c"
 } else {
  _iupdrvFontGetCharSize($8,$4,0); //@line 65 "../../iup_box.c"
  $22 = $2; //@line 66 "../../iup_box.c"
  $23 = ((($22)) + 72|0); //@line 66 "../../iup_box.c"
  $24 = HEAP32[$23>>2]|0; //@line 66 "../../iup_box.c"
  $25 = ((($24)) + 24|0); //@line 66 "../../iup_box.c"
  $26 = HEAP32[$25>>2]|0; //@line 66 "../../iup_box.c"
  $27 = (+($26|0)); //@line 66 "../../iup_box.c"
  $28 = $27 * 4.0; //@line 66 "../../iup_box.c"
  $29 = HEAP32[$4>>2]|0; //@line 66 "../../iup_box.c"
  $30 = (+($29|0)); //@line 66 "../../iup_box.c"
  $31 = $28 / $30; //@line 66 "../../iup_box.c"
  $32 = $31 + 0.5; //@line 66 "../../iup_box.c"
  $33 = (~~(($32))); //@line 66 "../../iup_box.c"
  $34 = (_iupStrReturnInt($33)|0); //@line 66 "../../iup_box.c"
  $1 = $34; //@line 66 "../../iup_box.c"
  $35 = $1; //@line 68 "../../iup_box.c"
  STACKTOP = sp;return ($35|0); //@line 68 "../../iup_box.c"
 }
 return (0)|0;
}
function _iBoxSetCGapAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0.0, $28 = 0.0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp;
 $2 = $0;
 $3 = $1;
 $7 = $3; //@line 38 "../../iup_box.c"
 (_iupStrToInt($7,$4)|0); //@line 38 "../../iup_box.c"
 $8 = $2; //@line 39 "../../iup_box.c"
 $9 = (_IupClassMatch($8,19998)|0); //@line 39 "../../iup_box.c"
 $10 = ($9|0)!=(0); //@line 39 "../../iup_box.c"
 $11 = $2; //@line 42 "../../iup_box.c"
 if ($10) {
  _iupdrvFontGetCharSize($11,0,$5); //@line 42 "../../iup_box.c"
  $12 = HEAP32[$4>>2]|0; //@line 43 "../../iup_box.c"
  $13 = HEAP32[$5>>2]|0; //@line 43 "../../iup_box.c"
  $14 = Math_imul($12, $13)|0; //@line 43 "../../iup_box.c"
  $15 = (+($14|0)); //@line 43 "../../iup_box.c"
  $16 = $15 / 8.0; //@line 43 "../../iup_box.c"
  $17 = $16 + 0.5; //@line 43 "../../iup_box.c"
  $18 = (~~(($17))); //@line 43 "../../iup_box.c"
  $19 = $2; //@line 43 "../../iup_box.c"
  $20 = ((($19)) + 72|0); //@line 43 "../../iup_box.c"
  $21 = HEAP32[$20>>2]|0; //@line 43 "../../iup_box.c"
  $22 = ((($21)) + 24|0); //@line 43 "../../iup_box.c"
  HEAP32[$22>>2] = $18; //@line 43 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 51 "../../iup_box.c"
 } else {
  _iupdrvFontGetCharSize($11,$6,0); //@line 48 "../../iup_box.c"
  $23 = HEAP32[$4>>2]|0; //@line 49 "../../iup_box.c"
  $24 = HEAP32[$6>>2]|0; //@line 49 "../../iup_box.c"
  $25 = Math_imul($23, $24)|0; //@line 49 "../../iup_box.c"
  $26 = (+($25|0)); //@line 49 "../../iup_box.c"
  $27 = $26 / 4.0; //@line 49 "../../iup_box.c"
  $28 = $27 + 0.5; //@line 49 "../../iup_box.c"
  $29 = (~~(($28))); //@line 49 "../../iup_box.c"
  $30 = $2; //@line 49 "../../iup_box.c"
  $31 = ((($30)) + 72|0); //@line 49 "../../iup_box.c"
  $32 = HEAP32[$31>>2]|0; //@line 49 "../../iup_box.c"
  $33 = ((($32)) + 24|0); //@line 49 "../../iup_box.c"
  HEAP32[$33>>2] = $29; //@line 49 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 51 "../../iup_box.c"
 }
 return (0)|0;
}
function _iBoxGetMarginAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 153 "../../iup_box.c"
 $3 = ((($2)) + 72|0); //@line 153 "../../iup_box.c"
 $4 = HEAP32[$3>>2]|0; //@line 153 "../../iup_box.c"
 $5 = ((($4)) + 16|0); //@line 153 "../../iup_box.c"
 $6 = HEAP32[$5>>2]|0; //@line 153 "../../iup_box.c"
 $7 = $1; //@line 153 "../../iup_box.c"
 $8 = ((($7)) + 72|0); //@line 153 "../../iup_box.c"
 $9 = HEAP32[$8>>2]|0; //@line 153 "../../iup_box.c"
 $10 = ((($9)) + 20|0); //@line 153 "../../iup_box.c"
 $11 = HEAP32[$10>>2]|0; //@line 153 "../../iup_box.c"
 $12 = (_iupStrReturnIntInt($6,$11,120)|0); //@line 153 "../../iup_box.c"
 STACKTOP = sp;return ($12|0); //@line 153 "../../iup_box.c"
}
function _iBoxSetMarginAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 147 "../../iup_box.c"
 $5 = $2; //@line 147 "../../iup_box.c"
 $6 = ((($5)) + 72|0); //@line 147 "../../iup_box.c"
 $7 = HEAP32[$6>>2]|0; //@line 147 "../../iup_box.c"
 $8 = ((($7)) + 16|0); //@line 147 "../../iup_box.c"
 $9 = $2; //@line 147 "../../iup_box.c"
 $10 = ((($9)) + 72|0); //@line 147 "../../iup_box.c"
 $11 = HEAP32[$10>>2]|0; //@line 147 "../../iup_box.c"
 $12 = ((($11)) + 20|0); //@line 147 "../../iup_box.c"
 (_iupStrToIntInt($4,$8,$12,120)|0); //@line 147 "../../iup_box.c"
 STACKTOP = sp;return 0; //@line 148 "../../iup_box.c"
}
function _iBoxGetCMarginAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 $4 = $1; //@line 141 "../../iup_box.c"
 _iupdrvFontGetCharSize($4,$2,$3); //@line 141 "../../iup_box.c"
 $5 = $1; //@line 142 "../../iup_box.c"
 $6 = ((($5)) + 72|0); //@line 142 "../../iup_box.c"
 $7 = HEAP32[$6>>2]|0; //@line 142 "../../iup_box.c"
 $8 = ((($7)) + 16|0); //@line 142 "../../iup_box.c"
 $9 = HEAP32[$8>>2]|0; //@line 142 "../../iup_box.c"
 $10 = (+($9|0)); //@line 142 "../../iup_box.c"
 $11 = $10 * 4.0; //@line 142 "../../iup_box.c"
 $12 = HEAP32[$2>>2]|0; //@line 142 "../../iup_box.c"
 $13 = (+($12|0)); //@line 142 "../../iup_box.c"
 $14 = $11 / $13; //@line 142 "../../iup_box.c"
 $15 = $14 + 0.5; //@line 142 "../../iup_box.c"
 $16 = (~~(($15))); //@line 142 "../../iup_box.c"
 $17 = $1; //@line 142 "../../iup_box.c"
 $18 = ((($17)) + 72|0); //@line 142 "../../iup_box.c"
 $19 = HEAP32[$18>>2]|0; //@line 142 "../../iup_box.c"
 $20 = ((($19)) + 20|0); //@line 142 "../../iup_box.c"
 $21 = HEAP32[$20>>2]|0; //@line 142 "../../iup_box.c"
 $22 = (+($21|0)); //@line 142 "../../iup_box.c"
 $23 = $22 * 8.0; //@line 142 "../../iup_box.c"
 $24 = HEAP32[$3>>2]|0; //@line 142 "../../iup_box.c"
 $25 = (+($24|0)); //@line 142 "../../iup_box.c"
 $26 = $23 / $25; //@line 142 "../../iup_box.c"
 $27 = $26 + 0.5; //@line 142 "../../iup_box.c"
 $28 = (~~(($27))); //@line 142 "../../iup_box.c"
 $29 = (_iupStrReturnIntInt($16,$28,120)|0); //@line 142 "../../iup_box.c"
 STACKTOP = sp;return ($29|0); //@line 142 "../../iup_box.c"
}
function _iBoxSetCMarginAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0;
 var $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 HEAP32[$4>>2] = -1; //@line 127 "../../iup_box.c"
 HEAP32[$5>>2] = -1; //@line 127 "../../iup_box.c"
 $8 = $2; //@line 129 "../../iup_box.c"
 _iupdrvFontGetCharSize($8,$6,$7); //@line 129 "../../iup_box.c"
 $9 = $3; //@line 130 "../../iup_box.c"
 (_iupStrToIntInt($9,$4,$5,120)|0); //@line 130 "../../iup_box.c"
 $10 = HEAP32[$4>>2]|0; //@line 131 "../../iup_box.c"
 $11 = ($10|0)!=(-1); //@line 131 "../../iup_box.c"
 if ($11) {
  $12 = HEAP32[$4>>2]|0; //@line 132 "../../iup_box.c"
  $13 = HEAP32[$6>>2]|0; //@line 132 "../../iup_box.c"
  $14 = Math_imul($12, $13)|0; //@line 132 "../../iup_box.c"
  $15 = (+($14|0)); //@line 132 "../../iup_box.c"
  $16 = $15 / 4.0; //@line 132 "../../iup_box.c"
  $17 = $16 + 0.5; //@line 132 "../../iup_box.c"
  $18 = (~~(($17))); //@line 132 "../../iup_box.c"
  $19 = $2; //@line 132 "../../iup_box.c"
  $20 = ((($19)) + 72|0); //@line 132 "../../iup_box.c"
  $21 = HEAP32[$20>>2]|0; //@line 132 "../../iup_box.c"
  $22 = ((($21)) + 16|0); //@line 132 "../../iup_box.c"
  HEAP32[$22>>2] = $18; //@line 132 "../../iup_box.c"
 }
 $23 = HEAP32[$5>>2]|0; //@line 133 "../../iup_box.c"
 $24 = ($23|0)!=(-1); //@line 133 "../../iup_box.c"
 if (!($24)) {
  STACKTOP = sp;return 0; //@line 135 "../../iup_box.c"
 }
 $25 = HEAP32[$5>>2]|0; //@line 134 "../../iup_box.c"
 $26 = HEAP32[$7>>2]|0; //@line 134 "../../iup_box.c"
 $27 = Math_imul($25, $26)|0; //@line 134 "../../iup_box.c"
 $28 = (+($27|0)); //@line 134 "../../iup_box.c"
 $29 = $28 / 8.0; //@line 134 "../../iup_box.c"
 $30 = $29 + 0.5; //@line 134 "../../iup_box.c"
 $31 = (~~(($30))); //@line 134 "../../iup_box.c"
 $32 = $2; //@line 134 "../../iup_box.c"
 $33 = ((($32)) + 72|0); //@line 134 "../../iup_box.c"
 $34 = HEAP32[$33>>2]|0; //@line 134 "../../iup_box.c"
 $35 = ((($34)) + 20|0); //@line 134 "../../iup_box.c"
 HEAP32[$35>>2] = $31; //@line 134 "../../iup_box.c"
 STACKTOP = sp;return 0; //@line 135 "../../iup_box.c"
}
function _iBoxGetExpandChildrenAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 111 "../../iup_box.c"
 $3 = ((($2)) + 72|0); //@line 111 "../../iup_box.c"
 $4 = HEAP32[$3>>2]|0; //@line 111 "../../iup_box.c"
 $5 = ((($4)) + 4|0); //@line 111 "../../iup_box.c"
 $6 = HEAP32[$5>>2]|0; //@line 111 "../../iup_box.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 111 "../../iup_box.c"
 STACKTOP = sp;return ($7|0); //@line 111 "../../iup_box.c"
}
function _iBoxSetExpandChildrenAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 97 "../../iup_box.c"
 $5 = (_iupStrBoolean($4)|0); //@line 97 "../../iup_box.c"
 $6 = ($5|0)!=(0); //@line 97 "../../iup_box.c"
 $7 = $2; //@line 99 "../../iup_box.c"
 if (!($6)) {
  $14 = ((($7)) + 72|0); //@line 105 "../../iup_box.c"
  $15 = HEAP32[$14>>2]|0; //@line 105 "../../iup_box.c"
  $16 = ((($15)) + 4|0); //@line 105 "../../iup_box.c"
  HEAP32[$16>>2] = 0; //@line 105 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 106 "../../iup_box.c"
 }
 $8 = (_IupClassMatch($7,19998)|0); //@line 99 "../../iup_box.c"
 $9 = ($8|0)!=(0); //@line 99 "../../iup_box.c"
 $10 = $2; //@line 100 "../../iup_box.c"
 $11 = ((($10)) + 72|0); //@line 100 "../../iup_box.c"
 $12 = HEAP32[$11>>2]|0; //@line 100 "../../iup_box.c"
 $13 = ((($12)) + 4|0); //@line 100 "../../iup_box.c"
 if ($9) {
  HEAP32[$13>>2] = 12; //@line 100 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 106 "../../iup_box.c"
 } else {
  HEAP32[$13>>2] = 3; //@line 102 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 106 "../../iup_box.c"
 }
 return (0)|0;
}
function _iBoxGetHomogeneousAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 92 "../../iup_box.c"
 $3 = ((($2)) + 72|0); //@line 92 "../../iup_box.c"
 $4 = HEAP32[$3>>2]|0; //@line 92 "../../iup_box.c"
 $5 = ((($4)) + 8|0); //@line 92 "../../iup_box.c"
 $6 = HEAP32[$5>>2]|0; //@line 92 "../../iup_box.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 92 "../../iup_box.c"
 STACKTOP = sp;return ($7|0); //@line 92 "../../iup_box.c"
}
function _iBoxSetHomogeneousAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 83 "../../iup_box.c"
 $5 = (_iupStrBoolean($4)|0); //@line 83 "../../iup_box.c"
 $6 = ($5|0)!=(0); //@line 83 "../../iup_box.c"
 $7 = $2; //@line 84 "../../iup_box.c"
 $8 = ((($7)) + 72|0); //@line 84 "../../iup_box.c"
 $9 = HEAP32[$8>>2]|0; //@line 84 "../../iup_box.c"
 $10 = ((($9)) + 8|0); //@line 84 "../../iup_box.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 84 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 87 "../../iup_box.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 86 "../../iup_box.c"
  STACKTOP = sp;return 0; //@line 87 "../../iup_box.c"
 }
 return (0)|0;
}
function _iBoxGetNormalizeSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 122 "../../iup_box.c"
 $3 = ((($2)) + 72|0); //@line 122 "../../iup_box.c"
 $4 = HEAP32[$3>>2]|0; //@line 122 "../../iup_box.c"
 $5 = ((($4)) + 12|0); //@line 122 "../../iup_box.c"
 $6 = HEAP32[$5>>2]|0; //@line 122 "../../iup_box.c"
 $7 = (_iupNormalizeGetNormalizeSizeStr($6)|0); //@line 122 "../../iup_box.c"
 STACKTOP = sp;return ($7|0); //@line 122 "../../iup_box.c"
}
function _iBoxSetNormalizeSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 116 "../../iup_box.c"
 $5 = (_iupNormalizeGetNormalizeSize($4)|0); //@line 116 "../../iup_box.c"
 $6 = $2; //@line 116 "../../iup_box.c"
 $7 = ((($6)) + 72|0); //@line 116 "../../iup_box.c"
 $8 = HEAP32[$7>>2]|0; //@line 116 "../../iup_box.c"
 $9 = ((($8)) + 12|0); //@line 116 "../../iup_box.c"
 HEAP32[$9>>2] = $5; //@line 116 "../../iup_box.c"
 STACKTOP = sp;return 0; //@line 117 "../../iup_box.c"
}
function _iBoxUpdateAttribFromFont($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 158 "../../iup_box.c"
 $4 = (_iupAttribGet($3,13322)|0); //@line 158 "../../iup_box.c"
 $2 = $4; //@line 158 "../../iup_box.c"
 $5 = $2; //@line 159 "../../iup_box.c"
 $6 = ($5|0)!=(0|0); //@line 159 "../../iup_box.c"
 if (!($6)) {
  $7 = $1; //@line 160 "../../iup_box.c"
  $8 = (_iupAttribGet($7,13338)|0); //@line 160 "../../iup_box.c"
  $2 = $8; //@line 160 "../../iup_box.c"
 }
 $9 = $2; //@line 161 "../../iup_box.c"
 $10 = ($9|0)!=(0|0); //@line 161 "../../iup_box.c"
 if ($10) {
  $11 = $1; //@line 162 "../../iup_box.c"
  $12 = $2; //@line 162 "../../iup_box.c"
  (_iBoxSetCMarginAttrib($11,$12)|0); //@line 162 "../../iup_box.c"
 }
 $13 = $1; //@line 164 "../../iup_box.c"
 $14 = (_iupAttribGet($13,1768)|0); //@line 164 "../../iup_box.c"
 $2 = $14; //@line 164 "../../iup_box.c"
 $15 = $2; //@line 165 "../../iup_box.c"
 $16 = ($15|0)!=(0|0); //@line 165 "../../iup_box.c"
 if (!($16)) {
  $17 = $1; //@line 166 "../../iup_box.c"
  $18 = (_iupAttribGet($17,1778)|0); //@line 166 "../../iup_box.c"
  $2 = $18; //@line 166 "../../iup_box.c"
 }
 $19 = $2; //@line 167 "../../iup_box.c"
 $20 = ($19|0)!=(0|0); //@line 167 "../../iup_box.c"
 if (!($20)) {
  STACKTOP = sp;return 0; //@line 170 "../../iup_box.c"
 }
 $21 = $1; //@line 168 "../../iup_box.c"
 $22 = $2; //@line 168 "../../iup_box.c"
 (_iBoxSetCGapAttrib($21,$22)|0); //@line 168 "../../iup_box.c"
 STACKTOP = sp;return 0; //@line 170 "../../iup_box.c"
}
function _IupButton($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 165 "../../iup_button.c"
 HEAP32[$4>>2] = $5; //@line 165 "../../iup_button.c"
 $6 = $3; //@line 166 "../../iup_button.c"
 $7 = ((($4)) + 4|0); //@line 166 "../../iup_button.c"
 HEAP32[$7>>2] = $6; //@line 166 "../../iup_button.c"
 $8 = ((($4)) + 8|0); //@line 167 "../../iup_button.c"
 HEAP32[$8>>2] = 0; //@line 167 "../../iup_button.c"
 $9 = (_IupCreatev(1796,$4)|0); //@line 168 "../../iup_button.c"
 STACKTOP = sp;return ($9|0); //@line 168 "../../iup_button.c"
}
function _iupButtonNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 173 "../../iup_button.c"
 $0 = $1; //@line 173 "../../iup_button.c"
 $2 = $0; //@line 175 "../../iup_button.c"
 HEAP32[$2>>2] = 1796; //@line 175 "../../iup_button.c"
 $3 = $0; //@line 176 "../../iup_button.c"
 $4 = ((($3)) + 4|0); //@line 176 "../../iup_button.c"
 HEAP32[$4>>2] = 17796; //@line 176 "../../iup_button.c"
 $5 = $0; //@line 177 "../../iup_button.c"
 $6 = ((($5)) + 8|0); //@line 177 "../../iup_button.c"
 HEAP32[$6>>2] = 1; //@line 177 "../../iup_button.c"
 $7 = $0; //@line 178 "../../iup_button.c"
 $8 = ((($7)) + 12|0); //@line 178 "../../iup_button.c"
 HEAP32[$8>>2] = 0; //@line 178 "../../iup_button.c"
 $9 = $0; //@line 179 "../../iup_button.c"
 $10 = ((($9)) + 16|0); //@line 179 "../../iup_button.c"
 HEAP32[$10>>2] = 1; //@line 179 "../../iup_button.c"
 $11 = $0; //@line 182 "../../iup_button.c"
 $12 = ((($11)) + 32|0); //@line 182 "../../iup_button.c"
 HEAP32[$12>>2] = 44; //@line 182 "../../iup_button.c"
 $13 = $0; //@line 183 "../../iup_button.c"
 $14 = ((($13)) + 40|0); //@line 183 "../../iup_button.c"
 HEAP32[$14>>2] = 45; //@line 183 "../../iup_button.c"
 $15 = $0; //@line 184 "../../iup_button.c"
 $16 = ((($15)) + 76|0); //@line 184 "../../iup_button.c"
 HEAP32[$16>>2] = 46; //@line 184 "../../iup_button.c"
 $17 = $0; //@line 186 "../../iup_button.c"
 $18 = ((($17)) + 72|0); //@line 186 "../../iup_button.c"
 HEAP32[$18>>2] = 47; //@line 186 "../../iup_button.c"
 $19 = $0; //@line 187 "../../iup_button.c"
 $20 = ((($19)) + 48|0); //@line 187 "../../iup_button.c"
 HEAP32[$20>>2] = 48; //@line 187 "../../iup_button.c"
 $21 = $0; //@line 190 "../../iup_button.c"
 _iupClassRegisterCallback($21,20522,18053); //@line 190 "../../iup_button.c"
 $22 = $0; //@line 191 "../../iup_button.c"
 _iupClassRegisterCallback($22,20479,362470); //@line 191 "../../iup_button.c"
 $23 = $0; //@line 194 "../../iup_button.c"
 _iupBaseRegisterCommonCallbacks($23); //@line 194 "../../iup_button.c"
 $24 = $0; //@line 197 "../../iup_button.c"
 _iupBaseRegisterCommonAttrib($24); //@line 197 "../../iup_button.c"
 $25 = $0; //@line 200 "../../iup_button.c"
 _iupBaseRegisterVisualAttrib($25); //@line 200 "../../iup_button.c"
 $26 = $0; //@line 203 "../../iup_button.c"
 _iupClassRegisterAttribute($26,12201,49,50,(-1),19551,9); //@line 203 "../../iup_button.c"
 $27 = $0; //@line 204 "../../iup_button.c"
 _iupClassRegisterAttribute($27,12324,51,52,(-1),12338,9); //@line 204 "../../iup_button.c"
 $28 = $0; //@line 205 "../../iup_button.c"
 _iupClassRegisterAttribute($28,1803,0,0,0,0,1); //@line 205 "../../iup_button.c"
 $29 = $0; //@line 206 "../../iup_button.c"
 _iupClassRegisterAttribute($29,17805,0,0,0,0,0); //@line 206 "../../iup_button.c"
 $30 = $0; //@line 207 "../../iup_button.c"
 _iupClassRegisterAttribute($30,1817,0,53,20441,0,9); //@line 207 "../../iup_button.c"
 $31 = $0; //@line 209 "../../iup_button.c"
 _iupdrvButtonInitClass($31); //@line 209 "../../iup_button.c"
 $32 = $0; //@line 211 "../../iup_button.c"
 STACKTOP = sp;return ($32|0); //@line 211 "../../iup_button.c"
}
function _iButtonCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 75 "../../iup_button.c"
 $5 = ($4|0)!=(0|0); //@line 75 "../../iup_button.c"
 if ($5) {
  $6 = $3; //@line 77 "../../iup_button.c"
  $7 = HEAP32[$6>>2]|0; //@line 77 "../../iup_button.c"
  $8 = ($7|0)!=(0|0); //@line 77 "../../iup_button.c"
  if ($8) {
   $9 = $2; //@line 77 "../../iup_button.c"
   $10 = $3; //@line 77 "../../iup_button.c"
   $11 = HEAP32[$10>>2]|0; //@line 77 "../../iup_button.c"
   _iupAttribSetStr($9,20508,$11); //@line 77 "../../iup_button.c"
  }
  $12 = $3; //@line 78 "../../iup_button.c"
  $13 = ((($12)) + 4|0); //@line 78 "../../iup_button.c"
  $14 = HEAP32[$13>>2]|0; //@line 78 "../../iup_button.c"
  $15 = ($14|0)!=(0|0); //@line 78 "../../iup_button.c"
  if ($15) {
   $16 = $2; //@line 78 "../../iup_button.c"
   $17 = $3; //@line 78 "../../iup_button.c"
   $18 = ((($17)) + 4|0); //@line 78 "../../iup_button.c"
   $19 = HEAP32[$18>>2]|0; //@line 78 "../../iup_button.c"
   _iupAttribSetStr($16,20479,$19); //@line 78 "../../iup_button.c"
  }
 }
 $20 = (_calloc(1,32)|0); //@line 80 "../../iup_button.c"
 $21 = $2; //@line 80 "../../iup_button.c"
 $22 = ((($21)) + 72|0); //@line 80 "../../iup_button.c"
 HEAP32[$22>>2] = $20; //@line 80 "../../iup_button.c"
 $23 = $2; //@line 82 "../../iup_button.c"
 $24 = ((($23)) + 72|0); //@line 82 "../../iup_button.c"
 $25 = HEAP32[$24>>2]|0; //@line 82 "../../iup_button.c"
 $26 = ((($25)) + 12|0); //@line 82 "../../iup_button.c"
 HEAP32[$26>>2] = 2; //@line 82 "../../iup_button.c"
 $27 = $2; //@line 85 "../../iup_button.c"
 $28 = ((($27)) + 72|0); //@line 85 "../../iup_button.c"
 $29 = HEAP32[$28>>2]|0; //@line 85 "../../iup_button.c"
 $30 = ((($29)) + 20|0); //@line 85 "../../iup_button.c"
 HEAP32[$30>>2] = 1; //@line 85 "../../iup_button.c"
 $31 = $2; //@line 86 "../../iup_button.c"
 $32 = ((($31)) + 72|0); //@line 86 "../../iup_button.c"
 $33 = HEAP32[$32>>2]|0; //@line 86 "../../iup_button.c"
 $34 = ((($33)) + 24|0); //@line 86 "../../iup_button.c"
 HEAP32[$34>>2] = 1; //@line 86 "../../iup_button.c"
 STACKTOP = sp;return 0; //@line 87 "../../iup_button.c"
}
function _iButtonComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $8 = sp + 36|0;
 $9 = sp + 32|0;
 $13 = sp + 16|0;
 $14 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 HEAP32[$8>>2] = 0; //@line 92 "../../iup_button.c"
 HEAP32[$9>>2] = 0; //@line 93 "../../iup_button.c"
 $18 = $4; //@line 94 "../../iup_button.c"
 $19 = ((($18)) + 72|0); //@line 94 "../../iup_button.c"
 $20 = HEAP32[$19>>2]|0; //@line 94 "../../iup_button.c"
 $21 = HEAP32[$20>>2]|0; //@line 94 "../../iup_button.c"
 $10 = $21; //@line 94 "../../iup_button.c"
 $22 = $4; //@line 97 "../../iup_button.c"
 $23 = ((($22)) + 16|0); //@line 97 "../../iup_button.c"
 $24 = HEAP32[$23>>2]|0; //@line 97 "../../iup_button.c"
 $25 = ($24|0)!=(0|0); //@line 97 "../../iup_button.c"
 do {
  if (!($25)) {
   $26 = $4; //@line 100 "../../iup_button.c"
   $27 = (_iupAttribGet($26,20169)|0); //@line 100 "../../iup_button.c"
   $11 = $27; //@line 100 "../../iup_button.c"
   $28 = $11; //@line 101 "../../iup_button.c"
   $29 = ($28|0)!=(0|0); //@line 101 "../../iup_button.c"
   if (!($29)) {
    $10 = 2; //@line 109 "../../iup_button.c"
    break;
   }
   $30 = $4; //@line 103 "../../iup_button.c"
   $31 = (_iupAttribGet($30,20508)|0); //@line 103 "../../iup_button.c"
   $12 = $31; //@line 103 "../../iup_button.c"
   $10 = 1; //@line 104 "../../iup_button.c"
   $32 = $12; //@line 105 "../../iup_button.c"
   $33 = ($32|0)!=(0|0); //@line 105 "../../iup_button.c"
   if ($33) {
    $34 = $12; //@line 105 "../../iup_button.c"
    $35 = HEAP8[$34>>0]|0; //@line 105 "../../iup_button.c"
    $36 = $35 << 24 >> 24; //@line 105 "../../iup_button.c"
    $37 = ($36|0)!=(0); //@line 105 "../../iup_button.c"
    if ($37) {
     $38 = $10; //@line 106 "../../iup_button.c"
     $39 = $38 | 2; //@line 106 "../../iup_button.c"
     $10 = $39; //@line 106 "../../iup_button.c"
    }
   }
  }
 } while(0);
 $40 = $10; //@line 112 "../../iup_button.c"
 $41 = $40 & 1; //@line 112 "../../iup_button.c"
 $42 = ($41|0)!=(0); //@line 112 "../../iup_button.c"
 $43 = $4; //@line 114 "../../iup_button.c"
 do {
  if ($42) {
   $44 = (_iupAttribGet($43,20169)|0); //@line 114 "../../iup_button.c"
   _iupImageGetInfo($44,$8,$9,0); //@line 114 "../../iup_button.c"
   $45 = $10; //@line 116 "../../iup_button.c"
   $46 = $45 & 2; //@line 116 "../../iup_button.c"
   $47 = ($46|0)!=(0); //@line 116 "../../iup_button.c"
   if ($47) {
    $48 = $4; //@line 120 "../../iup_button.c"
    $49 = (_IupGetAttribute($48,20508)|0); //@line 120 "../../iup_button.c"
    $15 = $49; //@line 120 "../../iup_button.c"
    $50 = $4; //@line 121 "../../iup_button.c"
    $51 = $15; //@line 121 "../../iup_button.c"
    _iupdrvFontGetMultiLineStringSize($50,$51,$13,$14); //@line 121 "../../iup_button.c"
    $52 = $4; //@line 123 "../../iup_button.c"
    $53 = ((($52)) + 72|0); //@line 123 "../../iup_button.c"
    $54 = HEAP32[$53>>2]|0; //@line 123 "../../iup_button.c"
    $55 = ((($54)) + 16|0); //@line 123 "../../iup_button.c"
    $56 = HEAP32[$55>>2]|0; //@line 123 "../../iup_button.c"
    $57 = ($56|0)==(1); //@line 123 "../../iup_button.c"
    if (!($57)) {
     $58 = $4; //@line 124 "../../iup_button.c"
     $59 = ((($58)) + 72|0); //@line 124 "../../iup_button.c"
     $60 = HEAP32[$59>>2]|0; //@line 124 "../../iup_button.c"
     $61 = ((($60)) + 16|0); //@line 124 "../../iup_button.c"
     $62 = HEAP32[$61>>2]|0; //@line 124 "../../iup_button.c"
     $63 = ($62|0)==(0); //@line 124 "../../iup_button.c"
     if (!($63)) {
      $79 = HEAP32[$8>>2]|0; //@line 131 "../../iup_button.c"
      $80 = HEAP32[$13>>2]|0; //@line 131 "../../iup_button.c"
      $81 = ($79|0)>($80|0); //@line 131 "../../iup_button.c"
      $82 = HEAP32[$8>>2]|0; //@line 131 "../../iup_button.c"
      $83 = HEAP32[$13>>2]|0; //@line 131 "../../iup_button.c"
      $84 = $81 ? $82 : $83; //@line 131 "../../iup_button.c"
      HEAP32[$8>>2] = $84; //@line 131 "../../iup_button.c"
      $85 = HEAP32[$14>>2]|0; //@line 132 "../../iup_button.c"
      $86 = $4; //@line 132 "../../iup_button.c"
      $87 = ((($86)) + 72|0); //@line 132 "../../iup_button.c"
      $88 = HEAP32[$87>>2]|0; //@line 132 "../../iup_button.c"
      $89 = ((($88)) + 12|0); //@line 132 "../../iup_button.c"
      $90 = HEAP32[$89>>2]|0; //@line 132 "../../iup_button.c"
      $91 = (($85) + ($90))|0; //@line 132 "../../iup_button.c"
      $92 = HEAP32[$9>>2]|0; //@line 132 "../../iup_button.c"
      $93 = (($92) + ($91))|0; //@line 132 "../../iup_button.c"
      HEAP32[$9>>2] = $93; //@line 132 "../../iup_button.c"
      break;
     }
    }
    $64 = HEAP32[$13>>2]|0; //@line 126 "../../iup_button.c"
    $65 = $4; //@line 126 "../../iup_button.c"
    $66 = ((($65)) + 72|0); //@line 126 "../../iup_button.c"
    $67 = HEAP32[$66>>2]|0; //@line 126 "../../iup_button.c"
    $68 = ((($67)) + 12|0); //@line 126 "../../iup_button.c"
    $69 = HEAP32[$68>>2]|0; //@line 126 "../../iup_button.c"
    $70 = (($64) + ($69))|0; //@line 126 "../../iup_button.c"
    $71 = HEAP32[$8>>2]|0; //@line 126 "../../iup_button.c"
    $72 = (($71) + ($70))|0; //@line 126 "../../iup_button.c"
    HEAP32[$8>>2] = $72; //@line 126 "../../iup_button.c"
    $73 = HEAP32[$9>>2]|0; //@line 127 "../../iup_button.c"
    $74 = HEAP32[$14>>2]|0; //@line 127 "../../iup_button.c"
    $75 = ($73|0)>($74|0); //@line 127 "../../iup_button.c"
    $76 = HEAP32[$9>>2]|0; //@line 127 "../../iup_button.c"
    $77 = HEAP32[$14>>2]|0; //@line 127 "../../iup_button.c"
    $78 = $75 ? $76 : $77; //@line 127 "../../iup_button.c"
    HEAP32[$9>>2] = $78; //@line 127 "../../iup_button.c"
   }
  } else {
   $94 = (_IupGetAttribute($43,20508)|0); //@line 139 "../../iup_button.c"
   $16 = $94; //@line 139 "../../iup_button.c"
   $95 = $16; //@line 140 "../../iup_button.c"
   $96 = (_iupStrProcessMnemonic($95,0,0)|0); //@line 140 "../../iup_button.c"
   $17 = $96; //@line 140 "../../iup_button.c"
   $97 = $4; //@line 141 "../../iup_button.c"
   $98 = $17; //@line 141 "../../iup_button.c"
   _iupdrvFontGetMultiLineStringSize($97,$98,$8,$9); //@line 141 "../../iup_button.c"
   $99 = $17; //@line 142 "../../iup_button.c"
   $100 = ($99|0)!=(0|0); //@line 142 "../../iup_button.c"
   if ($100) {
    $101 = $17; //@line 142 "../../iup_button.c"
    $102 = $16; //@line 142 "../../iup_button.c"
    $103 = ($101|0)!=($102|0); //@line 142 "../../iup_button.c"
    if ($103) {
     $104 = $17; //@line 142 "../../iup_button.c"
     _free($104); //@line 142 "../../iup_button.c"
    }
   }
  }
 } while(0);
 $105 = $10; //@line 146 "../../iup_button.c"
 $106 = ($105|0)==(1); //@line 146 "../../iup_button.c"
 if ($106) {
  $107 = $4; //@line 147 "../../iup_button.c"
  $108 = (_iupAttribGet($107,13866)|0); //@line 147 "../../iup_button.c"
  $109 = ($108|0)!=(0|0); //@line 147 "../../iup_button.c"
  if ($109) {
   $110 = $4; //@line 148 "../../iup_button.c"
   $111 = (_iupAttribGetBoolean($110,1803)|0); //@line 148 "../../iup_button.c"
   $112 = ($111|0)!=(0); //@line 148 "../../iup_button.c"
   if (!($112)) {
    $113 = $4; //@line 151 "../../iup_button.c"
    $114 = ((($113)) + 72|0); //@line 151 "../../iup_button.c"
    $115 = HEAP32[$114>>2]|0; //@line 151 "../../iup_button.c"
    $116 = ((($115)) + 4|0); //@line 151 "../../iup_button.c"
    $117 = HEAP32[$116>>2]|0; //@line 151 "../../iup_button.c"
    $118 = $117<<1; //@line 151 "../../iup_button.c"
    $119 = HEAP32[$8>>2]|0; //@line 151 "../../iup_button.c"
    $120 = (($119) + ($118))|0; //@line 151 "../../iup_button.c"
    HEAP32[$8>>2] = $120; //@line 151 "../../iup_button.c"
    $121 = $4; //@line 152 "../../iup_button.c"
    $122 = ((($121)) + 72|0); //@line 152 "../../iup_button.c"
    $123 = HEAP32[$122>>2]|0; //@line 152 "../../iup_button.c"
    $124 = ((($123)) + 8|0); //@line 152 "../../iup_button.c"
    $125 = HEAP32[$124>>2]|0; //@line 152 "../../iup_button.c"
    $126 = $125<<1; //@line 152 "../../iup_button.c"
    $127 = HEAP32[$9>>2]|0; //@line 152 "../../iup_button.c"
    $128 = (($127) + ($126))|0; //@line 152 "../../iup_button.c"
    HEAP32[$9>>2] = $128; //@line 152 "../../iup_button.c"
    $129 = HEAP32[$8>>2]|0; //@line 154 "../../iup_button.c"
    $130 = $5; //@line 154 "../../iup_button.c"
    HEAP32[$130>>2] = $129; //@line 154 "../../iup_button.c"
    $131 = HEAP32[$9>>2]|0; //@line 155 "../../iup_button.c"
    $132 = $6; //@line 155 "../../iup_button.c"
    HEAP32[$132>>2] = $131; //@line 155 "../../iup_button.c"
    STACKTOP = sp;return; //@line 156 "../../iup_button.c"
   }
  }
 }
 _iupdrvButtonAddBorders($8,$9); //@line 149 "../../iup_button.c"
 $113 = $4; //@line 151 "../../iup_button.c"
 $114 = ((($113)) + 72|0); //@line 151 "../../iup_button.c"
 $115 = HEAP32[$114>>2]|0; //@line 151 "../../iup_button.c"
 $116 = ((($115)) + 4|0); //@line 151 "../../iup_button.c"
 $117 = HEAP32[$116>>2]|0; //@line 151 "../../iup_button.c"
 $118 = $117<<1; //@line 151 "../../iup_button.c"
 $119 = HEAP32[$8>>2]|0; //@line 151 "../../iup_button.c"
 $120 = (($119) + ($118))|0; //@line 151 "../../iup_button.c"
 HEAP32[$8>>2] = $120; //@line 151 "../../iup_button.c"
 $121 = $4; //@line 152 "../../iup_button.c"
 $122 = ((($121)) + 72|0); //@line 152 "../../iup_button.c"
 $123 = HEAP32[$122>>2]|0; //@line 152 "../../iup_button.c"
 $124 = ((($123)) + 8|0); //@line 152 "../../iup_button.c"
 $125 = HEAP32[$124>>2]|0; //@line 152 "../../iup_button.c"
 $126 = $125<<1; //@line 152 "../../iup_button.c"
 $127 = HEAP32[$9>>2]|0; //@line 152 "../../iup_button.c"
 $128 = (($127) + ($126))|0; //@line 152 "../../iup_button.c"
 HEAP32[$9>>2] = $128; //@line 152 "../../iup_button.c"
 $129 = HEAP32[$8>>2]|0; //@line 154 "../../iup_button.c"
 $130 = $5; //@line 154 "../../iup_button.c"
 HEAP32[$130>>2] = $129; //@line 154 "../../iup_button.c"
 $131 = HEAP32[$9>>2]|0; //@line 155 "../../iup_button.c"
 $132 = $6; //@line 155 "../../iup_button.c"
 HEAP32[$132>>2] = $131; //@line 155 "../../iup_button.c"
 STACKTOP = sp;return; //@line 156 "../../iup_button.c"
}
function _iButtonGetSpacingAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 66 "../../iup_button.c"
 $3 = ((($2)) + 72|0); //@line 66 "../../iup_button.c"
 $4 = HEAP32[$3>>2]|0; //@line 66 "../../iup_button.c"
 $5 = ((($4)) + 12|0); //@line 66 "../../iup_button.c"
 $6 = HEAP32[$5>>2]|0; //@line 66 "../../iup_button.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 66 "../../iup_button.c"
 STACKTOP = sp;return ($7|0); //@line 66 "../../iup_button.c"
}
function _iButtonSetSpacingAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 59 "../../iup_button.c"
 $5 = ((($4)) + 16|0); //@line 59 "../../iup_button.c"
 $6 = HEAP32[$5>>2]|0; //@line 59 "../../iup_button.c"
 $7 = ($6|0)!=(0|0); //@line 59 "../../iup_button.c"
 if ($7) {
  STACKTOP = sp;return 0; //@line 61 "../../iup_button.c"
 }
 $8 = $3; //@line 60 "../../iup_button.c"
 $9 = $2; //@line 60 "../../iup_button.c"
 $10 = ((($9)) + 72|0); //@line 60 "../../iup_button.c"
 $11 = HEAP32[$10>>2]|0; //@line 60 "../../iup_button.c"
 $12 = ((($11)) + 12|0); //@line 60 "../../iup_button.c"
 (_iupStrToInt($8,$12)|0); //@line 60 "../../iup_button.c"
 STACKTOP = sp;return 0; //@line 61 "../../iup_button.c"
}
function _iButtonGetImagePositionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $1 = $0;
 ;HEAP32[$2>>2]=HEAP32[12>>2]|0;HEAP32[$2+4>>2]=HEAP32[12+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[12+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[12+12>>2]|0; //@line 47 "../../iup_button.c"
 $3 = $1; //@line 48 "../../iup_button.c"
 $4 = ((($3)) + 72|0); //@line 48 "../../iup_button.c"
 $5 = HEAP32[$4>>2]|0; //@line 48 "../../iup_button.c"
 $6 = ((($5)) + 16|0); //@line 48 "../../iup_button.c"
 $7 = HEAP32[$6>>2]|0; //@line 48 "../../iup_button.c"
 $8 = (($2) + ($7<<2)|0); //@line 48 "../../iup_button.c"
 $9 = HEAP32[$8>>2]|0; //@line 48 "../../iup_button.c"
 $10 = (_iupStrReturnStr($9)|0); //@line 48 "../../iup_button.c"
 STACKTOP = sp;return ($10|0); //@line 48 "../../iup_button.c"
}
function _iButtonSetImagePositionAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 31 "../../iup_button.c"
 $5 = ((($4)) + 16|0); //@line 31 "../../iup_button.c"
 $6 = HEAP32[$5>>2]|0; //@line 31 "../../iup_button.c"
 $7 = ($6|0)!=(0|0); //@line 31 "../../iup_button.c"
 if ($7) {
  STACKTOP = sp;return 0; //@line 42 "../../iup_button.c"
 }
 $8 = $3; //@line 33 "../../iup_button.c"
 $9 = (_iupStrEqualNoCase($8,17659)|0); //@line 33 "../../iup_button.c"
 $10 = ($9|0)!=(0); //@line 33 "../../iup_button.c"
 if ($10) {
  $11 = $2; //@line 34 "../../iup_button.c"
  $12 = ((($11)) + 72|0); //@line 34 "../../iup_button.c"
  $13 = HEAP32[$12>>2]|0; //@line 34 "../../iup_button.c"
  $14 = ((($13)) + 16|0); //@line 34 "../../iup_button.c"
  HEAP32[$14>>2] = 1; //@line 34 "../../iup_button.c"
  STACKTOP = sp;return 0; //@line 42 "../../iup_button.c"
 }
 $15 = $3; //@line 35 "../../iup_button.c"
 $16 = (_iupStrEqualNoCase($15,12486)|0); //@line 35 "../../iup_button.c"
 $17 = ($16|0)!=(0); //@line 35 "../../iup_button.c"
 if ($17) {
  $18 = $2; //@line 36 "../../iup_button.c"
  $19 = ((($18)) + 72|0); //@line 36 "../../iup_button.c"
  $20 = HEAP32[$19>>2]|0; //@line 36 "../../iup_button.c"
  $21 = ((($20)) + 16|0); //@line 36 "../../iup_button.c"
  HEAP32[$21>>2] = 3; //@line 36 "../../iup_button.c"
  STACKTOP = sp;return 0; //@line 42 "../../iup_button.c"
 }
 $22 = $3; //@line 37 "../../iup_button.c"
 $23 = (_iupStrEqualNoCase($22,16020)|0); //@line 37 "../../iup_button.c"
 $24 = ($23|0)!=(0); //@line 37 "../../iup_button.c"
 $25 = $2; //@line 38 "../../iup_button.c"
 $26 = ((($25)) + 72|0); //@line 38 "../../iup_button.c"
 $27 = HEAP32[$26>>2]|0; //@line 38 "../../iup_button.c"
 $28 = ((($27)) + 16|0); //@line 38 "../../iup_button.c"
 if ($24) {
  HEAP32[$28>>2] = 2; //@line 38 "../../iup_button.c"
  STACKTOP = sp;return 0; //@line 42 "../../iup_button.c"
 } else {
  HEAP32[$28>>2] = 0; //@line 40 "../../iup_button.c"
  STACKTOP = sp;return 0; //@line 42 "../../iup_button.c"
 }
 return (0)|0;
}
function _iButtonSetFocusOnClickAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 53 "../../iup_button.c"
 $5 = $3; //@line 53 "../../iup_button.c"
 _iupAttribSet($4,15995,$5); //@line 53 "../../iup_button.c"
 STACKTOP = sp;return 1; //@line 54 "../../iup_button.c"
}
function _IupGetCallback($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = 0; //@line 33 "../../iup_callback.c"
 $7 = $3; //@line 37 "../../iup_callback.c"
 $8 = (_iupObjectCheck($7)|0); //@line 37 "../../iup_callback.c"
 $9 = ($8|0)!=(0); //@line 37 "../../iup_callback.c"
 if (!($9)) {
  $2 = 0; //@line 38 "../../iup_callback.c"
  $24 = $2; //@line 53 "../../iup_callback.c"
  STACKTOP = sp;return ($24|0); //@line 53 "../../iup_callback.c"
 }
 $10 = $4; //@line 41 "../../iup_callback.c"
 $11 = ($10|0)!=(0|0); //@line 41 "../../iup_callback.c"
 if (!($11)) {
  $2 = 0; //@line 42 "../../iup_callback.c"
  $24 = $2; //@line 53 "../../iup_callback.c"
  STACKTOP = sp;return ($24|0); //@line 53 "../../iup_callback.c"
 }
 $12 = $3; //@line 44 "../../iup_callback.c"
 $13 = ((($12)) + 8|0); //@line 44 "../../iup_callback.c"
 $14 = HEAP32[$13>>2]|0; //@line 44 "../../iup_callback.c"
 $15 = $4; //@line 44 "../../iup_callback.c"
 $16 = (_iupTableGetFunc($14,$15,$6)|0); //@line 44 "../../iup_callback.c"
 $5 = $16; //@line 44 "../../iup_callback.c"
 $17 = $5; //@line 46 "../../iup_callback.c"
 $18 = ($17|0)==(0|0); //@line 46 "../../iup_callback.c"
 $19 = HEAP32[$6>>2]|0; //@line 46 "../../iup_callback.c"
 $20 = ($19|0)!=(0|0); //@line 46 "../../iup_callback.c"
 $or$cond = $18 & $20; //@line 46 "../../iup_callback.c"
 if ($or$cond) {
  $21 = HEAP32[$6>>2]|0; //@line 49 "../../iup_callback.c"
  $22 = (_IupGetFunction($21)|0); //@line 49 "../../iup_callback.c"
  $5 = $22; //@line 49 "../../iup_callback.c"
 }
 $23 = $5; //@line 52 "../../iup_callback.c"
 $2 = $23; //@line 52 "../../iup_callback.c"
 $24 = $2; //@line 53 "../../iup_callback.c"
 STACKTOP = sp;return ($24|0); //@line 53 "../../iup_callback.c"
}
function _IupSetCallback($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = 0; //@line 57 "../../iup_callback.c"
 $9 = $4; //@line 60 "../../iup_callback.c"
 $10 = (_iupObjectCheck($9)|0); //@line 60 "../../iup_callback.c"
 $11 = ($10|0)!=(0); //@line 60 "../../iup_callback.c"
 if (!($11)) {
  $3 = 0; //@line 61 "../../iup_callback.c"
  $33 = $3; //@line 80 "../../iup_callback.c"
  STACKTOP = sp;return ($33|0); //@line 80 "../../iup_callback.c"
 }
 $12 = $5; //@line 64 "../../iup_callback.c"
 $13 = ($12|0)!=(0|0); //@line 64 "../../iup_callback.c"
 if (!($13)) {
  $3 = 0; //@line 65 "../../iup_callback.c"
  $33 = $3; //@line 80 "../../iup_callback.c"
  STACKTOP = sp;return ($33|0); //@line 80 "../../iup_callback.c"
 }
 $14 = $6; //@line 67 "../../iup_callback.c"
 $15 = ($14|0)!=(0|0); //@line 67 "../../iup_callback.c"
 $16 = $4; //@line 72 "../../iup_callback.c"
 $17 = ((($16)) + 8|0); //@line 72 "../../iup_callback.c"
 $18 = HEAP32[$17>>2]|0; //@line 72 "../../iup_callback.c"
 $19 = $5; //@line 72 "../../iup_callback.c"
 if ($15) {
  $20 = (_iupTableGetFunc($18,$19,$8)|0); //@line 72 "../../iup_callback.c"
  $7 = $20; //@line 72 "../../iup_callback.c"
  $21 = $7; //@line 73 "../../iup_callback.c"
  $22 = ($21|0)==(0|0); //@line 73 "../../iup_callback.c"
  $23 = HEAP32[$8>>2]|0; //@line 73 "../../iup_callback.c"
  $24 = ($23|0)!=(0|0); //@line 73 "../../iup_callback.c"
  $or$cond = $22 & $24; //@line 73 "../../iup_callback.c"
  if ($or$cond) {
   $25 = HEAP32[$8>>2]|0; //@line 74 "../../iup_callback.c"
   $26 = (_IupGetFunction($25)|0); //@line 74 "../../iup_callback.c"
   $7 = $26; //@line 74 "../../iup_callback.c"
  }
  $27 = $4; //@line 76 "../../iup_callback.c"
  $28 = ((($27)) + 8|0); //@line 76 "../../iup_callback.c"
  $29 = HEAP32[$28>>2]|0; //@line 76 "../../iup_callback.c"
  $30 = $5; //@line 76 "../../iup_callback.c"
  $31 = $6; //@line 76 "../../iup_callback.c"
  _iupTableSetFunc($29,$30,$31); //@line 76 "../../iup_callback.c"
 } else {
  _iupTableRemove($18,$19); //@line 68 "../../iup_callback.c"
 }
 $32 = $7; //@line 79 "../../iup_callback.c"
 $3 = $32; //@line 79 "../../iup_callback.c"
 $33 = $3; //@line 80 "../../iup_callback.c"
 STACKTOP = sp;return ($33|0); //@line 80 "../../iup_callback.c"
}
function _IupCanvas($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 100 "../../iup_canvas.c"
 HEAP32[$2>>2] = $3; //@line 100 "../../iup_canvas.c"
 $4 = ((($2)) + 4|0); //@line 101 "../../iup_canvas.c"
 HEAP32[$4>>2] = 0; //@line 101 "../../iup_canvas.c"
 $5 = (_IupCreatev(15430,$2)|0); //@line 102 "../../iup_canvas.c"
 STACKTOP = sp;return ($5|0); //@line 102 "../../iup_canvas.c"
}
function _iupCanvasNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 107 "../../iup_canvas.c"
 $0 = $1; //@line 107 "../../iup_canvas.c"
 $2 = $0; //@line 109 "../../iup_canvas.c"
 HEAP32[$2>>2] = 15430; //@line 109 "../../iup_canvas.c"
 $3 = $0; //@line 110 "../../iup_canvas.c"
 $4 = ((($3)) + 4|0); //@line 110 "../../iup_canvas.c"
 HEAP32[$4>>2] = 17485; //@line 110 "../../iup_canvas.c"
 $5 = $0; //@line 111 "../../iup_canvas.c"
 $6 = ((($5)) + 8|0); //@line 111 "../../iup_canvas.c"
 HEAP32[$6>>2] = 2; //@line 111 "../../iup_canvas.c"
 $7 = $0; //@line 112 "../../iup_canvas.c"
 $8 = ((($7)) + 12|0); //@line 112 "../../iup_canvas.c"
 HEAP32[$8>>2] = 0; //@line 112 "../../iup_canvas.c"
 $9 = $0; //@line 113 "../../iup_canvas.c"
 $10 = ((($9)) + 16|0); //@line 113 "../../iup_canvas.c"
 HEAP32[$10>>2] = 1; //@line 113 "../../iup_canvas.c"
 $11 = $0; //@line 116 "../../iup_canvas.c"
 $12 = ((($11)) + 32|0); //@line 116 "../../iup_canvas.c"
 HEAP32[$12>>2] = 54; //@line 116 "../../iup_canvas.c"
 $13 = $0; //@line 117 "../../iup_canvas.c"
 $14 = ((($13)) + 40|0); //@line 117 "../../iup_canvas.c"
 HEAP32[$14>>2] = 55; //@line 117 "../../iup_canvas.c"
 $15 = $0; //@line 118 "../../iup_canvas.c"
 $16 = ((($15)) + 76|0); //@line 118 "../../iup_canvas.c"
 HEAP32[$16>>2] = 56; //@line 118 "../../iup_canvas.c"
 $17 = $0; //@line 120 "../../iup_canvas.c"
 $18 = ((($17)) + 72|0); //@line 120 "../../iup_canvas.c"
 HEAP32[$18>>2] = 47; //@line 120 "../../iup_canvas.c"
 $19 = $0; //@line 121 "../../iup_canvas.c"
 $20 = ((($19)) + 48|0); //@line 121 "../../iup_canvas.c"
 HEAP32[$20>>2] = 48; //@line 121 "../../iup_canvas.c"
 $21 = $0; //@line 124 "../../iup_canvas.c"
 _iupClassRegisterCallback($21,3787,17878); //@line 124 "../../iup_canvas.c"
 $22 = $0; //@line 125 "../../iup_canvas.c"
 _iupClassRegisterCallback($22,16004,17949); //@line 125 "../../iup_canvas.c"
 $23 = $0; //@line 126 "../../iup_canvas.c"
 _iupClassRegisterCallback($23,1830,17949); //@line 126 "../../iup_canvas.c"
 $24 = $0; //@line 127 "../../iup_canvas.c"
 _iupClassRegisterCallback($24,20522,18053); //@line 127 "../../iup_canvas.c"
 $25 = $0; //@line 128 "../../iup_canvas.c"
 _iupClassRegisterCallback($25,18039,18049); //@line 128 "../../iup_canvas.c"
 $26 = $0; //@line 129 "../../iup_canvas.c"
 _iupClassRegisterCallback($26,1837,17878); //@line 129 "../../iup_canvas.c"
 $27 = $0; //@line 130 "../../iup_canvas.c"
 _iupClassRegisterCallback($27,20479,1849); //@line 130 "../../iup_canvas.c"
 $28 = $0; //@line 131 "../../iup_canvas.c"
 _iupClassRegisterCallback($28,15482,1852); //@line 131 "../../iup_canvas.c"
 $29 = $0; //@line 132 "../../iup_canvas.c"
 _iupClassRegisterCallback($29,1856,1865); //@line 132 "../../iup_canvas.c"
 $30 = $0; //@line 135 "../../iup_canvas.c"
 _iupBaseRegisterCommonCallbacks($30); //@line 135 "../../iup_canvas.c"
 $31 = $0; //@line 138 "../../iup_canvas.c"
 _iupBaseRegisterCommonAttrib($31); //@line 138 "../../iup_canvas.c"
 $32 = $0; //@line 141 "../../iup_canvas.c"
 _iupClassRegisterReplaceAttribDef($32,20073,(-1),20441); //@line 141 "../../iup_canvas.c"
 $33 = $0; //@line 144 "../../iup_canvas.c"
 _iupBaseRegisterVisualAttrib($33); //@line 144 "../../iup_canvas.c"
 $34 = $0; //@line 147 "../../iup_canvas.c"
 _iupdrvRegisterDragDropAttrib($34); //@line 147 "../../iup_canvas.c"
 $35 = $0; //@line 150 "../../iup_canvas.c"
 _iupClassRegisterAttribute($35,15959,0,57,(-1),14265,2049); //@line 150 "../../iup_canvas.c"
 $36 = $0; //@line 151 "../../iup_canvas.c"
 _iupClassRegisterAttribute($36,1870,0,0,(-1),19944,9); //@line 151 "../../iup_canvas.c"
 $37 = $0; //@line 152 "../../iup_canvas.c"
 _iupClassRegisterAttribute($37,15466,0,0,(-1),19938,9); //@line 152 "../../iup_canvas.c"
 $38 = $0; //@line 153 "../../iup_canvas.c"
 _iupClassRegisterAttribute($38,1875,0,0,(-1),19944,9); //@line 153 "../../iup_canvas.c"
 $39 = $0; //@line 154 "../../iup_canvas.c"
 _iupClassRegisterAttribute($39,15471,0,0,(-1),19938,9); //@line 154 "../../iup_canvas.c"
 $40 = $0; //@line 155 "../../iup_canvas.c"
 _iupClassRegisterAttribute($40,1880,0,0,0,0,9); //@line 155 "../../iup_canvas.c"
 $41 = $0; //@line 156 "../../iup_canvas.c"
 _iupClassRegisterAttribute($41,1886,0,0,0,0,9); //@line 156 "../../iup_canvas.c"
 $42 = $0; //@line 157 "../../iup_canvas.c"
 _iupClassRegisterAttribute($42,1892,0,0,(-1),20441,9); //@line 157 "../../iup_canvas.c"
 $43 = $0; //@line 158 "../../iup_canvas.c"
 _iupClassRegisterAttribute($43,1902,0,0,(-1),20441,9); //@line 158 "../../iup_canvas.c"
 $44 = $0; //@line 159 "../../iup_canvas.c"
 _iupClassRegisterAttribute($44,1912,0,0,0,0,1); //@line 159 "../../iup_canvas.c"
 $45 = $0; //@line 160 "../../iup_canvas.c"
 _iupClassRegisterAttribute($45,1920,0,0,0,0,1); //@line 160 "../../iup_canvas.c"
 $46 = $0; //@line 161 "../../iup_canvas.c"
 _iupClassRegisterAttribute($46,17637,0,0,(-1),20441,0); //@line 161 "../../iup_canvas.c"
 $47 = $0; //@line 162 "../../iup_canvas.c"
 _iupClassRegisterAttribute($47,17508,0,0,0,0,1); //@line 162 "../../iup_canvas.c"
 $48 = $0; //@line 164 "../../iup_canvas.c"
 _iupdrvCanvasInitClass($48); //@line 164 "../../iup_canvas.c"
 $49 = $0; //@line 166 "../../iup_canvas.c"
 STACKTOP = sp;return ($49|0); //@line 166 "../../iup_canvas.c"
}
function _iCanvasCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 67 "../../iup_canvas.c"
 $6 = ($5|0)!=(0|0); //@line 67 "../../iup_canvas.c"
 if ($6) {
  $7 = $3; //@line 67 "../../iup_canvas.c"
  $8 = HEAP32[$7>>2]|0; //@line 67 "../../iup_canvas.c"
  $9 = ($8|0)!=(0|0); //@line 67 "../../iup_canvas.c"
  if ($9) {
   $10 = $3; //@line 69 "../../iup_canvas.c"
   $11 = HEAP32[$10>>2]|0; //@line 69 "../../iup_canvas.c"
   $4 = $11; //@line 69 "../../iup_canvas.c"
   $12 = $2; //@line 70 "../../iup_canvas.c"
   $13 = $4; //@line 70 "../../iup_canvas.c"
   _iupAttribSetStr($12,20479,$13); //@line 70 "../../iup_canvas.c"
  }
 }
 $14 = (_calloc(1,16)|0); //@line 73 "../../iup_canvas.c"
 $15 = $2; //@line 73 "../../iup_canvas.c"
 $16 = ((($15)) + 72|0); //@line 73 "../../iup_canvas.c"
 HEAP32[$16>>2] = $14; //@line 73 "../../iup_canvas.c"
 $17 = $2; //@line 76 "../../iup_canvas.c"
 $18 = ((($17)) + 20|0); //@line 76 "../../iup_canvas.c"
 HEAP32[$18>>2] = 15; //@line 76 "../../iup_canvas.c"
 STACKTOP = sp;return 0; //@line 78 "../../iup_canvas.c"
}
function _iCanvasComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 4|0;
 $9 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 HEAP32[$8>>2] = 0; //@line 83 "../../iup_canvas.c"
 HEAP32[$9>>2] = 0; //@line 83 "../../iup_canvas.c"
 $10 = $4; //@line 87 "../../iup_canvas.c"
 _iupdrvFontGetCharSize($10,$8,$9); //@line 87 "../../iup_canvas.c"
 $11 = HEAP32[$8>>2]|0; //@line 89 "../../iup_canvas.c"
 $12 = $5; //@line 89 "../../iup_canvas.c"
 HEAP32[$12>>2] = $11; //@line 89 "../../iup_canvas.c"
 $13 = HEAP32[$9>>2]|0; //@line 90 "../../iup_canvas.c"
 $14 = $6; //@line 90 "../../iup_canvas.c"
 HEAP32[$14>>2] = $13; //@line 90 "../../iup_canvas.c"
 STACKTOP = sp;return; //@line 91 "../../iup_canvas.c"
}
function _iupCboxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 116 "../../iup_cbox.c"
 $0 = $1; //@line 116 "../../iup_cbox.c"
 $2 = $0; //@line 118 "../../iup_cbox.c"
 HEAP32[$2>>2] = 1928; //@line 118 "../../iup_cbox.c"
 $3 = $0; //@line 119 "../../iup_cbox.c"
 $4 = ((($3)) + 4|0); //@line 119 "../../iup_cbox.c"
 HEAP32[$4>>2] = 20071; //@line 119 "../../iup_cbox.c"
 $5 = $0; //@line 120 "../../iup_cbox.c"
 $6 = ((($5)) + 8|0); //@line 120 "../../iup_cbox.c"
 HEAP32[$6>>2] = 0; //@line 120 "../../iup_cbox.c"
 $7 = $0; //@line 121 "../../iup_cbox.c"
 $8 = ((($7)) + 12|0); //@line 121 "../../iup_cbox.c"
 HEAP32[$8>>2] = 1; //@line 121 "../../iup_cbox.c"
 $9 = $0; //@line 122 "../../iup_cbox.c"
 $10 = ((($9)) + 16|0); //@line 122 "../../iup_cbox.c"
 HEAP32[$10>>2] = 0; //@line 122 "../../iup_cbox.c"
 $11 = $0; //@line 125 "../../iup_cbox.c"
 $12 = ((($11)) + 32|0); //@line 125 "../../iup_cbox.c"
 HEAP32[$12>>2] = 58; //@line 125 "../../iup_cbox.c"
 $13 = $0; //@line 126 "../../iup_cbox.c"
 $14 = ((($13)) + 40|0); //@line 126 "../../iup_cbox.c"
 HEAP32[$14>>2] = 59; //@line 126 "../../iup_cbox.c"
 $15 = $0; //@line 127 "../../iup_cbox.c"
 $16 = ((($15)) + 44|0); //@line 127 "../../iup_cbox.c"
 HEAP32[$16>>2] = 26; //@line 127 "../../iup_cbox.c"
 $17 = $0; //@line 129 "../../iup_cbox.c"
 $18 = ((($17)) + 76|0); //@line 129 "../../iup_cbox.c"
 HEAP32[$18>>2] = 60; //@line 129 "../../iup_cbox.c"
 $19 = $0; //@line 130 "../../iup_cbox.c"
 $20 = ((($19)) + 80|0); //@line 130 "../../iup_cbox.c"
 HEAP32[$20>>2] = 61; //@line 130 "../../iup_cbox.c"
 $21 = $0; //@line 131 "../../iup_cbox.c"
 $22 = ((($21)) + 84|0); //@line 131 "../../iup_cbox.c"
 HEAP32[$22>>2] = 62; //@line 131 "../../iup_cbox.c"
 $23 = $0; //@line 134 "../../iup_cbox.c"
 _iupBaseRegisterCommonAttrib($23); //@line 134 "../../iup_cbox.c"
 $24 = $0; //@line 137 "../../iup_cbox.c"
 _iupClassRegisterAttribute($24,20073,20,0,(-1),20441,9); //@line 137 "../../iup_cbox.c"
 $25 = $0; //@line 138 "../../iup_cbox.c"
 _iupClassRegisterAttribute($25,20080,63,0,0,0,41); //@line 138 "../../iup_cbox.c"
 $26 = $0; //@line 139 "../../iup_cbox.c"
 _iupClassRegisterAttribute($26,20091,28,0,0,0,41); //@line 139 "../../iup_cbox.c"
 $27 = $0; //@line 141 "../../iup_cbox.c"
 STACKTOP = sp;return ($27|0); //@line 141 "../../iup_cbox.c"
}
function _iCboxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 24 "../../iup_cbox.c"
 $6 = ($5|0)!=(0|0); //@line 24 "../../iup_cbox.c"
 if (!($6)) {
  STACKTOP = sp;return 0; //@line 34 "../../iup_cbox.c"
 }
 $7 = $3; //@line 26 "../../iup_cbox.c"
 $4 = $7; //@line 26 "../../iup_cbox.c"
 while(1) {
  $8 = $4; //@line 27 "../../iup_cbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 27 "../../iup_cbox.c"
  $10 = ($9|0)!=(0|0); //@line 27 "../../iup_cbox.c"
  if (!($10)) {
   break;
  }
  $11 = $2; //@line 29 "../../iup_cbox.c"
  $12 = $4; //@line 29 "../../iup_cbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 29 "../../iup_cbox.c"
  (_IupAppend($11,$13)|0); //@line 29 "../../iup_cbox.c"
  $14 = $4; //@line 30 "../../iup_cbox.c"
  $15 = ((($14)) + 4|0); //@line 30 "../../iup_cbox.c"
  $4 = $15; //@line 30 "../../iup_cbox.c"
 }
 STACKTOP = sp;return 0; //@line 34 "../../iup_cbox.c"
}
function _iCboxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = 0; //@line 44 "../../iup_cbox.c"
 $10 = 0; //@line 45 "../../iup_cbox.c"
 $13 = $4; //@line 47 "../../iup_cbox.c"
 $14 = ((($13)) + 64|0); //@line 47 "../../iup_cbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 47 "../../iup_cbox.c"
 $8 = $15; //@line 47 "../../iup_cbox.c"
 while(1) {
  $16 = $8; //@line 47 "../../iup_cbox.c"
  $17 = ($16|0)!=(0|0); //@line 47 "../../iup_cbox.c"
  if (!($17)) {
   break;
  }
  $18 = $8; //@line 50 "../../iup_cbox.c"
  _iupBaseComputeNaturalSize($18); //@line 50 "../../iup_cbox.c"
  $19 = $8; //@line 52 "../../iup_cbox.c"
  $20 = (_iupAttribGetInt($19,1933)|0); //@line 52 "../../iup_cbox.c"
  $11 = $20; //@line 52 "../../iup_cbox.c"
  $21 = $8; //@line 53 "../../iup_cbox.c"
  $22 = (_iupAttribGetInt($21,1936)|0); //@line 53 "../../iup_cbox.c"
  $12 = $22; //@line 53 "../../iup_cbox.c"
  $23 = $8; //@line 55 "../../iup_cbox.c"
  $24 = ((($23)) + 20|0); //@line 55 "../../iup_cbox.c"
  $25 = HEAP32[$24>>2]|0; //@line 55 "../../iup_cbox.c"
  $26 = $7; //@line 55 "../../iup_cbox.c"
  $27 = HEAP32[$26>>2]|0; //@line 55 "../../iup_cbox.c"
  $28 = $27 | $25; //@line 55 "../../iup_cbox.c"
  HEAP32[$26>>2] = $28; //@line 55 "../../iup_cbox.c"
  $29 = $9; //@line 56 "../../iup_cbox.c"
  $30 = $11; //@line 56 "../../iup_cbox.c"
  $31 = $8; //@line 56 "../../iup_cbox.c"
  $32 = ((($31)) + 44|0); //@line 56 "../../iup_cbox.c"
  $33 = HEAP32[$32>>2]|0; //@line 56 "../../iup_cbox.c"
  $34 = (($30) + ($33))|0; //@line 56 "../../iup_cbox.c"
  $35 = ($29|0)>($34|0); //@line 56 "../../iup_cbox.c"
  if ($35) {
   $36 = $9; //@line 56 "../../iup_cbox.c"
   $42 = $36;
  } else {
   $37 = $11; //@line 56 "../../iup_cbox.c"
   $38 = $8; //@line 56 "../../iup_cbox.c"
   $39 = ((($38)) + 44|0); //@line 56 "../../iup_cbox.c"
   $40 = HEAP32[$39>>2]|0; //@line 56 "../../iup_cbox.c"
   $41 = (($37) + ($40))|0; //@line 56 "../../iup_cbox.c"
   $42 = $41;
  }
  $9 = $42; //@line 56 "../../iup_cbox.c"
  $43 = $10; //@line 57 "../../iup_cbox.c"
  $44 = $12; //@line 57 "../../iup_cbox.c"
  $45 = $8; //@line 57 "../../iup_cbox.c"
  $46 = ((($45)) + 48|0); //@line 57 "../../iup_cbox.c"
  $47 = HEAP32[$46>>2]|0; //@line 57 "../../iup_cbox.c"
  $48 = (($44) + ($47))|0; //@line 57 "../../iup_cbox.c"
  $49 = ($43|0)>($48|0); //@line 57 "../../iup_cbox.c"
  if ($49) {
   $50 = $10; //@line 57 "../../iup_cbox.c"
   $56 = $50;
  } else {
   $51 = $12; //@line 57 "../../iup_cbox.c"
   $52 = $8; //@line 57 "../../iup_cbox.c"
   $53 = ((($52)) + 48|0); //@line 57 "../../iup_cbox.c"
   $54 = HEAP32[$53>>2]|0; //@line 57 "../../iup_cbox.c"
   $55 = (($51) + ($54))|0; //@line 57 "../../iup_cbox.c"
   $56 = $55;
  }
  $10 = $56; //@line 57 "../../iup_cbox.c"
  $57 = $8; //@line 47 "../../iup_cbox.c"
  $58 = ((($57)) + 68|0); //@line 47 "../../iup_cbox.c"
  $59 = HEAP32[$58>>2]|0; //@line 47 "../../iup_cbox.c"
  $8 = $59; //@line 47 "../../iup_cbox.c"
 }
 $60 = $9; //@line 60 "../../iup_cbox.c"
 $61 = $5; //@line 60 "../../iup_cbox.c"
 HEAP32[$61>>2] = $60; //@line 60 "../../iup_cbox.c"
 $62 = $10; //@line 61 "../../iup_cbox.c"
 $63 = $6; //@line 61 "../../iup_cbox.c"
 HEAP32[$63>>2] = $62; //@line 61 "../../iup_cbox.c"
 STACKTOP = sp;return; //@line 62 "../../iup_cbox.c"
}
function _iCboxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 67 "../../iup_cbox.c"
 $6 = ((($5)) + 64|0); //@line 67 "../../iup_cbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 67 "../../iup_cbox.c"
 $4 = $7; //@line 67 "../../iup_cbox.c"
 while(1) {
  $8 = $4; //@line 67 "../../iup_cbox.c"
  $9 = ($8|0)!=(0|0); //@line 67 "../../iup_cbox.c"
  if (!($9)) {
   break;
  }
  $10 = $4; //@line 70 "../../iup_cbox.c"
  $11 = $4; //@line 70 "../../iup_cbox.c"
  $12 = ((($11)) + 44|0); //@line 70 "../../iup_cbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 70 "../../iup_cbox.c"
  $14 = $4; //@line 70 "../../iup_cbox.c"
  $15 = ((($14)) + 48|0); //@line 70 "../../iup_cbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 70 "../../iup_cbox.c"
  $17 = $3; //@line 70 "../../iup_cbox.c"
  _iupBaseSetCurrentSize($10,$13,$16,$17); //@line 70 "../../iup_cbox.c"
  $18 = $4; //@line 67 "../../iup_cbox.c"
  $19 = ((($18)) + 68|0); //@line 67 "../../iup_cbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 67 "../../iup_cbox.c"
  $4 = $20; //@line 67 "../../iup_cbox.c"
 }
 STACKTOP = sp;return; //@line 72 "../../iup_cbox.c"
}
function _iCboxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 79 "../../iup_cbox.c"
 $10 = ((($9)) + 64|0); //@line 79 "../../iup_cbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 79 "../../iup_cbox.c"
 $8 = $11; //@line 79 "../../iup_cbox.c"
 while(1) {
  $12 = $8; //@line 79 "../../iup_cbox.c"
  $13 = ($12|0)!=(0|0); //@line 79 "../../iup_cbox.c"
  if (!($13)) {
   break;
  }
  $14 = $8; //@line 81 "../../iup_cbox.c"
  $15 = (_iupAttribGetInt($14,1933)|0); //@line 81 "../../iup_cbox.c"
  $6 = $15; //@line 81 "../../iup_cbox.c"
  $16 = $8; //@line 82 "../../iup_cbox.c"
  $17 = (_iupAttribGetInt($16,1936)|0); //@line 82 "../../iup_cbox.c"
  $7 = $17; //@line 82 "../../iup_cbox.c"
  $18 = $8; //@line 85 "../../iup_cbox.c"
  $19 = $4; //@line 85 "../../iup_cbox.c"
  $20 = $6; //@line 85 "../../iup_cbox.c"
  $21 = (($19) + ($20))|0; //@line 85 "../../iup_cbox.c"
  $22 = $5; //@line 85 "../../iup_cbox.c"
  $23 = $7; //@line 85 "../../iup_cbox.c"
  $24 = (($22) + ($23))|0; //@line 85 "../../iup_cbox.c"
  _iupBaseSetPosition($18,$21,$24); //@line 85 "../../iup_cbox.c"
  $25 = $8; //@line 79 "../../iup_cbox.c"
  $26 = ((($25)) + 68|0); //@line 79 "../../iup_cbox.c"
  $27 = HEAP32[$26>>2]|0; //@line 79 "../../iup_cbox.c"
  $8 = $27; //@line 79 "../../iup_cbox.c"
 }
 STACKTOP = sp;return; //@line 87 "../../iup_cbox.c"
}
function _IupGetDialog($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 25 "../../iup_childtree.c"
 $5 = (_iupObjectCheck($4)|0); //@line 25 "../../iup_childtree.c"
 $6 = ($5|0)!=(0); //@line 25 "../../iup_childtree.c"
 if (!($6)) {
  $1 = 0; //@line 26 "../../iup_childtree.c"
  $35 = $1; //@line 46 "../../iup_childtree.c"
  STACKTOP = sp;return ($35|0); //@line 46 "../../iup_childtree.c"
 }
 $7 = $2; //@line 28 "../../iup_childtree.c"
 $2 = $7; //@line 28 "../../iup_childtree.c"
 while(1) {
  $8 = $2; //@line 28 "../../iup_childtree.c"
  $9 = ((($8)) + 60|0); //@line 28 "../../iup_childtree.c"
  $10 = HEAP32[$9>>2]|0; //@line 28 "../../iup_childtree.c"
  $11 = ($10|0)!=(0|0); //@line 28 "../../iup_childtree.c"
  $12 = $2; //@line 28 "../../iup_childtree.c"
  if (!($11)) {
   break;
  }
  $13 = ((($12)) + 60|0); //@line 28 "../../iup_childtree.c"
  $14 = HEAP32[$13>>2]|0; //@line 28 "../../iup_childtree.c"
  $2 = $14; //@line 28 "../../iup_childtree.c"
 }
 $15 = ((($12)) + 4|0); //@line 31 "../../iup_childtree.c"
 $16 = HEAP32[$15>>2]|0; //@line 31 "../../iup_childtree.c"
 $17 = ((($16)) + 8|0); //@line 31 "../../iup_childtree.c"
 $18 = HEAP32[$17>>2]|0; //@line 31 "../../iup_childtree.c"
 $19 = ($18|0)==(3); //@line 31 "../../iup_childtree.c"
 $20 = $2; //@line 32 "../../iup_childtree.c"
 if ($19) {
  $1 = $20; //@line 32 "../../iup_childtree.c"
  $35 = $1; //@line 46 "../../iup_childtree.c"
  STACKTOP = sp;return ($35|0); //@line 46 "../../iup_childtree.c"
 }
 $21 = ((($20)) + 4|0); //@line 33 "../../iup_childtree.c"
 $22 = HEAP32[$21>>2]|0; //@line 33 "../../iup_childtree.c"
 $23 = ((($22)) + 8|0); //@line 33 "../../iup_childtree.c"
 $24 = HEAP32[$23>>2]|0; //@line 33 "../../iup_childtree.c"
 $25 = ($24|0)==(5); //@line 33 "../../iup_childtree.c"
 L13: do {
  if ($25) {
   $26 = (_iupDlgListFirst()|0); //@line 38 "../../iup_childtree.c"
   $3 = $26; //@line 38 "../../iup_childtree.c"
   while(1) {
    $27 = $3; //@line 38 "../../iup_childtree.c"
    $28 = ($27|0)!=(0|0); //@line 38 "../../iup_childtree.c"
    if (!($28)) {
     break L13;
    }
    $29 = $3; //@line 40 "../../iup_childtree.c"
    $30 = (_IupGetAttributeHandle($29,3842)|0); //@line 40 "../../iup_childtree.c"
    $31 = $2; //@line 40 "../../iup_childtree.c"
    $32 = ($30|0)==($31|0); //@line 40 "../../iup_childtree.c"
    if ($32) {
     break;
    }
    $34 = (_iupDlgListNext()|0); //@line 38 "../../iup_childtree.c"
    $3 = $34; //@line 38 "../../iup_childtree.c"
   }
   $33 = $3; //@line 41 "../../iup_childtree.c"
   $1 = $33; //@line 41 "../../iup_childtree.c"
   $35 = $1; //@line 46 "../../iup_childtree.c"
   STACKTOP = sp;return ($35|0); //@line 46 "../../iup_childtree.c"
  }
 } while(0);
 $1 = 0; //@line 45 "../../iup_childtree.c"
 $35 = $1; //@line 46 "../../iup_childtree.c"
 STACKTOP = sp;return ($35|0); //@line 46 "../../iup_childtree.c"
}
function _IupDetach($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 78 "../../iup_childtree.c"
 $6 = (_iupObjectCheck($5)|0); //@line 78 "../../iup_childtree.c"
 $7 = ($6|0)!=(0); //@line 78 "../../iup_childtree.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 103 "../../iup_childtree.c"
 }
 $8 = $1; //@line 81 "../../iup_childtree.c"
 _IupUnmap($8); //@line 81 "../../iup_childtree.c"
 $9 = $1; //@line 84 "../../iup_childtree.c"
 $10 = ((($9)) + 60|0); //@line 84 "../../iup_childtree.c"
 $11 = HEAP32[$10>>2]|0; //@line 84 "../../iup_childtree.c"
 $12 = ($11|0)!=(0|0); //@line 84 "../../iup_childtree.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 103 "../../iup_childtree.c"
 }
 $13 = $1; //@line 87 "../../iup_childtree.c"
 $14 = ((($13)) + 60|0); //@line 87 "../../iup_childtree.c"
 $15 = HEAP32[$14>>2]|0; //@line 87 "../../iup_childtree.c"
 $2 = $15; //@line 87 "../../iup_childtree.c"
 $16 = $1; //@line 88 "../../iup_childtree.c"
 $17 = (_iupChildTreeGetNativeParent($16)|0); //@line 88 "../../iup_childtree.c"
 $3 = $17; //@line 88 "../../iup_childtree.c"
 $18 = $2; //@line 90 "../../iup_childtree.c"
 $19 = $1; //@line 90 "../../iup_childtree.c"
 $20 = (_IupGetChildPos($18,$19)|0); //@line 90 "../../iup_childtree.c"
 $4 = $20; //@line 90 "../../iup_childtree.c"
 $21 = $2; //@line 92 "../../iup_childtree.c"
 $22 = $1; //@line 92 "../../iup_childtree.c"
 _iChildDetach($21,$22); //@line 92 "../../iup_childtree.c"
 $23 = $2; //@line 93 "../../iup_childtree.c"
 $24 = $1; //@line 93 "../../iup_childtree.c"
 $25 = $4; //@line 93 "../../iup_childtree.c"
 _iupClassObjectChildRemoved($23,$24,$25); //@line 93 "../../iup_childtree.c"
 while(1) {
  $26 = $2; //@line 97 "../../iup_childtree.c"
  $27 = ($26|0)!=(0|0); //@line 97 "../../iup_childtree.c"
  if (!($27)) {
   label = 8;
   break;
  }
  $28 = $2; //@line 97 "../../iup_childtree.c"
  $29 = $3; //@line 97 "../../iup_childtree.c"
  $30 = ($28|0)!=($29|0); //@line 97 "../../iup_childtree.c"
  if (!($30)) {
   label = 8;
   break;
  }
  $31 = $2; //@line 99 "../../iup_childtree.c"
  $32 = ((($31)) + 60|0); //@line 99 "../../iup_childtree.c"
  $33 = HEAP32[$32>>2]|0; //@line 99 "../../iup_childtree.c"
  $2 = $33; //@line 99 "../../iup_childtree.c"
  $34 = $2; //@line 100 "../../iup_childtree.c"
  $35 = ($34|0)!=(0|0); //@line 100 "../../iup_childtree.c"
  if (!($35)) {
   continue;
  }
  $36 = $2; //@line 101 "../../iup_childtree.c"
  $37 = $1; //@line 101 "../../iup_childtree.c"
  $38 = $4; //@line 101 "../../iup_childtree.c"
  _iupClassObjectChildRemoved($36,$37,$38); //@line 101 "../../iup_childtree.c"
 }
 if ((label|0) == 8) {
  STACKTOP = sp;return; //@line 103 "../../iup_childtree.c"
 }
}
function _iupChildTreeGetNativeParent($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 531 "../../iup_childtree.c"
 $4 = ((($3)) + 60|0); //@line 531 "../../iup_childtree.c"
 $5 = HEAP32[$4>>2]|0; //@line 531 "../../iup_childtree.c"
 $2 = $5; //@line 531 "../../iup_childtree.c"
 while(1) {
  $6 = $2; //@line 532 "../../iup_childtree.c"
  $7 = ($6|0)!=(0|0); //@line 532 "../../iup_childtree.c"
  if ($7) {
   $8 = $2; //@line 532 "../../iup_childtree.c"
   $9 = ((($8)) + 4|0); //@line 532 "../../iup_childtree.c"
   $10 = HEAP32[$9>>2]|0; //@line 532 "../../iup_childtree.c"
   $11 = ((($10)) + 8|0); //@line 532 "../../iup_childtree.c"
   $12 = HEAP32[$11>>2]|0; //@line 532 "../../iup_childtree.c"
   $13 = ($12|0)==(0); //@line 532 "../../iup_childtree.c"
   $17 = $13;
  } else {
   $17 = 0;
  }
  $14 = $2; //@line 533 "../../iup_childtree.c"
  if (!($17)) {
   break;
  }
  $15 = ((($14)) + 60|0); //@line 533 "../../iup_childtree.c"
  $16 = HEAP32[$15>>2]|0; //@line 533 "../../iup_childtree.c"
  $2 = $16; //@line 533 "../../iup_childtree.c"
 }
 STACKTOP = sp;return ($14|0); //@line 534 "../../iup_childtree.c"
}
function _IupGetChildPos($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 432 "../../iup_childtree.c"
 $8 = (_iupObjectCheck($7)|0); //@line 432 "../../iup_childtree.c"
 $9 = ($8|0)!=(0); //@line 432 "../../iup_childtree.c"
 if (!($9)) {
  $2 = -1; //@line 433 "../../iup_childtree.c"
  $24 = $2; //@line 441 "../../iup_childtree.c"
  STACKTOP = sp;return ($24|0); //@line 441 "../../iup_childtree.c"
 }
 $5 = 0; //@line 435 "../../iup_childtree.c"
 $10 = $3; //@line 435 "../../iup_childtree.c"
 $11 = ((($10)) + 64|0); //@line 435 "../../iup_childtree.c"
 $12 = HEAP32[$11>>2]|0; //@line 435 "../../iup_childtree.c"
 $6 = $12; //@line 435 "../../iup_childtree.c"
 while(1) {
  $13 = $6; //@line 435 "../../iup_childtree.c"
  $14 = ($13|0)!=(0|0); //@line 435 "../../iup_childtree.c"
  if (!($14)) {
   label = 8;
   break;
  }
  $15 = $6; //@line 437 "../../iup_childtree.c"
  $16 = $4; //@line 437 "../../iup_childtree.c"
  $17 = ($15|0)==($16|0); //@line 437 "../../iup_childtree.c"
  if ($17) {
   label = 6;
   break;
  }
  $19 = $6; //@line 435 "../../iup_childtree.c"
  $20 = ((($19)) + 68|0); //@line 435 "../../iup_childtree.c"
  $21 = HEAP32[$20>>2]|0; //@line 435 "../../iup_childtree.c"
  $6 = $21; //@line 435 "../../iup_childtree.c"
  $22 = $5; //@line 435 "../../iup_childtree.c"
  $23 = (($22) + 1)|0; //@line 435 "../../iup_childtree.c"
  $5 = $23; //@line 435 "../../iup_childtree.c"
 }
 if ((label|0) == 6) {
  $18 = $5; //@line 438 "../../iup_childtree.c"
  $2 = $18; //@line 438 "../../iup_childtree.c"
  $24 = $2; //@line 441 "../../iup_childtree.c"
  STACKTOP = sp;return ($24|0); //@line 441 "../../iup_childtree.c"
 }
 else if ((label|0) == 8) {
  $2 = -1; //@line 440 "../../iup_childtree.c"
  $24 = $2; //@line 441 "../../iup_childtree.c"
  STACKTOP = sp;return ($24|0); //@line 441 "../../iup_childtree.c"
 }
 return (0)|0;
}
function _iChildDetach($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 51 "../../iup_childtree.c"
 $6 = $2; //@line 54 "../../iup_childtree.c"
 $7 = ((($6)) + 64|0); //@line 54 "../../iup_childtree.c"
 $8 = HEAP32[$7>>2]|0; //@line 54 "../../iup_childtree.c"
 $4 = $8; //@line 54 "../../iup_childtree.c"
 while(1) {
  $9 = $4; //@line 54 "../../iup_childtree.c"
  $10 = ($9|0)!=(0|0); //@line 54 "../../iup_childtree.c"
  if (!($10)) {
   label = 9;
   break;
  }
  $11 = $4; //@line 56 "../../iup_childtree.c"
  $12 = $3; //@line 56 "../../iup_childtree.c"
  $13 = ($11|0)==($12|0); //@line 56 "../../iup_childtree.c"
  if ($13) {
   break;
  }
  $27 = $4; //@line 68 "../../iup_childtree.c"
  $5 = $27; //@line 68 "../../iup_childtree.c"
  $28 = $4; //@line 54 "../../iup_childtree.c"
  $29 = ((($28)) + 68|0); //@line 54 "../../iup_childtree.c"
  $30 = HEAP32[$29>>2]|0; //@line 54 "../../iup_childtree.c"
  $4 = $30; //@line 54 "../../iup_childtree.c"
 }
 if ((label|0) == 9) {
  STACKTOP = sp;return; //@line 70 "../../iup_childtree.c"
 }
 $14 = $5; //@line 58 "../../iup_childtree.c"
 $15 = ($14|0)==(0|0); //@line 58 "../../iup_childtree.c"
 $16 = $3; //@line 59 "../../iup_childtree.c"
 $17 = ((($16)) + 68|0); //@line 59 "../../iup_childtree.c"
 $18 = HEAP32[$17>>2]|0; //@line 59 "../../iup_childtree.c"
 if ($15) {
  $19 = $2; //@line 59 "../../iup_childtree.c"
  $20 = ((($19)) + 64|0); //@line 59 "../../iup_childtree.c"
  HEAP32[$20>>2] = $18; //@line 59 "../../iup_childtree.c"
 } else {
  $21 = $5; //@line 61 "../../iup_childtree.c"
  $22 = ((($21)) + 68|0); //@line 61 "../../iup_childtree.c"
  HEAP32[$22>>2] = $18; //@line 61 "../../iup_childtree.c"
 }
 $23 = $3; //@line 63 "../../iup_childtree.c"
 $24 = ((($23)) + 68|0); //@line 63 "../../iup_childtree.c"
 HEAP32[$24>>2] = 0; //@line 63 "../../iup_childtree.c"
 $25 = $3; //@line 64 "../../iup_childtree.c"
 $26 = ((($25)) + 60|0); //@line 64 "../../iup_childtree.c"
 HEAP32[$26>>2] = 0; //@line 64 "../../iup_childtree.c"
 STACKTOP = sp;return; //@line 70 "../../iup_childtree.c"
}
function _iChildCount($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0; //@line 184 "../../iup_childtree.c"
 $3 = $1; //@line 186 "../../iup_childtree.c"
 $4 = ((($3)) + 64|0); //@line 186 "../../iup_childtree.c"
 $5 = HEAP32[$4>>2]|0; //@line 186 "../../iup_childtree.c"
 $1 = $5; //@line 186 "../../iup_childtree.c"
 while(1) {
  $6 = $1; //@line 187 "../../iup_childtree.c"
  $7 = ($6|0)!=(0|0); //@line 187 "../../iup_childtree.c"
  $8 = $2; //@line 189 "../../iup_childtree.c"
  if (!($7)) {
   break;
  }
  $9 = (($8) + 1)|0; //@line 189 "../../iup_childtree.c"
  $2 = $9; //@line 189 "../../iup_childtree.c"
  $10 = $1; //@line 190 "../../iup_childtree.c"
  $11 = ((($10)) + 68|0); //@line 190 "../../iup_childtree.c"
  $12 = HEAP32[$11>>2]|0; //@line 190 "../../iup_childtree.c"
  $1 = $12; //@line 190 "../../iup_childtree.c"
 }
 STACKTOP = sp;return ($8|0); //@line 193 "../../iup_childtree.c"
}
function _iChildFind($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 138 "../../iup_childtree.c"
 $7 = ((($6)) + 64|0); //@line 138 "../../iup_childtree.c"
 $8 = HEAP32[$7>>2]|0; //@line 138 "../../iup_childtree.c"
 $5 = $8; //@line 138 "../../iup_childtree.c"
 while(1) {
  $9 = $5; //@line 138 "../../iup_childtree.c"
  $10 = ($9|0)!=(0|0); //@line 138 "../../iup_childtree.c"
  if (!($10)) {
   label = 6;
   break;
  }
  $11 = $5; //@line 140 "../../iup_childtree.c"
  $12 = $4; //@line 140 "../../iup_childtree.c"
  $13 = ($11|0)==($12|0); //@line 140 "../../iup_childtree.c"
  if ($13) {
   label = 4;
   break;
  }
  $14 = $5; //@line 138 "../../iup_childtree.c"
  $15 = ((($14)) + 68|0); //@line 138 "../../iup_childtree.c"
  $16 = HEAP32[$15>>2]|0; //@line 138 "../../iup_childtree.c"
  $5 = $16; //@line 138 "../../iup_childtree.c"
 }
 if ((label|0) == 4) {
  $2 = 1; //@line 141 "../../iup_childtree.c"
  $17 = $2; //@line 145 "../../iup_childtree.c"
  STACKTOP = sp;return ($17|0); //@line 145 "../../iup_childtree.c"
 }
 else if ((label|0) == 6) {
  $2 = 0; //@line 144 "../../iup_childtree.c"
  $17 = $2; //@line 145 "../../iup_childtree.c"
  STACKTOP = sp;return ($17|0); //@line 145 "../../iup_childtree.c"
 }
 return (0)|0;
}
function _iupChildTreeInsert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = 0; //@line 150 "../../iup_childtree.c"
 $8 = $3; //@line 152 "../../iup_childtree.c"
 $9 = ((($8)) + 64|0); //@line 152 "../../iup_childtree.c"
 $10 = HEAP32[$9>>2]|0; //@line 152 "../../iup_childtree.c"
 $11 = ($10|0)==(0|0); //@line 152 "../../iup_childtree.c"
 if ($11) {
  $12 = $5; //@line 154 "../../iup_childtree.c"
  $13 = $3; //@line 154 "../../iup_childtree.c"
  $14 = ((($13)) + 64|0); //@line 154 "../../iup_childtree.c"
  HEAP32[$14>>2] = $12; //@line 154 "../../iup_childtree.c"
  $15 = $3; //@line 155 "../../iup_childtree.c"
  $16 = $5; //@line 155 "../../iup_childtree.c"
  $17 = ((($16)) + 60|0); //@line 155 "../../iup_childtree.c"
  HEAP32[$17>>2] = $15; //@line 155 "../../iup_childtree.c"
  STACKTOP = sp;return; //@line 180 "../../iup_childtree.c"
 }
 $18 = $4; //@line 159 "../../iup_childtree.c"
 $19 = ($18|0)!=(0|0); //@line 159 "../../iup_childtree.c"
 if (!($19)) {
  $20 = $3; //@line 160 "../../iup_childtree.c"
  $21 = ((($20)) + 64|0); //@line 160 "../../iup_childtree.c"
  $22 = HEAP32[$21>>2]|0; //@line 160 "../../iup_childtree.c"
  $4 = $22; //@line 160 "../../iup_childtree.c"
 }
 $23 = $3; //@line 163 "../../iup_childtree.c"
 $24 = ((($23)) + 64|0); //@line 163 "../../iup_childtree.c"
 $25 = HEAP32[$24>>2]|0; //@line 163 "../../iup_childtree.c"
 $6 = $25; //@line 163 "../../iup_childtree.c"
 while(1) {
  $26 = $6; //@line 163 "../../iup_childtree.c"
  $27 = ($26|0)!=(0|0); //@line 163 "../../iup_childtree.c"
  if (!($27)) {
   label = 12;
   break;
  }
  $28 = $6; //@line 165 "../../iup_childtree.c"
  $29 = $4; //@line 165 "../../iup_childtree.c"
  $30 = ($28|0)==($29|0); //@line 165 "../../iup_childtree.c"
  if ($30) {
   break;
  }
  $44 = $6; //@line 178 "../../iup_childtree.c"
  $7 = $44; //@line 178 "../../iup_childtree.c"
  $45 = $6; //@line 163 "../../iup_childtree.c"
  $46 = ((($45)) + 68|0); //@line 163 "../../iup_childtree.c"
  $47 = HEAP32[$46>>2]|0; //@line 163 "../../iup_childtree.c"
  $6 = $47; //@line 163 "../../iup_childtree.c"
 }
 if ((label|0) == 12) {
  STACKTOP = sp;return; //@line 180 "../../iup_childtree.c"
 }
 $31 = $3; //@line 167 "../../iup_childtree.c"
 $32 = $5; //@line 167 "../../iup_childtree.c"
 $33 = ((($32)) + 60|0); //@line 167 "../../iup_childtree.c"
 HEAP32[$33>>2] = $31; //@line 167 "../../iup_childtree.c"
 $34 = $4; //@line 168 "../../iup_childtree.c"
 $35 = $5; //@line 168 "../../iup_childtree.c"
 $36 = ((($35)) + 68|0); //@line 168 "../../iup_childtree.c"
 HEAP32[$36>>2] = $34; //@line 168 "../../iup_childtree.c"
 $37 = $7; //@line 170 "../../iup_childtree.c"
 $38 = ($37|0)==(0|0); //@line 170 "../../iup_childtree.c"
 $39 = $5; //@line 171 "../../iup_childtree.c"
 if ($38) {
  $40 = $3; //@line 171 "../../iup_childtree.c"
  $41 = ((($40)) + 64|0); //@line 171 "../../iup_childtree.c"
  HEAP32[$41>>2] = $39; //@line 171 "../../iup_childtree.c"
  STACKTOP = sp;return; //@line 180 "../../iup_childtree.c"
 } else {
  $42 = $7; //@line 173 "../../iup_childtree.c"
  $43 = ((($42)) + 68|0); //@line 173 "../../iup_childtree.c"
  HEAP32[$43>>2] = $39; //@line 173 "../../iup_childtree.c"
  STACKTOP = sp;return; //@line 180 "../../iup_childtree.c"
 }
}
function _iupChildTreeAppend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 255 "../../iup_childtree.c"
 $6 = $3; //@line 255 "../../iup_childtree.c"
 $7 = ((($6)) + 60|0); //@line 255 "../../iup_childtree.c"
 HEAP32[$7>>2] = $5; //@line 255 "../../iup_childtree.c"
 $8 = $2; //@line 257 "../../iup_childtree.c"
 $9 = ((($8)) + 64|0); //@line 257 "../../iup_childtree.c"
 $10 = HEAP32[$9>>2]|0; //@line 257 "../../iup_childtree.c"
 $11 = ($10|0)==(0|0); //@line 257 "../../iup_childtree.c"
 if ($11) {
  $12 = $3; //@line 258 "../../iup_childtree.c"
  $13 = $2; //@line 258 "../../iup_childtree.c"
  $14 = ((($13)) + 64|0); //@line 258 "../../iup_childtree.c"
  HEAP32[$14>>2] = $12; //@line 258 "../../iup_childtree.c"
  STACKTOP = sp;return; //@line 266 "../../iup_childtree.c"
 }
 $15 = $2; //@line 261 "../../iup_childtree.c"
 $16 = ((($15)) + 64|0); //@line 261 "../../iup_childtree.c"
 $17 = HEAP32[$16>>2]|0; //@line 261 "../../iup_childtree.c"
 $4 = $17; //@line 261 "../../iup_childtree.c"
 while(1) {
  $18 = $4; //@line 262 "../../iup_childtree.c"
  $19 = ((($18)) + 68|0); //@line 262 "../../iup_childtree.c"
  $20 = HEAP32[$19>>2]|0; //@line 262 "../../iup_childtree.c"
  $21 = ($20|0)!=(0|0); //@line 262 "../../iup_childtree.c"
  if (!($21)) {
   break;
  }
  $22 = $4; //@line 263 "../../iup_childtree.c"
  $23 = ((($22)) + 68|0); //@line 263 "../../iup_childtree.c"
  $24 = HEAP32[$23>>2]|0; //@line 263 "../../iup_childtree.c"
  $4 = $24; //@line 263 "../../iup_childtree.c"
 }
 $25 = $3; //@line 264 "../../iup_childtree.c"
 $26 = $4; //@line 264 "../../iup_childtree.c"
 $27 = ((($26)) + 68|0); //@line 264 "../../iup_childtree.c"
 HEAP32[$27>>2] = $25; //@line 264 "../../iup_childtree.c"
 STACKTOP = sp;return; //@line 266 "../../iup_childtree.c"
}
function _IupAppend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 270 "../../iup_childtree.c"
 $5 = $6; //@line 270 "../../iup_childtree.c"
 $7 = $3; //@line 273 "../../iup_childtree.c"
 $8 = (_iupObjectCheck($7)|0); //@line 273 "../../iup_childtree.c"
 $9 = ($8|0)!=(0); //@line 273 "../../iup_childtree.c"
 if (!($9)) {
  $2 = 0; //@line 274 "../../iup_childtree.c"
  $66 = $2; //@line 320 "../../iup_childtree.c"
  STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
 }
 $10 = $4; //@line 277 "../../iup_childtree.c"
 $11 = (_iupObjectCheck($10)|0); //@line 277 "../../iup_childtree.c"
 $12 = ($11|0)!=(0); //@line 277 "../../iup_childtree.c"
 if (!($12)) {
  $2 = 0; //@line 278 "../../iup_childtree.c"
  $66 = $2; //@line 320 "../../iup_childtree.c"
  STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
 }
 $13 = $5; //@line 289 "../../iup_childtree.c"
 $14 = (_iupClassObjectGetInnerContainer($13)|0); //@line 289 "../../iup_childtree.c"
 $3 = $14; //@line 289 "../../iup_childtree.c"
 $15 = $3; //@line 290 "../../iup_childtree.c"
 $16 = ($15|0)!=(0|0); //@line 290 "../../iup_childtree.c"
 if (!($16)) {
  $2 = 0; //@line 291 "../../iup_childtree.c"
  $66 = $2; //@line 320 "../../iup_childtree.c"
  STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
 }
 $17 = $3; //@line 293 "../../iup_childtree.c"
 $18 = ((($17)) + 4|0); //@line 293 "../../iup_childtree.c"
 $19 = HEAP32[$18>>2]|0; //@line 293 "../../iup_childtree.c"
 $20 = ((($19)) + 12|0); //@line 293 "../../iup_childtree.c"
 $21 = HEAP32[$20>>2]|0; //@line 293 "../../iup_childtree.c"
 $22 = ($21|0)==(0); //@line 293 "../../iup_childtree.c"
 if ($22) {
  $2 = 0; //@line 294 "../../iup_childtree.c"
  $66 = $2; //@line 320 "../../iup_childtree.c"
  STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
 }
 $23 = $3; //@line 295 "../../iup_childtree.c"
 $24 = ((($23)) + 4|0); //@line 295 "../../iup_childtree.c"
 $25 = HEAP32[$24>>2]|0; //@line 295 "../../iup_childtree.c"
 $26 = ((($25)) + 12|0); //@line 295 "../../iup_childtree.c"
 $27 = HEAP32[$26>>2]|0; //@line 295 "../../iup_childtree.c"
 $28 = ($27|0)>(1); //@line 295 "../../iup_childtree.c"
 if ($28) {
  $29 = $3; //@line 296 "../../iup_childtree.c"
  $30 = (_iChildCount($29)|0); //@line 296 "../../iup_childtree.c"
  $31 = $3; //@line 296 "../../iup_childtree.c"
  $32 = ((($31)) + 4|0); //@line 296 "../../iup_childtree.c"
  $33 = HEAP32[$32>>2]|0; //@line 296 "../../iup_childtree.c"
  $34 = ((($33)) + 12|0); //@line 296 "../../iup_childtree.c"
  $35 = HEAP32[$34>>2]|0; //@line 296 "../../iup_childtree.c"
  $36 = (($35) - 1)|0; //@line 296 "../../iup_childtree.c"
  $37 = ($30|0)==($36|0); //@line 296 "../../iup_childtree.c"
  if ($37) {
   $2 = 0; //@line 297 "../../iup_childtree.c"
   $66 = $2; //@line 320 "../../iup_childtree.c"
   STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
  }
 }
 $38 = $3; //@line 301 "../../iup_childtree.c"
 $39 = ((($38)) + 4|0); //@line 301 "../../iup_childtree.c"
 $40 = HEAP32[$39>>2]|0; //@line 301 "../../iup_childtree.c"
 $41 = ((($40)) + 8|0); //@line 301 "../../iup_childtree.c"
 $42 = HEAP32[$41>>2]|0; //@line 301 "../../iup_childtree.c"
 $43 = ($42|0)==(0); //@line 301 "../../iup_childtree.c"
 if ($43) {
  $44 = $3; //@line 302 "../../iup_childtree.c"
  $45 = $4; //@line 302 "../../iup_childtree.c"
  $46 = (_iChildFind($44,$45)|0); //@line 302 "../../iup_childtree.c"
  $47 = ($46|0)!=(0); //@line 302 "../../iup_childtree.c"
  if ($47) {
   $48 = $3; //@line 304 "../../iup_childtree.c"
   $49 = $4; //@line 304 "../../iup_childtree.c"
   _iChildDetach($48,$49); //@line 304 "../../iup_childtree.c"
   $50 = $3; //@line 305 "../../iup_childtree.c"
   $51 = $4; //@line 305 "../../iup_childtree.c"
   _iupChildTreeAppend($50,$51); //@line 305 "../../iup_childtree.c"
  } else {
   label = 15;
  }
 } else {
  label = 15;
 }
 do {
  if ((label|0) == 15) {
   $52 = $4; //@line 310 "../../iup_childtree.c"
   $53 = ((($52)) + 16|0); //@line 310 "../../iup_childtree.c"
   $54 = HEAP32[$53>>2]|0; //@line 310 "../../iup_childtree.c"
   $55 = ($54|0)!=(0|0); //@line 310 "../../iup_childtree.c"
   if ($55) {
    $2 = 0; //@line 311 "../../iup_childtree.c"
    $66 = $2; //@line 320 "../../iup_childtree.c"
    STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
   } else {
    $56 = $3; //@line 313 "../../iup_childtree.c"
    $57 = $4; //@line 313 "../../iup_childtree.c"
    _iupChildTreeAppend($56,$57); //@line 313 "../../iup_childtree.c"
    $58 = $3; //@line 314 "../../iup_childtree.c"
    $59 = $4; //@line 314 "../../iup_childtree.c"
    _iupClassObjectChildAdded($58,$59); //@line 314 "../../iup_childtree.c"
    $60 = $5; //@line 315 "../../iup_childtree.c"
    $61 = $3; //@line 315 "../../iup_childtree.c"
    $62 = ($60|0)!=($61|0); //@line 315 "../../iup_childtree.c"
    if (!($62)) {
     break;
    }
    $63 = $5; //@line 316 "../../iup_childtree.c"
    $64 = $4; //@line 316 "../../iup_childtree.c"
    _iupClassObjectChildAdded($63,$64); //@line 316 "../../iup_childtree.c"
    break;
   }
  }
 } while(0);
 $65 = $3; //@line 319 "../../iup_childtree.c"
 $2 = $65; //@line 319 "../../iup_childtree.c"
 $66 = $2; //@line 320 "../../iup_childtree.c"
 STACKTOP = sp;return ($66|0); //@line 320 "../../iup_childtree.c"
}
function _IupReparent($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $10 = $5; //@line 339 "../../iup_childtree.c"
 $7 = $10; //@line 339 "../../iup_childtree.c"
 $11 = $5; //@line 344 "../../iup_childtree.c"
 $12 = (_iupObjectCheck($11)|0); //@line 344 "../../iup_childtree.c"
 $13 = ($12|0)!=(0); //@line 344 "../../iup_childtree.c"
 if (!($13)) {
  $3 = 1; //@line 345 "../../iup_childtree.c"
  $103 = $3; //@line 406 "../../iup_childtree.c"
  STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
 }
 $14 = $4; //@line 348 "../../iup_childtree.c"
 $15 = (_iupObjectCheck($14)|0); //@line 348 "../../iup_childtree.c"
 $16 = ($15|0)!=(0); //@line 348 "../../iup_childtree.c"
 if (!($16)) {
  $3 = 1; //@line 349 "../../iup_childtree.c"
  $103 = $3; //@line 406 "../../iup_childtree.c"
  STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
 }
 $17 = $6; //@line 351 "../../iup_childtree.c"
 $18 = ($17|0)!=(0|0); //@line 351 "../../iup_childtree.c"
 if ($18) {
  $19 = $6; //@line 355 "../../iup_childtree.c"
  $20 = (_iupObjectCheck($19)|0); //@line 355 "../../iup_childtree.c"
  $21 = ($20|0)!=(0); //@line 355 "../../iup_childtree.c"
  if (!($21)) {
   $3 = 1; //@line 356 "../../iup_childtree.c"
   $103 = $3; //@line 406 "../../iup_childtree.c"
   STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
  }
 }
 $22 = $7; //@line 360 "../../iup_childtree.c"
 $23 = (_iupClassObjectGetInnerContainer($22)|0); //@line 360 "../../iup_childtree.c"
 $5 = $23; //@line 360 "../../iup_childtree.c"
 $24 = $5; //@line 361 "../../iup_childtree.c"
 $25 = ($24|0)!=(0|0); //@line 361 "../../iup_childtree.c"
 if (!($25)) {
  $3 = 1; //@line 362 "../../iup_childtree.c"
  $103 = $3; //@line 406 "../../iup_childtree.c"
  STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
 }
 $26 = $5; //@line 364 "../../iup_childtree.c"
 $27 = ((($26)) + 4|0); //@line 364 "../../iup_childtree.c"
 $28 = HEAP32[$27>>2]|0; //@line 364 "../../iup_childtree.c"
 $29 = ((($28)) + 12|0); //@line 364 "../../iup_childtree.c"
 $30 = HEAP32[$29>>2]|0; //@line 364 "../../iup_childtree.c"
 $31 = ($30|0)==(0); //@line 364 "../../iup_childtree.c"
 if ($31) {
  $3 = 1; //@line 365 "../../iup_childtree.c"
  $103 = $3; //@line 406 "../../iup_childtree.c"
  STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
 }
 $32 = $5; //@line 366 "../../iup_childtree.c"
 $33 = ((($32)) + 4|0); //@line 366 "../../iup_childtree.c"
 $34 = HEAP32[$33>>2]|0; //@line 366 "../../iup_childtree.c"
 $35 = ((($34)) + 12|0); //@line 366 "../../iup_childtree.c"
 $36 = HEAP32[$35>>2]|0; //@line 366 "../../iup_childtree.c"
 $37 = ($36|0)>(1); //@line 366 "../../iup_childtree.c"
 if ($37) {
  $38 = $5; //@line 367 "../../iup_childtree.c"
  $39 = (_iChildCount($38)|0); //@line 367 "../../iup_childtree.c"
  $40 = $5; //@line 367 "../../iup_childtree.c"
  $41 = ((($40)) + 4|0); //@line 367 "../../iup_childtree.c"
  $42 = HEAP32[$41>>2]|0; //@line 367 "../../iup_childtree.c"
  $43 = ((($42)) + 12|0); //@line 367 "../../iup_childtree.c"
  $44 = HEAP32[$43>>2]|0; //@line 367 "../../iup_childtree.c"
  $45 = (($44) - 1)|0; //@line 367 "../../iup_childtree.c"
  $46 = ($39|0)==($45|0); //@line 367 "../../iup_childtree.c"
  if ($46) {
   $3 = 1; //@line 368 "../../iup_childtree.c"
   $103 = $3; //@line 406 "../../iup_childtree.c"
   STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
  }
 }
 $47 = $5; //@line 372 "../../iup_childtree.c"
 $48 = ((($47)) + 16|0); //@line 372 "../../iup_childtree.c"
 $49 = HEAP32[$48>>2]|0; //@line 372 "../../iup_childtree.c"
 $50 = ($49|0)!=(0|0); //@line 372 "../../iup_childtree.c"
 if ($50) {
  label = 17;
 } else {
  $51 = $4; //@line 372 "../../iup_childtree.c"
  $52 = ((($51)) + 16|0); //@line 372 "../../iup_childtree.c"
  $53 = HEAP32[$52>>2]|0; //@line 372 "../../iup_childtree.c"
  $54 = ($53|0)!=(0|0); //@line 372 "../../iup_childtree.c"
  if (!($54)) {
   label = 17;
  }
 }
 do {
  if ((label|0) == 17) {
   $55 = $5; //@line 373 "../../iup_childtree.c"
   $56 = ((($55)) + 16|0); //@line 373 "../../iup_childtree.c"
   $57 = HEAP32[$56>>2]|0; //@line 373 "../../iup_childtree.c"
   $58 = ($57|0)!=(0|0); //@line 373 "../../iup_childtree.c"
   if ($58) {
    $59 = $4; //@line 373 "../../iup_childtree.c"
    $60 = ((($59)) + 16|0); //@line 373 "../../iup_childtree.c"
    $61 = HEAP32[$60>>2]|0; //@line 373 "../../iup_childtree.c"
    $62 = ($61|0)!=(0|0); //@line 373 "../../iup_childtree.c"
    if (!($62)) {
     break;
    }
   }
   $63 = $4; //@line 378 "../../iup_childtree.c"
   $64 = ((($63)) + 60|0); //@line 378 "../../iup_childtree.c"
   $65 = HEAP32[$64>>2]|0; //@line 378 "../../iup_childtree.c"
   $8 = $65; //@line 378 "../../iup_childtree.c"
   $66 = $8; //@line 380 "../../iup_childtree.c"
   $67 = $4; //@line 380 "../../iup_childtree.c"
   $68 = (_IupGetChildPos($66,$67)|0); //@line 380 "../../iup_childtree.c"
   $9 = $68; //@line 380 "../../iup_childtree.c"
   $69 = $8; //@line 382 "../../iup_childtree.c"
   $70 = $4; //@line 382 "../../iup_childtree.c"
   _iChildDetach($69,$70); //@line 382 "../../iup_childtree.c"
   $71 = $8; //@line 383 "../../iup_childtree.c"
   $72 = $4; //@line 383 "../../iup_childtree.c"
   $73 = $9; //@line 383 "../../iup_childtree.c"
   _iupClassObjectChildRemoved($71,$72,$73); //@line 383 "../../iup_childtree.c"
   $74 = $6; //@line 387 "../../iup_childtree.c"
   $75 = ($74|0)!=(0|0); //@line 387 "../../iup_childtree.c"
   $76 = $5; //@line 388 "../../iup_childtree.c"
   if ($75) {
    $77 = $6; //@line 388 "../../iup_childtree.c"
    $78 = $4; //@line 388 "../../iup_childtree.c"
    _iupChildTreeInsert($76,$77,$78); //@line 388 "../../iup_childtree.c"
   } else {
    $79 = $4; //@line 390 "../../iup_childtree.c"
    _iupChildTreeAppend($76,$79); //@line 390 "../../iup_childtree.c"
   }
   $80 = $5; //@line 391 "../../iup_childtree.c"
   $81 = $4; //@line 391 "../../iup_childtree.c"
   _iupClassObjectChildAdded($80,$81); //@line 391 "../../iup_childtree.c"
   $82 = $7; //@line 392 "../../iup_childtree.c"
   $83 = $5; //@line 392 "../../iup_childtree.c"
   $84 = ($82|0)!=($83|0); //@line 392 "../../iup_childtree.c"
   if ($84) {
    $85 = $7; //@line 393 "../../iup_childtree.c"
    $86 = $4; //@line 393 "../../iup_childtree.c"
    _iupClassObjectChildAdded($85,$86); //@line 393 "../../iup_childtree.c"
   }
   $87 = $4; //@line 397 "../../iup_childtree.c"
   $88 = ((($87)) + 16|0); //@line 397 "../../iup_childtree.c"
   $89 = HEAP32[$88>>2]|0; //@line 397 "../../iup_childtree.c"
   $90 = ($89|0)!=(0|0); //@line 397 "../../iup_childtree.c"
   do {
    if ($90) {
     $91 = $5; //@line 397 "../../iup_childtree.c"
     $92 = ((($91)) + 16|0); //@line 397 "../../iup_childtree.c"
     $93 = HEAP32[$92>>2]|0; //@line 397 "../../iup_childtree.c"
     $94 = ($93|0)!=(0|0); //@line 397 "../../iup_childtree.c"
     if ($94) {
      $95 = $4; //@line 399 "../../iup_childtree.c"
      $96 = ((($95)) + 4|0); //@line 399 "../../iup_childtree.c"
      $97 = HEAP32[$96>>2]|0; //@line 399 "../../iup_childtree.c"
      $98 = ((($97)) + 8|0); //@line 399 "../../iup_childtree.c"
      $99 = HEAP32[$98>>2]|0; //@line 399 "../../iup_childtree.c"
      $100 = ($99|0)!=(0); //@line 399 "../../iup_childtree.c"
      $101 = $4; //@line 400 "../../iup_childtree.c"
      if ($100) {
       _iupdrvReparent($101); //@line 400 "../../iup_childtree.c"
       break;
      } else {
       $102 = $5; //@line 402 "../../iup_childtree.c"
       _iChildReparent($101,$102); //@line 402 "../../iup_childtree.c"
       break;
      }
     }
    }
   } while(0);
   $3 = 0; //@line 405 "../../iup_childtree.c"
   $103 = $3; //@line 406 "../../iup_childtree.c"
   STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
  }
 } while(0);
 $3 = 1; //@line 374 "../../iup_childtree.c"
 $103 = $3; //@line 406 "../../iup_childtree.c"
 STACKTOP = sp;return ($103|0); //@line 406 "../../iup_childtree.c"
}
function _iChildReparent($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 328 "../../iup_childtree.c"
 $6 = ((($5)) + 64|0); //@line 328 "../../iup_childtree.c"
 $7 = HEAP32[$6>>2]|0; //@line 328 "../../iup_childtree.c"
 $4 = $7; //@line 328 "../../iup_childtree.c"
 while(1) {
  $8 = $4; //@line 328 "../../iup_childtree.c"
  $9 = ($8|0)!=(0|0); //@line 328 "../../iup_childtree.c"
  if (!($9)) {
   break;
  }
  $10 = $4; //@line 330 "../../iup_childtree.c"
  $11 = ((($10)) + 4|0); //@line 330 "../../iup_childtree.c"
  $12 = HEAP32[$11>>2]|0; //@line 330 "../../iup_childtree.c"
  $13 = ((($12)) + 8|0); //@line 330 "../../iup_childtree.c"
  $14 = HEAP32[$13>>2]|0; //@line 330 "../../iup_childtree.c"
  $15 = ($14|0)!=(0); //@line 330 "../../iup_childtree.c"
  $16 = $4; //@line 331 "../../iup_childtree.c"
  if ($15) {
   _iupdrvReparent($16); //@line 331 "../../iup_childtree.c"
  } else {
   $17 = $3; //@line 333 "../../iup_childtree.c"
   _iChildReparent($16,$17); //@line 333 "../../iup_childtree.c"
  }
  $18 = $4; //@line 328 "../../iup_childtree.c"
  $19 = ((($18)) + 68|0); //@line 328 "../../iup_childtree.c"
  $20 = HEAP32[$19>>2]|0; //@line 328 "../../iup_childtree.c"
  $4 = $20; //@line 328 "../../iup_childtree.c"
 }
 STACKTOP = sp;return; //@line 335 "../../iup_childtree.c"
}
function _IupGetChild($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 414 "../../iup_childtree.c"
 $8 = (_iupObjectCheck($7)|0); //@line 414 "../../iup_childtree.c"
 $9 = ($8|0)!=(0); //@line 414 "../../iup_childtree.c"
 if (!($9)) {
  $2 = 0; //@line 415 "../../iup_childtree.c"
  $23 = $2; //@line 424 "../../iup_childtree.c"
  STACKTOP = sp;return ($23|0); //@line 424 "../../iup_childtree.c"
 }
 $5 = 0; //@line 417 "../../iup_childtree.c"
 $10 = $3; //@line 417 "../../iup_childtree.c"
 $11 = ((($10)) + 64|0); //@line 417 "../../iup_childtree.c"
 $12 = HEAP32[$11>>2]|0; //@line 417 "../../iup_childtree.c"
 $6 = $12; //@line 417 "../../iup_childtree.c"
 while(1) {
  $13 = $6; //@line 417 "../../iup_childtree.c"
  $14 = ($13|0)!=(0|0); //@line 417 "../../iup_childtree.c"
  if (!($14)) {
   label = 8;
   break;
  }
  $15 = $5; //@line 419 "../../iup_childtree.c"
  $16 = $4; //@line 419 "../../iup_childtree.c"
  $17 = ($15|0)==($16|0); //@line 419 "../../iup_childtree.c"
  $18 = $6; //@line 420 "../../iup_childtree.c"
  if ($17) {
   label = 6;
   break;
  }
  $19 = ((($18)) + 68|0); //@line 417 "../../iup_childtree.c"
  $20 = HEAP32[$19>>2]|0; //@line 417 "../../iup_childtree.c"
  $6 = $20; //@line 417 "../../iup_childtree.c"
  $21 = $5; //@line 417 "../../iup_childtree.c"
  $22 = (($21) + 1)|0; //@line 417 "../../iup_childtree.c"
  $5 = $22; //@line 417 "../../iup_childtree.c"
 }
 if ((label|0) == 6) {
  $2 = $18; //@line 420 "../../iup_childtree.c"
  $23 = $2; //@line 424 "../../iup_childtree.c"
  STACKTOP = sp;return ($23|0); //@line 424 "../../iup_childtree.c"
 }
 else if ((label|0) == 8) {
  $2 = 0; //@line 423 "../../iup_childtree.c"
  $23 = $2; //@line 424 "../../iup_childtree.c"
  STACKTOP = sp;return ($23|0); //@line 424 "../../iup_childtree.c"
 }
 return (0)|0;
}
function _IupGetChildCount($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = 0; //@line 460 "../../iup_childtree.c"
 $5 = $2; //@line 464 "../../iup_childtree.c"
 $6 = (_iupObjectCheck($5)|0); //@line 464 "../../iup_childtree.c"
 $7 = ($6|0)!=(0); //@line 464 "../../iup_childtree.c"
 if (!($7)) {
  $1 = -1; //@line 465 "../../iup_childtree.c"
  $18 = $1; //@line 471 "../../iup_childtree.c"
  STACKTOP = sp;return ($18|0); //@line 471 "../../iup_childtree.c"
 }
 $8 = $2; //@line 467 "../../iup_childtree.c"
 $9 = ((($8)) + 64|0); //@line 467 "../../iup_childtree.c"
 $10 = HEAP32[$9>>2]|0; //@line 467 "../../iup_childtree.c"
 $4 = $10; //@line 467 "../../iup_childtree.c"
 while(1) {
  $11 = $4; //@line 467 "../../iup_childtree.c"
  $12 = ($11|0)!=(0|0); //@line 467 "../../iup_childtree.c"
  $13 = $3; //@line 468 "../../iup_childtree.c"
  if (!($12)) {
   break;
  }
  $14 = (($13) + 1)|0; //@line 468 "../../iup_childtree.c"
  $3 = $14; //@line 468 "../../iup_childtree.c"
  $15 = $4; //@line 467 "../../iup_childtree.c"
  $16 = ((($15)) + 68|0); //@line 467 "../../iup_childtree.c"
  $17 = HEAP32[$16>>2]|0; //@line 467 "../../iup_childtree.c"
  $4 = $17; //@line 467 "../../iup_childtree.c"
 }
 $1 = $13; //@line 470 "../../iup_childtree.c"
 $18 = $1; //@line 471 "../../iup_childtree.c"
 STACKTOP = sp;return ($18|0); //@line 471 "../../iup_childtree.c"
}
function _IupGetBrother($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 496 "../../iup_childtree.c"
 $4 = (_iupObjectCheck($3)|0); //@line 496 "../../iup_childtree.c"
 $5 = ($4|0)!=(0); //@line 496 "../../iup_childtree.c"
 if ($5) {
  $6 = $2; //@line 499 "../../iup_childtree.c"
  $7 = ((($6)) + 68|0); //@line 499 "../../iup_childtree.c"
  $8 = HEAP32[$7>>2]|0; //@line 499 "../../iup_childtree.c"
  $1 = $8; //@line 499 "../../iup_childtree.c"
 } else {
  $1 = 0; //@line 497 "../../iup_childtree.c"
 }
 $9 = $1; //@line 500 "../../iup_childtree.c"
 STACKTOP = sp;return ($9|0); //@line 500 "../../iup_childtree.c"
}
function _IupGetParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 505 "../../iup_childtree.c"
 $4 = (_iupObjectCheck($3)|0); //@line 505 "../../iup_childtree.c"
 $5 = ($4|0)!=(0); //@line 505 "../../iup_childtree.c"
 if ($5) {
  $6 = $2; //@line 508 "../../iup_childtree.c"
  $7 = ((($6)) + 60|0); //@line 508 "../../iup_childtree.c"
  $8 = HEAP32[$7>>2]|0; //@line 508 "../../iup_childtree.c"
  $1 = $8; //@line 508 "../../iup_childtree.c"
 } else {
  $1 = 0; //@line 506 "../../iup_childtree.c"
 }
 $9 = $1; //@line 509 "../../iup_childtree.c"
 STACKTOP = sp;return ($9|0); //@line 509 "../../iup_childtree.c"
}
function _iupClassObjectCreate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 169 "../../iup_class.c"
 $5 = ((($4)) + 4|0); //@line 169 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 169 "../../iup_class.c"
 $7 = $2; //@line 169 "../../iup_class.c"
 $8 = $3; //@line 169 "../../iup_class.c"
 $9 = (_iClassCreate($6,$7,$8)|0); //@line 169 "../../iup_class.c"
 STACKTOP = sp;return ($9|0); //@line 169 "../../iup_class.c"
}
function _iClassCreate($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 29 "../../iup_class.c"
 $7 = $3; //@line 30 "../../iup_class.c"
 $8 = ((($7)) + 24|0); //@line 30 "../../iup_class.c"
 $9 = HEAP32[$8>>2]|0; //@line 30 "../../iup_class.c"
 $10 = ($9|0)!=(0|0); //@line 30 "../../iup_class.c"
 if ($10) {
  $11 = $3; //@line 31 "../../iup_class.c"
  $12 = ((($11)) + 24|0); //@line 31 "../../iup_class.c"
  $13 = HEAP32[$12>>2]|0; //@line 31 "../../iup_class.c"
  $14 = $4; //@line 31 "../../iup_class.c"
  $15 = $5; //@line 31 "../../iup_class.c"
  $16 = (_iClassCreate($13,$14,$15)|0); //@line 31 "../../iup_class.c"
  $6 = $16; //@line 31 "../../iup_class.c"
 }
 $17 = $6; //@line 33 "../../iup_class.c"
 $18 = ($17|0)==(0); //@line 33 "../../iup_class.c"
 if (!($18)) {
  $29 = $6; //@line 36 "../../iup_class.c"
  STACKTOP = sp;return ($29|0); //@line 36 "../../iup_class.c"
 }
 $19 = $3; //@line 33 "../../iup_class.c"
 $20 = ((($19)) + 40|0); //@line 33 "../../iup_class.c"
 $21 = HEAP32[$20>>2]|0; //@line 33 "../../iup_class.c"
 $22 = ($21|0)!=(0|0); //@line 33 "../../iup_class.c"
 if (!($22)) {
  $29 = $6; //@line 36 "../../iup_class.c"
  STACKTOP = sp;return ($29|0); //@line 36 "../../iup_class.c"
 }
 $23 = $3; //@line 34 "../../iup_class.c"
 $24 = ((($23)) + 40|0); //@line 34 "../../iup_class.c"
 $25 = HEAP32[$24>>2]|0; //@line 34 "../../iup_class.c"
 $26 = $4; //@line 34 "../../iup_class.c"
 $27 = $5; //@line 34 "../../iup_class.c"
 $28 = (FUNCTION_TABLE_iii[$25 & 1023]($26,$27)|0); //@line 34 "../../iup_class.c"
 $6 = $28; //@line 34 "../../iup_class.c"
 $29 = $6; //@line 36 "../../iup_class.c"
 STACKTOP = sp;return ($29|0); //@line 36 "../../iup_class.c"
}
function _iupClassObjectMap($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 174 "../../iup_class.c"
 $3 = ((($2)) + 4|0); //@line 174 "../../iup_class.c"
 $4 = HEAP32[$3>>2]|0; //@line 174 "../../iup_class.c"
 $5 = $1; //@line 174 "../../iup_class.c"
 $6 = (_iClassMap($4,$5)|0); //@line 174 "../../iup_class.c"
 STACKTOP = sp;return ($6|0); //@line 174 "../../iup_class.c"
}
function _iClassMap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 41 "../../iup_class.c"
 $5 = $2; //@line 42 "../../iup_class.c"
 $6 = ((($5)) + 24|0); //@line 42 "../../iup_class.c"
 $7 = HEAP32[$6>>2]|0; //@line 42 "../../iup_class.c"
 $8 = ($7|0)!=(0|0); //@line 42 "../../iup_class.c"
 if ($8) {
  $9 = $2; //@line 43 "../../iup_class.c"
  $10 = ((($9)) + 24|0); //@line 43 "../../iup_class.c"
  $11 = HEAP32[$10>>2]|0; //@line 43 "../../iup_class.c"
  $12 = $3; //@line 43 "../../iup_class.c"
  $13 = (_iClassMap($11,$12)|0); //@line 43 "../../iup_class.c"
  $4 = $13; //@line 43 "../../iup_class.c"
 }
 $14 = $4; //@line 45 "../../iup_class.c"
 $15 = ($14|0)==(0); //@line 45 "../../iup_class.c"
 if (!($15)) {
  $25 = $4; //@line 48 "../../iup_class.c"
  STACKTOP = sp;return ($25|0); //@line 48 "../../iup_class.c"
 }
 $16 = $2; //@line 45 "../../iup_class.c"
 $17 = ((($16)) + 44|0); //@line 45 "../../iup_class.c"
 $18 = HEAP32[$17>>2]|0; //@line 45 "../../iup_class.c"
 $19 = ($18|0)!=(0|0); //@line 45 "../../iup_class.c"
 if (!($19)) {
  $25 = $4; //@line 48 "../../iup_class.c"
  STACKTOP = sp;return ($25|0); //@line 48 "../../iup_class.c"
 }
 $20 = $2; //@line 46 "../../iup_class.c"
 $21 = ((($20)) + 44|0); //@line 46 "../../iup_class.c"
 $22 = HEAP32[$21>>2]|0; //@line 46 "../../iup_class.c"
 $23 = $3; //@line 46 "../../iup_class.c"
 $24 = (FUNCTION_TABLE_ii[$22 & 1023]($23)|0); //@line 46 "../../iup_class.c"
 $4 = $24; //@line 46 "../../iup_class.c"
 $25 = $4; //@line 48 "../../iup_class.c"
 STACKTOP = sp;return ($25|0); //@line 48 "../../iup_class.c"
}
function _iupClassObjectUnMap($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 179 "../../iup_class.c"
 $3 = ((($2)) + 4|0); //@line 179 "../../iup_class.c"
 $4 = HEAP32[$3>>2]|0; //@line 179 "../../iup_class.c"
 $5 = $1; //@line 179 "../../iup_class.c"
 _iClassUnMap($4,$5); //@line 179 "../../iup_class.c"
 STACKTOP = sp;return; //@line 180 "../../iup_class.c"
}
function _iClassUnMap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 54 "../../iup_class.c"
 $5 = ((($4)) + 48|0); //@line 54 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 54 "../../iup_class.c"
 $7 = ($6|0)!=(0|0); //@line 54 "../../iup_class.c"
 if ($7) {
  $8 = $2; //@line 55 "../../iup_class.c"
  $9 = ((($8)) + 48|0); //@line 55 "../../iup_class.c"
  $10 = HEAP32[$9>>2]|0; //@line 55 "../../iup_class.c"
  $11 = $3; //@line 55 "../../iup_class.c"
  FUNCTION_TABLE_vi[$10 & 1023]($11); //@line 55 "../../iup_class.c"
 }
 $12 = $2; //@line 57 "../../iup_class.c"
 $13 = ((($12)) + 24|0); //@line 57 "../../iup_class.c"
 $14 = HEAP32[$13>>2]|0; //@line 57 "../../iup_class.c"
 $15 = ($14|0)!=(0|0); //@line 57 "../../iup_class.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 59 "../../iup_class.c"
 }
 $16 = $2; //@line 58 "../../iup_class.c"
 $17 = ((($16)) + 24|0); //@line 58 "../../iup_class.c"
 $18 = HEAP32[$17>>2]|0; //@line 58 "../../iup_class.c"
 $19 = $3; //@line 58 "../../iup_class.c"
 _iClassUnMap($18,$19); //@line 58 "../../iup_class.c"
 STACKTOP = sp;return; //@line 59 "../../iup_class.c"
}
function _iupClassObjectDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 184 "../../iup_class.c"
 $3 = ((($2)) + 4|0); //@line 184 "../../iup_class.c"
 $4 = HEAP32[$3>>2]|0; //@line 184 "../../iup_class.c"
 $5 = $1; //@line 184 "../../iup_class.c"
 _iClassDestroy($4,$5); //@line 184 "../../iup_class.c"
 STACKTOP = sp;return; //@line 185 "../../iup_class.c"
}
function _iClassDestroy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 64 "../../iup_class.c"
 $5 = ((($4)) + 52|0); //@line 64 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 64 "../../iup_class.c"
 $7 = ($6|0)!=(0|0); //@line 64 "../../iup_class.c"
 if ($7) {
  $8 = $2; //@line 65 "../../iup_class.c"
  $9 = ((($8)) + 52|0); //@line 65 "../../iup_class.c"
  $10 = HEAP32[$9>>2]|0; //@line 65 "../../iup_class.c"
  $11 = $3; //@line 65 "../../iup_class.c"
  FUNCTION_TABLE_vi[$10 & 1023]($11); //@line 65 "../../iup_class.c"
 }
 $12 = $2; //@line 67 "../../iup_class.c"
 $13 = ((($12)) + 24|0); //@line 67 "../../iup_class.c"
 $14 = HEAP32[$13>>2]|0; //@line 67 "../../iup_class.c"
 $15 = ($14|0)!=(0|0); //@line 67 "../../iup_class.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 69 "../../iup_class.c"
 }
 $16 = $2; //@line 68 "../../iup_class.c"
 $17 = ((($16)) + 24|0); //@line 68 "../../iup_class.c"
 $18 = HEAP32[$17>>2]|0; //@line 68 "../../iup_class.c"
 $19 = $3; //@line 68 "../../iup_class.c"
 _iClassDestroy($18,$19); //@line 68 "../../iup_class.c"
 STACKTOP = sp;return; //@line 69 "../../iup_class.c"
}
function _iupClassObjectComputeNaturalSize($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 189 "../../iup_class.c"
 $9 = ((($8)) + 4|0); //@line 189 "../../iup_class.c"
 $10 = HEAP32[$9>>2]|0; //@line 189 "../../iup_class.c"
 $11 = $4; //@line 189 "../../iup_class.c"
 $12 = $5; //@line 189 "../../iup_class.c"
 $13 = $6; //@line 189 "../../iup_class.c"
 $14 = $7; //@line 189 "../../iup_class.c"
 _iClassComputeNaturalSize($10,$11,$12,$13,$14); //@line 189 "../../iup_class.c"
 STACKTOP = sp;return; //@line 190 "../../iup_class.c"
}
function _iClassComputeNaturalSize($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = $5; //@line 73 "../../iup_class.c"
 $11 = ((($10)) + 24|0); //@line 73 "../../iup_class.c"
 $12 = HEAP32[$11>>2]|0; //@line 73 "../../iup_class.c"
 $13 = ($12|0)!=(0|0); //@line 73 "../../iup_class.c"
 if ($13) {
  $14 = $5; //@line 74 "../../iup_class.c"
  $15 = ((($14)) + 24|0); //@line 74 "../../iup_class.c"
  $16 = HEAP32[$15>>2]|0; //@line 74 "../../iup_class.c"
  $17 = $6; //@line 74 "../../iup_class.c"
  $18 = $7; //@line 74 "../../iup_class.c"
  $19 = $8; //@line 74 "../../iup_class.c"
  $20 = $9; //@line 74 "../../iup_class.c"
  _iClassComputeNaturalSize($16,$17,$18,$19,$20); //@line 74 "../../iup_class.c"
 }
 $21 = $5; //@line 76 "../../iup_class.c"
 $22 = ((($21)) + 76|0); //@line 76 "../../iup_class.c"
 $23 = HEAP32[$22>>2]|0; //@line 76 "../../iup_class.c"
 $24 = ($23|0)!=(0|0); //@line 76 "../../iup_class.c"
 if (!($24)) {
  STACKTOP = sp;return; //@line 78 "../../iup_class.c"
 }
 $25 = $5; //@line 77 "../../iup_class.c"
 $26 = ((($25)) + 76|0); //@line 77 "../../iup_class.c"
 $27 = HEAP32[$26>>2]|0; //@line 77 "../../iup_class.c"
 $28 = $6; //@line 77 "../../iup_class.c"
 $29 = $7; //@line 77 "../../iup_class.c"
 $30 = $8; //@line 77 "../../iup_class.c"
 $31 = $9; //@line 77 "../../iup_class.c"
 FUNCTION_TABLE_viiii[$27 & 1023]($28,$29,$30,$31); //@line 77 "../../iup_class.c"
 STACKTOP = sp;return; //@line 78 "../../iup_class.c"
}
function _iupClassObjectSetChildrenCurrentSize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 194 "../../iup_class.c"
 $5 = ((($4)) + 4|0); //@line 194 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 194 "../../iup_class.c"
 $7 = $2; //@line 194 "../../iup_class.c"
 $8 = $3; //@line 194 "../../iup_class.c"
 _iClassSetChildrenCurrentSize($6,$7,$8); //@line 194 "../../iup_class.c"
 STACKTOP = sp;return; //@line 195 "../../iup_class.c"
}
function _iClassSetChildrenCurrentSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 82 "../../iup_class.c"
 $7 = ((($6)) + 24|0); //@line 82 "../../iup_class.c"
 $8 = HEAP32[$7>>2]|0; //@line 82 "../../iup_class.c"
 $9 = ($8|0)!=(0|0); //@line 82 "../../iup_class.c"
 if ($9) {
  $10 = $3; //@line 83 "../../iup_class.c"
  $11 = ((($10)) + 24|0); //@line 83 "../../iup_class.c"
  $12 = HEAP32[$11>>2]|0; //@line 83 "../../iup_class.c"
  $13 = $4; //@line 83 "../../iup_class.c"
  $14 = $5; //@line 83 "../../iup_class.c"
  _iClassSetChildrenCurrentSize($12,$13,$14); //@line 83 "../../iup_class.c"
 }
 $15 = $3; //@line 85 "../../iup_class.c"
 $16 = ((($15)) + 80|0); //@line 85 "../../iup_class.c"
 $17 = HEAP32[$16>>2]|0; //@line 85 "../../iup_class.c"
 $18 = ($17|0)!=(0|0); //@line 85 "../../iup_class.c"
 if (!($18)) {
  STACKTOP = sp;return; //@line 87 "../../iup_class.c"
 }
 $19 = $3; //@line 86 "../../iup_class.c"
 $20 = ((($19)) + 80|0); //@line 86 "../../iup_class.c"
 $21 = HEAP32[$20>>2]|0; //@line 86 "../../iup_class.c"
 $22 = $4; //@line 86 "../../iup_class.c"
 $23 = $5; //@line 86 "../../iup_class.c"
 FUNCTION_TABLE_vii[$21 & 1023]($22,$23); //@line 86 "../../iup_class.c"
 STACKTOP = sp;return; //@line 87 "../../iup_class.c"
}
function _iupClassObjectSetChildrenPosition($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 199 "../../iup_class.c"
 $7 = ((($6)) + 4|0); //@line 199 "../../iup_class.c"
 $8 = HEAP32[$7>>2]|0; //@line 199 "../../iup_class.c"
 $9 = $3; //@line 199 "../../iup_class.c"
 $10 = $4; //@line 199 "../../iup_class.c"
 $11 = $5; //@line 199 "../../iup_class.c"
 _iClassSetChildrenPosition($8,$9,$10,$11); //@line 199 "../../iup_class.c"
 STACKTOP = sp;return; //@line 200 "../../iup_class.c"
}
function _iClassSetChildrenPosition($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 91 "../../iup_class.c"
 $9 = ((($8)) + 24|0); //@line 91 "../../iup_class.c"
 $10 = HEAP32[$9>>2]|0; //@line 91 "../../iup_class.c"
 $11 = ($10|0)!=(0|0); //@line 91 "../../iup_class.c"
 if ($11) {
  $12 = $4; //@line 92 "../../iup_class.c"
  $13 = ((($12)) + 24|0); //@line 92 "../../iup_class.c"
  $14 = HEAP32[$13>>2]|0; //@line 92 "../../iup_class.c"
  $15 = $5; //@line 92 "../../iup_class.c"
  $16 = $6; //@line 92 "../../iup_class.c"
  $17 = $7; //@line 92 "../../iup_class.c"
  _iClassSetChildrenPosition($14,$15,$16,$17); //@line 92 "../../iup_class.c"
 }
 $18 = $4; //@line 94 "../../iup_class.c"
 $19 = ((($18)) + 84|0); //@line 94 "../../iup_class.c"
 $20 = HEAP32[$19>>2]|0; //@line 94 "../../iup_class.c"
 $21 = ($20|0)!=(0|0); //@line 94 "../../iup_class.c"
 if (!($21)) {
  STACKTOP = sp;return; //@line 96 "../../iup_class.c"
 }
 $22 = $4; //@line 95 "../../iup_class.c"
 $23 = ((($22)) + 84|0); //@line 95 "../../iup_class.c"
 $24 = HEAP32[$23>>2]|0; //@line 95 "../../iup_class.c"
 $25 = $5; //@line 95 "../../iup_class.c"
 $26 = $6; //@line 95 "../../iup_class.c"
 $27 = $7; //@line 95 "../../iup_class.c"
 FUNCTION_TABLE_viii[$24 & 1023]($25,$26,$27); //@line 95 "../../iup_class.c"
 STACKTOP = sp;return; //@line 96 "../../iup_class.c"
}
function _iupClassObjectGetInnerContainer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 204 "../../iup_class.c"
 $3 = ((($2)) + 4|0); //@line 204 "../../iup_class.c"
 $4 = HEAP32[$3>>2]|0; //@line 204 "../../iup_class.c"
 $5 = $1; //@line 204 "../../iup_class.c"
 $6 = (_iClassGetInnerContainer($4,$5)|0); //@line 204 "../../iup_class.c"
 STACKTOP = sp;return ($6|0); //@line 204 "../../iup_class.c"
}
function _iClassGetInnerContainer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 100 "../../iup_class.c"
 $4 = $5; //@line 100 "../../iup_class.c"
 $6 = $2; //@line 102 "../../iup_class.c"
 $7 = ((($6)) + 24|0); //@line 102 "../../iup_class.c"
 $8 = HEAP32[$7>>2]|0; //@line 102 "../../iup_class.c"
 $9 = ($8|0)!=(0|0); //@line 102 "../../iup_class.c"
 if ($9) {
  $10 = $2; //@line 103 "../../iup_class.c"
  $11 = ((($10)) + 24|0); //@line 103 "../../iup_class.c"
  $12 = HEAP32[$11>>2]|0; //@line 103 "../../iup_class.c"
  $13 = $3; //@line 103 "../../iup_class.c"
  $14 = (_iClassGetInnerContainer($12,$13)|0); //@line 103 "../../iup_class.c"
  $4 = $14; //@line 103 "../../iup_class.c"
 }
 $15 = $2; //@line 107 "../../iup_class.c"
 $16 = ((($15)) + 56|0); //@line 107 "../../iup_class.c"
 $17 = HEAP32[$16>>2]|0; //@line 107 "../../iup_class.c"
 $18 = ($17|0)!=(0|0); //@line 107 "../../iup_class.c"
 if (!($18)) {
  $24 = $4; //@line 110 "../../iup_class.c"
  STACKTOP = sp;return ($24|0); //@line 110 "../../iup_class.c"
 }
 $19 = $2; //@line 108 "../../iup_class.c"
 $20 = ((($19)) + 56|0); //@line 108 "../../iup_class.c"
 $21 = HEAP32[$20>>2]|0; //@line 108 "../../iup_class.c"
 $22 = $3; //@line 108 "../../iup_class.c"
 $23 = (FUNCTION_TABLE_ii[$21 & 1023]($22)|0); //@line 108 "../../iup_class.c"
 $4 = $23; //@line 108 "../../iup_class.c"
 $24 = $4; //@line 110 "../../iup_class.c"
 STACKTOP = sp;return ($24|0); //@line 110 "../../iup_class.c"
}
function _iupClassObjectChildAdded($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 214 "../../iup_class.c"
 $5 = ((($4)) + 4|0); //@line 214 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 214 "../../iup_class.c"
 $7 = $2; //@line 214 "../../iup_class.c"
 $8 = $3; //@line 214 "../../iup_class.c"
 _iClassObjectChildAdded($6,$7,$8); //@line 214 "../../iup_class.c"
 STACKTOP = sp;return; //@line 215 "../../iup_class.c"
}
function _iClassObjectChildAdded($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 130 "../../iup_class.c"
 $7 = ((($6)) + 24|0); //@line 130 "../../iup_class.c"
 $8 = HEAP32[$7>>2]|0; //@line 130 "../../iup_class.c"
 $9 = ($8|0)!=(0|0); //@line 130 "../../iup_class.c"
 if ($9) {
  $10 = $3; //@line 131 "../../iup_class.c"
  $11 = ((($10)) + 24|0); //@line 131 "../../iup_class.c"
  $12 = HEAP32[$11>>2]|0; //@line 131 "../../iup_class.c"
  $13 = $4; //@line 131 "../../iup_class.c"
  $14 = $5; //@line 131 "../../iup_class.c"
  _iClassObjectChildAdded($12,$13,$14); //@line 131 "../../iup_class.c"
 }
 $15 = $3; //@line 133 "../../iup_class.c"
 $16 = ((($15)) + 64|0); //@line 133 "../../iup_class.c"
 $17 = HEAP32[$16>>2]|0; //@line 133 "../../iup_class.c"
 $18 = ($17|0)!=(0|0); //@line 133 "../../iup_class.c"
 if (!($18)) {
  STACKTOP = sp;return; //@line 135 "../../iup_class.c"
 }
 $19 = $3; //@line 134 "../../iup_class.c"
 $20 = ((($19)) + 64|0); //@line 134 "../../iup_class.c"
 $21 = HEAP32[$20>>2]|0; //@line 134 "../../iup_class.c"
 $22 = $4; //@line 134 "../../iup_class.c"
 $23 = $5; //@line 134 "../../iup_class.c"
 FUNCTION_TABLE_vii[$21 & 1023]($22,$23); //@line 134 "../../iup_class.c"
 STACKTOP = sp;return; //@line 135 "../../iup_class.c"
}
function _iupClassObjectChildRemoved($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 219 "../../iup_class.c"
 $7 = ((($6)) + 4|0); //@line 219 "../../iup_class.c"
 $8 = HEAP32[$7>>2]|0; //@line 219 "../../iup_class.c"
 $9 = $3; //@line 219 "../../iup_class.c"
 $10 = $4; //@line 219 "../../iup_class.c"
 $11 = $5; //@line 219 "../../iup_class.c"
 _iClassObjectChildRemoved($8,$9,$10,$11); //@line 219 "../../iup_class.c"
 STACKTOP = sp;return; //@line 220 "../../iup_class.c"
}
function _iClassObjectChildRemoved($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 139 "../../iup_class.c"
 $9 = ((($8)) + 24|0); //@line 139 "../../iup_class.c"
 $10 = HEAP32[$9>>2]|0; //@line 139 "../../iup_class.c"
 $11 = ($10|0)!=(0|0); //@line 139 "../../iup_class.c"
 if ($11) {
  $12 = $4; //@line 140 "../../iup_class.c"
  $13 = ((($12)) + 24|0); //@line 140 "../../iup_class.c"
  $14 = HEAP32[$13>>2]|0; //@line 140 "../../iup_class.c"
  $15 = $5; //@line 140 "../../iup_class.c"
  $16 = $6; //@line 140 "../../iup_class.c"
  $17 = $7; //@line 140 "../../iup_class.c"
  _iClassObjectChildRemoved($14,$15,$16,$17); //@line 140 "../../iup_class.c"
 }
 $18 = $4; //@line 142 "../../iup_class.c"
 $19 = ((($18)) + 68|0); //@line 142 "../../iup_class.c"
 $20 = HEAP32[$19>>2]|0; //@line 142 "../../iup_class.c"
 $21 = ($20|0)!=(0|0); //@line 142 "../../iup_class.c"
 if (!($21)) {
  STACKTOP = sp;return; //@line 144 "../../iup_class.c"
 }
 $22 = $4; //@line 143 "../../iup_class.c"
 $23 = ((($22)) + 68|0); //@line 143 "../../iup_class.c"
 $24 = HEAP32[$23>>2]|0; //@line 143 "../../iup_class.c"
 $25 = $5; //@line 143 "../../iup_class.c"
 $26 = $6; //@line 143 "../../iup_class.c"
 $27 = $7; //@line 143 "../../iup_class.c"
 FUNCTION_TABLE_viii[$24 & 1023]($25,$26,$27); //@line 143 "../../iup_class.c"
 STACKTOP = sp;return; //@line 144 "../../iup_class.c"
}
function _iupClassObjectLayoutUpdate($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 224 "../../iup_class.c"
 $3 = ((($2)) + 4|0); //@line 224 "../../iup_class.c"
 $4 = HEAP32[$3>>2]|0; //@line 224 "../../iup_class.c"
 $5 = $1; //@line 224 "../../iup_class.c"
 _iClassLayoutUpdate($4,$5); //@line 224 "../../iup_class.c"
 STACKTOP = sp;return; //@line 225 "../../iup_class.c"
}
function _iClassLayoutUpdate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 148 "../../iup_class.c"
 $5 = ((($4)) + 24|0); //@line 148 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 148 "../../iup_class.c"
 $7 = ($6|0)!=(0|0); //@line 148 "../../iup_class.c"
 if ($7) {
  $8 = $2; //@line 149 "../../iup_class.c"
  $9 = ((($8)) + 24|0); //@line 149 "../../iup_class.c"
  $10 = HEAP32[$9>>2]|0; //@line 149 "../../iup_class.c"
  $11 = $3; //@line 149 "../../iup_class.c"
  _iClassLayoutUpdate($10,$11); //@line 149 "../../iup_class.c"
 }
 $12 = $2; //@line 151 "../../iup_class.c"
 $13 = ((($12)) + 72|0); //@line 151 "../../iup_class.c"
 $14 = HEAP32[$13>>2]|0; //@line 151 "../../iup_class.c"
 $15 = ($14|0)!=(0|0); //@line 151 "../../iup_class.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 153 "../../iup_class.c"
 }
 $16 = $2; //@line 152 "../../iup_class.c"
 $17 = ((($16)) + 72|0); //@line 152 "../../iup_class.c"
 $18 = HEAP32[$17>>2]|0; //@line 152 "../../iup_class.c"
 $19 = $3; //@line 152 "../../iup_class.c"
 FUNCTION_TABLE_vi[$18 & 1023]($19); //@line 152 "../../iup_class.c"
 STACKTOP = sp;return; //@line 153 "../../iup_class.c"
}
function _iupClassObjectDlgPopup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 229 "../../iup_class.c"
 $7 = ((($6)) + 4|0); //@line 229 "../../iup_class.c"
 $8 = HEAP32[$7>>2]|0; //@line 229 "../../iup_class.c"
 $9 = $3; //@line 229 "../../iup_class.c"
 $10 = $4; //@line 229 "../../iup_class.c"
 $11 = $5; //@line 229 "../../iup_class.c"
 $12 = (_iClassDlgPopup($8,$9,$10,$11)|0); //@line 229 "../../iup_class.c"
 STACKTOP = sp;return ($12|0); //@line 229 "../../iup_class.c"
}
function _iClassDlgPopup($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = -1; //@line 157 "../../iup_class.c"
 $9 = $4; //@line 158 "../../iup_class.c"
 $10 = ((($9)) + 24|0); //@line 158 "../../iup_class.c"
 $11 = HEAP32[$10>>2]|0; //@line 158 "../../iup_class.c"
 $12 = ($11|0)!=(0|0); //@line 158 "../../iup_class.c"
 if ($12) {
  $13 = $4; //@line 159 "../../iup_class.c"
  $14 = ((($13)) + 24|0); //@line 159 "../../iup_class.c"
  $15 = HEAP32[$14>>2]|0; //@line 159 "../../iup_class.c"
  $16 = $5; //@line 159 "../../iup_class.c"
  $17 = $6; //@line 159 "../../iup_class.c"
  $18 = $7; //@line 159 "../../iup_class.c"
  $19 = (_iClassDlgPopup($15,$16,$17,$18)|0); //@line 159 "../../iup_class.c"
  $8 = $19; //@line 159 "../../iup_class.c"
 }
 $20 = $8; //@line 161 "../../iup_class.c"
 $21 = ($20|0)!=(1); //@line 161 "../../iup_class.c"
 if (!($21)) {
  $33 = $8; //@line 164 "../../iup_class.c"
  STACKTOP = sp;return ($33|0); //@line 164 "../../iup_class.c"
 }
 $22 = $4; //@line 161 "../../iup_class.c"
 $23 = ((($22)) + 88|0); //@line 161 "../../iup_class.c"
 $24 = HEAP32[$23>>2]|0; //@line 161 "../../iup_class.c"
 $25 = ($24|0)!=(0|0); //@line 161 "../../iup_class.c"
 if (!($25)) {
  $33 = $8; //@line 164 "../../iup_class.c"
  STACKTOP = sp;return ($33|0); //@line 164 "../../iup_class.c"
 }
 $26 = $4; //@line 162 "../../iup_class.c"
 $27 = ((($26)) + 88|0); //@line 162 "../../iup_class.c"
 $28 = HEAP32[$27>>2]|0; //@line 162 "../../iup_class.c"
 $29 = $5; //@line 162 "../../iup_class.c"
 $30 = $6; //@line 162 "../../iup_class.c"
 $31 = $7; //@line 162 "../../iup_class.c"
 $32 = (FUNCTION_TABLE_iiii[$28 & 1023]($29,$30,$31)|0); //@line 162 "../../iup_class.c"
 $8 = $32; //@line 162 "../../iup_class.c"
 $33 = $8; //@line 164 "../../iup_class.c"
 STACKTOP = sp;return ($33|0); //@line 164 "../../iup_class.c"
}
function _iupClassNew($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = (_malloc(92)|0); //@line 254 "../../iup_class.c"
 $2 = $3; //@line 254 "../../iup_class.c"
 $4 = $2; //@line 255 "../../iup_class.c"
 dest=$4; stop=dest+92|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 255 "../../iup_class.c"
 $5 = $1; //@line 257 "../../iup_class.c"
 $6 = ($5|0)!=(0|0); //@line 257 "../../iup_class.c"
 if ($6) {
  $7 = $1; //@line 259 "../../iup_class.c"
  $8 = ((($7)) + 32|0); //@line 259 "../../iup_class.c"
  $9 = HEAP32[$8>>2]|0; //@line 259 "../../iup_class.c"
  $10 = (FUNCTION_TABLE_i[$9 & 1023]()|0); //@line 259 "../../iup_class.c"
  $1 = $10; //@line 259 "../../iup_class.c"
  $11 = $1; //@line 260 "../../iup_class.c"
  $12 = ((($11)) + 28|0); //@line 260 "../../iup_class.c"
  $13 = HEAP32[$12>>2]|0; //@line 260 "../../iup_class.c"
  $14 = $2; //@line 260 "../../iup_class.c"
  $15 = ((($14)) + 28|0); //@line 260 "../../iup_class.c"
  HEAP32[$15>>2] = $13; //@line 260 "../../iup_class.c"
  $16 = $1; //@line 261 "../../iup_class.c"
  $17 = $2; //@line 261 "../../iup_class.c"
  $18 = ((($17)) + 24|0); //@line 261 "../../iup_class.c"
  HEAP32[$18>>2] = $16; //@line 261 "../../iup_class.c"
  $22 = $2; //@line 266 "../../iup_class.c"
  STACKTOP = sp;return ($22|0); //@line 266 "../../iup_class.c"
 } else {
  $19 = (_iupTableCreate(11)|0); //@line 264 "../../iup_class.c"
  $20 = $2; //@line 264 "../../iup_class.c"
  $21 = ((($20)) + 28|0); //@line 264 "../../iup_class.c"
  HEAP32[$21>>2] = $19; //@line 264 "../../iup_class.c"
  $22 = $2; //@line 266 "../../iup_class.c"
  STACKTOP = sp;return ($22|0); //@line 266 "../../iup_class.c"
 }
 return (0)|0;
}
function _iupClassRelease($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 274 "../../iup_class.c"
 $5 = ((($4)) + 36|0); //@line 274 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 274 "../../iup_class.c"
 $7 = ($6|0)!=(0|0); //@line 274 "../../iup_class.c"
 if ($7) {
  $8 = $1; //@line 275 "../../iup_class.c"
  $9 = ((($8)) + 36|0); //@line 275 "../../iup_class.c"
  $10 = HEAP32[$9>>2]|0; //@line 275 "../../iup_class.c"
  $11 = $1; //@line 275 "../../iup_class.c"
  FUNCTION_TABLE_vi[$10 & 1023]($11); //@line 275 "../../iup_class.c"
 }
 $12 = $1; //@line 279 "../../iup_class.c"
 $13 = ((($12)) + 24|0); //@line 279 "../../iup_class.c"
 $14 = HEAP32[$13>>2]|0; //@line 279 "../../iup_class.c"
 $2 = $14; //@line 279 "../../iup_class.c"
 while(1) {
  $15 = $2; //@line 280 "../../iup_class.c"
  $16 = ($15|0)!=(0|0); //@line 280 "../../iup_class.c"
  if (!($16)) {
   break;
  }
  $17 = $2; //@line 282 "../../iup_class.c"
  $3 = $17; //@line 282 "../../iup_class.c"
  $18 = $2; //@line 283 "../../iup_class.c"
  $19 = ((($18)) + 24|0); //@line 283 "../../iup_class.c"
  $20 = HEAP32[$19>>2]|0; //@line 283 "../../iup_class.c"
  $2 = $20; //@line 283 "../../iup_class.c"
  $21 = $3; //@line 284 "../../iup_class.c"
  _free($21); //@line 284 "../../iup_class.c"
 }
 $22 = $1; //@line 288 "../../iup_class.c"
 _iClassReleaseAttribFuncTable($22); //@line 288 "../../iup_class.c"
 $23 = $1; //@line 290 "../../iup_class.c"
 _free($23); //@line 290 "../../iup_class.c"
 STACKTOP = sp;return; //@line 291 "../../iup_class.c"
}
function _iClassReleaseAttribFuncTable($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 240 "../../iup_class.c"
 $5 = ((($4)) + 28|0); //@line 240 "../../iup_class.c"
 $6 = HEAP32[$5>>2]|0; //@line 240 "../../iup_class.c"
 $7 = (_iupTableFirst($6)|0); //@line 240 "../../iup_class.c"
 $2 = $7; //@line 240 "../../iup_class.c"
 while(1) {
  $8 = $2; //@line 241 "../../iup_class.c"
  $9 = ($8|0)!=(0|0); //@line 241 "../../iup_class.c"
  $10 = $1; //@line 243 "../../iup_class.c"
  $11 = ((($10)) + 28|0); //@line 243 "../../iup_class.c"
  $12 = HEAP32[$11>>2]|0; //@line 243 "../../iup_class.c"
  if (!($9)) {
   break;
  }
  $13 = (_iupTableGetCurr($12)|0); //@line 243 "../../iup_class.c"
  $3 = $13; //@line 243 "../../iup_class.c"
  $14 = $3; //@line 244 "../../iup_class.c"
  _free($14); //@line 244 "../../iup_class.c"
  $15 = $1; //@line 246 "../../iup_class.c"
  $16 = ((($15)) + 28|0); //@line 246 "../../iup_class.c"
  $17 = HEAP32[$16>>2]|0; //@line 246 "../../iup_class.c"
  $18 = (_iupTableNext($17)|0); //@line 246 "../../iup_class.c"
  $2 = $18; //@line 246 "../../iup_class.c"
 }
 _iupTableDestroy($12); //@line 249 "../../iup_class.c"
 STACKTOP = sp;return; //@line 250 "../../iup_class.c"
}
function _iupClassMatch($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 while(1) {
  $5 = $3; //@line 295 "../../iup_class.c"
  $6 = ($5|0)!=(0|0); //@line 295 "../../iup_class.c"
  if (!($6)) {
   label = 6;
   break;
  }
  $7 = $3; //@line 297 "../../iup_class.c"
  $8 = HEAP32[$7>>2]|0; //@line 297 "../../iup_class.c"
  $9 = $4; //@line 297 "../../iup_class.c"
  $10 = (_iupStrEqualNoCase($8,$9)|0); //@line 297 "../../iup_class.c"
  $11 = ($10|0)!=(0); //@line 297 "../../iup_class.c"
  if ($11) {
   label = 4;
   break;
  }
  $12 = $3; //@line 299 "../../iup_class.c"
  $13 = ((($12)) + 24|0); //@line 299 "../../iup_class.c"
  $14 = HEAP32[$13>>2]|0; //@line 299 "../../iup_class.c"
  $3 = $14; //@line 299 "../../iup_class.c"
 }
 if ((label|0) == 4) {
  $2 = 1; //@line 298 "../../iup_class.c"
  $15 = $2; //@line 302 "../../iup_class.c"
  STACKTOP = sp;return ($15|0); //@line 302 "../../iup_class.c"
 }
 else if ((label|0) == 6) {
  $2 = 0; //@line 301 "../../iup_class.c"
  $15 = $2; //@line 302 "../../iup_class.c"
  STACKTOP = sp;return ($15|0); //@line 302 "../../iup_class.c"
 }
 return (0)|0;
}
function _IupClassMatch($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 332 "../../iup_class.c"
 $6 = (_iupObjectCheck($5)|0); //@line 332 "../../iup_class.c"
 $7 = ($6|0)!=(0); //@line 332 "../../iup_class.c"
 if ($7) {
  $8 = $3; //@line 335 "../../iup_class.c"
  $9 = ((($8)) + 4|0); //@line 335 "../../iup_class.c"
  $10 = HEAP32[$9>>2]|0; //@line 335 "../../iup_class.c"
  $11 = $4; //@line 335 "../../iup_class.c"
  $12 = (_iupClassMatch($10,$11)|0); //@line 335 "../../iup_class.c"
  $2 = $12; //@line 335 "../../iup_class.c"
  $13 = $2; //@line 336 "../../iup_class.c"
  STACKTOP = sp;return ($13|0); //@line 336 "../../iup_class.c"
 } else {
  $2 = 0; //@line 333 "../../iup_class.c"
  $13 = $2; //@line 336 "../../iup_class.c"
  STACKTOP = sp;return ($13|0); //@line 336 "../../iup_class.c"
 }
 return (0)|0;
}
function _iupClassIsGlobalDefault($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $4; //@line 37 "../../iup_classattrib.c"
 $6 = ($5|0)!=(0); //@line 37 "../../iup_classattrib.c"
 if ($6) {
  label = 4;
 } else {
  $7 = $3; //@line 37 "../../iup_classattrib.c"
  $8 = (_iupStrEqual($7,14998)|0); //@line 37 "../../iup_classattrib.c"
  $9 = ($8|0)!=(0); //@line 37 "../../iup_classattrib.c"
  if ($9) {
   $2 = 1; //@line 38 "../../iup_classattrib.c"
  } else {
   label = 4;
  }
 }
 do {
  if ((label|0) == 4) {
   $10 = $3; //@line 39 "../../iup_classattrib.c"
   $11 = (_iupStrEqual($10,20331)|0); //@line 39 "../../iup_classattrib.c"
   $12 = ($11|0)!=(0); //@line 39 "../../iup_classattrib.c"
   if ($12) {
    $2 = 1; //@line 40 "../../iup_classattrib.c"
    break;
   }
   $13 = $3; //@line 41 "../../iup_classattrib.c"
   $14 = (_iupStrEqual($13,20342)|0); //@line 41 "../../iup_classattrib.c"
   $15 = ($14|0)!=(0); //@line 41 "../../iup_classattrib.c"
   if ($15) {
    $2 = 1; //@line 42 "../../iup_classattrib.c"
    break;
   }
   $16 = $3; //@line 43 "../../iup_classattrib.c"
   $17 = (_iupStrEqual($16,20353)|0); //@line 43 "../../iup_classattrib.c"
   $18 = ($17|0)!=(0); //@line 43 "../../iup_classattrib.c"
   if ($18) {
    $2 = 1; //@line 44 "../../iup_classattrib.c"
    break;
   }
   $19 = $3; //@line 45 "../../iup_classattrib.c"
   $20 = (_iupStrEqual($19,20364)|0); //@line 45 "../../iup_classattrib.c"
   $21 = ($20|0)!=(0); //@line 45 "../../iup_classattrib.c"
   if ($21) {
    $2 = 1; //@line 46 "../../iup_classattrib.c"
    break;
   }
   $22 = $3; //@line 47 "../../iup_classattrib.c"
   $23 = (_iupStrEqual($22,14271)|0); //@line 47 "../../iup_classattrib.c"
   $24 = ($23|0)!=(0); //@line 47 "../../iup_classattrib.c"
   if ($24) {
    $2 = 1; //@line 48 "../../iup_classattrib.c"
    break;
   }
   $25 = $3; //@line 49 "../../iup_classattrib.c"
   $26 = (_iupStrEqual($25,20375)|0); //@line 49 "../../iup_classattrib.c"
   $27 = ($26|0)!=(0); //@line 49 "../../iup_classattrib.c"
   if ($27) {
    $2 = 1; //@line 50 "../../iup_classattrib.c"
    break;
   } else {
    $2 = 0; //@line 51 "../../iup_classattrib.c"
    break;
   }
  }
 } while(0);
 $28 = $2; //@line 52 "../../iup_classattrib.c"
 STACKTOP = sp;return ($28|0); //@line 52 "../../iup_classattrib.c"
}
function _iupClassObjectSetAttributeId($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $11 = $5; //@line 142 "../../iup_classattrib.c"
 $12 = ((($11)) + 4|0); //@line 142 "../../iup_classattrib.c"
 $13 = HEAP32[$12>>2]|0; //@line 142 "../../iup_classattrib.c"
 $14 = ((($13)) + 20|0); //@line 142 "../../iup_classattrib.c"
 $15 = HEAP32[$14>>2]|0; //@line 142 "../../iup_classattrib.c"
 $16 = ($15|0)==(0); //@line 142 "../../iup_classattrib.c"
 if ($16) {
  $4 = 1; //@line 143 "../../iup_classattrib.c"
  $75 = $4; //@line 172 "../../iup_classattrib.c"
  STACKTOP = sp;return ($75|0); //@line 172 "../../iup_classattrib.c"
 }
 $17 = $6; //@line 145 "../../iup_classattrib.c"
 $18 = HEAP8[$17>>0]|0; //@line 145 "../../iup_classattrib.c"
 $19 = $18 << 24 >> 24; //@line 145 "../../iup_classattrib.c"
 $20 = ($19|0)==(0); //@line 145 "../../iup_classattrib.c"
 if ($20) {
  $6 = 1939; //@line 146 "../../iup_classattrib.c"
 }
 $21 = $5; //@line 148 "../../iup_classattrib.c"
 $22 = ((($21)) + 4|0); //@line 148 "../../iup_classattrib.c"
 $23 = HEAP32[$22>>2]|0; //@line 148 "../../iup_classattrib.c"
 $24 = ((($23)) + 28|0); //@line 148 "../../iup_classattrib.c"
 $25 = HEAP32[$24>>2]|0; //@line 148 "../../iup_classattrib.c"
 $26 = $6; //@line 148 "../../iup_classattrib.c"
 $27 = (_iupTableGet($25,$26)|0); //@line 148 "../../iup_classattrib.c"
 $9 = $27; //@line 148 "../../iup_classattrib.c"
 $28 = $9; //@line 149 "../../iup_classattrib.c"
 $29 = ($28|0)!=(0|0); //@line 149 "../../iup_classattrib.c"
 if ($29) {
  $30 = $9; //@line 149 "../../iup_classattrib.c"
  $31 = ((($30)) + 20|0); //@line 149 "../../iup_classattrib.c"
  $32 = HEAP32[$31>>2]|0; //@line 149 "../../iup_classattrib.c"
  $33 = $32 & 16; //@line 149 "../../iup_classattrib.c"
  $34 = ($33|0)!=(0); //@line 149 "../../iup_classattrib.c"
  if ($34) {
   $35 = $9; //@line 151 "../../iup_classattrib.c"
   $36 = ((($35)) + 20|0); //@line 151 "../../iup_classattrib.c"
   $37 = HEAP32[$36>>2]|0; //@line 151 "../../iup_classattrib.c"
   $38 = $37 & 32; //@line 151 "../../iup_classattrib.c"
   $39 = ($38|0)!=(0); //@line 151 "../../iup_classattrib.c"
   $40 = $9; //@line 153 "../../iup_classattrib.c"
   if ($39) {
    $41 = ((($40)) + 20|0); //@line 153 "../../iup_classattrib.c"
    $42 = HEAP32[$41>>2]|0; //@line 153 "../../iup_classattrib.c"
    $43 = $42 & 4; //@line 153 "../../iup_classattrib.c"
    $44 = ($43|0)!=(0); //@line 153 "../../iup_classattrib.c"
    if ($44) {
     $4 = -1; //@line 154 "../../iup_classattrib.c"
     $75 = $4; //@line 172 "../../iup_classattrib.c"
     STACKTOP = sp;return ($75|0); //@line 172 "../../iup_classattrib.c"
    } else {
     $4 = 0; //@line 155 "../../iup_classattrib.c"
     $75 = $4; //@line 172 "../../iup_classattrib.c"
     STACKTOP = sp;return ($75|0); //@line 172 "../../iup_classattrib.c"
    }
   }
   $45 = ((($40)) + 4|0); //@line 158 "../../iup_classattrib.c"
   $46 = HEAP32[$45>>2]|0; //@line 158 "../../iup_classattrib.c"
   $47 = ($46|0)!=(0|0); //@line 158 "../../iup_classattrib.c"
   do {
    if ($47) {
     $48 = $9; //@line 159 "../../iup_classattrib.c"
     $49 = ((($48)) + 20|0); //@line 159 "../../iup_classattrib.c"
     $50 = HEAP32[$49>>2]|0; //@line 159 "../../iup_classattrib.c"
     $51 = $50 & 128; //@line 159 "../../iup_classattrib.c"
     $52 = ($51|0)!=(0); //@line 159 "../../iup_classattrib.c"
     if (!($52)) {
      $53 = $5; //@line 160 "../../iup_classattrib.c"
      $54 = ((($53)) + 16|0); //@line 160 "../../iup_classattrib.c"
      $55 = HEAP32[$54>>2]|0; //@line 160 "../../iup_classattrib.c"
      $56 = ($55|0)!=(0|0); //@line 160 "../../iup_classattrib.c"
      if (!($56)) {
       $57 = $9; //@line 160 "../../iup_classattrib.c"
       $58 = ((($57)) + 20|0); //@line 160 "../../iup_classattrib.c"
       $59 = HEAP32[$58>>2]|0; //@line 160 "../../iup_classattrib.c"
       $60 = $59 & 8; //@line 160 "../../iup_classattrib.c"
       $61 = ($60|0)!=(0); //@line 160 "../../iup_classattrib.c"
       if (!($61)) {
        break;
       }
      }
      $62 = $9; //@line 163 "../../iup_classattrib.c"
      $63 = ((($62)) + 4|0); //@line 163 "../../iup_classattrib.c"
      $64 = HEAP32[$63>>2]|0; //@line 163 "../../iup_classattrib.c"
      $10 = $64; //@line 163 "../../iup_classattrib.c"
      $65 = $10; //@line 164 "../../iup_classattrib.c"
      $66 = $5; //@line 164 "../../iup_classattrib.c"
      $67 = $7; //@line 164 "../../iup_classattrib.c"
      $68 = $8; //@line 164 "../../iup_classattrib.c"
      $69 = (FUNCTION_TABLE_iiii[$65 & 1023]($66,$67,$68)|0); //@line 164 "../../iup_classattrib.c"
      $4 = $69; //@line 164 "../../iup_classattrib.c"
      $75 = $4; //@line 172 "../../iup_classattrib.c"
      STACKTOP = sp;return ($75|0); //@line 172 "../../iup_classattrib.c"
     }
    }
   } while(0);
   $70 = $9; //@line 167 "../../iup_classattrib.c"
   $71 = ((($70)) + 20|0); //@line 167 "../../iup_classattrib.c"
   $72 = HEAP32[$71>>2]|0; //@line 167 "../../iup_classattrib.c"
   $73 = $72 & 4; //@line 167 "../../iup_classattrib.c"
   $74 = ($73|0)!=(0); //@line 167 "../../iup_classattrib.c"
   if ($74) {
    $4 = -1; //@line 168 "../../iup_classattrib.c"
    $75 = $4; //@line 172 "../../iup_classattrib.c"
    STACKTOP = sp;return ($75|0); //@line 172 "../../iup_classattrib.c"
   }
  }
 }
 $4 = 1; //@line 171 "../../iup_classattrib.c"
 $75 = $4; //@line 172 "../../iup_classattrib.c"
 STACKTOP = sp;return ($75|0); //@line 172 "../../iup_classattrib.c"
}
function _iupClassObjectSetAttribute($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = sp + 24|0;
 $14 = sp + 20|0;
 $16 = sp + 12|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $20 = $5; //@line 178 "../../iup_classattrib.c"
 $21 = ((($20)) + 4|0); //@line 178 "../../iup_classattrib.c"
 $22 = HEAP32[$21>>2]|0; //@line 178 "../../iup_classattrib.c"
 $23 = ((($22)) + 20|0); //@line 178 "../../iup_classattrib.c"
 $24 = HEAP32[$23>>2]|0; //@line 178 "../../iup_classattrib.c"
 $25 = ($24|0)!=(0); //@line 178 "../../iup_classattrib.c"
 if ($25) {
  $26 = $6; //@line 180 "../../iup_classattrib.c"
  $27 = (_iClassFindId($26)|0); //@line 180 "../../iup_classattrib.c"
  $10 = $27; //@line 180 "../../iup_classattrib.c"
  $28 = $10; //@line 181 "../../iup_classattrib.c"
  $29 = ($28|0)!=(0|0); //@line 181 "../../iup_classattrib.c"
  if ($29) {
   $30 = $6; //@line 183 "../../iup_classattrib.c"
   $31 = $10; //@line 183 "../../iup_classattrib.c"
   $32 = (_iClassCutNameId($30,$31)|0); //@line 183 "../../iup_classattrib.c"
   $11 = $32; //@line 183 "../../iup_classattrib.c"
   $33 = $11; //@line 184 "../../iup_classattrib.c"
   $34 = ($33|0)!=(0|0); //@line 184 "../../iup_classattrib.c"
   $$ = $34 ? $32 : 1939; //@line 184 "../../iup_classattrib.c"
   $11 = $$; //@line 185 "../../iup_classattrib.c"
   $35 = $5; //@line 187 "../../iup_classattrib.c"
   $36 = ((($35)) + 4|0); //@line 187 "../../iup_classattrib.c"
   $37 = HEAP32[$36>>2]|0; //@line 187 "../../iup_classattrib.c"
   $38 = ((($37)) + 28|0); //@line 187 "../../iup_classattrib.c"
   $39 = HEAP32[$38>>2]|0; //@line 187 "../../iup_classattrib.c"
   $40 = $11; //@line 187 "../../iup_classattrib.c"
   $41 = (_iupTableGet($39,$40)|0); //@line 187 "../../iup_classattrib.c"
   $9 = $41; //@line 187 "../../iup_classattrib.c"
   $42 = $9; //@line 188 "../../iup_classattrib.c"
   $43 = ($42|0)!=(0|0); //@line 188 "../../iup_classattrib.c"
   if ($43) {
    $44 = $9; //@line 188 "../../iup_classattrib.c"
    $45 = ((($44)) + 20|0); //@line 188 "../../iup_classattrib.c"
    $46 = HEAP32[$45>>2]|0; //@line 188 "../../iup_classattrib.c"
    $47 = $46 & 16; //@line 188 "../../iup_classattrib.c"
    $48 = ($47|0)!=(0); //@line 188 "../../iup_classattrib.c"
    if ($48) {
     $49 = $8; //@line 190 "../../iup_classattrib.c"
     HEAP32[$49>>2] = 0; //@line 190 "../../iup_classattrib.c"
     $50 = $9; //@line 192 "../../iup_classattrib.c"
     $51 = ((($50)) + 20|0); //@line 192 "../../iup_classattrib.c"
     $52 = HEAP32[$51>>2]|0; //@line 192 "../../iup_classattrib.c"
     $53 = $52 & 32; //@line 192 "../../iup_classattrib.c"
     $54 = ($53|0)!=(0); //@line 192 "../../iup_classattrib.c"
     $55 = $9; //@line 194 "../../iup_classattrib.c"
     if ($54) {
      $56 = ((($55)) + 20|0); //@line 194 "../../iup_classattrib.c"
      $57 = HEAP32[$56>>2]|0; //@line 194 "../../iup_classattrib.c"
      $58 = $57 & 4; //@line 194 "../../iup_classattrib.c"
      $59 = ($58|0)!=(0); //@line 194 "../../iup_classattrib.c"
      if ($59) {
       $4 = -1; //@line 195 "../../iup_classattrib.c"
       $201 = $4; //@line 278 "../../iup_classattrib.c"
       STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
      } else {
       $4 = 0; //@line 196 "../../iup_classattrib.c"
       $201 = $4; //@line 278 "../../iup_classattrib.c"
       STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
      }
     }
     $60 = ((($55)) + 4|0); //@line 199 "../../iup_classattrib.c"
     $61 = HEAP32[$60>>2]|0; //@line 199 "../../iup_classattrib.c"
     $62 = ($61|0)!=(0|0); //@line 199 "../../iup_classattrib.c"
     do {
      if ($62) {
       $63 = $5; //@line 199 "../../iup_classattrib.c"
       $64 = ((($63)) + 16|0); //@line 199 "../../iup_classattrib.c"
       $65 = HEAP32[$64>>2]|0; //@line 199 "../../iup_classattrib.c"
       $66 = ($65|0)!=(0|0); //@line 199 "../../iup_classattrib.c"
       if (!($66)) {
        $67 = $9; //@line 199 "../../iup_classattrib.c"
        $68 = ((($67)) + 20|0); //@line 199 "../../iup_classattrib.c"
        $69 = HEAP32[$68>>2]|0; //@line 199 "../../iup_classattrib.c"
        $70 = $69 & 8; //@line 199 "../../iup_classattrib.c"
        $71 = ($70|0)!=(0); //@line 199 "../../iup_classattrib.c"
        if (!($71)) {
         break;
        }
       }
       $72 = $9; //@line 201 "../../iup_classattrib.c"
       $73 = ((($72)) + 20|0); //@line 201 "../../iup_classattrib.c"
       $74 = HEAP32[$73>>2]|0; //@line 201 "../../iup_classattrib.c"
       $75 = $74 & 128; //@line 201 "../../iup_classattrib.c"
       $76 = ($75|0)!=(0); //@line 201 "../../iup_classattrib.c"
       $77 = $9; //@line 203 "../../iup_classattrib.c"
       $78 = ((($77)) + 4|0); //@line 203 "../../iup_classattrib.c"
       $79 = HEAP32[$78>>2]|0; //@line 203 "../../iup_classattrib.c"
       if ($76) {
        $12 = $79; //@line 203 "../../iup_classattrib.c"
        HEAP32[$13>>2] = -10; //@line 204 "../../iup_classattrib.c"
        HEAP32[$14>>2] = -10; //@line 204 "../../iup_classattrib.c"
        $80 = $10; //@line 205 "../../iup_classattrib.c"
        (_iupStrToIntInt($80,$13,$14,58)|0); //@line 205 "../../iup_classattrib.c"
        $81 = $12; //@line 206 "../../iup_classattrib.c"
        $82 = $5; //@line 206 "../../iup_classattrib.c"
        $83 = HEAP32[$13>>2]|0; //@line 206 "../../iup_classattrib.c"
        $84 = HEAP32[$14>>2]|0; //@line 206 "../../iup_classattrib.c"
        $85 = $7; //@line 206 "../../iup_classattrib.c"
        $86 = (FUNCTION_TABLE_iiiii[$81 & 1023]($82,$83,$84,$85)|0); //@line 206 "../../iup_classattrib.c"
        $4 = $86; //@line 206 "../../iup_classattrib.c"
        $201 = $4; //@line 278 "../../iup_classattrib.c"
        STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
       }
       $15 = $79; //@line 210 "../../iup_classattrib.c"
       HEAP32[$16>>2] = -10; //@line 211 "../../iup_classattrib.c"
       $87 = $10; //@line 212 "../../iup_classattrib.c"
       $88 = (_iupStrToInt($87,$16)|0); //@line 212 "../../iup_classattrib.c"
       $89 = ($88|0)!=(0); //@line 212 "../../iup_classattrib.c"
       if ($89) {
        $90 = $15; //@line 213 "../../iup_classattrib.c"
        $91 = $5; //@line 213 "../../iup_classattrib.c"
        $92 = HEAP32[$16>>2]|0; //@line 213 "../../iup_classattrib.c"
        $93 = $7; //@line 213 "../../iup_classattrib.c"
        $94 = (FUNCTION_TABLE_iiii[$90 & 1023]($91,$92,$93)|0); //@line 213 "../../iup_classattrib.c"
        $4 = $94; //@line 213 "../../iup_classattrib.c"
        $201 = $4; //@line 278 "../../iup_classattrib.c"
        STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
       }
      }
     } while(0);
     $95 = $9; //@line 217 "../../iup_classattrib.c"
     $96 = ((($95)) + 20|0); //@line 217 "../../iup_classattrib.c"
     $97 = HEAP32[$96>>2]|0; //@line 217 "../../iup_classattrib.c"
     $98 = $97 & 4; //@line 217 "../../iup_classattrib.c"
     $99 = ($98|0)!=(0); //@line 217 "../../iup_classattrib.c"
     if ($99) {
      $4 = -1; //@line 218 "../../iup_classattrib.c"
      $201 = $4; //@line 278 "../../iup_classattrib.c"
      STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
     } else {
      $4 = 1; //@line 220 "../../iup_classattrib.c"
      $201 = $4; //@line 278 "../../iup_classattrib.c"
      STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
     }
    }
   }
  }
 }
 $100 = $5; //@line 227 "../../iup_classattrib.c"
 $101 = ((($100)) + 4|0); //@line 227 "../../iup_classattrib.c"
 $102 = HEAP32[$101>>2]|0; //@line 227 "../../iup_classattrib.c"
 $103 = ((($102)) + 28|0); //@line 227 "../../iup_classattrib.c"
 $104 = HEAP32[$103>>2]|0; //@line 227 "../../iup_classattrib.c"
 $105 = $6; //@line 227 "../../iup_classattrib.c"
 $106 = (_iupTableGet($104,$105)|0); //@line 227 "../../iup_classattrib.c"
 $9 = $106; //@line 227 "../../iup_classattrib.c"
 $107 = $8; //@line 228 "../../iup_classattrib.c"
 HEAP32[$107>>2] = 1; //@line 228 "../../iup_classattrib.c"
 $108 = $9; //@line 229 "../../iup_classattrib.c"
 $109 = ($108|0)!=(0|0); //@line 229 "../../iup_classattrib.c"
 do {
  if ($109) {
   $110 = $9; //@line 231 "../../iup_classattrib.c"
   $111 = ((($110)) + 20|0); //@line 231 "../../iup_classattrib.c"
   $112 = HEAP32[$111>>2]|0; //@line 231 "../../iup_classattrib.c"
   $113 = $112 & 1; //@line 231 "../../iup_classattrib.c"
   $114 = ($113|0)!=(0); //@line 231 "../../iup_classattrib.c"
   if ($114) {
    $122 = 0;
   } else {
    $115 = $9; //@line 232 "../../iup_classattrib.c"
    $116 = ((($115)) + 20|0); //@line 232 "../../iup_classattrib.c"
    $117 = HEAP32[$116>>2]|0; //@line 232 "../../iup_classattrib.c"
    $118 = $117 & 4; //@line 232 "../../iup_classattrib.c"
    $119 = ($118|0)!=(0); //@line 232 "../../iup_classattrib.c"
    $120 = $119 ^ 1; //@line 232 "../../iup_classattrib.c"
    $122 = $120;
   }
   $121 = $122&1; //@line 231 "../../iup_classattrib.c"
   $123 = $8; //@line 231 "../../iup_classattrib.c"
   HEAP32[$123>>2] = $121; //@line 231 "../../iup_classattrib.c"
   $124 = $9; //@line 234 "../../iup_classattrib.c"
   $125 = ((($124)) + 20|0); //@line 234 "../../iup_classattrib.c"
   $126 = HEAP32[$125>>2]|0; //@line 234 "../../iup_classattrib.c"
   $127 = $126 & 32; //@line 234 "../../iup_classattrib.c"
   $128 = ($127|0)!=(0); //@line 234 "../../iup_classattrib.c"
   $129 = $9; //@line 236 "../../iup_classattrib.c"
   if ($128) {
    $130 = ((($129)) + 20|0); //@line 236 "../../iup_classattrib.c"
    $131 = HEAP32[$130>>2]|0; //@line 236 "../../iup_classattrib.c"
    $132 = $131 & 4; //@line 236 "../../iup_classattrib.c"
    $133 = ($132|0)!=(0); //@line 236 "../../iup_classattrib.c"
    if ($133) {
     $4 = -1; //@line 237 "../../iup_classattrib.c"
     $201 = $4; //@line 278 "../../iup_classattrib.c"
     STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
    } else {
     $4 = 0; //@line 238 "../../iup_classattrib.c"
     $201 = $4; //@line 278 "../../iup_classattrib.c"
     STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
    }
   }
   $134 = ((($129)) + 4|0); //@line 241 "../../iup_classattrib.c"
   $135 = HEAP32[$134>>2]|0; //@line 241 "../../iup_classattrib.c"
   $136 = ($135|0)!=(0|0); //@line 241 "../../iup_classattrib.c"
   if ($136) {
    $137 = $5; //@line 241 "../../iup_classattrib.c"
    $138 = ((($137)) + 16|0); //@line 241 "../../iup_classattrib.c"
    $139 = HEAP32[$138>>2]|0; //@line 241 "../../iup_classattrib.c"
    $140 = ($139|0)!=(0|0); //@line 241 "../../iup_classattrib.c"
    if (!($140)) {
     $141 = $9; //@line 241 "../../iup_classattrib.c"
     $142 = ((($141)) + 20|0); //@line 241 "../../iup_classattrib.c"
     $143 = HEAP32[$142>>2]|0; //@line 241 "../../iup_classattrib.c"
     $144 = $143 & 8; //@line 241 "../../iup_classattrib.c"
     $145 = ($144|0)!=(0); //@line 241 "../../iup_classattrib.c"
     if (!($145)) {
      break;
     }
    }
    $146 = $7; //@line 244 "../../iup_classattrib.c"
    $147 = ($146|0)!=(0|0); //@line 244 "../../iup_classattrib.c"
    if (!($147)) {
     $148 = $8; //@line 247 "../../iup_classattrib.c"
     $149 = HEAP32[$148>>2]|0; //@line 247 "../../iup_classattrib.c"
     $150 = ($149|0)!=(0); //@line 247 "../../iup_classattrib.c"
     if ($150) {
      $151 = $5; //@line 247 "../../iup_classattrib.c"
      $152 = ((($151)) + 60|0); //@line 247 "../../iup_classattrib.c"
      $153 = HEAP32[$152>>2]|0; //@line 247 "../../iup_classattrib.c"
      $154 = ($153|0)!=(0|0); //@line 247 "../../iup_classattrib.c"
      if ($154) {
       $155 = $5; //@line 248 "../../iup_classattrib.c"
       $156 = ((($155)) + 60|0); //@line 248 "../../iup_classattrib.c"
       $157 = HEAP32[$156>>2]|0; //@line 248 "../../iup_classattrib.c"
       $158 = $6; //@line 248 "../../iup_classattrib.c"
       $159 = (_iupAttribGetInherit($157,$158)|0); //@line 248 "../../iup_classattrib.c"
       $7 = $159; //@line 248 "../../iup_classattrib.c"
      }
     }
     $160 = $7; //@line 250 "../../iup_classattrib.c"
     $161 = ($160|0)!=(0|0); //@line 250 "../../iup_classattrib.c"
     if (!($161)) {
      $162 = $9; //@line 251 "../../iup_classattrib.c"
      $163 = (_iClassGetDefaultValue($162)|0); //@line 251 "../../iup_classattrib.c"
      $7 = $163; //@line 251 "../../iup_classattrib.c"
     }
    }
    $164 = $9; //@line 254 "../../iup_classattrib.c"
    $165 = ((($164)) + 20|0); //@line 254 "../../iup_classattrib.c"
    $166 = HEAP32[$165>>2]|0; //@line 254 "../../iup_classattrib.c"
    $167 = $166 & 128; //@line 254 "../../iup_classattrib.c"
    $168 = ($167|0)!=(0); //@line 254 "../../iup_classattrib.c"
    $169 = $9; //@line 256 "../../iup_classattrib.c"
    if ($168) {
     $170 = ((($169)) + 4|0); //@line 256 "../../iup_classattrib.c"
     $171 = HEAP32[$170>>2]|0; //@line 256 "../../iup_classattrib.c"
     $18 = $171; //@line 256 "../../iup_classattrib.c"
     $172 = $18; //@line 257 "../../iup_classattrib.c"
     $173 = $5; //@line 257 "../../iup_classattrib.c"
     $174 = $7; //@line 257 "../../iup_classattrib.c"
     $175 = (FUNCTION_TABLE_iiiii[$172 & 1023]($173,-10,-10,$174)|0); //@line 257 "../../iup_classattrib.c"
     $4 = $175; //@line 257 "../../iup_classattrib.c"
     $201 = $4; //@line 278 "../../iup_classattrib.c"
     STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
    }
    $176 = ((($169)) + 20|0); //@line 259 "../../iup_classattrib.c"
    $177 = HEAP32[$176>>2]|0; //@line 259 "../../iup_classattrib.c"
    $178 = $177 & 16; //@line 259 "../../iup_classattrib.c"
    $179 = ($178|0)!=(0); //@line 259 "../../iup_classattrib.c"
    $180 = $9; //@line 261 "../../iup_classattrib.c"
    $181 = ((($180)) + 4|0); //@line 261 "../../iup_classattrib.c"
    $182 = HEAP32[$181>>2]|0; //@line 261 "../../iup_classattrib.c"
    if ($179) {
     $19 = $182; //@line 261 "../../iup_classattrib.c"
     $183 = $19; //@line 262 "../../iup_classattrib.c"
     $184 = $5; //@line 262 "../../iup_classattrib.c"
     $185 = $7; //@line 262 "../../iup_classattrib.c"
     $186 = (FUNCTION_TABLE_iiii[$183 & 1023]($184,-10,$185)|0); //@line 262 "../../iup_classattrib.c"
     $4 = $186; //@line 262 "../../iup_classattrib.c"
     $201 = $4; //@line 278 "../../iup_classattrib.c"
     STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
    }
    $187 = $5; //@line 265 "../../iup_classattrib.c"
    $188 = $7; //@line 265 "../../iup_classattrib.c"
    $189 = (FUNCTION_TABLE_iii[$182 & 1023]($187,$188)|0); //@line 265 "../../iup_classattrib.c"
    $17 = $189; //@line 265 "../../iup_classattrib.c"
    $190 = $17; //@line 267 "../../iup_classattrib.c"
    $191 = ($190|0)==(1); //@line 267 "../../iup_classattrib.c"
    if ($191) {
     $192 = $9; //@line 267 "../../iup_classattrib.c"
     $193 = ((($192)) + 20|0); //@line 267 "../../iup_classattrib.c"
     $194 = HEAP32[$193>>2]|0; //@line 267 "../../iup_classattrib.c"
     $195 = $194 & 4; //@line 267 "../../iup_classattrib.c"
     $196 = ($195|0)!=(0); //@line 267 "../../iup_classattrib.c"
     if ($196) {
      $4 = -1; //@line 268 "../../iup_classattrib.c"
      $201 = $4; //@line 278 "../../iup_classattrib.c"
      STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
     }
    }
    $197 = $8; //@line 270 "../../iup_classattrib.c"
    $198 = HEAP32[$197>>2]|0; //@line 270 "../../iup_classattrib.c"
    $199 = ($198|0)!=(0); //@line 270 "../../iup_classattrib.c"
    if ($199) {
     $4 = 1; //@line 271 "../../iup_classattrib.c"
     $201 = $4; //@line 278 "../../iup_classattrib.c"
     STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
    } else {
     $200 = $17; //@line 273 "../../iup_classattrib.c"
     $4 = $200; //@line 273 "../../iup_classattrib.c"
     $201 = $4; //@line 278 "../../iup_classattrib.c"
     STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
    }
   }
  }
 } while(0);
 $4 = 1; //@line 277 "../../iup_classattrib.c"
 $201 = $4; //@line 278 "../../iup_classattrib.c"
 STACKTOP = sp;return ($201|0); //@line 278 "../../iup_classattrib.c"
}
function _iClassFindId($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 while(1) {
  $3 = $2; //@line 61 "../../iup_classattrib.c"
  $4 = HEAP8[$3>>0]|0; //@line 61 "../../iup_classattrib.c"
  $5 = ($4<<24>>24)!=(0); //@line 61 "../../iup_classattrib.c"
  if (!($5)) {
   label = 11;
   break;
  }
  $6 = $2; //@line 63 "../../iup_classattrib.c"
  $7 = HEAP8[$6>>0]|0; //@line 63 "../../iup_classattrib.c"
  $8 = $7 << 24 >> 24; //@line 63 "../../iup_classattrib.c"
  $9 = ($8|0)>=(48); //@line 63 "../../iup_classattrib.c"
  if ($9) {
   $10 = $2; //@line 63 "../../iup_classattrib.c"
   $11 = HEAP8[$10>>0]|0; //@line 63 "../../iup_classattrib.c"
   $12 = $11 << 24 >> 24; //@line 63 "../../iup_classattrib.c"
   $13 = ($12|0)<=(57); //@line 63 "../../iup_classattrib.c"
   if ($13) {
    label = 5;
    break;
   }
  }
  $15 = $2; //@line 65 "../../iup_classattrib.c"
  $16 = HEAP8[$15>>0]|0; //@line 65 "../../iup_classattrib.c"
  $17 = $16 << 24 >> 24; //@line 65 "../../iup_classattrib.c"
  $18 = ($17|0)==(42); //@line 65 "../../iup_classattrib.c"
  if ($18) {
   label = 9;
   break;
  }
  $19 = $2; //@line 65 "../../iup_classattrib.c"
  $20 = HEAP8[$19>>0]|0; //@line 65 "../../iup_classattrib.c"
  $21 = $20 << 24 >> 24; //@line 65 "../../iup_classattrib.c"
  $22 = ($21|0)==(58); //@line 65 "../../iup_classattrib.c"
  if ($22) {
   label = 9;
   break;
  }
  $23 = $2; //@line 65 "../../iup_classattrib.c"
  $24 = HEAP8[$23>>0]|0; //@line 65 "../../iup_classattrib.c"
  $25 = $24 << 24 >> 24; //@line 65 "../../iup_classattrib.c"
  $26 = ($25|0)==(45); //@line 65 "../../iup_classattrib.c"
  if ($26) {
   label = 9;
   break;
  }
  $28 = $2; //@line 68 "../../iup_classattrib.c"
  $29 = ((($28)) + 1|0); //@line 68 "../../iup_classattrib.c"
  $2 = $29; //@line 68 "../../iup_classattrib.c"
 }
 if ((label|0) == 5) {
  $14 = $2; //@line 64 "../../iup_classattrib.c"
  $1 = $14; //@line 64 "../../iup_classattrib.c"
  $30 = $1; //@line 71 "../../iup_classattrib.c"
  STACKTOP = sp;return ($30|0); //@line 71 "../../iup_classattrib.c"
 }
 else if ((label|0) == 9) {
  $27 = $2; //@line 66 "../../iup_classattrib.c"
  $1 = $27; //@line 66 "../../iup_classattrib.c"
  $30 = $1; //@line 71 "../../iup_classattrib.c"
  STACKTOP = sp;return ($30|0); //@line 71 "../../iup_classattrib.c"
 }
 else if ((label|0) == 11) {
  $1 = 0; //@line 70 "../../iup_classattrib.c"
  $30 = $1; //@line 71 "../../iup_classattrib.c"
  STACKTOP = sp;return ($30|0); //@line 71 "../../iup_classattrib.c"
 }
 return (0)|0;
}
function _iClassCutNameId($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 76 "../../iup_classattrib.c"
 $7 = $3; //@line 76 "../../iup_classattrib.c"
 $8 = $6; //@line 76 "../../iup_classattrib.c"
 $9 = $7; //@line 76 "../../iup_classattrib.c"
 $10 = (($8) - ($9))|0; //@line 76 "../../iup_classattrib.c"
 $5 = $10; //@line 76 "../../iup_classattrib.c"
 $11 = $5; //@line 77 "../../iup_classattrib.c"
 $12 = ($11|0)==(0); //@line 77 "../../iup_classattrib.c"
 if ($12) {
  $2 = 0; //@line 78 "../../iup_classattrib.c"
  $17 = $2; //@line 83 "../../iup_classattrib.c"
  STACKTOP = sp;return ($17|0); //@line 83 "../../iup_classattrib.c"
 } else {
  $13 = $3; //@line 80 "../../iup_classattrib.c"
  $14 = $5; //@line 80 "../../iup_classattrib.c"
  _memcpy((25460|0),($13|0),($14|0))|0; //@line 80 "../../iup_classattrib.c"
  $15 = $5; //@line 81 "../../iup_classattrib.c"
  $16 = (25460 + ($15)|0); //@line 81 "../../iup_classattrib.c"
  HEAP8[$16>>0] = 0; //@line 81 "../../iup_classattrib.c"
  $2 = 25460; //@line 82 "../../iup_classattrib.c"
  $17 = $2; //@line 83 "../../iup_classattrib.c"
  STACKTOP = sp;return ($17|0); //@line 83 "../../iup_classattrib.c"
 }
 return (0)|0;
}
function _iClassGetDefaultValue($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 88 "../../iup_classattrib.c"
 $4 = ((($3)) + 16|0); //@line 88 "../../iup_classattrib.c"
 $5 = HEAP32[$4>>2]|0; //@line 88 "../../iup_classattrib.c"
 $6 = ($5|0)!=(0); //@line 88 "../../iup_classattrib.c"
 $7 = $2; //@line 89 "../../iup_classattrib.c"
 $8 = ((($7)) + 8|0); //@line 89 "../../iup_classattrib.c"
 $9 = HEAP32[$8>>2]|0; //@line 89 "../../iup_classattrib.c"
 if ($6) {
  $10 = (_IupGetGlobal($9)|0); //@line 89 "../../iup_classattrib.c"
  $1 = $10; //@line 89 "../../iup_classattrib.c"
  $11 = $1; //@line 92 "../../iup_classattrib.c"
  STACKTOP = sp;return ($11|0); //@line 92 "../../iup_classattrib.c"
 } else {
  $1 = $9; //@line 91 "../../iup_classattrib.c"
  $11 = $1; //@line 92 "../../iup_classattrib.c"
  STACKTOP = sp;return ($11|0); //@line 92 "../../iup_classattrib.c"
 }
 return (0)|0;
}
function _iupClassObjectGetAttributeId($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $9 = $4; //@line 319 "../../iup_classattrib.c"
 $10 = ((($9)) + 4|0); //@line 319 "../../iup_classattrib.c"
 $11 = HEAP32[$10>>2]|0; //@line 319 "../../iup_classattrib.c"
 $12 = ((($11)) + 20|0); //@line 319 "../../iup_classattrib.c"
 $13 = HEAP32[$12>>2]|0; //@line 319 "../../iup_classattrib.c"
 $14 = ($13|0)==(0); //@line 319 "../../iup_classattrib.c"
 if ($14) {
  $3 = 0; //@line 320 "../../iup_classattrib.c"
  $61 = $3; //@line 341 "../../iup_classattrib.c"
  STACKTOP = sp;return ($61|0); //@line 341 "../../iup_classattrib.c"
 }
 $15 = $5; //@line 322 "../../iup_classattrib.c"
 $16 = HEAP8[$15>>0]|0; //@line 322 "../../iup_classattrib.c"
 $17 = $16 << 24 >> 24; //@line 322 "../../iup_classattrib.c"
 $18 = ($17|0)==(0); //@line 322 "../../iup_classattrib.c"
 if ($18) {
  $5 = 1939; //@line 323 "../../iup_classattrib.c"
 }
 $19 = $4; //@line 325 "../../iup_classattrib.c"
 $20 = ((($19)) + 4|0); //@line 325 "../../iup_classattrib.c"
 $21 = HEAP32[$20>>2]|0; //@line 325 "../../iup_classattrib.c"
 $22 = ((($21)) + 28|0); //@line 325 "../../iup_classattrib.c"
 $23 = HEAP32[$22>>2]|0; //@line 325 "../../iup_classattrib.c"
 $24 = $5; //@line 325 "../../iup_classattrib.c"
 $25 = (_iupTableGet($23,$24)|0); //@line 325 "../../iup_classattrib.c"
 $7 = $25; //@line 325 "../../iup_classattrib.c"
 $26 = $7; //@line 326 "../../iup_classattrib.c"
 $27 = ($26|0)!=(0|0); //@line 326 "../../iup_classattrib.c"
 do {
  if ($27) {
   $28 = $7; //@line 326 "../../iup_classattrib.c"
   $29 = ((($28)) + 20|0); //@line 326 "../../iup_classattrib.c"
   $30 = HEAP32[$29>>2]|0; //@line 326 "../../iup_classattrib.c"
   $31 = $30 & 16; //@line 326 "../../iup_classattrib.c"
   $32 = ($31|0)!=(0); //@line 326 "../../iup_classattrib.c"
   if ($32) {
    $33 = $7; //@line 328 "../../iup_classattrib.c"
    $34 = ((($33)) + 20|0); //@line 328 "../../iup_classattrib.c"
    $35 = HEAP32[$34>>2]|0; //@line 328 "../../iup_classattrib.c"
    $36 = $35 & 64; //@line 328 "../../iup_classattrib.c"
    $37 = ($36|0)!=(0); //@line 328 "../../iup_classattrib.c"
    if ($37) {
     $3 = 0; //@line 329 "../../iup_classattrib.c"
     $61 = $3; //@line 341 "../../iup_classattrib.c"
     STACKTOP = sp;return ($61|0); //@line 341 "../../iup_classattrib.c"
    }
    $38 = $7; //@line 331 "../../iup_classattrib.c"
    $39 = HEAP32[$38>>2]|0; //@line 331 "../../iup_classattrib.c"
    $40 = ($39|0)!=(0|0); //@line 331 "../../iup_classattrib.c"
    if ($40) {
     $41 = $7; //@line 332 "../../iup_classattrib.c"
     $42 = ((($41)) + 20|0); //@line 332 "../../iup_classattrib.c"
     $43 = HEAP32[$42>>2]|0; //@line 332 "../../iup_classattrib.c"
     $44 = $43 & 128; //@line 332 "../../iup_classattrib.c"
     $45 = ($44|0)!=(0); //@line 332 "../../iup_classattrib.c"
     if (!($45)) {
      $46 = $4; //@line 333 "../../iup_classattrib.c"
      $47 = ((($46)) + 16|0); //@line 333 "../../iup_classattrib.c"
      $48 = HEAP32[$47>>2]|0; //@line 333 "../../iup_classattrib.c"
      $49 = ($48|0)!=(0|0); //@line 333 "../../iup_classattrib.c"
      if (!($49)) {
       $50 = $7; //@line 333 "../../iup_classattrib.c"
       $51 = ((($50)) + 20|0); //@line 333 "../../iup_classattrib.c"
       $52 = HEAP32[$51>>2]|0; //@line 333 "../../iup_classattrib.c"
       $53 = $52 & 8; //@line 333 "../../iup_classattrib.c"
       $54 = ($53|0)!=(0); //@line 333 "../../iup_classattrib.c"
       if (!($54)) {
        break;
       }
      }
      $55 = $7; //@line 335 "../../iup_classattrib.c"
      $56 = HEAP32[$55>>2]|0; //@line 335 "../../iup_classattrib.c"
      $8 = $56; //@line 335 "../../iup_classattrib.c"
      $57 = $8; //@line 336 "../../iup_classattrib.c"
      $58 = $4; //@line 336 "../../iup_classattrib.c"
      $59 = $6; //@line 336 "../../iup_classattrib.c"
      $60 = (FUNCTION_TABLE_iii[$57 & 1023]($58,$59)|0); //@line 336 "../../iup_classattrib.c"
      $3 = $60; //@line 336 "../../iup_classattrib.c"
      $61 = $3; //@line 341 "../../iup_classattrib.c"
      STACKTOP = sp;return ($61|0); //@line 341 "../../iup_classattrib.c"
     }
    }
   }
  }
 } while(0);
 $3 = 0; //@line 340 "../../iup_classattrib.c"
 $61 = $3; //@line 341 "../../iup_classattrib.c"
 STACKTOP = sp;return ($61|0); //@line 341 "../../iup_classattrib.c"
}
function _iupClassObjectGetAttribute($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = sp + 20|0;
 $14 = sp + 16|0;
 $16 = sp + 8|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $19 = $5; //@line 347 "../../iup_classattrib.c"
 $20 = ((($19)) + 4|0); //@line 347 "../../iup_classattrib.c"
 $21 = HEAP32[$20>>2]|0; //@line 347 "../../iup_classattrib.c"
 $22 = ((($21)) + 20|0); //@line 347 "../../iup_classattrib.c"
 $23 = HEAP32[$22>>2]|0; //@line 347 "../../iup_classattrib.c"
 $24 = ($23|0)!=(0); //@line 347 "../../iup_classattrib.c"
 L1: do {
  if ($24) {
   $25 = $6; //@line 349 "../../iup_classattrib.c"
   $26 = (_iClassFindId($25)|0); //@line 349 "../../iup_classattrib.c"
   $10 = $26; //@line 349 "../../iup_classattrib.c"
   $27 = $10; //@line 350 "../../iup_classattrib.c"
   $28 = ($27|0)!=(0|0); //@line 350 "../../iup_classattrib.c"
   if ($28) {
    $29 = $6; //@line 352 "../../iup_classattrib.c"
    $30 = $10; //@line 352 "../../iup_classattrib.c"
    $31 = (_iClassCutNameId($29,$30)|0); //@line 352 "../../iup_classattrib.c"
    $11 = $31; //@line 352 "../../iup_classattrib.c"
    $32 = $11; //@line 353 "../../iup_classattrib.c"
    $33 = ($32|0)!=(0|0); //@line 353 "../../iup_classattrib.c"
    $$ = $33 ? $31 : 1939; //@line 353 "../../iup_classattrib.c"
    $11 = $$; //@line 354 "../../iup_classattrib.c"
    $34 = $5; //@line 356 "../../iup_classattrib.c"
    $35 = ((($34)) + 4|0); //@line 356 "../../iup_classattrib.c"
    $36 = HEAP32[$35>>2]|0; //@line 356 "../../iup_classattrib.c"
    $37 = ((($36)) + 28|0); //@line 356 "../../iup_classattrib.c"
    $38 = HEAP32[$37>>2]|0; //@line 356 "../../iup_classattrib.c"
    $39 = $11; //@line 356 "../../iup_classattrib.c"
    $40 = (_iupTableGet($38,$39)|0); //@line 356 "../../iup_classattrib.c"
    $9 = $40; //@line 356 "../../iup_classattrib.c"
    $41 = $9; //@line 357 "../../iup_classattrib.c"
    $42 = ($41|0)!=(0|0); //@line 357 "../../iup_classattrib.c"
    if ($42) {
     $43 = $9; //@line 357 "../../iup_classattrib.c"
     $44 = ((($43)) + 20|0); //@line 357 "../../iup_classattrib.c"
     $45 = HEAP32[$44>>2]|0; //@line 357 "../../iup_classattrib.c"
     $46 = $45 & 16; //@line 357 "../../iup_classattrib.c"
     $47 = ($46|0)!=(0); //@line 357 "../../iup_classattrib.c"
     if ($47) {
      $48 = $7; //@line 359 "../../iup_classattrib.c"
      HEAP32[$48>>2] = 0; //@line 359 "../../iup_classattrib.c"
      $49 = $8; //@line 360 "../../iup_classattrib.c"
      HEAP32[$49>>2] = 0; //@line 360 "../../iup_classattrib.c"
      $50 = $9; //@line 362 "../../iup_classattrib.c"
      $51 = ((($50)) + 20|0); //@line 362 "../../iup_classattrib.c"
      $52 = HEAP32[$51>>2]|0; //@line 362 "../../iup_classattrib.c"
      $53 = $52 & 64; //@line 362 "../../iup_classattrib.c"
      $54 = ($53|0)!=(0); //@line 362 "../../iup_classattrib.c"
      if ($54) {
       $4 = 0; //@line 363 "../../iup_classattrib.c"
       $153 = $4; //@line 419 "../../iup_classattrib.c"
       STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
      }
      $55 = $9; //@line 365 "../../iup_classattrib.c"
      $56 = HEAP32[$55>>2]|0; //@line 365 "../../iup_classattrib.c"
      $57 = ($56|0)!=(0|0); //@line 365 "../../iup_classattrib.c"
      do {
       if ($57) {
        $58 = $5; //@line 365 "../../iup_classattrib.c"
        $59 = ((($58)) + 16|0); //@line 365 "../../iup_classattrib.c"
        $60 = HEAP32[$59>>2]|0; //@line 365 "../../iup_classattrib.c"
        $61 = ($60|0)!=(0|0); //@line 365 "../../iup_classattrib.c"
        if (!($61)) {
         $62 = $9; //@line 365 "../../iup_classattrib.c"
         $63 = ((($62)) + 20|0); //@line 365 "../../iup_classattrib.c"
         $64 = HEAP32[$63>>2]|0; //@line 365 "../../iup_classattrib.c"
         $65 = $64 & 8; //@line 365 "../../iup_classattrib.c"
         $66 = ($65|0)!=(0); //@line 365 "../../iup_classattrib.c"
         if (!($66)) {
          break;
         }
        }
        $67 = $9; //@line 367 "../../iup_classattrib.c"
        $68 = ((($67)) + 20|0); //@line 367 "../../iup_classattrib.c"
        $69 = HEAP32[$68>>2]|0; //@line 367 "../../iup_classattrib.c"
        $70 = $69 & 128; //@line 367 "../../iup_classattrib.c"
        $71 = ($70|0)!=(0); //@line 367 "../../iup_classattrib.c"
        $72 = $9; //@line 369 "../../iup_classattrib.c"
        $73 = HEAP32[$72>>2]|0; //@line 369 "../../iup_classattrib.c"
        if ($71) {
         $12 = $73; //@line 369 "../../iup_classattrib.c"
         HEAP32[$13>>2] = -10; //@line 370 "../../iup_classattrib.c"
         HEAP32[$14>>2] = -10; //@line 370 "../../iup_classattrib.c"
         $74 = $10; //@line 371 "../../iup_classattrib.c"
         (_iupStrToIntInt($74,$13,$14,58)|0); //@line 371 "../../iup_classattrib.c"
         $75 = $12; //@line 372 "../../iup_classattrib.c"
         $76 = $5; //@line 372 "../../iup_classattrib.c"
         $77 = HEAP32[$13>>2]|0; //@line 372 "../../iup_classattrib.c"
         $78 = HEAP32[$14>>2]|0; //@line 372 "../../iup_classattrib.c"
         $79 = (FUNCTION_TABLE_iiii[$75 & 1023]($76,$77,$78)|0); //@line 372 "../../iup_classattrib.c"
         $4 = $79; //@line 372 "../../iup_classattrib.c"
         $153 = $4; //@line 419 "../../iup_classattrib.c"
         STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
        }
        $15 = $73; //@line 376 "../../iup_classattrib.c"
        HEAP32[$16>>2] = -10; //@line 377 "../../iup_classattrib.c"
        $80 = $10; //@line 378 "../../iup_classattrib.c"
        $81 = (_iupStrToInt($80,$16)|0); //@line 378 "../../iup_classattrib.c"
        $82 = ($81|0)!=(0); //@line 378 "../../iup_classattrib.c"
        if (!($82)) {
         break L1;
        }
        $83 = $15; //@line 379 "../../iup_classattrib.c"
        $84 = $5; //@line 379 "../../iup_classattrib.c"
        $85 = HEAP32[$16>>2]|0; //@line 379 "../../iup_classattrib.c"
        $86 = (FUNCTION_TABLE_iii[$83 & 1023]($84,$85)|0); //@line 379 "../../iup_classattrib.c"
        $4 = $86; //@line 379 "../../iup_classattrib.c"
        $153 = $4; //@line 419 "../../iup_classattrib.c"
        STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
       }
      } while(0);
      $4 = 0; //@line 383 "../../iup_classattrib.c"
      $153 = $4; //@line 419 "../../iup_classattrib.c"
      STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
     }
    }
   }
  }
 } while(0);
 $87 = $5; //@line 390 "../../iup_classattrib.c"
 $88 = ((($87)) + 4|0); //@line 390 "../../iup_classattrib.c"
 $89 = HEAP32[$88>>2]|0; //@line 390 "../../iup_classattrib.c"
 $90 = ((($89)) + 28|0); //@line 390 "../../iup_classattrib.c"
 $91 = HEAP32[$90>>2]|0; //@line 390 "../../iup_classattrib.c"
 $92 = $6; //@line 390 "../../iup_classattrib.c"
 $93 = (_iupTableGet($91,$92)|0); //@line 390 "../../iup_classattrib.c"
 $9 = $93; //@line 390 "../../iup_classattrib.c"
 $94 = $7; //@line 391 "../../iup_classattrib.c"
 HEAP32[$94>>2] = 0; //@line 391 "../../iup_classattrib.c"
 $95 = $8; //@line 392 "../../iup_classattrib.c"
 HEAP32[$95>>2] = 1; //@line 392 "../../iup_classattrib.c"
 $96 = $9; //@line 393 "../../iup_classattrib.c"
 $97 = ($96|0)!=(0|0); //@line 393 "../../iup_classattrib.c"
 do {
  if ($97) {
   $98 = $9; //@line 395 "../../iup_classattrib.c"
   $99 = (_iClassGetDefaultValue($98)|0); //@line 395 "../../iup_classattrib.c"
   $100 = $7; //@line 395 "../../iup_classattrib.c"
   HEAP32[$100>>2] = $99; //@line 395 "../../iup_classattrib.c"
   $101 = $9; //@line 396 "../../iup_classattrib.c"
   $102 = ((($101)) + 20|0); //@line 396 "../../iup_classattrib.c"
   $103 = HEAP32[$102>>2]|0; //@line 396 "../../iup_classattrib.c"
   $104 = $103 & 1; //@line 396 "../../iup_classattrib.c"
   $105 = ($104|0)!=(0); //@line 396 "../../iup_classattrib.c"
   if ($105) {
    $113 = 0;
   } else {
    $106 = $9; //@line 397 "../../iup_classattrib.c"
    $107 = ((($106)) + 20|0); //@line 397 "../../iup_classattrib.c"
    $108 = HEAP32[$107>>2]|0; //@line 397 "../../iup_classattrib.c"
    $109 = $108 & 4; //@line 397 "../../iup_classattrib.c"
    $110 = ($109|0)!=(0); //@line 397 "../../iup_classattrib.c"
    $111 = $110 ^ 1; //@line 397 "../../iup_classattrib.c"
    $113 = $111;
   }
   $112 = $113&1; //@line 396 "../../iup_classattrib.c"
   $114 = $8; //@line 396 "../../iup_classattrib.c"
   HEAP32[$114>>2] = $112; //@line 396 "../../iup_classattrib.c"
   $115 = $9; //@line 399 "../../iup_classattrib.c"
   $116 = ((($115)) + 20|0); //@line 399 "../../iup_classattrib.c"
   $117 = HEAP32[$116>>2]|0; //@line 399 "../../iup_classattrib.c"
   $118 = $117 & 64; //@line 399 "../../iup_classattrib.c"
   $119 = ($118|0)!=(0); //@line 399 "../../iup_classattrib.c"
   if ($119) {
    $4 = 0; //@line 400 "../../iup_classattrib.c"
    $153 = $4; //@line 419 "../../iup_classattrib.c"
    STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
   }
   $120 = $9; //@line 402 "../../iup_classattrib.c"
   $121 = HEAP32[$120>>2]|0; //@line 402 "../../iup_classattrib.c"
   $122 = ($121|0)!=(0|0); //@line 402 "../../iup_classattrib.c"
   if ($122) {
    $123 = $5; //@line 402 "../../iup_classattrib.c"
    $124 = ((($123)) + 16|0); //@line 402 "../../iup_classattrib.c"
    $125 = HEAP32[$124>>2]|0; //@line 402 "../../iup_classattrib.c"
    $126 = ($125|0)!=(0|0); //@line 402 "../../iup_classattrib.c"
    if (!($126)) {
     $127 = $9; //@line 402 "../../iup_classattrib.c"
     $128 = ((($127)) + 20|0); //@line 402 "../../iup_classattrib.c"
     $129 = HEAP32[$128>>2]|0; //@line 402 "../../iup_classattrib.c"
     $130 = $129 & 8; //@line 402 "../../iup_classattrib.c"
     $131 = ($130|0)!=(0); //@line 402 "../../iup_classattrib.c"
     if (!($131)) {
      break;
     }
    }
    $132 = $9; //@line 404 "../../iup_classattrib.c"
    $133 = ((($132)) + 20|0); //@line 404 "../../iup_classattrib.c"
    $134 = HEAP32[$133>>2]|0; //@line 404 "../../iup_classattrib.c"
    $135 = $134 & 128; //@line 404 "../../iup_classattrib.c"
    $136 = ($135|0)!=(0); //@line 404 "../../iup_classattrib.c"
    $137 = $9; //@line 406 "../../iup_classattrib.c"
    if ($136) {
     $138 = HEAP32[$137>>2]|0; //@line 406 "../../iup_classattrib.c"
     $17 = $138; //@line 406 "../../iup_classattrib.c"
     $139 = $17; //@line 407 "../../iup_classattrib.c"
     $140 = $5; //@line 407 "../../iup_classattrib.c"
     $141 = (FUNCTION_TABLE_iiii[$139 & 1023]($140,-10,-10)|0); //@line 407 "../../iup_classattrib.c"
     $4 = $141; //@line 407 "../../iup_classattrib.c"
     $153 = $4; //@line 419 "../../iup_classattrib.c"
     STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
    }
    $142 = ((($137)) + 20|0); //@line 409 "../../iup_classattrib.c"
    $143 = HEAP32[$142>>2]|0; //@line 409 "../../iup_classattrib.c"
    $144 = $143 & 16; //@line 409 "../../iup_classattrib.c"
    $145 = ($144|0)!=(0); //@line 409 "../../iup_classattrib.c"
    $146 = $9; //@line 411 "../../iup_classattrib.c"
    $147 = HEAP32[$146>>2]|0; //@line 411 "../../iup_classattrib.c"
    if ($145) {
     $18 = $147; //@line 411 "../../iup_classattrib.c"
     $148 = $18; //@line 412 "../../iup_classattrib.c"
     $149 = $5; //@line 412 "../../iup_classattrib.c"
     $150 = (FUNCTION_TABLE_iii[$148 & 1023]($149,-10)|0); //@line 412 "../../iup_classattrib.c"
     $4 = $150; //@line 412 "../../iup_classattrib.c"
     $153 = $4; //@line 419 "../../iup_classattrib.c"
     STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
    } else {
     $151 = $5; //@line 415 "../../iup_classattrib.c"
     $152 = (FUNCTION_TABLE_ii[$147 & 1023]($151)|0); //@line 415 "../../iup_classattrib.c"
     $4 = $152; //@line 415 "../../iup_classattrib.c"
     $153 = $4; //@line 419 "../../iup_classattrib.c"
     STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
    }
   }
  }
 } while(0);
 $4 = 0; //@line 418 "../../iup_classattrib.c"
 $153 = $4; //@line 419 "../../iup_classattrib.c"
 STACKTOP = sp;return ($153|0); //@line 419 "../../iup_classattrib.c"
}
function _iupClassObjectGetAttributeInfo($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $4; //@line 425 "../../iup_classattrib.c"
 $12 = ((($11)) + 4|0); //@line 425 "../../iup_classattrib.c"
 $13 = HEAP32[$12>>2]|0; //@line 425 "../../iup_classattrib.c"
 $14 = ((($13)) + 20|0); //@line 425 "../../iup_classattrib.c"
 $15 = HEAP32[$14>>2]|0; //@line 425 "../../iup_classattrib.c"
 $16 = ($15|0)!=(0); //@line 425 "../../iup_classattrib.c"
 if ($16) {
  $17 = $5; //@line 427 "../../iup_classattrib.c"
  $18 = (_iClassFindId($17)|0); //@line 427 "../../iup_classattrib.c"
  $9 = $18; //@line 427 "../../iup_classattrib.c"
  $19 = $9; //@line 428 "../../iup_classattrib.c"
  $20 = ($19|0)!=(0|0); //@line 428 "../../iup_classattrib.c"
  if ($20) {
   $21 = $5; //@line 430 "../../iup_classattrib.c"
   $22 = $9; //@line 430 "../../iup_classattrib.c"
   $23 = (_iClassCutNameId($21,$22)|0); //@line 430 "../../iup_classattrib.c"
   $10 = $23; //@line 430 "../../iup_classattrib.c"
   $24 = $10; //@line 431 "../../iup_classattrib.c"
   $25 = ($24|0)!=(0|0); //@line 431 "../../iup_classattrib.c"
   $$ = $25 ? $23 : 1939; //@line 431 "../../iup_classattrib.c"
   $10 = $$; //@line 432 "../../iup_classattrib.c"
   $26 = $4; //@line 434 "../../iup_classattrib.c"
   $27 = ((($26)) + 4|0); //@line 434 "../../iup_classattrib.c"
   $28 = HEAP32[$27>>2]|0; //@line 434 "../../iup_classattrib.c"
   $29 = ((($28)) + 28|0); //@line 434 "../../iup_classattrib.c"
   $30 = HEAP32[$29>>2]|0; //@line 434 "../../iup_classattrib.c"
   $31 = $10; //@line 434 "../../iup_classattrib.c"
   $32 = (_iupTableGet($30,$31)|0); //@line 434 "../../iup_classattrib.c"
   $8 = $32; //@line 434 "../../iup_classattrib.c"
   $33 = $8; //@line 435 "../../iup_classattrib.c"
   $34 = ($33|0)!=(0|0); //@line 435 "../../iup_classattrib.c"
   if ($34) {
    $35 = $8; //@line 435 "../../iup_classattrib.c"
    $36 = ((($35)) + 20|0); //@line 435 "../../iup_classattrib.c"
    $37 = HEAP32[$36>>2]|0; //@line 435 "../../iup_classattrib.c"
    $38 = $37 & 16; //@line 435 "../../iup_classattrib.c"
    $39 = ($38|0)!=(0); //@line 435 "../../iup_classattrib.c"
    if ($39) {
     $40 = $6; //@line 437 "../../iup_classattrib.c"
     HEAP32[$40>>2] = 0; //@line 437 "../../iup_classattrib.c"
     $41 = $7; //@line 438 "../../iup_classattrib.c"
     HEAP32[$41>>2] = 0; //@line 438 "../../iup_classattrib.c"
     STACKTOP = sp;return; //@line 455 "../../iup_classattrib.c"
    }
   }
  }
 }
 $42 = $4; //@line 446 "../../iup_classattrib.c"
 $43 = ((($42)) + 4|0); //@line 446 "../../iup_classattrib.c"
 $44 = HEAP32[$43>>2]|0; //@line 446 "../../iup_classattrib.c"
 $45 = ((($44)) + 28|0); //@line 446 "../../iup_classattrib.c"
 $46 = HEAP32[$45>>2]|0; //@line 446 "../../iup_classattrib.c"
 $47 = $5; //@line 446 "../../iup_classattrib.c"
 $48 = (_iupTableGet($46,$47)|0); //@line 446 "../../iup_classattrib.c"
 $8 = $48; //@line 446 "../../iup_classattrib.c"
 $49 = $6; //@line 447 "../../iup_classattrib.c"
 HEAP32[$49>>2] = 0; //@line 447 "../../iup_classattrib.c"
 $50 = $7; //@line 448 "../../iup_classattrib.c"
 HEAP32[$50>>2] = 1; //@line 448 "../../iup_classattrib.c"
 $51 = $8; //@line 449 "../../iup_classattrib.c"
 $52 = ($51|0)!=(0|0); //@line 449 "../../iup_classattrib.c"
 if (!($52)) {
  STACKTOP = sp;return; //@line 455 "../../iup_classattrib.c"
 }
 $53 = $8; //@line 451 "../../iup_classattrib.c"
 $54 = (_iClassGetDefaultValue($53)|0); //@line 451 "../../iup_classattrib.c"
 $55 = $6; //@line 451 "../../iup_classattrib.c"
 HEAP32[$55>>2] = $54; //@line 451 "../../iup_classattrib.c"
 $56 = $8; //@line 452 "../../iup_classattrib.c"
 $57 = ((($56)) + 20|0); //@line 452 "../../iup_classattrib.c"
 $58 = HEAP32[$57>>2]|0; //@line 452 "../../iup_classattrib.c"
 $59 = $58 & 1; //@line 452 "../../iup_classattrib.c"
 $60 = ($59|0)!=(0); //@line 452 "../../iup_classattrib.c"
 if ($60) {
  $68 = 0;
 } else {
  $61 = $8; //@line 453 "../../iup_classattrib.c"
  $62 = ((($61)) + 20|0); //@line 453 "../../iup_classattrib.c"
  $63 = HEAP32[$62>>2]|0; //@line 453 "../../iup_classattrib.c"
  $64 = $63 & 4; //@line 453 "../../iup_classattrib.c"
  $65 = ($64|0)!=(0); //@line 453 "../../iup_classattrib.c"
  $66 = $65 ^ 1; //@line 453 "../../iup_classattrib.c"
  $68 = $66;
 }
 $67 = $68&1; //@line 452 "../../iup_classattrib.c"
 $69 = $7; //@line 452 "../../iup_classattrib.c"
 HEAP32[$69>>2] = $67; //@line 452 "../../iup_classattrib.c"
 STACKTOP = sp;return; //@line 455 "../../iup_classattrib.c"
}
function _iupClassObjectCurAttribIsInherit($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 471 "../../iup_classattrib.c"
 $5 = ((($4)) + 28|0); //@line 471 "../../iup_classattrib.c"
 $6 = HEAP32[$5>>2]|0; //@line 471 "../../iup_classattrib.c"
 $7 = (_iupTableGetCurr($6)|0); //@line 471 "../../iup_classattrib.c"
 $3 = $7; //@line 471 "../../iup_classattrib.c"
 $8 = $3; //@line 472 "../../iup_classattrib.c"
 $9 = ($8|0)!=(0|0); //@line 472 "../../iup_classattrib.c"
 if ($9) {
  $10 = $3; //@line 472 "../../iup_classattrib.c"
  $11 = ((($10)) + 20|0); //@line 472 "../../iup_classattrib.c"
  $12 = HEAP32[$11>>2]|0; //@line 472 "../../iup_classattrib.c"
  $13 = $12 & 1; //@line 472 "../../iup_classattrib.c"
  $14 = ($13|0)!=(0); //@line 472 "../../iup_classattrib.c"
  if (!($14)) {
   $1 = 1; //@line 473 "../../iup_classattrib.c"
   $15 = $1; //@line 475 "../../iup_classattrib.c"
   STACKTOP = sp;return ($15|0); //@line 475 "../../iup_classattrib.c"
  }
 }
 $1 = 0; //@line 474 "../../iup_classattrib.c"
 $15 = $1; //@line 475 "../../iup_classattrib.c"
 STACKTOP = sp;return ($15|0); //@line 475 "../../iup_classattrib.c"
}
function _iupClassRegisterAttribute($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $13 = $6;
 $15 = $7; //@line 523 "../../iup_classattrib.c"
 $16 = ((($15)) + 28|0); //@line 523 "../../iup_classattrib.c"
 $17 = HEAP32[$16>>2]|0; //@line 523 "../../iup_classattrib.c"
 $18 = $8; //@line 523 "../../iup_classattrib.c"
 $19 = (_iupTableGet($17,$18)|0); //@line 523 "../../iup_classattrib.c"
 $14 = $19; //@line 523 "../../iup_classattrib.c"
 $20 = $14; //@line 524 "../../iup_classattrib.c"
 $21 = ($20|0)!=(0|0); //@line 524 "../../iup_classattrib.c"
 if ($21) {
  $22 = $14; //@line 525 "../../iup_classattrib.c"
  _free($22); //@line 525 "../../iup_classattrib.c"
 }
 $23 = (_malloc(24)|0); //@line 527 "../../iup_classattrib.c"
 $14 = $23; //@line 527 "../../iup_classattrib.c"
 $24 = $9; //@line 528 "../../iup_classattrib.c"
 $25 = $14; //@line 528 "../../iup_classattrib.c"
 HEAP32[$25>>2] = $24; //@line 528 "../../iup_classattrib.c"
 $26 = $10; //@line 529 "../../iup_classattrib.c"
 $27 = $14; //@line 529 "../../iup_classattrib.c"
 $28 = ((($27)) + 4|0); //@line 529 "../../iup_classattrib.c"
 HEAP32[$28>>2] = $26; //@line 529 "../../iup_classattrib.c"
 $29 = $11; //@line 530 "../../iup_classattrib.c"
 $30 = ($29|0)==((-1)|0); //@line 530 "../../iup_classattrib.c"
 if ($30) {
  $31 = $12; //@line 531 "../../iup_classattrib.c"
  $32 = $14; //@line 531 "../../iup_classattrib.c"
  $33 = ((($32)) + 8|0); //@line 531 "../../iup_classattrib.c"
  HEAP32[$33>>2] = $31; //@line 531 "../../iup_classattrib.c"
 } else {
  $34 = $11; //@line 533 "../../iup_classattrib.c"
  $35 = $14; //@line 533 "../../iup_classattrib.c"
  $36 = ((($35)) + 8|0); //@line 533 "../../iup_classattrib.c"
  HEAP32[$36>>2] = $34; //@line 533 "../../iup_classattrib.c"
 }
 $37 = $12; //@line 534 "../../iup_classattrib.c"
 $38 = $14; //@line 534 "../../iup_classattrib.c"
 $39 = ((($38)) + 12|0); //@line 534 "../../iup_classattrib.c"
 HEAP32[$39>>2] = $37; //@line 534 "../../iup_classattrib.c"
 $40 = $13; //@line 535 "../../iup_classattrib.c"
 $41 = $14; //@line 535 "../../iup_classattrib.c"
 $42 = ((($41)) + 20|0); //@line 535 "../../iup_classattrib.c"
 HEAP32[$42>>2] = $40; //@line 535 "../../iup_classattrib.c"
 $43 = $14; //@line 537 "../../iup_classattrib.c"
 $44 = ((($43)) + 8|0); //@line 537 "../../iup_classattrib.c"
 $45 = HEAP32[$44>>2]|0; //@line 537 "../../iup_classattrib.c"
 $46 = (_iupClassIsGlobalDefault($45,0)|0); //@line 537 "../../iup_classattrib.c"
 $47 = ($46|0)!=(0); //@line 537 "../../iup_classattrib.c"
 $48 = $14; //@line 538 "../../iup_classattrib.c"
 $49 = ((($48)) + 16|0); //@line 538 "../../iup_classattrib.c"
 if ($47) {
  HEAP32[$49>>2] = 1; //@line 538 "../../iup_classattrib.c"
  $50 = $7; //@line 542 "../../iup_classattrib.c"
  $51 = ((($50)) + 28|0); //@line 542 "../../iup_classattrib.c"
  $52 = HEAP32[$51>>2]|0; //@line 542 "../../iup_classattrib.c"
  $53 = $8; //@line 542 "../../iup_classattrib.c"
  $54 = $14; //@line 542 "../../iup_classattrib.c"
  _iupTableSet($52,$53,$54,0); //@line 542 "../../iup_classattrib.c"
  STACKTOP = sp;return; //@line 543 "../../iup_classattrib.c"
 } else {
  HEAP32[$49>>2] = 0; //@line 540 "../../iup_classattrib.c"
  $50 = $7; //@line 542 "../../iup_classattrib.c"
  $51 = ((($50)) + 28|0); //@line 542 "../../iup_classattrib.c"
  $52 = HEAP32[$51>>2]|0; //@line 542 "../../iup_classattrib.c"
  $53 = $8; //@line 542 "../../iup_classattrib.c"
  $54 = $14; //@line 542 "../../iup_classattrib.c"
  _iupTableSet($52,$53,$54,0); //@line 542 "../../iup_classattrib.c"
  STACKTOP = sp;return; //@line 543 "../../iup_classattrib.c"
 }
}
function _iupClassRegisterAttributeId($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $11 = $5; //@line 549 "../../iup_classattrib.c"
 $12 = ((($11)) + 28|0); //@line 549 "../../iup_classattrib.c"
 $13 = HEAP32[$12>>2]|0; //@line 549 "../../iup_classattrib.c"
 $14 = $6; //@line 549 "../../iup_classattrib.c"
 $15 = (_iupTableGet($13,$14)|0); //@line 549 "../../iup_classattrib.c"
 $10 = $15; //@line 549 "../../iup_classattrib.c"
 $16 = $10; //@line 550 "../../iup_classattrib.c"
 $17 = ($16|0)!=(0|0); //@line 550 "../../iup_classattrib.c"
 if ($17) {
  $18 = $10; //@line 551 "../../iup_classattrib.c"
  _free($18); //@line 551 "../../iup_classattrib.c"
 }
 $19 = (_malloc(24)|0); //@line 553 "../../iup_classattrib.c"
 $10 = $19; //@line 553 "../../iup_classattrib.c"
 $20 = $7; //@line 554 "../../iup_classattrib.c"
 $21 = $10; //@line 554 "../../iup_classattrib.c"
 HEAP32[$21>>2] = $20; //@line 554 "../../iup_classattrib.c"
 $22 = $8; //@line 555 "../../iup_classattrib.c"
 $23 = $10; //@line 555 "../../iup_classattrib.c"
 $24 = ((($23)) + 4|0); //@line 555 "../../iup_classattrib.c"
 HEAP32[$24>>2] = $22; //@line 555 "../../iup_classattrib.c"
 $25 = $10; //@line 556 "../../iup_classattrib.c"
 $26 = ((($25)) + 8|0); //@line 556 "../../iup_classattrib.c"
 HEAP32[$26>>2] = 0; //@line 556 "../../iup_classattrib.c"
 $27 = $10; //@line 557 "../../iup_classattrib.c"
 $28 = ((($27)) + 12|0); //@line 557 "../../iup_classattrib.c"
 HEAP32[$28>>2] = 0; //@line 557 "../../iup_classattrib.c"
 $29 = $9; //@line 558 "../../iup_classattrib.c"
 $30 = $29 | 16; //@line 558 "../../iup_classattrib.c"
 $31 = $30 | 1; //@line 558 "../../iup_classattrib.c"
 $32 = $31 | 2; //@line 558 "../../iup_classattrib.c"
 $33 = $10; //@line 558 "../../iup_classattrib.c"
 $34 = ((($33)) + 20|0); //@line 558 "../../iup_classattrib.c"
 HEAP32[$34>>2] = $32; //@line 558 "../../iup_classattrib.c"
 $35 = $10; //@line 559 "../../iup_classattrib.c"
 $36 = ((($35)) + 16|0); //@line 559 "../../iup_classattrib.c"
 HEAP32[$36>>2] = 0; //@line 559 "../../iup_classattrib.c"
 $37 = $5; //@line 561 "../../iup_classattrib.c"
 $38 = ((($37)) + 28|0); //@line 561 "../../iup_classattrib.c"
 $39 = HEAP32[$38>>2]|0; //@line 561 "../../iup_classattrib.c"
 $40 = $6; //@line 561 "../../iup_classattrib.c"
 $41 = $10; //@line 561 "../../iup_classattrib.c"
 _iupTableSet($39,$40,$41,0); //@line 561 "../../iup_classattrib.c"
 STACKTOP = sp;return; //@line 562 "../../iup_classattrib.c"
}
function _iupClassRegisterGetAttribute($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $13 = $6;
 $15 = $7; //@line 587 "../../iup_classattrib.c"
 $16 = ((($15)) + 28|0); //@line 587 "../../iup_classattrib.c"
 $17 = HEAP32[$16>>2]|0; //@line 587 "../../iup_classattrib.c"
 $18 = $8; //@line 587 "../../iup_classattrib.c"
 $19 = (_iupTableGet($17,$18)|0); //@line 587 "../../iup_classattrib.c"
 $14 = $19; //@line 587 "../../iup_classattrib.c"
 $20 = $14; //@line 588 "../../iup_classattrib.c"
 $21 = ($20|0)!=(0|0); //@line 588 "../../iup_classattrib.c"
 if (!($21)) {
  STACKTOP = sp;return; //@line 596 "../../iup_classattrib.c"
 }
 $22 = $9; //@line 590 "../../iup_classattrib.c"
 $23 = ($22|0)!=(0|0); //@line 590 "../../iup_classattrib.c"
 if ($23) {
  $24 = $14; //@line 590 "../../iup_classattrib.c"
  $25 = HEAP32[$24>>2]|0; //@line 590 "../../iup_classattrib.c"
  $26 = $9; //@line 590 "../../iup_classattrib.c"
  HEAP32[$26>>2] = $25; //@line 590 "../../iup_classattrib.c"
 }
 $27 = $10; //@line 591 "../../iup_classattrib.c"
 $28 = ($27|0)!=(0|0); //@line 591 "../../iup_classattrib.c"
 if ($28) {
  $29 = $14; //@line 591 "../../iup_classattrib.c"
  $30 = ((($29)) + 4|0); //@line 591 "../../iup_classattrib.c"
  $31 = HEAP32[$30>>2]|0; //@line 591 "../../iup_classattrib.c"
  $32 = $10; //@line 591 "../../iup_classattrib.c"
  HEAP32[$32>>2] = $31; //@line 591 "../../iup_classattrib.c"
 }
 $33 = $11; //@line 592 "../../iup_classattrib.c"
 $34 = ($33|0)!=(0|0); //@line 592 "../../iup_classattrib.c"
 if ($34) {
  $35 = $14; //@line 592 "../../iup_classattrib.c"
  $36 = ((($35)) + 8|0); //@line 592 "../../iup_classattrib.c"
  $37 = HEAP32[$36>>2]|0; //@line 592 "../../iup_classattrib.c"
  $38 = $11; //@line 592 "../../iup_classattrib.c"
  HEAP32[$38>>2] = $37; //@line 592 "../../iup_classattrib.c"
 }
 $39 = $12; //@line 593 "../../iup_classattrib.c"
 $40 = ($39|0)!=(0|0); //@line 593 "../../iup_classattrib.c"
 if ($40) {
  $41 = $14; //@line 593 "../../iup_classattrib.c"
  $42 = ((($41)) + 12|0); //@line 593 "../../iup_classattrib.c"
  $43 = HEAP32[$42>>2]|0; //@line 593 "../../iup_classattrib.c"
  $44 = $12; //@line 593 "../../iup_classattrib.c"
  HEAP32[$44>>2] = $43; //@line 593 "../../iup_classattrib.c"
 }
 $45 = $13; //@line 594 "../../iup_classattrib.c"
 $46 = ($45|0)!=(0|0); //@line 594 "../../iup_classattrib.c"
 if (!($46)) {
  STACKTOP = sp;return; //@line 596 "../../iup_classattrib.c"
 }
 $47 = $14; //@line 594 "../../iup_classattrib.c"
 $48 = ((($47)) + 20|0); //@line 594 "../../iup_classattrib.c"
 $49 = HEAP32[$48>>2]|0; //@line 594 "../../iup_classattrib.c"
 $50 = $13; //@line 594 "../../iup_classattrib.c"
 HEAP32[$50>>2] = $49; //@line 594 "../../iup_classattrib.c"
 STACKTOP = sp;return; //@line 596 "../../iup_classattrib.c"
}
function _iupClassRegisterReplaceAttribFunc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 600 "../../iup_classattrib.c"
 $10 = ((($9)) + 28|0); //@line 600 "../../iup_classattrib.c"
 $11 = HEAP32[$10>>2]|0; //@line 600 "../../iup_classattrib.c"
 $12 = $5; //@line 600 "../../iup_classattrib.c"
 $13 = (_iupTableGet($11,$12)|0); //@line 600 "../../iup_classattrib.c"
 $8 = $13; //@line 600 "../../iup_classattrib.c"
 $14 = $8; //@line 601 "../../iup_classattrib.c"
 $15 = ($14|0)!=(0|0); //@line 601 "../../iup_classattrib.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 606 "../../iup_classattrib.c"
 }
 $16 = $6; //@line 603 "../../iup_classattrib.c"
 $17 = ($16|0)!=(0|0); //@line 603 "../../iup_classattrib.c"
 if ($17) {
  $18 = $6; //@line 603 "../../iup_classattrib.c"
  $19 = $8; //@line 603 "../../iup_classattrib.c"
  HEAP32[$19>>2] = $18; //@line 603 "../../iup_classattrib.c"
 }
 $20 = $7; //@line 604 "../../iup_classattrib.c"
 $21 = ($20|0)!=(0|0); //@line 604 "../../iup_classattrib.c"
 if (!($21)) {
  STACKTOP = sp;return; //@line 606 "../../iup_classattrib.c"
 }
 $22 = $7; //@line 604 "../../iup_classattrib.c"
 $23 = $8; //@line 604 "../../iup_classattrib.c"
 $24 = ((($23)) + 4|0); //@line 604 "../../iup_classattrib.c"
 HEAP32[$24>>2] = $22; //@line 604 "../../iup_classattrib.c"
 STACKTOP = sp;return; //@line 606 "../../iup_classattrib.c"
}
function _iupClassRegisterReplaceAttribDef($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 610 "../../iup_classattrib.c"
 $10 = ((($9)) + 28|0); //@line 610 "../../iup_classattrib.c"
 $11 = HEAP32[$10>>2]|0; //@line 610 "../../iup_classattrib.c"
 $12 = $5; //@line 610 "../../iup_classattrib.c"
 $13 = (_iupTableGet($11,$12)|0); //@line 610 "../../iup_classattrib.c"
 $8 = $13; //@line 610 "../../iup_classattrib.c"
 $14 = $8; //@line 611 "../../iup_classattrib.c"
 $15 = ($14|0)!=(0|0); //@line 611 "../../iup_classattrib.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 624 "../../iup_classattrib.c"
 }
 $16 = $6; //@line 613 "../../iup_classattrib.c"
 $17 = ($16|0)==((-1)|0); //@line 613 "../../iup_classattrib.c"
 if ($17) {
  $18 = $7; //@line 614 "../../iup_classattrib.c"
  $19 = $8; //@line 614 "../../iup_classattrib.c"
  $20 = ((($19)) + 8|0); //@line 614 "../../iup_classattrib.c"
  HEAP32[$20>>2] = $18; //@line 614 "../../iup_classattrib.c"
 } else {
  $21 = $6; //@line 616 "../../iup_classattrib.c"
  $22 = $8; //@line 616 "../../iup_classattrib.c"
  $23 = ((($22)) + 8|0); //@line 616 "../../iup_classattrib.c"
  HEAP32[$23>>2] = $21; //@line 616 "../../iup_classattrib.c"
 }
 $24 = $7; //@line 617 "../../iup_classattrib.c"
 $25 = $8; //@line 617 "../../iup_classattrib.c"
 $26 = ((($25)) + 12|0); //@line 617 "../../iup_classattrib.c"
 HEAP32[$26>>2] = $24; //@line 617 "../../iup_classattrib.c"
 $27 = $8; //@line 619 "../../iup_classattrib.c"
 $28 = ((($27)) + 8|0); //@line 619 "../../iup_classattrib.c"
 $29 = HEAP32[$28>>2]|0; //@line 619 "../../iup_classattrib.c"
 $30 = (_iupClassIsGlobalDefault($29,0)|0); //@line 619 "../../iup_classattrib.c"
 $31 = ($30|0)!=(0); //@line 619 "../../iup_classattrib.c"
 $32 = $8; //@line 620 "../../iup_classattrib.c"
 $33 = ((($32)) + 16|0); //@line 620 "../../iup_classattrib.c"
 if ($31) {
  HEAP32[$33>>2] = 1; //@line 620 "../../iup_classattrib.c"
  STACKTOP = sp;return; //@line 624 "../../iup_classattrib.c"
 } else {
  HEAP32[$33>>2] = 0; //@line 622 "../../iup_classattrib.c"
  STACKTOP = sp;return; //@line 624 "../../iup_classattrib.c"
 }
}
function _iupClassRegisterReplaceAttribFlags($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 628 "../../iup_classattrib.c"
 $8 = ((($7)) + 28|0); //@line 628 "../../iup_classattrib.c"
 $9 = HEAP32[$8>>2]|0; //@line 628 "../../iup_classattrib.c"
 $10 = $4; //@line 628 "../../iup_classattrib.c"
 $11 = (_iupTableGet($9,$10)|0); //@line 628 "../../iup_classattrib.c"
 $6 = $11; //@line 628 "../../iup_classattrib.c"
 $12 = $6; //@line 629 "../../iup_classattrib.c"
 $13 = ($12|0)!=(0|0); //@line 629 "../../iup_classattrib.c"
 if (!($13)) {
  STACKTOP = sp;return; //@line 631 "../../iup_classattrib.c"
 }
 $14 = $5; //@line 630 "../../iup_classattrib.c"
 $15 = $6; //@line 630 "../../iup_classattrib.c"
 $16 = ((($15)) + 20|0); //@line 630 "../../iup_classattrib.c"
 HEAP32[$16>>2] = $14; //@line 630 "../../iup_classattrib.c"
 STACKTOP = sp;return; //@line 631 "../../iup_classattrib.c"
}
function _iupClassRegisterCallback($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 637 "../../iup_classattrib.c"
 $7 = $4; //@line 637 "../../iup_classattrib.c"
 $8 = $5; //@line 637 "../../iup_classattrib.c"
 _iupClassRegisterAttribute($6,$7,0,0,$8,0,257); //@line 637 "../../iup_classattrib.c"
 STACKTOP = sp;return; //@line 638 "../../iup_classattrib.c"
}
function _iupClassObjectEnsureDefaultAttributes($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $6 = $1; //@line 978 "../../iup_classattrib.c"
 $7 = ((($6)) + 4|0); //@line 978 "../../iup_classattrib.c"
 $8 = HEAP32[$7>>2]|0; //@line 978 "../../iup_classattrib.c"
 $2 = $8; //@line 978 "../../iup_classattrib.c"
 $9 = $2; //@line 980 "../../iup_classattrib.c"
 $10 = ((($9)) + 28|0); //@line 980 "../../iup_classattrib.c"
 $11 = HEAP32[$10>>2]|0; //@line 980 "../../iup_classattrib.c"
 $12 = (_iupTableFirst($11)|0); //@line 980 "../../iup_classattrib.c"
 $3 = $12; //@line 980 "../../iup_classattrib.c"
 while(1) {
  $13 = $3; //@line 981 "../../iup_classattrib.c"
  $14 = ($13|0)!=(0|0); //@line 981 "../../iup_classattrib.c"
  if (!($14)) {
   break;
  }
  $15 = $2; //@line 983 "../../iup_classattrib.c"
  $16 = ((($15)) + 28|0); //@line 983 "../../iup_classattrib.c"
  $17 = HEAP32[$16>>2]|0; //@line 983 "../../iup_classattrib.c"
  $18 = (_iupTableGetCurr($17)|0); //@line 983 "../../iup_classattrib.c"
  $4 = $18; //@line 983 "../../iup_classattrib.c"
  $19 = $4; //@line 984 "../../iup_classattrib.c"
  $20 = ($19|0)!=(0|0); //@line 984 "../../iup_classattrib.c"
  do {
   if ($20) {
    $21 = $4; //@line 984 "../../iup_classattrib.c"
    $22 = ((($21)) + 4|0); //@line 984 "../../iup_classattrib.c"
    $23 = HEAP32[$22>>2]|0; //@line 984 "../../iup_classattrib.c"
    $24 = ($23|0)!=(0|0); //@line 984 "../../iup_classattrib.c"
    if ($24) {
     $25 = $4; //@line 985 "../../iup_classattrib.c"
     $26 = ((($25)) + 8|0); //@line 985 "../../iup_classattrib.c"
     $27 = HEAP32[$26>>2]|0; //@line 985 "../../iup_classattrib.c"
     $28 = ($27|0)!=(0|0); //@line 985 "../../iup_classattrib.c"
     if (!($28)) {
      $29 = $4; //@line 985 "../../iup_classattrib.c"
      $30 = ((($29)) + 12|0); //@line 985 "../../iup_classattrib.c"
      $31 = HEAP32[$30>>2]|0; //@line 985 "../../iup_classattrib.c"
      $32 = ($31|0)!=(0|0); //@line 985 "../../iup_classattrib.c"
      if (!($32)) {
       break;
      }
     }
     $33 = $4; //@line 986 "../../iup_classattrib.c"
     $34 = ((($33)) + 20|0); //@line 986 "../../iup_classattrib.c"
     $35 = HEAP32[$34>>2]|0; //@line 986 "../../iup_classattrib.c"
     $36 = $35 & 2; //@line 986 "../../iup_classattrib.c"
     $37 = ($36|0)!=(0); //@line 986 "../../iup_classattrib.c"
     if (!($37)) {
      $38 = $4; //@line 987 "../../iup_classattrib.c"
      $39 = ((($38)) + 20|0); //@line 987 "../../iup_classattrib.c"
      $40 = HEAP32[$39>>2]|0; //@line 987 "../../iup_classattrib.c"
      $41 = $40 & 4; //@line 987 "../../iup_classattrib.c"
      $42 = ($41|0)!=(0); //@line 987 "../../iup_classattrib.c"
      if (!($42)) {
       $43 = $4; //@line 988 "../../iup_classattrib.c"
       $44 = ((($43)) + 20|0); //@line 988 "../../iup_classattrib.c"
       $45 = HEAP32[$44>>2]|0; //@line 988 "../../iup_classattrib.c"
       $46 = $45 & 16; //@line 988 "../../iup_classattrib.c"
       $47 = ($46|0)!=(0); //@line 988 "../../iup_classattrib.c"
       if (!($47)) {
        $48 = $4; //@line 990 "../../iup_classattrib.c"
        $49 = ((($48)) + 8|0); //@line 990 "../../iup_classattrib.c"
        $50 = HEAP32[$49>>2]|0; //@line 990 "../../iup_classattrib.c"
        $51 = $4; //@line 990 "../../iup_classattrib.c"
        $52 = ((($51)) + 12|0); //@line 990 "../../iup_classattrib.c"
        $53 = HEAP32[$52>>2]|0; //@line 990 "../../iup_classattrib.c"
        $54 = (_iupStrEqualNoCase($50,$53)|0); //@line 990 "../../iup_classattrib.c"
        $55 = ($54|0)!=(0); //@line 990 "../../iup_classattrib.c"
        if ($55) {
         $56 = $4; //@line 991 "../../iup_classattrib.c"
         $57 = ((($56)) + 16|0); //@line 991 "../../iup_classattrib.c"
         $58 = HEAP32[$57>>2]|0; //@line 991 "../../iup_classattrib.c"
         $59 = ($58|0)!=(0); //@line 991 "../../iup_classattrib.c"
         if (!($59)) {
          break;
         }
         $60 = $4; //@line 991 "../../iup_classattrib.c"
         $61 = ((($60)) + 8|0); //@line 991 "../../iup_classattrib.c"
         $62 = HEAP32[$61>>2]|0; //@line 991 "../../iup_classattrib.c"
         $63 = (_iupGlobalDefaultColorChanged($62)|0); //@line 991 "../../iup_classattrib.c"
         $64 = ($63|0)!=(0); //@line 991 "../../iup_classattrib.c"
         if (!($64)) {
          break;
         }
        }
        $65 = $1; //@line 993 "../../iup_classattrib.c"
        $66 = ((($65)) + 16|0); //@line 993 "../../iup_classattrib.c"
        $67 = HEAP32[$66>>2]|0; //@line 993 "../../iup_classattrib.c"
        $68 = ($67|0)!=(0|0); //@line 993 "../../iup_classattrib.c"
        if ($68) {
         label = 15;
        } else {
         $69 = $4; //@line 993 "../../iup_classattrib.c"
         $70 = ((($69)) + 20|0); //@line 993 "../../iup_classattrib.c"
         $71 = HEAP32[$70>>2]|0; //@line 993 "../../iup_classattrib.c"
         $72 = $71 & 8; //@line 993 "../../iup_classattrib.c"
         $73 = ($72|0)!=(0); //@line 993 "../../iup_classattrib.c"
         if (!($73)) {
          label = 15;
         }
        }
        if ((label|0) == 15) {
         label = 0;
         $74 = $1; //@line 994 "../../iup_classattrib.c"
         $75 = ((($74)) + 16|0); //@line 994 "../../iup_classattrib.c"
         $76 = HEAP32[$75>>2]|0; //@line 994 "../../iup_classattrib.c"
         $77 = ($76|0)!=(0|0); //@line 994 "../../iup_classattrib.c"
         if (!($77)) {
          break;
         }
         $78 = $4; //@line 994 "../../iup_classattrib.c"
         $79 = ((($78)) + 20|0); //@line 994 "../../iup_classattrib.c"
         $80 = HEAP32[$79>>2]|0; //@line 994 "../../iup_classattrib.c"
         $81 = $80 & 8; //@line 994 "../../iup_classattrib.c"
         $82 = ($81|0)!=(0); //@line 994 "../../iup_classattrib.c"
         if ($82) {
          break;
         }
        }
        $83 = $1; //@line 996 "../../iup_classattrib.c"
        $84 = $3; //@line 996 "../../iup_classattrib.c"
        $85 = (_iupAttribGet($83,$84)|0); //@line 996 "../../iup_classattrib.c"
        $5 = $85; //@line 996 "../../iup_classattrib.c"
        $86 = $5; //@line 997 "../../iup_classattrib.c"
        $87 = ($86|0)!=(0|0); //@line 997 "../../iup_classattrib.c"
        if (!($87)) {
         $88 = $4; //@line 998 "../../iup_classattrib.c"
         $89 = ((($88)) + 4|0); //@line 998 "../../iup_classattrib.c"
         $90 = HEAP32[$89>>2]|0; //@line 998 "../../iup_classattrib.c"
         $91 = $1; //@line 998 "../../iup_classattrib.c"
         $92 = $4; //@line 998 "../../iup_classattrib.c"
         $93 = (_iClassGetDefaultValue($92)|0); //@line 998 "../../iup_classattrib.c"
         (FUNCTION_TABLE_iii[$90 & 1023]($91,$93)|0); //@line 998 "../../iup_classattrib.c"
        }
       }
      }
     }
    }
   }
  } while(0);
  $94 = $2; //@line 1003 "../../iup_classattrib.c"
  $95 = ((($94)) + 28|0); //@line 1003 "../../iup_classattrib.c"
  $96 = HEAP32[$95>>2]|0; //@line 1003 "../../iup_classattrib.c"
  $97 = (_iupTableNext($96)|0); //@line 1003 "../../iup_classattrib.c"
  $3 = $97; //@line 1003 "../../iup_classattrib.c"
 }
 STACKTOP = sp;return; //@line 1005 "../../iup_classattrib.c"
}
function _iupBaseCallValueChangedCb($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 27 "../../iup_classbase.c"
 $4 = (_IupGetCallback($3,19918)|0); //@line 27 "../../iup_classbase.c"
 $2 = $4; //@line 27 "../../iup_classbase.c"
 $5 = $2; //@line 28 "../../iup_classbase.c"
 $6 = ($5|0)!=(0|0); //@line 28 "../../iup_classbase.c"
 if (!($6)) {
  STACKTOP = sp;return; //@line 30 "../../iup_classbase.c"
 }
 $7 = $2; //@line 29 "../../iup_classbase.c"
 $8 = $1; //@line 29 "../../iup_classbase.c"
 (FUNCTION_TABLE_ii[$7 & 1023]($8)|0); //@line 29 "../../iup_classbase.c"
 STACKTOP = sp;return; //@line 30 "../../iup_classbase.c"
}
function _iupBaseTypeVoidMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 34 "../../iup_classbase.c"
 $3 = ((($2)) + 16|0); //@line 34 "../../iup_classbase.c"
 HEAP32[$3>>2] = (-1); //@line 34 "../../iup_classbase.c"
 STACKTOP = sp;return 0; //@line 35 "../../iup_classbase.c"
}
function _iupBaseGetWidAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 40 "../../iup_classbase.c"
 $3 = ((($2)) + 16|0); //@line 40 "../../iup_classbase.c"
 $4 = HEAP32[$3>>2]|0; //@line 40 "../../iup_classbase.c"
 STACKTOP = sp;return ($4|0); //@line 40 "../../iup_classbase.c"
}
function _iupBaseSetSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $3; //@line 58 "../../iup_classbase.c"
 $9 = ($8|0)!=(0|0); //@line 58 "../../iup_classbase.c"
 if (!($9)) {
  $10 = $2; //@line 60 "../../iup_classbase.c"
  $11 = ((($10)) + 36|0); //@line 60 "../../iup_classbase.c"
  HEAP32[$11>>2] = 0; //@line 60 "../../iup_classbase.c"
  $12 = $2; //@line 61 "../../iup_classbase.c"
  $13 = ((($12)) + 40|0); //@line 61 "../../iup_classbase.c"
  HEAP32[$13>>2] = 0; //@line 61 "../../iup_classbase.c"
  STACKTOP = sp;return 1; //@line 76 "../../iup_classbase.c"
 }
 HEAP32[$4>>2] = 0; //@line 66 "../../iup_classbase.c"
 HEAP32[$5>>2] = 0; //@line 66 "../../iup_classbase.c"
 $14 = $2; //@line 68 "../../iup_classbase.c"
 _iupdrvFontGetCharSize($14,$6,$7); //@line 68 "../../iup_classbase.c"
 $15 = $3; //@line 69 "../../iup_classbase.c"
 (_iupStrToIntInt($15,$4,$5,120)|0); //@line 69 "../../iup_classbase.c"
 $16 = HEAP32[$4>>2]|0; //@line 70 "../../iup_classbase.c"
 $17 = ($16|0)<(0); //@line 70 "../../iup_classbase.c"
 if ($17) {
  HEAP32[$4>>2] = 0; //@line 70 "../../iup_classbase.c"
 }
 $18 = HEAP32[$5>>2]|0; //@line 71 "../../iup_classbase.c"
 $19 = ($18|0)<(0); //@line 71 "../../iup_classbase.c"
 if ($19) {
  HEAP32[$5>>2] = 0; //@line 71 "../../iup_classbase.c"
 }
 $20 = HEAP32[$4>>2]|0; //@line 73 "../../iup_classbase.c"
 $21 = HEAP32[$6>>2]|0; //@line 73 "../../iup_classbase.c"
 $22 = Math_imul($20, $21)|0; //@line 73 "../../iup_classbase.c"
 $23 = (+($22|0)); //@line 73 "../../iup_classbase.c"
 $24 = $23 / 4.0; //@line 73 "../../iup_classbase.c"
 $25 = $24 + 0.5; //@line 73 "../../iup_classbase.c"
 $26 = (~~(($25))); //@line 73 "../../iup_classbase.c"
 $27 = $2; //@line 73 "../../iup_classbase.c"
 $28 = ((($27)) + 36|0); //@line 73 "../../iup_classbase.c"
 HEAP32[$28>>2] = $26; //@line 73 "../../iup_classbase.c"
 $29 = HEAP32[$5>>2]|0; //@line 74 "../../iup_classbase.c"
 $30 = HEAP32[$7>>2]|0; //@line 74 "../../iup_classbase.c"
 $31 = Math_imul($29, $30)|0; //@line 74 "../../iup_classbase.c"
 $32 = (+($31|0)); //@line 74 "../../iup_classbase.c"
 $33 = $32 / 8.0; //@line 74 "../../iup_classbase.c"
 $34 = $33 + 0.5; //@line 74 "../../iup_classbase.c"
 $35 = (~~(($34))); //@line 74 "../../iup_classbase.c"
 $36 = $2; //@line 74 "../../iup_classbase.c"
 $37 = ((($36)) + 40|0); //@line 74 "../../iup_classbase.c"
 HEAP32[$37>>2] = $35; //@line 74 "../../iup_classbase.c"
 STACKTOP = sp;return 1; //@line 76 "../../iup_classbase.c"
}
function _iupBaseGetSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 12|0;
 $4 = sp + 8|0;
 $2 = $0;
 $7 = $2; //@line 83 "../../iup_classbase.c"
 $8 = ((($7)) + 16|0); //@line 83 "../../iup_classbase.c"
 $9 = HEAP32[$8>>2]|0; //@line 83 "../../iup_classbase.c"
 $10 = ($9|0)!=(0|0); //@line 83 "../../iup_classbase.c"
 $11 = $2; //@line 85 "../../iup_classbase.c"
 if ($10) {
  $12 = ((($11)) + 52|0); //@line 85 "../../iup_classbase.c"
  $13 = HEAP32[$12>>2]|0; //@line 85 "../../iup_classbase.c"
  $5 = $13; //@line 85 "../../iup_classbase.c"
  $14 = $2; //@line 86 "../../iup_classbase.c"
  $15 = ((($14)) + 56|0); //@line 86 "../../iup_classbase.c"
  $16 = HEAP32[$15>>2]|0; //@line 86 "../../iup_classbase.c"
  $6 = $16; //@line 86 "../../iup_classbase.c"
 } else {
  $17 = ((($11)) + 36|0); //@line 90 "../../iup_classbase.c"
  $18 = HEAP32[$17>>2]|0; //@line 90 "../../iup_classbase.c"
  $5 = $18; //@line 90 "../../iup_classbase.c"
  $19 = $2; //@line 91 "../../iup_classbase.c"
  $20 = ((($19)) + 40|0); //@line 91 "../../iup_classbase.c"
  $21 = HEAP32[$20>>2]|0; //@line 91 "../../iup_classbase.c"
  $6 = $21; //@line 91 "../../iup_classbase.c"
 }
 $22 = $2; //@line 94 "../../iup_classbase.c"
 _iupdrvFontGetCharSize($22,$3,$4); //@line 94 "../../iup_classbase.c"
 $23 = HEAP32[$3>>2]|0; //@line 95 "../../iup_classbase.c"
 $24 = ($23|0)==(0); //@line 95 "../../iup_classbase.c"
 $25 = HEAP32[$4>>2]|0; //@line 95 "../../iup_classbase.c"
 $26 = ($25|0)==(0); //@line 95 "../../iup_classbase.c"
 $or$cond = $24 | $26; //@line 95 "../../iup_classbase.c"
 if ($or$cond) {
  $1 = 0; //@line 96 "../../iup_classbase.c"
  $44 = $1; //@line 99 "../../iup_classbase.c"
  STACKTOP = sp;return ($44|0); //@line 99 "../../iup_classbase.c"
 } else {
  $27 = $5; //@line 98 "../../iup_classbase.c"
  $28 = (+($27|0)); //@line 98 "../../iup_classbase.c"
  $29 = $28 * 4.0; //@line 98 "../../iup_classbase.c"
  $30 = HEAP32[$3>>2]|0; //@line 98 "../../iup_classbase.c"
  $31 = (+($30|0)); //@line 98 "../../iup_classbase.c"
  $32 = $29 / $31; //@line 98 "../../iup_classbase.c"
  $33 = $32 + 0.5; //@line 98 "../../iup_classbase.c"
  $34 = (~~(($33))); //@line 98 "../../iup_classbase.c"
  $35 = $6; //@line 98 "../../iup_classbase.c"
  $36 = (+($35|0)); //@line 98 "../../iup_classbase.c"
  $37 = $36 * 8.0; //@line 98 "../../iup_classbase.c"
  $38 = HEAP32[$4>>2]|0; //@line 98 "../../iup_classbase.c"
  $39 = (+($38|0)); //@line 98 "../../iup_classbase.c"
  $40 = $37 / $39; //@line 98 "../../iup_classbase.c"
  $41 = $40 + 0.5; //@line 98 "../../iup_classbase.c"
  $42 = (~~(($41))); //@line 98 "../../iup_classbase.c"
  $43 = (_iupStrReturnIntInt($34,$42,120)|0); //@line 98 "../../iup_classbase.c"
  $1 = $43; //@line 98 "../../iup_classbase.c"
  $44 = $1; //@line 99 "../../iup_classbase.c"
  STACKTOP = sp;return ($44|0); //@line 99 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseSetRasterSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 103 "../../iup_classbase.c"
 $7 = ($6|0)!=(0|0); //@line 103 "../../iup_classbase.c"
 if (!($7)) {
  $8 = $2; //@line 105 "../../iup_classbase.c"
  $9 = ((($8)) + 36|0); //@line 105 "../../iup_classbase.c"
  HEAP32[$9>>2] = 0; //@line 105 "../../iup_classbase.c"
  $10 = $2; //@line 106 "../../iup_classbase.c"
  $11 = ((($10)) + 40|0); //@line 106 "../../iup_classbase.c"
  HEAP32[$11>>2] = 0; //@line 106 "../../iup_classbase.c"
  $23 = $2; //@line 118 "../../iup_classbase.c"
  _iupAttribSet($23,20003,0); //@line 118 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 119 "../../iup_classbase.c"
 }
 HEAP32[$4>>2] = 0; //@line 111 "../../iup_classbase.c"
 HEAP32[$5>>2] = 0; //@line 111 "../../iup_classbase.c"
 $12 = $3; //@line 112 "../../iup_classbase.c"
 (_iupStrToIntInt($12,$4,$5,120)|0); //@line 112 "../../iup_classbase.c"
 $13 = HEAP32[$4>>2]|0; //@line 113 "../../iup_classbase.c"
 $14 = ($13|0)<(0); //@line 113 "../../iup_classbase.c"
 if ($14) {
  HEAP32[$4>>2] = 0; //@line 113 "../../iup_classbase.c"
 }
 $15 = HEAP32[$5>>2]|0; //@line 114 "../../iup_classbase.c"
 $16 = ($15|0)<(0); //@line 114 "../../iup_classbase.c"
 if ($16) {
  HEAP32[$5>>2] = 0; //@line 114 "../../iup_classbase.c"
 }
 $17 = HEAP32[$4>>2]|0; //@line 115 "../../iup_classbase.c"
 $18 = $2; //@line 115 "../../iup_classbase.c"
 $19 = ((($18)) + 36|0); //@line 115 "../../iup_classbase.c"
 HEAP32[$19>>2] = $17; //@line 115 "../../iup_classbase.c"
 $20 = HEAP32[$5>>2]|0; //@line 116 "../../iup_classbase.c"
 $21 = $2; //@line 116 "../../iup_classbase.c"
 $22 = ((($21)) + 40|0); //@line 116 "../../iup_classbase.c"
 HEAP32[$22>>2] = $20; //@line 116 "../../iup_classbase.c"
 $23 = $2; //@line 118 "../../iup_classbase.c"
 _iupAttribSet($23,20003,0); //@line 118 "../../iup_classbase.c"
 STACKTOP = sp;return 0; //@line 119 "../../iup_classbase.c"
}
function _iupBaseGetClientOffsetAttrib($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (15836|0); //@line 125 "../../iup_classbase.c"
}
function _iupBaseGetCurrentSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 130 "../../iup_classbase.c"
 $6 = ((($5)) + 52|0); //@line 130 "../../iup_classbase.c"
 $7 = HEAP32[$6>>2]|0; //@line 130 "../../iup_classbase.c"
 $3 = $7; //@line 130 "../../iup_classbase.c"
 $8 = $2; //@line 131 "../../iup_classbase.c"
 $9 = ((($8)) + 56|0); //@line 131 "../../iup_classbase.c"
 $10 = HEAP32[$9>>2]|0; //@line 131 "../../iup_classbase.c"
 $4 = $10; //@line 131 "../../iup_classbase.c"
 $11 = $3; //@line 132 "../../iup_classbase.c"
 $12 = ($11|0)<(0); //@line 132 "../../iup_classbase.c"
 if ($12) {
  $3 = 0; //@line 132 "../../iup_classbase.c"
 }
 $13 = $4; //@line 133 "../../iup_classbase.c"
 $14 = ($13|0)<(0); //@line 133 "../../iup_classbase.c"
 if ($14) {
  $4 = 0; //@line 133 "../../iup_classbase.c"
 }
 $15 = $3; //@line 134 "../../iup_classbase.c"
 $16 = ($15|0)==(0); //@line 134 "../../iup_classbase.c"
 $17 = $4; //@line 134 "../../iup_classbase.c"
 $18 = ($17|0)==(0); //@line 134 "../../iup_classbase.c"
 $or$cond = $16 & $18; //@line 134 "../../iup_classbase.c"
 if ($or$cond) {
  $1 = 0; //@line 135 "../../iup_classbase.c"
  $22 = $1; //@line 137 "../../iup_classbase.c"
  STACKTOP = sp;return ($22|0); //@line 137 "../../iup_classbase.c"
 } else {
  $19 = $3; //@line 136 "../../iup_classbase.c"
  $20 = $4; //@line 136 "../../iup_classbase.c"
  $21 = (_iupStrReturnIntInt($19,$20,120)|0); //@line 136 "../../iup_classbase.c"
  $1 = $21; //@line 136 "../../iup_classbase.c"
  $22 = $1; //@line 137 "../../iup_classbase.c"
  STACKTOP = sp;return ($22|0); //@line 137 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseGetRasterSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 143 "../../iup_classbase.c"
 $6 = ((($5)) + 16|0); //@line 143 "../../iup_classbase.c"
 $7 = HEAP32[$6>>2]|0; //@line 143 "../../iup_classbase.c"
 $8 = ($7|0)!=(0|0); //@line 143 "../../iup_classbase.c"
 $9 = $2; //@line 145 "../../iup_classbase.c"
 if ($8) {
  $10 = ((($9)) + 52|0); //@line 145 "../../iup_classbase.c"
  $11 = HEAP32[$10>>2]|0; //@line 145 "../../iup_classbase.c"
  $3 = $11; //@line 145 "../../iup_classbase.c"
  $12 = $2; //@line 146 "../../iup_classbase.c"
  $13 = ((($12)) + 56|0); //@line 146 "../../iup_classbase.c"
  $14 = HEAP32[$13>>2]|0; //@line 146 "../../iup_classbase.c"
  $4 = $14; //@line 146 "../../iup_classbase.c"
 } else {
  $15 = ((($9)) + 36|0); //@line 150 "../../iup_classbase.c"
  $16 = HEAP32[$15>>2]|0; //@line 150 "../../iup_classbase.c"
  $3 = $16; //@line 150 "../../iup_classbase.c"
  $17 = $2; //@line 151 "../../iup_classbase.c"
  $18 = ((($17)) + 40|0); //@line 151 "../../iup_classbase.c"
  $19 = HEAP32[$18>>2]|0; //@line 151 "../../iup_classbase.c"
  $4 = $19; //@line 151 "../../iup_classbase.c"
 }
 $20 = $3; //@line 154 "../../iup_classbase.c"
 $21 = ($20|0)<(0); //@line 154 "../../iup_classbase.c"
 if ($21) {
  $3 = 0; //@line 154 "../../iup_classbase.c"
 }
 $22 = $4; //@line 155 "../../iup_classbase.c"
 $23 = ($22|0)<(0); //@line 155 "../../iup_classbase.c"
 if ($23) {
  $4 = 0; //@line 155 "../../iup_classbase.c"
 }
 $24 = $3; //@line 157 "../../iup_classbase.c"
 $25 = ($24|0)==(0); //@line 157 "../../iup_classbase.c"
 $26 = $4; //@line 157 "../../iup_classbase.c"
 $27 = ($26|0)==(0); //@line 157 "../../iup_classbase.c"
 $or$cond = $25 & $27; //@line 157 "../../iup_classbase.c"
 if ($or$cond) {
  $1 = 0; //@line 158 "../../iup_classbase.c"
  $31 = $1; //@line 161 "../../iup_classbase.c"
  STACKTOP = sp;return ($31|0); //@line 161 "../../iup_classbase.c"
 } else {
  $28 = $3; //@line 160 "../../iup_classbase.c"
  $29 = $4; //@line 160 "../../iup_classbase.c"
  $30 = (_iupStrReturnIntInt($28,$29,120)|0); //@line 160 "../../iup_classbase.c"
  $1 = $30; //@line 160 "../../iup_classbase.c"
  $31 = $1; //@line 161 "../../iup_classbase.c"
  STACKTOP = sp;return ($31|0); //@line 161 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseGetCharSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $4 = sp;
 $2 = $0;
 $5 = $2; //@line 167 "../../iup_classbase.c"
 _iupdrvFontGetCharSize($5,$3,$4); //@line 167 "../../iup_classbase.c"
 $6 = HEAP32[$3>>2]|0; //@line 168 "../../iup_classbase.c"
 $7 = ($6|0)==(0); //@line 168 "../../iup_classbase.c"
 $8 = HEAP32[$4>>2]|0; //@line 168 "../../iup_classbase.c"
 $9 = ($8|0)==(0); //@line 168 "../../iup_classbase.c"
 $or$cond = $7 | $9; //@line 168 "../../iup_classbase.c"
 if ($or$cond) {
  $1 = 0; //@line 169 "../../iup_classbase.c"
  $13 = $1; //@line 172 "../../iup_classbase.c"
  STACKTOP = sp;return ($13|0); //@line 172 "../../iup_classbase.c"
 } else {
  $10 = HEAP32[$3>>2]|0; //@line 171 "../../iup_classbase.c"
  $11 = HEAP32[$4>>2]|0; //@line 171 "../../iup_classbase.c"
  $12 = (_iupStrReturnIntInt($10,$11,120)|0); //@line 171 "../../iup_classbase.c"
  $1 = $12; //@line 171 "../../iup_classbase.c"
  $13 = $1; //@line 172 "../../iup_classbase.c"
  STACKTOP = sp;return ($13|0); //@line 172 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseGetActiveAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 221 "../../iup_classbase.c"
 $3 = (_iupdrvIsActive($2)|0); //@line 221 "../../iup_classbase.c"
 $4 = (_iupStrReturnBoolean($3)|0); //@line 221 "../../iup_classbase.c"
 STACKTOP = sp;return ($4|0); //@line 221 "../../iup_classbase.c"
}
function _iupBaseSetActiveAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 237 "../../iup_classbase.c"
 $5 = (_iupStrBoolean($4)|0); //@line 237 "../../iup_classbase.c"
 $6 = ($5|0)!=(0); //@line 237 "../../iup_classbase.c"
 $7 = $2; //@line 239 "../../iup_classbase.c"
 if ($6) {
  $8 = (_iBaseNativeParentIsActive($7)|0); //@line 239 "../../iup_classbase.c"
  $9 = ($8|0)!=(0); //@line 239 "../../iup_classbase.c"
  if ($9) {
   $10 = $2; //@line 240 "../../iup_classbase.c"
   _iupdrvSetActive($10,1); //@line 240 "../../iup_classbase.c"
  }
 } else {
  _iupdrvSetActive($7,0); //@line 243 "../../iup_classbase.c"
 }
 STACKTOP = sp;return 0; //@line 244 "../../iup_classbase.c"
}
function _iBaseNativeParentIsActive($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 226 "../../iup_classbase.c"
 $4 = ((($3)) + 60|0); //@line 226 "../../iup_classbase.c"
 $5 = HEAP32[$4>>2]|0; //@line 226 "../../iup_classbase.c"
 $6 = ($5|0)!=(0|0); //@line 226 "../../iup_classbase.c"
 if (!($6)) {
  $1 = 1; //@line 227 "../../iup_classbase.c"
  $20 = $1; //@line 233 "../../iup_classbase.c"
  STACKTOP = sp;return ($20|0); //@line 233 "../../iup_classbase.c"
 }
 $7 = $2; //@line 229 "../../iup_classbase.c"
 $8 = ((($7)) + 60|0); //@line 229 "../../iup_classbase.c"
 $9 = HEAP32[$8>>2]|0; //@line 229 "../../iup_classbase.c"
 $10 = ((($9)) + 4|0); //@line 229 "../../iup_classbase.c"
 $11 = HEAP32[$10>>2]|0; //@line 229 "../../iup_classbase.c"
 $12 = ((($11)) + 8|0); //@line 229 "../../iup_classbase.c"
 $13 = HEAP32[$12>>2]|0; //@line 229 "../../iup_classbase.c"
 $14 = ($13|0)==(0); //@line 229 "../../iup_classbase.c"
 $15 = $2; //@line 230 "../../iup_classbase.c"
 $16 = ((($15)) + 60|0); //@line 230 "../../iup_classbase.c"
 $17 = HEAP32[$16>>2]|0; //@line 230 "../../iup_classbase.c"
 if ($14) {
  $18 = (_iBaseNativeParentIsActive($17)|0); //@line 230 "../../iup_classbase.c"
  $1 = $18; //@line 230 "../../iup_classbase.c"
  $20 = $1; //@line 233 "../../iup_classbase.c"
  STACKTOP = sp;return ($20|0); //@line 233 "../../iup_classbase.c"
 } else {
  $19 = (_iupdrvIsActive($17)|0); //@line 232 "../../iup_classbase.c"
  $1 = $19; //@line 232 "../../iup_classbase.c"
  $20 = $1; //@line 233 "../../iup_classbase.c"
  STACKTOP = sp;return ($20|0); //@line 233 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseGetVisibleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 249 "../../iup_classbase.c"
 $3 = (_iupdrvIsVisible($2)|0); //@line 249 "../../iup_classbase.c"
 $4 = (_iupStrReturnBoolean($3)|0); //@line 249 "../../iup_classbase.c"
 STACKTOP = sp;return ($4|0); //@line 249 "../../iup_classbase.c"
}
function _iupBaseSetVisibleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 254 "../../iup_classbase.c"
 $5 = $3; //@line 254 "../../iup_classbase.c"
 $6 = (_iupStrBoolean($5)|0); //@line 254 "../../iup_classbase.c"
 _iupdrvSetVisible($4,$6); //@line 254 "../../iup_classbase.c"
 STACKTOP = sp;return 1; //@line 255 "../../iup_classbase.c"
}
function _iupBaseNativeParentGetBgColorAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 261 "../../iup_classbase.c"
 $4 = (_iupAttribGetInheritNativeParent($3,20290)|0); //@line 261 "../../iup_classbase.c"
 $2 = $4; //@line 261 "../../iup_classbase.c"
 $5 = $2; //@line 262 "../../iup_classbase.c"
 $6 = ($5|0)!=(0|0); //@line 262 "../../iup_classbase.c"
 if (!($6)) {
  $7 = $1; //@line 262 "../../iup_classbase.c"
  $8 = (_iupAttribGetInheritNativeParent($7,1947)|0); //@line 262 "../../iup_classbase.c"
  $2 = $8; //@line 262 "../../iup_classbase.c"
 }
 $9 = $2; //@line 263 "../../iup_classbase.c"
 $10 = ($9|0)!=(0|0); //@line 263 "../../iup_classbase.c"
 if ($10) {
  $12 = $2; //@line 264 "../../iup_classbase.c"
  STACKTOP = sp;return ($12|0); //@line 264 "../../iup_classbase.c"
 }
 $11 = (_IupGetGlobal(20331)|0); //@line 263 "../../iup_classbase.c"
 $2 = $11; //@line 263 "../../iup_classbase.c"
 $12 = $2; //@line 264 "../../iup_classbase.c"
 STACKTOP = sp;return ($12|0); //@line 264 "../../iup_classbase.c"
}
function _iupRound($0) {
 $0 = +$0;
 var $1 = 0.0, $2 = 0.0, $3 = 0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 277 "../../iup_classbase.c"
 $3 = $2 > 0.0; //@line 277 "../../iup_classbase.c"
 $4 = $1; //@line 277 "../../iup_classbase.c"
 $5 = $4 + 0.5; //@line 277 "../../iup_classbase.c"
 $6 = $4 - 0.5; //@line 277 "../../iup_classbase.c"
 $7 = $3 ? $5 : $6; //@line 277 "../../iup_classbase.c"
 $8 = (~~(($7))); //@line 277 "../../iup_classbase.c"
 STACKTOP = sp;return ($8|0); //@line 277 "../../iup_classbase.c"
}
function _iupBaseSetNameAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2064|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(2064|0);
 $5 = sp + 1040|0;
 $7 = sp + 16|0;
 $2 = $0;
 $3 = $1;
 $8 = $3; //@line 365 "../../iup_classbase.c"
 $9 = ($8|0)!=(0|0); //@line 365 "../../iup_classbase.c"
 $10 = $2; //@line 381 "../../iup_classbase.c"
 if ($9) {
  $20 = (_IupGetDialog($10)|0); //@line 381 "../../iup_classbase.c"
  $6 = $20; //@line 381 "../../iup_classbase.c"
  $21 = $6; //@line 382 "../../iup_classbase.c"
  $22 = ($21|0)!=(0|0); //@line 382 "../../iup_classbase.c"
  if (!($22)) {
   STACKTOP = sp;return 1; //@line 390 "../../iup_classbase.c"
  }
  _memcpy(($7|0),(1958|0),1024)|0; //@line 384 "../../iup_classbase.c"
  $23 = $3; //@line 385 "../../iup_classbase.c"
  (_strcat($7,$23)|0); //@line 385 "../../iup_classbase.c"
  $24 = $6; //@line 386 "../../iup_classbase.c"
  $25 = $2; //@line 386 "../../iup_classbase.c"
  _iupAttribSet($24,$7,$25); //@line 386 "../../iup_classbase.c"
  $26 = $2; //@line 387 "../../iup_classbase.c"
  $27 = $6; //@line 387 "../../iup_classbase.c"
  _iupAttribSet($26,$7,$27); //@line 387 "../../iup_classbase.c"
  STACKTOP = sp;return 1; //@line 390 "../../iup_classbase.c"
 }
 $11 = (_iupAttribGet($10,14675)|0); //@line 368 "../../iup_classbase.c"
 $3 = $11; //@line 368 "../../iup_classbase.c"
 $12 = $3; //@line 369 "../../iup_classbase.c"
 $13 = ($12|0)!=(0|0); //@line 369 "../../iup_classbase.c"
 if (!($13)) {
  STACKTOP = sp;return 1; //@line 390 "../../iup_classbase.c"
 }
 _memcpy(($5|0),(1958|0),1024)|0; //@line 372 "../../iup_classbase.c"
 $14 = $3; //@line 373 "../../iup_classbase.c"
 (_strcat($5,$14)|0); //@line 373 "../../iup_classbase.c"
 $15 = $2; //@line 374 "../../iup_classbase.c"
 $16 = (_iupAttribGet($15,$5)|0); //@line 374 "../../iup_classbase.c"
 $4 = $16; //@line 374 "../../iup_classbase.c"
 $17 = $4; //@line 375 "../../iup_classbase.c"
 $18 = ($17|0)!=(0|0); //@line 375 "../../iup_classbase.c"
 if (!($18)) {
  STACKTOP = sp;return 1; //@line 390 "../../iup_classbase.c"
 }
 $19 = $4; //@line 376 "../../iup_classbase.c"
 _iupAttribSet($19,$5,0); //@line 376 "../../iup_classbase.c"
 STACKTOP = sp;return 1; //@line 390 "../../iup_classbase.c"
}
function _iupBaseSetMaxSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 414 "../../iup_classbase.c"
 $5 = ($4|0)!=(0|0); //@line 414 "../../iup_classbase.c"
 $6 = $2; //@line 415 "../../iup_classbase.c"
 $7 = ((($6)) + 24|0); //@line 415 "../../iup_classbase.c"
 $8 = HEAP32[$7>>2]|0; //@line 415 "../../iup_classbase.c"
 if ($5) {
  $9 = $8 | 4; //@line 415 "../../iup_classbase.c"
  HEAP32[$7>>2] = $9; //@line 415 "../../iup_classbase.c"
  STACKTOP = sp;return 1; //@line 418 "../../iup_classbase.c"
 } else {
  $10 = $8 & -5; //@line 417 "../../iup_classbase.c"
  HEAP32[$7>>2] = $10; //@line 417 "../../iup_classbase.c"
  STACKTOP = sp;return 1; //@line 418 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseSetMinSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 423 "../../iup_classbase.c"
 $5 = ($4|0)!=(0|0); //@line 423 "../../iup_classbase.c"
 $6 = $2; //@line 424 "../../iup_classbase.c"
 $7 = ((($6)) + 24|0); //@line 424 "../../iup_classbase.c"
 $8 = HEAP32[$7>>2]|0; //@line 424 "../../iup_classbase.c"
 if ($5) {
  $9 = $8 | 8; //@line 424 "../../iup_classbase.c"
  HEAP32[$7>>2] = $9; //@line 424 "../../iup_classbase.c"
  STACKTOP = sp;return 1; //@line 427 "../../iup_classbase.c"
 } else {
  $10 = $8 & -9; //@line 426 "../../iup_classbase.c"
  HEAP32[$7>>2] = $10; //@line 426 "../../iup_classbase.c"
  STACKTOP = sp;return 1; //@line 427 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iupBaseContainerUpdateExpand($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 465 "../../iup_classbase.c"
 $4 = (_iupAttribGetInherit($3,20073)|0); //@line 465 "../../iup_classbase.c"
 $2 = $4; //@line 465 "../../iup_classbase.c"
 $5 = $2; //@line 466 "../../iup_classbase.c"
 $6 = ($5|0)!=(0|0); //@line 466 "../../iup_classbase.c"
 if (!($6)) {
  $7 = $1; //@line 467 "../../iup_classbase.c"
  $8 = ((($7)) + 20|0); //@line 467 "../../iup_classbase.c"
  HEAP32[$8>>2] = 15; //@line 467 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 }
 $9 = $2; //@line 470 "../../iup_classbase.c"
 $10 = (_iupStrEqualNoCase($9,20140)|0); //@line 470 "../../iup_classbase.c"
 $11 = ($10|0)!=(0); //@line 470 "../../iup_classbase.c"
 if ($11) {
  $12 = $1; //@line 471 "../../iup_classbase.c"
  $13 = ((($12)) + 20|0); //@line 471 "../../iup_classbase.c"
  HEAP32[$13>>2] = 0; //@line 471 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 }
 $14 = $2; //@line 472 "../../iup_classbase.c"
 $15 = (_iupStrEqualNoCase($14,19951)|0); //@line 472 "../../iup_classbase.c"
 $16 = ($15|0)!=(0); //@line 472 "../../iup_classbase.c"
 if ($16) {
  $17 = $1; //@line 473 "../../iup_classbase.c"
  $18 = ((($17)) + 20|0); //@line 473 "../../iup_classbase.c"
  HEAP32[$18>>2] = 12; //@line 473 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 }
 $19 = $2; //@line 474 "../../iup_classbase.c"
 $20 = (_iupStrEqualNoCase($19,19983)|0); //@line 474 "../../iup_classbase.c"
 $21 = ($20|0)!=(0); //@line 474 "../../iup_classbase.c"
 if ($21) {
  $22 = $1; //@line 475 "../../iup_classbase.c"
  $23 = ((($22)) + 20|0); //@line 475 "../../iup_classbase.c"
  HEAP32[$23>>2] = 3; //@line 475 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 }
 $24 = $2; //@line 476 "../../iup_classbase.c"
 $25 = (_iupStrEqualNoCase($24,2982)|0); //@line 476 "../../iup_classbase.c"
 $26 = ($25|0)!=(0); //@line 476 "../../iup_classbase.c"
 if ($26) {
  $27 = $1; //@line 477 "../../iup_classbase.c"
  $28 = ((($27)) + 20|0); //@line 477 "../../iup_classbase.c"
  HEAP32[$28>>2] = 32; //@line 477 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 }
 $29 = $2; //@line 478 "../../iup_classbase.c"
 $30 = (_iupStrEqualNoCase($29,2997)|0); //@line 478 "../../iup_classbase.c"
 $31 = ($30|0)!=(0); //@line 478 "../../iup_classbase.c"
 $32 = $1; //@line 479 "../../iup_classbase.c"
 $33 = ((($32)) + 20|0); //@line 479 "../../iup_classbase.c"
 if ($31) {
  HEAP32[$33>>2] = 16; //@line 479 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 } else {
  HEAP32[$33>>2] = 15; //@line 481 "../../iup_classbase.c"
  STACKTOP = sp;return; //@line 483 "../../iup_classbase.c"
 }
}
function _iupBaseContainerGetExpandAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 491 "../../iup_classbase.c"
 $3 = (_iupAttribGetInherit($2,20073)|0); //@line 491 "../../iup_classbase.c"
 STACKTOP = sp;return ($3|0); //@line 491 "../../iup_classbase.c"
}
function _iupBaseRegisterCommonAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 496 "../../iup_classbase.c"
 _iupClassRegisterAttribute($2,17776,64,0,0,0,37); //@line 496 "../../iup_classbase.c"
 $3 = $1; //@line 497 "../../iup_classbase.c"
 _iupClassRegisterAttribute($3,14675,0,65,0,0,11); //@line 497 "../../iup_classbase.c"
 $4 = $1; //@line 498 "../../iup_classbase.c"
 _iupClassRegisterAttribute($4,15937,66,67,0,0,9); //@line 498 "../../iup_classbase.c"
 $5 = $1; //@line 499 "../../iup_classbase.c"
 _iupClassRegisterAttribute($5,20073,68,69,0,0,9); //@line 499 "../../iup_classbase.c"
 $6 = $1; //@line 500 "../../iup_classbase.c"
 _iupClassRegisterAttribute($6,3010,0,70,0,0,2057); //@line 500 "../../iup_classbase.c"
 $7 = $1; //@line 501 "../../iup_classbase.c"
 _iupClassRegisterAttribute($7,20019,0,0,0,0,9); //@line 501 "../../iup_classbase.c"
 $8 = $1; //@line 504 "../../iup_classbase.c"
 _iupClassRegisterAttribute($8,12566,0,0,(-1),20441,0); //@line 504 "../../iup_classbase.c"
 $9 = $1; //@line 505 "../../iup_classbase.c"
 $10 = ((($9)) + 16|0); //@line 505 "../../iup_classbase.c"
 $11 = HEAP32[$10>>2]|0; //@line 505 "../../iup_classbase.c"
 $12 = ($11|0)!=(0); //@line 505 "../../iup_classbase.c"
 $13 = $1; //@line 506 "../../iup_classbase.c"
 if ($12) {
  _iupClassRegisterAttribute($13,15995,0,0,(-1),20441,1); //@line 506 "../../iup_classbase.c"
 } else {
  _iupClassRegisterAttribute($13,15995,0,0,(-1),20140,1); //@line 508 "../../iup_classbase.c"
 }
 $14 = $1; //@line 512 "../../iup_classbase.c"
 _iupClassRegisterAttribute($14,20132,0,0,(-1),20441,512); //@line 512 "../../iup_classbase.c"
 $15 = $1; //@line 514 "../../iup_classbase.c"
 _iupClassRegisterAttribute($15,20003,71,72,0,0,523); //@line 514 "../../iup_classbase.c"
 $16 = $1; //@line 515 "../../iup_classbase.c"
 _iupClassRegisterAttribute($16,20008,73,74,0,0,523); //@line 515 "../../iup_classbase.c"
 $17 = $1; //@line 516 "../../iup_classbase.c"
 _iupClassRegisterAttribute($17,3026,75,0,0,0,43); //@line 516 "../../iup_classbase.c"
 $18 = $1; //@line 517 "../../iup_classbase.c"
 _iupClassRegisterAttribute($18,3035,76,0,0,0,43); //@line 517 "../../iup_classbase.c"
 $19 = $1; //@line 518 "../../iup_classbase.c"
 _iupClassRegisterAttribute($19,3047,77,74,0,0,11); //@line 518 "../../iup_classbase.c"
 $20 = $1; //@line 520 "../../iup_classbase.c"
 _iupClassRegisterAttribute($20,3806,78,79,0,0,523); //@line 520 "../../iup_classbase.c"
 $21 = $1; //@line 521 "../../iup_classbase.c"
 _iupClassRegisterAttribute($21,14231,0,80,(-1),15836,9); //@line 521 "../../iup_classbase.c"
 $22 = $1; //@line 522 "../../iup_classbase.c"
 _iupClassRegisterAttribute($22,14239,0,81,(-1),3056,9); //@line 522 "../../iup_classbase.c"
 $23 = $1; //@line 524 "../../iup_classbase.c"
 _iupClassRegisterAttribute($23,12866,0,82,(-1),14998,520); //@line 524 "../../iup_classbase.c"
 $24 = $1; //@line 525 "../../iup_classbase.c"
 _iupClassRegisterAttribute($24,12099,83,84,(-1),14998,9); //@line 525 "../../iup_classbase.c"
 $25 = $1; //@line 527 "../../iup_classbase.c"
 _iupClassRegisterAttribute($25,14283,85,86,0,0,521); //@line 527 "../../iup_classbase.c"
 $26 = $1; //@line 528 "../../iup_classbase.c"
 _iupClassRegisterAttribute($26,3068,87,88,0,0,521); //@line 528 "../../iup_classbase.c"
 $27 = $1; //@line 529 "../../iup_classbase.c"
 _iupClassRegisterAttribute($27,3077,89,90,0,0,521); //@line 529 "../../iup_classbase.c"
 $28 = $1; //@line 531 "../../iup_classbase.c"
 _iupdrvBaseRegisterCommonAttrib($28); //@line 531 "../../iup_classbase.c"
 STACKTOP = sp;return; //@line 532 "../../iup_classbase.c"
}
function _iBaseGetFloatingAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 406 "../../iup_classbase.c"
 $4 = ((($3)) + 24|0); //@line 406 "../../iup_classbase.c"
 $5 = HEAP32[$4>>2]|0; //@line 406 "../../iup_classbase.c"
 $6 = $5 & 2; //@line 406 "../../iup_classbase.c"
 $7 = ($6|0)!=(0); //@line 406 "../../iup_classbase.c"
 if ($7) {
  $1 = 15946; //@line 407 "../../iup_classbase.c"
  $13 = $1; //@line 410 "../../iup_classbase.c"
  STACKTOP = sp;return ($13|0); //@line 410 "../../iup_classbase.c"
 } else {
  $8 = $2; //@line 409 "../../iup_classbase.c"
  $9 = ((($8)) + 24|0); //@line 409 "../../iup_classbase.c"
  $10 = HEAP32[$9>>2]|0; //@line 409 "../../iup_classbase.c"
  $11 = $10 & 1; //@line 409 "../../iup_classbase.c"
  $12 = (_iupStrReturnBoolean($11)|0); //@line 409 "../../iup_classbase.c"
  $1 = $12; //@line 409 "../../iup_classbase.c"
  $13 = $1; //@line 410 "../../iup_classbase.c"
  STACKTOP = sp;return ($13|0); //@line 410 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iBaseSetFloatingAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 395 "../../iup_classbase.c"
 $5 = (_iupStrEqualNoCase($4,15946)|0); //@line 395 "../../iup_classbase.c"
 $6 = ($5|0)!=(0); //@line 395 "../../iup_classbase.c"
 if ($6) {
  $7 = $2; //@line 396 "../../iup_classbase.c"
  $8 = ((($7)) + 24|0); //@line 396 "../../iup_classbase.c"
  $9 = HEAP32[$8>>2]|0; //@line 396 "../../iup_classbase.c"
  $10 = $9 | 3; //@line 396 "../../iup_classbase.c"
  HEAP32[$8>>2] = $10; //@line 396 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 401 "../../iup_classbase.c"
 }
 $11 = $3; //@line 397 "../../iup_classbase.c"
 $12 = (_iupStrBoolean($11)|0); //@line 397 "../../iup_classbase.c"
 $13 = ($12|0)!=(0); //@line 397 "../../iup_classbase.c"
 $14 = $2; //@line 398 "../../iup_classbase.c"
 $15 = ((($14)) + 24|0); //@line 398 "../../iup_classbase.c"
 $16 = HEAP32[$15>>2]|0; //@line 398 "../../iup_classbase.c"
 if ($13) {
  $17 = $16 | 1; //@line 398 "../../iup_classbase.c"
  HEAP32[$15>>2] = $17; //@line 398 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 401 "../../iup_classbase.c"
 } else {
  $18 = $16 & -4; //@line 400 "../../iup_classbase.c"
  HEAP32[$15>>2] = $18; //@line 400 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 401 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iBaseGetExpandAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 449 "../../iup_classbase.c"
 $4 = ((($3)) + 20|0); //@line 449 "../../iup_classbase.c"
 $5 = HEAP32[$4>>2]|0; //@line 449 "../../iup_classbase.c"
 $6 = $5 & 12; //@line 449 "../../iup_classbase.c"
 $7 = ($6|0)!=(0); //@line 449 "../../iup_classbase.c"
 if ($7) {
  $8 = $2; //@line 449 "../../iup_classbase.c"
  $9 = ((($8)) + 20|0); //@line 449 "../../iup_classbase.c"
  $10 = HEAP32[$9>>2]|0; //@line 449 "../../iup_classbase.c"
  $11 = $10 & 3; //@line 449 "../../iup_classbase.c"
  $12 = ($11|0)!=(0); //@line 449 "../../iup_classbase.c"
  if ($12) {
   $1 = 20441; //@line 450 "../../iup_classbase.c"
  } else {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $13 = $2; //@line 451 "../../iup_classbase.c"
   $14 = ((($13)) + 20|0); //@line 451 "../../iup_classbase.c"
   $15 = HEAP32[$14>>2]|0; //@line 451 "../../iup_classbase.c"
   $16 = $15 & 12; //@line 451 "../../iup_classbase.c"
   $17 = ($16|0)!=(0); //@line 451 "../../iup_classbase.c"
   if ($17) {
    $1 = 19951; //@line 452 "../../iup_classbase.c"
    break;
   }
   $18 = $2; //@line 453 "../../iup_classbase.c"
   $19 = ((($18)) + 20|0); //@line 453 "../../iup_classbase.c"
   $20 = HEAP32[$19>>2]|0; //@line 453 "../../iup_classbase.c"
   $21 = $20 & 3; //@line 453 "../../iup_classbase.c"
   $22 = ($21|0)!=(0); //@line 453 "../../iup_classbase.c"
   if ($22) {
    $1 = 19983; //@line 454 "../../iup_classbase.c"
    break;
   }
   $23 = $2; //@line 455 "../../iup_classbase.c"
   $24 = ((($23)) + 20|0); //@line 455 "../../iup_classbase.c"
   $25 = HEAP32[$24>>2]|0; //@line 455 "../../iup_classbase.c"
   $26 = $25 & 32; //@line 455 "../../iup_classbase.c"
   $27 = ($26|0)!=(0); //@line 455 "../../iup_classbase.c"
   if ($27) {
    $1 = 2982; //@line 456 "../../iup_classbase.c"
    break;
   }
   $28 = $2; //@line 457 "../../iup_classbase.c"
   $29 = ((($28)) + 20|0); //@line 457 "../../iup_classbase.c"
   $30 = HEAP32[$29>>2]|0; //@line 457 "../../iup_classbase.c"
   $31 = $30 & 16; //@line 457 "../../iup_classbase.c"
   $32 = ($31|0)!=(0); //@line 457 "../../iup_classbase.c"
   if ($32) {
    $1 = 2997; //@line 458 "../../iup_classbase.c"
    break;
   } else {
    $1 = 20140; //@line 460 "../../iup_classbase.c"
    break;
   }
  }
 } while(0);
 $33 = $1; //@line 461 "../../iup_classbase.c"
 STACKTOP = sp;return ($33|0); //@line 461 "../../iup_classbase.c"
}
function _iBaseSetExpandAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 432 "../../iup_classbase.c"
 $5 = (_iupStrEqualNoCase($4,20441)|0); //@line 432 "../../iup_classbase.c"
 $6 = ($5|0)!=(0); //@line 432 "../../iup_classbase.c"
 if ($6) {
  $7 = $2; //@line 433 "../../iup_classbase.c"
  $8 = ((($7)) + 20|0); //@line 433 "../../iup_classbase.c"
  HEAP32[$8>>2] = 15; //@line 433 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 444 "../../iup_classbase.c"
 }
 $9 = $3; //@line 434 "../../iup_classbase.c"
 $10 = (_iupStrEqualNoCase($9,19951)|0); //@line 434 "../../iup_classbase.c"
 $11 = ($10|0)!=(0); //@line 434 "../../iup_classbase.c"
 if ($11) {
  $12 = $2; //@line 435 "../../iup_classbase.c"
  $13 = ((($12)) + 20|0); //@line 435 "../../iup_classbase.c"
  HEAP32[$13>>2] = 12; //@line 435 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 444 "../../iup_classbase.c"
 }
 $14 = $3; //@line 436 "../../iup_classbase.c"
 $15 = (_iupStrEqualNoCase($14,19983)|0); //@line 436 "../../iup_classbase.c"
 $16 = ($15|0)!=(0); //@line 436 "../../iup_classbase.c"
 if ($16) {
  $17 = $2; //@line 437 "../../iup_classbase.c"
  $18 = ((($17)) + 20|0); //@line 437 "../../iup_classbase.c"
  HEAP32[$18>>2] = 3; //@line 437 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 444 "../../iup_classbase.c"
 }
 $19 = $3; //@line 438 "../../iup_classbase.c"
 $20 = (_iupStrEqualNoCase($19,2982)|0); //@line 438 "../../iup_classbase.c"
 $21 = ($20|0)!=(0); //@line 438 "../../iup_classbase.c"
 if ($21) {
  $22 = $2; //@line 439 "../../iup_classbase.c"
  $23 = ((($22)) + 20|0); //@line 439 "../../iup_classbase.c"
  HEAP32[$23>>2] = 32; //@line 439 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 444 "../../iup_classbase.c"
 }
 $24 = $3; //@line 440 "../../iup_classbase.c"
 $25 = (_iupStrEqualNoCase($24,2997)|0); //@line 440 "../../iup_classbase.c"
 $26 = ($25|0)!=(0); //@line 440 "../../iup_classbase.c"
 $27 = $2; //@line 441 "../../iup_classbase.c"
 $28 = ((($27)) + 20|0); //@line 441 "../../iup_classbase.c"
 if ($26) {
  HEAP32[$28>>2] = 16; //@line 441 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 444 "../../iup_classbase.c"
 } else {
  HEAP32[$28>>2] = 0; //@line 443 "../../iup_classbase.c"
  STACKTOP = sp;return 0; //@line 444 "../../iup_classbase.c"
 }
 return (0)|0;
}
function _iBaseSetNormalizerGroupAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 298 "../../iup_classbase.c"
 $6 = (_IupGetHandle($5)|0); //@line 298 "../../iup_classbase.c"
 $4 = $6; //@line 298 "../../iup_classbase.c"
 $7 = $4; //@line 299 "../../iup_classbase.c"
 $8 = ($7|0)!=(0|0); //@line 299 "../../iup_classbase.c"
 if (!($8)) {
  $9 = (_IupNormalizer(0,$vararg_buffer)|0); //@line 301 "../../iup_classbase.c"
  $4 = $9; //@line 301 "../../iup_classbase.c"
  $10 = $3; //@line 302 "../../iup_classbase.c"
  $11 = $4; //@line 302 "../../iup_classbase.c"
  (_IupSetHandle($10,$11)|0); //@line 302 "../../iup_classbase.c"
 }
 $12 = $4; //@line 305 "../../iup_classbase.c"
 $13 = $2; //@line 305 "../../iup_classbase.c"
 _IupSetAttribute($12,14877,$13); //@line 305 "../../iup_classbase.c"
 STACKTOP = sp;return 1; //@line 306 "../../iup_classbase.c"
}
function _iBaseGetNaturalSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 176 "../../iup_classbase.c"
 $3 = ((($2)) + 44|0); //@line 176 "../../iup_classbase.c"
 $4 = HEAP32[$3>>2]|0; //@line 176 "../../iup_classbase.c"
 $5 = $1; //@line 176 "../../iup_classbase.c"
 $6 = ((($5)) + 48|0); //@line 176 "../../iup_classbase.c"
 $7 = HEAP32[$6>>2]|0; //@line 176 "../../iup_classbase.c"
 $8 = (_iupStrReturnIntInt($4,$7,120)|0); //@line 176 "../../iup_classbase.c"
 STACKTOP = sp;return ($8|0); //@line 176 "../../iup_classbase.c"
}
function _iBaseGetUserSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 181 "../../iup_classbase.c"
 $3 = ((($2)) + 36|0); //@line 181 "../../iup_classbase.c"
 $4 = HEAP32[$3>>2]|0; //@line 181 "../../iup_classbase.c"
 $5 = $1; //@line 181 "../../iup_classbase.c"
 $6 = ((($5)) + 40|0); //@line 181 "../../iup_classbase.c"
 $7 = HEAP32[$6>>2]|0; //@line 181 "../../iup_classbase.c"
 $8 = (_iupStrReturnIntInt($4,$7,120)|0); //@line 181 "../../iup_classbase.c"
 STACKTOP = sp;return ($8|0); //@line 181 "../../iup_classbase.c"
}
function _iBaseGetPositionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 186 "../../iup_classbase.c"
 $3 = ((($2)) + 28|0); //@line 186 "../../iup_classbase.c"
 $4 = HEAP32[$3>>2]|0; //@line 186 "../../iup_classbase.c"
 $5 = $1; //@line 186 "../../iup_classbase.c"
 $6 = ((($5)) + 32|0); //@line 186 "../../iup_classbase.c"
 $7 = HEAP32[$6>>2]|0; //@line 186 "../../iup_classbase.c"
 $8 = (_iupStrReturnIntInt($4,$7,44)|0); //@line 186 "../../iup_classbase.c"
 STACKTOP = sp;return ($8|0); //@line 186 "../../iup_classbase.c"
}
function _iBaseSetPositionAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 191 "../../iup_classbase.c"
 $5 = $2; //@line 191 "../../iup_classbase.c"
 $6 = ((($5)) + 28|0); //@line 191 "../../iup_classbase.c"
 $7 = $2; //@line 191 "../../iup_classbase.c"
 $8 = ((($7)) + 32|0); //@line 191 "../../iup_classbase.c"
 (_iupStrToIntInt($4,$6,$8,44)|0); //@line 191 "../../iup_classbase.c"
 STACKTOP = sp;return 0; //@line 192 "../../iup_classbase.c"
}
function _iupBaseRegisterVisualAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 536 "../../iup_classbase.c"
 _iupClassRegisterAttribute($2,20132,91,92,20441,20140,512); //@line 536 "../../iup_classbase.c"
 $3 = $1; //@line 537 "../../iup_classbase.c"
 _iupClassRegisterAttribute($3,12566,93,94,(-1),20441,0); //@line 537 "../../iup_classbase.c"
 $4 = $1; //@line 539 "../../iup_classbase.c"
 _iupClassRegisterAttribute($4,16013,0,95,0,0,65); //@line 539 "../../iup_classbase.c"
 $5 = $1; //@line 540 "../../iup_classbase.c"
 _iupClassRegisterAttribute($5,3823,96,0,0,0,33); //@line 540 "../../iup_classbase.c"
 $6 = $1; //@line 541 "../../iup_classbase.c"
 _iupClassRegisterAttribute($6,3825,97,0,0,0,33); //@line 541 "../../iup_classbase.c"
 $7 = $1; //@line 542 "../../iup_classbase.c"
 _iupClassRegisterAttribute($7,3827,98,0,0,0,33); //@line 542 "../../iup_classbase.c"
 $8 = $1; //@line 544 "../../iup_classbase.c"
 _iupClassRegisterAttribute($8,3086,0,99,0,0,3); //@line 544 "../../iup_classbase.c"
 $9 = $1; //@line 545 "../../iup_classbase.c"
 _iupClassRegisterAttribute($9,3090,100,101,0,0,1); //@line 545 "../../iup_classbase.c"
 $10 = $1; //@line 546 "../../iup_classbase.c"
 _iupClassRegisterAttribute($10,3101,0,0,(-1),3110,8); //@line 546 "../../iup_classbase.c"
 $11 = $1; //@line 547 "../../iup_classbase.c"
 _iupClassRegisterAttribute($11,3115,0,0,(-1),3126,8); //@line 547 "../../iup_classbase.c"
 $12 = $1; //@line 548 "../../iup_classbase.c"
 _iupClassRegisterAttribute($12,3138,0,0,(-1),19637,8); //@line 548 "../../iup_classbase.c"
 $13 = $1; //@line 549 "../../iup_classbase.c"
 _iupClassRegisterAttribute($13,3149,0,0,(-1),0,8); //@line 549 "../../iup_classbase.c"
 $14 = $1; //@line 551 "../../iup_classbase.c"
 _iupdrvBaseRegisterVisualAttrib($14); //@line 551 "../../iup_classbase.c"
 STACKTOP = sp;return; //@line 552 "../../iup_classbase.c"
}
function _iBaseGetXAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 197 "../../iup_classbase.c"
 HEAP32[$3>>2] = 0; //@line 197 "../../iup_classbase.c"
 $4 = $1; //@line 198 "../../iup_classbase.c"
 _iupdrvClientToScreen($4,$2,$3); //@line 198 "../../iup_classbase.c"
 _iupdrvAddScreenOffset($2,$3,-1); //@line 199 "../../iup_classbase.c"
 $5 = HEAP32[$2>>2]|0; //@line 200 "../../iup_classbase.c"
 $6 = (_iupStrReturnInt($5)|0); //@line 200 "../../iup_classbase.c"
 STACKTOP = sp;return ($6|0); //@line 200 "../../iup_classbase.c"
}
function _iBaseGetYAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 205 "../../iup_classbase.c"
 HEAP32[$3>>2] = 0; //@line 205 "../../iup_classbase.c"
 $4 = $1; //@line 206 "../../iup_classbase.c"
 _iupdrvClientToScreen($4,$2,$3); //@line 206 "../../iup_classbase.c"
 _iupdrvAddScreenOffset($2,$3,-1); //@line 207 "../../iup_classbase.c"
 $5 = HEAP32[$3>>2]|0; //@line 208 "../../iup_classbase.c"
 $6 = (_iupStrReturnInt($5)|0); //@line 208 "../../iup_classbase.c"
 STACKTOP = sp;return ($6|0); //@line 208 "../../iup_classbase.c"
}
function _iBaseGetScreenPositionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 213 "../../iup_classbase.c"
 HEAP32[$3>>2] = 0; //@line 213 "../../iup_classbase.c"
 $4 = $1; //@line 214 "../../iup_classbase.c"
 _iupdrvClientToScreen($4,$2,$3); //@line 214 "../../iup_classbase.c"
 _iupdrvAddScreenOffset($2,$3,-1); //@line 215 "../../iup_classbase.c"
 $5 = HEAP32[$2>>2]|0; //@line 216 "../../iup_classbase.c"
 $6 = HEAP32[$3>>2]|0; //@line 216 "../../iup_classbase.c"
 $7 = (_iupStrReturnIntInt($5,$6,44)|0); //@line 216 "../../iup_classbase.c"
 STACKTOP = sp;return ($7|0); //@line 216 "../../iup_classbase.c"
}
function _iupBaseRegisterCommonCallbacks($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 556 "../../iup_classbase.c"
 _iupClassRegisterCallback($2,15572,362470); //@line 556 "../../iup_classbase.c"
 $3 = $1; //@line 557 "../../iup_classbase.c"
 _iupClassRegisterCallback($3,15563,362470); //@line 557 "../../iup_classbase.c"
 $4 = $1; //@line 558 "../../iup_classbase.c"
 _iupClassRegisterCallback($4,3157,362470); //@line 558 "../../iup_classbase.c"
 $5 = $1; //@line 559 "../../iup_classbase.c"
 _iupClassRegisterCallback($5,3169,362470); //@line 559 "../../iup_classbase.c"
 $6 = $1; //@line 560 "../../iup_classbase.c"
 _iupClassRegisterCallback($6,14303,362470); //@line 560 "../../iup_classbase.c"
 $7 = $1; //@line 561 "../../iup_classbase.c"
 _iupClassRegisterCallback($7,14318,362470); //@line 561 "../../iup_classbase.c"
 $8 = $1; //@line 562 "../../iup_classbase.c"
 _iupClassRegisterCallback($8,14698,362470); //@line 562 "../../iup_classbase.c"
 $9 = $1; //@line 563 "../../iup_classbase.c"
 _iupClassRegisterCallback($9,3565,17949); //@line 563 "../../iup_classbase.c"
 STACKTOP = sp;return; //@line 564 "../../iup_classbase.c"
}
function _iupColorDlgNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(15165)|0); //@line 30 "../../iup_colordlg.c"
 $2 = (_iupClassNew($1)|0); //@line 30 "../../iup_colordlg.c"
 $0 = $2; //@line 30 "../../iup_colordlg.c"
 $3 = $0; //@line 32 "../../iup_colordlg.c"
 HEAP32[$3>>2] = 3182; //@line 32 "../../iup_colordlg.c"
 $4 = $0; //@line 33 "../../iup_colordlg.c"
 $5 = ((($4)) + 8|0); //@line 33 "../../iup_colordlg.c"
 HEAP32[$5>>2] = 3; //@line 33 "../../iup_colordlg.c"
 $6 = $0; //@line 34 "../../iup_colordlg.c"
 $7 = ((($6)) + 16|0); //@line 34 "../../iup_colordlg.c"
 HEAP32[$7>>2] = 1; //@line 34 "../../iup_colordlg.c"
 $8 = $0; //@line 36 "../../iup_colordlg.c"
 $9 = ((($8)) + 32|0); //@line 36 "../../iup_colordlg.c"
 HEAP32[$9>>2] = 102; //@line 36 "../../iup_colordlg.c"
 $10 = $0; //@line 39 "../../iup_colordlg.c"
 $11 = ((($10)) + 24|0); //@line 39 "../../iup_colordlg.c"
 $12 = HEAP32[$11>>2]|0; //@line 39 "../../iup_colordlg.c"
 $13 = ((($12)) + 72|0); //@line 39 "../../iup_colordlg.c"
 HEAP32[$13>>2] = 0; //@line 39 "../../iup_colordlg.c"
 $14 = $0; //@line 40 "../../iup_colordlg.c"
 $15 = ((($14)) + 24|0); //@line 40 "../../iup_colordlg.c"
 $16 = HEAP32[$15>>2]|0; //@line 40 "../../iup_colordlg.c"
 $17 = ((($16)) + 84|0); //@line 40 "../../iup_colordlg.c"
 HEAP32[$17>>2] = 0; //@line 40 "../../iup_colordlg.c"
 $18 = $0; //@line 41 "../../iup_colordlg.c"
 $19 = ((($18)) + 24|0); //@line 41 "../../iup_colordlg.c"
 $20 = HEAP32[$19>>2]|0; //@line 41 "../../iup_colordlg.c"
 $21 = ((($20)) + 44|0); //@line 41 "../../iup_colordlg.c"
 HEAP32[$21>>2] = 0; //@line 41 "../../iup_colordlg.c"
 $22 = $0; //@line 42 "../../iup_colordlg.c"
 $23 = ((($22)) + 24|0); //@line 42 "../../iup_colordlg.c"
 $24 = HEAP32[$23>>2]|0; //@line 42 "../../iup_colordlg.c"
 $25 = ((($24)) + 48|0); //@line 42 "../../iup_colordlg.c"
 HEAP32[$25>>2] = 0; //@line 42 "../../iup_colordlg.c"
 $26 = $0; //@line 44 "../../iup_colordlg.c"
 _iupdrvColorDlgInitClass($26); //@line 44 "../../iup_colordlg.c"
 $27 = $0; //@line 46 "../../iup_colordlg.c"
 STACKTOP = sp;return ($27|0); //@line 46 "../../iup_colordlg.c"
}
function _iupDetachBoxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 531 "../../iup_detachbox.c"
 $0 = $1; //@line 531 "../../iup_detachbox.c"
 $2 = $0; //@line 533 "../../iup_detachbox.c"
 HEAP32[$2>>2] = 3191; //@line 533 "../../iup_detachbox.c"
 $3 = $0; //@line 534 "../../iup_detachbox.c"
 $4 = ((($3)) + 4|0); //@line 534 "../../iup_detachbox.c"
 HEAP32[$4>>2] = 15852; //@line 534 "../../iup_detachbox.c"
 $5 = $0; //@line 535 "../../iup_detachbox.c"
 $6 = ((($5)) + 8|0); //@line 535 "../../iup_detachbox.c"
 HEAP32[$6>>2] = 0; //@line 535 "../../iup_detachbox.c"
 $7 = $0; //@line 536 "../../iup_detachbox.c"
 $8 = ((($7)) + 12|0); //@line 536 "../../iup_detachbox.c"
 HEAP32[$8>>2] = 3; //@line 536 "../../iup_detachbox.c"
 $9 = $0; //@line 537 "../../iup_detachbox.c"
 $10 = ((($9)) + 16|0); //@line 537 "../../iup_detachbox.c"
 HEAP32[$10>>2] = 0; //@line 537 "../../iup_detachbox.c"
 $11 = $0; //@line 540 "../../iup_detachbox.c"
 $12 = ((($11)) + 32|0); //@line 540 "../../iup_detachbox.c"
 HEAP32[$12>>2] = 103; //@line 540 "../../iup_detachbox.c"
 $13 = $0; //@line 541 "../../iup_detachbox.c"
 $14 = ((($13)) + 40|0); //@line 541 "../../iup_detachbox.c"
 HEAP32[$14>>2] = 104; //@line 541 "../../iup_detachbox.c"
 $15 = $0; //@line 542 "../../iup_detachbox.c"
 $16 = ((($15)) + 44|0); //@line 542 "../../iup_detachbox.c"
 HEAP32[$16>>2] = 26; //@line 542 "../../iup_detachbox.c"
 $17 = $0; //@line 544 "../../iup_detachbox.c"
 $18 = ((($17)) + 76|0); //@line 544 "../../iup_detachbox.c"
 HEAP32[$18>>2] = 105; //@line 544 "../../iup_detachbox.c"
 $19 = $0; //@line 545 "../../iup_detachbox.c"
 $20 = ((($19)) + 80|0); //@line 545 "../../iup_detachbox.c"
 HEAP32[$20>>2] = 106; //@line 545 "../../iup_detachbox.c"
 $21 = $0; //@line 546 "../../iup_detachbox.c"
 $22 = ((($21)) + 84|0); //@line 546 "../../iup_detachbox.c"
 HEAP32[$22>>2] = 107; //@line 546 "../../iup_detachbox.c"
 $23 = $0; //@line 548 "../../iup_detachbox.c"
 _iupClassRegisterCallback($23,3201,362470); //@line 548 "../../iup_detachbox.c"
 $24 = $0; //@line 551 "../../iup_detachbox.c"
 _iupBaseRegisterCommonAttrib($24); //@line 551 "../../iup_detachbox.c"
 $25 = $0; //@line 554 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($25,20080,108,0,0,0,41); //@line 554 "../../iup_detachbox.c"
 $26 = $0; //@line 555 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($26,20091,28,0,0,0,41); //@line 555 "../../iup_detachbox.c"
 $27 = $0; //@line 556 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($27,20073,20,0,(-1),20441,9); //@line 556 "../../iup_detachbox.c"
 $28 = $0; //@line 559 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($28,15863,0,109,(-1),15869,1); //@line 559 "../../iup_detachbox.c"
 $29 = $0; //@line 560 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($29,19962,0,110,(-1),19983,9); //@line 560 "../../iup_detachbox.c"
 $30 = $0; //@line 561 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($30,15915,111,112,(-1),20663,9); //@line 561 "../../iup_detachbox.c"
 $31 = $0; //@line 562 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($31,15906,113,114,(-1),20441,9); //@line 562 "../../iup_detachbox.c"
 $32 = $0; //@line 563 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($32,3213,115,0,0,0,4141); //@line 563 "../../iup_detachbox.c"
 $33 = $0; //@line 564 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($33,3230,116,0,0,0,4141); //@line 564 "../../iup_detachbox.c"
 $34 = $0; //@line 565 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($34,3248,0,117,0,0,65); //@line 565 "../../iup_detachbox.c"
 $35 = $0; //@line 566 "../../iup_detachbox.c"
 _iupClassRegisterAttribute($35,3256,0,118,0,0,65); //@line 566 "../../iup_detachbox.c"
 $36 = (_IupGetHandle(3263)|0); //@line 568 "../../iup_detachbox.c"
 $37 = ($36|0)!=(0|0); //@line 568 "../../iup_detachbox.c"
 if ($37) {
  $38 = $0; //@line 571 "../../iup_detachbox.c"
  STACKTOP = sp;return ($38|0); //@line 571 "../../iup_detachbox.c"
 }
 _iDetachBoxCreateCursor(); //@line 569 "../../iup_detachbox.c"
 $38 = $0; //@line 571 "../../iup_detachbox.c"
 STACKTOP = sp;return ($38|0); //@line 571 "../../iup_detachbox.c"
}
function _iDetachBoxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_calloc(1,28)|0); //@line 465 "../../iup_detachbox.c"
 $7 = $2; //@line 465 "../../iup_detachbox.c"
 $8 = ((($7)) + 72|0); //@line 465 "../../iup_detachbox.c"
 HEAP32[$8>>2] = $6; //@line 465 "../../iup_detachbox.c"
 $9 = $2; //@line 467 "../../iup_detachbox.c"
 $10 = ((($9)) + 72|0); //@line 467 "../../iup_detachbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 467 "../../iup_detachbox.c"
 $12 = ((($11)) + 24|0); //@line 467 "../../iup_detachbox.c"
 HEAP32[$12>>2] = 0; //@line 467 "../../iup_detachbox.c"
 $13 = $2; //@line 468 "../../iup_detachbox.c"
 $14 = ((($13)) + 72|0); //@line 468 "../../iup_detachbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 468 "../../iup_detachbox.c"
 $16 = ((($15)) + 16|0); //@line 468 "../../iup_detachbox.c"
 HEAP32[$16>>2] = 10; //@line 468 "../../iup_detachbox.c"
 $17 = $2; //@line 469 "../../iup_detachbox.c"
 $18 = ((($17)) + 72|0); //@line 469 "../../iup_detachbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 469 "../../iup_detachbox.c"
 $20 = ((($19)) + 20|0); //@line 469 "../../iup_detachbox.c"
 HEAP32[$20>>2] = 1; //@line 469 "../../iup_detachbox.c"
 $21 = (_IupCanvas(0)|0); //@line 471 "../../iup_detachbox.c"
 $4 = $21; //@line 471 "../../iup_detachbox.c"
 $22 = $4; //@line 472 "../../iup_detachbox.c"
 $23 = ((($22)) + 24|0); //@line 472 "../../iup_detachbox.c"
 $24 = HEAP32[$23>>2]|0; //@line 472 "../../iup_detachbox.c"
 $25 = $24 | 16; //@line 472 "../../iup_detachbox.c"
 HEAP32[$23>>2] = $25; //@line 472 "../../iup_detachbox.c"
 $26 = $2; //@line 473 "../../iup_detachbox.c"
 $27 = $4; //@line 473 "../../iup_detachbox.c"
 _iupChildTreeAppend($26,$27); //@line 473 "../../iup_detachbox.c"
 $28 = $4; //@line 475 "../../iup_detachbox.c"
 _IupSetAttribute($28,15995,20140); //@line 475 "../../iup_detachbox.c"
 $29 = $4; //@line 476 "../../iup_detachbox.c"
 _IupSetAttribute($29,17637,20140); //@line 476 "../../iup_detachbox.c"
 $30 = $4; //@line 477 "../../iup_detachbox.c"
 _IupSetAttribute($30,20073,20140); //@line 477 "../../iup_detachbox.c"
 $31 = $4; //@line 478 "../../iup_detachbox.c"
 _IupSetAttribute($31,15959,3560); //@line 478 "../../iup_detachbox.c"
 $32 = $4; //@line 481 "../../iup_detachbox.c"
 (_IupSetCallback($32,20522,119)|0); //@line 481 "../../iup_detachbox.c"
 $33 = $4; //@line 482 "../../iup_detachbox.c"
 (_IupSetCallback($33,16004,120)|0); //@line 482 "../../iup_detachbox.c"
 $34 = $4; //@line 483 "../../iup_detachbox.c"
 (_IupSetCallback($34,20479,121)|0); //@line 483 "../../iup_detachbox.c"
 $35 = $2; //@line 486 "../../iup_detachbox.c"
 (_IupSetCallback($35,3565,122)|0); //@line 486 "../../iup_detachbox.c"
 $36 = $3; //@line 488 "../../iup_detachbox.c"
 $37 = ($36|0)!=(0|0); //@line 488 "../../iup_detachbox.c"
 if (!($37)) {
  STACKTOP = sp;return 0; //@line 495 "../../iup_detachbox.c"
 }
 $38 = $3; //@line 490 "../../iup_detachbox.c"
 $5 = $38; //@line 490 "../../iup_detachbox.c"
 $39 = $5; //@line 491 "../../iup_detachbox.c"
 $40 = HEAP32[$39>>2]|0; //@line 491 "../../iup_detachbox.c"
 $41 = ($40|0)!=(0|0); //@line 491 "../../iup_detachbox.c"
 if (!($41)) {
  STACKTOP = sp;return 0; //@line 495 "../../iup_detachbox.c"
 }
 $42 = $2; //@line 492 "../../iup_detachbox.c"
 $43 = $5; //@line 492 "../../iup_detachbox.c"
 $44 = HEAP32[$43>>2]|0; //@line 492 "../../iup_detachbox.c"
 (_IupAppend($42,$44)|0); //@line 492 "../../iup_detachbox.c"
 STACKTOP = sp;return 0; //@line 495 "../../iup_detachbox.c"
}
function _iDetachBoxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = 0; //@line 377 "../../iup_detachbox.c"
 $9 = 0; //@line 378 "../../iup_detachbox.c"
 $11 = $4; //@line 381 "../../iup_detachbox.c"
 $12 = ((($11)) + 72|0); //@line 381 "../../iup_detachbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 381 "../../iup_detachbox.c"
 $14 = ((($13)) + 24|0); //@line 381 "../../iup_detachbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 381 "../../iup_detachbox.c"
 $16 = ($15|0)==(0); //@line 381 "../../iup_detachbox.c"
 $17 = $4; //@line 382 "../../iup_detachbox.c"
 $18 = ((($17)) + 72|0); //@line 382 "../../iup_detachbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 382 "../../iup_detachbox.c"
 $20 = ((($19)) + 16|0); //@line 382 "../../iup_detachbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 382 "../../iup_detachbox.c"
 if ($16) {
  $22 = $8; //@line 382 "../../iup_detachbox.c"
  $23 = (($22) + ($21))|0; //@line 382 "../../iup_detachbox.c"
  $8 = $23; //@line 382 "../../iup_detachbox.c"
 } else {
  $24 = $9; //@line 384 "../../iup_detachbox.c"
  $25 = (($24) + ($21))|0; //@line 384 "../../iup_detachbox.c"
  $9 = $25; //@line 384 "../../iup_detachbox.c"
 }
 $26 = $4; //@line 386 "../../iup_detachbox.c"
 $27 = ((($26)) + 64|0); //@line 386 "../../iup_detachbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 386 "../../iup_detachbox.c"
 $29 = ((($28)) + 68|0); //@line 386 "../../iup_detachbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 386 "../../iup_detachbox.c"
 $31 = ($30|0)!=(0|0); //@line 386 "../../iup_detachbox.c"
 if (!($31)) {
  $80 = $8; //@line 407 "../../iup_detachbox.c"
  $81 = $5; //@line 407 "../../iup_detachbox.c"
  HEAP32[$81>>2] = $80; //@line 407 "../../iup_detachbox.c"
  $82 = $9; //@line 408 "../../iup_detachbox.c"
  $83 = $6; //@line 408 "../../iup_detachbox.c"
  HEAP32[$83>>2] = $82; //@line 408 "../../iup_detachbox.c"
  STACKTOP = sp;return; //@line 409 "../../iup_detachbox.c"
 }
 $32 = $4; //@line 388 "../../iup_detachbox.c"
 $33 = ((($32)) + 64|0); //@line 388 "../../iup_detachbox.c"
 $34 = HEAP32[$33>>2]|0; //@line 388 "../../iup_detachbox.c"
 $35 = ((($34)) + 68|0); //@line 388 "../../iup_detachbox.c"
 $36 = HEAP32[$35>>2]|0; //@line 388 "../../iup_detachbox.c"
 $10 = $36; //@line 388 "../../iup_detachbox.c"
 $37 = $10; //@line 391 "../../iup_detachbox.c"
 _iupBaseComputeNaturalSize($37); //@line 391 "../../iup_detachbox.c"
 $38 = $4; //@line 393 "../../iup_detachbox.c"
 $39 = ((($38)) + 72|0); //@line 393 "../../iup_detachbox.c"
 $40 = HEAP32[$39>>2]|0; //@line 393 "../../iup_detachbox.c"
 $41 = ((($40)) + 24|0); //@line 393 "../../iup_detachbox.c"
 $42 = HEAP32[$41>>2]|0; //@line 393 "../../iup_detachbox.c"
 $43 = ($42|0)==(0); //@line 393 "../../iup_detachbox.c"
 if ($43) {
  $44 = $10; //@line 395 "../../iup_detachbox.c"
  $45 = ((($44)) + 44|0); //@line 395 "../../iup_detachbox.c"
  $46 = HEAP32[$45>>2]|0; //@line 395 "../../iup_detachbox.c"
  $47 = $8; //@line 395 "../../iup_detachbox.c"
  $48 = (($47) + ($46))|0; //@line 395 "../../iup_detachbox.c"
  $8 = $48; //@line 395 "../../iup_detachbox.c"
  $49 = $9; //@line 396 "../../iup_detachbox.c"
  $50 = $10; //@line 396 "../../iup_detachbox.c"
  $51 = ((($50)) + 48|0); //@line 396 "../../iup_detachbox.c"
  $52 = HEAP32[$51>>2]|0; //@line 396 "../../iup_detachbox.c"
  $53 = ($49|0)>($52|0); //@line 396 "../../iup_detachbox.c"
  if ($53) {
   $54 = $9; //@line 396 "../../iup_detachbox.c"
   $58 = $54;
  } else {
   $55 = $10; //@line 396 "../../iup_detachbox.c"
   $56 = ((($55)) + 48|0); //@line 396 "../../iup_detachbox.c"
   $57 = HEAP32[$56>>2]|0; //@line 396 "../../iup_detachbox.c"
   $58 = $57;
  }
  $9 = $58; //@line 396 "../../iup_detachbox.c"
 } else {
  $59 = $8; //@line 400 "../../iup_detachbox.c"
  $60 = $10; //@line 400 "../../iup_detachbox.c"
  $61 = ((($60)) + 44|0); //@line 400 "../../iup_detachbox.c"
  $62 = HEAP32[$61>>2]|0; //@line 400 "../../iup_detachbox.c"
  $63 = ($59|0)>($62|0); //@line 400 "../../iup_detachbox.c"
  if ($63) {
   $64 = $8; //@line 400 "../../iup_detachbox.c"
   $68 = $64;
  } else {
   $65 = $10; //@line 400 "../../iup_detachbox.c"
   $66 = ((($65)) + 44|0); //@line 400 "../../iup_detachbox.c"
   $67 = HEAP32[$66>>2]|0; //@line 400 "../../iup_detachbox.c"
   $68 = $67;
  }
  $8 = $68; //@line 400 "../../iup_detachbox.c"
  $69 = $10; //@line 401 "../../iup_detachbox.c"
  $70 = ((($69)) + 48|0); //@line 401 "../../iup_detachbox.c"
  $71 = HEAP32[$70>>2]|0; //@line 401 "../../iup_detachbox.c"
  $72 = $9; //@line 401 "../../iup_detachbox.c"
  $73 = (($72) + ($71))|0; //@line 401 "../../iup_detachbox.c"
  $9 = $73; //@line 401 "../../iup_detachbox.c"
 }
 $74 = $10; //@line 404 "../../iup_detachbox.c"
 $75 = ((($74)) + 20|0); //@line 404 "../../iup_detachbox.c"
 $76 = HEAP32[$75>>2]|0; //@line 404 "../../iup_detachbox.c"
 $77 = $7; //@line 404 "../../iup_detachbox.c"
 $78 = HEAP32[$77>>2]|0; //@line 404 "../../iup_detachbox.c"
 $79 = $78 | $76; //@line 404 "../../iup_detachbox.c"
 HEAP32[$77>>2] = $79; //@line 404 "../../iup_detachbox.c"
 $80 = $8; //@line 407 "../../iup_detachbox.c"
 $81 = $5; //@line 407 "../../iup_detachbox.c"
 HEAP32[$81>>2] = $80; //@line 407 "../../iup_detachbox.c"
 $82 = $9; //@line 408 "../../iup_detachbox.c"
 $83 = $6; //@line 408 "../../iup_detachbox.c"
 HEAP32[$83>>2] = $82; //@line 408 "../../iup_detachbox.c"
 STACKTOP = sp;return; //@line 409 "../../iup_detachbox.c"
}
function _iDetachBoxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 414 "../../iup_detachbox.c"
 $7 = ((($6)) + 72|0); //@line 414 "../../iup_detachbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 414 "../../iup_detachbox.c"
 $9 = ((($8)) + 24|0); //@line 414 "../../iup_detachbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 414 "../../iup_detachbox.c"
 $11 = ($10|0)==(0); //@line 414 "../../iup_detachbox.c"
 $12 = $2; //@line 416 "../../iup_detachbox.c"
 if ($11) {
  $13 = ((($12)) + 72|0); //@line 416 "../../iup_detachbox.c"
  $14 = HEAP32[$13>>2]|0; //@line 416 "../../iup_detachbox.c"
  $15 = ((($14)) + 16|0); //@line 416 "../../iup_detachbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 416 "../../iup_detachbox.c"
  $17 = $2; //@line 416 "../../iup_detachbox.c"
  $18 = ((($17)) + 64|0); //@line 416 "../../iup_detachbox.c"
  $19 = HEAP32[$18>>2]|0; //@line 416 "../../iup_detachbox.c"
  $20 = ((($19)) + 52|0); //@line 416 "../../iup_detachbox.c"
  HEAP32[$20>>2] = $16; //@line 416 "../../iup_detachbox.c"
  $21 = $2; //@line 417 "../../iup_detachbox.c"
  $22 = ((($21)) + 56|0); //@line 417 "../../iup_detachbox.c"
  $23 = HEAP32[$22>>2]|0; //@line 417 "../../iup_detachbox.c"
  $24 = $2; //@line 417 "../../iup_detachbox.c"
  $25 = ((($24)) + 64|0); //@line 417 "../../iup_detachbox.c"
  $26 = HEAP32[$25>>2]|0; //@line 417 "../../iup_detachbox.c"
  $27 = ((($26)) + 56|0); //@line 417 "../../iup_detachbox.c"
  HEAP32[$27>>2] = $23; //@line 417 "../../iup_detachbox.c"
 } else {
  $28 = ((($12)) + 52|0); //@line 421 "../../iup_detachbox.c"
  $29 = HEAP32[$28>>2]|0; //@line 421 "../../iup_detachbox.c"
  $30 = $2; //@line 421 "../../iup_detachbox.c"
  $31 = ((($30)) + 64|0); //@line 421 "../../iup_detachbox.c"
  $32 = HEAP32[$31>>2]|0; //@line 421 "../../iup_detachbox.c"
  $33 = ((($32)) + 52|0); //@line 421 "../../iup_detachbox.c"
  HEAP32[$33>>2] = $29; //@line 421 "../../iup_detachbox.c"
  $34 = $2; //@line 422 "../../iup_detachbox.c"
  $35 = ((($34)) + 72|0); //@line 422 "../../iup_detachbox.c"
  $36 = HEAP32[$35>>2]|0; //@line 422 "../../iup_detachbox.c"
  $37 = ((($36)) + 16|0); //@line 422 "../../iup_detachbox.c"
  $38 = HEAP32[$37>>2]|0; //@line 422 "../../iup_detachbox.c"
  $39 = $2; //@line 422 "../../iup_detachbox.c"
  $40 = ((($39)) + 64|0); //@line 422 "../../iup_detachbox.c"
  $41 = HEAP32[$40>>2]|0; //@line 422 "../../iup_detachbox.c"
  $42 = ((($41)) + 56|0); //@line 422 "../../iup_detachbox.c"
  HEAP32[$42>>2] = $38; //@line 422 "../../iup_detachbox.c"
 }
 $43 = $2; //@line 426 "../../iup_detachbox.c"
 $44 = ((($43)) + 64|0); //@line 426 "../../iup_detachbox.c"
 $45 = HEAP32[$44>>2]|0; //@line 426 "../../iup_detachbox.c"
 $46 = ((($45)) + 68|0); //@line 426 "../../iup_detachbox.c"
 $47 = HEAP32[$46>>2]|0; //@line 426 "../../iup_detachbox.c"
 $48 = ($47|0)!=(0|0); //@line 426 "../../iup_detachbox.c"
 if (!($48)) {
  STACKTOP = sp;return; //@line 441 "../../iup_detachbox.c"
 }
 $49 = $2; //@line 428 "../../iup_detachbox.c"
 $50 = ((($49)) + 52|0); //@line 428 "../../iup_detachbox.c"
 $51 = HEAP32[$50>>2]|0; //@line 428 "../../iup_detachbox.c"
 $4 = $51; //@line 428 "../../iup_detachbox.c"
 $52 = $2; //@line 429 "../../iup_detachbox.c"
 $53 = ((($52)) + 56|0); //@line 429 "../../iup_detachbox.c"
 $54 = HEAP32[$53>>2]|0; //@line 429 "../../iup_detachbox.c"
 $5 = $54; //@line 429 "../../iup_detachbox.c"
 $55 = $2; //@line 431 "../../iup_detachbox.c"
 $56 = ((($55)) + 72|0); //@line 431 "../../iup_detachbox.c"
 $57 = HEAP32[$56>>2]|0; //@line 431 "../../iup_detachbox.c"
 $58 = ((($57)) + 24|0); //@line 431 "../../iup_detachbox.c"
 $59 = HEAP32[$58>>2]|0; //@line 431 "../../iup_detachbox.c"
 $60 = ($59|0)==(0); //@line 431 "../../iup_detachbox.c"
 $61 = $2; //@line 432 "../../iup_detachbox.c"
 $62 = ((($61)) + 72|0); //@line 432 "../../iup_detachbox.c"
 $63 = HEAP32[$62>>2]|0; //@line 432 "../../iup_detachbox.c"
 $64 = ((($63)) + 16|0); //@line 432 "../../iup_detachbox.c"
 $65 = HEAP32[$64>>2]|0; //@line 432 "../../iup_detachbox.c"
 if ($60) {
  $66 = $4; //@line 432 "../../iup_detachbox.c"
  $67 = (($66) - ($65))|0; //@line 432 "../../iup_detachbox.c"
  $4 = $67; //@line 432 "../../iup_detachbox.c"
 } else {
  $68 = $5; //@line 434 "../../iup_detachbox.c"
  $69 = (($68) - ($65))|0; //@line 434 "../../iup_detachbox.c"
  $5 = $69; //@line 434 "../../iup_detachbox.c"
 }
 $70 = $4; //@line 436 "../../iup_detachbox.c"
 $71 = ($70|0)<(0); //@line 436 "../../iup_detachbox.c"
 if ($71) {
  $4 = 0; //@line 436 "../../iup_detachbox.c"
 }
 $72 = $5; //@line 437 "../../iup_detachbox.c"
 $73 = ($72|0)<(0); //@line 437 "../../iup_detachbox.c"
 if ($73) {
  $5 = 0; //@line 437 "../../iup_detachbox.c"
 }
 $74 = $2; //@line 439 "../../iup_detachbox.c"
 $75 = ((($74)) + 64|0); //@line 439 "../../iup_detachbox.c"
 $76 = HEAP32[$75>>2]|0; //@line 439 "../../iup_detachbox.c"
 $77 = ((($76)) + 68|0); //@line 439 "../../iup_detachbox.c"
 $78 = HEAP32[$77>>2]|0; //@line 439 "../../iup_detachbox.c"
 $79 = $4; //@line 439 "../../iup_detachbox.c"
 $80 = $5; //@line 439 "../../iup_detachbox.c"
 $81 = $3; //@line 439 "../../iup_detachbox.c"
 _iupBaseSetCurrentSize($78,$79,$80,$81); //@line 439 "../../iup_detachbox.c"
 STACKTOP = sp;return; //@line 441 "../../iup_detachbox.c"
}
function _iDetachBoxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 446 "../../iup_detachbox.c"
 $7 = ((($6)) + 64|0); //@line 446 "../../iup_detachbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 446 "../../iup_detachbox.c"
 $9 = $4; //@line 446 "../../iup_detachbox.c"
 $10 = $5; //@line 446 "../../iup_detachbox.c"
 _iupBaseSetPosition($8,$9,$10); //@line 446 "../../iup_detachbox.c"
 $11 = $3; //@line 449 "../../iup_detachbox.c"
 $12 = ((($11)) + 72|0); //@line 449 "../../iup_detachbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 449 "../../iup_detachbox.c"
 $14 = ((($13)) + 24|0); //@line 449 "../../iup_detachbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 449 "../../iup_detachbox.c"
 $16 = ($15|0)==(0); //@line 449 "../../iup_detachbox.c"
 $17 = $3; //@line 451 "../../iup_detachbox.c"
 $18 = ((($17)) + 72|0); //@line 451 "../../iup_detachbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 451 "../../iup_detachbox.c"
 $20 = ((($19)) + 16|0); //@line 451 "../../iup_detachbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 451 "../../iup_detachbox.c"
 if ($16) {
  $22 = $4; //@line 451 "../../iup_detachbox.c"
  $23 = (($22) + ($21))|0; //@line 451 "../../iup_detachbox.c"
  $4 = $23; //@line 451 "../../iup_detachbox.c"
  $24 = $3; //@line 452 "../../iup_detachbox.c"
  $25 = ((($24)) + 64|0); //@line 452 "../../iup_detachbox.c"
  $26 = HEAP32[$25>>2]|0; //@line 452 "../../iup_detachbox.c"
  $27 = ((($26)) + 68|0); //@line 452 "../../iup_detachbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 452 "../../iup_detachbox.c"
  $29 = $4; //@line 452 "../../iup_detachbox.c"
  $30 = $5; //@line 452 "../../iup_detachbox.c"
  _iupBaseSetPosition($28,$29,$30); //@line 452 "../../iup_detachbox.c"
  STACKTOP = sp;return; //@line 459 "../../iup_detachbox.c"
 } else {
  $31 = $5; //@line 456 "../../iup_detachbox.c"
  $32 = (($31) + ($21))|0; //@line 456 "../../iup_detachbox.c"
  $5 = $32; //@line 456 "../../iup_detachbox.c"
  $33 = $3; //@line 457 "../../iup_detachbox.c"
  $34 = ((($33)) + 64|0); //@line 457 "../../iup_detachbox.c"
  $35 = HEAP32[$34>>2]|0; //@line 457 "../../iup_detachbox.c"
  $36 = ((($35)) + 68|0); //@line 457 "../../iup_detachbox.c"
  $37 = HEAP32[$36>>2]|0; //@line 457 "../../iup_detachbox.c"
  $38 = $4; //@line 457 "../../iup_detachbox.c"
  $39 = $5; //@line 457 "../../iup_detachbox.c"
  _iupBaseSetPosition($37,$38,$39); //@line 457 "../../iup_detachbox.c"
  STACKTOP = sp;return; //@line 459 "../../iup_detachbox.c"
 }
}
function _iDetachBoxGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 46 "../../iup_detachbox.c"
 $5 = ((($4)) + 52|0); //@line 46 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 46 "../../iup_detachbox.c"
 $2 = $6; //@line 46 "../../iup_detachbox.c"
 $7 = $1; //@line 47 "../../iup_detachbox.c"
 $8 = ((($7)) + 56|0); //@line 47 "../../iup_detachbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 47 "../../iup_detachbox.c"
 $3 = $9; //@line 47 "../../iup_detachbox.c"
 $10 = $1; //@line 49 "../../iup_detachbox.c"
 $11 = ((($10)) + 72|0); //@line 49 "../../iup_detachbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 49 "../../iup_detachbox.c"
 $13 = ((($12)) + 24|0); //@line 49 "../../iup_detachbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 49 "../../iup_detachbox.c"
 $15 = ($14|0)==(0); //@line 49 "../../iup_detachbox.c"
 $16 = $1; //@line 50 "../../iup_detachbox.c"
 $17 = ((($16)) + 72|0); //@line 50 "../../iup_detachbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 50 "../../iup_detachbox.c"
 $19 = ((($18)) + 16|0); //@line 50 "../../iup_detachbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 50 "../../iup_detachbox.c"
 if ($15) {
  $21 = $2; //@line 50 "../../iup_detachbox.c"
  $22 = (($21) - ($20))|0; //@line 50 "../../iup_detachbox.c"
  $2 = $22; //@line 50 "../../iup_detachbox.c"
 } else {
  $23 = $3; //@line 52 "../../iup_detachbox.c"
  $24 = (($23) - ($20))|0; //@line 52 "../../iup_detachbox.c"
  $3 = $24; //@line 52 "../../iup_detachbox.c"
 }
 $25 = $2; //@line 54 "../../iup_detachbox.c"
 $26 = ($25|0)<(0); //@line 54 "../../iup_detachbox.c"
 if ($26) {
  $2 = 0; //@line 54 "../../iup_detachbox.c"
 }
 $27 = $3; //@line 55 "../../iup_detachbox.c"
 $28 = ($27|0)<(0); //@line 55 "../../iup_detachbox.c"
 if (!($28)) {
  $29 = $2; //@line 56 "../../iup_detachbox.c"
  $30 = $3; //@line 56 "../../iup_detachbox.c"
  $31 = (_iupStrReturnIntInt($29,$30,120)|0); //@line 56 "../../iup_detachbox.c"
  STACKTOP = sp;return ($31|0); //@line 56 "../../iup_detachbox.c"
 }
 $3 = 0; //@line 55 "../../iup_detachbox.c"
 $29 = $2; //@line 56 "../../iup_detachbox.c"
 $30 = $3; //@line 56 "../../iup_detachbox.c"
 $31 = (_iupStrReturnIntInt($29,$30,120)|0); //@line 56 "../../iup_detachbox.c"
 STACKTOP = sp;return ($31|0); //@line 56 "../../iup_detachbox.c"
}
function _iDetachBoxSetColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 62 "../../iup_detachbox.c"
 $5 = ((($4)) + 64|0); //@line 62 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 62 "../../iup_detachbox.c"
 _IupUpdate($6); //@line 62 "../../iup_detachbox.c"
 STACKTOP = sp;return 1; //@line 63 "../../iup_detachbox.c"
}
function _iDetachBoxSetOrientationAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 68 "../../iup_detachbox.c"
 $6 = ((($5)) + 16|0); //@line 68 "../../iup_detachbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 68 "../../iup_detachbox.c"
 $8 = ($7|0)!=(0|0); //@line 68 "../../iup_detachbox.c"
 if ($8) {
  $2 = 0; //@line 69 "../../iup_detachbox.c"
  $16 = $2; //@line 77 "../../iup_detachbox.c"
  STACKTOP = sp;return ($16|0); //@line 77 "../../iup_detachbox.c"
 }
 $9 = $4; //@line 71 "../../iup_detachbox.c"
 $10 = (_iupStrEqualNoCase($9,19951)|0); //@line 71 "../../iup_detachbox.c"
 $11 = ($10|0)!=(0); //@line 71 "../../iup_detachbox.c"
 $12 = $3; //@line 72 "../../iup_detachbox.c"
 $13 = ((($12)) + 72|0); //@line 72 "../../iup_detachbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 72 "../../iup_detachbox.c"
 $15 = ((($14)) + 24|0); //@line 72 "../../iup_detachbox.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 72 "../../iup_detachbox.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 74 "../../iup_detachbox.c"
 }
 $2 = 0; //@line 76 "../../iup_detachbox.c"
 $16 = $2; //@line 77 "../../iup_detachbox.c"
 STACKTOP = sp;return ($16|0); //@line 77 "../../iup_detachbox.c"
}
function _iDetachBoxGetBarSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 89 "../../iup_detachbox.c"
 $3 = ((($2)) + 72|0); //@line 89 "../../iup_detachbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 89 "../../iup_detachbox.c"
 $5 = ((($4)) + 16|0); //@line 89 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 89 "../../iup_detachbox.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 89 "../../iup_detachbox.c"
 STACKTOP = sp;return ($7|0); //@line 89 "../../iup_detachbox.c"
}
function _iDetachBoxSetBarSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 81 "../../iup_detachbox.c"
 $5 = $2; //@line 81 "../../iup_detachbox.c"
 $6 = ((($5)) + 72|0); //@line 81 "../../iup_detachbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 81 "../../iup_detachbox.c"
 $8 = ((($7)) + 16|0); //@line 81 "../../iup_detachbox.c"
 $9 = (_iupStrToInt($4,$8)|0); //@line 81 "../../iup_detachbox.c"
 $10 = ($9|0)!=(0); //@line 81 "../../iup_detachbox.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 84 "../../iup_detachbox.c"
 }
 $11 = $2; //@line 81 "../../iup_detachbox.c"
 $12 = ((($11)) + 16|0); //@line 81 "../../iup_detachbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 81 "../../iup_detachbox.c"
 $14 = ($13|0)!=(0|0); //@line 81 "../../iup_detachbox.c"
 if (!($14)) {
  STACKTOP = sp;return 0; //@line 84 "../../iup_detachbox.c"
 }
 $15 = $2; //@line 82 "../../iup_detachbox.c"
 _IupRefreshChildren($15); //@line 82 "../../iup_detachbox.c"
 STACKTOP = sp;return 0; //@line 84 "../../iup_detachbox.c"
}
function _iDetachBoxGetShowGripAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 174 "../../iup_detachbox.c"
 $3 = ((($2)) + 72|0); //@line 174 "../../iup_detachbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 174 "../../iup_detachbox.c"
 $5 = ((($4)) + 20|0); //@line 174 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 174 "../../iup_detachbox.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 174 "../../iup_detachbox.c"
 STACKTOP = sp;return ($7|0); //@line 174 "../../iup_detachbox.c"
}
function _iDetachBoxSetShowGripAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 161 "../../iup_detachbox.c"
 $5 = (_iupStrBoolean($4)|0); //@line 161 "../../iup_detachbox.c"
 $6 = ($5|0)!=(0); //@line 161 "../../iup_detachbox.c"
 $7 = $2; //@line 162 "../../iup_detachbox.c"
 $8 = ((($7)) + 72|0); //@line 162 "../../iup_detachbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 162 "../../iup_detachbox.c"
 $10 = ((($9)) + 20|0); //@line 162 "../../iup_detachbox.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 162 "../../iup_detachbox.c"
  STACKTOP = sp;return 0; //@line 169 "../../iup_detachbox.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 165 "../../iup_detachbox.c"
  $11 = $2; //@line 166 "../../iup_detachbox.c"
  (_iDetachBoxSetBarSizeAttrib($11,19587)|0); //@line 166 "../../iup_detachbox.c"
  STACKTOP = sp;return 0; //@line 169 "../../iup_detachbox.c"
 }
 return (0)|0;
}
function _iDetachBoxGetOldParentHandleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 179 "../../iup_detachbox.c"
 $3 = ((($2)) + 72|0); //@line 179 "../../iup_detachbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 179 "../../iup_detachbox.c"
 $5 = ((($4)) + 4|0); //@line 179 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 179 "../../iup_detachbox.c"
 STACKTOP = sp;return ($6|0); //@line 179 "../../iup_detachbox.c"
}
function _iDetachBoxGetOldBrotherHandleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 184 "../../iup_detachbox.c"
 $3 = ((($2)) + 72|0); //@line 184 "../../iup_detachbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 184 "../../iup_detachbox.c"
 $5 = ((($4)) + 8|0); //@line 184 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 184 "../../iup_detachbox.c"
 STACKTOP = sp;return ($6|0); //@line 184 "../../iup_detachbox.c"
}
function _iDetachBoxSetRestoreAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 94 "../../iup_detachbox.c"
 $6 = (_IupGetDialog($5)|0); //@line 94 "../../iup_detachbox.c"
 $4 = $6; //@line 94 "../../iup_detachbox.c"
 $7 = $2; //@line 96 "../../iup_detachbox.c"
 $8 = $2; //@line 96 "../../iup_detachbox.c"
 $9 = ((($8)) + 72|0); //@line 96 "../../iup_detachbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 96 "../../iup_detachbox.c"
 $11 = ((($10)) + 4|0); //@line 96 "../../iup_detachbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 96 "../../iup_detachbox.c"
 $13 = $2; //@line 96 "../../iup_detachbox.c"
 $14 = ((($13)) + 72|0); //@line 96 "../../iup_detachbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 96 "../../iup_detachbox.c"
 $16 = ((($15)) + 8|0); //@line 96 "../../iup_detachbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 96 "../../iup_detachbox.c"
 (_IupReparent($7,$12,$17)|0); //@line 96 "../../iup_detachbox.c"
 $18 = $2; //@line 99 "../../iup_detachbox.c"
 $19 = ((($18)) + 72|0); //@line 99 "../../iup_detachbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 99 "../../iup_detachbox.c"
 $21 = ((($20)) + 16|0); //@line 99 "../../iup_detachbox.c"
 HEAP32[$21>>2] = 10; //@line 99 "../../iup_detachbox.c"
 $22 = $2; //@line 100 "../../iup_detachbox.c"
 $23 = ((($22)) + 64|0); //@line 100 "../../iup_detachbox.c"
 $24 = HEAP32[$23>>2]|0; //@line 100 "../../iup_detachbox.c"
 (_IupShow($24)|0); //@line 100 "../../iup_detachbox.c"
 $25 = $2; //@line 103 "../../iup_detachbox.c"
 $26 = ((($25)) + 64|0); //@line 103 "../../iup_detachbox.c"
 $27 = HEAP32[$26>>2]|0; //@line 103 "../../iup_detachbox.c"
 _IupSetAttribute($27,15959,3560); //@line 103 "../../iup_detachbox.c"
 $28 = $2; //@line 105 "../../iup_detachbox.c"
 $29 = ((($28)) + 72|0); //@line 105 "../../iup_detachbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 105 "../../iup_detachbox.c"
 $31 = ((($30)) + 4|0); //@line 105 "../../iup_detachbox.c"
 $32 = HEAP32[$31>>2]|0; //@line 105 "../../iup_detachbox.c"
 _IupRefresh($32); //@line 105 "../../iup_detachbox.c"
 $33 = $2; //@line 108 "../../iup_detachbox.c"
 $34 = ((($33)) + 72|0); //@line 108 "../../iup_detachbox.c"
 $35 = HEAP32[$34>>2]|0; //@line 108 "../../iup_detachbox.c"
 $36 = ((($35)) + 4|0); //@line 108 "../../iup_detachbox.c"
 HEAP32[$36>>2] = 0; //@line 108 "../../iup_detachbox.c"
 $37 = $2; //@line 109 "../../iup_detachbox.c"
 $38 = ((($37)) + 72|0); //@line 109 "../../iup_detachbox.c"
 $39 = HEAP32[$38>>2]|0; //@line 109 "../../iup_detachbox.c"
 $40 = ((($39)) + 8|0); //@line 109 "../../iup_detachbox.c"
 HEAP32[$40>>2] = 0; //@line 109 "../../iup_detachbox.c"
 $41 = $4; //@line 111 "../../iup_detachbox.c"
 _IupDestroy($41); //@line 111 "../../iup_detachbox.c"
 STACKTOP = sp;return 0; //@line 113 "../../iup_detachbox.c"
}
function _iDetachBoxSetDetachAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $2; //@line 118 "../../iup_detachbox.c"
 $8 = (_IupGetCallback($7,3201)|0); //@line 118 "../../iup_detachbox.c"
 $4 = $8; //@line 118 "../../iup_detachbox.c"
 $9 = (_IupDialog(0)|0); //@line 121 "../../iup_detachbox.c"
 $5 = $9; //@line 121 "../../iup_detachbox.c"
 $10 = $2; //@line 122 "../../iup_detachbox.c"
 $11 = (_IupGetDialog($10)|0); //@line 122 "../../iup_detachbox.c"
 $6 = $11; //@line 122 "../../iup_detachbox.c"
 $12 = $5; //@line 125 "../../iup_detachbox.c"
 $13 = $6; //@line 125 "../../iup_detachbox.c"
 _IupSetAttributeHandle($12,3571,$13); //@line 125 "../../iup_detachbox.c"
 $14 = $4; //@line 127 "../../iup_detachbox.c"
 $15 = ($14|0)!=(0|0); //@line 127 "../../iup_detachbox.c"
 if ($15) {
  $16 = $4; //@line 128 "../../iup_detachbox.c"
  $17 = $2; //@line 128 "../../iup_detachbox.c"
  $18 = $5; //@line 128 "../../iup_detachbox.c"
  (FUNCTION_TABLE_iiiii[$16 & 1023]($17,$18,0,0)|0); //@line 128 "../../iup_detachbox.c"
 }
 $19 = $2; //@line 131 "../../iup_detachbox.c"
 $20 = ((($19)) + 60|0); //@line 131 "../../iup_detachbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 131 "../../iup_detachbox.c"
 $22 = $2; //@line 131 "../../iup_detachbox.c"
 $23 = ((($22)) + 72|0); //@line 131 "../../iup_detachbox.c"
 $24 = HEAP32[$23>>2]|0; //@line 131 "../../iup_detachbox.c"
 $25 = ((($24)) + 4|0); //@line 131 "../../iup_detachbox.c"
 HEAP32[$25>>2] = $21; //@line 131 "../../iup_detachbox.c"
 $26 = $2; //@line 132 "../../iup_detachbox.c"
 $27 = ((($26)) + 68|0); //@line 132 "../../iup_detachbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 132 "../../iup_detachbox.c"
 $29 = $2; //@line 132 "../../iup_detachbox.c"
 $30 = ((($29)) + 72|0); //@line 132 "../../iup_detachbox.c"
 $31 = HEAP32[$30>>2]|0; //@line 132 "../../iup_detachbox.c"
 $32 = ((($31)) + 8|0); //@line 132 "../../iup_detachbox.c"
 HEAP32[$32>>2] = $28; //@line 132 "../../iup_detachbox.c"
 $33 = $5; //@line 134 "../../iup_detachbox.c"
 (_IupMap($33)|0); //@line 134 "../../iup_detachbox.c"
 $34 = $2; //@line 137 "../../iup_detachbox.c"
 $35 = $5; //@line 137 "../../iup_detachbox.c"
 (_IupReparent($34,$35,0)|0); //@line 137 "../../iup_detachbox.c"
 $36 = $2; //@line 140 "../../iup_detachbox.c"
 $37 = ((($36)) + 72|0); //@line 140 "../../iup_detachbox.c"
 $38 = HEAP32[$37>>2]|0; //@line 140 "../../iup_detachbox.c"
 $39 = ((($38)) + 16|0); //@line 140 "../../iup_detachbox.c"
 HEAP32[$39>>2] = 0; //@line 140 "../../iup_detachbox.c"
 $40 = $2; //@line 141 "../../iup_detachbox.c"
 $41 = ((($40)) + 64|0); //@line 141 "../../iup_detachbox.c"
 $42 = HEAP32[$41>>2]|0; //@line 141 "../../iup_detachbox.c"
 (_IupHide($42)|0); //@line 141 "../../iup_detachbox.c"
 $43 = $2; //@line 144 "../../iup_detachbox.c"
 $44 = ((($43)) + 64|0); //@line 144 "../../iup_detachbox.c"
 $45 = HEAP32[$44>>2]|0; //@line 144 "../../iup_detachbox.c"
 _IupSetAttribute($45,15959,3560); //@line 144 "../../iup_detachbox.c"
 $46 = $6; //@line 147 "../../iup_detachbox.c"
 _IupRefresh($46); //@line 147 "../../iup_detachbox.c"
 $47 = $5; //@line 149 "../../iup_detachbox.c"
 _IupSetAttribute($47,20008,0); //@line 149 "../../iup_detachbox.c"
 $48 = $5; //@line 150 "../../iup_detachbox.c"
 _IupRefresh($48); //@line 150 "../../iup_detachbox.c"
 $49 = $5; //@line 153 "../../iup_detachbox.c"
 (_IupShow($49)|0); //@line 153 "../../iup_detachbox.c"
 STACKTOP = sp;return 0; //@line 156 "../../iup_detachbox.c"
}
function _iDetachBoxCreateCursor() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $1 = sp + 8|0;
 _memcpy(($1|0),(3282|0),256)|0; //@line 501 "../../iup_detachbox.c"
 $2 = (_IupImage(16,16,$1)|0); //@line 520 "../../iup_detachbox.c"
 $0 = $2; //@line 520 "../../iup_detachbox.c"
 $3 = $0; //@line 521 "../../iup_detachbox.c"
 _IupSetAttribute($3,19944,20290); //@line 521 "../../iup_detachbox.c"
 $4 = $0; //@line 522 "../../iup_detachbox.c"
 _IupSetAttribute($4,19938,19637); //@line 522 "../../iup_detachbox.c"
 $5 = $0; //@line 523 "../../iup_detachbox.c"
 _IupSetAttribute($5,19551,3538); //@line 523 "../../iup_detachbox.c"
 $6 = $0; //@line 524 "../../iup_detachbox.c"
 _IupSetAttribute($6,19562,19692); //@line 524 "../../iup_detachbox.c"
 $7 = $0; //@line 525 "../../iup_detachbox.c"
 _IupSetAttribute($7,19573,3550); //@line 525 "../../iup_detachbox.c"
 $8 = $0; //@line 526 "../../iup_detachbox.c"
 (_IupSetHandle(3263,$8)|0); //@line 526 "../../iup_detachbox.c"
 STACKTOP = sp;return; //@line 527 "../../iup_detachbox.c"
}
function _iDetachBoxButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $17 = sp + 8|0;
 $18 = sp + 4|0;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $20 = $7; //@line 286 "../../iup_detachbox.c"
 $21 = ((($20)) + 60|0); //@line 286 "../../iup_detachbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 286 "../../iup_detachbox.c"
 $13 = $22; //@line 286 "../../iup_detachbox.c"
 $23 = $13; //@line 287 "../../iup_detachbox.c"
 $24 = (_IupGetDialog($23)|0); //@line 287 "../../iup_detachbox.c"
 $14 = $24; //@line 287 "../../iup_detachbox.c"
 $25 = $8; //@line 289 "../../iup_detachbox.c"
 $26 = ($25|0)!=(49); //@line 289 "../../iup_detachbox.c"
 if ($26) {
  $6 = -2; //@line 290 "../../iup_detachbox.c"
  $91 = $6; //@line 355 "../../iup_detachbox.c"
  STACKTOP = sp;return ($91|0); //@line 355 "../../iup_detachbox.c"
 }
 $27 = $13; //@line 292 "../../iup_detachbox.c"
 $28 = ((($27)) + 72|0); //@line 292 "../../iup_detachbox.c"
 $29 = HEAP32[$28>>2]|0; //@line 292 "../../iup_detachbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 292 "../../iup_detachbox.c"
 $31 = ($30|0)==(0); //@line 292 "../../iup_detachbox.c"
 $32 = $9; //@line 292 "../../iup_detachbox.c"
 $33 = ($32|0)!=(0); //@line 292 "../../iup_detachbox.c"
 $or$cond = $31 & $33; //@line 292 "../../iup_detachbox.c"
 $34 = $13; //@line 294 "../../iup_detachbox.c"
 $35 = ((($34)) + 72|0); //@line 294 "../../iup_detachbox.c"
 $36 = HEAP32[$35>>2]|0; //@line 294 "../../iup_detachbox.c"
 if ($or$cond) {
  HEAP32[$36>>2] = 1; //@line 294 "../../iup_detachbox.c"
  $37 = $7; //@line 297 "../../iup_detachbox.c"
  _IupSetAttribute($37,15959,3263); //@line 297 "../../iup_detachbox.c"
 } else {
  $38 = HEAP32[$36>>2]|0; //@line 299 "../../iup_detachbox.c"
  $39 = ($38|0)==(0); //@line 299 "../../iup_detachbox.c"
  $40 = $9; //@line 299 "../../iup_detachbox.c"
  $41 = ($40|0)!=(0); //@line 299 "../../iup_detachbox.c"
  $or$cond3 = $39 | $41; //@line 299 "../../iup_detachbox.c"
  if (!($or$cond3)) {
   $42 = $13; //@line 302 "../../iup_detachbox.c"
   $43 = (_IupGetCallback($42,3201)|0); //@line 302 "../../iup_detachbox.c"
   $16 = $43; //@line 302 "../../iup_detachbox.c"
   $44 = $13; //@line 305 "../../iup_detachbox.c"
   $45 = ((($44)) + 72|0); //@line 305 "../../iup_detachbox.c"
   $46 = HEAP32[$45>>2]|0; //@line 305 "../../iup_detachbox.c"
   HEAP32[$46>>2] = 0; //@line 305 "../../iup_detachbox.c"
   $47 = (_IupGetGlobal(20240)|0); //@line 307 "../../iup_detachbox.c"
   (_iupStrToIntInt($47,$17,$18,120)|0); //@line 307 "../../iup_detachbox.c"
   $48 = (_IupDialog(0)|0); //@line 310 "../../iup_detachbox.c"
   $15 = $48; //@line 310 "../../iup_detachbox.c"
   $49 = $15; //@line 313 "../../iup_detachbox.c"
   $50 = $14; //@line 313 "../../iup_detachbox.c"
   _IupSetAttributeHandle($49,3571,$50); //@line 313 "../../iup_detachbox.c"
   $51 = $16; //@line 315 "../../iup_detachbox.c"
   $52 = ($51|0)!=(0|0); //@line 315 "../../iup_detachbox.c"
   if ($52) {
    $53 = $16; //@line 317 "../../iup_detachbox.c"
    $54 = $13; //@line 317 "../../iup_detachbox.c"
    $55 = $15; //@line 317 "../../iup_detachbox.c"
    $56 = HEAP32[$17>>2]|0; //@line 317 "../../iup_detachbox.c"
    $57 = HEAP32[$18>>2]|0; //@line 317 "../../iup_detachbox.c"
    $58 = (FUNCTION_TABLE_iiiii[$53 & 1023]($54,$55,$56,$57)|0); //@line 317 "../../iup_detachbox.c"
    $19 = $58; //@line 317 "../../iup_detachbox.c"
    $59 = $19; //@line 318 "../../iup_detachbox.c"
    $60 = ($59|0)==(-1); //@line 318 "../../iup_detachbox.c"
    if ($60) {
     $61 = $15; //@line 320 "../../iup_detachbox.c"
     _IupDestroy($61); //@line 320 "../../iup_detachbox.c"
     $6 = -2; //@line 321 "../../iup_detachbox.c"
     $91 = $6; //@line 355 "../../iup_detachbox.c"
     STACKTOP = sp;return ($91|0); //@line 355 "../../iup_detachbox.c"
    }
   }
   $62 = $13; //@line 326 "../../iup_detachbox.c"
   $63 = ((($62)) + 60|0); //@line 326 "../../iup_detachbox.c"
   $64 = HEAP32[$63>>2]|0; //@line 326 "../../iup_detachbox.c"
   $65 = $13; //@line 326 "../../iup_detachbox.c"
   $66 = ((($65)) + 72|0); //@line 326 "../../iup_detachbox.c"
   $67 = HEAP32[$66>>2]|0; //@line 326 "../../iup_detachbox.c"
   $68 = ((($67)) + 4|0); //@line 326 "../../iup_detachbox.c"
   HEAP32[$68>>2] = $64; //@line 326 "../../iup_detachbox.c"
   $69 = $13; //@line 327 "../../iup_detachbox.c"
   $70 = ((($69)) + 68|0); //@line 327 "../../iup_detachbox.c"
   $71 = HEAP32[$70>>2]|0; //@line 327 "../../iup_detachbox.c"
   $72 = $13; //@line 327 "../../iup_detachbox.c"
   $73 = ((($72)) + 72|0); //@line 327 "../../iup_detachbox.c"
   $74 = HEAP32[$73>>2]|0; //@line 327 "../../iup_detachbox.c"
   $75 = ((($74)) + 8|0); //@line 327 "../../iup_detachbox.c"
   HEAP32[$75>>2] = $71; //@line 327 "../../iup_detachbox.c"
   $76 = $15; //@line 329 "../../iup_detachbox.c"
   (_IupMap($76)|0); //@line 329 "../../iup_detachbox.c"
   $77 = $13; //@line 332 "../../iup_detachbox.c"
   $78 = $15; //@line 332 "../../iup_detachbox.c"
   (_IupReparent($77,$78,0)|0); //@line 332 "../../iup_detachbox.c"
   $79 = $7; //@line 335 "../../iup_detachbox.c"
   _IupSetAttribute($79,15959,3560); //@line 335 "../../iup_detachbox.c"
   $80 = $13; //@line 338 "../../iup_detachbox.c"
   $81 = ((($80)) + 72|0); //@line 338 "../../iup_detachbox.c"
   $82 = HEAP32[$81>>2]|0; //@line 338 "../../iup_detachbox.c"
   $83 = ((($82)) + 16|0); //@line 338 "../../iup_detachbox.c"
   HEAP32[$83>>2] = 0; //@line 338 "../../iup_detachbox.c"
   $84 = $7; //@line 339 "../../iup_detachbox.c"
   (_IupHide($84)|0); //@line 339 "../../iup_detachbox.c"
   $85 = $14; //@line 342 "../../iup_detachbox.c"
   _IupRefresh($85); //@line 342 "../../iup_detachbox.c"
   $86 = $15; //@line 344 "../../iup_detachbox.c"
   _IupSetAttribute($86,20008,0); //@line 344 "../../iup_detachbox.c"
   $87 = $15; //@line 345 "../../iup_detachbox.c"
   _IupRefresh($87); //@line 345 "../../iup_detachbox.c"
   $88 = $15; //@line 348 "../../iup_detachbox.c"
   $89 = HEAP32[$17>>2]|0; //@line 348 "../../iup_detachbox.c"
   $90 = HEAP32[$18>>2]|0; //@line 348 "../../iup_detachbox.c"
   (_IupShowXY($88,$89,$90)|0); //@line 348 "../../iup_detachbox.c"
  }
 }
 $6 = -2; //@line 354 "../../iup_detachbox.c"
 $91 = $6; //@line 355 "../../iup_detachbox.c"
 STACKTOP = sp;return ($91|0); //@line 355 "../../iup_detachbox.c"
}
function _iDetachBoxFocus_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 359 "../../iup_detachbox.c"
 $7 = ((($6)) + 60|0); //@line 359 "../../iup_detachbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 359 "../../iup_detachbox.c"
 $5 = $8; //@line 359 "../../iup_detachbox.c"
 $9 = $5; //@line 361 "../../iup_detachbox.c"
 $10 = ($9|0)==(0|0); //@line 361 "../../iup_detachbox.c"
 $11 = $4; //@line 361 "../../iup_detachbox.c"
 $12 = ($11|0)!=(0); //@line 361 "../../iup_detachbox.c"
 $or$cond = $10 | $12; //@line 361 "../../iup_detachbox.c"
 if ($or$cond) {
  $2 = -2; //@line 362 "../../iup_detachbox.c"
  $21 = $2; //@line 368 "../../iup_detachbox.c"
  STACKTOP = sp;return ($21|0); //@line 368 "../../iup_detachbox.c"
 }
 $13 = $5; //@line 364 "../../iup_detachbox.c"
 $14 = ((($13)) + 72|0); //@line 364 "../../iup_detachbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 364 "../../iup_detachbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 364 "../../iup_detachbox.c"
 $17 = ($16|0)!=(0); //@line 364 "../../iup_detachbox.c"
 if ($17) {
  $18 = $5; //@line 365 "../../iup_detachbox.c"
  $19 = ((($18)) + 72|0); //@line 365 "../../iup_detachbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 365 "../../iup_detachbox.c"
  HEAP32[$20>>2] = 0; //@line 365 "../../iup_detachbox.c"
 }
 $2 = -2; //@line 367 "../../iup_detachbox.c"
 $21 = $2; //@line 368 "../../iup_detachbox.c"
 STACKTOP = sp;return ($21|0); //@line 368 "../../iup_detachbox.c"
}
function _iDetachBoxAction_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $5 = sp + 32|0;
 $6 = sp + 28|0;
 $10 = sp + 60|0;
 $11 = sp + 59|0;
 $12 = sp + 58|0;
 $16 = sp + 12|0;
 $17 = sp + 8|0;
 $20 = sp + 54|0;
 $21 = sp + 53|0;
 $22 = sp + 52|0;
 $1 = $0;
 $23 = $1; //@line 205 "../../iup_detachbox.c"
 $24 = ((($23)) + 60|0); //@line 205 "../../iup_detachbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 205 "../../iup_detachbox.c"
 $2 = $25; //@line 205 "../../iup_detachbox.c"
 $26 = $1; //@line 206 "../../iup_detachbox.c"
 $27 = (_iupDrawCreateCanvas($26)|0); //@line 206 "../../iup_detachbox.c"
 $3 = $27; //@line 206 "../../iup_detachbox.c"
 $28 = $3; //@line 208 "../../iup_detachbox.c"
 _iupDrawParentBackground($28); //@line 208 "../../iup_detachbox.c"
 $29 = $2; //@line 210 "../../iup_detachbox.c"
 $30 = ((($29)) + 72|0); //@line 210 "../../iup_detachbox.c"
 $31 = HEAP32[$30>>2]|0; //@line 210 "../../iup_detachbox.c"
 $32 = ((($31)) + 20|0); //@line 210 "../../iup_detachbox.c"
 $33 = HEAP32[$32>>2]|0; //@line 210 "../../iup_detachbox.c"
 $34 = ($33|0)!=(0); //@line 210 "../../iup_detachbox.c"
 if (!($34)) {
  HEAP8[$20>>0] = -96; //@line 258 "../../iup_detachbox.c"
  HEAP8[$21>>0] = -96; //@line 258 "../../iup_detachbox.c"
  HEAP8[$22>>0] = -96; //@line 258 "../../iup_detachbox.c"
  $161 = $3; //@line 259 "../../iup_detachbox.c"
  _iupDrawGetSize($161,$16,$17); //@line 259 "../../iup_detachbox.c"
  $162 = $2; //@line 261 "../../iup_detachbox.c"
  $163 = (_IupGetAttribute($162,15863)|0); //@line 261 "../../iup_detachbox.c"
  (_iupStrToRGB($163,$20,$21,$22)|0); //@line 261 "../../iup_detachbox.c"
  $164 = $2; //@line 263 "../../iup_detachbox.c"
  $165 = ((($164)) + 72|0); //@line 263 "../../iup_detachbox.c"
  $166 = HEAP32[$165>>2]|0; //@line 263 "../../iup_detachbox.c"
  $167 = ((($166)) + 24|0); //@line 263 "../../iup_detachbox.c"
  $168 = HEAP32[$167>>2]|0; //@line 263 "../../iup_detachbox.c"
  $169 = ($168|0)==(0); //@line 263 "../../iup_detachbox.c"
  if ($169) {
   $170 = $2; //@line 265 "../../iup_detachbox.c"
   $171 = ((($170)) + 72|0); //@line 265 "../../iup_detachbox.c"
   $172 = HEAP32[$171>>2]|0; //@line 265 "../../iup_detachbox.c"
   $173 = ((($172)) + 16|0); //@line 265 "../../iup_detachbox.c"
   $174 = HEAP32[$173>>2]|0; //@line 265 "../../iup_detachbox.c"
   $175 = (($174|0) / 2)&-1; //@line 265 "../../iup_detachbox.c"
   $176 = (($175) - 1)|0; //@line 265 "../../iup_detachbox.c"
   $18 = $176; //@line 265 "../../iup_detachbox.c"
   $19 = 2; //@line 266 "../../iup_detachbox.c"
  } else {
   $18 = 2; //@line 270 "../../iup_detachbox.c"
   $177 = $2; //@line 271 "../../iup_detachbox.c"
   $178 = ((($177)) + 72|0); //@line 271 "../../iup_detachbox.c"
   $179 = HEAP32[$178>>2]|0; //@line 271 "../../iup_detachbox.c"
   $180 = ((($179)) + 16|0); //@line 271 "../../iup_detachbox.c"
   $181 = HEAP32[$180>>2]|0; //@line 271 "../../iup_detachbox.c"
   $182 = (($181|0) / 2)&-1; //@line 271 "../../iup_detachbox.c"
   $183 = (($182) - 1)|0; //@line 271 "../../iup_detachbox.c"
   $19 = $183; //@line 271 "../../iup_detachbox.c"
  }
  $184 = $3; //@line 274 "../../iup_detachbox.c"
  $185 = $18; //@line 274 "../../iup_detachbox.c"
  $186 = $19; //@line 274 "../../iup_detachbox.c"
  $187 = $18; //@line 274 "../../iup_detachbox.c"
  $188 = HEAP32[$16>>2]|0; //@line 274 "../../iup_detachbox.c"
  $189 = (($187) + ($188))|0; //@line 274 "../../iup_detachbox.c"
  $190 = $19; //@line 274 "../../iup_detachbox.c"
  $191 = HEAP32[$17>>2]|0; //@line 274 "../../iup_detachbox.c"
  $192 = (($190) + ($191))|0; //@line 274 "../../iup_detachbox.c"
  $193 = HEAP8[$20>>0]|0; //@line 274 "../../iup_detachbox.c"
  $194 = HEAP8[$21>>0]|0; //@line 274 "../../iup_detachbox.c"
  $195 = HEAP8[$22>>0]|0; //@line 274 "../../iup_detachbox.c"
  _iupDrawRectangle($184,$185,$186,$189,$192,$193,$194,$195,0); //@line 274 "../../iup_detachbox.c"
  $196 = $3; //@line 277 "../../iup_detachbox.c"
  _iupDrawFlush($196); //@line 277 "../../iup_detachbox.c"
  $197 = $3; //@line 279 "../../iup_detachbox.c"
  _iupDrawKillCanvas($197); //@line 279 "../../iup_detachbox.c"
  STACKTOP = sp;return -2; //@line 281 "../../iup_detachbox.c"
 }
 HEAP8[$10>>0] = -96; //@line 213 "../../iup_detachbox.c"
 HEAP8[$11>>0] = -96; //@line 213 "../../iup_detachbox.c"
 HEAP8[$12>>0] = -96; //@line 213 "../../iup_detachbox.c"
 $35 = $3; //@line 214 "../../iup_detachbox.c"
 _iupDrawGetSize($35,$5,$6); //@line 214 "../../iup_detachbox.c"
 $36 = $2; //@line 216 "../../iup_detachbox.c"
 $37 = (_IupGetAttribute($36,15863)|0); //@line 216 "../../iup_detachbox.c"
 (_iupStrToRGB($37,$10,$11,$12)|0); //@line 216 "../../iup_detachbox.c"
 $38 = HEAP8[$10>>0]|0; //@line 217 "../../iup_detachbox.c"
 $39 = $38&255; //@line 217 "../../iup_detachbox.c"
 $40 = HEAP8[$11>>0]|0; //@line 217 "../../iup_detachbox.c"
 $41 = $40&255; //@line 217 "../../iup_detachbox.c"
 $42 = (($39) + ($41))|0; //@line 217 "../../iup_detachbox.c"
 $43 = HEAP8[$12>>0]|0; //@line 217 "../../iup_detachbox.c"
 $44 = $43&255; //@line 217 "../../iup_detachbox.c"
 $45 = (($42) + ($44))|0; //@line 217 "../../iup_detachbox.c"
 $46 = ($45|0)>(570); //@line 217 "../../iup_detachbox.c"
 if ($46) {
  $13 = 100; //@line 218 "../../iup_detachbox.c"
  $14 = 100; //@line 218 "../../iup_detachbox.c"
  $15 = 100; //@line 218 "../../iup_detachbox.c"
 } else {
  $13 = -1; //@line 220 "../../iup_detachbox.c"
  $14 = -1; //@line 220 "../../iup_detachbox.c"
  $15 = -1; //@line 220 "../../iup_detachbox.c"
 }
 $47 = $2; //@line 222 "../../iup_detachbox.c"
 $48 = ((($47)) + 72|0); //@line 222 "../../iup_detachbox.c"
 $49 = HEAP32[$48>>2]|0; //@line 222 "../../iup_detachbox.c"
 $50 = ((($49)) + 24|0); //@line 222 "../../iup_detachbox.c"
 $51 = HEAP32[$50>>2]|0; //@line 222 "../../iup_detachbox.c"
 $52 = ($51|0)==(0); //@line 222 "../../iup_detachbox.c"
 if ($52) {
  $53 = $2; //@line 224 "../../iup_detachbox.c"
  $54 = ((($53)) + 72|0); //@line 224 "../../iup_detachbox.c"
  $55 = HEAP32[$54>>2]|0; //@line 224 "../../iup_detachbox.c"
  $56 = ((($55)) + 16|0); //@line 224 "../../iup_detachbox.c"
  $57 = HEAP32[$56>>2]|0; //@line 224 "../../iup_detachbox.c"
  $58 = (($57|0) / 2)&-1; //@line 224 "../../iup_detachbox.c"
  $59 = (($58) - 1)|0; //@line 224 "../../iup_detachbox.c"
  $7 = $59; //@line 224 "../../iup_detachbox.c"
  $8 = 2; //@line 225 "../../iup_detachbox.c"
  $60 = HEAP32[$6>>2]|0; //@line 226 "../../iup_detachbox.c"
  $61 = (($60) - 2)|0; //@line 226 "../../iup_detachbox.c"
  $62 = (($61|0) / 4)&-1; //@line 226 "../../iup_detachbox.c"
  $9 = $62; //@line 226 "../../iup_detachbox.c"
 } else {
  $7 = 2; //@line 230 "../../iup_detachbox.c"
  $63 = $2; //@line 231 "../../iup_detachbox.c"
  $64 = ((($63)) + 72|0); //@line 231 "../../iup_detachbox.c"
  $65 = HEAP32[$64>>2]|0; //@line 231 "../../iup_detachbox.c"
  $66 = ((($65)) + 16|0); //@line 231 "../../iup_detachbox.c"
  $67 = HEAP32[$66>>2]|0; //@line 231 "../../iup_detachbox.c"
  $68 = (($67|0) / 2)&-1; //@line 231 "../../iup_detachbox.c"
  $69 = (($68) - 1)|0; //@line 231 "../../iup_detachbox.c"
  $8 = $69; //@line 231 "../../iup_detachbox.c"
  $70 = HEAP32[$5>>2]|0; //@line 232 "../../iup_detachbox.c"
  $71 = (($70) - 2)|0; //@line 232 "../../iup_detachbox.c"
  $72 = (($71|0) / 4)&-1; //@line 232 "../../iup_detachbox.c"
  $9 = $72; //@line 232 "../../iup_detachbox.c"
 }
 $4 = 0; //@line 235 "../../iup_detachbox.c"
 while(1) {
  $73 = $4; //@line 235 "../../iup_detachbox.c"
  $74 = $9; //@line 235 "../../iup_detachbox.c"
  $75 = ($73|0)<($74|0); //@line 235 "../../iup_detachbox.c"
  if (!($75)) {
   break;
  }
  $76 = $3; //@line 237 "../../iup_detachbox.c"
  $77 = $7; //@line 237 "../../iup_detachbox.c"
  $78 = (($77) + 1)|0; //@line 237 "../../iup_detachbox.c"
  $79 = $8; //@line 237 "../../iup_detachbox.c"
  $80 = (($79) + 1)|0; //@line 237 "../../iup_detachbox.c"
  $81 = $7; //@line 237 "../../iup_detachbox.c"
  $82 = (($81) + 2)|0; //@line 237 "../../iup_detachbox.c"
  $83 = $8; //@line 237 "../../iup_detachbox.c"
  $84 = (($83) + 2)|0; //@line 237 "../../iup_detachbox.c"
  $85 = $13; //@line 237 "../../iup_detachbox.c"
  $86 = $14; //@line 237 "../../iup_detachbox.c"
  $87 = $15; //@line 237 "../../iup_detachbox.c"
  _iupDrawRectangle($76,$78,$80,$82,$84,$85,$86,$87,0); //@line 237 "../../iup_detachbox.c"
  $88 = $3; //@line 238 "../../iup_detachbox.c"
  $89 = $7; //@line 238 "../../iup_detachbox.c"
  $90 = $8; //@line 238 "../../iup_detachbox.c"
  $91 = $7; //@line 238 "../../iup_detachbox.c"
  $92 = (($91) + 1)|0; //@line 238 "../../iup_detachbox.c"
  $93 = $8; //@line 238 "../../iup_detachbox.c"
  $94 = (($93) + 1)|0; //@line 238 "../../iup_detachbox.c"
  $95 = HEAP8[$10>>0]|0; //@line 238 "../../iup_detachbox.c"
  $96 = HEAP8[$11>>0]|0; //@line 238 "../../iup_detachbox.c"
  $97 = HEAP8[$12>>0]|0; //@line 238 "../../iup_detachbox.c"
  _iupDrawRectangle($88,$89,$90,$92,$94,$95,$96,$97,0); //@line 238 "../../iup_detachbox.c"
  $98 = $4; //@line 240 "../../iup_detachbox.c"
  $99 = $9; //@line 240 "../../iup_detachbox.c"
  $100 = (($99) - 1)|0; //@line 240 "../../iup_detachbox.c"
  $101 = ($98|0)<($100|0); //@line 240 "../../iup_detachbox.c"
  if ($101) {
   $102 = $3; //@line 242 "../../iup_detachbox.c"
   $103 = $7; //@line 242 "../../iup_detachbox.c"
   $104 = (($103) + 3)|0; //@line 242 "../../iup_detachbox.c"
   $105 = $8; //@line 242 "../../iup_detachbox.c"
   $106 = (($105) + 3)|0; //@line 242 "../../iup_detachbox.c"
   $107 = $7; //@line 242 "../../iup_detachbox.c"
   $108 = (($107) + 4)|0; //@line 242 "../../iup_detachbox.c"
   $109 = $8; //@line 242 "../../iup_detachbox.c"
   $110 = (($109) + 4)|0; //@line 242 "../../iup_detachbox.c"
   $111 = $13; //@line 242 "../../iup_detachbox.c"
   $112 = $14; //@line 242 "../../iup_detachbox.c"
   $113 = $15; //@line 242 "../../iup_detachbox.c"
   _iupDrawRectangle($102,$104,$106,$108,$110,$111,$112,$113,0); //@line 242 "../../iup_detachbox.c"
   $114 = $3; //@line 243 "../../iup_detachbox.c"
   $115 = $7; //@line 243 "../../iup_detachbox.c"
   $116 = (($115) + 2)|0; //@line 243 "../../iup_detachbox.c"
   $117 = $8; //@line 243 "../../iup_detachbox.c"
   $118 = (($117) + 2)|0; //@line 243 "../../iup_detachbox.c"
   $119 = $7; //@line 243 "../../iup_detachbox.c"
   $120 = (($119) + 3)|0; //@line 243 "../../iup_detachbox.c"
   $121 = $8; //@line 243 "../../iup_detachbox.c"
   $122 = (($121) + 3)|0; //@line 243 "../../iup_detachbox.c"
   $123 = HEAP8[$10>>0]|0; //@line 243 "../../iup_detachbox.c"
   $124 = HEAP8[$11>>0]|0; //@line 243 "../../iup_detachbox.c"
   $125 = HEAP8[$12>>0]|0; //@line 243 "../../iup_detachbox.c"
   _iupDrawRectangle($114,$116,$118,$120,$122,$123,$124,$125,0); //@line 243 "../../iup_detachbox.c"
  }
  $126 = $3; //@line 246 "../../iup_detachbox.c"
  $127 = $7; //@line 246 "../../iup_detachbox.c"
  $128 = (($127) + 5)|0; //@line 246 "../../iup_detachbox.c"
  $129 = $8; //@line 246 "../../iup_detachbox.c"
  $130 = (($129) + 1)|0; //@line 246 "../../iup_detachbox.c"
  $131 = $7; //@line 246 "../../iup_detachbox.c"
  $132 = (($131) + 6)|0; //@line 246 "../../iup_detachbox.c"
  $133 = $8; //@line 246 "../../iup_detachbox.c"
  $134 = (($133) + 2)|0; //@line 246 "../../iup_detachbox.c"
  $135 = $13; //@line 246 "../../iup_detachbox.c"
  $136 = $14; //@line 246 "../../iup_detachbox.c"
  $137 = $15; //@line 246 "../../iup_detachbox.c"
  _iupDrawRectangle($126,$128,$130,$132,$134,$135,$136,$137,0); //@line 246 "../../iup_detachbox.c"
  $138 = $3; //@line 247 "../../iup_detachbox.c"
  $139 = $7; //@line 247 "../../iup_detachbox.c"
  $140 = (($139) + 4)|0; //@line 247 "../../iup_detachbox.c"
  $141 = $8; //@line 247 "../../iup_detachbox.c"
  $142 = $7; //@line 247 "../../iup_detachbox.c"
  $143 = (($142) + 5)|0; //@line 247 "../../iup_detachbox.c"
  $144 = $8; //@line 247 "../../iup_detachbox.c"
  $145 = (($144) + 1)|0; //@line 247 "../../iup_detachbox.c"
  $146 = HEAP8[$10>>0]|0; //@line 247 "../../iup_detachbox.c"
  $147 = HEAP8[$11>>0]|0; //@line 247 "../../iup_detachbox.c"
  $148 = HEAP8[$12>>0]|0; //@line 247 "../../iup_detachbox.c"
  _iupDrawRectangle($138,$140,$141,$143,$145,$146,$147,$148,0); //@line 247 "../../iup_detachbox.c"
  $149 = $2; //@line 249 "../../iup_detachbox.c"
  $150 = ((($149)) + 72|0); //@line 249 "../../iup_detachbox.c"
  $151 = HEAP32[$150>>2]|0; //@line 249 "../../iup_detachbox.c"
  $152 = ((($151)) + 24|0); //@line 249 "../../iup_detachbox.c"
  $153 = HEAP32[$152>>2]|0; //@line 249 "../../iup_detachbox.c"
  $154 = ($153|0)==(0); //@line 249 "../../iup_detachbox.c"
  if ($154) {
   $155 = $8; //@line 250 "../../iup_detachbox.c"
   $156 = (($155) + 4)|0; //@line 250 "../../iup_detachbox.c"
   $8 = $156; //@line 250 "../../iup_detachbox.c"
  } else {
   $157 = $7; //@line 252 "../../iup_detachbox.c"
   $158 = (($157) + 4)|0; //@line 252 "../../iup_detachbox.c"
   $7 = $158; //@line 252 "../../iup_detachbox.c"
  }
  $159 = $4; //@line 235 "../../iup_detachbox.c"
  $160 = (($159) + 1)|0; //@line 235 "../../iup_detachbox.c"
  $4 = $160; //@line 235 "../../iup_detachbox.c"
 }
 $196 = $3; //@line 277 "../../iup_detachbox.c"
 _iupDrawFlush($196); //@line 277 "../../iup_detachbox.c"
 $197 = $3; //@line 279 "../../iup_detachbox.c"
 _iupDrawKillCanvas($197); //@line 279 "../../iup_detachbox.c"
 STACKTOP = sp;return -2; //@line 281 "../../iup_detachbox.c"
}
function _iDetachBoxK_Any_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 193 "../../iup_detachbox.c"
 $5 = ((($4)) + 72|0); //@line 193 "../../iup_detachbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 193 "../../iup_detachbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 193 "../../iup_detachbox.c"
 $8 = ($7|0)!=(0); //@line 193 "../../iup_detachbox.c"
 $9 = $3; //@line 193 "../../iup_detachbox.c"
 $10 = ($9|0)==(65307); //@line 193 "../../iup_detachbox.c"
 $or$cond = $8 & $10; //@line 193 "../../iup_detachbox.c"
 if (!($or$cond)) {
  STACKTOP = sp;return -2; //@line 200 "../../iup_detachbox.c"
 }
 $11 = $2; //@line 195 "../../iup_detachbox.c"
 $12 = ((($11)) + 72|0); //@line 195 "../../iup_detachbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 195 "../../iup_detachbox.c"
 HEAP32[$13>>2] = 0; //@line 195 "../../iup_detachbox.c"
 $14 = $2; //@line 197 "../../iup_detachbox.c"
 $15 = ((($14)) + 64|0); //@line 197 "../../iup_detachbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 197 "../../iup_detachbox.c"
 _IupSetAttribute($16,15959,3560); //@line 197 "../../iup_detachbox.c"
 STACKTOP = sp;return -2; //@line 200 "../../iup_detachbox.c"
}
function _iupDialogGetNativeParent($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 35 "../../iup_dialog.c"
 $5 = (_IupGetAttributeHandle($4,3571)|0); //@line 35 "../../iup_dialog.c"
 $3 = $5; //@line 35 "../../iup_dialog.c"
 $6 = $3; //@line 36 "../../iup_dialog.c"
 $7 = ($6|0)!=(0|0); //@line 36 "../../iup_dialog.c"
 if ($7) {
  $8 = $3; //@line 36 "../../iup_dialog.c"
  $9 = ((($8)) + 16|0); //@line 36 "../../iup_dialog.c"
  $10 = HEAP32[$9>>2]|0; //@line 36 "../../iup_dialog.c"
  $11 = ($10|0)!=(0|0); //@line 36 "../../iup_dialog.c"
  if ($11) {
   $12 = $3; //@line 37 "../../iup_dialog.c"
   $13 = ((($12)) + 16|0); //@line 37 "../../iup_dialog.c"
   $14 = HEAP32[$13>>2]|0; //@line 37 "../../iup_dialog.c"
   $1 = $14; //@line 37 "../../iup_dialog.c"
   $17 = $1; //@line 40 "../../iup_dialog.c"
   STACKTOP = sp;return ($17|0); //@line 40 "../../iup_dialog.c"
  }
 }
 $15 = $2; //@line 39 "../../iup_dialog.c"
 $16 = (_iupAttribGet($15,3584)|0); //@line 39 "../../iup_dialog.c"
 $1 = $16; //@line 39 "../../iup_dialog.c"
 $17 = $1; //@line 40 "../../iup_dialog.c"
 STACKTOP = sp;return ($17|0); //@line 40 "../../iup_dialog.c"
}
function _iupDialogEnterModal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 175 "../../iup_dialog.c"
 $6 = HEAP32[2]|0; //@line 175 "../../iup_dialog.c"
 $7 = ($5|0)==($6|0); //@line 175 "../../iup_dialog.c"
 if (!($7)) {
  ___assert_fail((3597|0),(3628|0),175,(3647|0)); //@line 175 "../../iup_dialog.c"
  // unreachable; //@line 175 "../../iup_dialog.c"
 }
 $8 = (_iupDlgListFirst()|0); //@line 178 "../../iup_dialog.c"
 $4 = $8; //@line 178 "../../iup_dialog.c"
 while(1) {
  $9 = $4; //@line 178 "../../iup_dialog.c"
  $10 = ($9|0)!=(0|0); //@line 178 "../../iup_dialog.c"
  if (!($10)) {
   break;
  }
  $11 = $4; //@line 180 "../../iup_dialog.c"
  $12 = $2; //@line 180 "../../iup_dialog.c"
  $13 = ($11|0)!=($12|0); //@line 180 "../../iup_dialog.c"
  if ($13) {
   $14 = $4; //@line 181 "../../iup_dialog.c"
   $15 = ((($14)) + 16|0); //@line 181 "../../iup_dialog.c"
   $16 = HEAP32[$15>>2]|0; //@line 181 "../../iup_dialog.c"
   $17 = ($16|0)!=(0|0); //@line 181 "../../iup_dialog.c"
   if ($17) {
    $18 = $4; //@line 182 "../../iup_dialog.c"
    $19 = (_iupdrvDialogIsVisible($18)|0); //@line 182 "../../iup_dialog.c"
    $20 = ($19|0)!=(0); //@line 182 "../../iup_dialog.c"
    if ($20) {
     $21 = $4; //@line 183 "../../iup_dialog.c"
     $22 = ((($21)) + 72|0); //@line 183 "../../iup_dialog.c"
     $23 = HEAP32[$22>>2]|0; //@line 183 "../../iup_dialog.c"
     $24 = ((($23)) + 12|0); //@line 183 "../../iup_dialog.c"
     $25 = HEAP32[$24>>2]|0; //@line 183 "../../iup_dialog.c"
     $26 = ($25|0)==(0); //@line 183 "../../iup_dialog.c"
     if ($26) {
      $27 = $4; //@line 185 "../../iup_dialog.c"
      _iupdrvSetActive($27,0); //@line 185 "../../iup_dialog.c"
      $28 = HEAP32[2]|0; //@line 186 "../../iup_dialog.c"
      $29 = $4; //@line 186 "../../iup_dialog.c"
      $30 = ((($29)) + 72|0); //@line 186 "../../iup_dialog.c"
      $31 = HEAP32[$30>>2]|0; //@line 186 "../../iup_dialog.c"
      $32 = ((($31)) + 12|0); //@line 186 "../../iup_dialog.c"
      HEAP32[$32>>2] = $28; //@line 186 "../../iup_dialog.c"
     }
    }
   }
  }
  $33 = (_iupDlgListNext()|0); //@line 178 "../../iup_dialog.c"
  $4 = $33; //@line 178 "../../iup_dialog.c"
 }
 $34 = HEAP32[2]|0; //@line 190 "../../iup_dialog.c"
 $35 = (($34) + 1)|0; //@line 190 "../../iup_dialog.c"
 HEAP32[2] = $35; //@line 190 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 191 "../../iup_dialog.c"
}
function _iupDialogLeaveModal($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 212 "../../iup_dialog.c"
 $4 = HEAP32[2]|0; //@line 212 "../../iup_dialog.c"
 $5 = ($3|0)==($4|0); //@line 212 "../../iup_dialog.c"
 if (!($5)) {
  ___assert_fail((3597|0),(3628|0),212,(3667|0)); //@line 212 "../../iup_dialog.c"
  // unreachable; //@line 212 "../../iup_dialog.c"
 }
 $6 = (_iupDlgListFirst()|0); //@line 215 "../../iup_dialog.c"
 $2 = $6; //@line 215 "../../iup_dialog.c"
 while(1) {
  $7 = $2; //@line 215 "../../iup_dialog.c"
  $8 = ($7|0)!=(0|0); //@line 215 "../../iup_dialog.c"
  if (!($8)) {
   break;
  }
  $9 = $2; //@line 217 "../../iup_dialog.c"
  $10 = ((($9)) + 16|0); //@line 217 "../../iup_dialog.c"
  $11 = HEAP32[$10>>2]|0; //@line 217 "../../iup_dialog.c"
  $12 = ($11|0)!=(0|0); //@line 217 "../../iup_dialog.c"
  if ($12) {
   $13 = $2; //@line 219 "../../iup_dialog.c"
   $14 = ((($13)) + 72|0); //@line 219 "../../iup_dialog.c"
   $15 = HEAP32[$14>>2]|0; //@line 219 "../../iup_dialog.c"
   $16 = ((($15)) + 12|0); //@line 219 "../../iup_dialog.c"
   $17 = HEAP32[$16>>2]|0; //@line 219 "../../iup_dialog.c"
   $18 = HEAP32[2]|0; //@line 219 "../../iup_dialog.c"
   $19 = (($18) - 1)|0; //@line 219 "../../iup_dialog.c"
   $20 = ($17|0)==($19|0); //@line 219 "../../iup_dialog.c"
   if ($20) {
    $21 = $2; //@line 221 "../../iup_dialog.c"
    _iupdrvSetActive($21,1); //@line 221 "../../iup_dialog.c"
    $22 = $2; //@line 222 "../../iup_dialog.c"
    $23 = ((($22)) + 72|0); //@line 222 "../../iup_dialog.c"
    $24 = HEAP32[$23>>2]|0; //@line 222 "../../iup_dialog.c"
    $25 = ((($24)) + 12|0); //@line 222 "../../iup_dialog.c"
    HEAP32[$25>>2] = 0; //@line 222 "../../iup_dialog.c"
   }
  }
  $26 = (_iupDlgListNext()|0); //@line 215 "../../iup_dialog.c"
  $2 = $26; //@line 215 "../../iup_dialog.c"
 }
 $27 = HEAP32[2]|0; //@line 227 "../../iup_dialog.c"
 $28 = (($27) + -1)|0; //@line 227 "../../iup_dialog.c"
 HEAP32[2] = $28; //@line 227 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 228 "../../iup_dialog.c"
}
function _iupDialogPopup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $4 = $0;
 HEAP32[$5>>2] = $1;
 HEAP32[$6>>2] = $2;
 $9 = $4; //@line 425 "../../iup_dialog.c"
 $10 = HEAP32[$5>>2]|0; //@line 425 "../../iup_dialog.c"
 $11 = HEAP32[$6>>2]|0; //@line 425 "../../iup_dialog.c"
 $12 = (_iupClassObjectDlgPopup($9,$10,$11)|0); //@line 425 "../../iup_dialog.c"
 $8 = $12; //@line 425 "../../iup_dialog.c"
 $13 = $8; //@line 426 "../../iup_dialog.c"
 $14 = ($13|0)!=(-1); //@line 426 "../../iup_dialog.c"
 if ($14) {
  $15 = $8; //@line 427 "../../iup_dialog.c"
  $3 = $15; //@line 427 "../../iup_dialog.c"
  $49 = $3; //@line 484 "../../iup_dialog.c"
  STACKTOP = sp;return ($49|0); //@line 484 "../../iup_dialog.c"
 }
 $16 = $4; //@line 429 "../../iup_dialog.c"
 $17 = ((($16)) + 72|0); //@line 429 "../../iup_dialog.c"
 $18 = HEAP32[$17>>2]|0; //@line 429 "../../iup_dialog.c"
 HEAP32[$18>>2] = 0; //@line 429 "../../iup_dialog.c"
 $19 = $4; //@line 433 "../../iup_dialog.c"
 $20 = (_iupdrvDialogIsVisible($19)|0); //@line 433 "../../iup_dialog.c"
 $7 = $20; //@line 433 "../../iup_dialog.c"
 $21 = $4; //@line 436 "../../iup_dialog.c"
 $22 = (_iupdrvDialogSetPlacement($21)|0); //@line 436 "../../iup_dialog.c"
 $23 = ($22|0)!=(0); //@line 436 "../../iup_dialog.c"
 if (!($23)) {
  $24 = $4; //@line 438 "../../iup_dialog.c"
  _iDialogAdjustPos($24,$5,$6); //@line 438 "../../iup_dialog.c"
  $25 = $4; //@line 439 "../../iup_dialog.c"
  $26 = HEAP32[$5>>2]|0; //@line 439 "../../iup_dialog.c"
  $27 = HEAP32[$6>>2]|0; //@line 439 "../../iup_dialog.c"
  _iupdrvDialogSetPosition($25,$26,$27); //@line 439 "../../iup_dialog.c"
 }
 $28 = $7; //@line 442 "../../iup_dialog.c"
 $29 = ($28|0)!=(0); //@line 442 "../../iup_dialog.c"
 $30 = $4; //@line 445 "../../iup_dialog.c"
 if ($29) {
  _iupdrvDialogSetVisible($30,1); //@line 445 "../../iup_dialog.c"
  $31 = $4; //@line 448 "../../iup_dialog.c"
  _iDialogAfterShow($31); //@line 448 "../../iup_dialog.c"
  $3 = 0; //@line 449 "../../iup_dialog.c"
  $49 = $3; //@line 484 "../../iup_dialog.c"
  STACKTOP = sp;return ($49|0); //@line 484 "../../iup_dialog.c"
 }
 $32 = (_iupAttribGetBoolean($30,3687)|0); //@line 452 "../../iup_dialog.c"
 $33 = ($32|0)!=(0); //@line 452 "../../iup_dialog.c"
 if ($33) {
  $3 = 0; //@line 453 "../../iup_dialog.c"
  $49 = $3; //@line 484 "../../iup_dialog.c"
  STACKTOP = sp;return ($49|0); //@line 484 "../../iup_dialog.c"
 }
 $34 = $4; //@line 455 "../../iup_dialog.c"
 _iDialogSetModal($34); //@line 455 "../../iup_dialog.c"
 $35 = $4; //@line 457 "../../iup_dialog.c"
 $36 = ((($35)) + 72|0); //@line 457 "../../iup_dialog.c"
 $37 = HEAP32[$36>>2]|0; //@line 457 "../../iup_dialog.c"
 $38 = ((($37)) + 4|0); //@line 457 "../../iup_dialog.c"
 HEAP32[$38>>2] = 1; //@line 457 "../../iup_dialog.c"
 $39 = $4; //@line 461 "../../iup_dialog.c"
 $40 = (_iupdrvDialogIsVisible($39)|0); //@line 461 "../../iup_dialog.c"
 $41 = ($40|0)!=(0); //@line 461 "../../iup_dialog.c"
 if (!($41)) {
  $42 = $4; //@line 462 "../../iup_dialog.c"
  _iupdrvDialogSetVisible($42,1); //@line 462 "../../iup_dialog.c"
 }
 _iupDlgListVisibleInc(); //@line 465 "../../iup_dialog.c"
 $43 = $4; //@line 468 "../../iup_dialog.c"
 _iDialogAfterShow($43); //@line 468 "../../iup_dialog.c"
 (_IupMainLoop()|0); //@line 471 "../../iup_dialog.c"
 $44 = $4; //@line 475 "../../iup_dialog.c"
 $45 = (_iupObjectCheck($44)|0); //@line 475 "../../iup_dialog.c"
 $46 = ($45|0)!=(0); //@line 475 "../../iup_dialog.c"
 if ($46) {
  $47 = $4; //@line 477 "../../iup_dialog.c"
  _iDialogUnSetModal($47); //@line 477 "../../iup_dialog.c"
  $48 = $4; //@line 478 "../../iup_dialog.c"
  _iupDialogHide($48); //@line 478 "../../iup_dialog.c"
 } else {
  _iDialogListCheckLastVisible(); //@line 481 "../../iup_dialog.c"
 }
 $3 = 0; //@line 483 "../../iup_dialog.c"
 $49 = $3; //@line 484 "../../iup_dialog.c"
 STACKTOP = sp;return ($49|0); //@line 484 "../../iup_dialog.c"
}
function _iDialogAdjustPos($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $6 = sp + 48|0;
 $7 = sp + 44|0;
 $8 = sp + 40|0;
 $9 = sp + 36|0;
 $10 = sp + 32|0;
 $11 = sp + 28|0;
 $12 = sp + 24|0;
 $13 = sp + 20|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 HEAP32[$6>>2] = 0; //@line 56 "../../iup_dialog.c"
 HEAP32[$7>>2] = 0; //@line 56 "../../iup_dialog.c"
 HEAP32[$8>>2] = 0; //@line 57 "../../iup_dialog.c"
 HEAP32[$9>>2] = 0; //@line 57 "../../iup_dialog.c"
 HEAP32[$10>>2] = 0; //@line 58 "../../iup_dialog.c"
 HEAP32[$11>>2] = 0; //@line 58 "../../iup_dialog.c"
 HEAP32[$12>>2] = 0; //@line 59 "../../iup_dialog.c"
 HEAP32[$13>>2] = 0; //@line 59 "../../iup_dialog.c"
 $19 = $4; //@line 63 "../../iup_dialog.c"
 $20 = HEAP32[$19>>2]|0; //@line 63 "../../iup_dialog.c"
 $21 = ($20|0)==(65531); //@line 63 "../../iup_dialog.c"
 if ($21) {
  label = 3;
 } else {
  $22 = $5; //@line 63 "../../iup_dialog.c"
  $23 = HEAP32[$22>>2]|0; //@line 63 "../../iup_dialog.c"
  $24 = ($23|0)==(65531); //@line 63 "../../iup_dialog.c"
  if ($24) {
   label = 3;
  }
 }
 do {
  if ((label|0) == 3) {
   $25 = $3; //@line 66 "../../iup_dialog.c"
   $26 = ((($25)) + 72|0); //@line 66 "../../iup_dialog.c"
   $27 = HEAP32[$26>>2]|0; //@line 66 "../../iup_dialog.c"
   $28 = ((($27)) + 4|0); //@line 66 "../../iup_dialog.c"
   $29 = HEAP32[$28>>2]|0; //@line 66 "../../iup_dialog.c"
   $30 = ($29|0)!=(0); //@line 66 "../../iup_dialog.c"
   if ($30) {
    $45 = $3; //@line 77 "../../iup_dialog.c"
    _iupdrvDialogGetPosition($45,0,$10,$11); //@line 77 "../../iup_dialog.c"
    break;
   }
   $14 = 65535; //@line 68 "../../iup_dialog.c"
   $31 = $3; //@line 69 "../../iup_dialog.c"
   $32 = (_iupDialogGetNativeParent($31)|0); //@line 69 "../../iup_dialog.c"
   $15 = $32; //@line 69 "../../iup_dialog.c"
   $33 = $15; //@line 70 "../../iup_dialog.c"
   $34 = ($33|0)!=(0|0); //@line 70 "../../iup_dialog.c"
   if ($34) {
    $14 = 65530; //@line 71 "../../iup_dialog.c"
   }
   $35 = $4; //@line 73 "../../iup_dialog.c"
   $36 = HEAP32[$35>>2]|0; //@line 73 "../../iup_dialog.c"
   $37 = ($36|0)==(65531); //@line 73 "../../iup_dialog.c"
   if ($37) {
    $38 = $14; //@line 73 "../../iup_dialog.c"
    $39 = $4; //@line 73 "../../iup_dialog.c"
    HEAP32[$39>>2] = $38; //@line 73 "../../iup_dialog.c"
   }
   $40 = $5; //@line 74 "../../iup_dialog.c"
   $41 = HEAP32[$40>>2]|0; //@line 74 "../../iup_dialog.c"
   $42 = ($41|0)==(65531); //@line 74 "../../iup_dialog.c"
   if ($42) {
    $43 = $14; //@line 74 "../../iup_dialog.c"
    $44 = $5; //@line 74 "../../iup_dialog.c"
    HEAP32[$44>>2] = $43; //@line 74 "../../iup_dialog.c"
   }
  }
 } while(0);
 $46 = $4; //@line 80 "../../iup_dialog.c"
 $47 = HEAP32[$46>>2]|0; //@line 80 "../../iup_dialog.c"
 $48 = ($47|0)==(65535); //@line 80 "../../iup_dialog.c"
 if ($48) {
  label = 17;
 } else {
  $49 = $5; //@line 80 "../../iup_dialog.c"
  $50 = HEAP32[$49>>2]|0; //@line 80 "../../iup_dialog.c"
  $51 = ($50|0)==(65535); //@line 80 "../../iup_dialog.c"
  if ($51) {
   label = 17;
  } else {
   $52 = $4; //@line 81 "../../iup_dialog.c"
   $53 = HEAP32[$52>>2]|0; //@line 81 "../../iup_dialog.c"
   $54 = ($53|0)==(65533); //@line 81 "../../iup_dialog.c"
   if ($54) {
    label = 17;
   } else {
    $55 = $5; //@line 81 "../../iup_dialog.c"
    $56 = HEAP32[$55>>2]|0; //@line 81 "../../iup_dialog.c"
    $57 = ($56|0)==(65533); //@line 81 "../../iup_dialog.c"
    if ($57) {
     label = 17;
    } else {
     $58 = $4; //@line 82 "../../iup_dialog.c"
     $59 = HEAP32[$58>>2]|0; //@line 82 "../../iup_dialog.c"
     $60 = ($59|0)==(65530); //@line 82 "../../iup_dialog.c"
     if ($60) {
      label = 17;
     } else {
      $61 = $5; //@line 82 "../../iup_dialog.c"
      $62 = HEAP32[$61>>2]|0; //@line 82 "../../iup_dialog.c"
      $63 = ($62|0)==(65530); //@line 82 "../../iup_dialog.c"
      if ($63) {
       label = 17;
      }
     }
    }
   }
  }
 }
 if ((label|0) == 17) {
  _iupdrvGetScreenSize($8,$9); //@line 83 "../../iup_dialog.c"
 }
 $64 = $4; //@line 85 "../../iup_dialog.c"
 $65 = HEAP32[$64>>2]|0; //@line 85 "../../iup_dialog.c"
 $66 = ($65|0)==(65530); //@line 85 "../../iup_dialog.c"
 if ($66) {
  label = 20;
 } else {
  $67 = $5; //@line 85 "../../iup_dialog.c"
  $68 = HEAP32[$67>>2]|0; //@line 85 "../../iup_dialog.c"
  $69 = ($68|0)==(65530); //@line 85 "../../iup_dialog.c"
  if ($69) {
   label = 20;
  }
 }
 do {
  if ((label|0) == 20) {
   $70 = $3; //@line 87 "../../iup_dialog.c"
   $71 = (_iupDialogGetNativeParent($70)|0); //@line 87 "../../iup_dialog.c"
   $16 = $71; //@line 87 "../../iup_dialog.c"
   $72 = $16; //@line 88 "../../iup_dialog.c"
   $73 = ($72|0)!=(0|0); //@line 88 "../../iup_dialog.c"
   if ($73) {
    $74 = $3; //@line 90 "../../iup_dialog.c"
    $75 = (_IupGetAttributeHandle($74,3571)|0); //@line 90 "../../iup_dialog.c"
    $17 = $75; //@line 90 "../../iup_dialog.c"
    $76 = $17; //@line 92 "../../iup_dialog.c"
    $77 = $16; //@line 92 "../../iup_dialog.c"
    _iupdrvDialogGetPosition($76,$77,$12,$13); //@line 92 "../../iup_dialog.c"
    $78 = $4; //@line 94 "../../iup_dialog.c"
    $79 = HEAP32[$78>>2]|0; //@line 94 "../../iup_dialog.c"
    $80 = ($79|0)==(65530); //@line 94 "../../iup_dialog.c"
    if ($80) {
     $81 = $5; //@line 94 "../../iup_dialog.c"
     $82 = HEAP32[$81>>2]|0; //@line 94 "../../iup_dialog.c"
     $83 = ($82|0)==(65530); //@line 94 "../../iup_dialog.c"
     if ($83) {
      $84 = $17; //@line 95 "../../iup_dialog.c"
      $85 = $16; //@line 95 "../../iup_dialog.c"
      _iupdrvDialogGetSize($84,$85,$8,$9); //@line 95 "../../iup_dialog.c"
      break;
     }
    }
    $86 = $4; //@line 96 "../../iup_dialog.c"
    $87 = HEAP32[$86>>2]|0; //@line 96 "../../iup_dialog.c"
    $88 = ($87|0)==(65530); //@line 96 "../../iup_dialog.c"
    if ($88) {
     $89 = $17; //@line 97 "../../iup_dialog.c"
     $90 = $16; //@line 97 "../../iup_dialog.c"
     _iupdrvDialogGetSize($89,$90,$8,0); //@line 97 "../../iup_dialog.c"
     break;
    }
    $91 = $5; //@line 98 "../../iup_dialog.c"
    $92 = HEAP32[$91>>2]|0; //@line 98 "../../iup_dialog.c"
    $93 = ($92|0)==(65530); //@line 98 "../../iup_dialog.c"
    if ($93) {
     $94 = $17; //@line 99 "../../iup_dialog.c"
     $95 = $16; //@line 99 "../../iup_dialog.c"
     _iupdrvDialogGetSize($94,$95,0,$9); //@line 99 "../../iup_dialog.c"
    }
   }
  }
 } while(0);
 $96 = $4; //@line 103 "../../iup_dialog.c"
 $97 = HEAP32[$96>>2]|0; //@line 103 "../../iup_dialog.c"
 $98 = ($97|0)==(65532); //@line 103 "../../iup_dialog.c"
 if ($98) {
  label = 30;
 } else {
  $99 = $5; //@line 103 "../../iup_dialog.c"
  $100 = HEAP32[$99>>2]|0; //@line 103 "../../iup_dialog.c"
  $101 = ($100|0)==(65532); //@line 103 "../../iup_dialog.c"
  if ($101) {
   label = 30;
  }
 }
 if ((label|0) == 30) {
  _iupdrvGetCursorPos($6,$7); //@line 104 "../../iup_dialog.c"
 }
 $102 = $3; //@line 106 "../../iup_dialog.c"
 $103 = (_iupAttribGetBoolean($102,3761)|0); //@line 106 "../../iup_dialog.c"
 $104 = ($103|0)!=(0); //@line 106 "../../iup_dialog.c"
 if ($104) {
  $105 = $3; //@line 108 "../../iup_dialog.c"
  $106 = (_iupAttribGet($105,3770)|0); //@line 108 "../../iup_dialog.c"
  $18 = $106; //@line 108 "../../iup_dialog.c"
  $107 = $18; //@line 109 "../../iup_dialog.c"
  $108 = ($107|0)!=(0|0); //@line 109 "../../iup_dialog.c"
  if ($108) {
   HEAP32[$12>>2] = 0; //@line 112 "../../iup_dialog.c"
   HEAP32[$13>>2] = 0; //@line 113 "../../iup_dialog.c"
   $109 = $18; //@line 116 "../../iup_dialog.c"
   $110 = ((($109)) + 52|0); //@line 116 "../../iup_dialog.c"
   $111 = HEAP32[$110>>2]|0; //@line 116 "../../iup_dialog.c"
   HEAP32[$8>>2] = $111; //@line 116 "../../iup_dialog.c"
   $112 = $18; //@line 117 "../../iup_dialog.c"
   $113 = ((($112)) + 56|0); //@line 117 "../../iup_dialog.c"
   $114 = HEAP32[$113>>2]|0; //@line 117 "../../iup_dialog.c"
   HEAP32[$9>>2] = $114; //@line 117 "../../iup_dialog.c"
   $115 = $18; //@line 119 "../../iup_dialog.c"
   _iupdrvScreenToClient($115,$10,$11); //@line 119 "../../iup_dialog.c"
   $116 = $18; //@line 120 "../../iup_dialog.c"
   _iupdrvScreenToClient($116,$6,$7); //@line 120 "../../iup_dialog.c"
  }
 }
 $117 = $4; //@line 124 "../../iup_dialog.c"
 $118 = HEAP32[$117>>2]|0; //@line 124 "../../iup_dialog.c"
 switch ($118|0) {
 case 65530:  {
  $119 = HEAP32[$8>>2]|0; //@line 127 "../../iup_dialog.c"
  $120 = $3; //@line 127 "../../iup_dialog.c"
  $121 = ((($120)) + 52|0); //@line 127 "../../iup_dialog.c"
  $122 = HEAP32[$121>>2]|0; //@line 127 "../../iup_dialog.c"
  $123 = (($119) - ($122))|0; //@line 127 "../../iup_dialog.c"
  $124 = (($123|0) / 2)&-1; //@line 127 "../../iup_dialog.c"
  $125 = HEAP32[$12>>2]|0; //@line 127 "../../iup_dialog.c"
  $126 = (($124) + ($125))|0; //@line 127 "../../iup_dialog.c"
  $127 = $4; //@line 127 "../../iup_dialog.c"
  HEAP32[$127>>2] = $126; //@line 127 "../../iup_dialog.c"
  break;
 }
 case 65535:  {
  $128 = HEAP32[$8>>2]|0; //@line 130 "../../iup_dialog.c"
  $129 = $3; //@line 130 "../../iup_dialog.c"
  $130 = ((($129)) + 52|0); //@line 130 "../../iup_dialog.c"
  $131 = HEAP32[$130>>2]|0; //@line 130 "../../iup_dialog.c"
  $132 = (($128) - ($131))|0; //@line 130 "../../iup_dialog.c"
  $133 = (($132|0) / 2)&-1; //@line 130 "../../iup_dialog.c"
  $134 = $4; //@line 130 "../../iup_dialog.c"
  HEAP32[$134>>2] = $133; //@line 130 "../../iup_dialog.c"
  break;
 }
 case 65534:  {
  $135 = $4; //@line 133 "../../iup_dialog.c"
  HEAP32[$135>>2] = 0; //@line 133 "../../iup_dialog.c"
  break;
 }
 case 65533:  {
  $136 = HEAP32[$8>>2]|0; //@line 136 "../../iup_dialog.c"
  $137 = $3; //@line 136 "../../iup_dialog.c"
  $138 = ((($137)) + 52|0); //@line 136 "../../iup_dialog.c"
  $139 = HEAP32[$138>>2]|0; //@line 136 "../../iup_dialog.c"
  $140 = (($136) - ($139))|0; //@line 136 "../../iup_dialog.c"
  $141 = $4; //@line 136 "../../iup_dialog.c"
  HEAP32[$141>>2] = $140; //@line 136 "../../iup_dialog.c"
  break;
 }
 case 65532:  {
  $142 = HEAP32[$6>>2]|0; //@line 139 "../../iup_dialog.c"
  $143 = $4; //@line 139 "../../iup_dialog.c"
  HEAP32[$143>>2] = $142; //@line 139 "../../iup_dialog.c"
  break;
 }
 case 65531:  {
  $144 = HEAP32[$10>>2]|0; //@line 142 "../../iup_dialog.c"
  $145 = $4; //@line 142 "../../iup_dialog.c"
  HEAP32[$145>>2] = $144; //@line 142 "../../iup_dialog.c"
  break;
 }
 default: {
 }
 }
 $146 = $5; //@line 146 "../../iup_dialog.c"
 $147 = HEAP32[$146>>2]|0; //@line 146 "../../iup_dialog.c"
 switch ($147|0) {
 case 65530:  {
  $148 = HEAP32[$9>>2]|0; //@line 149 "../../iup_dialog.c"
  $149 = $3; //@line 149 "../../iup_dialog.c"
  $150 = ((($149)) + 56|0); //@line 149 "../../iup_dialog.c"
  $151 = HEAP32[$150>>2]|0; //@line 149 "../../iup_dialog.c"
  $152 = (($148) - ($151))|0; //@line 149 "../../iup_dialog.c"
  $153 = (($152|0) / 2)&-1; //@line 149 "../../iup_dialog.c"
  $154 = HEAP32[$13>>2]|0; //@line 149 "../../iup_dialog.c"
  $155 = (($153) + ($154))|0; //@line 149 "../../iup_dialog.c"
  $156 = $5; //@line 149 "../../iup_dialog.c"
  HEAP32[$156>>2] = $155; //@line 149 "../../iup_dialog.c"
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
  break;
 }
 case 65535:  {
  $157 = HEAP32[$9>>2]|0; //@line 152 "../../iup_dialog.c"
  $158 = $3; //@line 152 "../../iup_dialog.c"
  $159 = ((($158)) + 56|0); //@line 152 "../../iup_dialog.c"
  $160 = HEAP32[$159>>2]|0; //@line 152 "../../iup_dialog.c"
  $161 = (($157) - ($160))|0; //@line 152 "../../iup_dialog.c"
  $162 = (($161|0) / 2)&-1; //@line 152 "../../iup_dialog.c"
  $163 = $5; //@line 152 "../../iup_dialog.c"
  HEAP32[$163>>2] = $162; //@line 152 "../../iup_dialog.c"
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
  break;
 }
 case 65534:  {
  $164 = $5; //@line 155 "../../iup_dialog.c"
  HEAP32[$164>>2] = 0; //@line 155 "../../iup_dialog.c"
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
  break;
 }
 case 65533:  {
  $165 = HEAP32[$9>>2]|0; //@line 158 "../../iup_dialog.c"
  $166 = $3; //@line 158 "../../iup_dialog.c"
  $167 = ((($166)) + 56|0); //@line 158 "../../iup_dialog.c"
  $168 = HEAP32[$167>>2]|0; //@line 158 "../../iup_dialog.c"
  $169 = (($165) - ($168))|0; //@line 158 "../../iup_dialog.c"
  $170 = $5; //@line 158 "../../iup_dialog.c"
  HEAP32[$170>>2] = $169; //@line 158 "../../iup_dialog.c"
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
  break;
 }
 case 65532:  {
  $171 = HEAP32[$7>>2]|0; //@line 161 "../../iup_dialog.c"
  $172 = $5; //@line 161 "../../iup_dialog.c"
  HEAP32[$172>>2] = $171; //@line 161 "../../iup_dialog.c"
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
  break;
 }
 case 65531:  {
  $173 = HEAP32[$11>>2]|0; //@line 164 "../../iup_dialog.c"
  $174 = $5; //@line 164 "../../iup_dialog.c"
  HEAP32[$174>>2] = $173; //@line 164 "../../iup_dialog.c"
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
  break;
 }
 default: {
  $175 = $4; //@line 168 "../../iup_dialog.c"
  $176 = $5; //@line 168 "../../iup_dialog.c"
  _iupdrvAddScreenOffset($175,$176,1); //@line 168 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 169 "../../iup_dialog.c"
 }
 }
}
function _iDialogAfterShow($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 _IupFlush(); //@line 363 "../../iup_dialog.c"
 $6 = (_IupGetFocus()|0); //@line 365 "../../iup_dialog.c"
 $2 = $6; //@line 365 "../../iup_dialog.c"
 $7 = $1; //@line 366 "../../iup_dialog.c"
 $8 = ((($7)) + 72|0); //@line 366 "../../iup_dialog.c"
 $9 = HEAP32[$8>>2]|0; //@line 366 "../../iup_dialog.c"
 $10 = HEAP32[$9>>2]|0; //@line 366 "../../iup_dialog.c"
 $4 = $10; //@line 366 "../../iup_dialog.c"
 $11 = $1; //@line 368 "../../iup_dialog.c"
 $12 = (_IupGetCallback($11,3702)|0); //@line 368 "../../iup_dialog.c"
 $3 = $12; //@line 368 "../../iup_dialog.c"
 $13 = $3; //@line 369 "../../iup_dialog.c"
 $14 = ($13|0)!=(0|0); //@line 369 "../../iup_dialog.c"
 if ($14) {
  $15 = $3; //@line 369 "../../iup_dialog.c"
  $16 = $1; //@line 369 "../../iup_dialog.c"
  $17 = $4; //@line 369 "../../iup_dialog.c"
  $18 = (FUNCTION_TABLE_iii[$15 & 1023]($16,$17)|0); //@line 369 "../../iup_dialog.c"
  $19 = ($18|0)==(-3); //@line 369 "../../iup_dialog.c"
  if ($19) {
   _IupExitLoop(); //@line 371 "../../iup_dialog.c"
   STACKTOP = sp;return; //@line 390 "../../iup_dialog.c"
  }
 }
 $20 = $4; //@line 375 "../../iup_dialog.c"
 $21 = ($20|0)==(0); //@line 375 "../../iup_dialog.c"
 if (!($21)) {
  STACKTOP = sp;return; //@line 390 "../../iup_dialog.c"
 }
 $22 = $3; //@line 377 "../../iup_dialog.c"
 $23 = ($22|0)!=(0|0); //@line 377 "../../iup_dialog.c"
 if ($23) {
  _IupFlush(); //@line 378 "../../iup_dialog.c"
 }
 $24 = $2; //@line 381 "../../iup_dialog.c"
 $25 = (_IupGetFocus()|0); //@line 381 "../../iup_dialog.c"
 $26 = ($24|0)==($25|0); //@line 381 "../../iup_dialog.c"
 if (!($26)) {
  STACKTOP = sp;return; //@line 390 "../../iup_dialog.c"
 }
 $27 = $1; //@line 383 "../../iup_dialog.c"
 $28 = (_IupGetAttributeHandle($27,3750)|0); //@line 383 "../../iup_dialog.c"
 $5 = $28; //@line 383 "../../iup_dialog.c"
 $29 = $5; //@line 384 "../../iup_dialog.c"
 $30 = ($29|0)!=(0|0); //@line 384 "../../iup_dialog.c"
 if ($30) {
  $31 = $5; //@line 385 "../../iup_dialog.c"
  (_IupSetFocus($31)|0); //@line 385 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 390 "../../iup_dialog.c"
 } else {
  $32 = $1; //@line 387 "../../iup_dialog.c"
  (_IupNextField($32)|0); //@line 387 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 390 "../../iup_dialog.c"
 }
}
function _iDialogSetModal($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 195 "../../iup_dialog.c"
 _iupAttribSet($4,3687,20441); //@line 195 "../../iup_dialog.c"
 $5 = (_IupGetFunction(3730)|0); //@line 198 "../../iup_dialog.c"
 $2 = $5; //@line 198 "../../iup_dialog.c"
 $6 = HEAP32[2]|0; //@line 199 "../../iup_dialog.c"
 $3 = $6; //@line 199 "../../iup_dialog.c"
 $7 = $1; //@line 201 "../../iup_dialog.c"
 $8 = $3; //@line 201 "../../iup_dialog.c"
 _iupDialogEnterModal($7,$8); //@line 201 "../../iup_dialog.c"
 $9 = $2; //@line 203 "../../iup_dialog.c"
 $10 = ($9|0)!=(0|0); //@line 203 "../../iup_dialog.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 206 "../../iup_dialog.c"
 }
 $11 = $2; //@line 204 "../../iup_dialog.c"
 $12 = $3; //@line 204 "../../iup_dialog.c"
 FUNCTION_TABLE_vi[$11 & 1023]($12); //@line 204 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 206 "../../iup_dialog.c"
}
function _iDialogUnSetModal($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 232 "../../iup_dialog.c"
 $5 = (_iupAttribGetBoolean($4,3687)|0); //@line 232 "../../iup_dialog.c"
 $6 = ($5|0)!=(0); //@line 232 "../../iup_dialog.c"
 if (!($6)) {
  STACKTOP = sp;return; //@line 246 "../../iup_dialog.c"
 }
 $7 = $1; //@line 235 "../../iup_dialog.c"
 _iupAttribSet($7,3687,0); //@line 235 "../../iup_dialog.c"
 $8 = (_IupGetFunction(3710)|0); //@line 238 "../../iup_dialog.c"
 $2 = $8; //@line 238 "../../iup_dialog.c"
 $9 = HEAP32[2]|0; //@line 239 "../../iup_dialog.c"
 $3 = $9; //@line 239 "../../iup_dialog.c"
 $10 = $3; //@line 241 "../../iup_dialog.c"
 _iupDialogLeaveModal($10); //@line 241 "../../iup_dialog.c"
 $11 = $2; //@line 243 "../../iup_dialog.c"
 $12 = ($11|0)!=(0|0); //@line 243 "../../iup_dialog.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 246 "../../iup_dialog.c"
 }
 $13 = $2; //@line 244 "../../iup_dialog.c"
 $14 = $3; //@line 244 "../../iup_dialog.c"
 FUNCTION_TABLE_vi[$13 & 1023]($14); //@line 244 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 246 "../../iup_dialog.c"
}
function _iupDialogHide($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 541 "../../iup_dialog.c"
 $3 = (_iupdrvDialogIsVisible($2)|0); //@line 541 "../../iup_dialog.c"
 $4 = ($3|0)!=(0); //@line 541 "../../iup_dialog.c"
 if (!($4)) {
  $5 = $1; //@line 541 "../../iup_dialog.c"
  $6 = ((($5)) + 72|0); //@line 541 "../../iup_dialog.c"
  $7 = HEAP32[$6>>2]|0; //@line 541 "../../iup_dialog.c"
  $8 = HEAP32[$7>>2]|0; //@line 541 "../../iup_dialog.c"
  $9 = ($8|0)==(4); //@line 541 "../../iup_dialog.c"
  if ($9) {
   STACKTOP = sp;return; //@line 568 "../../iup_dialog.c"
  }
 }
 $10 = $1; //@line 545 "../../iup_dialog.c"
 $11 = ((($10)) + 72|0); //@line 545 "../../iup_dialog.c"
 $12 = HEAP32[$11>>2]|0; //@line 545 "../../iup_dialog.c"
 HEAP32[$12>>2] = 4; //@line 545 "../../iup_dialog.c"
 $13 = $1; //@line 548 "../../iup_dialog.c"
 $14 = (_iupAttribGetBoolean($13,3687)|0); //@line 548 "../../iup_dialog.c"
 $15 = ($14|0)!=(0); //@line 548 "../../iup_dialog.c"
 if ($15) {
  $16 = $1; //@line 550 "../../iup_dialog.c"
  _iDialogUnSetModal($16); //@line 550 "../../iup_dialog.c"
  _IupExitLoop(); //@line 551 "../../iup_dialog.c"
 }
 $17 = $1; //@line 554 "../../iup_dialog.c"
 $18 = ((($17)) + 72|0); //@line 554 "../../iup_dialog.c"
 $19 = HEAP32[$18>>2]|0; //@line 554 "../../iup_dialog.c"
 $20 = ((($19)) + 8|0); //@line 554 "../../iup_dialog.c"
 HEAP32[$20>>2] = 1; //@line 554 "../../iup_dialog.c"
 $21 = $1; //@line 557 "../../iup_dialog.c"
 _iupdrvDialogSetVisible($21,0); //@line 557 "../../iup_dialog.c"
 $22 = $1; //@line 559 "../../iup_dialog.c"
 $23 = ((($22)) + 72|0); //@line 559 "../../iup_dialog.c"
 $24 = HEAP32[$23>>2]|0; //@line 559 "../../iup_dialog.c"
 $25 = ((($24)) + 8|0); //@line 559 "../../iup_dialog.c"
 HEAP32[$25>>2] = 0; //@line 559 "../../iup_dialog.c"
 _iupDlgListVisibleDec(); //@line 562 "../../iup_dialog.c"
 $26 = $1; //@line 565 "../../iup_dialog.c"
 _iDialogAfterHide($26); //@line 565 "../../iup_dialog.c"
 _iDialogListCheckLastVisible(); //@line 567 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 568 "../../iup_dialog.c"
}
function _iDialogListCheckLastVisible() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupDlgListVisibleCount()|0); //@line 410 "../../iup_dialog.c"
 $1 = ($0|0)<=(0); //@line 410 "../../iup_dialog.c"
 if ($1) {
  $2 = (_IupGetGlobal(3693)|0); //@line 414 "../../iup_dialog.c"
  $3 = (_iupStrBoolean($2)|0); //@line 414 "../../iup_dialog.c"
  $4 = ($3|0)!=(0); //@line 414 "../../iup_dialog.c"
  if (!($4)) {
   _IupExitLoop(); //@line 416 "../../iup_dialog.c"
  }
 }
 return; //@line 419 "../../iup_dialog.c"
}
function _iDialogAfterHide($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 _IupFlush(); //@line 347 "../../iup_dialog.c"
 $3 = $1; //@line 349 "../../iup_dialog.c"
 $4 = (_IupGetCallback($3,3702)|0); //@line 349 "../../iup_dialog.c"
 $2 = $4; //@line 349 "../../iup_dialog.c"
 $5 = $2; //@line 350 "../../iup_dialog.c"
 $6 = ($5|0)!=(0|0); //@line 350 "../../iup_dialog.c"
 if (!($6)) {
  STACKTOP = sp;return; //@line 354 "../../iup_dialog.c"
 }
 $7 = $2; //@line 350 "../../iup_dialog.c"
 $8 = $1; //@line 350 "../../iup_dialog.c"
 $9 = $1; //@line 350 "../../iup_dialog.c"
 $10 = ((($9)) + 72|0); //@line 350 "../../iup_dialog.c"
 $11 = HEAP32[$10>>2]|0; //@line 350 "../../iup_dialog.c"
 $12 = HEAP32[$11>>2]|0; //@line 350 "../../iup_dialog.c"
 $13 = (FUNCTION_TABLE_iii[$7 & 1023]($8,$12)|0); //@line 350 "../../iup_dialog.c"
 $14 = ($13|0)==(-3); //@line 350 "../../iup_dialog.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 354 "../../iup_dialog.c"
 }
 _IupExitLoop(); //@line 352 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 354 "../../iup_dialog.c"
}
function _iupDialogShowXY($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $4 = $0;
 HEAP32[$5>>2] = $1;
 HEAP32[$6>>2] = $2;
 $8 = $4; //@line 491 "../../iup_dialog.c"
 $9 = (_iupAttribGetBoolean($8,3687)|0); //@line 491 "../../iup_dialog.c"
 $10 = ($9|0)!=(0); //@line 491 "../../iup_dialog.c"
 if ($10) {
  $3 = 0; //@line 492 "../../iup_dialog.c"
  $43 = $3; //@line 536 "../../iup_dialog.c"
  STACKTOP = sp;return ($43|0); //@line 536 "../../iup_dialog.c"
 }
 $11 = $4; //@line 494 "../../iup_dialog.c"
 $12 = ((($11)) + 72|0); //@line 494 "../../iup_dialog.c"
 $13 = HEAP32[$12>>2]|0; //@line 494 "../../iup_dialog.c"
 $14 = ((($13)) + 12|0); //@line 494 "../../iup_dialog.c"
 $15 = HEAP32[$14>>2]|0; //@line 494 "../../iup_dialog.c"
 $16 = ($15|0)!=(0); //@line 494 "../../iup_dialog.c"
 if ($16) {
  $17 = $4; //@line 497 "../../iup_dialog.c"
  _iupdrvSetActive($17,1); //@line 497 "../../iup_dialog.c"
  $18 = $4; //@line 498 "../../iup_dialog.c"
  $19 = ((($18)) + 72|0); //@line 498 "../../iup_dialog.c"
  $20 = HEAP32[$19>>2]|0; //@line 498 "../../iup_dialog.c"
  $21 = ((($20)) + 12|0); //@line 498 "../../iup_dialog.c"
  HEAP32[$21>>2] = 0; //@line 498 "../../iup_dialog.c"
 }
 $22 = $4; //@line 503 "../../iup_dialog.c"
 $23 = (_iupdrvDialogIsVisible($22)|0); //@line 503 "../../iup_dialog.c"
 $7 = $23; //@line 503 "../../iup_dialog.c"
 $24 = $4; //@line 506 "../../iup_dialog.c"
 $25 = (_iupdrvDialogSetPlacement($24)|0); //@line 506 "../../iup_dialog.c"
 $26 = ($25|0)!=(0); //@line 506 "../../iup_dialog.c"
 if (!($26)) {
  $27 = $4; //@line 508 "../../iup_dialog.c"
  _iDialogAdjustPos($27,$5,$6); //@line 508 "../../iup_dialog.c"
  $28 = $4; //@line 509 "../../iup_dialog.c"
  $29 = HEAP32[$5>>2]|0; //@line 509 "../../iup_dialog.c"
  $30 = HEAP32[$6>>2]|0; //@line 509 "../../iup_dialog.c"
  _iupdrvDialogSetPosition($28,$29,$30); //@line 509 "../../iup_dialog.c"
 }
 $31 = $7; //@line 512 "../../iup_dialog.c"
 $32 = ($31|0)!=(0); //@line 512 "../../iup_dialog.c"
 $33 = $4; //@line 515 "../../iup_dialog.c"
 if ($32) {
  _iupdrvDialogSetVisible($33,1); //@line 515 "../../iup_dialog.c"
  $34 = $4; //@line 518 "../../iup_dialog.c"
  _iDialogAfterShow($34); //@line 518 "../../iup_dialog.c"
  $3 = 0; //@line 519 "../../iup_dialog.c"
  $43 = $3; //@line 536 "../../iup_dialog.c"
  STACKTOP = sp;return ($43|0); //@line 536 "../../iup_dialog.c"
 }
 $35 = ((($33)) + 72|0); //@line 522 "../../iup_dialog.c"
 $36 = HEAP32[$35>>2]|0; //@line 522 "../../iup_dialog.c"
 $37 = ((($36)) + 4|0); //@line 522 "../../iup_dialog.c"
 HEAP32[$37>>2] = 1; //@line 522 "../../iup_dialog.c"
 $38 = $4; //@line 526 "../../iup_dialog.c"
 $39 = (_iupdrvDialogIsVisible($38)|0); //@line 526 "../../iup_dialog.c"
 $40 = ($39|0)!=(0); //@line 526 "../../iup_dialog.c"
 if (!($40)) {
  $41 = $4; //@line 527 "../../iup_dialog.c"
  _iupdrvDialogSetVisible($41,1); //@line 527 "../../iup_dialog.c"
 }
 _iupDlgListVisibleInc(); //@line 530 "../../iup_dialog.c"
 $42 = $4; //@line 533 "../../iup_dialog.c"
 _iDialogAfterShow($42); //@line 533 "../../iup_dialog.c"
 $3 = 0; //@line 535 "../../iup_dialog.c"
 $43 = $3; //@line 536 "../../iup_dialog.c"
 STACKTOP = sp;return ($43|0); //@line 536 "../../iup_dialog.c"
}
function _iupDialogGetDecorSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 746 "../../iup_dialog.c"
 _iupdrvDialogGetDecoration($9,$6,$7,$8); //@line 746 "../../iup_dialog.c"
 $10 = HEAP32[$6>>2]|0; //@line 748 "../../iup_dialog.c"
 $11 = $10<<1; //@line 748 "../../iup_dialog.c"
 $12 = $4; //@line 748 "../../iup_dialog.c"
 HEAP32[$12>>2] = $11; //@line 748 "../../iup_dialog.c"
 $13 = HEAP32[$6>>2]|0; //@line 749 "../../iup_dialog.c"
 $14 = $13<<1; //@line 749 "../../iup_dialog.c"
 $15 = HEAP32[$7>>2]|0; //@line 749 "../../iup_dialog.c"
 $16 = (($14) + ($15))|0; //@line 749 "../../iup_dialog.c"
 $17 = HEAP32[$8>>2]|0; //@line 749 "../../iup_dialog.c"
 $18 = (($16) + ($17))|0; //@line 749 "../../iup_dialog.c"
 $19 = $5; //@line 749 "../../iup_dialog.c"
 HEAP32[$19>>2] = $18; //@line 749 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 750 "../../iup_dialog.c"
}
function _IupDialog($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 852 "../../iup_dialog.c"
 HEAP32[$2>>2] = $3; //@line 852 "../../iup_dialog.c"
 $4 = ((($2)) + 4|0); //@line 853 "../../iup_dialog.c"
 HEAP32[$4>>2] = 0; //@line 853 "../../iup_dialog.c"
 $5 = (_IupCreatev(15165,$2)|0); //@line 854 "../../iup_dialog.c"
 STACKTOP = sp;return ($5|0); //@line 854 "../../iup_dialog.c"
}
function _iupDialogNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 859 "../../iup_dialog.c"
 $0 = $1; //@line 859 "../../iup_dialog.c"
 $2 = $0; //@line 861 "../../iup_dialog.c"
 HEAP32[$2>>2] = 15165; //@line 861 "../../iup_dialog.c"
 $3 = $0; //@line 862 "../../iup_dialog.c"
 $4 = ((($3)) + 4|0); //@line 862 "../../iup_dialog.c"
 HEAP32[$4>>2] = 15852; //@line 862 "../../iup_dialog.c"
 $5 = $0; //@line 863 "../../iup_dialog.c"
 $6 = ((($5)) + 8|0); //@line 863 "../../iup_dialog.c"
 HEAP32[$6>>2] = 3; //@line 863 "../../iup_dialog.c"
 $7 = $0; //@line 864 "../../iup_dialog.c"
 $8 = ((($7)) + 12|0); //@line 864 "../../iup_dialog.c"
 HEAP32[$8>>2] = 2; //@line 864 "../../iup_dialog.c"
 $9 = $0; //@line 865 "../../iup_dialog.c"
 $10 = ((($9)) + 16|0); //@line 865 "../../iup_dialog.c"
 HEAP32[$10>>2] = 1; //@line 865 "../../iup_dialog.c"
 $11 = $0; //@line 868 "../../iup_dialog.c"
 $12 = ((($11)) + 32|0); //@line 868 "../../iup_dialog.c"
 HEAP32[$12>>2] = 123; //@line 868 "../../iup_dialog.c"
 $13 = $0; //@line 869 "../../iup_dialog.c"
 $14 = ((($13)) + 40|0); //@line 869 "../../iup_dialog.c"
 HEAP32[$14>>2] = 124; //@line 869 "../../iup_dialog.c"
 $15 = $0; //@line 870 "../../iup_dialog.c"
 $16 = ((($15)) + 52|0); //@line 870 "../../iup_dialog.c"
 HEAP32[$16>>2] = 125; //@line 870 "../../iup_dialog.c"
 $17 = $0; //@line 871 "../../iup_dialog.c"
 $18 = ((($17)) + 76|0); //@line 871 "../../iup_dialog.c"
 HEAP32[$18>>2] = 126; //@line 871 "../../iup_dialog.c"
 $19 = $0; //@line 872 "../../iup_dialog.c"
 $20 = ((($19)) + 80|0); //@line 872 "../../iup_dialog.c"
 HEAP32[$20>>2] = 127; //@line 872 "../../iup_dialog.c"
 $21 = $0; //@line 873 "../../iup_dialog.c"
 $22 = ((($21)) + 84|0); //@line 873 "../../iup_dialog.c"
 HEAP32[$22>>2] = 128; //@line 873 "../../iup_dialog.c"
 $23 = $0; //@line 876 "../../iup_dialog.c"
 _iupClassRegisterCallback($23,3702,17949); //@line 876 "../../iup_dialog.c"
 $24 = $0; //@line 877 "../../iup_dialog.c"
 _iupClassRegisterCallback($24,3787,17878); //@line 877 "../../iup_dialog.c"
 $25 = $0; //@line 878 "../../iup_dialog.c"
 _iupClassRegisterCallback($25,3797,362470); //@line 878 "../../iup_dialog.c"
 $26 = $0; //@line 881 "../../iup_dialog.c"
 _iupBaseRegisterCommonCallbacks($26); //@line 881 "../../iup_dialog.c"
 $27 = $0; //@line 886 "../../iup_dialog.c"
 _iupBaseRegisterCommonAttrib($27); //@line 886 "../../iup_dialog.c"
 $28 = $0; //@line 889 "../../iup_dialog.c"
 _iupClassRegisterAttribute($28,20003,129,130,0,0,521); //@line 889 "../../iup_dialog.c"
 $29 = $0; //@line 890 "../../iup_dialog.c"
 _iupClassRegisterAttribute($29,20008,131,132,0,0,521); //@line 890 "../../iup_dialog.c"
 $30 = $0; //@line 891 "../../iup_dialog.c"
 _iupClassRegisterAttribute($30,3806,0,0,0,0,1024); //@line 891 "../../iup_dialog.c"
 $31 = $0; //@line 894 "../../iup_dialog.c"
 _iupClassRegisterAttribute($31,20073,20,0,(-1),20441,9); //@line 894 "../../iup_dialog.c"
 $32 = $0; //@line 897 "../../iup_dialog.c"
 _iupClassRegisterAttribute($32,17403,0,0,0,0,9); //@line 897 "../../iup_dialog.c"
 $33 = $0; //@line 900 "../../iup_dialog.c"
 _iupBaseRegisterVisualAttrib($33); //@line 900 "../../iup_dialog.c"
 $34 = $0; //@line 903 "../../iup_dialog.c"
 _iupClassRegisterAttribute($34,3815,93,133,(-1),20441,1); //@line 903 "../../iup_dialog.c"
 $35 = $0; //@line 906 "../../iup_dialog.c"
 _iupdrvRegisterDragDropAttrib($35); //@line 906 "../../iup_dialog.c"
 $36 = $0; //@line 910 "../../iup_dialog.c"
 _iupClassRegisterAttribute($36,20132,91,134,(-1),20140,513); //@line 910 "../../iup_dialog.c"
 $37 = $0; //@line 913 "../../iup_dialog.c"
 _iupClassRegisterAttribute($37,3823,135,0,0,0,35); //@line 913 "../../iup_dialog.c"
 $38 = $0; //@line 914 "../../iup_dialog.c"
 _iupClassRegisterAttribute($38,3825,136,0,0,0,35); //@line 914 "../../iup_dialog.c"
 $39 = $0; //@line 915 "../../iup_dialog.c"
 _iupClassRegisterAttribute($39,3827,137,0,0,0,35); //@line 915 "../../iup_dialog.c"
 $40 = $0; //@line 918 "../../iup_dialog.c"
 _iupClassRegisterAttribute($40,3842,0,138,0,0,9); //@line 918 "../../iup_dialog.c"
 $41 = $0; //@line 919 "../../iup_dialog.c"
 _iupClassRegisterAttribute($41,15959,0,57,(-1),14265,2049); //@line 919 "../../iup_dialog.c"
 $42 = $0; //@line 920 "../../iup_dialog.c"
 _iupClassRegisterAttribute($42,3847,0,139,0,0,1); //@line 920 "../../iup_dialog.c"
 $43 = $0; //@line 921 "../../iup_dialog.c"
 _iupClassRegisterAttribute($43,15350,0,0,(-1),20441,1); //@line 921 "../../iup_dialog.c"
 $44 = $0; //@line 922 "../../iup_dialog.c"
 _iupClassRegisterAttribute($44,15364,0,0,(-1),20441,1); //@line 922 "../../iup_dialog.c"
 $45 = $0; //@line 923 "../../iup_dialog.c"
 _iupClassRegisterAttribute($45,15357,0,0,(-1),20441,1); //@line 923 "../../iup_dialog.c"
 $46 = $0; //@line 924 "../../iup_dialog.c"
 _iupClassRegisterAttribute($46,15343,0,0,(-1),20441,1); //@line 924 "../../iup_dialog.c"
 $47 = $0; //@line 925 "../../iup_dialog.c"
 _iupClassRegisterAttribute($47,17637,0,0,(-1),20441,1); //@line 925 "../../iup_dialog.c"
 $48 = $0; //@line 927 "../../iup_dialog.c"
 _iupClassRegisterAttribute($48,3859,0,0,0,0,2049); //@line 927 "../../iup_dialog.c"
 $49 = $0; //@line 928 "../../iup_dialog.c"
 _iupClassRegisterAttribute($49,15328,0,0,0,0,2049); //@line 928 "../../iup_dialog.c"
 $50 = $0; //@line 929 "../../iup_dialog.c"
 _iupClassRegisterAttribute($50,15069,0,140,0,0,9); //@line 929 "../../iup_dialog.c"
 $51 = $0; //@line 930 "../../iup_dialog.c"
 _iupClassRegisterAttribute($51,3571,0,0,0,0,2049); //@line 930 "../../iup_dialog.c"
 $52 = $0; //@line 931 "../../iup_dialog.c"
 _iupClassRegisterAttribute($52,14224,0,0,0,0,1); //@line 931 "../../iup_dialog.c"
 $53 = $0; //@line 932 "../../iup_dialog.c"
 _iupClassRegisterAttribute($53,3750,0,0,0,0,1); //@line 932 "../../iup_dialog.c"
 $54 = $0; //@line 933 "../../iup_dialog.c"
 _iupClassRegisterAttribute($54,3687,0,0,0,0,33); //@line 933 "../../iup_dialog.c"
 $55 = $0; //@line 934 "../../iup_dialog.c"
 _iupClassRegisterAttribute($55,3872,0,0,3882,0,1); //@line 934 "../../iup_dialog.c"
 $56 = $0; //@line 936 "../../iup_dialog.c"
 _iupClassRegisterAttribute($56,3584,0,0,0,0,4); //@line 936 "../../iup_dialog.c"
 $57 = $0; //@line 938 "../../iup_dialog.c"
 _iupdrvDialogInitClass($57); //@line 938 "../../iup_dialog.c"
 $58 = $0; //@line 940 "../../iup_dialog.c"
 STACKTOP = sp;return ($58|0); //@line 940 "../../iup_dialog.c"
}
function _iDialogCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = (_calloc(1,28)|0); //@line 250 "../../iup_dialog.c"
 $6 = $2; //@line 250 "../../iup_dialog.c"
 $7 = ((($6)) + 72|0); //@line 250 "../../iup_dialog.c"
 HEAP32[$7>>2] = $5; //@line 250 "../../iup_dialog.c"
 $8 = $2; //@line 252 "../../iup_dialog.c"
 $9 = ((($8)) + 72|0); //@line 252 "../../iup_dialog.c"
 $10 = HEAP32[$9>>2]|0; //@line 252 "../../iup_dialog.c"
 $11 = ((($10)) + 16|0); //@line 252 "../../iup_dialog.c"
 HEAP32[$11>>2] = 100; //@line 252 "../../iup_dialog.c"
 $12 = $2; //@line 253 "../../iup_dialog.c"
 $13 = ((($12)) + 72|0); //@line 253 "../../iup_dialog.c"
 $14 = HEAP32[$13>>2]|0; //@line 253 "../../iup_dialog.c"
 HEAP32[$14>>2] = 4; //@line 253 "../../iup_dialog.c"
 $15 = $3; //@line 255 "../../iup_dialog.c"
 $16 = ($15|0)!=(0|0); //@line 255 "../../iup_dialog.c"
 if ($16) {
  $17 = $3; //@line 257 "../../iup_dialog.c"
  $4 = $17; //@line 257 "../../iup_dialog.c"
  $18 = $4; //@line 258 "../../iup_dialog.c"
  $19 = HEAP32[$18>>2]|0; //@line 258 "../../iup_dialog.c"
  $20 = ($19|0)!=(0|0); //@line 258 "../../iup_dialog.c"
  if ($20) {
   $21 = $2; //@line 259 "../../iup_dialog.c"
   $22 = $4; //@line 259 "../../iup_dialog.c"
   $23 = HEAP32[$22>>2]|0; //@line 259 "../../iup_dialog.c"
   (_IupAppend($21,$23)|0); //@line 259 "../../iup_dialog.c"
  }
 }
 $24 = $2; //@line 262 "../../iup_dialog.c"
 _iupDlgListAdd($24); //@line 262 "../../iup_dialog.c"
 STACKTOP = sp;return 0; //@line 264 "../../iup_dialog.c"
}
function _iDialogDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 269 "../../iup_dialog.c"
 _iupDlgListRemove($2); //@line 269 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 270 "../../iup_dialog.c"
}
function _iDialogComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 12|0;
 $9 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $12 = $4; //@line 277 "../../iup_dialog.c"
 $13 = ((($12)) + 64|0); //@line 277 "../../iup_dialog.c"
 $14 = HEAP32[$13>>2]|0; //@line 277 "../../iup_dialog.c"
 $10 = $14; //@line 277 "../../iup_dialog.c"
 $15 = $4; //@line 281 "../../iup_dialog.c"
 $16 = (_iupAttribGet($15,3842)|0); //@line 281 "../../iup_dialog.c"
 $11 = $16; //@line 281 "../../iup_dialog.c"
 $17 = $4; //@line 282 "../../iup_dialog.c"
 $18 = ((($17)) + 72|0); //@line 282 "../../iup_dialog.c"
 $19 = HEAP32[$18>>2]|0; //@line 282 "../../iup_dialog.c"
 $20 = ((($19)) + 24|0); //@line 282 "../../iup_dialog.c"
 $21 = HEAP32[$20>>2]|0; //@line 282 "../../iup_dialog.c"
 $22 = ($21|0)==(0|0); //@line 282 "../../iup_dialog.c"
 $23 = $11; //@line 282 "../../iup_dialog.c"
 $24 = ($23|0)!=(0|0); //@line 282 "../../iup_dialog.c"
 $or$cond = $22 & $24; //@line 282 "../../iup_dialog.c"
 if ($or$cond) {
  $25 = $4; //@line 283 "../../iup_dialog.c"
  $26 = $11; //@line 283 "../../iup_dialog.c"
  (_iDialogSetMenuAttrib($25,$26)|0); //@line 283 "../../iup_dialog.c"
 }
 $27 = $4; //@line 285 "../../iup_dialog.c"
 _iupDialogGetDecorSize($27,$8,$9); //@line 285 "../../iup_dialog.c"
 $28 = HEAP32[$8>>2]|0; //@line 286 "../../iup_dialog.c"
 $29 = $5; //@line 286 "../../iup_dialog.c"
 HEAP32[$29>>2] = $28; //@line 286 "../../iup_dialog.c"
 $30 = HEAP32[$9>>2]|0; //@line 287 "../../iup_dialog.c"
 $31 = $6; //@line 287 "../../iup_dialog.c"
 HEAP32[$31>>2] = $30; //@line 287 "../../iup_dialog.c"
 $32 = $10; //@line 289 "../../iup_dialog.c"
 $33 = ($32|0)!=(0|0); //@line 289 "../../iup_dialog.c"
 if (!($33)) {
  STACKTOP = sp;return; //@line 298 "../../iup_dialog.c"
 }
 $34 = $10; //@line 292 "../../iup_dialog.c"
 _iupBaseComputeNaturalSize($34); //@line 292 "../../iup_dialog.c"
 $35 = $10; //@line 294 "../../iup_dialog.c"
 $36 = ((($35)) + 20|0); //@line 294 "../../iup_dialog.c"
 $37 = HEAP32[$36>>2]|0; //@line 294 "../../iup_dialog.c"
 $38 = $7; //@line 294 "../../iup_dialog.c"
 HEAP32[$38>>2] = $37; //@line 294 "../../iup_dialog.c"
 $39 = $10; //@line 295 "../../iup_dialog.c"
 $40 = ((($39)) + 44|0); //@line 295 "../../iup_dialog.c"
 $41 = HEAP32[$40>>2]|0; //@line 295 "../../iup_dialog.c"
 $42 = $5; //@line 295 "../../iup_dialog.c"
 $43 = HEAP32[$42>>2]|0; //@line 295 "../../iup_dialog.c"
 $44 = (($43) + ($41))|0; //@line 295 "../../iup_dialog.c"
 HEAP32[$42>>2] = $44; //@line 295 "../../iup_dialog.c"
 $45 = $10; //@line 296 "../../iup_dialog.c"
 $46 = ((($45)) + 48|0); //@line 296 "../../iup_dialog.c"
 $47 = HEAP32[$46>>2]|0; //@line 296 "../../iup_dialog.c"
 $48 = $6; //@line 296 "../../iup_dialog.c"
 $49 = HEAP32[$48>>2]|0; //@line 296 "../../iup_dialog.c"
 $50 = (($49) + ($47))|0; //@line 296 "../../iup_dialog.c"
 HEAP32[$48>>2] = $50; //@line 296 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 298 "../../iup_dialog.c"
}
function _iDialogSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $8 = $3; //@line 304 "../../iup_dialog.c"
 $9 = ($8|0)!=(0); //@line 304 "../../iup_dialog.c"
 $10 = $2; //@line 306 "../../iup_dialog.c"
 if ($9) {
  $11 = ((($10)) + 52|0); //@line 306 "../../iup_dialog.c"
  $12 = HEAP32[$11>>2]|0; //@line 306 "../../iup_dialog.c"
  $6 = $12; //@line 306 "../../iup_dialog.c"
  $13 = $2; //@line 307 "../../iup_dialog.c"
  $14 = ((($13)) + 56|0); //@line 307 "../../iup_dialog.c"
  $15 = HEAP32[$14>>2]|0; //@line 307 "../../iup_dialog.c"
  $7 = $15; //@line 307 "../../iup_dialog.c"
 } else {
  $16 = ((($10)) + 44|0); //@line 311 "../../iup_dialog.c"
  $17 = HEAP32[$16>>2]|0; //@line 311 "../../iup_dialog.c"
  $18 = $2; //@line 311 "../../iup_dialog.c"
  $19 = ((($18)) + 52|0); //@line 311 "../../iup_dialog.c"
  $20 = HEAP32[$19>>2]|0; //@line 311 "../../iup_dialog.c"
  $21 = ($17|0)>($20|0); //@line 311 "../../iup_dialog.c"
  $22 = $2; //@line 311 "../../iup_dialog.c"
  if ($21) {
   $23 = ((($22)) + 44|0); //@line 311 "../../iup_dialog.c"
   $24 = HEAP32[$23>>2]|0; //@line 311 "../../iup_dialog.c"
   $27 = $24;
  } else {
   $25 = ((($22)) + 52|0); //@line 311 "../../iup_dialog.c"
   $26 = HEAP32[$25>>2]|0; //@line 311 "../../iup_dialog.c"
   $27 = $26;
  }
  $6 = $27; //@line 311 "../../iup_dialog.c"
  $28 = $2; //@line 312 "../../iup_dialog.c"
  $29 = ((($28)) + 48|0); //@line 312 "../../iup_dialog.c"
  $30 = HEAP32[$29>>2]|0; //@line 312 "../../iup_dialog.c"
  $31 = $2; //@line 312 "../../iup_dialog.c"
  $32 = ((($31)) + 56|0); //@line 312 "../../iup_dialog.c"
  $33 = HEAP32[$32>>2]|0; //@line 312 "../../iup_dialog.c"
  $34 = ($30|0)>($33|0); //@line 312 "../../iup_dialog.c"
  $35 = $2; //@line 312 "../../iup_dialog.c"
  if ($34) {
   $36 = ((($35)) + 48|0); //@line 312 "../../iup_dialog.c"
   $37 = HEAP32[$36>>2]|0; //@line 312 "../../iup_dialog.c"
   $40 = $37;
  } else {
   $38 = ((($35)) + 56|0); //@line 312 "../../iup_dialog.c"
   $39 = HEAP32[$38>>2]|0; //@line 312 "../../iup_dialog.c"
   $40 = $39;
  }
  $7 = $40; //@line 312 "../../iup_dialog.c"
 }
 $41 = $2; //@line 315 "../../iup_dialog.c"
 _iupDialogGetDecorSize($41,$4,$5); //@line 315 "../../iup_dialog.c"
 $42 = HEAP32[$4>>2]|0; //@line 317 "../../iup_dialog.c"
 $43 = $6; //@line 317 "../../iup_dialog.c"
 $44 = (($43) - ($42))|0; //@line 317 "../../iup_dialog.c"
 $6 = $44; //@line 317 "../../iup_dialog.c"
 $45 = HEAP32[$5>>2]|0; //@line 318 "../../iup_dialog.c"
 $46 = $7; //@line 318 "../../iup_dialog.c"
 $47 = (($46) - ($45))|0; //@line 318 "../../iup_dialog.c"
 $7 = $47; //@line 318 "../../iup_dialog.c"
 $48 = $6; //@line 319 "../../iup_dialog.c"
 $49 = ($48|0)<(0); //@line 319 "../../iup_dialog.c"
 if ($49) {
  $6 = 0; //@line 319 "../../iup_dialog.c"
 }
 $50 = $7; //@line 320 "../../iup_dialog.c"
 $51 = ($50|0)<(0); //@line 320 "../../iup_dialog.c"
 if (!($51)) {
  $52 = $2; //@line 322 "../../iup_dialog.c"
  $53 = ((($52)) + 64|0); //@line 322 "../../iup_dialog.c"
  $54 = HEAP32[$53>>2]|0; //@line 322 "../../iup_dialog.c"
  $55 = $6; //@line 322 "../../iup_dialog.c"
  $56 = $7; //@line 322 "../../iup_dialog.c"
  $57 = $3; //@line 322 "../../iup_dialog.c"
  _iupBaseSetCurrentSize($54,$55,$56,$57); //@line 322 "../../iup_dialog.c"
  STACKTOP = sp;return; //@line 323 "../../iup_dialog.c"
 }
 $7 = 0; //@line 320 "../../iup_dialog.c"
 $52 = $2; //@line 322 "../../iup_dialog.c"
 $53 = ((($52)) + 64|0); //@line 322 "../../iup_dialog.c"
 $54 = HEAP32[$53>>2]|0; //@line 322 "../../iup_dialog.c"
 $55 = $6; //@line 322 "../../iup_dialog.c"
 $56 = $7; //@line 322 "../../iup_dialog.c"
 $57 = $3; //@line 322 "../../iup_dialog.c"
 _iupBaseSetCurrentSize($54,$55,$56,$57); //@line 322 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 323 "../../iup_dialog.c"
}
function _iDialogSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 $7 = $3; //@line 327 "../../iup_dialog.c"
 $8 = ((($7)) + 64|0); //@line 327 "../../iup_dialog.c"
 $9 = HEAP32[$8>>2]|0; //@line 327 "../../iup_dialog.c"
 $10 = ($9|0)!=(0|0); //@line 327 "../../iup_dialog.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 340 "../../iup_dialog.c"
 }
 $11 = $3; //@line 329 "../../iup_dialog.c"
 $12 = (_iupAttribGet($11,17403)|0); //@line 329 "../../iup_dialog.c"
 $6 = $12; //@line 329 "../../iup_dialog.c"
 HEAP32[$4>>2] = 0; //@line 332 "../../iup_dialog.c"
 HEAP32[$5>>2] = 0; //@line 333 "../../iup_dialog.c"
 $13 = $6; //@line 335 "../../iup_dialog.c"
 $14 = ($13|0)!=(0|0); //@line 335 "../../iup_dialog.c"
 if ($14) {
  $15 = $6; //@line 335 "../../iup_dialog.c"
  (_iupStrToIntInt($15,$4,$5,120)|0); //@line 335 "../../iup_dialog.c"
 }
 $16 = $3; //@line 338 "../../iup_dialog.c"
 $17 = ((($16)) + 64|0); //@line 338 "../../iup_dialog.c"
 $18 = HEAP32[$17>>2]|0; //@line 338 "../../iup_dialog.c"
 $19 = HEAP32[$4>>2]|0; //@line 338 "../../iup_dialog.c"
 $20 = HEAP32[$5>>2]|0; //@line 338 "../../iup_dialog.c"
 _iupBaseSetPosition($18,$19,$20); //@line 338 "../../iup_dialog.c"
 STACKTOP = sp;return; //@line 340 "../../iup_dialog.c"
}
function _iDialogGetSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0.0, $27 = 0.0;
 var $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 12|0;
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp;
 $2 = $0;
 $7 = $2; //@line 648 "../../iup_dialog.c"
 $8 = ((($7)) + 16|0); //@line 648 "../../iup_dialog.c"
 $9 = HEAP32[$8>>2]|0; //@line 648 "../../iup_dialog.c"
 $10 = ($9|0)!=(0|0); //@line 648 "../../iup_dialog.c"
 $11 = $2; //@line 651 "../../iup_dialog.c"
 if ($10) {
  _iupdrvDialogGetSize($11,0,$5,$6); //@line 651 "../../iup_dialog.c"
 } else {
  $12 = ((($11)) + 36|0); //@line 655 "../../iup_dialog.c"
  $13 = HEAP32[$12>>2]|0; //@line 655 "../../iup_dialog.c"
  HEAP32[$5>>2] = $13; //@line 655 "../../iup_dialog.c"
  $14 = $2; //@line 656 "../../iup_dialog.c"
  $15 = ((($14)) + 40|0); //@line 656 "../../iup_dialog.c"
  $16 = HEAP32[$15>>2]|0; //@line 656 "../../iup_dialog.c"
  HEAP32[$6>>2] = $16; //@line 656 "../../iup_dialog.c"
 }
 $17 = $2; //@line 659 "../../iup_dialog.c"
 _iupdrvFontGetCharSize($17,$3,$4); //@line 659 "../../iup_dialog.c"
 $18 = HEAP32[$3>>2]|0; //@line 660 "../../iup_dialog.c"
 $19 = ($18|0)==(0); //@line 660 "../../iup_dialog.c"
 $20 = HEAP32[$4>>2]|0; //@line 660 "../../iup_dialog.c"
 $21 = ($20|0)==(0); //@line 660 "../../iup_dialog.c"
 $or$cond = $19 | $21; //@line 660 "../../iup_dialog.c"
 if ($or$cond) {
  $1 = 0; //@line 661 "../../iup_dialog.c"
  $39 = $1; //@line 664 "../../iup_dialog.c"
  STACKTOP = sp;return ($39|0); //@line 664 "../../iup_dialog.c"
 } else {
  $22 = HEAP32[$5>>2]|0; //@line 663 "../../iup_dialog.c"
  $23 = (+($22|0)); //@line 663 "../../iup_dialog.c"
  $24 = $23 * 4.0; //@line 663 "../../iup_dialog.c"
  $25 = HEAP32[$3>>2]|0; //@line 663 "../../iup_dialog.c"
  $26 = (+($25|0)); //@line 663 "../../iup_dialog.c"
  $27 = $24 / $26; //@line 663 "../../iup_dialog.c"
  $28 = $27 + 0.5; //@line 663 "../../iup_dialog.c"
  $29 = (~~(($28))); //@line 663 "../../iup_dialog.c"
  $30 = HEAP32[$6>>2]|0; //@line 663 "../../iup_dialog.c"
  $31 = (+($30|0)); //@line 663 "../../iup_dialog.c"
  $32 = $31 * 8.0; //@line 663 "../../iup_dialog.c"
  $33 = HEAP32[$4>>2]|0; //@line 663 "../../iup_dialog.c"
  $34 = (+($33|0)); //@line 663 "../../iup_dialog.c"
  $35 = $32 / $34; //@line 663 "../../iup_dialog.c"
  $36 = $35 + 0.5; //@line 663 "../../iup_dialog.c"
  $37 = (~~(($36))); //@line 663 "../../iup_dialog.c"
  $38 = (_iupStrReturnIntInt($29,$37,120)|0); //@line 663 "../../iup_dialog.c"
  $1 = $38; //@line 663 "../../iup_dialog.c"
  $39 = $1; //@line 664 "../../iup_dialog.c"
  STACKTOP = sp;return ($39|0); //@line 664 "../../iup_dialog.c"
 }
 return (0)|0;
}
function _iDialogSetSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0.0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $5 = sp + 48|0;
 $6 = sp + 28|0;
 $7 = sp + 24|0;
 $8 = sp + 20|0;
 $9 = sp + 16|0;
 $12 = sp + 4|0;
 $13 = sp;
 $2 = $0;
 $3 = $1;
 $14 = $3; //@line 587 "../../iup_dialog.c"
 $15 = ($14|0)!=(0|0); //@line 587 "../../iup_dialog.c"
 if (!($15)) {
  $16 = $2; //@line 589 "../../iup_dialog.c"
  $17 = ((($16)) + 36|0); //@line 589 "../../iup_dialog.c"
  HEAP32[$17>>2] = 0; //@line 589 "../../iup_dialog.c"
  $18 = $2; //@line 590 "../../iup_dialog.c"
  $19 = ((($18)) + 40|0); //@line 590 "../../iup_dialog.c"
  HEAP32[$19>>2] = 0; //@line 590 "../../iup_dialog.c"
  $66 = $2; //@line 638 "../../iup_dialog.c"
  $67 = ((($66)) + 52|0); //@line 638 "../../iup_dialog.c"
  HEAP32[$67>>2] = 0; //@line 638 "../../iup_dialog.c"
  $68 = $2; //@line 639 "../../iup_dialog.c"
  $69 = ((($68)) + 56|0); //@line 639 "../../iup_dialog.c"
  HEAP32[$69>>2] = 0; //@line 639 "../../iup_dialog.c"
  STACKTOP = sp;return 0; //@line 641 "../../iup_dialog.c"
 }
 $20 = $3; //@line 595 "../../iup_dialog.c"
 (_strcpy($5,$20)|0); //@line 595 "../../iup_dialog.c"
 $21 = (_strchr($5,120)|0); //@line 596 "../../iup_dialog.c"
 $4 = $21; //@line 596 "../../iup_dialog.c"
 $22 = $4; //@line 597 "../../iup_dialog.c"
 $23 = ($22|0)!=(0|0); //@line 597 "../../iup_dialog.c"
 if ($23) {
  $24 = $4; //@line 601 "../../iup_dialog.c"
  HEAP8[$24>>0] = 0; //@line 601 "../../iup_dialog.c"
  $25 = $4; //@line 602 "../../iup_dialog.c"
  $26 = ((($25)) + 1|0); //@line 602 "../../iup_dialog.c"
  $4 = $26; //@line 602 "../../iup_dialog.c"
 } else {
  $4 = 362470; //@line 598 "../../iup_dialog.c"
 }
 $27 = (_iDialogSizeGetScale($5)|0); //@line 608 "../../iup_dialog.c"
 $10 = $27; //@line 608 "../../iup_dialog.c"
 $28 = $4; //@line 609 "../../iup_dialog.c"
 $29 = (_iDialogSizeGetScale($28)|0); //@line 609 "../../iup_dialog.c"
 $11 = $29; //@line 609 "../../iup_dialog.c"
 HEAP32[$12>>2] = 0; //@line 611 "../../iup_dialog.c"
 HEAP32[$13>>2] = 0; //@line 611 "../../iup_dialog.c"
 $30 = $3; //@line 612 "../../iup_dialog.c"
 (_iupStrToIntInt($30,$12,$13,120)|0); //@line 612 "../../iup_dialog.c"
 $31 = HEAP32[$12>>2]|0; //@line 613 "../../iup_dialog.c"
 $32 = ($31|0)<(0); //@line 613 "../../iup_dialog.c"
 if ($32) {
  HEAP32[$12>>2] = 0; //@line 613 "../../iup_dialog.c"
 }
 $33 = HEAP32[$13>>2]|0; //@line 614 "../../iup_dialog.c"
 $34 = ($33|0)<(0); //@line 614 "../../iup_dialog.c"
 if ($34) {
  HEAP32[$13>>2] = 0; //@line 614 "../../iup_dialog.c"
 }
 $35 = $2; //@line 616 "../../iup_dialog.c"
 _iupdrvFontGetCharSize($35,$6,$7); //@line 616 "../../iup_dialog.c"
 _iupdrvGetScreenSize($8,$9); //@line 619 "../../iup_dialog.c"
 $36 = $10; //@line 621 "../../iup_dialog.c"
 $37 = ($36|0)!=(0); //@line 621 "../../iup_dialog.c"
 if ($37) {
  $38 = HEAP32[$8>>2]|0; //@line 622 "../../iup_dialog.c"
  $39 = $10; //@line 622 "../../iup_dialog.c"
  $40 = (($38|0) / ($39|0))&-1; //@line 622 "../../iup_dialog.c"
  HEAP32[$12>>2] = $40; //@line 622 "../../iup_dialog.c"
 } else {
  $41 = HEAP32[$12>>2]|0; //@line 624 "../../iup_dialog.c"
  $42 = HEAP32[$6>>2]|0; //@line 624 "../../iup_dialog.c"
  $43 = Math_imul($41, $42)|0; //@line 624 "../../iup_dialog.c"
  $44 = (+($43|0)); //@line 624 "../../iup_dialog.c"
  $45 = $44 / 4.0; //@line 624 "../../iup_dialog.c"
  $46 = $45 + 0.5; //@line 624 "../../iup_dialog.c"
  $47 = (~~(($46))); //@line 624 "../../iup_dialog.c"
  HEAP32[$12>>2] = $47; //@line 624 "../../iup_dialog.c"
 }
 $48 = $11; //@line 626 "../../iup_dialog.c"
 $49 = ($48|0)!=(0); //@line 626 "../../iup_dialog.c"
 if ($49) {
  $50 = HEAP32[$9>>2]|0; //@line 627 "../../iup_dialog.c"
  $51 = $11; //@line 627 "../../iup_dialog.c"
  $52 = (($50|0) / ($51|0))&-1; //@line 627 "../../iup_dialog.c"
  HEAP32[$13>>2] = $52; //@line 627 "../../iup_dialog.c"
 } else {
  $53 = HEAP32[$13>>2]|0; //@line 629 "../../iup_dialog.c"
  $54 = HEAP32[$7>>2]|0; //@line 629 "../../iup_dialog.c"
  $55 = Math_imul($53, $54)|0; //@line 629 "../../iup_dialog.c"
  $56 = (+($55|0)); //@line 629 "../../iup_dialog.c"
  $57 = $56 / 8.0; //@line 629 "../../iup_dialog.c"
  $58 = $57 + 0.5; //@line 629 "../../iup_dialog.c"
  $59 = (~~(($58))); //@line 629 "../../iup_dialog.c"
  HEAP32[$13>>2] = $59; //@line 629 "../../iup_dialog.c"
 }
 $60 = HEAP32[$12>>2]|0; //@line 631 "../../iup_dialog.c"
 $61 = $2; //@line 631 "../../iup_dialog.c"
 $62 = ((($61)) + 36|0); //@line 631 "../../iup_dialog.c"
 HEAP32[$62>>2] = $60; //@line 631 "../../iup_dialog.c"
 $63 = HEAP32[$13>>2]|0; //@line 632 "../../iup_dialog.c"
 $64 = $2; //@line 632 "../../iup_dialog.c"
 $65 = ((($64)) + 40|0); //@line 632 "../../iup_dialog.c"
 HEAP32[$65>>2] = $63; //@line 632 "../../iup_dialog.c"
 $66 = $2; //@line 638 "../../iup_dialog.c"
 $67 = ((($66)) + 52|0); //@line 638 "../../iup_dialog.c"
 HEAP32[$67>>2] = 0; //@line 638 "../../iup_dialog.c"
 $68 = $2; //@line 639 "../../iup_dialog.c"
 $69 = ((($68)) + 56|0); //@line 639 "../../iup_dialog.c"
 HEAP32[$69>>2] = 0; //@line 639 "../../iup_dialog.c"
 STACKTOP = sp;return 0; //@line 641 "../../iup_dialog.c"
}
function _iDialogGetRasterSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $4 = sp;
 $2 = $0;
 $5 = $2; //@line 695 "../../iup_dialog.c"
 $6 = ((($5)) + 16|0); //@line 695 "../../iup_dialog.c"
 $7 = HEAP32[$6>>2]|0; //@line 695 "../../iup_dialog.c"
 $8 = ($7|0)!=(0|0); //@line 695 "../../iup_dialog.c"
 $9 = $2; //@line 698 "../../iup_dialog.c"
 if ($8) {
  _iupdrvDialogGetSize($9,0,$3,$4); //@line 698 "../../iup_dialog.c"
 } else {
  $10 = ((($9)) + 36|0); //@line 702 "../../iup_dialog.c"
  $11 = HEAP32[$10>>2]|0; //@line 702 "../../iup_dialog.c"
  HEAP32[$3>>2] = $11; //@line 702 "../../iup_dialog.c"
  $12 = $2; //@line 703 "../../iup_dialog.c"
  $13 = ((($12)) + 40|0); //@line 703 "../../iup_dialog.c"
  $14 = HEAP32[$13>>2]|0; //@line 703 "../../iup_dialog.c"
  HEAP32[$4>>2] = $14; //@line 703 "../../iup_dialog.c"
 }
 $15 = HEAP32[$3>>2]|0; //@line 706 "../../iup_dialog.c"
 $16 = ($15|0)!=(0); //@line 706 "../../iup_dialog.c"
 $17 = HEAP32[$4>>2]|0; //@line 706 "../../iup_dialog.c"
 $18 = ($17|0)!=(0); //@line 706 "../../iup_dialog.c"
 $or$cond = $16 | $18; //@line 706 "../../iup_dialog.c"
 if ($or$cond) {
  $19 = HEAP32[$3>>2]|0; //@line 709 "../../iup_dialog.c"
  $20 = HEAP32[$4>>2]|0; //@line 709 "../../iup_dialog.c"
  $21 = (_iupStrReturnIntInt($19,$20,120)|0); //@line 709 "../../iup_dialog.c"
  $1 = $21; //@line 709 "../../iup_dialog.c"
  $22 = $1; //@line 710 "../../iup_dialog.c"
  STACKTOP = sp;return ($22|0); //@line 710 "../../iup_dialog.c"
 } else {
  $1 = 0; //@line 707 "../../iup_dialog.c"
  $22 = $1; //@line 710 "../../iup_dialog.c"
  STACKTOP = sp;return ($22|0); //@line 710 "../../iup_dialog.c"
 }
 return (0)|0;
}
function _iDialogSetRasterSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 668 "../../iup_dialog.c"
 $7 = ($6|0)!=(0|0); //@line 668 "../../iup_dialog.c"
 if ($7) {
  HEAP32[$4>>2] = 0; //@line 675 "../../iup_dialog.c"
  HEAP32[$5>>2] = 0; //@line 675 "../../iup_dialog.c"
  $12 = $3; //@line 676 "../../iup_dialog.c"
  (_iupStrToIntInt($12,$4,$5,120)|0); //@line 676 "../../iup_dialog.c"
  $13 = HEAP32[$4>>2]|0; //@line 677 "../../iup_dialog.c"
  $14 = ($13|0)<(0); //@line 677 "../../iup_dialog.c"
  if ($14) {
   HEAP32[$4>>2] = 0; //@line 677 "../../iup_dialog.c"
  }
  $15 = HEAP32[$5>>2]|0; //@line 678 "../../iup_dialog.c"
  $16 = ($15|0)<(0); //@line 678 "../../iup_dialog.c"
  if ($16) {
   HEAP32[$5>>2] = 0; //@line 678 "../../iup_dialog.c"
  }
  $17 = HEAP32[$4>>2]|0; //@line 679 "../../iup_dialog.c"
  $18 = $2; //@line 679 "../../iup_dialog.c"
  $19 = ((($18)) + 36|0); //@line 679 "../../iup_dialog.c"
  HEAP32[$19>>2] = $17; //@line 679 "../../iup_dialog.c"
  $20 = HEAP32[$5>>2]|0; //@line 680 "../../iup_dialog.c"
  $21 = $2; //@line 680 "../../iup_dialog.c"
  $22 = ((($21)) + 40|0); //@line 680 "../../iup_dialog.c"
  HEAP32[$22>>2] = $20; //@line 680 "../../iup_dialog.c"
 } else {
  $8 = $2; //@line 670 "../../iup_dialog.c"
  $9 = ((($8)) + 36|0); //@line 670 "../../iup_dialog.c"
  HEAP32[$9>>2] = 0; //@line 670 "../../iup_dialog.c"
  $10 = $2; //@line 671 "../../iup_dialog.c"
  $11 = ((($10)) + 40|0); //@line 671 "../../iup_dialog.c"
  HEAP32[$11>>2] = 0; //@line 671 "../../iup_dialog.c"
 }
 $23 = $2; //@line 685 "../../iup_dialog.c"
 $24 = ((($23)) + 52|0); //@line 685 "../../iup_dialog.c"
 HEAP32[$24>>2] = 0; //@line 685 "../../iup_dialog.c"
 $25 = $2; //@line 686 "../../iup_dialog.c"
 $26 = ((($25)) + 56|0); //@line 686 "../../iup_dialog.c"
 HEAP32[$26>>2] = 0; //@line 686 "../../iup_dialog.c"
 STACKTOP = sp;return 0; //@line 688 "../../iup_dialog.c"
}
function _iDialogSetNActiveAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 714 "../../iup_dialog.c"
 $5 = $3; //@line 714 "../../iup_dialog.c"
 $6 = (_iupStrBoolean($5)|0); //@line 714 "../../iup_dialog.c"
 _iupdrvSetActive($4,$6); //@line 714 "../../iup_dialog.c"
 STACKTOP = sp;return 0; //@line 715 "../../iup_dialog.c"
}
function _iDialogSetVisibleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 720 "../../iup_dialog.c"
 $5 = (_iupStrBoolean($4)|0); //@line 720 "../../iup_dialog.c"
 $6 = ($5|0)!=(0); //@line 720 "../../iup_dialog.c"
 $7 = $2; //@line 721 "../../iup_dialog.c"
 if ($6) {
  (_IupShow($7)|0); //@line 721 "../../iup_dialog.c"
  STACKTOP = sp;return 0; //@line 724 "../../iup_dialog.c"
 } else {
  (_IupHide($7)|0); //@line 723 "../../iup_dialog.c"
  STACKTOP = sp;return 0; //@line 724 "../../iup_dialog.c"
 }
 return (0)|0;
}
function _iDialogGetXAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 777 "../../iup_dialog.c"
 $3 = $1; //@line 778 "../../iup_dialog.c"
 _iupdrvDialogGetPosition($3,0,$2,0); //@line 778 "../../iup_dialog.c"
 $4 = HEAP32[$2>>2]|0; //@line 779 "../../iup_dialog.c"
 $5 = (_iupStrReturnInt($4)|0); //@line 779 "../../iup_dialog.c"
 STACKTOP = sp;return ($5|0); //@line 779 "../../iup_dialog.c"
}
function _iDialogGetYAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 784 "../../iup_dialog.c"
 $3 = $1; //@line 785 "../../iup_dialog.c"
 _iupdrvDialogGetPosition($3,0,0,$2); //@line 785 "../../iup_dialog.c"
 $4 = HEAP32[$2>>2]|0; //@line 786 "../../iup_dialog.c"
 $5 = (_iupStrReturnInt($4)|0); //@line 786 "../../iup_dialog.c"
 STACKTOP = sp;return ($5|0); //@line 786 "../../iup_dialog.c"
}
function _iDialogGetScreenPositionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 791 "../../iup_dialog.c"
 HEAP32[$3>>2] = 0; //@line 791 "../../iup_dialog.c"
 $4 = $1; //@line 792 "../../iup_dialog.c"
 _iupdrvDialogGetPosition($4,0,$2,$3); //@line 792 "../../iup_dialog.c"
 $5 = HEAP32[$2>>2]|0; //@line 793 "../../iup_dialog.c"
 $6 = HEAP32[$3>>2]|0; //@line 793 "../../iup_dialog.c"
 $7 = (_iupStrReturnIntInt($5,$6,44)|0); //@line 793 "../../iup_dialog.c"
 STACKTOP = sp;return ($7|0); //@line 793 "../../iup_dialog.c"
}
function _iDialogSetMenuAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 798 "../../iup_dialog.c"
 $8 = ((($7)) + 16|0); //@line 798 "../../iup_dialog.c"
 $9 = HEAP32[$8>>2]|0; //@line 798 "../../iup_dialog.c"
 $10 = ($9|0)!=(0|0); //@line 798 "../../iup_dialog.c"
 $11 = $4; //@line 805 "../../iup_dialog.c"
 if (!($10)) {
  $12 = (_IupGetHandle($11)|0); //@line 800 "../../iup_dialog.c"
  $5 = $12; //@line 800 "../../iup_dialog.c"
  $13 = $5; //@line 801 "../../iup_dialog.c"
  $14 = $3; //@line 801 "../../iup_dialog.c"
  $15 = ((($14)) + 72|0); //@line 801 "../../iup_dialog.c"
  $16 = HEAP32[$15>>2]|0; //@line 801 "../../iup_dialog.c"
  $17 = ((($16)) + 24|0); //@line 801 "../../iup_dialog.c"
  HEAP32[$17>>2] = $13; //@line 801 "../../iup_dialog.c"
  $2 = 1; //@line 802 "../../iup_dialog.c"
  $132 = $2; //@line 843 "../../iup_dialog.c"
  STACKTOP = sp;return ($132|0); //@line 843 "../../iup_dialog.c"
 }
 $18 = ($11|0)!=(0|0); //@line 805 "../../iup_dialog.c"
 do {
  if ($18) {
   $50 = $4; //@line 818 "../../iup_dialog.c"
   $51 = (_IupGetHandle($50)|0); //@line 818 "../../iup_dialog.c"
   $6 = $51; //@line 818 "../../iup_dialog.c"
   $52 = $6; //@line 819 "../../iup_dialog.c"
   $53 = ($52|0)!=(0|0); //@line 819 "../../iup_dialog.c"
   if ($53) {
    $54 = $6; //@line 819 "../../iup_dialog.c"
    $55 = ((($54)) + 4|0); //@line 819 "../../iup_dialog.c"
    $56 = HEAP32[$55>>2]|0; //@line 819 "../../iup_dialog.c"
    $57 = ((($56)) + 8|0); //@line 819 "../../iup_dialog.c"
    $58 = HEAP32[$57>>2]|0; //@line 819 "../../iup_dialog.c"
    $59 = ($58|0)!=(5); //@line 819 "../../iup_dialog.c"
    if (!($59)) {
     $60 = $6; //@line 819 "../../iup_dialog.c"
     $61 = ((($60)) + 60|0); //@line 819 "../../iup_dialog.c"
     $62 = HEAP32[$61>>2]|0; //@line 819 "../../iup_dialog.c"
     $63 = ($62|0)!=(0|0); //@line 819 "../../iup_dialog.c"
     if (!($63)) {
      $64 = $3; //@line 823 "../../iup_dialog.c"
      $65 = ((($64)) + 72|0); //@line 823 "../../iup_dialog.c"
      $66 = HEAP32[$65>>2]|0; //@line 823 "../../iup_dialog.c"
      $67 = ((($66)) + 24|0); //@line 823 "../../iup_dialog.c"
      $68 = HEAP32[$67>>2]|0; //@line 823 "../../iup_dialog.c"
      $69 = ($68|0)!=(0|0); //@line 823 "../../iup_dialog.c"
      if ($69) {
       $70 = $3; //@line 823 "../../iup_dialog.c"
       $71 = ((($70)) + 72|0); //@line 823 "../../iup_dialog.c"
       $72 = HEAP32[$71>>2]|0; //@line 823 "../../iup_dialog.c"
       $73 = ((($72)) + 24|0); //@line 823 "../../iup_dialog.c"
       $74 = HEAP32[$73>>2]|0; //@line 823 "../../iup_dialog.c"
       $75 = $6; //@line 823 "../../iup_dialog.c"
       $76 = ($74|0)==($75|0); //@line 823 "../../iup_dialog.c"
       if ($76) {
        $77 = $6; //@line 823 "../../iup_dialog.c"
        $78 = ((($77)) + 16|0); //@line 823 "../../iup_dialog.c"
        $79 = HEAP32[$78>>2]|0; //@line 823 "../../iup_dialog.c"
        $80 = ($79|0)!=(0|0); //@line 823 "../../iup_dialog.c"
        if ($80) {
         $2 = 1; //@line 824 "../../iup_dialog.c"
         $132 = $2; //@line 843 "../../iup_dialog.c"
         STACKTOP = sp;return ($132|0); //@line 843 "../../iup_dialog.c"
        }
       }
      }
      $81 = $3; //@line 827 "../../iup_dialog.c"
      $82 = ((($81)) + 72|0); //@line 827 "../../iup_dialog.c"
      $83 = HEAP32[$82>>2]|0; //@line 827 "../../iup_dialog.c"
      $84 = ((($83)) + 24|0); //@line 827 "../../iup_dialog.c"
      $85 = HEAP32[$84>>2]|0; //@line 827 "../../iup_dialog.c"
      $86 = ($85|0)!=(0|0); //@line 827 "../../iup_dialog.c"
      if ($86) {
       $87 = $3; //@line 827 "../../iup_dialog.c"
       $88 = ((($87)) + 72|0); //@line 827 "../../iup_dialog.c"
       $89 = HEAP32[$88>>2]|0; //@line 827 "../../iup_dialog.c"
       $90 = ((($89)) + 24|0); //@line 827 "../../iup_dialog.c"
       $91 = HEAP32[$90>>2]|0; //@line 827 "../../iup_dialog.c"
       $92 = ((($91)) + 16|0); //@line 827 "../../iup_dialog.c"
       $93 = HEAP32[$92>>2]|0; //@line 827 "../../iup_dialog.c"
       $94 = ($93|0)!=(0|0); //@line 827 "../../iup_dialog.c"
       if ($94) {
        $95 = $3; //@line 827 "../../iup_dialog.c"
        $96 = ((($95)) + 72|0); //@line 827 "../../iup_dialog.c"
        $97 = HEAP32[$96>>2]|0; //@line 827 "../../iup_dialog.c"
        $98 = ((($97)) + 24|0); //@line 827 "../../iup_dialog.c"
        $99 = HEAP32[$98>>2]|0; //@line 827 "../../iup_dialog.c"
        $100 = $6; //@line 827 "../../iup_dialog.c"
        $101 = ($99|0)!=($100|0); //@line 827 "../../iup_dialog.c"
        if ($101) {
         $102 = $3; //@line 829 "../../iup_dialog.c"
         $103 = ((($102)) + 72|0); //@line 829 "../../iup_dialog.c"
         $104 = HEAP32[$103>>2]|0; //@line 829 "../../iup_dialog.c"
         $105 = ((($104)) + 8|0); //@line 829 "../../iup_dialog.c"
         HEAP32[$105>>2] = 1; //@line 829 "../../iup_dialog.c"
         $106 = $3; //@line 830 "../../iup_dialog.c"
         $107 = ((($106)) + 72|0); //@line 830 "../../iup_dialog.c"
         $108 = HEAP32[$107>>2]|0; //@line 830 "../../iup_dialog.c"
         $109 = ((($108)) + 24|0); //@line 830 "../../iup_dialog.c"
         $110 = HEAP32[$109>>2]|0; //@line 830 "../../iup_dialog.c"
         _IupUnmap($110); //@line 830 "../../iup_dialog.c"
         $111 = $3; //@line 831 "../../iup_dialog.c"
         $112 = ((($111)) + 72|0); //@line 831 "../../iup_dialog.c"
         $113 = HEAP32[$112>>2]|0; //@line 831 "../../iup_dialog.c"
         $114 = ((($113)) + 8|0); //@line 831 "../../iup_dialog.c"
         HEAP32[$114>>2] = 0; //@line 831 "../../iup_dialog.c"
        }
       }
      }
      $115 = $6; //@line 834 "../../iup_dialog.c"
      $116 = $3; //@line 834 "../../iup_dialog.c"
      $117 = ((($116)) + 72|0); //@line 834 "../../iup_dialog.c"
      $118 = HEAP32[$117>>2]|0; //@line 834 "../../iup_dialog.c"
      $119 = ((($118)) + 24|0); //@line 834 "../../iup_dialog.c"
      HEAP32[$119>>2] = $115; //@line 834 "../../iup_dialog.c"
      $120 = $3; //@line 836 "../../iup_dialog.c"
      $121 = $6; //@line 836 "../../iup_dialog.c"
      $122 = ((($121)) + 60|0); //@line 836 "../../iup_dialog.c"
      HEAP32[$122>>2] = $120; //@line 836 "../../iup_dialog.c"
      $123 = $3; //@line 838 "../../iup_dialog.c"
      $124 = ((($123)) + 72|0); //@line 838 "../../iup_dialog.c"
      $125 = HEAP32[$124>>2]|0; //@line 838 "../../iup_dialog.c"
      $126 = ((($125)) + 8|0); //@line 838 "../../iup_dialog.c"
      HEAP32[$126>>2] = 1; //@line 838 "../../iup_dialog.c"
      $127 = $6; //@line 839 "../../iup_dialog.c"
      (_IupMap($127)|0); //@line 839 "../../iup_dialog.c"
      $128 = $3; //@line 840 "../../iup_dialog.c"
      $129 = ((($128)) + 72|0); //@line 840 "../../iup_dialog.c"
      $130 = HEAP32[$129>>2]|0; //@line 840 "../../iup_dialog.c"
      $131 = ((($130)) + 8|0); //@line 840 "../../iup_dialog.c"
      HEAP32[$131>>2] = 0; //@line 840 "../../iup_dialog.c"
      break;
     }
    }
   }
   $2 = 0; //@line 820 "../../iup_dialog.c"
   $132 = $2; //@line 843 "../../iup_dialog.c"
   STACKTOP = sp;return ($132|0); //@line 843 "../../iup_dialog.c"
  } else {
   $19 = $3; //@line 807 "../../iup_dialog.c"
   $20 = ((($19)) + 72|0); //@line 807 "../../iup_dialog.c"
   $21 = HEAP32[$20>>2]|0; //@line 807 "../../iup_dialog.c"
   $22 = ((($21)) + 24|0); //@line 807 "../../iup_dialog.c"
   $23 = HEAP32[$22>>2]|0; //@line 807 "../../iup_dialog.c"
   $24 = ($23|0)!=(0|0); //@line 807 "../../iup_dialog.c"
   if ($24) {
    $25 = $3; //@line 807 "../../iup_dialog.c"
    $26 = ((($25)) + 72|0); //@line 807 "../../iup_dialog.c"
    $27 = HEAP32[$26>>2]|0; //@line 807 "../../iup_dialog.c"
    $28 = ((($27)) + 24|0); //@line 807 "../../iup_dialog.c"
    $29 = HEAP32[$28>>2]|0; //@line 807 "../../iup_dialog.c"
    $30 = ((($29)) + 16|0); //@line 807 "../../iup_dialog.c"
    $31 = HEAP32[$30>>2]|0; //@line 807 "../../iup_dialog.c"
    $32 = ($31|0)!=(0|0); //@line 807 "../../iup_dialog.c"
    if ($32) {
     $33 = $3; //@line 809 "../../iup_dialog.c"
     $34 = ((($33)) + 72|0); //@line 809 "../../iup_dialog.c"
     $35 = HEAP32[$34>>2]|0; //@line 809 "../../iup_dialog.c"
     $36 = ((($35)) + 8|0); //@line 809 "../../iup_dialog.c"
     HEAP32[$36>>2] = 1; //@line 809 "../../iup_dialog.c"
     $37 = $3; //@line 810 "../../iup_dialog.c"
     $38 = ((($37)) + 72|0); //@line 810 "../../iup_dialog.c"
     $39 = HEAP32[$38>>2]|0; //@line 810 "../../iup_dialog.c"
     $40 = ((($39)) + 24|0); //@line 810 "../../iup_dialog.c"
     $41 = HEAP32[$40>>2]|0; //@line 810 "../../iup_dialog.c"
     _IupUnmap($41); //@line 810 "../../iup_dialog.c"
     $42 = $3; //@line 811 "../../iup_dialog.c"
     $43 = ((($42)) + 72|0); //@line 811 "../../iup_dialog.c"
     $44 = HEAP32[$43>>2]|0; //@line 811 "../../iup_dialog.c"
     $45 = ((($44)) + 8|0); //@line 811 "../../iup_dialog.c"
     HEAP32[$45>>2] = 0; //@line 811 "../../iup_dialog.c"
     $46 = $3; //@line 813 "../../iup_dialog.c"
     $47 = ((($46)) + 72|0); //@line 813 "../../iup_dialog.c"
     $48 = HEAP32[$47>>2]|0; //@line 813 "../../iup_dialog.c"
     $49 = ((($48)) + 24|0); //@line 813 "../../iup_dialog.c"
     HEAP32[$49>>2] = 0; //@line 813 "../../iup_dialog.c"
    }
   }
  }
 } while(0);
 $2 = 1; //@line 842 "../../iup_dialog.c"
 $132 = $2; //@line 843 "../../iup_dialog.c"
 STACKTOP = sp;return ($132|0); //@line 843 "../../iup_dialog.c"
}
function _iDialogSetHideTaskbarAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 754 "../../iup_dialog.c"
 $5 = $3; //@line 754 "../../iup_dialog.c"
 $6 = (_iupStrBoolean($5)|0); //@line 754 "../../iup_dialog.c"
 $7 = ($6|0)!=(0); //@line 754 "../../iup_dialog.c"
 $8 = $7 ^ 1; //@line 754 "../../iup_dialog.c"
 $9 = $8&1; //@line 754 "../../iup_dialog.c"
 _iupdrvDialogSetVisible($4,$9); //@line 754 "../../iup_dialog.c"
 STACKTOP = sp;return 0; //@line 755 "../../iup_dialog.c"
}
function _iDialogSetDialogFrameAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 760 "../../iup_dialog.c"
 $5 = (_iupStrBoolean($4)|0); //@line 760 "../../iup_dialog.c"
 $6 = ($5|0)!=(0); //@line 760 "../../iup_dialog.c"
 $7 = $2; //@line 762 "../../iup_dialog.c"
 if ($6) {
  _iupAttribSet($7,15343,20140); //@line 762 "../../iup_dialog.c"
  $8 = $2; //@line 763 "../../iup_dialog.c"
  _iupAttribSet($8,15350,20140); //@line 763 "../../iup_dialog.c"
  $9 = $2; //@line 764 "../../iup_dialog.c"
  _iupAttribSet($9,15357,20140); //@line 764 "../../iup_dialog.c"
  STACKTOP = sp;return 1; //@line 772 "../../iup_dialog.c"
 } else {
  _iupAttribSet($7,15343,0); //@line 768 "../../iup_dialog.c"
  $10 = $2; //@line 769 "../../iup_dialog.c"
  _iupAttribSet($10,15350,0); //@line 769 "../../iup_dialog.c"
  $11 = $2; //@line 770 "../../iup_dialog.c"
  _iupAttribSet($11,15357,0); //@line 770 "../../iup_dialog.c"
  STACKTOP = sp;return 1; //@line 772 "../../iup_dialog.c"
 }
 return (0)|0;
}
function _iDialogSizeGetScale($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 576 "../../iup_dialog.c"
 $4 = ($3|0)!=(0|0); //@line 576 "../../iup_dialog.c"
 do {
  if ($4) {
   $5 = $2; //@line 576 "../../iup_dialog.c"
   $6 = HEAP8[$5>>0]|0; //@line 576 "../../iup_dialog.c"
   $7 = $6 << 24 >> 24; //@line 576 "../../iup_dialog.c"
   $8 = ($7|0)==(0); //@line 576 "../../iup_dialog.c"
   if ($8) {
    label = 3;
   } else {
    $9 = $2; //@line 577 "../../iup_dialog.c"
    $10 = (_iupStrEqualNoCase($9,3889)|0); //@line 577 "../../iup_dialog.c"
    $11 = ($10|0)!=(0); //@line 577 "../../iup_dialog.c"
    if ($11) {
     $1 = 1; //@line 577 "../../iup_dialog.c"
     break;
    }
    $12 = $2; //@line 578 "../../iup_dialog.c"
    $13 = (_iupStrEqualNoCase($12,3894)|0); //@line 578 "../../iup_dialog.c"
    $14 = ($13|0)!=(0); //@line 578 "../../iup_dialog.c"
    if ($14) {
     $1 = 2; //@line 578 "../../iup_dialog.c"
     break;
    }
    $15 = $2; //@line 579 "../../iup_dialog.c"
    $16 = (_iupStrEqualNoCase($15,3899)|0); //@line 579 "../../iup_dialog.c"
    $17 = ($16|0)!=(0); //@line 579 "../../iup_dialog.c"
    if ($17) {
     $1 = 3; //@line 579 "../../iup_dialog.c"
     break;
    }
    $18 = $2; //@line 580 "../../iup_dialog.c"
    $19 = (_iupStrEqualNoCase($18,3905)|0); //@line 580 "../../iup_dialog.c"
    $20 = ($19|0)!=(0); //@line 580 "../../iup_dialog.c"
    if ($20) {
     $1 = 4; //@line 580 "../../iup_dialog.c"
     break;
    }
    $21 = $2; //@line 581 "../../iup_dialog.c"
    $22 = (_iupStrEqualNoCase($21,3913)|0); //@line 581 "../../iup_dialog.c"
    $23 = ($22|0)!=(0); //@line 581 "../../iup_dialog.c"
    if ($23) {
     $1 = 8; //@line 581 "../../iup_dialog.c"
     break;
    } else {
     $1 = 0; //@line 582 "../../iup_dialog.c"
     break;
    }
   }
  } else {
   label = 3;
  }
 } while(0);
 if ((label|0) == 3) {
  $1 = 0; //@line 576 "../../iup_dialog.c"
 }
 $24 = $1; //@line 583 "../../iup_dialog.c"
 STACKTOP = sp;return ($24|0); //@line 583 "../../iup_dialog.c"
}
function _iupDlgListAdd($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 27 "../../iup_dlglist.c"
 $4 = ($3|0)!=(0|0); //@line 27 "../../iup_dlglist.c"
 if (!($4)) {
  STACKTOP = sp;return; //@line 37 "../../iup_dlglist.c"
 }
 $5 = (_malloc(8)|0); //@line 29 "../../iup_dlglist.c"
 $2 = $5; //@line 29 "../../iup_dlglist.c"
 $6 = $2; //@line 30 "../../iup_dlglist.c"
 $7 = ($6|0)!=(0|0); //@line 30 "../../iup_dlglist.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 37 "../../iup_dlglist.c"
 }
 $8 = $1; //@line 32 "../../iup_dlglist.c"
 $9 = $2; //@line 32 "../../iup_dlglist.c"
 HEAP32[$9>>2] = $8; //@line 32 "../../iup_dlglist.c"
 $10 = HEAP32[5856]|0; //@line 33 "../../iup_dlglist.c"
 $11 = $2; //@line 33 "../../iup_dlglist.c"
 $12 = ((($11)) + 4|0); //@line 33 "../../iup_dlglist.c"
 HEAP32[$12>>2] = $10; //@line 33 "../../iup_dlglist.c"
 $13 = $2; //@line 34 "../../iup_dlglist.c"
 HEAP32[5856] = $13; //@line 34 "../../iup_dlglist.c"
 $14 = HEAP32[5855]|0; //@line 35 "../../iup_dlglist.c"
 $15 = (($14) + 1)|0; //@line 35 "../../iup_dlglist.c"
 HEAP32[5855] = $15; //@line 35 "../../iup_dlglist.c"
 STACKTOP = sp;return; //@line 37 "../../iup_dlglist.c"
}
function _iupDlgListRemove($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = HEAP32[5856]|0; //@line 41 "../../iup_dlglist.c"
 $6 = ($5|0)!=(0|0); //@line 41 "../../iup_dlglist.c"
 $7 = $1; //@line 41 "../../iup_dlglist.c"
 $8 = ($7|0)!=(0|0); //@line 41 "../../iup_dlglist.c"
 $or$cond = $6 & $8; //@line 41 "../../iup_dlglist.c"
 if (!($or$cond)) {
  STACKTOP = sp;return; //@line 66 "../../iup_dlglist.c"
 }
 $9 = HEAP32[5856]|0; //@line 44 "../../iup_dlglist.c"
 $10 = HEAP32[$9>>2]|0; //@line 44 "../../iup_dlglist.c"
 $11 = $1; //@line 44 "../../iup_dlglist.c"
 $12 = ($10|0)==($11|0); //@line 44 "../../iup_dlglist.c"
 $13 = HEAP32[5856]|0; //@line 46 "../../iup_dlglist.c"
 if ($12) {
  $14 = ((($13)) + 4|0); //@line 46 "../../iup_dlglist.c"
  $15 = HEAP32[$14>>2]|0; //@line 46 "../../iup_dlglist.c"
  $2 = $15; //@line 46 "../../iup_dlglist.c"
  $16 = HEAP32[5856]|0; //@line 47 "../../iup_dlglist.c"
  _free($16); //@line 47 "../../iup_dlglist.c"
  $17 = $2; //@line 48 "../../iup_dlglist.c"
  HEAP32[5856] = $17; //@line 48 "../../iup_dlglist.c"
  $18 = HEAP32[5855]|0; //@line 49 "../../iup_dlglist.c"
  $19 = (($18) + -1)|0; //@line 49 "../../iup_dlglist.c"
  HEAP32[5855] = $19; //@line 49 "../../iup_dlglist.c"
  STACKTOP = sp;return; //@line 66 "../../iup_dlglist.c"
 }
 $4 = $13; //@line 55 "../../iup_dlglist.c"
 $20 = HEAP32[5856]|0; //@line 55 "../../iup_dlglist.c"
 $21 = ((($20)) + 4|0); //@line 55 "../../iup_dlglist.c"
 $22 = HEAP32[$21>>2]|0; //@line 55 "../../iup_dlglist.c"
 $3 = $22; //@line 55 "../../iup_dlglist.c"
 while(1) {
  $23 = $3; //@line 55 "../../iup_dlglist.c"
  $24 = ($23|0)!=(0|0); //@line 55 "../../iup_dlglist.c"
  if (!($24)) {
   label = 9;
   break;
  }
  $25 = $3; //@line 57 "../../iup_dlglist.c"
  $26 = HEAP32[$25>>2]|0; //@line 57 "../../iup_dlglist.c"
  $27 = $1; //@line 57 "../../iup_dlglist.c"
  $28 = ($26|0)==($27|0); //@line 57 "../../iup_dlglist.c"
  $29 = $3; //@line 59 "../../iup_dlglist.c"
  if ($28) {
   break;
  }
  $4 = $29; //@line 55 "../../iup_dlglist.c"
  $37 = $3; //@line 55 "../../iup_dlglist.c"
  $38 = ((($37)) + 4|0); //@line 55 "../../iup_dlglist.c"
  $39 = HEAP32[$38>>2]|0; //@line 55 "../../iup_dlglist.c"
  $3 = $39; //@line 55 "../../iup_dlglist.c"
 }
 if ((label|0) == 9) {
  STACKTOP = sp;return; //@line 66 "../../iup_dlglist.c"
 }
 $30 = ((($29)) + 4|0); //@line 59 "../../iup_dlglist.c"
 $31 = HEAP32[$30>>2]|0; //@line 59 "../../iup_dlglist.c"
 $32 = $4; //@line 59 "../../iup_dlglist.c"
 $33 = ((($32)) + 4|0); //@line 59 "../../iup_dlglist.c"
 HEAP32[$33>>2] = $31; //@line 59 "../../iup_dlglist.c"
 $34 = $3; //@line 60 "../../iup_dlglist.c"
 _free($34); //@line 60 "../../iup_dlglist.c"
 $35 = HEAP32[5855]|0; //@line 61 "../../iup_dlglist.c"
 $36 = (($35) + -1)|0; //@line 61 "../../iup_dlglist.c"
 HEAP32[5855] = $36; //@line 61 "../../iup_dlglist.c"
 STACKTOP = sp;return; //@line 66 "../../iup_dlglist.c"
}
function _iupDlgListFirst() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[5856]|0; //@line 77 "../../iup_dlglist.c"
 HEAP32[5854] = $0; //@line 77 "../../iup_dlglist.c"
 $1 = (_iupDlgListNext()|0); //@line 78 "../../iup_dlglist.c"
 return ($1|0); //@line 78 "../../iup_dlglist.c"
}
function _iupDlgListNext() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $0 = 0; //@line 83 "../../iup_dlglist.c"
 $1 = HEAP32[5854]|0; //@line 84 "../../iup_dlglist.c"
 $2 = ($1|0)!=(0|0); //@line 84 "../../iup_dlglist.c"
 if (!($2)) {
  $8 = $0; //@line 89 "../../iup_dlglist.c"
  STACKTOP = sp;return ($8|0); //@line 89 "../../iup_dlglist.c"
 }
 $3 = HEAP32[5854]|0; //@line 86 "../../iup_dlglist.c"
 $4 = HEAP32[$3>>2]|0; //@line 86 "../../iup_dlglist.c"
 $0 = $4; //@line 86 "../../iup_dlglist.c"
 $5 = HEAP32[5854]|0; //@line 87 "../../iup_dlglist.c"
 $6 = ((($5)) + 4|0); //@line 87 "../../iup_dlglist.c"
 $7 = HEAP32[$6>>2]|0; //@line 87 "../../iup_dlglist.c"
 HEAP32[5854] = $7; //@line 87 "../../iup_dlglist.c"
 $8 = $0; //@line 89 "../../iup_dlglist.c"
 STACKTOP = sp;return ($8|0); //@line 89 "../../iup_dlglist.c"
}
function _iupDlgListVisibleInc() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[5853]|0; //@line 97 "../../iup_dlglist.c"
 $1 = HEAP32[5855]|0; //@line 97 "../../iup_dlglist.c"
 $2 = ($0|0)==($1|0); //@line 97 "../../iup_dlglist.c"
 if ($2) {
  return; //@line 100 "../../iup_dlglist.c"
 }
 $3 = HEAP32[5853]|0; //@line 99 "../../iup_dlglist.c"
 $4 = (($3) + 1)|0; //@line 99 "../../iup_dlglist.c"
 HEAP32[5853] = $4; //@line 99 "../../iup_dlglist.c"
 return; //@line 100 "../../iup_dlglist.c"
}
function _iupDlgListVisibleDec() {
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[5853]|0; //@line 105 "../../iup_dlglist.c"
 $1 = (($0) + -1)|0; //@line 105 "../../iup_dlglist.c"
 HEAP32[5853] = $1; //@line 105 "../../iup_dlglist.c"
 return; //@line 106 "../../iup_dlglist.c"
}
function _iupDlgListVisibleCount() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[5853]|0; //@line 110 "../../iup_dlglist.c"
 return ($0|0); //@line 110 "../../iup_dlglist.c"
}
function _iupExpanderNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 1499 "../../iup_expander.c"
 $0 = $1; //@line 1499 "../../iup_expander.c"
 $2 = $0; //@line 1501 "../../iup_expander.c"
 HEAP32[$2>>2] = 3920; //@line 1501 "../../iup_expander.c"
 $3 = $0; //@line 1502 "../../iup_expander.c"
 $4 = ((($3)) + 4|0); //@line 1502 "../../iup_expander.c"
 HEAP32[$4>>2] = 15852; //@line 1502 "../../iup_expander.c"
 $5 = $0; //@line 1503 "../../iup_expander.c"
 $6 = ((($5)) + 8|0); //@line 1503 "../../iup_expander.c"
 HEAP32[$6>>2] = 0; //@line 1503 "../../iup_expander.c"
 $7 = $0; //@line 1504 "../../iup_expander.c"
 $8 = ((($7)) + 12|0); //@line 1504 "../../iup_expander.c"
 HEAP32[$8>>2] = 3; //@line 1504 "../../iup_expander.c"
 $9 = $0; //@line 1505 "../../iup_expander.c"
 $10 = ((($9)) + 16|0); //@line 1505 "../../iup_expander.c"
 HEAP32[$10>>2] = 0; //@line 1505 "../../iup_expander.c"
 $11 = $0; //@line 1508 "../../iup_expander.c"
 $12 = ((($11)) + 32|0); //@line 1508 "../../iup_expander.c"
 HEAP32[$12>>2] = 141; //@line 1508 "../../iup_expander.c"
 $13 = $0; //@line 1509 "../../iup_expander.c"
 $14 = ((($13)) + 40|0); //@line 1509 "../../iup_expander.c"
 HEAP32[$14>>2] = 142; //@line 1509 "../../iup_expander.c"
 $15 = $0; //@line 1510 "../../iup_expander.c"
 $16 = ((($15)) + 52|0); //@line 1510 "../../iup_expander.c"
 HEAP32[$16>>2] = 143; //@line 1510 "../../iup_expander.c"
 $17 = $0; //@line 1511 "../../iup_expander.c"
 $18 = ((($17)) + 44|0); //@line 1511 "../../iup_expander.c"
 HEAP32[$18>>2] = 26; //@line 1511 "../../iup_expander.c"
 $19 = $0; //@line 1512 "../../iup_expander.c"
 $20 = ((($19)) + 64|0); //@line 1512 "../../iup_expander.c"
 HEAP32[$20>>2] = 144; //@line 1512 "../../iup_expander.c"
 $21 = $0; //@line 1514 "../../iup_expander.c"
 $22 = ((($21)) + 76|0); //@line 1514 "../../iup_expander.c"
 HEAP32[$22>>2] = 145; //@line 1514 "../../iup_expander.c"
 $23 = $0; //@line 1515 "../../iup_expander.c"
 $24 = ((($23)) + 80|0); //@line 1515 "../../iup_expander.c"
 HEAP32[$24>>2] = 146; //@line 1515 "../../iup_expander.c"
 $25 = $0; //@line 1516 "../../iup_expander.c"
 $26 = ((($25)) + 84|0); //@line 1516 "../../iup_expander.c"
 HEAP32[$26>>2] = 147; //@line 1516 "../../iup_expander.c"
 $27 = $0; //@line 1519 "../../iup_expander.c"
 _iupClassRegisterCallback($27,20479,362470); //@line 1519 "../../iup_expander.c"
 $28 = $0; //@line 1520 "../../iup_expander.c"
 _iupClassRegisterCallback($28,3929,17949); //@line 1520 "../../iup_expander.c"
 $29 = $0; //@line 1521 "../../iup_expander.c"
 _iupClassRegisterCallback($29,3942,17878); //@line 1521 "../../iup_expander.c"
 $30 = $0; //@line 1524 "../../iup_expander.c"
 _iupBaseRegisterCommonAttrib($30); //@line 1524 "../../iup_expander.c"
 $31 = $0; //@line 1527 "../../iup_expander.c"
 _iupClassRegisterAttribute($31,20073,20,0,(-1),20441,9); //@line 1527 "../../iup_expander.c"
 $32 = $0; //@line 1528 "../../iup_expander.c"
 _iupClassRegisterAttribute($32,20080,148,0,0,0,41); //@line 1528 "../../iup_expander.c"
 $33 = $0; //@line 1529 "../../iup_expander.c"
 _iupClassRegisterAttribute($33,20091,28,0,0,0,41); //@line 1529 "../../iup_expander.c"
 $34 = $0; //@line 1532 "../../iup_expander.c"
 _iupClassRegisterAttribute($34,3957,149,150,(-1),16020,9); //@line 1532 "../../iup_expander.c"
 $35 = $0; //@line 1533 "../../iup_expander.c"
 _iupClassRegisterAttribute($35,15915,151,152,(-1),0,9); //@line 1533 "../../iup_expander.c"
 $36 = $0; //@line 1534 "../../iup_expander.c"
 _iupClassRegisterAttribute($36,15217,153,154,(-1),11975,9); //@line 1534 "../../iup_expander.c"
 $37 = $0; //@line 1535 "../../iup_expander.c"
 _iupClassRegisterAttribute($37,3969,0,155,(-1),20342,9); //@line 1535 "../../iup_expander.c"
 $38 = $0; //@line 1536 "../../iup_expander.c"
 _iupClassRegisterAttribute($38,3979,0,156,0,0,9); //@line 1536 "../../iup_expander.c"
 $39 = $0; //@line 1537 "../../iup_expander.c"
 _iupClassRegisterAttribute($39,3989,0,157,0,0,9); //@line 1537 "../../iup_expander.c"
 $40 = $0; //@line 1538 "../../iup_expander.c"
 _iupClassRegisterAttribute($40,3999,0,158,0,0,9); //@line 1538 "../../iup_expander.c"
 $41 = $0; //@line 1539 "../../iup_expander.c"
 _iupClassRegisterAttribute($41,20508,0,159,0,0,9); //@line 1539 "../../iup_expander.c"
 $42 = $0; //@line 1540 "../../iup_expander.c"
 _iupClassRegisterAttribute($42,4009,0,160,0,0,9); //@line 1540 "../../iup_expander.c"
 $43 = $0; //@line 1541 "../../iup_expander.c"
 _iupClassRegisterAttribute($43,4020,0,161,0,0,9); //@line 1541 "../../iup_expander.c"
 $44 = $0; //@line 1542 "../../iup_expander.c"
 _iupClassRegisterAttribute($44,4035,0,0,0,0,9); //@line 1542 "../../iup_expander.c"
 $45 = $0; //@line 1543 "../../iup_expander.c"
 _iupClassRegisterAttribute($45,4055,0,0,0,0,9); //@line 1543 "../../iup_expander.c"
 $46 = $0; //@line 1544 "../../iup_expander.c"
 _iupClassRegisterAttribute($46,4079,162,163,(-1),20140,9); //@line 1544 "../../iup_expander.c"
 $47 = $0; //@line 1545 "../../iup_expander.c"
 _iupClassRegisterAttribute($47,4091,164,165,(-1),20140,9); //@line 1545 "../../iup_expander.c"
 $48 = $0; //@line 1546 "../../iup_expander.c"
 _iupClassRegisterAttribute($48,4100,166,167,(-1),0,9); //@line 1546 "../../iup_expander.c"
 $49 = $0; //@line 1547 "../../iup_expander.c"
 _iupClassRegisterAttribute($49,4113,168,169,(-1),20140,9); //@line 1547 "../../iup_expander.c"
 $50 = $0; //@line 1548 "../../iup_expander.c"
 _iupClassRegisterAttribute($50,4123,0,0,(-1),20663,9); //@line 1548 "../../iup_expander.c"
 $51 = $0; //@line 1549 "../../iup_expander.c"
 _iupClassRegisterAttribute($51,4133,0,0,(-1),4143,9); //@line 1549 "../../iup_expander.c"
 $52 = $0; //@line 1551 "../../iup_expander.c"
 _iupClassRegisterAttribute($52,20169,0,170,0,0,9); //@line 1551 "../../iup_expander.c"
 $53 = $0; //@line 1552 "../../iup_expander.c"
 _iupClassRegisterAttribute($53,12295,0,0,0,0,9); //@line 1552 "../../iup_expander.c"
 $54 = $0; //@line 1553 "../../iup_expander.c"
 _iupClassRegisterAttribute($54,4146,0,171,0,0,9); //@line 1553 "../../iup_expander.c"
 $55 = $0; //@line 1554 "../../iup_expander.c"
 _iupClassRegisterAttribute($55,4156,0,0,0,0,9); //@line 1554 "../../iup_expander.c"
 $56 = $0; //@line 1556 "../../iup_expander.c"
 _iupClassRegisterAttribute($56,4175,0,172,0,0,9); //@line 1556 "../../iup_expander.c"
 $57 = $0; //@line 1557 "../../iup_expander.c"
 _iupClassRegisterAttribute($57,4187,0,173,0,0,9); //@line 1557 "../../iup_expander.c"
 $58 = $0; //@line 1558 "../../iup_expander.c"
 _iupClassRegisterAttribute($58,4204,0,174,0,0,9); //@line 1558 "../../iup_expander.c"
 $59 = $0; //@line 1559 "../../iup_expander.c"
 _iupClassRegisterAttribute($59,4225,0,175,0,0,9); //@line 1559 "../../iup_expander.c"
 $60 = $0; //@line 1560 "../../iup_expander.c"
 _iupClassRegisterAttribute($60,4237,0,176,0,0,9); //@line 1560 "../../iup_expander.c"
 $61 = $0; //@line 1561 "../../iup_expander.c"
 _iupClassRegisterAttribute($61,4254,0,177,0,0,9); //@line 1561 "../../iup_expander.c"
 $62 = $0; //@line 1562 "../../iup_expander.c"
 _iupClassRegisterAttribute($62,4275,0,178,0,0,9); //@line 1562 "../../iup_expander.c"
 $63 = $0; //@line 1563 "../../iup_expander.c"
 _iupClassRegisterAttribute($63,4287,0,179,0,0,9); //@line 1563 "../../iup_expander.c"
 $64 = $0; //@line 1564 "../../iup_expander.c"
 _iupClassRegisterAttribute($64,4304,0,180,0,0,9); //@line 1564 "../../iup_expander.c"
 $65 = (_IupGetHandle(4325)|0); //@line 1566 "../../iup_expander.c"
 $66 = ($65|0)!=(0|0); //@line 1566 "../../iup_expander.c"
 if ($66) {
  $67 = (_IupGetHandle(4336)|0); //@line 1566 "../../iup_expander.c"
  $68 = ($67|0)!=(0|0); //@line 1566 "../../iup_expander.c"
  if ($68) {
   $69 = $0; //@line 1569 "../../iup_expander.c"
   STACKTOP = sp;return ($69|0); //@line 1569 "../../iup_expander.c"
  }
 }
 _iExpanderLoadImages(); //@line 1567 "../../iup_expander.c"
 $69 = $0; //@line 1569 "../../iup_expander.c"
 STACKTOP = sp;return ($69|0); //@line 1569 "../../iup_expander.c"
}
function _iExpanderCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_calloc(1,36)|0); //@line 1463 "../../iup_expander.c"
 $7 = $2; //@line 1463 "../../iup_expander.c"
 $8 = ((($7)) + 72|0); //@line 1463 "../../iup_expander.c"
 HEAP32[$8>>2] = $6; //@line 1463 "../../iup_expander.c"
 $9 = $2; //@line 1465 "../../iup_expander.c"
 $10 = ((($9)) + 72|0); //@line 1465 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 1465 "../../iup_expander.c"
 HEAP32[$11>>2] = 2; //@line 1465 "../../iup_expander.c"
 $12 = $2; //@line 1466 "../../iup_expander.c"
 $13 = ((($12)) + 72|0); //@line 1466 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 1466 "../../iup_expander.c"
 $15 = ((($14)) + 4|0); //@line 1466 "../../iup_expander.c"
 HEAP32[$15>>2] = 1; //@line 1466 "../../iup_expander.c"
 $16 = $2; //@line 1467 "../../iup_expander.c"
 $17 = ((($16)) + 72|0); //@line 1467 "../../iup_expander.c"
 $18 = HEAP32[$17>>2]|0; //@line 1467 "../../iup_expander.c"
 $19 = ((($18)) + 8|0); //@line 1467 "../../iup_expander.c"
 HEAP32[$19>>2] = -1; //@line 1467 "../../iup_expander.c"
 $20 = (_IupBackgroundBox(0)|0); //@line 1469 "../../iup_expander.c"
 $4 = $20; //@line 1469 "../../iup_expander.c"
 $21 = $2; //@line 1470 "../../iup_expander.c"
 $22 = $4; //@line 1470 "../../iup_expander.c"
 _iupChildTreeAppend($21,$22); //@line 1470 "../../iup_expander.c"
 $23 = $4; //@line 1471 "../../iup_expander.c"
 $24 = ((($23)) + 24|0); //@line 1471 "../../iup_expander.c"
 $25 = HEAP32[$24>>2]|0; //@line 1471 "../../iup_expander.c"
 $26 = $25 | 16; //@line 1471 "../../iup_expander.c"
 HEAP32[$24>>2] = $26; //@line 1471 "../../iup_expander.c"
 $27 = $2; //@line 1473 "../../iup_expander.c"
 _iExpanderUpdateBox($27); //@line 1473 "../../iup_expander.c"
 $28 = $4; //@line 1475 "../../iup_expander.c"
 _IupSetAttribute($28,15995,20140); //@line 1475 "../../iup_expander.c"
 $29 = $4; //@line 1476 "../../iup_expander.c"
 _IupSetAttribute($29,17637,20140); //@line 1476 "../../iup_expander.c"
 $30 = $4; //@line 1477 "../../iup_expander.c"
 _IupSetAttribute($30,20073,20441); //@line 1477 "../../iup_expander.c"
 $31 = $3; //@line 1479 "../../iup_expander.c"
 $32 = ($31|0)!=(0|0); //@line 1479 "../../iup_expander.c"
 if (!($32)) {
  STACKTOP = sp;return 0; //@line 1486 "../../iup_expander.c"
 }
 $33 = $3; //@line 1481 "../../iup_expander.c"
 $5 = $33; //@line 1481 "../../iup_expander.c"
 $34 = $5; //@line 1482 "../../iup_expander.c"
 $35 = HEAP32[$34>>2]|0; //@line 1482 "../../iup_expander.c"
 $36 = ($35|0)!=(0|0); //@line 1482 "../../iup_expander.c"
 if (!($36)) {
  STACKTOP = sp;return 0; //@line 1486 "../../iup_expander.c"
 }
 $37 = $2; //@line 1483 "../../iup_expander.c"
 $38 = $5; //@line 1483 "../../iup_expander.c"
 $39 = HEAP32[$38>>2]|0; //@line 1483 "../../iup_expander.c"
 (_IupAppend($37,$39)|0); //@line 1483 "../../iup_expander.c"
 STACKTOP = sp;return 0; //@line 1486 "../../iup_expander.c"
}
function _iExpanderDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 1491 "../../iup_expander.c"
 $3 = ((($2)) + 72|0); //@line 1491 "../../iup_expander.c"
 $4 = HEAP32[$3>>2]|0; //@line 1491 "../../iup_expander.c"
 $5 = ((($4)) + 28|0); //@line 1491 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1491 "../../iup_expander.c"
 $7 = ($6|0)!=(0|0); //@line 1491 "../../iup_expander.c"
 if ($7) {
  $8 = $1; //@line 1492 "../../iup_expander.c"
  $9 = ((($8)) + 72|0); //@line 1492 "../../iup_expander.c"
  $10 = HEAP32[$9>>2]|0; //@line 1492 "../../iup_expander.c"
  $11 = ((($10)) + 28|0); //@line 1492 "../../iup_expander.c"
  $12 = HEAP32[$11>>2]|0; //@line 1492 "../../iup_expander.c"
  _IupDestroy($12); //@line 1492 "../../iup_expander.c"
 }
 $13 = $1; //@line 1493 "../../iup_expander.c"
 $14 = ((($13)) + 72|0); //@line 1493 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 1493 "../../iup_expander.c"
 $16 = ((($15)) + 32|0); //@line 1493 "../../iup_expander.c"
 $17 = HEAP32[$16>>2]|0; //@line 1493 "../../iup_expander.c"
 $18 = ($17|0)!=(0|0); //@line 1493 "../../iup_expander.c"
 if (!($18)) {
  STACKTOP = sp;return; //@line 1495 "../../iup_expander.c"
 }
 $19 = $1; //@line 1494 "../../iup_expander.c"
 $20 = ((($19)) + 72|0); //@line 1494 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 1494 "../../iup_expander.c"
 $22 = ((($21)) + 32|0); //@line 1494 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 1494 "../../iup_expander.c"
 _IupDestroy($23); //@line 1494 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 1495 "../../iup_expander.c"
}
function _iExpanderChildAddedMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1455 "../../iup_expander.c"
 $5 = $2; //@line 1455 "../../iup_expander.c"
 $6 = ((($5)) + 72|0); //@line 1455 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1455 "../../iup_expander.c"
 $8 = ((($7)) + 4|0); //@line 1455 "../../iup_expander.c"
 $9 = HEAP32[$8>>2]|0; //@line 1455 "../../iup_expander.c"
 _iExpanderOpenCloseChild($4,0,0,$9); //@line 1455 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 1457 "../../iup_expander.c"
}
function _iExpanderComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = 0; //@line 1316 "../../iup_expander.c"
 $15 = $4; //@line 1318 "../../iup_expander.c"
 $16 = ((($15)) + 64|0); //@line 1318 "../../iup_expander.c"
 $17 = HEAP32[$16>>2]|0; //@line 1318 "../../iup_expander.c"
 $11 = $17; //@line 1318 "../../iup_expander.c"
 $18 = $11; //@line 1319 "../../iup_expander.c"
 $19 = ((($18)) + 68|0); //@line 1319 "../../iup_expander.c"
 $20 = HEAP32[$19>>2]|0; //@line 1319 "../../iup_expander.c"
 $12 = $20; //@line 1319 "../../iup_expander.c"
 $21 = $11; //@line 1320 "../../iup_expander.c"
 $22 = ((($21)) + 64|0); //@line 1320 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 1320 "../../iup_expander.c"
 $13 = $23; //@line 1320 "../../iup_expander.c"
 $24 = $4; //@line 1321 "../../iup_expander.c"
 $25 = (_iExpanderGetBarSize($24)|0); //@line 1321 "../../iup_expander.c"
 $14 = $25; //@line 1321 "../../iup_expander.c"
 $26 = $13; //@line 1323 "../../iup_expander.c"
 _iupBaseComputeNaturalSize($26); //@line 1323 "../../iup_expander.c"
 $27 = $4; //@line 1326 "../../iup_expander.c"
 $28 = ((($27)) + 72|0); //@line 1326 "../../iup_expander.c"
 $29 = HEAP32[$28>>2]|0; //@line 1326 "../../iup_expander.c"
 $30 = HEAP32[$29>>2]|0; //@line 1326 "../../iup_expander.c"
 $31 = ($30|0)==(0); //@line 1326 "../../iup_expander.c"
 if ($31) {
  label = 3;
 } else {
  $32 = $4; //@line 1326 "../../iup_expander.c"
  $33 = ((($32)) + 72|0); //@line 1326 "../../iup_expander.c"
  $34 = HEAP32[$33>>2]|0; //@line 1326 "../../iup_expander.c"
  $35 = HEAP32[$34>>2]|0; //@line 1326 "../../iup_expander.c"
  $36 = ($35|0)==(1); //@line 1326 "../../iup_expander.c"
  if ($36) {
   label = 3;
  } else {
   $41 = $13; //@line 1333 "../../iup_expander.c"
   $42 = ((($41)) + 44|0); //@line 1333 "../../iup_expander.c"
   $43 = HEAP32[$42>>2]|0; //@line 1333 "../../iup_expander.c"
   $9 = $43; //@line 1333 "../../iup_expander.c"
   $44 = $14; //@line 1334 "../../iup_expander.c"
   $10 = $44; //@line 1334 "../../iup_expander.c"
  }
 }
 if ((label|0) == 3) {
  $37 = $14; //@line 1328 "../../iup_expander.c"
  $9 = $37; //@line 1328 "../../iup_expander.c"
  $38 = $13; //@line 1329 "../../iup_expander.c"
  $39 = ((($38)) + 48|0); //@line 1329 "../../iup_expander.c"
  $40 = HEAP32[$39>>2]|0; //@line 1329 "../../iup_expander.c"
  $10 = $40; //@line 1329 "../../iup_expander.c"
 }
 $45 = $12; //@line 1337 "../../iup_expander.c"
 $46 = ($45|0)!=(0|0); //@line 1337 "../../iup_expander.c"
 do {
  if ($46) {
   $47 = $12; //@line 1340 "../../iup_expander.c"
   _iupBaseComputeNaturalSize($47); //@line 1340 "../../iup_expander.c"
   $48 = $4; //@line 1342 "../../iup_expander.c"
   $49 = ((($48)) + 72|0); //@line 1342 "../../iup_expander.c"
   $50 = HEAP32[$49>>2]|0; //@line 1342 "../../iup_expander.c"
   $51 = HEAP32[$50>>2]|0; //@line 1342 "../../iup_expander.c"
   $52 = ($51|0)==(0); //@line 1342 "../../iup_expander.c"
   if ($52) {
    label = 8;
   } else {
    $53 = $4; //@line 1342 "../../iup_expander.c"
    $54 = ((($53)) + 72|0); //@line 1342 "../../iup_expander.c"
    $55 = HEAP32[$54>>2]|0; //@line 1342 "../../iup_expander.c"
    $56 = HEAP32[$55>>2]|0; //@line 1342 "../../iup_expander.c"
    $57 = ($56|0)==(1); //@line 1342 "../../iup_expander.c"
    if ($57) {
     label = 8;
    } else {
     $79 = $9; //@line 1350 "../../iup_expander.c"
     $80 = $12; //@line 1350 "../../iup_expander.c"
     $81 = ((($80)) + 44|0); //@line 1350 "../../iup_expander.c"
     $82 = HEAP32[$81>>2]|0; //@line 1350 "../../iup_expander.c"
     $83 = ($79|0)>($82|0); //@line 1350 "../../iup_expander.c"
     if ($83) {
      $84 = $9; //@line 1350 "../../iup_expander.c"
      $88 = $84;
     } else {
      $85 = $12; //@line 1350 "../../iup_expander.c"
      $86 = ((($85)) + 44|0); //@line 1350 "../../iup_expander.c"
      $87 = HEAP32[$86>>2]|0; //@line 1350 "../../iup_expander.c"
      $88 = $87;
     }
     $9 = $88; //@line 1350 "../../iup_expander.c"
     $89 = $4; //@line 1351 "../../iup_expander.c"
     $90 = ((($89)) + 72|0); //@line 1351 "../../iup_expander.c"
     $91 = HEAP32[$90>>2]|0; //@line 1351 "../../iup_expander.c"
     $92 = ((($91)) + 4|0); //@line 1351 "../../iup_expander.c"
     $93 = HEAP32[$92>>2]|0; //@line 1351 "../../iup_expander.c"
     $94 = ($93|0)==(1); //@line 1351 "../../iup_expander.c"
     if ($94) {
      $95 = $12; //@line 1352 "../../iup_expander.c"
      $96 = ((($95)) + 48|0); //@line 1352 "../../iup_expander.c"
      $97 = HEAP32[$96>>2]|0; //@line 1352 "../../iup_expander.c"
      $98 = $10; //@line 1352 "../../iup_expander.c"
      $99 = (($98) + ($97))|0; //@line 1352 "../../iup_expander.c"
      $10 = $99; //@line 1352 "../../iup_expander.c"
     }
    }
   }
   if ((label|0) == 8) {
    $58 = $4; //@line 1344 "../../iup_expander.c"
    $59 = ((($58)) + 72|0); //@line 1344 "../../iup_expander.c"
    $60 = HEAP32[$59>>2]|0; //@line 1344 "../../iup_expander.c"
    $61 = ((($60)) + 4|0); //@line 1344 "../../iup_expander.c"
    $62 = HEAP32[$61>>2]|0; //@line 1344 "../../iup_expander.c"
    $63 = ($62|0)==(1); //@line 1344 "../../iup_expander.c"
    if ($63) {
     $64 = $12; //@line 1345 "../../iup_expander.c"
     $65 = ((($64)) + 44|0); //@line 1345 "../../iup_expander.c"
     $66 = HEAP32[$65>>2]|0; //@line 1345 "../../iup_expander.c"
     $67 = $9; //@line 1345 "../../iup_expander.c"
     $68 = (($67) + ($66))|0; //@line 1345 "../../iup_expander.c"
     $9 = $68; //@line 1345 "../../iup_expander.c"
    }
    $69 = $10; //@line 1346 "../../iup_expander.c"
    $70 = $12; //@line 1346 "../../iup_expander.c"
    $71 = ((($70)) + 48|0); //@line 1346 "../../iup_expander.c"
    $72 = HEAP32[$71>>2]|0; //@line 1346 "../../iup_expander.c"
    $73 = ($69|0)>($72|0); //@line 1346 "../../iup_expander.c"
    if ($73) {
     $74 = $10; //@line 1346 "../../iup_expander.c"
     $78 = $74;
    } else {
     $75 = $12; //@line 1346 "../../iup_expander.c"
     $76 = ((($75)) + 48|0); //@line 1346 "../../iup_expander.c"
     $77 = HEAP32[$76>>2]|0; //@line 1346 "../../iup_expander.c"
     $78 = $77;
    }
    $10 = $78; //@line 1346 "../../iup_expander.c"
   }
   $100 = $4; //@line 1355 "../../iup_expander.c"
   $101 = ((($100)) + 72|0); //@line 1355 "../../iup_expander.c"
   $102 = HEAP32[$101>>2]|0; //@line 1355 "../../iup_expander.c"
   $103 = ((($102)) + 4|0); //@line 1355 "../../iup_expander.c"
   $104 = HEAP32[$103>>2]|0; //@line 1355 "../../iup_expander.c"
   $105 = ($104|0)==(1); //@line 1355 "../../iup_expander.c"
   if ($105) {
    $106 = $12; //@line 1356 "../../iup_expander.c"
    $107 = ((($106)) + 20|0); //@line 1356 "../../iup_expander.c"
    $108 = HEAP32[$107>>2]|0; //@line 1356 "../../iup_expander.c"
    $8 = $108; //@line 1356 "../../iup_expander.c"
    break;
   }
   $109 = $4; //@line 1359 "../../iup_expander.c"
   $110 = ((($109)) + 72|0); //@line 1359 "../../iup_expander.c"
   $111 = HEAP32[$110>>2]|0; //@line 1359 "../../iup_expander.c"
   $112 = HEAP32[$111>>2]|0; //@line 1359 "../../iup_expander.c"
   $113 = ($112|0)==(0); //@line 1359 "../../iup_expander.c"
   if (!($113)) {
    $114 = $4; //@line 1359 "../../iup_expander.c"
    $115 = ((($114)) + 72|0); //@line 1359 "../../iup_expander.c"
    $116 = HEAP32[$115>>2]|0; //@line 1359 "../../iup_expander.c"
    $117 = HEAP32[$116>>2]|0; //@line 1359 "../../iup_expander.c"
    $118 = ($117|0)==(1); //@line 1359 "../../iup_expander.c"
    if (!($118)) {
     $123 = $12; //@line 1362 "../../iup_expander.c"
     $124 = ((($123)) + 20|0); //@line 1362 "../../iup_expander.c"
     $125 = HEAP32[$124>>2]|0; //@line 1362 "../../iup_expander.c"
     $126 = $125 & 12; //@line 1362 "../../iup_expander.c"
     $8 = $126; //@line 1362 "../../iup_expander.c"
     break;
    }
   }
   $119 = $12; //@line 1360 "../../iup_expander.c"
   $120 = ((($119)) + 20|0); //@line 1360 "../../iup_expander.c"
   $121 = HEAP32[$120>>2]|0; //@line 1360 "../../iup_expander.c"
   $122 = $121 & 3; //@line 1360 "../../iup_expander.c"
   $8 = $122; //@line 1360 "../../iup_expander.c"
  }
 } while(0);
 $127 = $8; //@line 1366 "../../iup_expander.c"
 $128 = $7; //@line 1366 "../../iup_expander.c"
 HEAP32[$128>>2] = $127; //@line 1366 "../../iup_expander.c"
 $129 = $9; //@line 1367 "../../iup_expander.c"
 $130 = $5; //@line 1367 "../../iup_expander.c"
 HEAP32[$130>>2] = $129; //@line 1367 "../../iup_expander.c"
 $131 = $10; //@line 1368 "../../iup_expander.c"
 $132 = $6; //@line 1368 "../../iup_expander.c"
 HEAP32[$132>>2] = $131; //@line 1368 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 1369 "../../iup_expander.c"
}
function _iExpanderSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $10 = $2; //@line 1373 "../../iup_expander.c"
 $11 = ((($10)) + 64|0); //@line 1373 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 1373 "../../iup_expander.c"
 $4 = $12; //@line 1373 "../../iup_expander.c"
 $13 = $4; //@line 1374 "../../iup_expander.c"
 $14 = ((($13)) + 68|0); //@line 1374 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 1374 "../../iup_expander.c"
 $5 = $15; //@line 1374 "../../iup_expander.c"
 $16 = $4; //@line 1375 "../../iup_expander.c"
 $17 = ((($16)) + 64|0); //@line 1375 "../../iup_expander.c"
 $18 = HEAP32[$17>>2]|0; //@line 1375 "../../iup_expander.c"
 $6 = $18; //@line 1375 "../../iup_expander.c"
 $19 = $2; //@line 1376 "../../iup_expander.c"
 $20 = ((($19)) + 52|0); //@line 1376 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 1376 "../../iup_expander.c"
 $7 = $21; //@line 1376 "../../iup_expander.c"
 $22 = $2; //@line 1377 "../../iup_expander.c"
 $23 = ((($22)) + 56|0); //@line 1377 "../../iup_expander.c"
 $24 = HEAP32[$23>>2]|0; //@line 1377 "../../iup_expander.c"
 $8 = $24; //@line 1377 "../../iup_expander.c"
 $25 = $2; //@line 1378 "../../iup_expander.c"
 $26 = (_iExpanderGetBarSize($25)|0); //@line 1378 "../../iup_expander.c"
 $9 = $26; //@line 1378 "../../iup_expander.c"
 $27 = $2; //@line 1380 "../../iup_expander.c"
 $28 = ((($27)) + 72|0); //@line 1380 "../../iup_expander.c"
 $29 = HEAP32[$28>>2]|0; //@line 1380 "../../iup_expander.c"
 $30 = HEAP32[$29>>2]|0; //@line 1380 "../../iup_expander.c"
 $31 = ($30|0)==(0); //@line 1380 "../../iup_expander.c"
 if ($31) {
  label = 3;
 } else {
  $32 = $2; //@line 1380 "../../iup_expander.c"
  $33 = ((($32)) + 72|0); //@line 1380 "../../iup_expander.c"
  $34 = HEAP32[$33>>2]|0; //@line 1380 "../../iup_expander.c"
  $35 = HEAP32[$34>>2]|0; //@line 1380 "../../iup_expander.c"
  $36 = ($35|0)==(1); //@line 1380 "../../iup_expander.c"
  if ($36) {
   label = 3;
  } else {
   $58 = $2; //@line 1392 "../../iup_expander.c"
   $59 = ((($58)) + 52|0); //@line 1392 "../../iup_expander.c"
   $60 = HEAP32[$59>>2]|0; //@line 1392 "../../iup_expander.c"
   $61 = $4; //@line 1392 "../../iup_expander.c"
   $62 = ((($61)) + 52|0); //@line 1392 "../../iup_expander.c"
   HEAP32[$62>>2] = $60; //@line 1392 "../../iup_expander.c"
   $63 = $9; //@line 1393 "../../iup_expander.c"
   $64 = $4; //@line 1393 "../../iup_expander.c"
   $65 = ((($64)) + 56|0); //@line 1393 "../../iup_expander.c"
   HEAP32[$65>>2] = $63; //@line 1393 "../../iup_expander.c"
   $66 = $2; //@line 1395 "../../iup_expander.c"
   $67 = ((($66)) + 56|0); //@line 1395 "../../iup_expander.c"
   $68 = HEAP32[$67>>2]|0; //@line 1395 "../../iup_expander.c"
   $69 = $9; //@line 1395 "../../iup_expander.c"
   $70 = ($68|0)<($69|0); //@line 1395 "../../iup_expander.c"
   if ($70) {
    $71 = $9; //@line 1396 "../../iup_expander.c"
    $72 = $2; //@line 1396 "../../iup_expander.c"
    $73 = ((($72)) + 56|0); //@line 1396 "../../iup_expander.c"
    HEAP32[$73>>2] = $71; //@line 1396 "../../iup_expander.c"
   }
   $74 = $2; //@line 1398 "../../iup_expander.c"
   $75 = ((($74)) + 56|0); //@line 1398 "../../iup_expander.c"
   $76 = HEAP32[$75>>2]|0; //@line 1398 "../../iup_expander.c"
   $77 = $9; //@line 1398 "../../iup_expander.c"
   $78 = (($76) - ($77))|0; //@line 1398 "../../iup_expander.c"
   $8 = $78; //@line 1398 "../../iup_expander.c"
  }
 }
 if ((label|0) == 3) {
  $37 = $9; //@line 1382 "../../iup_expander.c"
  $38 = $4; //@line 1382 "../../iup_expander.c"
  $39 = ((($38)) + 52|0); //@line 1382 "../../iup_expander.c"
  HEAP32[$39>>2] = $37; //@line 1382 "../../iup_expander.c"
  $40 = $2; //@line 1383 "../../iup_expander.c"
  $41 = ((($40)) + 56|0); //@line 1383 "../../iup_expander.c"
  $42 = HEAP32[$41>>2]|0; //@line 1383 "../../iup_expander.c"
  $43 = $4; //@line 1383 "../../iup_expander.c"
  $44 = ((($43)) + 56|0); //@line 1383 "../../iup_expander.c"
  HEAP32[$44>>2] = $42; //@line 1383 "../../iup_expander.c"
  $45 = $2; //@line 1385 "../../iup_expander.c"
  $46 = ((($45)) + 52|0); //@line 1385 "../../iup_expander.c"
  $47 = HEAP32[$46>>2]|0; //@line 1385 "../../iup_expander.c"
  $48 = $9; //@line 1385 "../../iup_expander.c"
  $49 = ($47|0)<($48|0); //@line 1385 "../../iup_expander.c"
  if ($49) {
   $50 = $9; //@line 1386 "../../iup_expander.c"
   $51 = $2; //@line 1386 "../../iup_expander.c"
   $52 = ((($51)) + 52|0); //@line 1386 "../../iup_expander.c"
   HEAP32[$52>>2] = $50; //@line 1386 "../../iup_expander.c"
  }
  $53 = $2; //@line 1388 "../../iup_expander.c"
  $54 = ((($53)) + 52|0); //@line 1388 "../../iup_expander.c"
  $55 = HEAP32[$54>>2]|0; //@line 1388 "../../iup_expander.c"
  $56 = $9; //@line 1388 "../../iup_expander.c"
  $57 = (($55) - ($56))|0; //@line 1388 "../../iup_expander.c"
  $7 = $57; //@line 1388 "../../iup_expander.c"
 }
 $79 = $4; //@line 1402 "../../iup_expander.c"
 $80 = ((($79)) + 52|0); //@line 1402 "../../iup_expander.c"
 $81 = HEAP32[$80>>2]|0; //@line 1402 "../../iup_expander.c"
 $82 = $6; //@line 1402 "../../iup_expander.c"
 $83 = ((($82)) + 44|0); //@line 1402 "../../iup_expander.c"
 HEAP32[$83>>2] = $81; //@line 1402 "../../iup_expander.c"
 $84 = $4; //@line 1403 "../../iup_expander.c"
 $85 = ((($84)) + 56|0); //@line 1403 "../../iup_expander.c"
 $86 = HEAP32[$85>>2]|0; //@line 1403 "../../iup_expander.c"
 $87 = $6; //@line 1403 "../../iup_expander.c"
 $88 = ((($87)) + 48|0); //@line 1403 "../../iup_expander.c"
 HEAP32[$88>>2] = $86; //@line 1403 "../../iup_expander.c"
 $89 = $6; //@line 1404 "../../iup_expander.c"
 $90 = $4; //@line 1404 "../../iup_expander.c"
 $91 = ((($90)) + 52|0); //@line 1404 "../../iup_expander.c"
 $92 = HEAP32[$91>>2]|0; //@line 1404 "../../iup_expander.c"
 $93 = $4; //@line 1404 "../../iup_expander.c"
 $94 = ((($93)) + 56|0); //@line 1404 "../../iup_expander.c"
 $95 = HEAP32[$94>>2]|0; //@line 1404 "../../iup_expander.c"
 $96 = $3; //@line 1404 "../../iup_expander.c"
 _iupBaseSetCurrentSize($89,$92,$95,$96); //@line 1404 "../../iup_expander.c"
 $97 = $5; //@line 1406 "../../iup_expander.c"
 $98 = ($97|0)!=(0|0); //@line 1406 "../../iup_expander.c"
 if (!($98)) {
  STACKTOP = sp;return; //@line 1413 "../../iup_expander.c"
 }
 $99 = $2; //@line 1408 "../../iup_expander.c"
 $100 = ((($99)) + 72|0); //@line 1408 "../../iup_expander.c"
 $101 = HEAP32[$100>>2]|0; //@line 1408 "../../iup_expander.c"
 $102 = ((($101)) + 4|0); //@line 1408 "../../iup_expander.c"
 $103 = HEAP32[$102>>2]|0; //@line 1408 "../../iup_expander.c"
 $104 = ($103|0)==(1); //@line 1408 "../../iup_expander.c"
 if ($104) {
  $105 = $5; //@line 1409 "../../iup_expander.c"
  $106 = $7; //@line 1409 "../../iup_expander.c"
  $107 = $8; //@line 1409 "../../iup_expander.c"
  $108 = $3; //@line 1409 "../../iup_expander.c"
  _iupBaseSetCurrentSize($105,$106,$107,$108); //@line 1409 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 1413 "../../iup_expander.c"
 }
 $109 = $2; //@line 1410 "../../iup_expander.c"
 $110 = ((($109)) + 72|0); //@line 1410 "../../iup_expander.c"
 $111 = HEAP32[$110>>2]|0; //@line 1410 "../../iup_expander.c"
 $112 = ((($111)) + 4|0); //@line 1410 "../../iup_expander.c"
 $113 = HEAP32[$112>>2]|0; //@line 1410 "../../iup_expander.c"
 $114 = ($113|0)==(2); //@line 1410 "../../iup_expander.c"
 if (!($114)) {
  STACKTOP = sp;return; //@line 1413 "../../iup_expander.c"
 }
 $115 = $5; //@line 1411 "../../iup_expander.c"
 $116 = $5; //@line 1411 "../../iup_expander.c"
 $117 = ((($116)) + 52|0); //@line 1411 "../../iup_expander.c"
 $118 = HEAP32[$117>>2]|0; //@line 1411 "../../iup_expander.c"
 $119 = $5; //@line 1411 "../../iup_expander.c"
 $120 = ((($119)) + 56|0); //@line 1411 "../../iup_expander.c"
 $121 = HEAP32[$120>>2]|0; //@line 1411 "../../iup_expander.c"
 $122 = $3; //@line 1411 "../../iup_expander.c"
 _iupBaseSetCurrentSize($115,$118,$121,$122); //@line 1411 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 1413 "../../iup_expander.c"
}
function _iExpanderSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 1417 "../../iup_expander.c"
 $10 = ((($9)) + 64|0); //@line 1417 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 1417 "../../iup_expander.c"
 $6 = $11; //@line 1417 "../../iup_expander.c"
 $12 = $6; //@line 1418 "../../iup_expander.c"
 $13 = ((($12)) + 68|0); //@line 1418 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 1418 "../../iup_expander.c"
 $7 = $14; //@line 1418 "../../iup_expander.c"
 $15 = $3; //@line 1419 "../../iup_expander.c"
 $16 = (_iExpanderGetBarSize($15)|0); //@line 1419 "../../iup_expander.c"
 $8 = $16; //@line 1419 "../../iup_expander.c"
 $17 = $3; //@line 1422 "../../iup_expander.c"
 $18 = ((($17)) + 72|0); //@line 1422 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 1422 "../../iup_expander.c"
 $20 = HEAP32[$19>>2]|0; //@line 1422 "../../iup_expander.c"
 $21 = ($20|0)==(0); //@line 1422 "../../iup_expander.c"
 do {
  if ($21) {
   $22 = $6; //@line 1424 "../../iup_expander.c"
   $23 = $4; //@line 1424 "../../iup_expander.c"
   $24 = $5; //@line 1424 "../../iup_expander.c"
   _iupBaseSetPosition($22,$23,$24); //@line 1424 "../../iup_expander.c"
   $25 = $8; //@line 1425 "../../iup_expander.c"
   $26 = $4; //@line 1425 "../../iup_expander.c"
   $27 = (($26) + ($25))|0; //@line 1425 "../../iup_expander.c"
   $4 = $27; //@line 1425 "../../iup_expander.c"
  } else {
   $28 = $3; //@line 1427 "../../iup_expander.c"
   $29 = ((($28)) + 72|0); //@line 1427 "../../iup_expander.c"
   $30 = HEAP32[$29>>2]|0; //@line 1427 "../../iup_expander.c"
   $31 = HEAP32[$30>>2]|0; //@line 1427 "../../iup_expander.c"
   $32 = ($31|0)==(1); //@line 1427 "../../iup_expander.c"
   if ($32) {
    $33 = $6; //@line 1428 "../../iup_expander.c"
    $34 = $4; //@line 1428 "../../iup_expander.c"
    $35 = $3; //@line 1428 "../../iup_expander.c"
    $36 = ((($35)) + 52|0); //@line 1428 "../../iup_expander.c"
    $37 = HEAP32[$36>>2]|0; //@line 1428 "../../iup_expander.c"
    $38 = (($34) + ($37))|0; //@line 1428 "../../iup_expander.c"
    $39 = $8; //@line 1428 "../../iup_expander.c"
    $40 = (($38) - ($39))|0; //@line 1428 "../../iup_expander.c"
    $41 = $5; //@line 1428 "../../iup_expander.c"
    _iupBaseSetPosition($33,$40,$41); //@line 1428 "../../iup_expander.c"
    break;
   }
   $42 = $3; //@line 1429 "../../iup_expander.c"
   $43 = ((($42)) + 72|0); //@line 1429 "../../iup_expander.c"
   $44 = HEAP32[$43>>2]|0; //@line 1429 "../../iup_expander.c"
   $45 = HEAP32[$44>>2]|0; //@line 1429 "../../iup_expander.c"
   $46 = ($45|0)==(3); //@line 1429 "../../iup_expander.c"
   $47 = $6; //@line 1430 "../../iup_expander.c"
   $48 = $4; //@line 1430 "../../iup_expander.c"
   $49 = $5; //@line 1430 "../../iup_expander.c"
   if ($46) {
    $50 = $3; //@line 1430 "../../iup_expander.c"
    $51 = ((($50)) + 56|0); //@line 1430 "../../iup_expander.c"
    $52 = HEAP32[$51>>2]|0; //@line 1430 "../../iup_expander.c"
    $53 = (($49) + ($52))|0; //@line 1430 "../../iup_expander.c"
    $54 = $8; //@line 1430 "../../iup_expander.c"
    $55 = (($53) - ($54))|0; //@line 1430 "../../iup_expander.c"
    _iupBaseSetPosition($47,$48,$55); //@line 1430 "../../iup_expander.c"
    break;
   } else {
    _iupBaseSetPosition($47,$48,$49); //@line 1433 "../../iup_expander.c"
    $56 = $8; //@line 1434 "../../iup_expander.c"
    $57 = $5; //@line 1434 "../../iup_expander.c"
    $58 = (($57) + ($56))|0; //@line 1434 "../../iup_expander.c"
    $5 = $58; //@line 1434 "../../iup_expander.c"
    break;
   }
  }
 } while(0);
 $59 = $7; //@line 1437 "../../iup_expander.c"
 $60 = ($59|0)!=(0|0); //@line 1437 "../../iup_expander.c"
 if (!($60)) {
  STACKTOP = sp;return; //@line 1451 "../../iup_expander.c"
 }
 $61 = $3; //@line 1439 "../../iup_expander.c"
 $62 = ((($61)) + 72|0); //@line 1439 "../../iup_expander.c"
 $63 = HEAP32[$62>>2]|0; //@line 1439 "../../iup_expander.c"
 $64 = ((($63)) + 4|0); //@line 1439 "../../iup_expander.c"
 $65 = HEAP32[$64>>2]|0; //@line 1439 "../../iup_expander.c"
 $66 = ($65|0)==(1); //@line 1439 "../../iup_expander.c"
 if ($66) {
  $67 = $7; //@line 1440 "../../iup_expander.c"
  $68 = $4; //@line 1440 "../../iup_expander.c"
  $69 = $5; //@line 1440 "../../iup_expander.c"
  _iupBaseSetPosition($67,$68,$69); //@line 1440 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 1451 "../../iup_expander.c"
 }
 $70 = $3; //@line 1441 "../../iup_expander.c"
 $71 = ((($70)) + 72|0); //@line 1441 "../../iup_expander.c"
 $72 = HEAP32[$71>>2]|0; //@line 1441 "../../iup_expander.c"
 $73 = ((($72)) + 4|0); //@line 1441 "../../iup_expander.c"
 $74 = HEAP32[$73>>2]|0; //@line 1441 "../../iup_expander.c"
 $75 = ($74|0)==(2); //@line 1441 "../../iup_expander.c"
 if (!($75)) {
  STACKTOP = sp;return; //@line 1451 "../../iup_expander.c"
 }
 $76 = $3; //@line 1443 "../../iup_expander.c"
 $77 = ((($76)) + 72|0); //@line 1443 "../../iup_expander.c"
 $78 = HEAP32[$77>>2]|0; //@line 1443 "../../iup_expander.c"
 $79 = HEAP32[$78>>2]|0; //@line 1443 "../../iup_expander.c"
 $80 = ($79|0)==(1); //@line 1443 "../../iup_expander.c"
 if ($80) {
  $81 = $7; //@line 1444 "../../iup_expander.c"
  $82 = ((($81)) + 52|0); //@line 1444 "../../iup_expander.c"
  $83 = HEAP32[$82>>2]|0; //@line 1444 "../../iup_expander.c"
  $84 = $4; //@line 1444 "../../iup_expander.c"
  $85 = (($84) - ($83))|0; //@line 1444 "../../iup_expander.c"
  $4 = $85; //@line 1444 "../../iup_expander.c"
 } else {
  $86 = $3; //@line 1445 "../../iup_expander.c"
  $87 = ((($86)) + 72|0); //@line 1445 "../../iup_expander.c"
  $88 = HEAP32[$87>>2]|0; //@line 1445 "../../iup_expander.c"
  $89 = HEAP32[$88>>2]|0; //@line 1445 "../../iup_expander.c"
  $90 = ($89|0)==(3); //@line 1445 "../../iup_expander.c"
  if ($90) {
   $91 = $7; //@line 1446 "../../iup_expander.c"
   $92 = ((($91)) + 56|0); //@line 1446 "../../iup_expander.c"
   $93 = HEAP32[$92>>2]|0; //@line 1446 "../../iup_expander.c"
   $94 = $5; //@line 1446 "../../iup_expander.c"
   $95 = (($94) - ($93))|0; //@line 1446 "../../iup_expander.c"
   $5 = $95; //@line 1446 "../../iup_expander.c"
  }
 }
 $96 = $7; //@line 1448 "../../iup_expander.c"
 $97 = $4; //@line 1448 "../../iup_expander.c"
 $98 = $5; //@line 1448 "../../iup_expander.c"
 _iupBaseSetPosition($96,$97,$98); //@line 1448 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 1451 "../../iup_expander.c"
}
function _iExpanderGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 935 "../../iup_expander.c"
 $6 = ((($5)) + 52|0); //@line 935 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 935 "../../iup_expander.c"
 $2 = $7; //@line 935 "../../iup_expander.c"
 $8 = $1; //@line 936 "../../iup_expander.c"
 $9 = ((($8)) + 56|0); //@line 936 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 936 "../../iup_expander.c"
 $3 = $10; //@line 936 "../../iup_expander.c"
 $11 = $1; //@line 937 "../../iup_expander.c"
 $12 = (_iExpanderGetBarSize($11)|0); //@line 937 "../../iup_expander.c"
 $4 = $12; //@line 937 "../../iup_expander.c"
 $13 = $1; //@line 939 "../../iup_expander.c"
 $14 = ((($13)) + 72|0); //@line 939 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 939 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 939 "../../iup_expander.c"
 $17 = ($16|0)==(0); //@line 939 "../../iup_expander.c"
 if ($17) {
  label = 3;
 } else {
  $18 = $1; //@line 939 "../../iup_expander.c"
  $19 = ((($18)) + 72|0); //@line 939 "../../iup_expander.c"
  $20 = HEAP32[$19>>2]|0; //@line 939 "../../iup_expander.c"
  $21 = HEAP32[$20>>2]|0; //@line 939 "../../iup_expander.c"
  $22 = ($21|0)==(1); //@line 939 "../../iup_expander.c"
  if ($22) {
   label = 3;
  } else {
   $26 = $4; //@line 942 "../../iup_expander.c"
   $27 = $3; //@line 942 "../../iup_expander.c"
   $28 = (($27) - ($26))|0; //@line 942 "../../iup_expander.c"
   $3 = $28; //@line 942 "../../iup_expander.c"
  }
 }
 if ((label|0) == 3) {
  $23 = $4; //@line 940 "../../iup_expander.c"
  $24 = $2; //@line 940 "../../iup_expander.c"
  $25 = (($24) - ($23))|0; //@line 940 "../../iup_expander.c"
  $2 = $25; //@line 940 "../../iup_expander.c"
 }
 $29 = $2; //@line 944 "../../iup_expander.c"
 $30 = ($29|0)<(0); //@line 944 "../../iup_expander.c"
 if ($30) {
  $2 = 0; //@line 944 "../../iup_expander.c"
 }
 $31 = $3; //@line 945 "../../iup_expander.c"
 $32 = ($31|0)<(0); //@line 945 "../../iup_expander.c"
 if (!($32)) {
  $33 = $2; //@line 946 "../../iup_expander.c"
  $34 = $3; //@line 946 "../../iup_expander.c"
  $35 = (_iupStrReturnIntInt($33,$34,120)|0); //@line 946 "../../iup_expander.c"
  STACKTOP = sp;return ($35|0); //@line 946 "../../iup_expander.c"
 }
 $3 = 0; //@line 945 "../../iup_expander.c"
 $33 = $2; //@line 946 "../../iup_expander.c"
 $34 = $3; //@line 946 "../../iup_expander.c"
 $35 = (_iupStrReturnIntInt($33,$34,120)|0); //@line 946 "../../iup_expander.c"
 STACKTOP = sp;return ($35|0); //@line 946 "../../iup_expander.c"
}
function _iExpanderGetPositionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 970 "../../iup_expander.c"
 $4 = ((($3)) + 72|0); //@line 970 "../../iup_expander.c"
 $5 = HEAP32[$4>>2]|0; //@line 970 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 970 "../../iup_expander.c"
 $7 = ($6|0)==(0); //@line 970 "../../iup_expander.c"
 do {
  if ($7) {
   $1 = 12338; //@line 971 "../../iup_expander.c"
  } else {
   $8 = $2; //@line 972 "../../iup_expander.c"
   $9 = ((($8)) + 72|0); //@line 972 "../../iup_expander.c"
   $10 = HEAP32[$9>>2]|0; //@line 972 "../../iup_expander.c"
   $11 = HEAP32[$10>>2]|0; //@line 972 "../../iup_expander.c"
   $12 = ($11|0)==(1); //@line 972 "../../iup_expander.c"
   if ($12) {
    $1 = 17659; //@line 973 "../../iup_expander.c"
    break;
   }
   $13 = $2; //@line 974 "../../iup_expander.c"
   $14 = ((($13)) + 72|0); //@line 974 "../../iup_expander.c"
   $15 = HEAP32[$14>>2]|0; //@line 974 "../../iup_expander.c"
   $16 = HEAP32[$15>>2]|0; //@line 974 "../../iup_expander.c"
   $17 = ($16|0)==(3); //@line 974 "../../iup_expander.c"
   if ($17) {
    $1 = 12486; //@line 975 "../../iup_expander.c"
    break;
   } else {
    $1 = 16020; //@line 977 "../../iup_expander.c"
    break;
   }
  }
 } while(0);
 $18 = $1; //@line 978 "../../iup_expander.c"
 STACKTOP = sp;return ($18|0); //@line 978 "../../iup_expander.c"
}
function _iExpanderSetPositionAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 951 "../../iup_expander.c"
 $6 = ((($5)) + 16|0); //@line 951 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 951 "../../iup_expander.c"
 $8 = ($7|0)!=(0|0); //@line 951 "../../iup_expander.c"
 if ($8) {
  $2 = 0; //@line 952 "../../iup_expander.c"
  $28 = $2; //@line 966 "../../iup_expander.c"
  STACKTOP = sp;return ($28|0); //@line 966 "../../iup_expander.c"
 }
 $9 = $4; //@line 954 "../../iup_expander.c"
 $10 = (_iupStrEqualNoCase($9,12338)|0); //@line 954 "../../iup_expander.c"
 $11 = ($10|0)!=(0); //@line 954 "../../iup_expander.c"
 do {
  if ($11) {
   $12 = $3; //@line 955 "../../iup_expander.c"
   $13 = ((($12)) + 72|0); //@line 955 "../../iup_expander.c"
   $14 = HEAP32[$13>>2]|0; //@line 955 "../../iup_expander.c"
   HEAP32[$14>>2] = 0; //@line 955 "../../iup_expander.c"
  } else {
   $15 = $4; //@line 956 "../../iup_expander.c"
   $16 = (_iupStrEqualNoCase($15,17659)|0); //@line 956 "../../iup_expander.c"
   $17 = ($16|0)!=(0); //@line 956 "../../iup_expander.c"
   if ($17) {
    $18 = $3; //@line 957 "../../iup_expander.c"
    $19 = ((($18)) + 72|0); //@line 957 "../../iup_expander.c"
    $20 = HEAP32[$19>>2]|0; //@line 957 "../../iup_expander.c"
    HEAP32[$20>>2] = 1; //@line 957 "../../iup_expander.c"
    break;
   }
   $21 = $4; //@line 958 "../../iup_expander.c"
   $22 = (_iupStrEqualNoCase($21,12486)|0); //@line 958 "../../iup_expander.c"
   $23 = ($22|0)!=(0); //@line 958 "../../iup_expander.c"
   $24 = $3; //@line 959 "../../iup_expander.c"
   $25 = ((($24)) + 72|0); //@line 959 "../../iup_expander.c"
   $26 = HEAP32[$25>>2]|0; //@line 959 "../../iup_expander.c"
   if ($23) {
    HEAP32[$26>>2] = 3; //@line 959 "../../iup_expander.c"
    break;
   } else {
    HEAP32[$26>>2] = 2; //@line 961 "../../iup_expander.c"
    break;
   }
  }
 } while(0);
 $27 = $3; //@line 963 "../../iup_expander.c"
 _iExpanderUpdateBox($27); //@line 963 "../../iup_expander.c"
 $2 = 0; //@line 965 "../../iup_expander.c"
 $28 = $2; //@line 966 "../../iup_expander.c"
 STACKTOP = sp;return ($28|0); //@line 966 "../../iup_expander.c"
}
function _iExpanderGetBarSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 991 "../../iup_expander.c"
 $4 = (_iExpanderGetBarSize($3)|0); //@line 991 "../../iup_expander.c"
 $2 = $4; //@line 991 "../../iup_expander.c"
 $5 = $2; //@line 992 "../../iup_expander.c"
 $6 = (_iupStrReturnInt($5)|0); //@line 992 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 992 "../../iup_expander.c"
}
function _iExpanderSetBarSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 982 "../../iup_expander.c"
 $5 = ($4|0)!=(0|0); //@line 982 "../../iup_expander.c"
 if ($5) {
  $10 = $3; //@line 985 "../../iup_expander.c"
  $11 = $2; //@line 985 "../../iup_expander.c"
  $12 = ((($11)) + 72|0); //@line 985 "../../iup_expander.c"
  $13 = HEAP32[$12>>2]|0; //@line 985 "../../iup_expander.c"
  $14 = ((($13)) + 8|0); //@line 985 "../../iup_expander.c"
  (_iupStrToInt($10,$14)|0); //@line 985 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 986 "../../iup_expander.c"
 } else {
  $6 = $2; //@line 983 "../../iup_expander.c"
  $7 = ((($6)) + 72|0); //@line 983 "../../iup_expander.c"
  $8 = HEAP32[$7>>2]|0; //@line 983 "../../iup_expander.c"
  $9 = ((($8)) + 8|0); //@line 983 "../../iup_expander.c"
  HEAP32[$9>>2] = -1; //@line 983 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 986 "../../iup_expander.c"
 }
 return (0)|0;
}
function _iExpanderGetStateAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 1013 "../../iup_expander.c"
 $4 = ((($3)) + 72|0); //@line 1013 "../../iup_expander.c"
 $5 = HEAP32[$4>>2]|0; //@line 1013 "../../iup_expander.c"
 $6 = ((($5)) + 4|0); //@line 1013 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1013 "../../iup_expander.c"
 $8 = ($7|0)!=(0); //@line 1013 "../../iup_expander.c"
 if ($8) {
  $1 = 11975; //@line 1014 "../../iup_expander.c"
 } else {
  $1 = 11941; //@line 1016 "../../iup_expander.c"
 }
 $9 = $1; //@line 1017 "../../iup_expander.c"
 STACKTOP = sp;return ($9|0); //@line 1017 "../../iup_expander.c"
}
function _iExpanderSetStateAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 998 "../../iup_expander.c"
 $7 = (_iupStrEqualNoCase($6,11975)|0); //@line 998 "../../iup_expander.c"
 $8 = ($7|0)!=(0); //@line 998 "../../iup_expander.c"
 if ($8) {
  $5 = 1; //@line 999 "../../iup_expander.c"
 } else {
  $5 = 0; //@line 1001 "../../iup_expander.c"
 }
 $9 = $3; //@line 1003 "../../iup_expander.c"
 $10 = ((($9)) + 72|0); //@line 1003 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 1003 "../../iup_expander.c"
 $12 = ((($11)) + 4|0); //@line 1003 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 1003 "../../iup_expander.c"
 $14 = $5; //@line 1003 "../../iup_expander.c"
 $15 = ($13|0)==($14|0); //@line 1003 "../../iup_expander.c"
 if ($15) {
  $2 = 0; //@line 1004 "../../iup_expander.c"
  $18 = $2; //@line 1009 "../../iup_expander.c"
  STACKTOP = sp;return ($18|0); //@line 1009 "../../iup_expander.c"
 } else {
  $16 = $3; //@line 1006 "../../iup_expander.c"
  $17 = $5; //@line 1006 "../../iup_expander.c"
  _iExpanderOpenCloseChild($16,1,0,$17); //@line 1006 "../../iup_expander.c"
  $2 = 0; //@line 1008 "../../iup_expander.c"
  $18 = $2; //@line 1009 "../../iup_expander.c"
  STACKTOP = sp;return ($18|0); //@line 1009 "../../iup_expander.c"
 }
 return (0)|0;
}
function _iExpanderSetForeColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 1021 "../../iup_expander.c"
 $7 = ((($6)) + 72|0); //@line 1021 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 1021 "../../iup_expander.c"
 $9 = HEAP32[$8>>2]|0; //@line 1021 "../../iup_expander.c"
 $10 = ($9|0)==(2); //@line 1021 "../../iup_expander.c"
 if (!($10)) {
  STACKTOP = sp;return 1; //@line 1037 "../../iup_expander.c"
 }
 $11 = $2; //@line 1023 "../../iup_expander.c"
 $12 = ((($11)) + 72|0); //@line 1023 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 1023 "../../iup_expander.c"
 $14 = ((($13)) + 20|0); //@line 1023 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 1023 "../../iup_expander.c"
 $16 = ($15|0)!=(0); //@line 1023 "../../iup_expander.c"
 $17 = $2; //@line 1025 "../../iup_expander.c"
 if ($16) {
  $18 = $3; //@line 1025 "../../iup_expander.c"
  _iupAttribSetStr($17,3969,$18); //@line 1025 "../../iup_expander.c"
  $19 = $2; //@line 1026 "../../iup_expander.c"
  _iExpanderUpdateTitleState($19); //@line 1026 "../../iup_expander.c"
  STACKTOP = sp;return 1; //@line 1037 "../../iup_expander.c"
 } else {
  $20 = ((($17)) + 64|0); //@line 1031 "../../iup_expander.c"
  $21 = HEAP32[$20>>2]|0; //@line 1031 "../../iup_expander.c"
  $22 = ((($21)) + 64|0); //@line 1031 "../../iup_expander.c"
  $23 = HEAP32[$22>>2]|0; //@line 1031 "../../iup_expander.c"
  $4 = $23; //@line 1031 "../../iup_expander.c"
  $24 = $4; //@line 1032 "../../iup_expander.c"
  $25 = ((($24)) + 64|0); //@line 1032 "../../iup_expander.c"
  $26 = HEAP32[$25>>2]|0; //@line 1032 "../../iup_expander.c"
  $27 = ((($26)) + 68|0); //@line 1032 "../../iup_expander.c"
  $28 = HEAP32[$27>>2]|0; //@line 1032 "../../iup_expander.c"
  $5 = $28; //@line 1032 "../../iup_expander.c"
  $29 = $5; //@line 1033 "../../iup_expander.c"
  $30 = $3; //@line 1033 "../../iup_expander.c"
  _IupSetStrAttribute($29,20610,$30); //@line 1033 "../../iup_expander.c"
  STACKTOP = sp;return 1; //@line 1037 "../../iup_expander.c"
 }
 return (0)|0;
}
function _iExpanderSetHighColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1052 "../../iup_expander.c"
 $5 = ((($4)) + 72|0); //@line 1052 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1052 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1052 "../../iup_expander.c"
 $8 = ($7|0)==(2); //@line 1052 "../../iup_expander.c"
 if (!($8)) {
  STACKTOP = sp;return 1; //@line 1057 "../../iup_expander.c"
 }
 $9 = $2; //@line 1054 "../../iup_expander.c"
 $10 = $3; //@line 1054 "../../iup_expander.c"
 _iupAttribSetStr($9,3979,$10); //@line 1054 "../../iup_expander.c"
 $11 = $2; //@line 1055 "../../iup_expander.c"
 _iExpanderUpdateTitleState($11); //@line 1055 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1057 "../../iup_expander.c"
}
function _iExpanderSetOpenColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1042 "../../iup_expander.c"
 $5 = ((($4)) + 72|0); //@line 1042 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1042 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1042 "../../iup_expander.c"
 $8 = ($7|0)==(2); //@line 1042 "../../iup_expander.c"
 if (!($8)) {
  STACKTOP = sp;return 1; //@line 1047 "../../iup_expander.c"
 }
 $9 = $2; //@line 1044 "../../iup_expander.c"
 $10 = $3; //@line 1044 "../../iup_expander.c"
 _iupAttribSetStr($9,3989,$10); //@line 1044 "../../iup_expander.c"
 $11 = $2; //@line 1045 "../../iup_expander.c"
 _iExpanderUpdateTitleState($11); //@line 1045 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1047 "../../iup_expander.c"
}
function _iExpanderSetBackColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 1062 "../../iup_expander.c"
 $6 = ((($5)) + 64|0); //@line 1062 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1062 "../../iup_expander.c"
 $4 = $7; //@line 1062 "../../iup_expander.c"
 $8 = $4; //@line 1063 "../../iup_expander.c"
 $9 = $3; //@line 1063 "../../iup_expander.c"
 _IupSetStrAttribute($8,20290,$9); //@line 1063 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1064 "../../iup_expander.c"
}
function _iExpanderSetTitleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1190 "../../iup_expander.c"
 $5 = ((($4)) + 72|0); //@line 1190 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1190 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1190 "../../iup_expander.c"
 $8 = ($7|0)==(2); //@line 1190 "../../iup_expander.c"
 if (!($8)) {
  STACKTOP = sp;return 1; //@line 1197 "../../iup_expander.c"
 }
 $9 = $2; //@line 1192 "../../iup_expander.c"
 $10 = $3; //@line 1192 "../../iup_expander.c"
 _iupAttribSetStr($9,20508,$10); //@line 1192 "../../iup_expander.c"
 $11 = $2; //@line 1193 "../../iup_expander.c"
 _iupAttribSet($11,4009,0); //@line 1193 "../../iup_expander.c"
 $12 = $2; //@line 1194 "../../iup_expander.c"
 _iExpanderUpdateTitle($12); //@line 1194 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1197 "../../iup_expander.c"
}
function _iExpanderSetTitleImageAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1202 "../../iup_expander.c"
 $5 = ((($4)) + 72|0); //@line 1202 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1202 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1202 "../../iup_expander.c"
 $8 = ($7|0)==(2); //@line 1202 "../../iup_expander.c"
 if (!($8)) {
  STACKTOP = sp;return 1; //@line 1209 "../../iup_expander.c"
 }
 $9 = $2; //@line 1204 "../../iup_expander.c"
 $10 = $3; //@line 1204 "../../iup_expander.c"
 _iupAttribSetStr($9,4009,$10); //@line 1204 "../../iup_expander.c"
 $11 = $2; //@line 1205 "../../iup_expander.c"
 _iupAttribSet($11,20508,0); //@line 1205 "../../iup_expander.c"
 $12 = $2; //@line 1206 "../../iup_expander.c"
 _iExpanderUpdateTitle($12); //@line 1206 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1209 "../../iup_expander.c"
}
function _iExpanderSetTitleImageOpenAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1214 "../../iup_expander.c"
 $5 = ((($4)) + 72|0); //@line 1214 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1214 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1214 "../../iup_expander.c"
 $8 = ($7|0)==(2); //@line 1214 "../../iup_expander.c"
 if (!($8)) {
  STACKTOP = sp;return 1; //@line 1220 "../../iup_expander.c"
 }
 $9 = $2; //@line 1216 "../../iup_expander.c"
 $10 = $3; //@line 1216 "../../iup_expander.c"
 _iupAttribSetStr($9,4020,$10); //@line 1216 "../../iup_expander.c"
 $11 = $2; //@line 1217 "../../iup_expander.c"
 _iExpanderUpdateTitle($11); //@line 1217 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1220 "../../iup_expander.c"
}
function _iExpanderGetTitleExpandAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 1279 "../../iup_expander.c"
 $3 = ((($2)) + 72|0); //@line 1279 "../../iup_expander.c"
 $4 = HEAP32[$3>>2]|0; //@line 1279 "../../iup_expander.c"
 $5 = ((($4)) + 20|0); //@line 1279 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1279 "../../iup_expander.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 1279 "../../iup_expander.c"
 STACKTOP = sp;return ($7|0); //@line 1279 "../../iup_expander.c"
}
function _iExpanderSetTitleExpandAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 1273 "../../iup_expander.c"
 $5 = (_iupStrBoolean($4)|0); //@line 1273 "../../iup_expander.c"
 $6 = $2; //@line 1273 "../../iup_expander.c"
 $7 = ((($6)) + 72|0); //@line 1273 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 1273 "../../iup_expander.c"
 $9 = ((($8)) + 20|0); //@line 1273 "../../iup_expander.c"
 HEAP32[$9>>2] = $5; //@line 1273 "../../iup_expander.c"
 STACKTOP = sp;return 0; //@line 1274 "../../iup_expander.c"
}
function _iExpanderGetAutoShowAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 1246 "../../iup_expander.c"
 $3 = ((($2)) + 72|0); //@line 1246 "../../iup_expander.c"
 $4 = HEAP32[$3>>2]|0; //@line 1246 "../../iup_expander.c"
 $5 = ((($4)) + 16|0); //@line 1246 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1246 "../../iup_expander.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 1246 "../../iup_expander.c"
 STACKTOP = sp;return ($7|0); //@line 1246 "../../iup_expander.c"
}
function _iExpanderSetAutoShowAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 1225 "../../iup_expander.c"
 $5 = (_iupStrBoolean($4)|0); //@line 1225 "../../iup_expander.c"
 $6 = $2; //@line 1225 "../../iup_expander.c"
 $7 = ((($6)) + 72|0); //@line 1225 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 1225 "../../iup_expander.c"
 $9 = ((($8)) + 16|0); //@line 1225 "../../iup_expander.c"
 HEAP32[$9>>2] = $5; //@line 1225 "../../iup_expander.c"
 $10 = $2; //@line 1226 "../../iup_expander.c"
 $11 = ((($10)) + 72|0); //@line 1226 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 1226 "../../iup_expander.c"
 $13 = ((($12)) + 16|0); //@line 1226 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 1226 "../../iup_expander.c"
 $15 = ($14|0)!=(0); //@line 1226 "../../iup_expander.c"
 $16 = $2; //@line 1228 "../../iup_expander.c"
 $17 = ((($16)) + 72|0); //@line 1228 "../../iup_expander.c"
 $18 = HEAP32[$17>>2]|0; //@line 1228 "../../iup_expander.c"
 $19 = ((($18)) + 28|0); //@line 1228 "../../iup_expander.c"
 $20 = HEAP32[$19>>2]|0; //@line 1228 "../../iup_expander.c"
 $21 = ($20|0)!=(0|0); //@line 1228 "../../iup_expander.c"
 if ($15) {
  if ($21) {
   STACKTOP = sp;return 0; //@line 1241 "../../iup_expander.c"
  }
  $22 = (_IupTimer()|0); //@line 1230 "../../iup_expander.c"
  $23 = $2; //@line 1230 "../../iup_expander.c"
  $24 = ((($23)) + 72|0); //@line 1230 "../../iup_expander.c"
  $25 = HEAP32[$24>>2]|0; //@line 1230 "../../iup_expander.c"
  $26 = ((($25)) + 28|0); //@line 1230 "../../iup_expander.c"
  HEAP32[$26>>2] = $22; //@line 1230 "../../iup_expander.c"
  $27 = $2; //@line 1231 "../../iup_expander.c"
  $28 = ((($27)) + 72|0); //@line 1231 "../../iup_expander.c"
  $29 = HEAP32[$28>>2]|0; //@line 1231 "../../iup_expander.c"
  $30 = ((($29)) + 28|0); //@line 1231 "../../iup_expander.c"
  $31 = HEAP32[$30>>2]|0; //@line 1231 "../../iup_expander.c"
  _IupSetAttribute($31,17784,11743); //@line 1231 "../../iup_expander.c"
  $32 = $2; //@line 1232 "../../iup_expander.c"
  $33 = ((($32)) + 72|0); //@line 1232 "../../iup_expander.c"
  $34 = HEAP32[$33>>2]|0; //@line 1232 "../../iup_expander.c"
  $35 = ((($34)) + 28|0); //@line 1232 "../../iup_expander.c"
  $36 = HEAP32[$35>>2]|0; //@line 1232 "../../iup_expander.c"
  (_IupSetCallback($36,17766,181)|0); //@line 1232 "../../iup_expander.c"
  $37 = $2; //@line 1233 "../../iup_expander.c"
  $38 = ((($37)) + 72|0); //@line 1233 "../../iup_expander.c"
  $39 = HEAP32[$38>>2]|0; //@line 1233 "../../iup_expander.c"
  $40 = ((($39)) + 28|0); //@line 1233 "../../iup_expander.c"
  $41 = HEAP32[$40>>2]|0; //@line 1233 "../../iup_expander.c"
  $42 = $2; //@line 1233 "../../iup_expander.c"
  _iupAttribSet($41,11748,$42); //@line 1233 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 1241 "../../iup_expander.c"
 } else {
  if (!($21)) {
   STACKTOP = sp;return 0; //@line 1241 "../../iup_expander.c"
  }
  $43 = $2; //@line 1239 "../../iup_expander.c"
  $44 = ((($43)) + 72|0); //@line 1239 "../../iup_expander.c"
  $45 = HEAP32[$44>>2]|0; //@line 1239 "../../iup_expander.c"
  $46 = ((($45)) + 28|0); //@line 1239 "../../iup_expander.c"
  $47 = HEAP32[$46>>2]|0; //@line 1239 "../../iup_expander.c"
  _IupSetAttribute($47,17780,20140); //@line 1239 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 1241 "../../iup_expander.c"
 }
 return (0)|0;
}
function _iExpanderGetExtraButtonsAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 1305 "../../iup_expander.c"
 $3 = ((($2)) + 72|0); //@line 1305 "../../iup_expander.c"
 $4 = HEAP32[$3>>2]|0; //@line 1305 "../../iup_expander.c"
 $5 = ((($4)) + 12|0); //@line 1305 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 1305 "../../iup_expander.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 1305 "../../iup_expander.c"
 STACKTOP = sp;return ($7|0); //@line 1305 "../../iup_expander.c"
}
function _iExpanderSetExtraButtonsAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 1284 "../../iup_expander.c"
 $6 = ((($5)) + 16|0); //@line 1284 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1284 "../../iup_expander.c"
 $8 = ($7|0)!=(0|0); //@line 1284 "../../iup_expander.c"
 if ($8) {
  $2 = 0; //@line 1285 "../../iup_expander.c"
  $37 = $2; //@line 1301 "../../iup_expander.c"
  STACKTOP = sp;return ($37|0); //@line 1301 "../../iup_expander.c"
 }
 $9 = $4; //@line 1287 "../../iup_expander.c"
 $10 = ($9|0)!=(0|0); //@line 1287 "../../iup_expander.c"
 do {
  if ($10) {
   $15 = $4; //@line 1291 "../../iup_expander.c"
   $16 = $3; //@line 1291 "../../iup_expander.c"
   $17 = ((($16)) + 72|0); //@line 1291 "../../iup_expander.c"
   $18 = HEAP32[$17>>2]|0; //@line 1291 "../../iup_expander.c"
   $19 = ((($18)) + 12|0); //@line 1291 "../../iup_expander.c"
   (_iupStrToInt($15,$19)|0); //@line 1291 "../../iup_expander.c"
   $20 = $3; //@line 1292 "../../iup_expander.c"
   $21 = ((($20)) + 72|0); //@line 1292 "../../iup_expander.c"
   $22 = HEAP32[$21>>2]|0; //@line 1292 "../../iup_expander.c"
   $23 = ((($22)) + 12|0); //@line 1292 "../../iup_expander.c"
   $24 = HEAP32[$23>>2]|0; //@line 1292 "../../iup_expander.c"
   $25 = ($24|0)<(0); //@line 1292 "../../iup_expander.c"
   $26 = $3; //@line 1293 "../../iup_expander.c"
   $27 = ((($26)) + 72|0); //@line 1293 "../../iup_expander.c"
   $28 = HEAP32[$27>>2]|0; //@line 1293 "../../iup_expander.c"
   $29 = ((($28)) + 12|0); //@line 1293 "../../iup_expander.c"
   if ($25) {
    HEAP32[$29>>2] = 0; //@line 1293 "../../iup_expander.c"
    break;
   }
   $30 = HEAP32[$29>>2]|0; //@line 1294 "../../iup_expander.c"
   $31 = ($30|0)>(3); //@line 1294 "../../iup_expander.c"
   if ($31) {
    $32 = $3; //@line 1295 "../../iup_expander.c"
    $33 = ((($32)) + 72|0); //@line 1295 "../../iup_expander.c"
    $34 = HEAP32[$33>>2]|0; //@line 1295 "../../iup_expander.c"
    $35 = ((($34)) + 12|0); //@line 1295 "../../iup_expander.c"
    HEAP32[$35>>2] = 3; //@line 1295 "../../iup_expander.c"
   }
  } else {
   $11 = $3; //@line 1288 "../../iup_expander.c"
   $12 = ((($11)) + 72|0); //@line 1288 "../../iup_expander.c"
   $13 = HEAP32[$12>>2]|0; //@line 1288 "../../iup_expander.c"
   $14 = ((($13)) + 12|0); //@line 1288 "../../iup_expander.c"
   HEAP32[$14>>2] = 0; //@line 1288 "../../iup_expander.c"
  }
 } while(0);
 $36 = $3; //@line 1298 "../../iup_expander.c"
 _iExpanderUpdateExtraButtons($36); //@line 1298 "../../iup_expander.c"
 $2 = 0; //@line 1300 "../../iup_expander.c"
 $37 = $2; //@line 1301 "../../iup_expander.c"
 STACKTOP = sp;return ($37|0); //@line 1301 "../../iup_expander.c"
}
function _iExpanderGetAnimationAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 1263 "../../iup_expander.c"
 $4 = ((($3)) + 72|0); //@line 1263 "../../iup_expander.c"
 $5 = HEAP32[$4>>2]|0; //@line 1263 "../../iup_expander.c"
 $6 = ((($5)) + 24|0); //@line 1263 "../../iup_expander.c"
 $7 = HEAP32[$6>>2]|0; //@line 1263 "../../iup_expander.c"
 $8 = ($7|0)==(2); //@line 1263 "../../iup_expander.c"
 do {
  if ($8) {
   $1 = 11729; //@line 1264 "../../iup_expander.c"
  } else {
   $9 = $2; //@line 1265 "../../iup_expander.c"
   $10 = ((($9)) + 72|0); //@line 1265 "../../iup_expander.c"
   $11 = HEAP32[$10>>2]|0; //@line 1265 "../../iup_expander.c"
   $12 = ((($11)) + 24|0); //@line 1265 "../../iup_expander.c"
   $13 = HEAP32[$12>>2]|0; //@line 1265 "../../iup_expander.c"
   $14 = ($13|0)!=(0); //@line 1265 "../../iup_expander.c"
   if ($14) {
    $1 = 11735; //@line 1266 "../../iup_expander.c"
    break;
   } else {
    $1 = 20140; //@line 1268 "../../iup_expander.c"
    break;
   }
  }
 } while(0);
 $15 = $1; //@line 1269 "../../iup_expander.c"
 STACKTOP = sp;return ($15|0); //@line 1269 "../../iup_expander.c"
}
function _iExpanderSetAnimationAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 1251 "../../iup_expander.c"
 $5 = (_iupStrEqualNoCase($4,11729)|0); //@line 1251 "../../iup_expander.c"
 $6 = ($5|0)!=(0); //@line 1251 "../../iup_expander.c"
 if ($6) {
  $7 = $2; //@line 1252 "../../iup_expander.c"
  $8 = ((($7)) + 72|0); //@line 1252 "../../iup_expander.c"
  $9 = HEAP32[$8>>2]|0; //@line 1252 "../../iup_expander.c"
  $10 = ((($9)) + 24|0); //@line 1252 "../../iup_expander.c"
  HEAP32[$10>>2] = 2; //@line 1252 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 1258 "../../iup_expander.c"
 }
 $11 = $3; //@line 1253 "../../iup_expander.c"
 $12 = (_iupStrEqualNoCase($11,11735)|0); //@line 1253 "../../iup_expander.c"
 $13 = ($12|0)!=(0); //@line 1253 "../../iup_expander.c"
 $14 = $2; //@line 1254 "../../iup_expander.c"
 $15 = ((($14)) + 72|0); //@line 1254 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 1254 "../../iup_expander.c"
 $17 = ((($16)) + 24|0); //@line 1254 "../../iup_expander.c"
 if ($13) {
  HEAP32[$17>>2] = 1; //@line 1254 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 1258 "../../iup_expander.c"
 } else {
  HEAP32[$17>>2] = 0; //@line 1256 "../../iup_expander.c"
  STACKTOP = sp;return 0; //@line 1258 "../../iup_expander.c"
 }
 return (0)|0;
}
function _iExpanderSetImageAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 1069 "../../iup_expander.c"
 $7 = ((($6)) + 72|0); //@line 1069 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 1069 "../../iup_expander.c"
 $9 = ((($8)) + 4|0); //@line 1069 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 1069 "../../iup_expander.c"
 $11 = ($10|0)==(0); //@line 1069 "../../iup_expander.c"
 if (!($11)) {
  STACKTOP = sp;return 1; //@line 1075 "../../iup_expander.c"
 }
 $12 = $2; //@line 1071 "../../iup_expander.c"
 $13 = ((($12)) + 64|0); //@line 1071 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 1071 "../../iup_expander.c"
 $15 = ((($14)) + 64|0); //@line 1071 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 1071 "../../iup_expander.c"
 $4 = $16; //@line 1071 "../../iup_expander.c"
 $17 = $4; //@line 1072 "../../iup_expander.c"
 $18 = ((($17)) + 64|0); //@line 1072 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 1072 "../../iup_expander.c"
 $5 = $19; //@line 1072 "../../iup_expander.c"
 $20 = $5; //@line 1073 "../../iup_expander.c"
 $21 = $3; //@line 1073 "../../iup_expander.c"
 _IupSetStrAttribute($20,20169,$21); //@line 1073 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1075 "../../iup_expander.c"
}
function _iExpanderSetImageOpenAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 1080 "../../iup_expander.c"
 $7 = ((($6)) + 72|0); //@line 1080 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 1080 "../../iup_expander.c"
 $9 = ((($8)) + 4|0); //@line 1080 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 1080 "../../iup_expander.c"
 $11 = ($10|0)!=(0); //@line 1080 "../../iup_expander.c"
 if (!($11)) {
  STACKTOP = sp;return 1; //@line 1086 "../../iup_expander.c"
 }
 $12 = $2; //@line 1082 "../../iup_expander.c"
 $13 = ((($12)) + 64|0); //@line 1082 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 1082 "../../iup_expander.c"
 $15 = ((($14)) + 64|0); //@line 1082 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 1082 "../../iup_expander.c"
 $4 = $16; //@line 1082 "../../iup_expander.c"
 $17 = $4; //@line 1083 "../../iup_expander.c"
 $18 = ((($17)) + 64|0); //@line 1083 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 1083 "../../iup_expander.c"
 $5 = $19; //@line 1083 "../../iup_expander.c"
 $20 = $5; //@line 1084 "../../iup_expander.c"
 $21 = $3; //@line 1084 "../../iup_expander.c"
 _IupSetStrAttribute($20,20169,$21); //@line 1084 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1086 "../../iup_expander.c"
}
function _iExpanderSetImageExtra1Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1145 "../../iup_expander.c"
 $5 = $3; //@line 1145 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtra($4,$5,1)|0); //@line 1145 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1145 "../../iup_expander.c"
}
function _iExpanderSetImageExtraPress1Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1150 "../../iup_expander.c"
 $5 = $3; //@line 1150 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtraPress($4,$5,1)|0); //@line 1150 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1150 "../../iup_expander.c"
}
function _iExpanderSetImageExtraHighlight1Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1155 "../../iup_expander.c"
 $5 = $3; //@line 1155 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtraHighlight($4,$5,1)|0); //@line 1155 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1155 "../../iup_expander.c"
}
function _iExpanderSetImageExtra2Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1160 "../../iup_expander.c"
 $5 = $3; //@line 1160 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtra($4,$5,2)|0); //@line 1160 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1160 "../../iup_expander.c"
}
function _iExpanderSetImageExtraPress2Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1165 "../../iup_expander.c"
 $5 = $3; //@line 1165 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtraPress($4,$5,2)|0); //@line 1165 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1165 "../../iup_expander.c"
}
function _iExpanderSetImageExtraHighlight2Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1170 "../../iup_expander.c"
 $5 = $3; //@line 1170 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtraHighlight($4,$5,2)|0); //@line 1170 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1170 "../../iup_expander.c"
}
function _iExpanderSetImageExtra3Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1175 "../../iup_expander.c"
 $5 = $3; //@line 1175 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtra($4,$5,3)|0); //@line 1175 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1175 "../../iup_expander.c"
}
function _iExpanderSetImageExtraPress3Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1180 "../../iup_expander.c"
 $5 = $3; //@line 1180 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtraPress($4,$5,3)|0); //@line 1180 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1180 "../../iup_expander.c"
}
function _iExpanderSetImageExtraHighlight3Attrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 1185 "../../iup_expander.c"
 $5 = $3; //@line 1185 "../../iup_expander.c"
 $6 = (_iExpanderSetImageExtraHighlight($4,$5,3)|0); //@line 1185 "../../iup_expander.c"
 STACKTOP = sp;return ($6|0); //@line 1185 "../../iup_expander.c"
}
function _iExpanderLoadImages() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_load_image_arrowup()|0); //@line 215 "../../iup_expander.c"
 (_IupSetHandle(4325,$0)|0); //@line 215 "../../iup_expander.c"
 $1 = (_load_image_arrowleft()|0); //@line 216 "../../iup_expander.c"
 (_IupSetHandle(4349,$1)|0); //@line 216 "../../iup_expander.c"
 $2 = (_load_image_arrowright()|0); //@line 217 "../../iup_expander.c"
 (_IupSetHandle(4362,$2)|0); //@line 217 "../../iup_expander.c"
 $3 = (_load_image_arrowdown()|0); //@line 218 "../../iup_expander.c"
 (_IupSetHandle(4336,$3)|0); //@line 218 "../../iup_expander.c"
 $4 = (_load_image_arrowup_highlight()|0); //@line 219 "../../iup_expander.c"
 (_IupSetHandle(4376,$4)|0); //@line 219 "../../iup_expander.c"
 $5 = (_load_image_arrowdown_highlight()|0); //@line 220 "../../iup_expander.c"
 (_IupSetHandle(4396,$5)|0); //@line 220 "../../iup_expander.c"
 $6 = (_load_image_arrowleft_highlight()|0); //@line 221 "../../iup_expander.c"
 (_IupSetHandle(4418,$6)|0); //@line 221 "../../iup_expander.c"
 $7 = (_load_image_arrowright_highlight()|0); //@line 222 "../../iup_expander.c"
 (_IupSetHandle(4440,$7)|0); //@line 222 "../../iup_expander.c"
 return; //@line 223 "../../iup_expander.c"
}
function _load_image_arrowup() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(10763|0),900)|0; //@line 123 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 140 "../../iup_expander.c"
 $1 = $2; //@line 140 "../../iup_expander.c"
 $3 = $1; //@line 141 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 141 "../../iup_expander.c"
}
function _load_image_arrowleft() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(9863|0),900)|0; //@line 146 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 163 "../../iup_expander.c"
 $1 = $2; //@line 163 "../../iup_expander.c"
 $3 = $1; //@line 164 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 164 "../../iup_expander.c"
}
function _load_image_arrowright() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(8963|0),900)|0; //@line 169 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 186 "../../iup_expander.c"
 $1 = $2; //@line 186 "../../iup_expander.c"
 $3 = $1; //@line 187 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 187 "../../iup_expander.c"
}
function _load_image_arrowdown() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(8063|0),900)|0; //@line 192 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 209 "../../iup_expander.c"
 $1 = $2; //@line 209 "../../iup_expander.c"
 $3 = $1; //@line 210 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 210 "../../iup_expander.c"
}
function _load_image_arrowup_highlight() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(7163|0),900)|0; //@line 31 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 48 "../../iup_expander.c"
 $1 = $2; //@line 48 "../../iup_expander.c"
 $3 = $1; //@line 49 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 49 "../../iup_expander.c"
}
function _load_image_arrowdown_highlight() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(6263|0),900)|0; //@line 54 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 71 "../../iup_expander.c"
 $1 = $2; //@line 71 "../../iup_expander.c"
 $3 = $1; //@line 72 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 72 "../../iup_expander.c"
}
function _load_image_arrowleft_highlight() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(5363|0),900)|0; //@line 77 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 94 "../../iup_expander.c"
 $1 = $2; //@line 94 "../../iup_expander.c"
 $3 = $1; //@line 95 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 95 "../../iup_expander.c"
}
function _load_image_arrowright_highlight() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(912|0);
 $0 = sp + 4|0;
 _memcpy(($0|0),(4463|0),900)|0; //@line 100 "../../iup_expander.c"
 $2 = (_IupImageRGBA(15,15,$0)|0); //@line 117 "../../iup_expander.c"
 $1 = $2; //@line 117 "../../iup_expander.c"
 $3 = $1; //@line 118 "../../iup_expander.c"
 STACKTOP = sp;return ($3|0); //@line 118 "../../iup_expander.c"
}
function _iExpanderSetImageExtraHighlight($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 1127 "../../iup_expander.c"
 $10 = ((($9)) + 72|0); //@line 1127 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 1127 "../../iup_expander.c"
 $12 = ((($11)) + 12|0); //@line 1127 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 1127 "../../iup_expander.c"
 $14 = $5; //@line 1127 "../../iup_expander.c"
 $15 = (($14) - 1)|0; //@line 1127 "../../iup_expander.c"
 $16 = ($13|0)>($15|0); //@line 1127 "../../iup_expander.c"
 if (!($16)) {
  STACKTOP = sp;return 1; //@line 1140 "../../iup_expander.c"
 }
 $17 = $3; //@line 1129 "../../iup_expander.c"
 $18 = ((($17)) + 64|0); //@line 1129 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 1129 "../../iup_expander.c"
 $20 = ((($19)) + 64|0); //@line 1129 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 1129 "../../iup_expander.c"
 $6 = $21; //@line 1129 "../../iup_expander.c"
 $22 = $6; //@line 1130 "../../iup_expander.c"
 $23 = ((($22)) + 64|0); //@line 1130 "../../iup_expander.c"
 $24 = HEAP32[$23>>2]|0; //@line 1130 "../../iup_expander.c"
 $25 = ((($24)) + 68|0); //@line 1130 "../../iup_expander.c"
 $26 = HEAP32[$25>>2]|0; //@line 1130 "../../iup_expander.c"
 $27 = ((($26)) + 68|0); //@line 1130 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 1130 "../../iup_expander.c"
 $7 = $28; //@line 1130 "../../iup_expander.c"
 $29 = $7; //@line 1132 "../../iup_expander.c"
 $30 = ($29|0)!=(0|0); //@line 1132 "../../iup_expander.c"
 if (!($30)) {
  STACKTOP = sp;return 1; //@line 1140 "../../iup_expander.c"
 }
 $31 = $7; //@line 1134 "../../iup_expander.c"
 $32 = $3; //@line 1134 "../../iup_expander.c"
 $33 = ((($32)) + 72|0); //@line 1134 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 1134 "../../iup_expander.c"
 $35 = ((($34)) + 12|0); //@line 1134 "../../iup_expander.c"
 $36 = HEAP32[$35>>2]|0; //@line 1134 "../../iup_expander.c"
 $37 = $5; //@line 1134 "../../iup_expander.c"
 $38 = (($36) - ($37))|0; //@line 1134 "../../iup_expander.c"
 $39 = (_IupGetChild($31,$38)|0); //@line 1134 "../../iup_expander.c"
 $8 = $39; //@line 1134 "../../iup_expander.c"
 $40 = $3; //@line 1135 "../../iup_expander.c"
 $41 = $5; //@line 1135 "../../iup_expander.c"
 $42 = $4; //@line 1135 "../../iup_expander.c"
 _iupAttribSetStrId($40,11663,$41,$42); //@line 1135 "../../iup_expander.c"
 $43 = $3; //@line 1136 "../../iup_expander.c"
 $44 = $8; //@line 1136 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($43,$44,0); //@line 1136 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1140 "../../iup_expander.c"
}
function _iExpanderUpdateExtraButtonImage($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $10 = $4; //@line 570 "../../iup_expander.c"
 $11 = (_iupAttribGetInt($10,11683)|0); //@line 570 "../../iup_expander.c"
 $6 = $11; //@line 570 "../../iup_expander.c"
 $12 = $3; //@line 571 "../../iup_expander.c"
 $13 = $6; //@line 571 "../../iup_expander.c"
 $14 = (_iupAttribGetId($12,11702,$13)|0); //@line 571 "../../iup_expander.c"
 $7 = $14; //@line 571 "../../iup_expander.c"
 $15 = $7; //@line 572 "../../iup_expander.c"
 $16 = ($15|0)!=(0|0); //@line 572 "../../iup_expander.c"
 if (!($16)) {
  STACKTOP = sp;return; //@line 587 "../../iup_expander.c"
 }
 $17 = $5; //@line 575 "../../iup_expander.c"
 $18 = ($17|0)!=(0); //@line 575 "../../iup_expander.c"
 if ($18) {
  $19 = $3; //@line 577 "../../iup_expander.c"
  $20 = $6; //@line 577 "../../iup_expander.c"
  $21 = (_iupAttribGetId($19,11713,$20)|0); //@line 577 "../../iup_expander.c"
  $8 = $21; //@line 577 "../../iup_expander.c"
  $22 = $8; //@line 578 "../../iup_expander.c"
  $23 = ($22|0)!=(0|0); //@line 578 "../../iup_expander.c"
  if ($23) {
   $24 = $8; //@line 578 "../../iup_expander.c"
   $7 = $24; //@line 578 "../../iup_expander.c"
  }
 } else {
  $25 = $4; //@line 580 "../../iup_expander.c"
  $26 = (_iupAttribGet($25,12547)|0); //@line 580 "../../iup_expander.c"
  $27 = ($26|0)!=(0|0); //@line 580 "../../iup_expander.c"
  if ($27) {
   $28 = $3; //@line 582 "../../iup_expander.c"
   $29 = $6; //@line 582 "../../iup_expander.c"
   $30 = (_iupAttribGetId($28,11663,$29)|0); //@line 582 "../../iup_expander.c"
   $9 = $30; //@line 582 "../../iup_expander.c"
   $31 = $9; //@line 583 "../../iup_expander.c"
   $32 = ($31|0)!=(0|0); //@line 583 "../../iup_expander.c"
   if ($32) {
    $33 = $9; //@line 583 "../../iup_expander.c"
    $7 = $33; //@line 583 "../../iup_expander.c"
   }
  }
 }
 $34 = $4; //@line 586 "../../iup_expander.c"
 $35 = $7; //@line 586 "../../iup_expander.c"
 _IupSetStrAttribute($34,20169,$35); //@line 586 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 587 "../../iup_expander.c"
}
function _iExpanderSetImageExtraPress($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 1109 "../../iup_expander.c"
 $10 = ((($9)) + 72|0); //@line 1109 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 1109 "../../iup_expander.c"
 $12 = ((($11)) + 12|0); //@line 1109 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 1109 "../../iup_expander.c"
 $14 = $5; //@line 1109 "../../iup_expander.c"
 $15 = (($14) - 1)|0; //@line 1109 "../../iup_expander.c"
 $16 = ($13|0)>($15|0); //@line 1109 "../../iup_expander.c"
 if (!($16)) {
  STACKTOP = sp;return 1; //@line 1122 "../../iup_expander.c"
 }
 $17 = $3; //@line 1111 "../../iup_expander.c"
 $18 = ((($17)) + 64|0); //@line 1111 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 1111 "../../iup_expander.c"
 $20 = ((($19)) + 64|0); //@line 1111 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 1111 "../../iup_expander.c"
 $6 = $21; //@line 1111 "../../iup_expander.c"
 $22 = $6; //@line 1112 "../../iup_expander.c"
 $23 = ((($22)) + 64|0); //@line 1112 "../../iup_expander.c"
 $24 = HEAP32[$23>>2]|0; //@line 1112 "../../iup_expander.c"
 $25 = ((($24)) + 68|0); //@line 1112 "../../iup_expander.c"
 $26 = HEAP32[$25>>2]|0; //@line 1112 "../../iup_expander.c"
 $27 = ((($26)) + 68|0); //@line 1112 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 1112 "../../iup_expander.c"
 $7 = $28; //@line 1112 "../../iup_expander.c"
 $29 = $7; //@line 1114 "../../iup_expander.c"
 $30 = ($29|0)!=(0|0); //@line 1114 "../../iup_expander.c"
 if (!($30)) {
  STACKTOP = sp;return 1; //@line 1122 "../../iup_expander.c"
 }
 $31 = $7; //@line 1116 "../../iup_expander.c"
 $32 = $3; //@line 1116 "../../iup_expander.c"
 $33 = ((($32)) + 72|0); //@line 1116 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 1116 "../../iup_expander.c"
 $35 = ((($34)) + 12|0); //@line 1116 "../../iup_expander.c"
 $36 = HEAP32[$35>>2]|0; //@line 1116 "../../iup_expander.c"
 $37 = $5; //@line 1116 "../../iup_expander.c"
 $38 = (($36) - ($37))|0; //@line 1116 "../../iup_expander.c"
 $39 = (_IupGetChild($31,$38)|0); //@line 1116 "../../iup_expander.c"
 $8 = $39; //@line 1116 "../../iup_expander.c"
 $40 = $3; //@line 1117 "../../iup_expander.c"
 $41 = $5; //@line 1117 "../../iup_expander.c"
 $42 = $4; //@line 1117 "../../iup_expander.c"
 _iupAttribSetStrId($40,11713,$41,$42); //@line 1117 "../../iup_expander.c"
 $43 = $3; //@line 1118 "../../iup_expander.c"
 $44 = $8; //@line 1118 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($43,$44,0); //@line 1118 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1122 "../../iup_expander.c"
}
function _iExpanderSetImageExtra($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 1091 "../../iup_expander.c"
 $10 = ((($9)) + 72|0); //@line 1091 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 1091 "../../iup_expander.c"
 $12 = ((($11)) + 12|0); //@line 1091 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 1091 "../../iup_expander.c"
 $14 = $5; //@line 1091 "../../iup_expander.c"
 $15 = (($14) - 1)|0; //@line 1091 "../../iup_expander.c"
 $16 = ($13|0)>($15|0); //@line 1091 "../../iup_expander.c"
 if (!($16)) {
  STACKTOP = sp;return 1; //@line 1104 "../../iup_expander.c"
 }
 $17 = $3; //@line 1093 "../../iup_expander.c"
 $18 = ((($17)) + 64|0); //@line 1093 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 1093 "../../iup_expander.c"
 $20 = ((($19)) + 64|0); //@line 1093 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 1093 "../../iup_expander.c"
 $6 = $21; //@line 1093 "../../iup_expander.c"
 $22 = $6; //@line 1094 "../../iup_expander.c"
 $23 = ((($22)) + 64|0); //@line 1094 "../../iup_expander.c"
 $24 = HEAP32[$23>>2]|0; //@line 1094 "../../iup_expander.c"
 $25 = ((($24)) + 68|0); //@line 1094 "../../iup_expander.c"
 $26 = HEAP32[$25>>2]|0; //@line 1094 "../../iup_expander.c"
 $27 = ((($26)) + 68|0); //@line 1094 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 1094 "../../iup_expander.c"
 $7 = $28; //@line 1094 "../../iup_expander.c"
 $29 = $7; //@line 1096 "../../iup_expander.c"
 $30 = ($29|0)!=(0|0); //@line 1096 "../../iup_expander.c"
 if (!($30)) {
  STACKTOP = sp;return 1; //@line 1104 "../../iup_expander.c"
 }
 $31 = $7; //@line 1098 "../../iup_expander.c"
 $32 = $3; //@line 1098 "../../iup_expander.c"
 $33 = ((($32)) + 72|0); //@line 1098 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 1098 "../../iup_expander.c"
 $35 = ((($34)) + 12|0); //@line 1098 "../../iup_expander.c"
 $36 = HEAP32[$35>>2]|0; //@line 1098 "../../iup_expander.c"
 $37 = $5; //@line 1098 "../../iup_expander.c"
 $38 = (($36) - ($37))|0; //@line 1098 "../../iup_expander.c"
 $39 = (_IupGetChild($31,$38)|0); //@line 1098 "../../iup_expander.c"
 $8 = $39; //@line 1098 "../../iup_expander.c"
 $40 = $3; //@line 1099 "../../iup_expander.c"
 $41 = $5; //@line 1099 "../../iup_expander.c"
 $42 = $4; //@line 1099 "../../iup_expander.c"
 _iupAttribSetStrId($40,11702,$41,$42); //@line 1099 "../../iup_expander.c"
 $43 = $3; //@line 1100 "../../iup_expander.c"
 $44 = $8; //@line 1100 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($43,$44,0); //@line 1100 "../../iup_expander.c"
 STACKTOP = sp;return 1; //@line 1104 "../../iup_expander.c"
}
function _iExpanderUpdateExtraButtons($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = $0;
 $4 = $1; //@line 608 "../../iup_expander.c"
 $5 = ((($4)) + 64|0); //@line 608 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 608 "../../iup_expander.c"
 $7 = ((($6)) + 64|0); //@line 608 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 608 "../../iup_expander.c"
 $2 = $8; //@line 608 "../../iup_expander.c"
 $9 = $2; //@line 609 "../../iup_expander.c"
 $10 = ((($9)) + 64|0); //@line 609 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 609 "../../iup_expander.c"
 $12 = ((($11)) + 68|0); //@line 609 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 609 "../../iup_expander.c"
 $14 = ((($13)) + 68|0); //@line 609 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 609 "../../iup_expander.c"
 $3 = $15; //@line 609 "../../iup_expander.c"
 $16 = $3; //@line 611 "../../iup_expander.c"
 $17 = ($16|0)!=(0|0); //@line 611 "../../iup_expander.c"
 if ($17) {
  $18 = $3; //@line 612 "../../iup_expander.c"
  _IupDestroy($18); //@line 612 "../../iup_expander.c"
 }
 $19 = $1; //@line 614 "../../iup_expander.c"
 $20 = ((($19)) + 72|0); //@line 614 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 614 "../../iup_expander.c"
 $22 = ((($21)) + 12|0); //@line 614 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 614 "../../iup_expander.c"
 $24 = ($23|0)!=(0); //@line 614 "../../iup_expander.c"
 if (!($24)) {
  STACKTOP = sp;return; //@line 627 "../../iup_expander.c"
 }
 $25 = (_IupHbox(0,$vararg_buffer)|0); //@line 616 "../../iup_expander.c"
 $3 = $25; //@line 616 "../../iup_expander.c"
 $26 = $2; //@line 617 "../../iup_expander.c"
 _IupSetAttribute($26,20666,15836); //@line 617 "../../iup_expander.c"
 $27 = $2; //@line 618 "../../iup_expander.c"
 _IupSetAttribute($27,20659,19551); //@line 618 "../../iup_expander.c"
 $28 = $2; //@line 619 "../../iup_expander.c"
 $29 = $3; //@line 619 "../../iup_expander.c"
 (_IupAppend($28,$29)|0); //@line 619 "../../iup_expander.c"
 $30 = $1; //@line 621 "../../iup_expander.c"
 $31 = $3; //@line 621 "../../iup_expander.c"
 $32 = $1; //@line 621 "../../iup_expander.c"
 $33 = ((($32)) + 72|0); //@line 621 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 621 "../../iup_expander.c"
 $35 = ((($34)) + 12|0); //@line 621 "../../iup_expander.c"
 $36 = HEAP32[$35>>2]|0; //@line 621 "../../iup_expander.c"
 _iExpanderAddExtraButton($30,$31,$36); //@line 621 "../../iup_expander.c"
 $37 = $1; //@line 622 "../../iup_expander.c"
 $38 = ((($37)) + 72|0); //@line 622 "../../iup_expander.c"
 $39 = HEAP32[$38>>2]|0; //@line 622 "../../iup_expander.c"
 $40 = ((($39)) + 12|0); //@line 622 "../../iup_expander.c"
 $41 = HEAP32[$40>>2]|0; //@line 622 "../../iup_expander.c"
 $42 = ($41|0)>(1); //@line 622 "../../iup_expander.c"
 if ($42) {
  $43 = $1; //@line 623 "../../iup_expander.c"
  $44 = $3; //@line 623 "../../iup_expander.c"
  $45 = $1; //@line 623 "../../iup_expander.c"
  $46 = ((($45)) + 72|0); //@line 623 "../../iup_expander.c"
  $47 = HEAP32[$46>>2]|0; //@line 623 "../../iup_expander.c"
  $48 = ((($47)) + 12|0); //@line 623 "../../iup_expander.c"
  $49 = HEAP32[$48>>2]|0; //@line 623 "../../iup_expander.c"
  $50 = (($49) - 1)|0; //@line 623 "../../iup_expander.c"
  _iExpanderAddExtraButton($43,$44,$50); //@line 623 "../../iup_expander.c"
 }
 $51 = $1; //@line 624 "../../iup_expander.c"
 $52 = ((($51)) + 72|0); //@line 624 "../../iup_expander.c"
 $53 = HEAP32[$52>>2]|0; //@line 624 "../../iup_expander.c"
 $54 = ((($53)) + 12|0); //@line 624 "../../iup_expander.c"
 $55 = HEAP32[$54>>2]|0; //@line 624 "../../iup_expander.c"
 $56 = ($55|0)>(2); //@line 624 "../../iup_expander.c"
 if (!($56)) {
  STACKTOP = sp;return; //@line 627 "../../iup_expander.c"
 }
 $57 = $1; //@line 625 "../../iup_expander.c"
 $58 = $3; //@line 625 "../../iup_expander.c"
 $59 = $1; //@line 625 "../../iup_expander.c"
 $60 = ((($59)) + 72|0); //@line 625 "../../iup_expander.c"
 $61 = HEAP32[$60>>2]|0; //@line 625 "../../iup_expander.c"
 $62 = ((($61)) + 12|0); //@line 625 "../../iup_expander.c"
 $63 = HEAP32[$62>>2]|0; //@line 625 "../../iup_expander.c"
 $64 = (($63) - 2)|0; //@line 625 "../../iup_expander.c"
 _iExpanderAddExtraButton($57,$58,$64); //@line 625 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 627 "../../iup_expander.c"
}
function _iExpanderAddExtraButton($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = (_IupLabel(0)|0); //@line 595 "../../iup_expander.c"
 $6 = $7; //@line 595 "../../iup_expander.c"
 $8 = $6; //@line 596 "../../iup_expander.c"
 $9 = $5; //@line 596 "../../iup_expander.c"
 _IupSetInt($8,11683,$9); //@line 596 "../../iup_expander.c"
 $10 = $6; //@line 597 "../../iup_expander.c"
 (_IupSetCallback($10,20522,182)|0); //@line 597 "../../iup_expander.c"
 $11 = $6; //@line 598 "../../iup_expander.c"
 (_IupSetCallback($11,14303,183)|0); //@line 598 "../../iup_expander.c"
 $12 = $6; //@line 599 "../../iup_expander.c"
 (_IupSetCallback($12,14318,184)|0); //@line 599 "../../iup_expander.c"
 $13 = $3; //@line 601 "../../iup_expander.c"
 $14 = $6; //@line 601 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($13,$14,0); //@line 601 "../../iup_expander.c"
 $15 = $4; //@line 603 "../../iup_expander.c"
 $16 = $6; //@line 603 "../../iup_expander.c"
 (_IupAppend($15,$16)|0); //@line 603 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 604 "../../iup_expander.c"
}
function _iExpanderExtraButtonButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $14 = $7; //@line 906 "../../iup_expander.c"
 $15 = ($14|0)==(49); //@line 906 "../../iup_expander.c"
 if (!($15)) {
  STACKTOP = sp;return -2; //@line 924 "../../iup_expander.c"
 }
 $16 = $6; //@line 909 "../../iup_expander.c"
 $17 = (_IupGetParent($16)|0); //@line 909 "../../iup_expander.c"
 $18 = (_IupGetParent($17)|0); //@line 909 "../../iup_expander.c"
 $19 = (_IupGetParent($18)|0); //@line 909 "../../iup_expander.c"
 $20 = (_IupGetParent($19)|0); //@line 909 "../../iup_expander.c"
 $12 = $20; //@line 909 "../../iup_expander.c"
 $21 = $12; //@line 911 "../../iup_expander.c"
 $22 = (_IupGetCallback($21,3942)|0); //@line 911 "../../iup_expander.c"
 $13 = $22; //@line 911 "../../iup_expander.c"
 $23 = $13; //@line 912 "../../iup_expander.c"
 $24 = ($23|0)!=(0|0); //@line 912 "../../iup_expander.c"
 if ($24) {
  $25 = $6; //@line 914 "../../iup_expander.c"
  $26 = (_IupGetInt($25,11683)|0); //@line 914 "../../iup_expander.c"
  $7 = $26; //@line 914 "../../iup_expander.c"
  $27 = $13; //@line 915 "../../iup_expander.c"
  $28 = $12; //@line 915 "../../iup_expander.c"
  $29 = $7; //@line 915 "../../iup_expander.c"
  $30 = $8; //@line 915 "../../iup_expander.c"
  (FUNCTION_TABLE_iiii[$27 & 1023]($28,$29,$30)|0); //@line 915 "../../iup_expander.c"
 }
 $31 = $12; //@line 918 "../../iup_expander.c"
 $32 = $6; //@line 918 "../../iup_expander.c"
 $33 = $8; //@line 918 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($31,$32,$33); //@line 918 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 924 "../../iup_expander.c"
}
function _iExpanderExtraButtonEnterWindow_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 894 "../../iup_expander.c"
 $4 = (_IupGetParent($3)|0); //@line 894 "../../iup_expander.c"
 $5 = (_IupGetParent($4)|0); //@line 894 "../../iup_expander.c"
 $6 = (_IupGetParent($5)|0); //@line 894 "../../iup_expander.c"
 $7 = (_IupGetParent($6)|0); //@line 894 "../../iup_expander.c"
 $2 = $7; //@line 894 "../../iup_expander.c"
 $8 = $1; //@line 896 "../../iup_expander.c"
 $9 = (_iupAttribGet($8,12547)|0); //@line 896 "../../iup_expander.c"
 $10 = ($9|0)!=(0|0); //@line 896 "../../iup_expander.c"
 if ($10) {
  STACKTOP = sp;return -2; //@line 901 "../../iup_expander.c"
 }
 $11 = $1; //@line 898 "../../iup_expander.c"
 _iupAttribSet($11,12547,19938); //@line 898 "../../iup_expander.c"
 $12 = $2; //@line 899 "../../iup_expander.c"
 $13 = $1; //@line 899 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($12,$13,0); //@line 899 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 901 "../../iup_expander.c"
}
function _iExpanderExtraButtonLeaveWindow_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 881 "../../iup_expander.c"
 $4 = (_IupGetParent($3)|0); //@line 881 "../../iup_expander.c"
 $5 = (_IupGetParent($4)|0); //@line 881 "../../iup_expander.c"
 $6 = (_IupGetParent($5)|0); //@line 881 "../../iup_expander.c"
 $7 = (_IupGetParent($6)|0); //@line 881 "../../iup_expander.c"
 $2 = $7; //@line 881 "../../iup_expander.c"
 $8 = $1; //@line 883 "../../iup_expander.c"
 $9 = (_iupAttribGet($8,12547)|0); //@line 883 "../../iup_expander.c"
 $10 = ($9|0)!=(0|0); //@line 883 "../../iup_expander.c"
 if (!($10)) {
  STACKTOP = sp;return -2; //@line 888 "../../iup_expander.c"
 }
 $11 = $1; //@line 885 "../../iup_expander.c"
 _iupAttribSet($11,12547,0); //@line 885 "../../iup_expander.c"
 $12 = $2; //@line 886 "../../iup_expander.c"
 $13 = $1; //@line 886 "../../iup_expander.c"
 _iExpanderUpdateExtraButtonImage($12,$13,0); //@line 886 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 888 "../../iup_expander.c"
}
function _iExpanderTimer_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 730 "../../iup_expander.c"
 $5 = (_iupAttribGet($4,11748)|0); //@line 730 "../../iup_expander.c"
 $2 = $5; //@line 730 "../../iup_expander.c"
 $6 = $2; //@line 731 "../../iup_expander.c"
 $7 = ((($6)) + 64|0); //@line 731 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 731 "../../iup_expander.c"
 $9 = ((($8)) + 68|0); //@line 731 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 731 "../../iup_expander.c"
 $3 = $10; //@line 731 "../../iup_expander.c"
 $11 = $1; //@line 734 "../../iup_expander.c"
 _IupSetAttribute($11,17780,17810); //@line 734 "../../iup_expander.c"
 $12 = $2; //@line 738 "../../iup_expander.c"
 _iExpanderOpenCloseChild($12,0,1,2); //@line 738 "../../iup_expander.c"
 $13 = $2; //@line 739 "../../iup_expander.c"
 _IupRefreshChildren($13); //@line 739 "../../iup_expander.c"
 $14 = $3; //@line 740 "../../iup_expander.c"
 _IupSetAttribute($14,16013,16020); //@line 740 "../../iup_expander.c"
 _IupSetGlobal(11762,16114); //@line 743 "../../iup_expander.c"
 $15 = (_IupGetFunction(11777)|0); //@line 744 "../../iup_expander.c"
 (_IupSetFunction(11793,$15)|0); //@line 744 "../../iup_expander.c"
 $16 = $2; //@line 745 "../../iup_expander.c"
 _IupSetGlobal(11818,$16); //@line 745 "../../iup_expander.c"
 (_IupSetFunction(11777,185)|0); //@line 746 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 747 "../../iup_expander.c"
}
function _iExpanderOpenCloseChild($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $12 = $4; //@line 465 "../../iup_expander.c"
 $13 = ((($12)) + 64|0); //@line 465 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 465 "../../iup_expander.c"
 $15 = ((($14)) + 68|0); //@line 465 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 465 "../../iup_expander.c"
 $8 = $16; //@line 465 "../../iup_expander.c"
 $17 = $6; //@line 467 "../../iup_expander.c"
 $18 = ($17|0)!=(0); //@line 467 "../../iup_expander.c"
 if ($18) {
  $19 = $4; //@line 469 "../../iup_expander.c"
  $20 = (_IupGetCallback($19,3929)|0); //@line 469 "../../iup_expander.c"
  $9 = $20; //@line 469 "../../iup_expander.c"
  $21 = $9; //@line 470 "../../iup_expander.c"
  $22 = ($21|0)!=(0|0); //@line 470 "../../iup_expander.c"
  if ($22) {
   $23 = $9; //@line 472 "../../iup_expander.c"
   $24 = $4; //@line 472 "../../iup_expander.c"
   $25 = $7; //@line 472 "../../iup_expander.c"
   $26 = (FUNCTION_TABLE_iii[$23 & 1023]($24,$25)|0); //@line 472 "../../iup_expander.c"
   $10 = $26; //@line 472 "../../iup_expander.c"
   $27 = $10; //@line 473 "../../iup_expander.c"
   $28 = ($27|0)==(-1); //@line 473 "../../iup_expander.c"
   if ($28) {
    STACKTOP = sp;return; //@line 506 "../../iup_expander.c"
   }
  }
 }
 $29 = $7; //@line 478 "../../iup_expander.c"
 $30 = $4; //@line 478 "../../iup_expander.c"
 $31 = ((($30)) + 72|0); //@line 478 "../../iup_expander.c"
 $32 = HEAP32[$31>>2]|0; //@line 478 "../../iup_expander.c"
 $33 = ((($32)) + 4|0); //@line 478 "../../iup_expander.c"
 HEAP32[$33>>2] = $29; //@line 478 "../../iup_expander.c"
 $34 = $4; //@line 480 "../../iup_expander.c"
 _iExpanderUpdateStateImage($34); //@line 480 "../../iup_expander.c"
 $35 = $4; //@line 481 "../../iup_expander.c"
 $36 = ((($35)) + 72|0); //@line 481 "../../iup_expander.c"
 $37 = HEAP32[$36>>2]|0; //@line 481 "../../iup_expander.c"
 $38 = HEAP32[$37>>2]|0; //@line 481 "../../iup_expander.c"
 $39 = ($38|0)==(2); //@line 481 "../../iup_expander.c"
 if ($39) {
  $40 = $4; //@line 482 "../../iup_expander.c"
  _iExpanderUpdateTitleState($40); //@line 482 "../../iup_expander.c"
 }
 $41 = $8; //@line 484 "../../iup_expander.c"
 $42 = ($41|0)!=(0|0); //@line 484 "../../iup_expander.c"
 do {
  if ($42) {
   $43 = $5; //@line 486 "../../iup_expander.c"
   $44 = ($43|0)!=(0); //@line 486 "../../iup_expander.c"
   if ($44) {
    $45 = $4; //@line 486 "../../iup_expander.c"
    $46 = ((($45)) + 72|0); //@line 486 "../../iup_expander.c"
    $47 = HEAP32[$46>>2]|0; //@line 486 "../../iup_expander.c"
    $48 = ((($47)) + 24|0); //@line 486 "../../iup_expander.c"
    $49 = HEAP32[$48>>2]|0; //@line 486 "../../iup_expander.c"
    $50 = ($49|0)!=(0); //@line 486 "../../iup_expander.c"
    if ($50) {
     $51 = $4; //@line 486 "../../iup_expander.c"
     $52 = ((($51)) + 72|0); //@line 486 "../../iup_expander.c"
     $53 = HEAP32[$52>>2]|0; //@line 486 "../../iup_expander.c"
     $54 = HEAP32[$53>>2]|0; //@line 486 "../../iup_expander.c"
     $55 = ($54|0)==(2); //@line 486 "../../iup_expander.c"
     if ($55) {
      $56 = $4; //@line 487 "../../iup_expander.c"
      $57 = $8; //@line 487 "../../iup_expander.c"
      _iExpanderAnimateChild($56,$57); //@line 487 "../../iup_expander.c"
      break;
     }
    }
   }
   $58 = $4; //@line 490 "../../iup_expander.c"
   $59 = ((($58)) + 72|0); //@line 490 "../../iup_expander.c"
   $60 = HEAP32[$59>>2]|0; //@line 490 "../../iup_expander.c"
   $61 = ((($60)) + 4|0); //@line 490 "../../iup_expander.c"
   $62 = HEAP32[$61>>2]|0; //@line 490 "../../iup_expander.c"
   $63 = ($62|0)==(0); //@line 490 "../../iup_expander.c"
   $64 = $8; //@line 491 "../../iup_expander.c"
   if ($63) {
    _IupSetAttribute($64,20132,20140); //@line 491 "../../iup_expander.c"
   } else {
    _IupSetAttribute($64,20132,20441); //@line 493 "../../iup_expander.c"
   }
   $65 = $5; //@line 495 "../../iup_expander.c"
   $66 = ($65|0)!=(0); //@line 495 "../../iup_expander.c"
   if ($66) {
    $67 = $8; //@line 496 "../../iup_expander.c"
    _IupRefresh($67); //@line 496 "../../iup_expander.c"
   }
  }
 } while(0);
 $68 = $6; //@line 500 "../../iup_expander.c"
 $69 = ($68|0)!=(0); //@line 500 "../../iup_expander.c"
 if (!($69)) {
  STACKTOP = sp;return; //@line 506 "../../iup_expander.c"
 }
 $70 = $4; //@line 502 "../../iup_expander.c"
 $71 = (_IupGetCallback($70,20479)|0); //@line 502 "../../iup_expander.c"
 $11 = $71; //@line 502 "../../iup_expander.c"
 $72 = $11; //@line 503 "../../iup_expander.c"
 $73 = ($72|0)!=(0|0); //@line 503 "../../iup_expander.c"
 if (!($73)) {
  STACKTOP = sp;return; //@line 506 "../../iup_expander.c"
 }
 $74 = $11; //@line 504 "../../iup_expander.c"
 $75 = $4; //@line 504 "../../iup_expander.c"
 (FUNCTION_TABLE_ii[$74 & 1023]($75)|0); //@line 504 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 506 "../../iup_expander.c"
}
function _iExpanderGlobalMotion_cb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 16|0;
 $6 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $10 = (_IupGetGlobal(11818)|0); //@line 693 "../../iup_expander.c"
 $7 = $10; //@line 693 "../../iup_expander.c"
 $11 = $7; //@line 694 "../../iup_expander.c"
 $12 = ((($11)) + 64|0); //@line 694 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 694 "../../iup_expander.c"
 $8 = $13; //@line 694 "../../iup_expander.c"
 $14 = $8; //@line 695 "../../iup_expander.c"
 $15 = ((($14)) + 68|0); //@line 695 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 695 "../../iup_expander.c"
 $9 = $16; //@line 695 "../../iup_expander.c"
 $17 = $7; //@line 697 "../../iup_expander.c"
 $18 = ((($17)) + 72|0); //@line 697 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 697 "../../iup_expander.c"
 $20 = ((($19)) + 4|0); //@line 697 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 697 "../../iup_expander.c"
 $22 = ($21|0)!=(2); //@line 697 "../../iup_expander.c"
 if ($22) {
  _IupSetGlobal(11818,0); //@line 699 "../../iup_expander.c"
  $23 = (_IupGetFunction(11793)|0); //@line 700 "../../iup_expander.c"
  (_IupSetFunction(11777,$23)|0); //@line 700 "../../iup_expander.c"
  (_IupSetFunction(11793,0)|0); //@line 701 "../../iup_expander.c"
  _IupSetGlobal(11762,17810); //@line 702 "../../iup_expander.c"
  $2 = -2; //@line 703 "../../iup_expander.c"
  $68 = $2; //@line 726 "../../iup_expander.c"
  STACKTOP = sp;return ($68|0); //@line 726 "../../iup_expander.c"
 }
 HEAP32[$5>>2] = 0; //@line 706 "../../iup_expander.c"
 HEAP32[$6>>2] = 0; //@line 706 "../../iup_expander.c"
 $24 = $8; //@line 707 "../../iup_expander.c"
 _iupdrvClientToScreen($24,$5,$6); //@line 707 "../../iup_expander.c"
 $25 = $3; //@line 708 "../../iup_expander.c"
 $26 = HEAP32[$5>>2]|0; //@line 708 "../../iup_expander.c"
 $27 = ($25|0)>($26|0); //@line 708 "../../iup_expander.c"
 if ($27) {
  $28 = $3; //@line 708 "../../iup_expander.c"
  $29 = HEAP32[$5>>2]|0; //@line 708 "../../iup_expander.c"
  $30 = $8; //@line 708 "../../iup_expander.c"
  $31 = ((($30)) + 52|0); //@line 708 "../../iup_expander.c"
  $32 = HEAP32[$31>>2]|0; //@line 708 "../../iup_expander.c"
  $33 = (($29) + ($32))|0; //@line 708 "../../iup_expander.c"
  $34 = ($28|0)<($33|0); //@line 708 "../../iup_expander.c"
  if ($34) {
   $35 = $4; //@line 709 "../../iup_expander.c"
   $36 = HEAP32[$6>>2]|0; //@line 709 "../../iup_expander.c"
   $37 = ($35|0)>($36|0); //@line 709 "../../iup_expander.c"
   if ($37) {
    $38 = $4; //@line 709 "../../iup_expander.c"
    $39 = HEAP32[$6>>2]|0; //@line 709 "../../iup_expander.c"
    $40 = $8; //@line 709 "../../iup_expander.c"
    $41 = ((($40)) + 56|0); //@line 709 "../../iup_expander.c"
    $42 = HEAP32[$41>>2]|0; //@line 709 "../../iup_expander.c"
    $43 = (($39) + ($42))|0; //@line 709 "../../iup_expander.c"
    $44 = ($38|0)<($43|0); //@line 709 "../../iup_expander.c"
    if ($44) {
     $2 = -2; //@line 710 "../../iup_expander.c"
     $68 = $2; //@line 726 "../../iup_expander.c"
     STACKTOP = sp;return ($68|0); //@line 726 "../../iup_expander.c"
    }
   }
  }
 }
 HEAP32[$5>>2] = 0; //@line 712 "../../iup_expander.c"
 HEAP32[$6>>2] = 0; //@line 712 "../../iup_expander.c"
 $45 = $9; //@line 713 "../../iup_expander.c"
 _iupdrvClientToScreen($45,$5,$6); //@line 713 "../../iup_expander.c"
 $46 = $3; //@line 714 "../../iup_expander.c"
 $47 = HEAP32[$5>>2]|0; //@line 714 "../../iup_expander.c"
 $48 = ($46|0)<($47|0); //@line 714 "../../iup_expander.c"
 if ($48) {
  label = 12;
 } else {
  $49 = $3; //@line 714 "../../iup_expander.c"
  $50 = HEAP32[$5>>2]|0; //@line 714 "../../iup_expander.c"
  $51 = $9; //@line 714 "../../iup_expander.c"
  $52 = ((($51)) + 52|0); //@line 714 "../../iup_expander.c"
  $53 = HEAP32[$52>>2]|0; //@line 714 "../../iup_expander.c"
  $54 = (($50) + ($53))|0; //@line 714 "../../iup_expander.c"
  $55 = ($49|0)>($54|0); //@line 714 "../../iup_expander.c"
  if ($55) {
   label = 12;
  } else {
   $56 = $4; //@line 715 "../../iup_expander.c"
   $57 = HEAP32[$6>>2]|0; //@line 715 "../../iup_expander.c"
   $58 = ($56|0)<($57|0); //@line 715 "../../iup_expander.c"
   if ($58) {
    label = 12;
   } else {
    $59 = $4; //@line 715 "../../iup_expander.c"
    $60 = HEAP32[$6>>2]|0; //@line 715 "../../iup_expander.c"
    $61 = $9; //@line 715 "../../iup_expander.c"
    $62 = ((($61)) + 56|0); //@line 715 "../../iup_expander.c"
    $63 = HEAP32[$62>>2]|0; //@line 715 "../../iup_expander.c"
    $64 = (($60) + ($63))|0; //@line 715 "../../iup_expander.c"
    $65 = ($59|0)>($64|0); //@line 715 "../../iup_expander.c"
    if ($65) {
     label = 12;
    }
   }
  }
 }
 if ((label|0) == 12) {
  $66 = $7; //@line 717 "../../iup_expander.c"
  _iExpanderOpenCloseChild($66,0,1,0); //@line 717 "../../iup_expander.c"
  _IupSetGlobal(11818,0); //@line 719 "../../iup_expander.c"
  $67 = (_IupGetFunction(11793)|0); //@line 720 "../../iup_expander.c"
  (_IupSetFunction(11777,$67)|0); //@line 720 "../../iup_expander.c"
  (_IupSetFunction(11793,0)|0); //@line 721 "../../iup_expander.c"
  _IupSetGlobal(11762,17810); //@line 722 "../../iup_expander.c"
 }
 $2 = -2; //@line 725 "../../iup_expander.c"
 $68 = $2; //@line 726 "../../iup_expander.c"
 STACKTOP = sp;return ($68|0); //@line 726 "../../iup_expander.c"
}
function _iExpanderUpdateStateImage($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $1 = $0;
 $8 = $1; //@line 299 "../../iup_expander.c"
 $9 = ((($8)) + 64|0); //@line 299 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 299 "../../iup_expander.c"
 $11 = ((($10)) + 64|0); //@line 299 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 299 "../../iup_expander.c"
 $2 = $12; //@line 299 "../../iup_expander.c"
 $13 = $2; //@line 300 "../../iup_expander.c"
 $14 = ((($13)) + 64|0); //@line 300 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 300 "../../iup_expander.c"
 $3 = $15; //@line 300 "../../iup_expander.c"
 $16 = $1; //@line 302 "../../iup_expander.c"
 $17 = (_iupAttribGetStr($16,20169)|0); //@line 302 "../../iup_expander.c"
 $4 = $17; //@line 302 "../../iup_expander.c"
 $18 = $4; //@line 303 "../../iup_expander.c"
 $19 = ($18|0)!=(0|0); //@line 303 "../../iup_expander.c"
 $20 = $1; //@line 305 "../../iup_expander.c"
 $21 = ((($20)) + 72|0); //@line 305 "../../iup_expander.c"
 $22 = HEAP32[$21>>2]|0; //@line 305 "../../iup_expander.c"
 if ($19) {
  $23 = ((($22)) + 4|0); //@line 305 "../../iup_expander.c"
  $24 = HEAP32[$23>>2]|0; //@line 305 "../../iup_expander.c"
  $25 = ($24|0)!=(0); //@line 305 "../../iup_expander.c"
  if ($25) {
   $26 = $1; //@line 307 "../../iup_expander.c"
   $27 = (_iupAttribGetStr($26,4146)|0); //@line 307 "../../iup_expander.c"
   $5 = $27; //@line 307 "../../iup_expander.c"
   $28 = $5; //@line 308 "../../iup_expander.c"
   $29 = ($28|0)!=(0|0); //@line 308 "../../iup_expander.c"
   if ($29) {
    $30 = $5; //@line 308 "../../iup_expander.c"
    $4 = $30; //@line 308 "../../iup_expander.c"
   }
   $31 = $3; //@line 310 "../../iup_expander.c"
   $32 = (_iupAttribGet($31,12547)|0); //@line 310 "../../iup_expander.c"
   $33 = ($32|0)!=(0|0); //@line 310 "../../iup_expander.c"
   if ($33) {
    $34 = $1; //@line 312 "../../iup_expander.c"
    $35 = (_iupAttribGetStr($34,4156)|0); //@line 312 "../../iup_expander.c"
    $6 = $35; //@line 312 "../../iup_expander.c"
    $36 = $6; //@line 313 "../../iup_expander.c"
    $37 = ($36|0)!=(0|0); //@line 313 "../../iup_expander.c"
    if ($37) {
     $38 = $6; //@line 313 "../../iup_expander.c"
     $4 = $38; //@line 313 "../../iup_expander.c"
    }
   }
  } else {
   $39 = $3; //@line 318 "../../iup_expander.c"
   $40 = (_iupAttribGet($39,12547)|0); //@line 318 "../../iup_expander.c"
   $41 = ($40|0)!=(0|0); //@line 318 "../../iup_expander.c"
   if ($41) {
    $42 = $1; //@line 320 "../../iup_expander.c"
    $43 = (_iupAttribGetStr($42,12295)|0); //@line 320 "../../iup_expander.c"
    $7 = $43; //@line 320 "../../iup_expander.c"
    $44 = $7; //@line 321 "../../iup_expander.c"
    $45 = ($44|0)!=(0|0); //@line 321 "../../iup_expander.c"
    if ($45) {
     $46 = $7; //@line 321 "../../iup_expander.c"
     $4 = $46; //@line 321 "../../iup_expander.c"
    }
   }
  }
  $47 = $3; //@line 325 "../../iup_expander.c"
  $48 = $4; //@line 325 "../../iup_expander.c"
  _IupSetAttribute($47,20169,$48); //@line 325 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 374 "../../iup_expander.c"
 }
 $49 = HEAP32[$22>>2]|0; //@line 331 "../../iup_expander.c"
 L16: do {
  switch ($49|0) {
  case 0:  {
   $50 = $1; //@line 334 "../../iup_expander.c"
   $51 = ((($50)) + 72|0); //@line 334 "../../iup_expander.c"
   $52 = HEAP32[$51>>2]|0; //@line 334 "../../iup_expander.c"
   $53 = ((($52)) + 4|0); //@line 334 "../../iup_expander.c"
   $54 = HEAP32[$53>>2]|0; //@line 334 "../../iup_expander.c"
   $55 = ($54|0)==(0); //@line 334 "../../iup_expander.c"
   if ($55) {
    $4 = 4362; //@line 335 "../../iup_expander.c"
    break L16;
   } else {
    $4 = 4349; //@line 337 "../../iup_expander.c"
    break L16;
   }
   break;
  }
  case 1:  {
   $56 = $1; //@line 340 "../../iup_expander.c"
   $57 = ((($56)) + 72|0); //@line 340 "../../iup_expander.c"
   $58 = HEAP32[$57>>2]|0; //@line 340 "../../iup_expander.c"
   $59 = ((($58)) + 4|0); //@line 340 "../../iup_expander.c"
   $60 = HEAP32[$59>>2]|0; //@line 340 "../../iup_expander.c"
   $61 = ($60|0)==(0); //@line 340 "../../iup_expander.c"
   if ($61) {
    $4 = 4349; //@line 341 "../../iup_expander.c"
    break L16;
   } else {
    $4 = 4362; //@line 343 "../../iup_expander.c"
    break L16;
   }
   break;
  }
  case 3:  {
   $62 = $1; //@line 346 "../../iup_expander.c"
   $63 = ((($62)) + 72|0); //@line 346 "../../iup_expander.c"
   $64 = HEAP32[$63>>2]|0; //@line 346 "../../iup_expander.c"
   $65 = ((($64)) + 4|0); //@line 346 "../../iup_expander.c"
   $66 = HEAP32[$65>>2]|0; //@line 346 "../../iup_expander.c"
   $67 = ($66|0)==(0); //@line 346 "../../iup_expander.c"
   if ($67) {
    $4 = 4325; //@line 347 "../../iup_expander.c"
    break L16;
   } else {
    $4 = 4336; //@line 349 "../../iup_expander.c"
    break L16;
   }
   break;
  }
  default: {
   $68 = $1; //@line 352 "../../iup_expander.c"
   $69 = (_iupAttribGet($68,20508)|0); //@line 352 "../../iup_expander.c"
   $70 = ($69|0)!=(0|0); //@line 352 "../../iup_expander.c"
   if (!($70)) {
    $71 = $1; //@line 352 "../../iup_expander.c"
    $72 = (_iupAttribGet($71,4009)|0); //@line 352 "../../iup_expander.c"
    $73 = ($72|0)!=(0|0); //@line 352 "../../iup_expander.c"
    if (!($73)) {
     $80 = $1; //@line 361 "../../iup_expander.c"
     $81 = ((($80)) + 72|0); //@line 361 "../../iup_expander.c"
     $82 = HEAP32[$81>>2]|0; //@line 361 "../../iup_expander.c"
     $83 = ((($82)) + 4|0); //@line 361 "../../iup_expander.c"
     $84 = HEAP32[$83>>2]|0; //@line 361 "../../iup_expander.c"
     $85 = ($84|0)==(0); //@line 361 "../../iup_expander.c"
     if ($85) {
      $4 = 4336; //@line 362 "../../iup_expander.c"
      break L16;
     } else {
      $4 = 4325; //@line 364 "../../iup_expander.c"
      break L16;
     }
    }
   }
   $74 = $1; //@line 354 "../../iup_expander.c"
   $75 = ((($74)) + 72|0); //@line 354 "../../iup_expander.c"
   $76 = HEAP32[$75>>2]|0; //@line 354 "../../iup_expander.c"
   $77 = ((($76)) + 4|0); //@line 354 "../../iup_expander.c"
   $78 = HEAP32[$77>>2]|0; //@line 354 "../../iup_expander.c"
   $79 = ($78|0)==(0); //@line 354 "../../iup_expander.c"
   if ($79) {
    $4 = 4362; //@line 355 "../../iup_expander.c"
    break L16;
   } else {
    $4 = 4336; //@line 357 "../../iup_expander.c"
    break L16;
   }
  }
  }
 } while(0);
 $86 = $3; //@line 369 "../../iup_expander.c"
 $87 = (_iupAttribGet($86,12547)|0); //@line 369 "../../iup_expander.c"
 $88 = ($87|0)!=(0|0); //@line 369 "../../iup_expander.c"
 $89 = $3; //@line 370 "../../iup_expander.c"
 $90 = $4; //@line 370 "../../iup_expander.c"
 if ($88) {
  HEAP32[$vararg_buffer>>2] = $90; //@line 370 "../../iup_expander.c"
  _IupSetfAttribute($89,20169,11921,$vararg_buffer); //@line 370 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 374 "../../iup_expander.c"
 } else {
  _IupSetAttribute($89,20169,$90); //@line 372 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 374 "../../iup_expander.c"
 }
}
function _iExpanderUpdateTitleState($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $1 = $0;
 $11 = $1; //@line 247 "../../iup_expander.c"
 $12 = ((($11)) + 64|0); //@line 247 "../../iup_expander.c"
 $13 = HEAP32[$12>>2]|0; //@line 247 "../../iup_expander.c"
 $14 = ((($13)) + 64|0); //@line 247 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 247 "../../iup_expander.c"
 $2 = $15; //@line 247 "../../iup_expander.c"
 $16 = $2; //@line 248 "../../iup_expander.c"
 $17 = ((($16)) + 64|0); //@line 248 "../../iup_expander.c"
 $18 = HEAP32[$17>>2]|0; //@line 248 "../../iup_expander.c"
 $19 = ((($18)) + 68|0); //@line 248 "../../iup_expander.c"
 $20 = HEAP32[$19>>2]|0; //@line 248 "../../iup_expander.c"
 $3 = $20; //@line 248 "../../iup_expander.c"
 $21 = $1; //@line 252 "../../iup_expander.c"
 $22 = (_iupAttribGet($21,4009)|0); //@line 252 "../../iup_expander.c"
 $4 = $22; //@line 252 "../../iup_expander.c"
 $23 = $4; //@line 253 "../../iup_expander.c"
 $24 = ($23|0)!=(0|0); //@line 253 "../../iup_expander.c"
 $25 = $1; //@line 255 "../../iup_expander.c"
 if (!($24)) {
  $54 = (_iupAttribGetStr($25,3969)|0); //@line 279 "../../iup_expander.c"
  $8 = $54; //@line 279 "../../iup_expander.c"
  $55 = $3; //@line 281 "../../iup_expander.c"
  $56 = (_iupAttribGet($55,12547)|0); //@line 281 "../../iup_expander.c"
  $57 = ($56|0)!=(0|0); //@line 281 "../../iup_expander.c"
  $58 = $1; //@line 283 "../../iup_expander.c"
  if ($57) {
   $59 = (_iupAttribGet($58,3979)|0); //@line 283 "../../iup_expander.c"
   $9 = $59; //@line 283 "../../iup_expander.c"
   $60 = $9; //@line 284 "../../iup_expander.c"
   $61 = ($60|0)!=(0|0); //@line 284 "../../iup_expander.c"
   if ($61) {
    $62 = $9; //@line 284 "../../iup_expander.c"
    $8 = $62; //@line 284 "../../iup_expander.c"
   }
  } else {
   $63 = ((($58)) + 72|0); //@line 286 "../../iup_expander.c"
   $64 = HEAP32[$63>>2]|0; //@line 286 "../../iup_expander.c"
   $65 = ((($64)) + 4|0); //@line 286 "../../iup_expander.c"
   $66 = HEAP32[$65>>2]|0; //@line 286 "../../iup_expander.c"
   $67 = ($66|0)!=(0); //@line 286 "../../iup_expander.c"
   if ($67) {
    $68 = $1; //@line 288 "../../iup_expander.c"
    $69 = (_iupAttribGet($68,3989)|0); //@line 288 "../../iup_expander.c"
    $10 = $69; //@line 288 "../../iup_expander.c"
    $70 = $10; //@line 289 "../../iup_expander.c"
    $71 = ($70|0)!=(0|0); //@line 289 "../../iup_expander.c"
    if ($71) {
     $72 = $10; //@line 289 "../../iup_expander.c"
     $8 = $72; //@line 289 "../../iup_expander.c"
    }
   }
  }
  $73 = $3; //@line 292 "../../iup_expander.c"
  $74 = $8; //@line 292 "../../iup_expander.c"
  _IupSetStrAttribute($73,20610,$74); //@line 292 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 294 "../../iup_expander.c"
 }
 $26 = ((($25)) + 72|0); //@line 255 "../../iup_expander.c"
 $27 = HEAP32[$26>>2]|0; //@line 255 "../../iup_expander.c"
 $28 = ((($27)) + 4|0); //@line 255 "../../iup_expander.c"
 $29 = HEAP32[$28>>2]|0; //@line 255 "../../iup_expander.c"
 $30 = ($29|0)!=(0); //@line 255 "../../iup_expander.c"
 if ($30) {
  $31 = $1; //@line 257 "../../iup_expander.c"
  $32 = (_iupAttribGetStr($31,4020)|0); //@line 257 "../../iup_expander.c"
  $5 = $32; //@line 257 "../../iup_expander.c"
  $33 = $5; //@line 258 "../../iup_expander.c"
  $34 = ($33|0)!=(0|0); //@line 258 "../../iup_expander.c"
  if ($34) {
   $35 = $5; //@line 258 "../../iup_expander.c"
   $4 = $35; //@line 258 "../../iup_expander.c"
  }
  $36 = $3; //@line 260 "../../iup_expander.c"
  $37 = (_iupAttribGet($36,12547)|0); //@line 260 "../../iup_expander.c"
  $38 = ($37|0)!=(0|0); //@line 260 "../../iup_expander.c"
  if ($38) {
   $39 = $1; //@line 262 "../../iup_expander.c"
   $40 = (_iupAttribGetStr($39,4055)|0); //@line 262 "../../iup_expander.c"
   $6 = $40; //@line 262 "../../iup_expander.c"
   $41 = $6; //@line 263 "../../iup_expander.c"
   $42 = ($41|0)!=(0|0); //@line 263 "../../iup_expander.c"
   if ($42) {
    $43 = $6; //@line 263 "../../iup_expander.c"
    $4 = $43; //@line 263 "../../iup_expander.c"
   }
  }
 } else {
  $44 = $3; //@line 268 "../../iup_expander.c"
  $45 = (_iupAttribGet($44,12547)|0); //@line 268 "../../iup_expander.c"
  $46 = ($45|0)!=(0|0); //@line 268 "../../iup_expander.c"
  if ($46) {
   $47 = $1; //@line 270 "../../iup_expander.c"
   $48 = (_iupAttribGetStr($47,4035)|0); //@line 270 "../../iup_expander.c"
   $7 = $48; //@line 270 "../../iup_expander.c"
   $49 = $7; //@line 271 "../../iup_expander.c"
   $50 = ($49|0)!=(0|0); //@line 271 "../../iup_expander.c"
   if ($50) {
    $51 = $7; //@line 271 "../../iup_expander.c"
    $4 = $51; //@line 271 "../../iup_expander.c"
   }
  }
 }
 $52 = $3; //@line 275 "../../iup_expander.c"
 $53 = $4; //@line 275 "../../iup_expander.c"
 _IupSetStrAttribute($52,20169,$53); //@line 275 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 294 "../../iup_expander.c"
}
function _iExpanderAnimateChild($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $6 = 0; //@line 420 "../../iup_expander.c"
 $8 = $2; //@line 421 "../../iup_expander.c"
 $9 = (_iupAttribGetInt($8,4133)|0); //@line 421 "../../iup_expander.c"
 $7 = $9; //@line 421 "../../iup_expander.c"
 $10 = $2; //@line 425 "../../iup_expander.c"
 $11 = ((($10)) + 72|0); //@line 425 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 425 "../../iup_expander.c"
 $13 = ((($12)) + 4|0); //@line 425 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 425 "../../iup_expander.c"
 $15 = ($14|0)!=(0); //@line 425 "../../iup_expander.c"
 if ($15) {
  $16 = $3; //@line 428 "../../iup_expander.c"
  _IupSetAttribute($16,20132,20441); //@line 428 "../../iup_expander.c"
  $17 = $2; //@line 431 "../../iup_expander.c"
  $18 = (_IupGetDialog($17)|0); //@line 431 "../../iup_expander.c"
  _iupLayoutCompute($18); //@line 431 "../../iup_expander.c"
 } else {
  $19 = $2; //@line 438 "../../iup_expander.c"
  $20 = ((($19)) + 72|0); //@line 438 "../../iup_expander.c"
  $21 = HEAP32[$20>>2]|0; //@line 438 "../../iup_expander.c"
  $22 = ((($21)) + 4|0); //@line 438 "../../iup_expander.c"
  HEAP32[$22>>2] = 1; //@line 438 "../../iup_expander.c"
  $6 = 1; //@line 439 "../../iup_expander.c"
 }
 $23 = $3; //@line 442 "../../iup_expander.c"
 $24 = ((($23)) + 56|0); //@line 442 "../../iup_expander.c"
 $25 = HEAP32[$24>>2]|0; //@line 442 "../../iup_expander.c"
 $5 = $25; //@line 442 "../../iup_expander.c"
 $26 = $3; //@line 443 "../../iup_expander.c"
 $27 = ((($26)) + 52|0); //@line 443 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 443 "../../iup_expander.c"
 $4 = $28; //@line 443 "../../iup_expander.c"
 $29 = $3; //@line 445 "../../iup_expander.c"
 $30 = $3; //@line 445 "../../iup_expander.c"
 $31 = (_iupAttribGet($30,14239)|0); //@line 445 "../../iup_expander.c"
 _iupAttribSetStr($29,11839,$31); //@line 445 "../../iup_expander.c"
 $32 = $2; //@line 447 "../../iup_expander.c"
 $33 = ((($32)) + 72|0); //@line 447 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 447 "../../iup_expander.c"
 $35 = ((($34)) + 32|0); //@line 447 "../../iup_expander.c"
 $36 = HEAP32[$35>>2]|0; //@line 447 "../../iup_expander.c"
 $37 = ($36|0)!=(0|0); //@line 447 "../../iup_expander.c"
 if (!($37)) {
  $38 = (_IupTimer()|0); //@line 449 "../../iup_expander.c"
  $39 = $2; //@line 449 "../../iup_expander.c"
  $40 = ((($39)) + 72|0); //@line 449 "../../iup_expander.c"
  $41 = HEAP32[$40>>2]|0; //@line 449 "../../iup_expander.c"
  $42 = ((($41)) + 32|0); //@line 449 "../../iup_expander.c"
  HEAP32[$42>>2] = $38; //@line 449 "../../iup_expander.c"
  $43 = $2; //@line 450 "../../iup_expander.c"
  $44 = ((($43)) + 72|0); //@line 450 "../../iup_expander.c"
  $45 = HEAP32[$44>>2]|0; //@line 450 "../../iup_expander.c"
  $46 = ((($45)) + 32|0); //@line 450 "../../iup_expander.c"
  $47 = HEAP32[$46>>2]|0; //@line 450 "../../iup_expander.c"
  (_IupSetCallback($47,17766,186)|0); //@line 450 "../../iup_expander.c"
  $48 = $2; //@line 451 "../../iup_expander.c"
  $49 = ((($48)) + 72|0); //@line 451 "../../iup_expander.c"
  $50 = HEAP32[$49>>2]|0; //@line 451 "../../iup_expander.c"
  $51 = ((($50)) + 32|0); //@line 451 "../../iup_expander.c"
  $52 = HEAP32[$51>>2]|0; //@line 451 "../../iup_expander.c"
  $53 = $2; //@line 451 "../../iup_expander.c"
  _iupAttribSet($52,11748,$53); //@line 451 "../../iup_expander.c"
 }
 $54 = $2; //@line 454 "../../iup_expander.c"
 $55 = ((($54)) + 72|0); //@line 454 "../../iup_expander.c"
 $56 = HEAP32[$55>>2]|0; //@line 454 "../../iup_expander.c"
 $57 = ((($56)) + 32|0); //@line 454 "../../iup_expander.c"
 $58 = HEAP32[$57>>2]|0; //@line 454 "../../iup_expander.c"
 $59 = $5; //@line 454 "../../iup_expander.c"
 _IupSetInt($58,11851,$59); //@line 454 "../../iup_expander.c"
 $60 = $2; //@line 455 "../../iup_expander.c"
 $61 = ((($60)) + 72|0); //@line 455 "../../iup_expander.c"
 $62 = HEAP32[$61>>2]|0; //@line 455 "../../iup_expander.c"
 $63 = ((($62)) + 32|0); //@line 455 "../../iup_expander.c"
 $64 = HEAP32[$63>>2]|0; //@line 455 "../../iup_expander.c"
 $65 = $6; //@line 455 "../../iup_expander.c"
 _IupSetInt($64,11869,$65); //@line 455 "../../iup_expander.c"
 $66 = $2; //@line 456 "../../iup_expander.c"
 $67 = ((($66)) + 72|0); //@line 456 "../../iup_expander.c"
 $68 = HEAP32[$67>>2]|0; //@line 456 "../../iup_expander.c"
 $69 = ((($68)) + 32|0); //@line 456 "../../iup_expander.c"
 $70 = HEAP32[$69>>2]|0; //@line 456 "../../iup_expander.c"
 $71 = $4; //@line 456 "../../iup_expander.c"
 _IupSetInt($70,11882,$71); //@line 456 "../../iup_expander.c"
 $72 = $2; //@line 457 "../../iup_expander.c"
 $73 = ((($72)) + 72|0); //@line 457 "../../iup_expander.c"
 $74 = HEAP32[$73>>2]|0; //@line 457 "../../iup_expander.c"
 $75 = ((($74)) + 32|0); //@line 457 "../../iup_expander.c"
 $76 = HEAP32[$75>>2]|0; //@line 457 "../../iup_expander.c"
 $77 = $3; //@line 457 "../../iup_expander.c"
 _iupAttribSet($76,11893,$77); //@line 457 "../../iup_expander.c"
 $78 = $2; //@line 459 "../../iup_expander.c"
 $79 = ((($78)) + 72|0); //@line 459 "../../iup_expander.c"
 $80 = HEAP32[$79>>2]|0; //@line 459 "../../iup_expander.c"
 $81 = ((($80)) + 32|0); //@line 459 "../../iup_expander.c"
 $82 = HEAP32[$81>>2]|0; //@line 459 "../../iup_expander.c"
 $83 = $7; //@line 459 "../../iup_expander.c"
 _IupSetInt($82,17784,$83); //@line 459 "../../iup_expander.c"
 $84 = $2; //@line 460 "../../iup_expander.c"
 $85 = ((($84)) + 72|0); //@line 460 "../../iup_expander.c"
 $86 = HEAP32[$85>>2]|0; //@line 460 "../../iup_expander.c"
 $87 = ((($86)) + 32|0); //@line 460 "../../iup_expander.c"
 $88 = HEAP32[$87>>2]|0; //@line 460 "../../iup_expander.c"
 _IupSetAttribute($88,17780,20441); //@line 460 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 461 "../../iup_expander.c"
}
function _iExpanderAnimateTimer_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = $0;
 $12 = $1; //@line 378 "../../iup_expander.c"
 $13 = (_iupAttribGet($12,11748)|0); //@line 378 "../../iup_expander.c"
 $2 = $13; //@line 378 "../../iup_expander.c"
 $14 = $1; //@line 379 "../../iup_expander.c"
 $15 = (_iupAttribGet($14,11893)|0); //@line 379 "../../iup_expander.c"
 $3 = $15; //@line 379 "../../iup_expander.c"
 $16 = $1; //@line 380 "../../iup_expander.c"
 $17 = (_IupGetInt($16,11851)|0); //@line 380 "../../iup_expander.c"
 $4 = $17; //@line 380 "../../iup_expander.c"
 $18 = $1; //@line 381 "../../iup_expander.c"
 $19 = (_IupGetInt($18,11869)|0); //@line 381 "../../iup_expander.c"
 $5 = $19; //@line 381 "../../iup_expander.c"
 $20 = $1; //@line 382 "../../iup_expander.c"
 $21 = (_IupGetInt($20,11882)|0); //@line 382 "../../iup_expander.c"
 $6 = $21; //@line 382 "../../iup_expander.c"
 $22 = $2; //@line 383 "../../iup_expander.c"
 $23 = (_iupAttribGetInt($22,4133)|0); //@line 383 "../../iup_expander.c"
 $7 = $23; //@line 383 "../../iup_expander.c"
 $24 = $2; //@line 384 "../../iup_expander.c"
 $25 = (_iupAttribGetInt($24,4123)|0); //@line 384 "../../iup_expander.c"
 $8 = $25; //@line 384 "../../iup_expander.c"
 $26 = $1; //@line 385 "../../iup_expander.c"
 $27 = (_iupAttribGetInt($26,11904)|0); //@line 385 "../../iup_expander.c"
 $9 = $27; //@line 385 "../../iup_expander.c"
 $28 = $9; //@line 387 "../../iup_expander.c"
 $29 = $7; //@line 387 "../../iup_expander.c"
 $30 = (($28|0) / ($29|0))&-1; //@line 387 "../../iup_expander.c"
 $11 = $30; //@line 387 "../../iup_expander.c"
 $31 = $5; //@line 389 "../../iup_expander.c"
 $32 = ($31|0)!=(0); //@line 389 "../../iup_expander.c"
 $33 = $4; //@line 390 "../../iup_expander.c"
 if ($32) {
  $34 = $8; //@line 390 "../../iup_expander.c"
  $35 = $11; //@line 390 "../../iup_expander.c"
  $36 = (($34) - ($35))|0; //@line 390 "../../iup_expander.c"
  $37 = Math_imul($33, $36)|0; //@line 390 "../../iup_expander.c"
  $38 = $8; //@line 390 "../../iup_expander.c"
  $39 = (($37|0) / ($38|0))&-1; //@line 390 "../../iup_expander.c"
  $10 = $39; //@line 390 "../../iup_expander.c"
 } else {
  $40 = $11; //@line 392 "../../iup_expander.c"
  $41 = (($40) + 1)|0; //@line 392 "../../iup_expander.c"
  $42 = Math_imul($33, $41)|0; //@line 392 "../../iup_expander.c"
  $43 = $8; //@line 392 "../../iup_expander.c"
  $44 = (($42|0) / ($43|0))&-1; //@line 392 "../../iup_expander.c"
  $10 = $44; //@line 392 "../../iup_expander.c"
 }
 $45 = $3; //@line 394 "../../iup_expander.c"
 $46 = $6; //@line 394 "../../iup_expander.c"
 $47 = $10; //@line 394 "../../iup_expander.c"
 HEAP32[$vararg_buffer>>2] = $46; //@line 394 "../../iup_expander.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 394 "../../iup_expander.c"
 HEAP32[$vararg_ptr1>>2] = $47; //@line 394 "../../iup_expander.c"
 _IupSetfAttribute($45,14239,19992,$vararg_buffer); //@line 394 "../../iup_expander.c"
 $48 = $2; //@line 396 "../../iup_expander.c"
 $49 = ((($48)) + 72|0); //@line 396 "../../iup_expander.c"
 $50 = HEAP32[$49>>2]|0; //@line 396 "../../iup_expander.c"
 $51 = ((($50)) + 24|0); //@line 396 "../../iup_expander.c"
 $52 = HEAP32[$51>>2]|0; //@line 396 "../../iup_expander.c"
 $53 = ($52|0)==(2); //@line 396 "../../iup_expander.c"
 if ($53) {
  $54 = $3; //@line 397 "../../iup_expander.c"
  $55 = $10; //@line 397 "../../iup_expander.c"
  $56 = $4; //@line 397 "../../iup_expander.c"
  $57 = (($55) - ($56))|0; //@line 397 "../../iup_expander.c"
  HEAP32[$vararg_buffer2>>2] = $57; //@line 397 "../../iup_expander.c"
  _IupSetfAttribute($54,17403,11916,$vararg_buffer2); //@line 397 "../../iup_expander.c"
 }
 $58 = $2; //@line 399 "../../iup_expander.c"
 _IupRefresh($58); //@line 399 "../../iup_expander.c"
 $59 = $11; //@line 401 "../../iup_expander.c"
 $60 = $8; //@line 401 "../../iup_expander.c"
 $61 = (($60) - 1)|0; //@line 401 "../../iup_expander.c"
 $62 = ($59|0)==($61|0); //@line 401 "../../iup_expander.c"
 if (!($62)) {
  STACKTOP = sp;return -2; //@line 415 "../../iup_expander.c"
 }
 $63 = $3; //@line 403 "../../iup_expander.c"
 $64 = $3; //@line 403 "../../iup_expander.c"
 $65 = (_iupAttribGet($64,11839)|0); //@line 403 "../../iup_expander.c"
 _iupAttribSetStr($63,14239,$65); //@line 403 "../../iup_expander.c"
 $66 = $5; //@line 405 "../../iup_expander.c"
 $67 = ($66|0)!=(0); //@line 405 "../../iup_expander.c"
 if ($67) {
  $68 = $2; //@line 407 "../../iup_expander.c"
  $69 = ((($68)) + 72|0); //@line 407 "../../iup_expander.c"
  $70 = HEAP32[$69>>2]|0; //@line 407 "../../iup_expander.c"
  $71 = ((($70)) + 4|0); //@line 407 "../../iup_expander.c"
  HEAP32[$71>>2] = 0; //@line 407 "../../iup_expander.c"
  $72 = $3; //@line 408 "../../iup_expander.c"
  _IupSetAttribute($72,20132,20140); //@line 408 "../../iup_expander.c"
  $73 = $2; //@line 409 "../../iup_expander.c"
  _IupRefresh($73); //@line 409 "../../iup_expander.c"
 }
 $74 = $1; //@line 412 "../../iup_expander.c"
 _IupSetAttribute($74,17780,20140); //@line 412 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 415 "../../iup_expander.c"
}
function _iExpanderUpdateTitle($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $7 = $1; //@line 530 "../../iup_expander.c"
 $8 = ((($7)) + 64|0); //@line 530 "../../iup_expander.c"
 $9 = HEAP32[$8>>2]|0; //@line 530 "../../iup_expander.c"
 $10 = ((($9)) + 64|0); //@line 530 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 530 "../../iup_expander.c"
 $2 = $11; //@line 530 "../../iup_expander.c"
 $12 = $2; //@line 531 "../../iup_expander.c"
 $13 = ((($12)) + 64|0); //@line 531 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 531 "../../iup_expander.c"
 $3 = $14; //@line 531 "../../iup_expander.c"
 $15 = $3; //@line 532 "../../iup_expander.c"
 $16 = ((($15)) + 68|0); //@line 532 "../../iup_expander.c"
 $17 = HEAP32[$16>>2]|0; //@line 532 "../../iup_expander.c"
 $4 = $17; //@line 532 "../../iup_expander.c"
 $18 = $1; //@line 533 "../../iup_expander.c"
 $19 = (_iupAttribGet($18,20508)|0); //@line 533 "../../iup_expander.c"
 $5 = $19; //@line 533 "../../iup_expander.c"
 $20 = $1; //@line 534 "../../iup_expander.c"
 $21 = (_iupAttribGet($20,4009)|0); //@line 534 "../../iup_expander.c"
 $6 = $21; //@line 534 "../../iup_expander.c"
 $22 = $5; //@line 535 "../../iup_expander.c"
 $23 = ($22|0)!=(0|0); //@line 535 "../../iup_expander.c"
 $24 = $6; //@line 535 "../../iup_expander.c"
 $25 = ($24|0)!=(0|0); //@line 535 "../../iup_expander.c"
 $or$cond = $23 | $25; //@line 535 "../../iup_expander.c"
 $26 = $1; //@line 537 "../../iup_expander.c"
 $27 = ((($26)) + 16|0); //@line 537 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 537 "../../iup_expander.c"
 $29 = ($28|0)!=(0|0); //@line 537 "../../iup_expander.c"
 if ($or$cond) {
  if (!($29)) {
   $30 = $2; //@line 539 "../../iup_expander.c"
   _IupSetAttribute($30,20666,11933); //@line 539 "../../iup_expander.c"
   $31 = $2; //@line 540 "../../iup_expander.c"
   _IupSetAttribute($31,20659,19938); //@line 540 "../../iup_expander.c"
   $32 = $3; //@line 541 "../../iup_expander.c"
   _IupSetAttribute($32,20073,20140); //@line 541 "../../iup_expander.c"
  }
  $33 = $4; //@line 544 "../../iup_expander.c"
  _IupSetStrAttribute($33,20132,16114); //@line 544 "../../iup_expander.c"
  $34 = $4; //@line 545 "../../iup_expander.c"
  $35 = $5; //@line 545 "../../iup_expander.c"
  _IupSetStrAttribute($34,20508,$35); //@line 545 "../../iup_expander.c"
  $36 = $4; //@line 546 "../../iup_expander.c"
  $37 = $6; //@line 546 "../../iup_expander.c"
  _IupSetStrAttribute($36,20169,$37); //@line 546 "../../iup_expander.c"
 } else {
  if (!($29)) {
   $38 = $2; //@line 552 "../../iup_expander.c"
   _IupSetAttribute($38,20666,11937); //@line 552 "../../iup_expander.c"
   $39 = $2; //@line 553 "../../iup_expander.c"
   _IupSetAttribute($39,20659,19944); //@line 553 "../../iup_expander.c"
   $40 = $3; //@line 554 "../../iup_expander.c"
   _IupSetAttribute($40,20073,19951); //@line 554 "../../iup_expander.c"
  }
  $41 = $4; //@line 557 "../../iup_expander.c"
  _IupSetStrAttribute($41,20132,17810); //@line 557 "../../iup_expander.c"
  $42 = $4; //@line 558 "../../iup_expander.c"
  _IupSetAttribute($42,20508,0); //@line 558 "../../iup_expander.c"
  $43 = $4; //@line 559 "../../iup_expander.c"
  _IupSetAttribute($43,20169,0); //@line 559 "../../iup_expander.c"
 }
 $44 = $1; //@line 562 "../../iup_expander.c"
 _iExpanderUpdateStateImage($44); //@line 562 "../../iup_expander.c"
 $45 = $1; //@line 564 "../../iup_expander.c"
 $46 = ((($45)) + 72|0); //@line 564 "../../iup_expander.c"
 $47 = HEAP32[$46>>2]|0; //@line 564 "../../iup_expander.c"
 $48 = HEAP32[$47>>2]|0; //@line 564 "../../iup_expander.c"
 $49 = ($48|0)==(2); //@line 564 "../../iup_expander.c"
 if (!($49)) {
  STACKTOP = sp;return; //@line 566 "../../iup_expander.c"
 }
 $50 = $1; //@line 565 "../../iup_expander.c"
 _iExpanderUpdateTitleState($50); //@line 565 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 566 "../../iup_expander.c"
}
function _iExpanderGetBarSize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 511 "../../iup_expander.c"
 $5 = ((($4)) + 72|0); //@line 511 "../../iup_expander.c"
 $6 = HEAP32[$5>>2]|0; //@line 511 "../../iup_expander.c"
 $7 = ((($6)) + 8|0); //@line 511 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 511 "../../iup_expander.c"
 $9 = ($8|0)==(-1); //@line 511 "../../iup_expander.c"
 $10 = $1; //@line 513 "../../iup_expander.c"
 if (!($9)) {
  $32 = ((($10)) + 72|0); //@line 523 "../../iup_expander.c"
  $33 = HEAP32[$32>>2]|0; //@line 523 "../../iup_expander.c"
  $34 = ((($33)) + 8|0); //@line 523 "../../iup_expander.c"
  $35 = HEAP32[$34>>2]|0; //@line 523 "../../iup_expander.c"
  $2 = $35; //@line 523 "../../iup_expander.c"
  $36 = $2; //@line 525 "../../iup_expander.c"
  STACKTOP = sp;return ($36|0); //@line 525 "../../iup_expander.c"
 }
 $11 = ((($10)) + 64|0); //@line 513 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 513 "../../iup_expander.c"
 $13 = ((($12)) + 64|0); //@line 513 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 513 "../../iup_expander.c"
 $3 = $14; //@line 513 "../../iup_expander.c"
 $15 = $3; //@line 515 "../../iup_expander.c"
 _iupBaseComputeNaturalSize($15); //@line 515 "../../iup_expander.c"
 $16 = $1; //@line 517 "../../iup_expander.c"
 $17 = ((($16)) + 72|0); //@line 517 "../../iup_expander.c"
 $18 = HEAP32[$17>>2]|0; //@line 517 "../../iup_expander.c"
 $19 = HEAP32[$18>>2]|0; //@line 517 "../../iup_expander.c"
 $20 = ($19|0)==(0); //@line 517 "../../iup_expander.c"
 if (!($20)) {
  $21 = $1; //@line 517 "../../iup_expander.c"
  $22 = ((($21)) + 72|0); //@line 517 "../../iup_expander.c"
  $23 = HEAP32[$22>>2]|0; //@line 517 "../../iup_expander.c"
  $24 = HEAP32[$23>>2]|0; //@line 517 "../../iup_expander.c"
  $25 = ($24|0)==(1); //@line 517 "../../iup_expander.c"
  if (!($25)) {
   $29 = $3; //@line 520 "../../iup_expander.c"
   $30 = ((($29)) + 48|0); //@line 520 "../../iup_expander.c"
   $31 = HEAP32[$30>>2]|0; //@line 520 "../../iup_expander.c"
   $2 = $31; //@line 520 "../../iup_expander.c"
   $36 = $2; //@line 525 "../../iup_expander.c"
   STACKTOP = sp;return ($36|0); //@line 525 "../../iup_expander.c"
  }
 }
 $26 = $3; //@line 518 "../../iup_expander.c"
 $27 = ((($26)) + 44|0); //@line 518 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 518 "../../iup_expander.c"
 $2 = $28; //@line 518 "../../iup_expander.c"
 $36 = $2; //@line 525 "../../iup_expander.c"
 STACKTOP = sp;return ($36|0); //@line 525 "../../iup_expander.c"
}
function _iExpanderUpdateBox($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = $0;
 $6 = $1; //@line 639 "../../iup_expander.c"
 $7 = ((($6)) + 64|0); //@line 639 "../../iup_expander.c"
 $8 = HEAP32[$7>>2]|0; //@line 639 "../../iup_expander.c"
 $2 = $8; //@line 639 "../../iup_expander.c"
 $9 = $2; //@line 642 "../../iup_expander.c"
 $10 = ((($9)) + 64|0); //@line 642 "../../iup_expander.c"
 $11 = HEAP32[$10>>2]|0; //@line 642 "../../iup_expander.c"
 $12 = ($11|0)!=(0|0); //@line 642 "../../iup_expander.c"
 if ($12) {
  $13 = $2; //@line 643 "../../iup_expander.c"
  $14 = ((($13)) + 64|0); //@line 643 "../../iup_expander.c"
  $15 = HEAP32[$14>>2]|0; //@line 643 "../../iup_expander.c"
  _IupDestroy($15); //@line 643 "../../iup_expander.c"
 }
 $16 = (_IupLabel(0)|0); //@line 645 "../../iup_expander.c"
 $4 = $16; //@line 645 "../../iup_expander.c"
 $17 = $4; //@line 646 "../../iup_expander.c"
 _IupSetAttribute($17,20679,12185); //@line 646 "../../iup_expander.c"
 $18 = $4; //@line 647 "../../iup_expander.c"
 (_IupSetCallback($18,20522,187)|0); //@line 647 "../../iup_expander.c"
 $19 = $4; //@line 648 "../../iup_expander.c"
 (_IupSetCallback($19,14303,188)|0); //@line 648 "../../iup_expander.c"
 $20 = $4; //@line 649 "../../iup_expander.c"
 (_IupSetCallback($20,14318,189)|0); //@line 649 "../../iup_expander.c"
 $21 = $1; //@line 651 "../../iup_expander.c"
 $22 = ((($21)) + 72|0); //@line 651 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 651 "../../iup_expander.c"
 $24 = HEAP32[$23>>2]|0; //@line 651 "../../iup_expander.c"
 $25 = ($24|0)==(2); //@line 651 "../../iup_expander.c"
 do {
  if ($25) {
   $26 = (_IupLabel(0)|0); //@line 653 "../../iup_expander.c"
   $5 = $26; //@line 653 "../../iup_expander.c"
   $27 = $5; //@line 654 "../../iup_expander.c"
   _IupSetAttribute($27,20073,19951); //@line 654 "../../iup_expander.c"
   $28 = $5; //@line 655 "../../iup_expander.c"
   (_IupSetCallback($28,20522,190)|0); //@line 655 "../../iup_expander.c"
   $29 = $5; //@line 656 "../../iup_expander.c"
   (_IupSetCallback($29,14303,191)|0); //@line 656 "../../iup_expander.c"
   $30 = $5; //@line 657 "../../iup_expander.c"
   (_IupSetCallback($30,14318,192)|0); //@line 657 "../../iup_expander.c"
   $31 = $4; //@line 659 "../../iup_expander.c"
   $32 = $5; //@line 659 "../../iup_expander.c"
   HEAP32[$vararg_buffer>>2] = $32; //@line 659 "../../iup_expander.c"
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 659 "../../iup_expander.c"
   HEAP32[$vararg_ptr1>>2] = 0; //@line 659 "../../iup_expander.c"
   $33 = (_IupHbox($31,$vararg_buffer)|0); //@line 659 "../../iup_expander.c"
   $3 = $33; //@line 659 "../../iup_expander.c"
  } else {
   $34 = $1; //@line 661 "../../iup_expander.c"
   $35 = ((($34)) + 72|0); //@line 661 "../../iup_expander.c"
   $36 = HEAP32[$35>>2]|0; //@line 661 "../../iup_expander.c"
   $37 = HEAP32[$36>>2]|0; //@line 661 "../../iup_expander.c"
   $38 = ($37|0)==(3); //@line 661 "../../iup_expander.c"
   $39 = $4; //@line 663 "../../iup_expander.c"
   if ($38) {
    HEAP32[$vararg_buffer2>>2] = 0; //@line 663 "../../iup_expander.c"
    $40 = (_IupHbox($39,$vararg_buffer2)|0); //@line 663 "../../iup_expander.c"
    $3 = $40; //@line 663 "../../iup_expander.c"
    $41 = $4; //@line 664 "../../iup_expander.c"
    _IupSetAttribute($41,20073,19951); //@line 664 "../../iup_expander.c"
    break;
   } else {
    HEAP32[$vararg_buffer5>>2] = 0; //@line 668 "../../iup_expander.c"
    $42 = (_IupVbox($39,$vararg_buffer5)|0); //@line 668 "../../iup_expander.c"
    $3 = $42; //@line 668 "../../iup_expander.c"
    $43 = $4; //@line 669 "../../iup_expander.c"
    _IupSetAttribute($43,20073,19983); //@line 669 "../../iup_expander.c"
    break;
   }
  }
 } while(0);
 $44 = $3; //@line 672 "../../iup_expander.c"
 _IupSetAttribute($44,20666,11937); //@line 672 "../../iup_expander.c"
 $45 = $3; //@line 673 "../../iup_expander.c"
 _IupSetAttribute($45,20659,19944); //@line 673 "../../iup_expander.c"
 $46 = $3; //@line 674 "../../iup_expander.c"
 _IupSetAttribute($46,20679,20689); //@line 674 "../../iup_expander.c"
 $47 = $2; //@line 676 "../../iup_expander.c"
 $48 = $3; //@line 676 "../../iup_expander.c"
 (_IupAppend($47,$48)|0); //@line 676 "../../iup_expander.c"
 $49 = $1; //@line 678 "../../iup_expander.c"
 $50 = ((($49)) + 72|0); //@line 678 "../../iup_expander.c"
 $51 = HEAP32[$50>>2]|0; //@line 678 "../../iup_expander.c"
 $52 = HEAP32[$51>>2]|0; //@line 678 "../../iup_expander.c"
 $53 = ($52|0)==(2); //@line 678 "../../iup_expander.c"
 if (!($53)) {
  $55 = $1; //@line 681 "../../iup_expander.c"
  _iExpanderUpdateStateImage($55); //@line 681 "../../iup_expander.c"
  STACKTOP = sp;return; //@line 682 "../../iup_expander.c"
 }
 $54 = $1; //@line 679 "../../iup_expander.c"
 _iExpanderUpdateTitle($54); //@line 679 "../../iup_expander.c"
 $55 = $1; //@line 681 "../../iup_expander.c"
 _iExpanderUpdateStateImage($55); //@line 681 "../../iup_expander.c"
 STACKTOP = sp;return; //@line 682 "../../iup_expander.c"
}
function _iExpanderExpandButtonButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $13 = $7; //@line 805 "../../iup_expander.c"
 $14 = ($13|0)==(49); //@line 805 "../../iup_expander.c"
 $15 = $8; //@line 805 "../../iup_expander.c"
 $16 = ($15|0)!=(0); //@line 805 "../../iup_expander.c"
 $or$cond = $14 & $16; //@line 805 "../../iup_expander.c"
 if (!($or$cond)) {
  STACKTOP = sp;return -2; //@line 822 "../../iup_expander.c"
 }
 $17 = $6; //@line 808 "../../iup_expander.c"
 $18 = (_IupGetParent($17)|0); //@line 808 "../../iup_expander.c"
 $19 = (_IupGetParent($18)|0); //@line 808 "../../iup_expander.c"
 $20 = (_IupGetParent($19)|0); //@line 808 "../../iup_expander.c"
 $12 = $20; //@line 808 "../../iup_expander.c"
 $21 = $12; //@line 810 "../../iup_expander.c"
 $22 = ((($21)) + 72|0); //@line 810 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 810 "../../iup_expander.c"
 $24 = ((($23)) + 16|0); //@line 810 "../../iup_expander.c"
 $25 = HEAP32[$24>>2]|0; //@line 810 "../../iup_expander.c"
 $26 = ($25|0)!=(0); //@line 810 "../../iup_expander.c"
 if ($26) {
  $27 = $12; //@line 812 "../../iup_expander.c"
  $28 = ((($27)) + 72|0); //@line 812 "../../iup_expander.c"
  $29 = HEAP32[$28>>2]|0; //@line 812 "../../iup_expander.c"
  $30 = ((($29)) + 28|0); //@line 812 "../../iup_expander.c"
  $31 = HEAP32[$30>>2]|0; //@line 812 "../../iup_expander.c"
  $32 = (_IupGetInt($31,17780)|0); //@line 812 "../../iup_expander.c"
  $33 = ($32|0)!=(0); //@line 812 "../../iup_expander.c"
  if ($33) {
   $34 = $12; //@line 813 "../../iup_expander.c"
   $35 = ((($34)) + 72|0); //@line 813 "../../iup_expander.c"
   $36 = HEAP32[$35>>2]|0; //@line 813 "../../iup_expander.c"
   $37 = ((($36)) + 28|0); //@line 813 "../../iup_expander.c"
   $38 = HEAP32[$37>>2]|0; //@line 813 "../../iup_expander.c"
   _IupSetAttribute($38,17780,17810); //@line 813 "../../iup_expander.c"
  }
 }
 $39 = $12; //@line 816 "../../iup_expander.c"
 $40 = $12; //@line 816 "../../iup_expander.c"
 $41 = ((($40)) + 72|0); //@line 816 "../../iup_expander.c"
 $42 = HEAP32[$41>>2]|0; //@line 816 "../../iup_expander.c"
 $43 = ((($42)) + 4|0); //@line 816 "../../iup_expander.c"
 $44 = HEAP32[$43>>2]|0; //@line 816 "../../iup_expander.c"
 $45 = ($44|0)==(1); //@line 816 "../../iup_expander.c"
 $46 = $45 ? 0 : 1; //@line 816 "../../iup_expander.c"
 _iExpanderOpenCloseChild($39,1,1,$46); //@line 816 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 822 "../../iup_expander.c"
}
function _iExpanderExpandButtonEnterWindow_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 779 "../../iup_expander.c"
 $6 = (_IupGetParent($5)|0); //@line 779 "../../iup_expander.c"
 $7 = (_IupGetParent($6)|0); //@line 779 "../../iup_expander.c"
 $8 = (_IupGetParent($7)|0); //@line 779 "../../iup_expander.c"
 $2 = $8; //@line 779 "../../iup_expander.c"
 $9 = $1; //@line 781 "../../iup_expander.c"
 $10 = (_iupAttribGet($9,12547)|0); //@line 781 "../../iup_expander.c"
 $11 = ($10|0)!=(0|0); //@line 781 "../../iup_expander.c"
 if ($11) {
  STACKTOP = sp;return -2; //@line 800 "../../iup_expander.c"
 }
 $12 = $2; //@line 783 "../../iup_expander.c"
 $13 = ((($12)) + 64|0); //@line 783 "../../iup_expander.c"
 $14 = HEAP32[$13>>2]|0; //@line 783 "../../iup_expander.c"
 $15 = ((($14)) + 68|0); //@line 783 "../../iup_expander.c"
 $16 = HEAP32[$15>>2]|0; //@line 783 "../../iup_expander.c"
 $3 = $16; //@line 783 "../../iup_expander.c"
 $17 = $1; //@line 785 "../../iup_expander.c"
 _iupAttribSet($17,12547,19938); //@line 785 "../../iup_expander.c"
 $18 = $2; //@line 786 "../../iup_expander.c"
 _iExpanderUpdateStateImage($18); //@line 786 "../../iup_expander.c"
 $19 = $2; //@line 788 "../../iup_expander.c"
 $20 = ((($19)) + 72|0); //@line 788 "../../iup_expander.c"
 $21 = HEAP32[$20>>2]|0; //@line 788 "../../iup_expander.c"
 $22 = ((($21)) + 20|0); //@line 788 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 788 "../../iup_expander.c"
 $24 = ($23|0)!=(0); //@line 788 "../../iup_expander.c"
 if ($24) {
  $25 = $1; //@line 790 "../../iup_expander.c"
  $26 = ((($25)) + 68|0); //@line 790 "../../iup_expander.c"
  $27 = HEAP32[$26>>2]|0; //@line 790 "../../iup_expander.c"
  $4 = $27; //@line 790 "../../iup_expander.c"
  $28 = $4; //@line 791 "../../iup_expander.c"
  _iupAttribSet($28,12547,19938); //@line 791 "../../iup_expander.c"
  $29 = $2; //@line 792 "../../iup_expander.c"
  _iExpanderUpdateTitleState($29); //@line 792 "../../iup_expander.c"
 }
 $30 = $2; //@line 795 "../../iup_expander.c"
 $31 = ((($30)) + 72|0); //@line 795 "../../iup_expander.c"
 $32 = HEAP32[$31>>2]|0; //@line 795 "../../iup_expander.c"
 $33 = ((($32)) + 16|0); //@line 795 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 795 "../../iup_expander.c"
 $35 = ($34|0)!=(0); //@line 795 "../../iup_expander.c"
 $36 = $3; //@line 796 "../../iup_expander.c"
 $37 = ($36|0)!=(0|0); //@line 796 "../../iup_expander.c"
 $or$cond = $35 & $37; //@line 795 "../../iup_expander.c"
 if (!($or$cond)) {
  STACKTOP = sp;return -2; //@line 800 "../../iup_expander.c"
 }
 $38 = $2; //@line 797 "../../iup_expander.c"
 $39 = ((($38)) + 72|0); //@line 797 "../../iup_expander.c"
 $40 = HEAP32[$39>>2]|0; //@line 797 "../../iup_expander.c"
 $41 = ((($40)) + 4|0); //@line 797 "../../iup_expander.c"
 $42 = HEAP32[$41>>2]|0; //@line 797 "../../iup_expander.c"
 $43 = ($42|0)==(0); //@line 797 "../../iup_expander.c"
 if (!($43)) {
  STACKTOP = sp;return -2; //@line 800 "../../iup_expander.c"
 }
 $44 = $2; //@line 798 "../../iup_expander.c"
 $45 = ((($44)) + 72|0); //@line 798 "../../iup_expander.c"
 $46 = HEAP32[$45>>2]|0; //@line 798 "../../iup_expander.c"
 $47 = ((($46)) + 28|0); //@line 798 "../../iup_expander.c"
 $48 = HEAP32[$47>>2]|0; //@line 798 "../../iup_expander.c"
 _IupSetAttribute($48,17780,16114); //@line 798 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 800 "../../iup_expander.c"
}
function _iExpanderExpandButtonLeaveWindow_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 753 "../../iup_expander.c"
 $5 = (_IupGetParent($4)|0); //@line 753 "../../iup_expander.c"
 $6 = (_IupGetParent($5)|0); //@line 753 "../../iup_expander.c"
 $7 = (_IupGetParent($6)|0); //@line 753 "../../iup_expander.c"
 $2 = $7; //@line 753 "../../iup_expander.c"
 $8 = $1; //@line 755 "../../iup_expander.c"
 $9 = (_iupAttribGet($8,12547)|0); //@line 755 "../../iup_expander.c"
 $10 = ($9|0)!=(0|0); //@line 755 "../../iup_expander.c"
 if (!($10)) {
  STACKTOP = sp;return -2; //@line 773 "../../iup_expander.c"
 }
 $11 = $1; //@line 757 "../../iup_expander.c"
 _iupAttribSet($11,12547,0); //@line 757 "../../iup_expander.c"
 $12 = $2; //@line 758 "../../iup_expander.c"
 _iExpanderUpdateStateImage($12); //@line 758 "../../iup_expander.c"
 $13 = $2; //@line 760 "../../iup_expander.c"
 $14 = ((($13)) + 72|0); //@line 760 "../../iup_expander.c"
 $15 = HEAP32[$14>>2]|0; //@line 760 "../../iup_expander.c"
 $16 = ((($15)) + 20|0); //@line 760 "../../iup_expander.c"
 $17 = HEAP32[$16>>2]|0; //@line 760 "../../iup_expander.c"
 $18 = ($17|0)!=(0); //@line 760 "../../iup_expander.c"
 if ($18) {
  $19 = $1; //@line 762 "../../iup_expander.c"
  $20 = ((($19)) + 68|0); //@line 762 "../../iup_expander.c"
  $21 = HEAP32[$20>>2]|0; //@line 762 "../../iup_expander.c"
  $3 = $21; //@line 762 "../../iup_expander.c"
  $22 = $3; //@line 763 "../../iup_expander.c"
  _iupAttribSet($22,12547,0); //@line 763 "../../iup_expander.c"
  $23 = $2; //@line 764 "../../iup_expander.c"
  _iExpanderUpdateTitleState($23); //@line 764 "../../iup_expander.c"
 }
 $24 = $2; //@line 767 "../../iup_expander.c"
 $25 = ((($24)) + 72|0); //@line 767 "../../iup_expander.c"
 $26 = HEAP32[$25>>2]|0; //@line 767 "../../iup_expander.c"
 $27 = ((($26)) + 16|0); //@line 767 "../../iup_expander.c"
 $28 = HEAP32[$27>>2]|0; //@line 767 "../../iup_expander.c"
 $29 = ($28|0)!=(0); //@line 767 "../../iup_expander.c"
 if (!($29)) {
  STACKTOP = sp;return -2; //@line 773 "../../iup_expander.c"
 }
 $30 = $2; //@line 769 "../../iup_expander.c"
 $31 = ((($30)) + 72|0); //@line 769 "../../iup_expander.c"
 $32 = HEAP32[$31>>2]|0; //@line 769 "../../iup_expander.c"
 $33 = ((($32)) + 28|0); //@line 769 "../../iup_expander.c"
 $34 = HEAP32[$33>>2]|0; //@line 769 "../../iup_expander.c"
 $35 = (_IupGetInt($34,17780)|0); //@line 769 "../../iup_expander.c"
 $36 = ($35|0)!=(0); //@line 769 "../../iup_expander.c"
 if (!($36)) {
  STACKTOP = sp;return -2; //@line 773 "../../iup_expander.c"
 }
 $37 = $2; //@line 770 "../../iup_expander.c"
 $38 = ((($37)) + 72|0); //@line 770 "../../iup_expander.c"
 $39 = HEAP32[$38>>2]|0; //@line 770 "../../iup_expander.c"
 $40 = ((($39)) + 28|0); //@line 770 "../../iup_expander.c"
 $41 = HEAP32[$40>>2]|0; //@line 770 "../../iup_expander.c"
 _IupSetAttribute($41,17780,17810); //@line 770 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 773 "../../iup_expander.c"
}
function _iExpanderTitleButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $13 = $7; //@line 861 "../../iup_expander.c"
 $14 = ($13|0)==(49); //@line 861 "../../iup_expander.c"
 $15 = $8; //@line 861 "../../iup_expander.c"
 $16 = ($15|0)!=(0); //@line 861 "../../iup_expander.c"
 $or$cond = $14 & $16; //@line 861 "../../iup_expander.c"
 if (!($or$cond)) {
  STACKTOP = sp;return -2; //@line 875 "../../iup_expander.c"
 }
 $17 = $6; //@line 864 "../../iup_expander.c"
 $18 = (_IupGetParent($17)|0); //@line 864 "../../iup_expander.c"
 $19 = (_IupGetParent($18)|0); //@line 864 "../../iup_expander.c"
 $20 = (_IupGetParent($19)|0); //@line 864 "../../iup_expander.c"
 $12 = $20; //@line 864 "../../iup_expander.c"
 $21 = $12; //@line 866 "../../iup_expander.c"
 $22 = ((($21)) + 72|0); //@line 866 "../../iup_expander.c"
 $23 = HEAP32[$22>>2]|0; //@line 866 "../../iup_expander.c"
 $24 = ((($23)) + 20|0); //@line 866 "../../iup_expander.c"
 $25 = HEAP32[$24>>2]|0; //@line 866 "../../iup_expander.c"
 $26 = ($25|0)!=(0); //@line 866 "../../iup_expander.c"
 if (!($26)) {
  STACKTOP = sp;return -2; //@line 875 "../../iup_expander.c"
 }
 $27 = $12; //@line 868 "../../iup_expander.c"
 $28 = $12; //@line 868 "../../iup_expander.c"
 $29 = ((($28)) + 72|0); //@line 868 "../../iup_expander.c"
 $30 = HEAP32[$29>>2]|0; //@line 868 "../../iup_expander.c"
 $31 = ((($30)) + 4|0); //@line 868 "../../iup_expander.c"
 $32 = HEAP32[$31>>2]|0; //@line 868 "../../iup_expander.c"
 $33 = ($32|0)==(1); //@line 868 "../../iup_expander.c"
 $34 = $33 ? 0 : 1; //@line 868 "../../iup_expander.c"
 _iExpanderOpenCloseChild($27,1,1,$34); //@line 868 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 875 "../../iup_expander.c"
}
function _iExpanderTitleEnterWindow_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 845 "../../iup_expander.c"
 $5 = (_IupGetParent($4)|0); //@line 845 "../../iup_expander.c"
 $6 = (_IupGetParent($5)|0); //@line 845 "../../iup_expander.c"
 $7 = (_IupGetParent($6)|0); //@line 845 "../../iup_expander.c"
 $2 = $7; //@line 845 "../../iup_expander.c"
 $8 = $2; //@line 847 "../../iup_expander.c"
 $9 = ((($8)) + 72|0); //@line 847 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 847 "../../iup_expander.c"
 $11 = ((($10)) + 20|0); //@line 847 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 847 "../../iup_expander.c"
 $13 = ($12|0)!=(0); //@line 847 "../../iup_expander.c"
 if (!($13)) {
  STACKTOP = sp;return -2; //@line 856 "../../iup_expander.c"
 }
 $14 = $1; //@line 847 "../../iup_expander.c"
 $15 = (_iupAttribGet($14,12547)|0); //@line 847 "../../iup_expander.c"
 $16 = ($15|0)!=(0|0); //@line 847 "../../iup_expander.c"
 if ($16) {
  STACKTOP = sp;return -2; //@line 856 "../../iup_expander.c"
 }
 $17 = $1; //@line 849 "../../iup_expander.c"
 $18 = (_IupGetParent($17)|0); //@line 849 "../../iup_expander.c"
 $19 = (_IupGetChild($18,0)|0); //@line 849 "../../iup_expander.c"
 $3 = $19; //@line 849 "../../iup_expander.c"
 $20 = $3; //@line 850 "../../iup_expander.c"
 _iupAttribSet($20,12547,19938); //@line 850 "../../iup_expander.c"
 $21 = $2; //@line 851 "../../iup_expander.c"
 _iExpanderUpdateStateImage($21); //@line 851 "../../iup_expander.c"
 $22 = $1; //@line 853 "../../iup_expander.c"
 _iupAttribSet($22,12547,19938); //@line 853 "../../iup_expander.c"
 $23 = $2; //@line 854 "../../iup_expander.c"
 _iExpanderUpdateTitleState($23); //@line 854 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 856 "../../iup_expander.c"
}
function _iExpanderTitleLeaveWindow_cb($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 828 "../../iup_expander.c"
 $5 = (_IupGetParent($4)|0); //@line 828 "../../iup_expander.c"
 $6 = (_IupGetParent($5)|0); //@line 828 "../../iup_expander.c"
 $7 = (_IupGetParent($6)|0); //@line 828 "../../iup_expander.c"
 $2 = $7; //@line 828 "../../iup_expander.c"
 $8 = $2; //@line 830 "../../iup_expander.c"
 $9 = ((($8)) + 72|0); //@line 830 "../../iup_expander.c"
 $10 = HEAP32[$9>>2]|0; //@line 830 "../../iup_expander.c"
 $11 = ((($10)) + 20|0); //@line 830 "../../iup_expander.c"
 $12 = HEAP32[$11>>2]|0; //@line 830 "../../iup_expander.c"
 $13 = ($12|0)!=(0); //@line 830 "../../iup_expander.c"
 if (!($13)) {
  STACKTOP = sp;return -2; //@line 839 "../../iup_expander.c"
 }
 $14 = $1; //@line 830 "../../iup_expander.c"
 $15 = (_iupAttribGet($14,12547)|0); //@line 830 "../../iup_expander.c"
 $16 = ($15|0)!=(0|0); //@line 830 "../../iup_expander.c"
 if (!($16)) {
  STACKTOP = sp;return -2; //@line 839 "../../iup_expander.c"
 }
 $17 = $1; //@line 832 "../../iup_expander.c"
 $18 = (_IupGetParent($17)|0); //@line 832 "../../iup_expander.c"
 $19 = (_IupGetChild($18,0)|0); //@line 832 "../../iup_expander.c"
 $3 = $19; //@line 832 "../../iup_expander.c"
 $20 = $3; //@line 833 "../../iup_expander.c"
 _iupAttribSet($20,12547,0); //@line 833 "../../iup_expander.c"
 $21 = $2; //@line 834 "../../iup_expander.c"
 _iExpanderUpdateStateImage($21); //@line 834 "../../iup_expander.c"
 $22 = $1; //@line 836 "../../iup_expander.c"
 _iupAttribSet($22,12547,0); //@line 836 "../../iup_expander.c"
 $23 = $2; //@line 837 "../../iup_expander.c"
 _iExpanderUpdateTitleState($23); //@line 837 "../../iup_expander.c"
 STACKTOP = sp;return -2; //@line 839 "../../iup_expander.c"
}
function _iupFileDlgNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(15165)|0); //@line 30 "../../iup_filedlg.c"
 $2 = (_iupClassNew($1)|0); //@line 30 "../../iup_filedlg.c"
 $0 = $2; //@line 30 "../../iup_filedlg.c"
 $3 = $0; //@line 32 "../../iup_filedlg.c"
 HEAP32[$3>>2] = 11947; //@line 32 "../../iup_filedlg.c"
 $4 = $0; //@line 33 "../../iup_filedlg.c"
 $5 = ((($4)) + 8|0); //@line 33 "../../iup_filedlg.c"
 HEAP32[$5>>2] = 3; //@line 33 "../../iup_filedlg.c"
 $6 = $0; //@line 34 "../../iup_filedlg.c"
 $7 = ((($6)) + 16|0); //@line 34 "../../iup_filedlg.c"
 HEAP32[$7>>2] = 1; //@line 34 "../../iup_filedlg.c"
 $8 = $0; //@line 36 "../../iup_filedlg.c"
 _iupClassRegisterCallback($8,11955,14258); //@line 36 "../../iup_filedlg.c"
 $9 = $0; //@line 38 "../../iup_filedlg.c"
 $10 = ((($9)) + 32|0); //@line 38 "../../iup_filedlg.c"
 HEAP32[$10>>2] = 193; //@line 38 "../../iup_filedlg.c"
 $11 = $0; //@line 41 "../../iup_filedlg.c"
 $12 = ((($11)) + 24|0); //@line 41 "../../iup_filedlg.c"
 $13 = HEAP32[$12>>2]|0; //@line 41 "../../iup_filedlg.c"
 $14 = ((($13)) + 72|0); //@line 41 "../../iup_filedlg.c"
 HEAP32[$14>>2] = 0; //@line 41 "../../iup_filedlg.c"
 $15 = $0; //@line 42 "../../iup_filedlg.c"
 $16 = ((($15)) + 24|0); //@line 42 "../../iup_filedlg.c"
 $17 = HEAP32[$16>>2]|0; //@line 42 "../../iup_filedlg.c"
 $18 = ((($17)) + 84|0); //@line 42 "../../iup_filedlg.c"
 HEAP32[$18>>2] = 0; //@line 42 "../../iup_filedlg.c"
 $19 = $0; //@line 43 "../../iup_filedlg.c"
 $20 = ((($19)) + 24|0); //@line 43 "../../iup_filedlg.c"
 $21 = HEAP32[$20>>2]|0; //@line 43 "../../iup_filedlg.c"
 $22 = ((($21)) + 44|0); //@line 43 "../../iup_filedlg.c"
 HEAP32[$22>>2] = 0; //@line 43 "../../iup_filedlg.c"
 $23 = $0; //@line 44 "../../iup_filedlg.c"
 $24 = ((($23)) + 24|0); //@line 44 "../../iup_filedlg.c"
 $25 = HEAP32[$24>>2]|0; //@line 44 "../../iup_filedlg.c"
 $26 = ((($25)) + 48|0); //@line 44 "../../iup_filedlg.c"
 HEAP32[$26>>2] = 0; //@line 44 "../../iup_filedlg.c"
 $27 = $0; //@line 46 "../../iup_filedlg.c"
 _iupdrvFileDlgInitClass($27); //@line 46 "../../iup_filedlg.c"
 $28 = $0; //@line 49 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($28,11963,0,0,(-1),20441,1); //@line 49 "../../iup_filedlg.c"
 $29 = $0; //@line 50 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($29,14765,0,0,(-1),11975,1); //@line 50 "../../iup_filedlg.c"
 $30 = $0; //@line 52 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($30,11980,0,0,0,0,37); //@line 52 "../../iup_filedlg.c"
 $31 = $0; //@line 53 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($31,11990,0,0,0,0,33); //@line 53 "../../iup_filedlg.c"
 $32 = $0; //@line 54 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($32,12003,0,0,0,0,33); //@line 54 "../../iup_filedlg.c"
 $33 = $0; //@line 56 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($33,12017,0,0,0,0,1); //@line 56 "../../iup_filedlg.c"
 $34 = $0; //@line 57 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($34,12026,0,0,0,0,1); //@line 57 "../../iup_filedlg.c"
 $35 = $0; //@line 58 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($35,12036,0,0,0,0,1); //@line 58 "../../iup_filedlg.c"
 $36 = $0; //@line 59 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($36,12041,0,0,0,0,1); //@line 59 "../../iup_filedlg.c"
 $37 = $0; //@line 60 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($37,12048,0,0,0,0,1); //@line 60 "../../iup_filedlg.c"
 $38 = $0; //@line 61 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($38,12066,0,0,0,0,1); //@line 61 "../../iup_filedlg.c"
 $39 = $0; //@line 62 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($39,12077,0,0,0,0,1); //@line 62 "../../iup_filedlg.c"
 $40 = $0; //@line 64 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($40,12089,0,0,0,0,33); //@line 64 "../../iup_filedlg.c"
 $41 = $0; //@line 65 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($41,13014,0,0,0,0,33); //@line 65 "../../iup_filedlg.c"
 $42 = $0; //@line 66 "../../iup_filedlg.c"
 _iupClassRegisterAttribute($42,20104,0,0,0,0,33); //@line 66 "../../iup_filedlg.c"
 $43 = $0; //@line 68 "../../iup_filedlg.c"
 STACKTOP = sp;return ($43|0); //@line 68 "../../iup_filedlg.c"
}
function _iupFillNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 232 "../../iup_fill.c"
 $0 = $1; //@line 232 "../../iup_fill.c"
 $2 = $0; //@line 234 "../../iup_fill.c"
 HEAP32[$2>>2] = 14851; //@line 234 "../../iup_fill.c"
 $3 = $0; //@line 235 "../../iup_fill.c"
 $4 = ((($3)) + 4|0); //@line 235 "../../iup_fill.c"
 HEAP32[$4>>2] = 0; //@line 235 "../../iup_fill.c"
 $5 = $0; //@line 236 "../../iup_fill.c"
 $6 = ((($5)) + 8|0); //@line 236 "../../iup_fill.c"
 HEAP32[$6>>2] = 0; //@line 236 "../../iup_fill.c"
 $7 = $0; //@line 237 "../../iup_fill.c"
 $8 = ((($7)) + 12|0); //@line 237 "../../iup_fill.c"
 HEAP32[$8>>2] = 0; //@line 237 "../../iup_fill.c"
 $9 = $0; //@line 238 "../../iup_fill.c"
 $10 = ((($9)) + 16|0); //@line 238 "../../iup_fill.c"
 HEAP32[$10>>2] = 0; //@line 238 "../../iup_fill.c"
 $11 = $0; //@line 241 "../../iup_fill.c"
 $12 = ((($11)) + 32|0); //@line 241 "../../iup_fill.c"
 HEAP32[$12>>2] = 194; //@line 241 "../../iup_fill.c"
 $13 = $0; //@line 242 "../../iup_fill.c"
 $14 = ((($13)) + 40|0); //@line 242 "../../iup_fill.c"
 HEAP32[$14>>2] = 195; //@line 242 "../../iup_fill.c"
 $15 = $0; //@line 243 "../../iup_fill.c"
 $16 = ((($15)) + 44|0); //@line 243 "../../iup_fill.c"
 HEAP32[$16>>2] = 196; //@line 243 "../../iup_fill.c"
 $17 = $0; //@line 244 "../../iup_fill.c"
 $18 = ((($17)) + 48|0); //@line 244 "../../iup_fill.c"
 HEAP32[$18>>2] = 197; //@line 244 "../../iup_fill.c"
 $19 = $0; //@line 245 "../../iup_fill.c"
 $20 = ((($19)) + 76|0); //@line 245 "../../iup_fill.c"
 HEAP32[$20>>2] = 198; //@line 245 "../../iup_fill.c"
 $21 = $0; //@line 248 "../../iup_fill.c"
 _iupBaseRegisterCommonAttrib($21); //@line 248 "../../iup_fill.c"
 $22 = $0; //@line 251 "../../iup_fill.c"
 _iupClassRegisterAttribute($22,20003,71,199,0,0,521); //@line 251 "../../iup_fill.c"
 $23 = $0; //@line 252 "../../iup_fill.c"
 _iupClassRegisterAttribute($23,20008,73,200,0,0,521); //@line 252 "../../iup_fill.c"
 $24 = $0; //@line 255 "../../iup_fill.c"
 _iupClassRegisterAttribute($24,20073,201,0,0,0,521); //@line 255 "../../iup_fill.c"
 $25 = $0; //@line 257 "../../iup_fill.c"
 STACKTOP = sp;return ($25|0); //@line 257 "../../iup_fill.c"
}
function _iFillCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = (_calloc(1,4)|0); //@line 219 "../../iup_fill.c"
 $5 = $2; //@line 219 "../../iup_fill.c"
 $6 = ((($5)) + 72|0); //@line 219 "../../iup_fill.c"
 HEAP32[$6>>2] = $4; //@line 219 "../../iup_fill.c"
 STACKTOP = sp;return 0; //@line 220 "../../iup_fill.c"
}
function _iFillMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 51 "../../iup_fill.c"
 (_iFillGetDir($2)|0); //@line 51 "../../iup_fill.c"
 $3 = $1; //@line 52 "../../iup_fill.c"
 $4 = (_iupBaseTypeVoidMapMethod($3)|0); //@line 52 "../../iup_fill.c"
 STACKTOP = sp;return ($4|0); //@line 52 "../../iup_fill.c"
}
function _iFillUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 57 "../../iup_fill.c"
 $3 = ((($2)) + 72|0); //@line 57 "../../iup_fill.c"
 $4 = HEAP32[$3>>2]|0; //@line 57 "../../iup_fill.c"
 HEAP32[$4>>2] = 0; //@line 57 "../../iup_fill.c"
 STACKTOP = sp;return; //@line 58 "../../iup_fill.c"
}
function _iFillComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 187 "../../iup_fill.c"
 $9 = ((($8)) + 20|0); //@line 187 "../../iup_fill.c"
 HEAP32[$9>>2] = 0; //@line 187 "../../iup_fill.c"
 $10 = $4; //@line 189 "../../iup_fill.c"
 _iFillUpdateSize($10); //@line 189 "../../iup_fill.c"
 $11 = $4; //@line 193 "../../iup_fill.c"
 $12 = ((($11)) + 36|0); //@line 193 "../../iup_fill.c"
 $13 = HEAP32[$12>>2]|0; //@line 193 "../../iup_fill.c"
 $14 = $4; //@line 193 "../../iup_fill.c"
 $15 = ((($14)) + 44|0); //@line 193 "../../iup_fill.c"
 HEAP32[$15>>2] = $13; //@line 193 "../../iup_fill.c"
 $16 = $4; //@line 194 "../../iup_fill.c"
 $17 = ((($16)) + 40|0); //@line 194 "../../iup_fill.c"
 $18 = HEAP32[$17>>2]|0; //@line 194 "../../iup_fill.c"
 $19 = $4; //@line 194 "../../iup_fill.c"
 $20 = ((($19)) + 48|0); //@line 194 "../../iup_fill.c"
 HEAP32[$20>>2] = $18; //@line 194 "../../iup_fill.c"
 $21 = $4; //@line 196 "../../iup_fill.c"
 $22 = (_iFillGetDir($21)|0); //@line 196 "../../iup_fill.c"
 $23 = ($22|0)==(0); //@line 196 "../../iup_fill.c"
 if ($23) {
  STACKTOP = sp;return; //@line 214 "../../iup_fill.c"
 }
 $24 = $4; //@line 201 "../../iup_fill.c"
 $25 = (_iFillGetDir($24)|0); //@line 201 "../../iup_fill.c"
 $26 = ($25|0)==(1); //@line 201 "../../iup_fill.c"
 $27 = $4; //@line 203 "../../iup_fill.c"
 if ($26) {
  $28 = ((($27)) + 44|0); //@line 203 "../../iup_fill.c"
  $29 = HEAP32[$28>>2]|0; //@line 203 "../../iup_fill.c"
  $30 = ($29|0)<=(0); //@line 203 "../../iup_fill.c"
  if ($30) {
   $31 = $4; //@line 204 "../../iup_fill.c"
   $32 = ((($31)) + 20|0); //@line 204 "../../iup_fill.c"
   HEAP32[$32>>2] = 4; //@line 204 "../../iup_fill.c"
  }
 } else {
  $33 = ((($27)) + 48|0); //@line 208 "../../iup_fill.c"
  $34 = HEAP32[$33>>2]|0; //@line 208 "../../iup_fill.c"
  $35 = ($34|0)<=(0); //@line 208 "../../iup_fill.c"
  if ($35) {
   $36 = $4; //@line 209 "../../iup_fill.c"
   $37 = ((($36)) + 20|0); //@line 209 "../../iup_fill.c"
   HEAP32[$37>>2] = 1; //@line 209 "../../iup_fill.c"
  }
 }
 $38 = $4; //@line 212 "../../iup_fill.c"
 $39 = ((($38)) + 44|0); //@line 212 "../../iup_fill.c"
 $40 = HEAP32[$39>>2]|0; //@line 212 "../../iup_fill.c"
 $41 = $5; //@line 212 "../../iup_fill.c"
 HEAP32[$41>>2] = $40; //@line 212 "../../iup_fill.c"
 $42 = $4; //@line 213 "../../iup_fill.c"
 $43 = ((($42)) + 48|0); //@line 213 "../../iup_fill.c"
 $44 = HEAP32[$43>>2]|0; //@line 213 "../../iup_fill.c"
 $45 = $6; //@line 213 "../../iup_fill.c"
 HEAP32[$45>>2] = $44; //@line 213 "../../iup_fill.c"
 STACKTOP = sp;return; //@line 214 "../../iup_fill.c"
}
function _iFillSetSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0.0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp;
 $3 = $0;
 $4 = $1;
 $9 = $4; //@line 104 "../../iup_fill.c"
 $10 = ($9|0)!=(0|0); //@line 104 "../../iup_fill.c"
 do {
  if ($10) {
   HEAP32[$5>>2] = 0; //@line 111 "../../iup_fill.c"
   HEAP32[$6>>2] = 0; //@line 111 "../../iup_fill.c"
   $15 = $3; //@line 112 "../../iup_fill.c"
   $16 = (_iFillGetDir($15)|0); //@line 112 "../../iup_fill.c"
   $17 = ($16|0)==(0); //@line 112 "../../iup_fill.c"
   $18 = $3; //@line 114 "../../iup_fill.c"
   if ($17) {
    _iupAttribSet($18,20008,0); //@line 114 "../../iup_fill.c"
    $2 = 1; //@line 115 "../../iup_fill.c"
    $53 = $2; //@line 144 "../../iup_fill.c"
    STACKTOP = sp;return ($53|0); //@line 144 "../../iup_fill.c"
   }
   $19 = (_iFillGetDir($18)|0); //@line 118 "../../iup_fill.c"
   $20 = ($19|0)!=(1); //@line 118 "../../iup_fill.c"
   $21 = $4; //@line 119 "../../iup_fill.c"
   (_iupStrToIntInt($21,$5,$6,120)|0); //@line 119 "../../iup_fill.c"
   $22 = HEAP32[$6>>2]|0; //@line 123 "../../iup_fill.c"
   $23 = ($22|0)!=(0); //@line 123 "../../iup_fill.c"
   $or$cond = $20 & $23; //@line 118 "../../iup_fill.c"
   if ($or$cond) {
    $24 = HEAP32[$6>>2]|0; //@line 123 "../../iup_fill.c"
    HEAP32[$5>>2] = $24; //@line 123 "../../iup_fill.c"
   }
   $25 = HEAP32[$5>>2]|0; //@line 126 "../../iup_fill.c"
   $26 = ($25|0)>(0); //@line 126 "../../iup_fill.c"
   if ($26) {
    $27 = $3; //@line 129 "../../iup_fill.c"
    _iupdrvFontGetCharSize($27,$7,$8); //@line 129 "../../iup_fill.c"
    $28 = $3; //@line 130 "../../iup_fill.c"
    $29 = (_iFillGetDir($28)|0); //@line 130 "../../iup_fill.c"
    $30 = ($29|0)==(1); //@line 130 "../../iup_fill.c"
    $31 = HEAP32[$5>>2]|0; //@line 132 "../../iup_fill.c"
    if ($30) {
     $32 = HEAP32[$7>>2]|0; //@line 132 "../../iup_fill.c"
     $33 = Math_imul($31, $32)|0; //@line 132 "../../iup_fill.c"
     $34 = (+($33|0)); //@line 132 "../../iup_fill.c"
     $35 = $34 / 4.0; //@line 132 "../../iup_fill.c"
     $36 = $35 + 0.5; //@line 132 "../../iup_fill.c"
     $37 = (~~(($36))); //@line 132 "../../iup_fill.c"
     $38 = $3; //@line 132 "../../iup_fill.c"
     $39 = ((($38)) + 36|0); //@line 132 "../../iup_fill.c"
     HEAP32[$39>>2] = $37; //@line 132 "../../iup_fill.c"
     $40 = $3; //@line 133 "../../iup_fill.c"
     $41 = ((($40)) + 40|0); //@line 133 "../../iup_fill.c"
     HEAP32[$41>>2] = 0; //@line 133 "../../iup_fill.c"
     break;
    } else {
     $42 = HEAP32[$8>>2]|0; //@line 137 "../../iup_fill.c"
     $43 = Math_imul($31, $42)|0; //@line 137 "../../iup_fill.c"
     $44 = (+($43|0)); //@line 137 "../../iup_fill.c"
     $45 = $44 / 8.0; //@line 137 "../../iup_fill.c"
     $46 = $45 + 0.5; //@line 137 "../../iup_fill.c"
     $47 = (~~(($46))); //@line 137 "../../iup_fill.c"
     $48 = $3; //@line 137 "../../iup_fill.c"
     $49 = ((($48)) + 40|0); //@line 137 "../../iup_fill.c"
     HEAP32[$49>>2] = $47; //@line 137 "../../iup_fill.c"
     $50 = $3; //@line 138 "../../iup_fill.c"
     $51 = ((($50)) + 36|0); //@line 138 "../../iup_fill.c"
     HEAP32[$51>>2] = 0; //@line 138 "../../iup_fill.c"
     break;
    }
   }
  } else {
   $11 = $3; //@line 106 "../../iup_fill.c"
   $12 = ((($11)) + 36|0); //@line 106 "../../iup_fill.c"
   HEAP32[$12>>2] = 0; //@line 106 "../../iup_fill.c"
   $13 = $3; //@line 107 "../../iup_fill.c"
   $14 = ((($13)) + 40|0); //@line 107 "../../iup_fill.c"
   HEAP32[$14>>2] = 0; //@line 107 "../../iup_fill.c"
  }
 } while(0);
 $52 = $3; //@line 142 "../../iup_fill.c"
 _iupAttribSet($52,20008,0); //@line 142 "../../iup_fill.c"
 $2 = 1; //@line 143 "../../iup_fill.c"
 $53 = $2; //@line 144 "../../iup_fill.c"
 STACKTOP = sp;return ($53|0); //@line 144 "../../iup_fill.c"
}
function _iFillSetRasterSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 4|0;
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $7 = $4; //@line 62 "../../iup_fill.c"
 $8 = ($7|0)!=(0|0); //@line 62 "../../iup_fill.c"
 do {
  if ($8) {
   HEAP32[$5>>2] = 0; //@line 69 "../../iup_fill.c"
   HEAP32[$6>>2] = 0; //@line 69 "../../iup_fill.c"
   $13 = $3; //@line 70 "../../iup_fill.c"
   $14 = (_iFillGetDir($13)|0); //@line 70 "../../iup_fill.c"
   $15 = ($14|0)==(0); //@line 70 "../../iup_fill.c"
   $16 = $3; //@line 72 "../../iup_fill.c"
   if ($15) {
    _iupAttribSet($16,20003,0); //@line 72 "../../iup_fill.c"
    $2 = 1; //@line 73 "../../iup_fill.c"
    $37 = $2; //@line 100 "../../iup_fill.c"
    STACKTOP = sp;return ($37|0); //@line 100 "../../iup_fill.c"
   }
   $17 = (_iFillGetDir($16)|0); //@line 76 "../../iup_fill.c"
   $18 = ($17|0)!=(1); //@line 76 "../../iup_fill.c"
   $19 = $4; //@line 77 "../../iup_fill.c"
   (_iupStrToIntInt($19,$5,$6,120)|0); //@line 77 "../../iup_fill.c"
   $20 = HEAP32[$6>>2]|0; //@line 81 "../../iup_fill.c"
   $21 = ($20|0)!=(0); //@line 81 "../../iup_fill.c"
   $or$cond = $18 & $21; //@line 76 "../../iup_fill.c"
   if ($or$cond) {
    $22 = HEAP32[$6>>2]|0; //@line 81 "../../iup_fill.c"
    HEAP32[$5>>2] = $22; //@line 81 "../../iup_fill.c"
   }
   $23 = HEAP32[$5>>2]|0; //@line 84 "../../iup_fill.c"
   $24 = ($23|0)>(0); //@line 84 "../../iup_fill.c"
   if ($24) {
    $25 = $3; //@line 86 "../../iup_fill.c"
    $26 = (_iFillGetDir($25)|0); //@line 86 "../../iup_fill.c"
    $27 = ($26|0)==(1); //@line 86 "../../iup_fill.c"
    $28 = HEAP32[$5>>2]|0; //@line 88 "../../iup_fill.c"
    $29 = $3; //@line 88 "../../iup_fill.c"
    if ($27) {
     $30 = ((($29)) + 36|0); //@line 88 "../../iup_fill.c"
     HEAP32[$30>>2] = $28; //@line 88 "../../iup_fill.c"
     $31 = $3; //@line 89 "../../iup_fill.c"
     $32 = ((($31)) + 40|0); //@line 89 "../../iup_fill.c"
     HEAP32[$32>>2] = 0; //@line 89 "../../iup_fill.c"
     break;
    } else {
     $33 = ((($29)) + 40|0); //@line 93 "../../iup_fill.c"
     HEAP32[$33>>2] = $28; //@line 93 "../../iup_fill.c"
     $34 = $3; //@line 94 "../../iup_fill.c"
     $35 = ((($34)) + 36|0); //@line 94 "../../iup_fill.c"
     HEAP32[$35>>2] = 0; //@line 94 "../../iup_fill.c"
     break;
    }
   }
  } else {
   $9 = $3; //@line 64 "../../iup_fill.c"
   $10 = ((($9)) + 36|0); //@line 64 "../../iup_fill.c"
   HEAP32[$10>>2] = 0; //@line 64 "../../iup_fill.c"
   $11 = $3; //@line 65 "../../iup_fill.c"
   $12 = ((($11)) + 40|0); //@line 65 "../../iup_fill.c"
   HEAP32[$12>>2] = 0; //@line 65 "../../iup_fill.c"
  }
 } while(0);
 $36 = $3; //@line 98 "../../iup_fill.c"
 _iupAttribSet($36,20003,0); //@line 98 "../../iup_fill.c"
 $2 = 0; //@line 99 "../../iup_fill.c"
 $37 = $2; //@line 100 "../../iup_fill.c"
 STACKTOP = sp;return ($37|0); //@line 100 "../../iup_fill.c"
}
function _iFillGetExpandAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 148 "../../iup_fill.c"
 $4 = (_iFillGetDir($3)|0); //@line 148 "../../iup_fill.c"
 $5 = ($4|0)==(0); //@line 148 "../../iup_fill.c"
 do {
  if ($5) {
   $1 = 20140; //@line 149 "../../iup_fill.c"
  } else {
   $6 = $2; //@line 152 "../../iup_fill.c"
   $7 = (_iFillGetDir($6)|0); //@line 152 "../../iup_fill.c"
   $8 = ($7|0)==(1); //@line 152 "../../iup_fill.c"
   $9 = $2; //@line 154 "../../iup_fill.c"
   if ($8) {
    $10 = ((($9)) + 36|0); //@line 154 "../../iup_fill.c"
    $11 = HEAP32[$10>>2]|0; //@line 154 "../../iup_fill.c"
    $12 = ($11|0)<=(0); //@line 154 "../../iup_fill.c"
    if ($12) {
     $1 = 19951; //@line 155 "../../iup_fill.c"
     break;
    }
   } else {
    $13 = ((($9)) + 40|0); //@line 159 "../../iup_fill.c"
    $14 = HEAP32[$13>>2]|0; //@line 159 "../../iup_fill.c"
    $15 = ($14|0)<=(0); //@line 159 "../../iup_fill.c"
    if ($15) {
     $1 = 19983; //@line 160 "../../iup_fill.c"
     break;
    }
   }
   $1 = 20140; //@line 163 "../../iup_fill.c"
  }
 } while(0);
 $16 = $1; //@line 164 "../../iup_fill.c"
 STACKTOP = sp;return ($16|0); //@line 164 "../../iup_fill.c"
}
function _iFillGetDir($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 31 "../../iup_fill.c"
 $4 = ((($3)) + 60|0); //@line 31 "../../iup_fill.c"
 $5 = HEAP32[$4>>2]|0; //@line 31 "../../iup_fill.c"
 $6 = ($5|0)!=(0|0); //@line 31 "../../iup_fill.c"
 if (!($6)) {
  $1 = 0; //@line 32 "../../iup_fill.c"
  $35 = $1; //@line 47 "../../iup_fill.c"
  STACKTOP = sp;return ($35|0); //@line 47 "../../iup_fill.c"
 }
 $7 = $2; //@line 34 "../../iup_fill.c"
 $8 = ((($7)) + 72|0); //@line 34 "../../iup_fill.c"
 $9 = HEAP32[$8>>2]|0; //@line 34 "../../iup_fill.c"
 $10 = HEAP32[$9>>2]|0; //@line 34 "../../iup_fill.c"
 $11 = ($10|0)!=(0); //@line 34 "../../iup_fill.c"
 $12 = $2; //@line 35 "../../iup_fill.c"
 if ($11) {
  $13 = ((($12)) + 72|0); //@line 35 "../../iup_fill.c"
  $14 = HEAP32[$13>>2]|0; //@line 35 "../../iup_fill.c"
  $15 = HEAP32[$14>>2]|0; //@line 35 "../../iup_fill.c"
  $1 = $15; //@line 35 "../../iup_fill.c"
  $35 = $1; //@line 47 "../../iup_fill.c"
  STACKTOP = sp;return ($35|0); //@line 47 "../../iup_fill.c"
 }
 $16 = ((($12)) + 60|0); //@line 38 "../../iup_fill.c"
 $17 = HEAP32[$16>>2]|0; //@line 38 "../../iup_fill.c"
 $18 = ((($17)) + 4|0); //@line 38 "../../iup_fill.c"
 $19 = HEAP32[$18>>2]|0; //@line 38 "../../iup_fill.c"
 $20 = ((($19)) + 8|0); //@line 38 "../../iup_fill.c"
 $21 = HEAP32[$20>>2]|0; //@line 38 "../../iup_fill.c"
 $22 = ($21|0)==(0); //@line 38 "../../iup_fill.c"
 do {
  if ($22) {
   $23 = $2; //@line 40 "../../iup_fill.c"
   $24 = ((($23)) + 60|0); //@line 40 "../../iup_fill.c"
   $25 = HEAP32[$24>>2]|0; //@line 40 "../../iup_fill.c"
   $26 = (_IupClassMatch($25,19998)|0); //@line 40 "../../iup_fill.c"
   $27 = ($26|0)!=(0); //@line 40 "../../iup_fill.c"
   $28 = $2; //@line 41 "../../iup_fill.c"
   $29 = ((($28)) + 72|0); //@line 41 "../../iup_fill.c"
   $30 = HEAP32[$29>>2]|0; //@line 41 "../../iup_fill.c"
   if ($27) {
    HEAP32[$30>>2] = 2; //@line 41 "../../iup_fill.c"
    break;
   } else {
    HEAP32[$30>>2] = 1; //@line 43 "../../iup_fill.c"
    break;
   }
  }
 } while(0);
 $31 = $2; //@line 46 "../../iup_fill.c"
 $32 = ((($31)) + 72|0); //@line 46 "../../iup_fill.c"
 $33 = HEAP32[$32>>2]|0; //@line 46 "../../iup_fill.c"
 $34 = HEAP32[$33>>2]|0; //@line 46 "../../iup_fill.c"
 $1 = $34; //@line 46 "../../iup_fill.c"
 $35 = $1; //@line 47 "../../iup_fill.c"
 STACKTOP = sp;return ($35|0); //@line 47 "../../iup_fill.c"
}
function _iFillUpdateSize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 168 "../../iup_fill.c"
 $4 = (_iupAttribGet($3,20003)|0); //@line 168 "../../iup_fill.c"
 $2 = $4; //@line 168 "../../iup_fill.c"
 $5 = $2; //@line 169 "../../iup_fill.c"
 $6 = ($5|0)!=(0|0); //@line 169 "../../iup_fill.c"
 if ($6) {
  $7 = $1; //@line 171 "../../iup_fill.c"
  $8 = $2; //@line 171 "../../iup_fill.c"
  (_iFillSetSizeAttrib($7,$8)|0); //@line 171 "../../iup_fill.c"
  $9 = $1; //@line 172 "../../iup_fill.c"
  _iupAttribSet($9,20003,0); //@line 172 "../../iup_fill.c"
 }
 $10 = $1; //@line 174 "../../iup_fill.c"
 $11 = (_iupAttribGet($10,20008)|0); //@line 174 "../../iup_fill.c"
 $2 = $11; //@line 174 "../../iup_fill.c"
 $12 = $2; //@line 175 "../../iup_fill.c"
 $13 = ($12|0)!=(0|0); //@line 175 "../../iup_fill.c"
 if (!($13)) {
  STACKTOP = sp;return; //@line 180 "../../iup_fill.c"
 }
 $14 = $1; //@line 177 "../../iup_fill.c"
 $15 = $2; //@line 177 "../../iup_fill.c"
 (_iFillSetRasterSizeAttrib($14,$15)|0); //@line 177 "../../iup_fill.c"
 $16 = $1; //@line 178 "../../iup_fill.c"
 _iupAttribSet($16,20008,0); //@line 178 "../../iup_fill.c"
 STACKTOP = sp;return; //@line 180 "../../iup_fill.c"
}
function _iFlatButtonDrawText($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $16 = sp + 37|0;
 $17 = sp + 36|0;
 $18 = sp + 35|0;
 $19 = sp + 34|0;
 $20 = sp + 33|0;
 $21 = sp + 32|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $15 = $7;
 HEAP8[$16>>0] = 0; //@line 151 "../../iup_flatbutton.c"
 HEAP8[$17>>0] = 0; //@line 151 "../../iup_flatbutton.c"
 HEAP8[$18>>0] = 0; //@line 151 "../../iup_flatbutton.c"
 $22 = $13; //@line 153 "../../iup_flatbutton.c"
 $23 = ($22|0)!=(0|0); //@line 153 "../../iup_flatbutton.c"
 $24 = $12; //@line 153 "../../iup_flatbutton.c"
 $25 = ($24|0)!=(0|0); //@line 153 "../../iup_flatbutton.c"
 $or$cond = $23 & $25; //@line 153 "../../iup_flatbutton.c"
 if (!($or$cond)) {
  STACKTOP = sp;return; //@line 165 "../../iup_flatbutton.c"
 }
 $26 = $12; //@line 153 "../../iup_flatbutton.c"
 $27 = HEAP8[$26>>0]|0; //@line 153 "../../iup_flatbutton.c"
 $28 = $27 << 24 >> 24; //@line 153 "../../iup_flatbutton.c"
 $29 = ($28|0)==(0); //@line 153 "../../iup_flatbutton.c"
 if ($29) {
  STACKTOP = sp;return; //@line 165 "../../iup_flatbutton.c"
 }
 $30 = $13; //@line 156 "../../iup_flatbutton.c"
 (_iupStrToRGB($30,$16,$17,$18)|0); //@line 156 "../../iup_flatbutton.c"
 $31 = $15; //@line 157 "../../iup_flatbutton.c"
 $32 = ($31|0)!=(0); //@line 157 "../../iup_flatbutton.c"
 if (!($32)) {
  HEAP8[$19>>0] = 0; //@line 159 "../../iup_flatbutton.c"
  HEAP8[$20>>0] = 0; //@line 159 "../../iup_flatbutton.c"
  HEAP8[$21>>0] = 0; //@line 159 "../../iup_flatbutton.c"
  $33 = $14; //@line 160 "../../iup_flatbutton.c"
  (_iupStrToRGB($33,$19,$20,$21)|0); //@line 160 "../../iup_flatbutton.c"
  $34 = HEAP8[$19>>0]|0; //@line 161 "../../iup_flatbutton.c"
  $35 = HEAP8[$20>>0]|0; //@line 161 "../../iup_flatbutton.c"
  $36 = HEAP8[$21>>0]|0; //@line 161 "../../iup_flatbutton.c"
  _iupImageColorMakeInactive($16,$17,$18,$34,$35,$36); //@line 161 "../../iup_flatbutton.c"
 }
 $37 = $9; //@line 164 "../../iup_flatbutton.c"
 $38 = $12; //@line 164 "../../iup_flatbutton.c"
 $39 = $12; //@line 164 "../../iup_flatbutton.c"
 $40 = (_strlen($39)|0); //@line 164 "../../iup_flatbutton.c"
 $41 = $10; //@line 164 "../../iup_flatbutton.c"
 $42 = $11; //@line 164 "../../iup_flatbutton.c"
 $43 = HEAP8[$16>>0]|0; //@line 164 "../../iup_flatbutton.c"
 $44 = HEAP8[$17>>0]|0; //@line 164 "../../iup_flatbutton.c"
 $45 = HEAP8[$18>>0]|0; //@line 164 "../../iup_flatbutton.c"
 $46 = $8; //@line 164 "../../iup_flatbutton.c"
 $47 = (_IupGetAttribute($46,12099)|0); //@line 164 "../../iup_flatbutton.c"
 _iupDrawText($37,$38,$40,$41,$42,$43,$44,$45,$47); //@line 164 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 165 "../../iup_flatbutton.c"
}
function _iupFlatButtonNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(15430)|0); //@line 837 "../../iup_flatbutton.c"
 $2 = (_iupClassNew($1)|0); //@line 837 "../../iup_flatbutton.c"
 $0 = $2; //@line 837 "../../iup_flatbutton.c"
 $3 = $0; //@line 839 "../../iup_flatbutton.c"
 HEAP32[$3>>2] = 15387; //@line 839 "../../iup_flatbutton.c"
 $4 = $0; //@line 840 "../../iup_flatbutton.c"
 $5 = ((($4)) + 4|0); //@line 840 "../../iup_flatbutton.c"
 HEAP32[$5>>2] = 19916; //@line 840 "../../iup_flatbutton.c"
 $6 = $0; //@line 841 "../../iup_flatbutton.c"
 $7 = ((($6)) + 8|0); //@line 841 "../../iup_flatbutton.c"
 HEAP32[$7>>2] = 2; //@line 841 "../../iup_flatbutton.c"
 $8 = $0; //@line 842 "../../iup_flatbutton.c"
 $9 = ((($8)) + 12|0); //@line 842 "../../iup_flatbutton.c"
 HEAP32[$9>>2] = 0; //@line 842 "../../iup_flatbutton.c"
 $10 = $0; //@line 843 "../../iup_flatbutton.c"
 $11 = ((($10)) + 16|0); //@line 843 "../../iup_flatbutton.c"
 HEAP32[$11>>2] = 1; //@line 843 "../../iup_flatbutton.c"
 $12 = $0; //@line 846 "../../iup_flatbutton.c"
 $13 = ((($12)) + 32|0); //@line 846 "../../iup_flatbutton.c"
 HEAP32[$13>>2] = 202; //@line 846 "../../iup_flatbutton.c"
 $14 = $0; //@line 847 "../../iup_flatbutton.c"
 $15 = ((($14)) + 40|0); //@line 847 "../../iup_flatbutton.c"
 HEAP32[$15>>2] = 203; //@line 847 "../../iup_flatbutton.c"
 $16 = $0; //@line 848 "../../iup_flatbutton.c"
 $17 = ((($16)) + 76|0); //@line 848 "../../iup_flatbutton.c"
 HEAP32[$17>>2] = 204; //@line 848 "../../iup_flatbutton.c"
 $18 = $0; //@line 849 "../../iup_flatbutton.c"
 $19 = ((($18)) + 44|0); //@line 849 "../../iup_flatbutton.c"
 HEAP32[$19>>2] = 205; //@line 849 "../../iup_flatbutton.c"
 $20 = $0; //@line 852 "../../iup_flatbutton.c"
 _iupClassRegisterCallback($20,12104,362470); //@line 852 "../../iup_flatbutton.c"
 $21 = $0; //@line 853 "../../iup_flatbutton.c"
 _iupClassRegisterCallback($21,12116,18053); //@line 853 "../../iup_flatbutton.c"
 $22 = $0; //@line 854 "../../iup_flatbutton.c"
 _iupClassRegisterCallback($22,12131,17949); //@line 854 "../../iup_flatbutton.c"
 $23 = $0; //@line 855 "../../iup_flatbutton.c"
 _iupClassRegisterCallback($23,12145,17878); //@line 855 "../../iup_flatbutton.c"
 $24 = $0; //@line 856 "../../iup_flatbutton.c"
 _iupClassRegisterCallback($24,12165,362470); //@line 856 "../../iup_flatbutton.c"
 $25 = $0; //@line 857 "../../iup_flatbutton.c"
 _iupClassRegisterCallback($25,19918,362470); //@line 857 "../../iup_flatbutton.c"
 $26 = $0; //@line 860 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($26,12566,93,206,(-1),20441,0); //@line 860 "../../iup_flatbutton.c"
 $27 = $0; //@line 863 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($27,20508,0,0,0,0,3); //@line 863 "../../iup_flatbutton.c"
 $28 = $0; //@line 866 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($28,20104,0,207,0,0,1); //@line 866 "../../iup_flatbutton.c"
 $29 = $0; //@line 867 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($29,17799,208,0,0,0,33); //@line 867 "../../iup_flatbutton.c"
 $30 = $0; //@line 868 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($30,15398,0,0,0,0,1); //@line 868 "../../iup_flatbutton.c"
 $31 = $0; //@line 869 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($31,20679,209,210,12185,0,9); //@line 869 "../../iup_flatbutton.c"
 $32 = $0; //@line 870 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($32,15316,211,212,(-1),15836,8); //@line 870 "../../iup_flatbutton.c"
 $33 = $0; //@line 871 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($33,12201,213,214,(-1),19551,9); //@line 871 "../../iup_flatbutton.c"
 $34 = $0; //@line 873 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($34,12209,0,0,(-1),12221,0); //@line 873 "../../iup_flatbutton.c"
 $35 = $0; //@line 874 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($35,12232,215,216,(-1),19938,0); //@line 874 "../../iup_flatbutton.c"
 $36 = $0; //@line 875 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($36,20610,0,0,20342,0,8); //@line 875 "../../iup_flatbutton.c"
 $37 = $0; //@line 876 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($37,20290,217,218,(-1),20331,512); //@line 876 "../../iup_flatbutton.c"
 $38 = $0; //@line 877 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($38,12244,0,0,(-1),12252,0); //@line 877 "../../iup_flatbutton.c"
 $39 = $0; //@line 878 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($39,12264,0,0,(-1),12272,0); //@line 878 "../../iup_flatbutton.c"
 $40 = $0; //@line 880 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($40,20169,0,0,0,0,2051); //@line 880 "../../iup_flatbutton.c"
 $41 = $0; //@line 881 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($41,12284,0,0,0,0,2051); //@line 881 "../../iup_flatbutton.c"
 $42 = $0; //@line 882 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($42,12295,0,0,0,0,2051); //@line 882 "../../iup_flatbutton.c"
 $43 = $0; //@line 883 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($43,12310,0,0,0,0,2051); //@line 883 "../../iup_flatbutton.c"
 $44 = $0; //@line 885 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($44,12324,219,220,(-1),12338,9); //@line 885 "../../iup_flatbutton.c"
 $45 = $0; //@line 887 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($45,12343,0,0,0,0,2051); //@line 887 "../../iup_flatbutton.c"
 $46 = $0; //@line 888 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($46,12353,0,0,0,0,2051); //@line 888 "../../iup_flatbutton.c"
 $47 = $0; //@line 889 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($47,12368,0,0,0,0,2051); //@line 889 "../../iup_flatbutton.c"
 $48 = $0; //@line 890 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($48,12387,0,0,0,0,2051); //@line 890 "../../iup_flatbutton.c"
 $49 = $0; //@line 892 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($49,12405,0,0,0,0,1); //@line 892 "../../iup_flatbutton.c"
 $50 = $0; //@line 894 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($50,12420,0,0,0,0,2051); //@line 894 "../../iup_flatbutton.c"
 $51 = $0; //@line 895 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($51,12431,0,0,0,0,2051); //@line 895 "../../iup_flatbutton.c"
 $52 = $0; //@line 896 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($52,12447,0,0,0,0,2051); //@line 896 "../../iup_flatbutton.c"
 $53 = $0; //@line 897 "../../iup_flatbutton.c"
 _iupClassRegisterAttribute($53,12467,0,0,0,0,2051); //@line 897 "../../iup_flatbutton.c"
 $54 = $0; //@line 899 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($54|0); //@line 899 "../../iup_flatbutton.c"
}
function _iFlatButtonCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 735 "../../iup_flatbutton.c"
 $5 = ($4|0)!=(0|0); //@line 735 "../../iup_flatbutton.c"
 if ($5) {
  $6 = $3; //@line 735 "../../iup_flatbutton.c"
  $7 = HEAP32[$6>>2]|0; //@line 735 "../../iup_flatbutton.c"
  $8 = ($7|0)!=(0|0); //@line 735 "../../iup_flatbutton.c"
  if ($8) {
   $9 = $2; //@line 737 "../../iup_flatbutton.c"
   $10 = $3; //@line 737 "../../iup_flatbutton.c"
   $11 = HEAP32[$10>>2]|0; //@line 737 "../../iup_flatbutton.c"
   _iupAttribSetStr($9,20508,$11); //@line 737 "../../iup_flatbutton.c"
  }
 }
 $12 = $2; //@line 741 "../../iup_flatbutton.c"
 $13 = ((($12)) + 72|0); //@line 741 "../../iup_flatbutton.c"
 $14 = HEAP32[$13>>2]|0; //@line 741 "../../iup_flatbutton.c"
 _free($14); //@line 741 "../../iup_flatbutton.c"
 $15 = (_calloc(1,40)|0); //@line 742 "../../iup_flatbutton.c"
 $16 = $2; //@line 742 "../../iup_flatbutton.c"
 $17 = ((($16)) + 72|0); //@line 742 "../../iup_flatbutton.c"
 HEAP32[$17>>2] = $15; //@line 742 "../../iup_flatbutton.c"
 $18 = $2; //@line 745 "../../iup_flatbutton.c"
 _iupAttribSet($18,17637,20140); //@line 745 "../../iup_flatbutton.c"
 $19 = $2; //@line 746 "../../iup_flatbutton.c"
 $20 = ((($19)) + 20|0); //@line 746 "../../iup_flatbutton.c"
 HEAP32[$20>>2] = 0; //@line 746 "../../iup_flatbutton.c"
 $21 = $2; //@line 749 "../../iup_flatbutton.c"
 $22 = ((($21)) + 72|0); //@line 749 "../../iup_flatbutton.c"
 $23 = HEAP32[$22>>2]|0; //@line 749 "../../iup_flatbutton.c"
 $24 = ((($23)) + 8|0); //@line 749 "../../iup_flatbutton.c"
 HEAP32[$24>>2] = 2; //@line 749 "../../iup_flatbutton.c"
 $25 = $2; //@line 750 "../../iup_flatbutton.c"
 $26 = ((($25)) + 72|0); //@line 750 "../../iup_flatbutton.c"
 $27 = HEAP32[$26>>2]|0; //@line 750 "../../iup_flatbutton.c"
 $28 = ((($27)) + 24|0); //@line 750 "../../iup_flatbutton.c"
 HEAP32[$28>>2] = 1; //@line 750 "../../iup_flatbutton.c"
 $29 = $2; //@line 751 "../../iup_flatbutton.c"
 $30 = ((($29)) + 72|0); //@line 751 "../../iup_flatbutton.c"
 $31 = HEAP32[$30>>2]|0; //@line 751 "../../iup_flatbutton.c"
 $32 = ((($31)) + 16|0); //@line 751 "../../iup_flatbutton.c"
 HEAP32[$32>>2] = 1; //@line 751 "../../iup_flatbutton.c"
 $33 = $2; //@line 752 "../../iup_flatbutton.c"
 $34 = ((($33)) + 72|0); //@line 752 "../../iup_flatbutton.c"
 $35 = HEAP32[$34>>2]|0; //@line 752 "../../iup_flatbutton.c"
 $36 = ((($35)) + 20|0); //@line 752 "../../iup_flatbutton.c"
 HEAP32[$36>>2] = 1; //@line 752 "../../iup_flatbutton.c"
 $37 = $2; //@line 754 "../../iup_flatbutton.c"
 (_IupSetCallback($37,20479,221)|0); //@line 754 "../../iup_flatbutton.c"
 $38 = $2; //@line 755 "../../iup_flatbutton.c"
 (_IupSetCallback($38,20522,222)|0); //@line 755 "../../iup_flatbutton.c"
 $39 = $2; //@line 756 "../../iup_flatbutton.c"
 (_IupSetCallback($39,16004,223)|0); //@line 756 "../../iup_flatbutton.c"
 $40 = $2; //@line 757 "../../iup_flatbutton.c"
 (_IupSetCallback($40,14318,224)|0); //@line 757 "../../iup_flatbutton.c"
 $41 = $2; //@line 758 "../../iup_flatbutton.c"
 (_IupSetCallback($41,14303,225)|0); //@line 758 "../../iup_flatbutton.c"
 $42 = $2; //@line 759 "../../iup_flatbutton.c"
 (_IupSetCallback($42,12525,226)|0); //@line 759 "../../iup_flatbutton.c"
 $43 = $2; //@line 760 "../../iup_flatbutton.c"
 (_IupSetCallback($43,15816,226)|0); //@line 760 "../../iup_flatbutton.c"
 STACKTOP = sp;return 0; //@line 762 "../../iup_flatbutton.c"
}
function _iFlatButtonComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $12 = sp + 4|0;
 $13 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $14 = $4; //@line 784 "../../iup_flatbutton.c"
 $15 = (_iupAttribGetBoolean($14,12405)|0); //@line 784 "../../iup_flatbutton.c"
 $8 = $15; //@line 784 "../../iup_flatbutton.c"
 $16 = $4; //@line 785 "../../iup_flatbutton.c"
 $17 = (_iupAttribGet($16,12343)|0); //@line 785 "../../iup_flatbutton.c"
 $9 = $17; //@line 785 "../../iup_flatbutton.c"
 $18 = $8; //@line 786 "../../iup_flatbutton.c"
 $19 = ($18|0)!=(0); //@line 786 "../../iup_flatbutton.c"
 $20 = $9; //@line 786 "../../iup_flatbutton.c"
 $21 = ($20|0)!=(0|0); //@line 786 "../../iup_flatbutton.c"
 $or$cond = $19 & $21; //@line 786 "../../iup_flatbutton.c"
 if ($or$cond) {
  $22 = $9; //@line 787 "../../iup_flatbutton.c"
  $23 = $5; //@line 787 "../../iup_flatbutton.c"
  $24 = $6; //@line 787 "../../iup_flatbutton.c"
  _iupImageGetInfo($22,$23,$24,0); //@line 787 "../../iup_flatbutton.c"
  STACKTOP = sp;return; //@line 829 "../../iup_flatbutton.c"
 }
 $25 = $4; //@line 790 "../../iup_flatbutton.c"
 $26 = (_iupAttribGet($25,20169)|0); //@line 790 "../../iup_flatbutton.c"
 $10 = $26; //@line 790 "../../iup_flatbutton.c"
 $27 = $4; //@line 791 "../../iup_flatbutton.c"
 $28 = (_iupAttribGet($27,20508)|0); //@line 791 "../../iup_flatbutton.c"
 $11 = $28; //@line 791 "../../iup_flatbutton.c"
 $29 = $5; //@line 793 "../../iup_flatbutton.c"
 HEAP32[$29>>2] = 0; //@line 793 "../../iup_flatbutton.c"
 $30 = $6; //@line 794 "../../iup_flatbutton.c"
 HEAP32[$30>>2] = 0; //@line 794 "../../iup_flatbutton.c"
 $31 = $10; //@line 796 "../../iup_flatbutton.c"
 $32 = ($31|0)!=(0|0); //@line 796 "../../iup_flatbutton.c"
 do {
  if ($32) {
   $33 = $10; //@line 798 "../../iup_flatbutton.c"
   $34 = $5; //@line 798 "../../iup_flatbutton.c"
   $35 = $6; //@line 798 "../../iup_flatbutton.c"
   _iupImageGetInfo($33,$34,$35,0); //@line 798 "../../iup_flatbutton.c"
   $36 = $11; //@line 800 "../../iup_flatbutton.c"
   $37 = ($36|0)!=(0|0); //@line 800 "../../iup_flatbutton.c"
   if ($37) {
    $38 = $4; //@line 803 "../../iup_flatbutton.c"
    $39 = $11; //@line 803 "../../iup_flatbutton.c"
    _iupdrvFontGetMultiLineStringSize($38,$39,$12,$13); //@line 803 "../../iup_flatbutton.c"
    $40 = $4; //@line 805 "../../iup_flatbutton.c"
    $41 = ((($40)) + 72|0); //@line 805 "../../iup_flatbutton.c"
    $42 = HEAP32[$41>>2]|0; //@line 805 "../../iup_flatbutton.c"
    $43 = ((($42)) + 12|0); //@line 805 "../../iup_flatbutton.c"
    $44 = HEAP32[$43>>2]|0; //@line 805 "../../iup_flatbutton.c"
    $45 = ($44|0)==(1); //@line 805 "../../iup_flatbutton.c"
    if (!($45)) {
     $46 = $4; //@line 806 "../../iup_flatbutton.c"
     $47 = ((($46)) + 72|0); //@line 806 "../../iup_flatbutton.c"
     $48 = HEAP32[$47>>2]|0; //@line 806 "../../iup_flatbutton.c"
     $49 = ((($48)) + 12|0); //@line 806 "../../iup_flatbutton.c"
     $50 = HEAP32[$49>>2]|0; //@line 806 "../../iup_flatbutton.c"
     $51 = ($50|0)==(0); //@line 806 "../../iup_flatbutton.c"
     if (!($51)) {
      $71 = $5; //@line 813 "../../iup_flatbutton.c"
      $72 = HEAP32[$71>>2]|0; //@line 813 "../../iup_flatbutton.c"
      $73 = HEAP32[$12>>2]|0; //@line 813 "../../iup_flatbutton.c"
      $74 = ($72|0)>($73|0); //@line 813 "../../iup_flatbutton.c"
      if ($74) {
       $75 = $5; //@line 813 "../../iup_flatbutton.c"
       $76 = HEAP32[$75>>2]|0; //@line 813 "../../iup_flatbutton.c"
       $79 = $76;
      } else {
       $77 = HEAP32[$12>>2]|0; //@line 813 "../../iup_flatbutton.c"
       $79 = $77;
      }
      $78 = $5; //@line 813 "../../iup_flatbutton.c"
      HEAP32[$78>>2] = $79; //@line 813 "../../iup_flatbutton.c"
      $80 = HEAP32[$13>>2]|0; //@line 814 "../../iup_flatbutton.c"
      $81 = $4; //@line 814 "../../iup_flatbutton.c"
      $82 = ((($81)) + 72|0); //@line 814 "../../iup_flatbutton.c"
      $83 = HEAP32[$82>>2]|0; //@line 814 "../../iup_flatbutton.c"
      $84 = ((($83)) + 8|0); //@line 814 "../../iup_flatbutton.c"
      $85 = HEAP32[$84>>2]|0; //@line 814 "../../iup_flatbutton.c"
      $86 = (($80) + ($85))|0; //@line 814 "../../iup_flatbutton.c"
      $87 = $6; //@line 814 "../../iup_flatbutton.c"
      $88 = HEAP32[$87>>2]|0; //@line 814 "../../iup_flatbutton.c"
      $89 = (($88) + ($86))|0; //@line 814 "../../iup_flatbutton.c"
      HEAP32[$87>>2] = $89; //@line 814 "../../iup_flatbutton.c"
      break;
     }
    }
    $52 = HEAP32[$12>>2]|0; //@line 808 "../../iup_flatbutton.c"
    $53 = $4; //@line 808 "../../iup_flatbutton.c"
    $54 = ((($53)) + 72|0); //@line 808 "../../iup_flatbutton.c"
    $55 = HEAP32[$54>>2]|0; //@line 808 "../../iup_flatbutton.c"
    $56 = ((($55)) + 8|0); //@line 808 "../../iup_flatbutton.c"
    $57 = HEAP32[$56>>2]|0; //@line 808 "../../iup_flatbutton.c"
    $58 = (($52) + ($57))|0; //@line 808 "../../iup_flatbutton.c"
    $59 = $5; //@line 808 "../../iup_flatbutton.c"
    $60 = HEAP32[$59>>2]|0; //@line 808 "../../iup_flatbutton.c"
    $61 = (($60) + ($58))|0; //@line 808 "../../iup_flatbutton.c"
    HEAP32[$59>>2] = $61; //@line 808 "../../iup_flatbutton.c"
    $62 = $6; //@line 809 "../../iup_flatbutton.c"
    $63 = HEAP32[$62>>2]|0; //@line 809 "../../iup_flatbutton.c"
    $64 = HEAP32[$13>>2]|0; //@line 809 "../../iup_flatbutton.c"
    $65 = ($63|0)>($64|0); //@line 809 "../../iup_flatbutton.c"
    if ($65) {
     $66 = $6; //@line 809 "../../iup_flatbutton.c"
     $67 = HEAP32[$66>>2]|0; //@line 809 "../../iup_flatbutton.c"
     $70 = $67;
    } else {
     $68 = HEAP32[$13>>2]|0; //@line 809 "../../iup_flatbutton.c"
     $70 = $68;
    }
    $69 = $6; //@line 809 "../../iup_flatbutton.c"
    HEAP32[$69>>2] = $70; //@line 809 "../../iup_flatbutton.c"
   }
  } else {
   $90 = $11; //@line 818 "../../iup_flatbutton.c"
   $91 = ($90|0)!=(0|0); //@line 818 "../../iup_flatbutton.c"
   if ($91) {
    $92 = $4; //@line 819 "../../iup_flatbutton.c"
    $93 = $11; //@line 819 "../../iup_flatbutton.c"
    $94 = $5; //@line 819 "../../iup_flatbutton.c"
    $95 = $6; //@line 819 "../../iup_flatbutton.c"
    _iupdrvFontGetMultiLineStringSize($92,$93,$94,$95); //@line 819 "../../iup_flatbutton.c"
   }
  }
 } while(0);
 $96 = $4; //@line 821 "../../iup_flatbutton.c"
 $97 = ((($96)) + 72|0); //@line 821 "../../iup_flatbutton.c"
 $98 = HEAP32[$97>>2]|0; //@line 821 "../../iup_flatbutton.c"
 $99 = HEAP32[$98>>2]|0; //@line 821 "../../iup_flatbutton.c"
 $100 = $99<<1; //@line 821 "../../iup_flatbutton.c"
 $101 = $5; //@line 821 "../../iup_flatbutton.c"
 $102 = HEAP32[$101>>2]|0; //@line 821 "../../iup_flatbutton.c"
 $103 = (($102) + ($100))|0; //@line 821 "../../iup_flatbutton.c"
 HEAP32[$101>>2] = $103; //@line 821 "../../iup_flatbutton.c"
 $104 = $4; //@line 822 "../../iup_flatbutton.c"
 $105 = ((($104)) + 72|0); //@line 822 "../../iup_flatbutton.c"
 $106 = HEAP32[$105>>2]|0; //@line 822 "../../iup_flatbutton.c"
 $107 = ((($106)) + 4|0); //@line 822 "../../iup_flatbutton.c"
 $108 = HEAP32[$107>>2]|0; //@line 822 "../../iup_flatbutton.c"
 $109 = $108<<1; //@line 822 "../../iup_flatbutton.c"
 $110 = $6; //@line 822 "../../iup_flatbutton.c"
 $111 = HEAP32[$110>>2]|0; //@line 822 "../../iup_flatbutton.c"
 $112 = (($111) + ($109))|0; //@line 822 "../../iup_flatbutton.c"
 HEAP32[$110>>2] = $112; //@line 822 "../../iup_flatbutton.c"
 $113 = $4; //@line 824 "../../iup_flatbutton.c"
 $114 = ((($113)) + 72|0); //@line 824 "../../iup_flatbutton.c"
 $115 = HEAP32[$114>>2]|0; //@line 824 "../../iup_flatbutton.c"
 $116 = ((($115)) + 24|0); //@line 824 "../../iup_flatbutton.c"
 $117 = HEAP32[$116>>2]|0; //@line 824 "../../iup_flatbutton.c"
 $118 = $117<<1; //@line 824 "../../iup_flatbutton.c"
 $119 = $5; //@line 824 "../../iup_flatbutton.c"
 $120 = HEAP32[$119>>2]|0; //@line 824 "../../iup_flatbutton.c"
 $121 = (($120) + ($118))|0; //@line 824 "../../iup_flatbutton.c"
 HEAP32[$119>>2] = $121; //@line 824 "../../iup_flatbutton.c"
 $122 = $4; //@line 825 "../../iup_flatbutton.c"
 $123 = ((($122)) + 72|0); //@line 825 "../../iup_flatbutton.c"
 $124 = HEAP32[$123>>2]|0; //@line 825 "../../iup_flatbutton.c"
 $125 = ((($124)) + 24|0); //@line 825 "../../iup_flatbutton.c"
 $126 = HEAP32[$125>>2]|0; //@line 825 "../../iup_flatbutton.c"
 $127 = $126<<1; //@line 825 "../../iup_flatbutton.c"
 $128 = $6; //@line 825 "../../iup_flatbutton.c"
 $129 = HEAP32[$128>>2]|0; //@line 825 "../../iup_flatbutton.c"
 $130 = (($129) + ($127))|0; //@line 825 "../../iup_flatbutton.c"
 HEAP32[$128>>2] = $130; //@line 825 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 829 "../../iup_flatbutton.c"
}
function _iFlatButtonMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 767 "../../iup_flatbutton.c"
 $4 = (_iupAttribGetBoolean($3,15398)|0); //@line 767 "../../iup_flatbutton.c"
 $5 = ($4|0)!=(0); //@line 767 "../../iup_flatbutton.c"
 if ($5) {
  $6 = $1; //@line 769 "../../iup_flatbutton.c"
  $7 = (_iupRadioFindToggleParent($6)|0); //@line 769 "../../iup_flatbutton.c"
  $2 = $7; //@line 769 "../../iup_flatbutton.c"
  $8 = $2; //@line 770 "../../iup_flatbutton.c"
  $9 = ($8|0)!=(0|0); //@line 770 "../../iup_flatbutton.c"
  if ($9) {
   $10 = $2; //@line 772 "../../iup_flatbutton.c"
   $11 = (_iupAttribGet($10,12499)|0); //@line 772 "../../iup_flatbutton.c"
   $12 = ($11|0)!=(0|0); //@line 772 "../../iup_flatbutton.c"
   if (!($12)) {
    $13 = $1; //@line 775 "../../iup_flatbutton.c"
    _iupAttribSet($13,20104,16028); //@line 775 "../../iup_flatbutton.c"
   }
  }
 }
 STACKTOP = sp;return 0; //@line 779 "../../iup_flatbutton.c"
}
function _iFlatButtonSetActiveAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 552 "../../iup_flatbutton.c"
 $5 = $3; //@line 552 "../../iup_flatbutton.c"
 (_iupBaseSetActiveAttrib($4,$5)|0); //@line 552 "../../iup_flatbutton.c"
 $6 = $2; //@line 553 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($6); //@line 553 "../../iup_flatbutton.c"
 STACKTOP = sp;return 0; //@line 554 "../../iup_flatbutton.c"
}
function _iFlatButtonSetValueAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $3; //@line 671 "../../iup_flatbutton.c"
 $9 = (_iupAttribGetBoolean($8,15398)|0); //@line 671 "../../iup_flatbutton.c"
 $10 = ($9|0)!=(0); //@line 671 "../../iup_flatbutton.c"
 if (!($10)) {
  $2 = 0; //@line 715 "../../iup_flatbutton.c"
  $52 = $2; //@line 716 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($52|0); //@line 716 "../../iup_flatbutton.c"
 }
 $11 = $3; //@line 673 "../../iup_flatbutton.c"
 $12 = (_iupRadioFindToggleParent($11)|0); //@line 673 "../../iup_flatbutton.c"
 $5 = $12; //@line 673 "../../iup_flatbutton.c"
 $13 = $5; //@line 674 "../../iup_flatbutton.c"
 $14 = ($13|0)!=(0|0); //@line 674 "../../iup_flatbutton.c"
 $15 = $4; //@line 677 "../../iup_flatbutton.c"
 $16 = (_iupStrEqualNoCase($15,15398)|0); //@line 677 "../../iup_flatbutton.c"
 $17 = ($16|0)!=(0); //@line 677 "../../iup_flatbutton.c"
 if ($14) {
  if (!($17)) {
   $18 = $4; //@line 677 "../../iup_flatbutton.c"
   $19 = (_iupStrBoolean($18)|0); //@line 677 "../../iup_flatbutton.c"
   $20 = ($19|0)!=(0); //@line 677 "../../iup_flatbutton.c"
   if (!($20)) {
    $2 = 0; //@line 690 "../../iup_flatbutton.c"
    $52 = $2; //@line 716 "../../iup_flatbutton.c"
    STACKTOP = sp;return ($52|0); //@line 716 "../../iup_flatbutton.c"
   }
  }
  $21 = $5; //@line 679 "../../iup_flatbutton.c"
  $22 = (_iupAttribGet($21,12499)|0); //@line 679 "../../iup_flatbutton.c"
  $6 = $22; //@line 679 "../../iup_flatbutton.c"
  $23 = $6; //@line 680 "../../iup_flatbutton.c"
  $24 = (_iupObjectCheck($23)|0); //@line 680 "../../iup_flatbutton.c"
  $25 = ($24|0)!=(0); //@line 680 "../../iup_flatbutton.c"
  if ($25) {
   $26 = $6; //@line 680 "../../iup_flatbutton.c"
   $27 = $3; //@line 680 "../../iup_flatbutton.c"
   $28 = ($26|0)!=($27|0); //@line 680 "../../iup_flatbutton.c"
   if ($28) {
    $29 = $6; //@line 682 "../../iup_flatbutton.c"
    _iupAttribSet($29,20104,16024); //@line 682 "../../iup_flatbutton.c"
    $30 = $6; //@line 683 "../../iup_flatbutton.c"
    $31 = ((($30)) + 16|0); //@line 683 "../../iup_flatbutton.c"
    $32 = HEAP32[$31>>2]|0; //@line 683 "../../iup_flatbutton.c"
    $33 = ($32|0)!=(0|0); //@line 683 "../../iup_flatbutton.c"
    if ($33) {
     $34 = $6; //@line 684 "../../iup_flatbutton.c"
     _iupdrvRedrawNow($34); //@line 684 "../../iup_flatbutton.c"
    }
   }
  }
  $35 = $5; //@line 687 "../../iup_flatbutton.c"
  $36 = $3; //@line 687 "../../iup_flatbutton.c"
  _iupAttribSet($35,12499,$36); //@line 687 "../../iup_flatbutton.c"
 } else {
  if ($17) {
   $37 = $3; //@line 696 "../../iup_flatbutton.c"
   $38 = (_iupAttribGetBoolean($37,20104)|0); //@line 696 "../../iup_flatbutton.c"
   $7 = $38; //@line 696 "../../iup_flatbutton.c"
   $39 = $7; //@line 697 "../../iup_flatbutton.c"
   $40 = ($39|0)!=(0); //@line 697 "../../iup_flatbutton.c"
   $41 = $3; //@line 698 "../../iup_flatbutton.c"
   if ($40) {
    _iupAttribSet($41,20104,16024); //@line 698 "../../iup_flatbutton.c"
   } else {
    _iupAttribSet($41,20104,16028); //@line 700 "../../iup_flatbutton.c"
   }
   $42 = $3; //@line 702 "../../iup_flatbutton.c"
   $43 = ((($42)) + 16|0); //@line 702 "../../iup_flatbutton.c"
   $44 = HEAP32[$43>>2]|0; //@line 702 "../../iup_flatbutton.c"
   $45 = ($44|0)!=(0|0); //@line 702 "../../iup_flatbutton.c"
   if ($45) {
    $46 = $3; //@line 703 "../../iup_flatbutton.c"
    _iupdrvRedrawNow($46); //@line 703 "../../iup_flatbutton.c"
   }
   $2 = 0; //@line 705 "../../iup_flatbutton.c"
   $52 = $2; //@line 716 "../../iup_flatbutton.c"
   STACKTOP = sp;return ($52|0); //@line 716 "../../iup_flatbutton.c"
  }
 }
 $47 = $3; //@line 709 "../../iup_flatbutton.c"
 $48 = ((($47)) + 16|0); //@line 709 "../../iup_flatbutton.c"
 $49 = HEAP32[$48>>2]|0; //@line 709 "../../iup_flatbutton.c"
 $50 = ($49|0)!=(0|0); //@line 709 "../../iup_flatbutton.c"
 if ($50) {
  $51 = $3; //@line 710 "../../iup_flatbutton.c"
  _iupdrvPostRedraw($51); //@line 710 "../../iup_flatbutton.c"
 }
 $2 = 1; //@line 712 "../../iup_flatbutton.c"
 $52 = $2; //@line 716 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($52|0); //@line 716 "../../iup_flatbutton.c"
}
function _iFlatButtonGetRadioAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 720 "../../iup_flatbutton.c"
 $5 = (_iupAttribGetBoolean($4,15398)|0); //@line 720 "../../iup_flatbutton.c"
 $6 = ($5|0)!=(0); //@line 720 "../../iup_flatbutton.c"
 if ($6) {
  $7 = $2; //@line 722 "../../iup_flatbutton.c"
  $8 = (_iupRadioFindToggleParent($7)|0); //@line 722 "../../iup_flatbutton.c"
  $3 = $8; //@line 722 "../../iup_flatbutton.c"
  $9 = $3; //@line 723 "../../iup_flatbutton.c"
  $10 = ($9|0)!=(0|0); //@line 723 "../../iup_flatbutton.c"
  $11 = $10&1; //@line 723 "../../iup_flatbutton.c"
  $12 = (_iupStrReturnBoolean($11)|0); //@line 723 "../../iup_flatbutton.c"
  $1 = $12; //@line 723 "../../iup_flatbutton.c"
  $13 = $1; //@line 727 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($13|0); //@line 727 "../../iup_flatbutton.c"
 } else {
  $1 = 0; //@line 726 "../../iup_flatbutton.c"
  $13 = $1; //@line 727 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($13|0); //@line 727 "../../iup_flatbutton.c"
 }
 return (0)|0;
}
function _iFlatButtonGetAlignmentAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 $3 = sp + 8|0;
 $1 = $0;
 ;HEAP32[$2>>2]=HEAP32[1012>>2]|0;HEAP32[$2+4>>2]=HEAP32[1012+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[1012+8>>2]|0; //@line 585 "../../iup_flatbutton.c"
 ;HEAP32[$3>>2]=HEAP32[196>>2]|0;HEAP32[$3+4>>2]=HEAP32[196+4>>2]|0;HEAP32[$3+8>>2]=HEAP32[196+8>>2]|0; //@line 586 "../../iup_flatbutton.c"
 $4 = $1; //@line 587 "../../iup_flatbutton.c"
 $5 = ((($4)) + 72|0); //@line 587 "../../iup_flatbutton.c"
 $6 = HEAP32[$5>>2]|0; //@line 587 "../../iup_flatbutton.c"
 $7 = ((($6)) + 16|0); //@line 587 "../../iup_flatbutton.c"
 $8 = HEAP32[$7>>2]|0; //@line 587 "../../iup_flatbutton.c"
 $9 = (($2) + ($8<<2)|0); //@line 587 "../../iup_flatbutton.c"
 $10 = HEAP32[$9>>2]|0; //@line 587 "../../iup_flatbutton.c"
 $11 = $1; //@line 587 "../../iup_flatbutton.c"
 $12 = ((($11)) + 72|0); //@line 587 "../../iup_flatbutton.c"
 $13 = HEAP32[$12>>2]|0; //@line 587 "../../iup_flatbutton.c"
 $14 = ((($13)) + 20|0); //@line 587 "../../iup_flatbutton.c"
 $15 = HEAP32[$14>>2]|0; //@line 587 "../../iup_flatbutton.c"
 $16 = (($3) + ($15<<2)|0); //@line 587 "../../iup_flatbutton.c"
 $17 = HEAP32[$16>>2]|0; //@line 587 "../../iup_flatbutton.c"
 HEAP32[$vararg_buffer>>2] = $10; //@line 587 "../../iup_flatbutton.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 587 "../../iup_flatbutton.c"
 HEAP32[$vararg_ptr1>>2] = $17; //@line 587 "../../iup_flatbutton.c"
 $18 = (_iupStrReturnStrf(12493,$vararg_buffer)|0); //@line 587 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($18|0); //@line 587 "../../iup_flatbutton.c"
}
function _iFlatButtonSetAlignmentAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $4 = sp + 38|0;
 $5 = sp + 8|0;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 561 "../../iup_flatbutton.c"
 (_iupStrToStrStr($6,$4,$5,58)|0); //@line 561 "../../iup_flatbutton.c"
 $7 = (_iupStrEqualNoCase($4,20162)|0); //@line 563 "../../iup_flatbutton.c"
 $8 = ($7|0)!=(0); //@line 563 "../../iup_flatbutton.c"
 do {
  if ($8) {
   $9 = $2; //@line 564 "../../iup_flatbutton.c"
   $10 = ((($9)) + 72|0); //@line 564 "../../iup_flatbutton.c"
   $11 = HEAP32[$10>>2]|0; //@line 564 "../../iup_flatbutton.c"
   $12 = ((($11)) + 16|0); //@line 564 "../../iup_flatbutton.c"
   HEAP32[$12>>2] = 2; //@line 564 "../../iup_flatbutton.c"
  } else {
   $13 = (_iupStrEqualNoCase($4,20156)|0); //@line 565 "../../iup_flatbutton.c"
   $14 = ($13|0)!=(0); //@line 565 "../../iup_flatbutton.c"
   $15 = $2; //@line 566 "../../iup_flatbutton.c"
   $16 = ((($15)) + 72|0); //@line 566 "../../iup_flatbutton.c"
   $17 = HEAP32[$16>>2]|0; //@line 566 "../../iup_flatbutton.c"
   $18 = ((($17)) + 16|0); //@line 566 "../../iup_flatbutton.c"
   if ($14) {
    HEAP32[$18>>2] = 0; //@line 566 "../../iup_flatbutton.c"
    break;
   } else {
    HEAP32[$18>>2] = 1; //@line 568 "../../iup_flatbutton.c"
    break;
   }
  }
 } while(0);
 $19 = (_iupStrEqualNoCase($5,20148)|0); //@line 570 "../../iup_flatbutton.c"
 $20 = ($19|0)!=(0); //@line 570 "../../iup_flatbutton.c"
 do {
  if ($20) {
   $21 = $2; //@line 571 "../../iup_flatbutton.c"
   $22 = ((($21)) + 72|0); //@line 571 "../../iup_flatbutton.c"
   $23 = HEAP32[$22>>2]|0; //@line 571 "../../iup_flatbutton.c"
   $24 = ((($23)) + 20|0); //@line 571 "../../iup_flatbutton.c"
   HEAP32[$24>>2] = 2; //@line 571 "../../iup_flatbutton.c"
  } else {
   $25 = (_iupStrEqualNoCase($5,20143)|0); //@line 572 "../../iup_flatbutton.c"
   $26 = ($25|0)!=(0); //@line 572 "../../iup_flatbutton.c"
   $27 = $2; //@line 573 "../../iup_flatbutton.c"
   $28 = ((($27)) + 72|0); //@line 573 "../../iup_flatbutton.c"
   $29 = HEAP32[$28>>2]|0; //@line 573 "../../iup_flatbutton.c"
   $30 = ((($29)) + 20|0); //@line 573 "../../iup_flatbutton.c"
   if ($26) {
    HEAP32[$30>>2] = 0; //@line 573 "../../iup_flatbutton.c"
    break;
   } else {
    HEAP32[$30>>2] = 1; //@line 575 "../../iup_flatbutton.c"
    break;
   }
  }
 } while(0);
 $31 = $2; //@line 577 "../../iup_flatbutton.c"
 $32 = ((($31)) + 16|0); //@line 577 "../../iup_flatbutton.c"
 $33 = HEAP32[$32>>2]|0; //@line 577 "../../iup_flatbutton.c"
 $34 = ($33|0)!=(0|0); //@line 577 "../../iup_flatbutton.c"
 if (!($34)) {
  STACKTOP = sp;return 1; //@line 580 "../../iup_flatbutton.c"
 }
 $35 = $2; //@line 578 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($35); //@line 578 "../../iup_flatbutton.c"
 STACKTOP = sp;return 1; //@line 580 "../../iup_flatbutton.c"
}
function _iFlatButtonGetPaddingAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 617 "../../iup_flatbutton.c"
 $3 = ((($2)) + 72|0); //@line 617 "../../iup_flatbutton.c"
 $4 = HEAP32[$3>>2]|0; //@line 617 "../../iup_flatbutton.c"
 $5 = HEAP32[$4>>2]|0; //@line 617 "../../iup_flatbutton.c"
 $6 = $1; //@line 617 "../../iup_flatbutton.c"
 $7 = ((($6)) + 72|0); //@line 617 "../../iup_flatbutton.c"
 $8 = HEAP32[$7>>2]|0; //@line 617 "../../iup_flatbutton.c"
 $9 = ((($8)) + 4|0); //@line 617 "../../iup_flatbutton.c"
 $10 = HEAP32[$9>>2]|0; //@line 617 "../../iup_flatbutton.c"
 $11 = (_iupStrReturnIntInt($5,$10,120)|0); //@line 617 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($11|0); //@line 617 "../../iup_flatbutton.c"
}
function _iFlatButtonSetPaddingAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 592 "../../iup_flatbutton.c"
 $5 = $2; //@line 592 "../../iup_flatbutton.c"
 $6 = ((($5)) + 72|0); //@line 592 "../../iup_flatbutton.c"
 $7 = HEAP32[$6>>2]|0; //@line 592 "../../iup_flatbutton.c"
 $8 = $2; //@line 592 "../../iup_flatbutton.c"
 $9 = ((($8)) + 72|0); //@line 592 "../../iup_flatbutton.c"
 $10 = HEAP32[$9>>2]|0; //@line 592 "../../iup_flatbutton.c"
 $11 = ((($10)) + 4|0); //@line 592 "../../iup_flatbutton.c"
 (_iupStrToIntInt($4,$7,$11,120)|0); //@line 592 "../../iup_flatbutton.c"
 $12 = $2; //@line 593 "../../iup_flatbutton.c"
 $13 = ((($12)) + 16|0); //@line 593 "../../iup_flatbutton.c"
 $14 = HEAP32[$13>>2]|0; //@line 593 "../../iup_flatbutton.c"
 $15 = ($14|0)!=(0|0); //@line 593 "../../iup_flatbutton.c"
 if (!($15)) {
  STACKTOP = sp;return 0; //@line 595 "../../iup_flatbutton.c"
 }
 $16 = $2; //@line 594 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($16); //@line 594 "../../iup_flatbutton.c"
 STACKTOP = sp;return 0; //@line 595 "../../iup_flatbutton.c"
}
function _iFlatButtonGetSpacingAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 653 "../../iup_flatbutton.c"
 $3 = ((($2)) + 72|0); //@line 653 "../../iup_flatbutton.c"
 $4 = HEAP32[$3>>2]|0; //@line 653 "../../iup_flatbutton.c"
 $5 = ((($4)) + 8|0); //@line 653 "../../iup_flatbutton.c"
 $6 = HEAP32[$5>>2]|0; //@line 653 "../../iup_flatbutton.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 653 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($7|0); //@line 653 "../../iup_flatbutton.c"
}
function _iFlatButtonSetSpacingAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 645 "../../iup_flatbutton.c"
 $5 = $2; //@line 645 "../../iup_flatbutton.c"
 $6 = ((($5)) + 72|0); //@line 645 "../../iup_flatbutton.c"
 $7 = HEAP32[$6>>2]|0; //@line 645 "../../iup_flatbutton.c"
 $8 = ((($7)) + 8|0); //@line 645 "../../iup_flatbutton.c"
 (_iupStrToInt($4,$8)|0); //@line 645 "../../iup_flatbutton.c"
 $9 = $2; //@line 646 "../../iup_flatbutton.c"
 $10 = ((($9)) + 16|0); //@line 646 "../../iup_flatbutton.c"
 $11 = HEAP32[$10>>2]|0; //@line 646 "../../iup_flatbutton.c"
 $12 = ($11|0)!=(0|0); //@line 646 "../../iup_flatbutton.c"
 if (!($12)) {
  STACKTOP = sp;return 0; //@line 648 "../../iup_flatbutton.c"
 }
 $13 = $2; //@line 647 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($13); //@line 647 "../../iup_flatbutton.c"
 STACKTOP = sp;return 0; //@line 648 "../../iup_flatbutton.c"
}
function _iFlatButtonGetBorderWidthAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 666 "../../iup_flatbutton.c"
 $3 = ((($2)) + 72|0); //@line 666 "../../iup_flatbutton.c"
 $4 = HEAP32[$3>>2]|0; //@line 666 "../../iup_flatbutton.c"
 $5 = ((($4)) + 24|0); //@line 666 "../../iup_flatbutton.c"
 $6 = HEAP32[$5>>2]|0; //@line 666 "../../iup_flatbutton.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 666 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($7|0); //@line 666 "../../iup_flatbutton.c"
}
function _iFlatButtonSetBorderWidthAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 658 "../../iup_flatbutton.c"
 $5 = $2; //@line 658 "../../iup_flatbutton.c"
 $6 = ((($5)) + 72|0); //@line 658 "../../iup_flatbutton.c"
 $7 = HEAP32[$6>>2]|0; //@line 658 "../../iup_flatbutton.c"
 $8 = ((($7)) + 24|0); //@line 658 "../../iup_flatbutton.c"
 (_iupStrToInt($4,$8)|0); //@line 658 "../../iup_flatbutton.c"
 $9 = $2; //@line 659 "../../iup_flatbutton.c"
 $10 = ((($9)) + 16|0); //@line 659 "../../iup_flatbutton.c"
 $11 = HEAP32[$10>>2]|0; //@line 659 "../../iup_flatbutton.c"
 $12 = ($11|0)!=(0|0); //@line 659 "../../iup_flatbutton.c"
 if (!($12)) {
  STACKTOP = sp;return 0; //@line 661 "../../iup_flatbutton.c"
 }
 $13 = $2; //@line 660 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($13); //@line 660 "../../iup_flatbutton.c"
 STACKTOP = sp;return 0; //@line 661 "../../iup_flatbutton.c"
}
function _iFlatButtonGetBgColorAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 608 "../../iup_flatbutton.c"
 $5 = (_iupAttribGet($4,20290)|0); //@line 608 "../../iup_flatbutton.c"
 $3 = $5; //@line 608 "../../iup_flatbutton.c"
 $6 = $3; //@line 609 "../../iup_flatbutton.c"
 $7 = ($6|0)!=(0|0); //@line 609 "../../iup_flatbutton.c"
 if ($7) {
  $10 = $3; //@line 612 "../../iup_flatbutton.c"
  $1 = $10; //@line 612 "../../iup_flatbutton.c"
  $11 = $1; //@line 613 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($11|0); //@line 613 "../../iup_flatbutton.c"
 } else {
  $8 = $2; //@line 610 "../../iup_flatbutton.c"
  $9 = (_iupBaseNativeParentGetBgColorAttrib($8)|0); //@line 610 "../../iup_flatbutton.c"
  $1 = $9; //@line 610 "../../iup_flatbutton.c"
  $11 = $1; //@line 613 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($11|0); //@line 613 "../../iup_flatbutton.c"
 }
 return (0)|0;
}
function _iFlatButtonSetBgColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 600 "../../iup_flatbutton.c"
 $5 = $3; //@line 600 "../../iup_flatbutton.c"
 _iupAttribSet($4,20290,$5); //@line 600 "../../iup_flatbutton.c"
 $6 = $2; //@line 601 "../../iup_flatbutton.c"
 _iupImageUpdateParent($6); //@line 601 "../../iup_flatbutton.c"
 $7 = $2; //@line 602 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($7); //@line 602 "../../iup_flatbutton.c"
 STACKTOP = sp;return 1; //@line 603 "../../iup_flatbutton.c"
}
function _iFlatButtonGetImagePositionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $1 = $0;
 ;HEAP32[$2>>2]=HEAP32[12>>2]|0;HEAP32[$2+4>>2]=HEAP32[12+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[12+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[12+12>>2]|0; //@line 639 "../../iup_flatbutton.c"
 $3 = $1; //@line 640 "../../iup_flatbutton.c"
 $4 = ((($3)) + 72|0); //@line 640 "../../iup_flatbutton.c"
 $5 = HEAP32[$4>>2]|0; //@line 640 "../../iup_flatbutton.c"
 $6 = ((($5)) + 12|0); //@line 640 "../../iup_flatbutton.c"
 $7 = HEAP32[$6>>2]|0; //@line 640 "../../iup_flatbutton.c"
 $8 = (($2) + ($7<<2)|0); //@line 640 "../../iup_flatbutton.c"
 $9 = HEAP32[$8>>2]|0; //@line 640 "../../iup_flatbutton.c"
 $10 = (_iupStrReturnStr($9)|0); //@line 640 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($10|0); //@line 640 "../../iup_flatbutton.c"
}
function _iFlatButtonSetImagePositionAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 622 "../../iup_flatbutton.c"
 $5 = (_iupStrEqualNoCase($4,17659)|0); //@line 622 "../../iup_flatbutton.c"
 $6 = ($5|0)!=(0); //@line 622 "../../iup_flatbutton.c"
 do {
  if ($6) {
   $7 = $2; //@line 623 "../../iup_flatbutton.c"
   $8 = ((($7)) + 72|0); //@line 623 "../../iup_flatbutton.c"
   $9 = HEAP32[$8>>2]|0; //@line 623 "../../iup_flatbutton.c"
   $10 = ((($9)) + 12|0); //@line 623 "../../iup_flatbutton.c"
   HEAP32[$10>>2] = 1; //@line 623 "../../iup_flatbutton.c"
  } else {
   $11 = $3; //@line 624 "../../iup_flatbutton.c"
   $12 = (_iupStrEqualNoCase($11,12486)|0); //@line 624 "../../iup_flatbutton.c"
   $13 = ($12|0)!=(0); //@line 624 "../../iup_flatbutton.c"
   if ($13) {
    $14 = $2; //@line 625 "../../iup_flatbutton.c"
    $15 = ((($14)) + 72|0); //@line 625 "../../iup_flatbutton.c"
    $16 = HEAP32[$15>>2]|0; //@line 625 "../../iup_flatbutton.c"
    $17 = ((($16)) + 12|0); //@line 625 "../../iup_flatbutton.c"
    HEAP32[$17>>2] = 3; //@line 625 "../../iup_flatbutton.c"
    break;
   }
   $18 = $3; //@line 626 "../../iup_flatbutton.c"
   $19 = (_iupStrEqualNoCase($18,16020)|0); //@line 626 "../../iup_flatbutton.c"
   $20 = ($19|0)!=(0); //@line 626 "../../iup_flatbutton.c"
   $21 = $2; //@line 627 "../../iup_flatbutton.c"
   $22 = ((($21)) + 72|0); //@line 627 "../../iup_flatbutton.c"
   $23 = HEAP32[$22>>2]|0; //@line 627 "../../iup_flatbutton.c"
   $24 = ((($23)) + 12|0); //@line 627 "../../iup_flatbutton.c"
   if ($20) {
    HEAP32[$24>>2] = 2; //@line 627 "../../iup_flatbutton.c"
    break;
   } else {
    HEAP32[$24>>2] = 0; //@line 629 "../../iup_flatbutton.c"
    break;
   }
  }
 } while(0);
 $25 = $2; //@line 631 "../../iup_flatbutton.c"
 $26 = ((($25)) + 16|0); //@line 631 "../../iup_flatbutton.c"
 $27 = HEAP32[$26>>2]|0; //@line 631 "../../iup_flatbutton.c"
 $28 = ($27|0)!=(0|0); //@line 631 "../../iup_flatbutton.c"
 if (!($28)) {
  STACKTOP = sp;return 0; //@line 634 "../../iup_flatbutton.c"
 }
 $29 = $2; //@line 632 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($29); //@line 632 "../../iup_flatbutton.c"
 STACKTOP = sp;return 0; //@line 634 "../../iup_flatbutton.c"
}
function _iFlatButtonRedraw_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $1 = $0;
 $18 = $1; //@line 309 "../../iup_flatbutton.c"
 $19 = (_iupAttribGet($18,20169)|0); //@line 309 "../../iup_flatbutton.c"
 $2 = $19; //@line 309 "../../iup_flatbutton.c"
 $20 = $1; //@line 310 "../../iup_flatbutton.c"
 $21 = (_iupAttribGet($20,20508)|0); //@line 310 "../../iup_flatbutton.c"
 $3 = $21; //@line 310 "../../iup_flatbutton.c"
 $22 = $1; //@line 311 "../../iup_flatbutton.c"
 $23 = (_IupGetInt($22,12566)|0); //@line 311 "../../iup_flatbutton.c"
 $4 = $23; //@line 311 "../../iup_flatbutton.c"
 $24 = $1; //@line 312 "../../iup_flatbutton.c"
 $25 = (_iupAttribGetInt($24,20104)|0); //@line 312 "../../iup_flatbutton.c"
 $5 = $25; //@line 312 "../../iup_flatbutton.c"
 $26 = $1; //@line 313 "../../iup_flatbutton.c"
 $27 = (_iupAttribGetStr($26,20610)|0); //@line 313 "../../iup_flatbutton.c"
 $6 = $27; //@line 313 "../../iup_flatbutton.c"
 $28 = $1; //@line 314 "../../iup_flatbutton.c"
 $29 = (_iupAttribGetStr($28,20290)|0); //@line 314 "../../iup_flatbutton.c"
 $7 = $29; //@line 314 "../../iup_flatbutton.c"
 $30 = $1; //@line 315 "../../iup_flatbutton.c"
 $31 = (_iupAttribGet($30,12343)|0); //@line 315 "../../iup_flatbutton.c"
 $8 = $31; //@line 315 "../../iup_flatbutton.c"
 $32 = $1; //@line 316 "../../iup_flatbutton.c"
 $33 = (_iupAttribGet($32,12420)|0); //@line 316 "../../iup_flatbutton.c"
 $9 = $33; //@line 316 "../../iup_flatbutton.c"
 $34 = $1; //@line 317 "../../iup_flatbutton.c"
 $35 = ((($34)) + 72|0); //@line 317 "../../iup_flatbutton.c"
 $36 = HEAP32[$35>>2]|0; //@line 317 "../../iup_flatbutton.c"
 $37 = ((($36)) + 24|0); //@line 317 "../../iup_flatbutton.c"
 $38 = HEAP32[$37>>2]|0; //@line 317 "../../iup_flatbutton.c"
 $10 = $38; //@line 317 "../../iup_flatbutton.c"
 $11 = 0; //@line 318 "../../iup_flatbutton.c"
 $39 = $1; //@line 319 "../../iup_flatbutton.c"
 $40 = ((($39)) + 72|0); //@line 319 "../../iup_flatbutton.c"
 $41 = HEAP32[$40>>2]|0; //@line 319 "../../iup_flatbutton.c"
 $42 = ((($41)) + 36|0); //@line 319 "../../iup_flatbutton.c"
 $43 = HEAP32[$42>>2]|0; //@line 319 "../../iup_flatbutton.c"
 $12 = $43; //@line 319 "../../iup_flatbutton.c"
 $44 = $1; //@line 320 "../../iup_flatbutton.c"
 $45 = (_iupDrawCreateCanvas($44)|0); //@line 320 "../../iup_flatbutton.c"
 $13 = $45; //@line 320 "../../iup_flatbutton.c"
 $46 = $13; //@line 322 "../../iup_flatbutton.c"
 _iupDrawParentBackground($46); //@line 322 "../../iup_flatbutton.c"
 $47 = $7; //@line 324 "../../iup_flatbutton.c"
 $48 = ($47|0)!=(0|0); //@line 324 "../../iup_flatbutton.c"
 if (!($48)) {
  $49 = $1; //@line 325 "../../iup_flatbutton.c"
  $50 = (_iupBaseNativeParentGetBgColorAttrib($49)|0); //@line 325 "../../iup_flatbutton.c"
  $7 = $50; //@line 325 "../../iup_flatbutton.c"
 }
 $51 = $1; //@line 327 "../../iup_flatbutton.c"
 $52 = ((($51)) + 72|0); //@line 327 "../../iup_flatbutton.c"
 $53 = HEAP32[$52>>2]|0; //@line 327 "../../iup_flatbutton.c"
 $54 = ((($53)) + 36|0); //@line 327 "../../iup_flatbutton.c"
 $55 = HEAP32[$54>>2]|0; //@line 327 "../../iup_flatbutton.c"
 $56 = ($55|0)!=(0); //@line 327 "../../iup_flatbutton.c"
 $57 = $5; //@line 327 "../../iup_flatbutton.c"
 $58 = ($57|0)!=(0); //@line 327 "../../iup_flatbutton.c"
 $or$cond = $56 | $58; //@line 327 "../../iup_flatbutton.c"
 $59 = $1; //@line 329 "../../iup_flatbutton.c"
 if ($or$cond) {
  $60 = (_iupAttribGetStr($59,12264)|0); //@line 329 "../../iup_flatbutton.c"
  $14 = $60; //@line 329 "../../iup_flatbutton.c"
  $61 = $14; //@line 330 "../../iup_flatbutton.c"
  $62 = ($61|0)!=(0|0); //@line 330 "../../iup_flatbutton.c"
  if ($62) {
   $63 = $14; //@line 331 "../../iup_flatbutton.c"
   $7 = $63; //@line 331 "../../iup_flatbutton.c"
  }
  $11 = 1; //@line 333 "../../iup_flatbutton.c"
  $64 = $1; //@line 335 "../../iup_flatbutton.c"
  $65 = ((($64)) + 72|0); //@line 335 "../../iup_flatbutton.c"
  $66 = HEAP32[$65>>2]|0; //@line 335 "../../iup_flatbutton.c"
  $67 = ((($66)) + 36|0); //@line 335 "../../iup_flatbutton.c"
  $68 = HEAP32[$67>>2]|0; //@line 335 "../../iup_flatbutton.c"
  $69 = ($68|0)!=(0); //@line 335 "../../iup_flatbutton.c"
  if (!($69)) {
   $70 = $8; //@line 335 "../../iup_flatbutton.c"
   $71 = ($70|0)!=(0|0); //@line 335 "../../iup_flatbutton.c"
   $72 = $2; //@line 335 "../../iup_flatbutton.c"
   $73 = ($72|0)!=(0|0); //@line 335 "../../iup_flatbutton.c"
   $or$cond3 = $71 | $73; //@line 335 "../../iup_flatbutton.c"
   if ($or$cond3) {
    $74 = $1; //@line 336 "../../iup_flatbutton.c"
    $75 = ((($74)) + 72|0); //@line 336 "../../iup_flatbutton.c"
    $76 = HEAP32[$75>>2]|0; //@line 336 "../../iup_flatbutton.c"
    $77 = ((($76)) + 36|0); //@line 336 "../../iup_flatbutton.c"
    HEAP32[$77>>2] = 1; //@line 336 "../../iup_flatbutton.c"
   }
  }
 } else {
  $78 = ((($59)) + 72|0); //@line 338 "../../iup_flatbutton.c"
  $79 = HEAP32[$78>>2]|0; //@line 338 "../../iup_flatbutton.c"
  $80 = ((($79)) + 32|0); //@line 338 "../../iup_flatbutton.c"
  $81 = HEAP32[$80>>2]|0; //@line 338 "../../iup_flatbutton.c"
  $82 = ($81|0)!=(0); //@line 338 "../../iup_flatbutton.c"
  if ($82) {
   $83 = $1; //@line 340 "../../iup_flatbutton.c"
   $84 = (_iupAttribGetStr($83,12244)|0); //@line 340 "../../iup_flatbutton.c"
   $15 = $84; //@line 340 "../../iup_flatbutton.c"
   $85 = $15; //@line 341 "../../iup_flatbutton.c"
   $86 = ($85|0)!=(0|0); //@line 341 "../../iup_flatbutton.c"
   if ($86) {
    $87 = $15; //@line 342 "../../iup_flatbutton.c"
    $7 = $87; //@line 342 "../../iup_flatbutton.c"
   }
   $11 = 1; //@line 344 "../../iup_flatbutton.c"
  }
 }
 $88 = $11; //@line 348 "../../iup_flatbutton.c"
 $89 = ($88|0)!=(0); //@line 348 "../../iup_flatbutton.c"
 if ($89) {
  $90 = $1; //@line 350 "../../iup_flatbutton.c"
  $91 = (_iupAttribGetStr($90,12209)|0); //@line 350 "../../iup_flatbutton.c"
  $16 = $91; //@line 350 "../../iup_flatbutton.c"
  $92 = $13; //@line 351 "../../iup_flatbutton.c"
  $93 = $1; //@line 351 "../../iup_flatbutton.c"
  $94 = ((($93)) + 52|0); //@line 351 "../../iup_flatbutton.c"
  $95 = HEAP32[$94>>2]|0; //@line 351 "../../iup_flatbutton.c"
  $96 = (($95) - 1)|0; //@line 351 "../../iup_flatbutton.c"
  $97 = $1; //@line 352 "../../iup_flatbutton.c"
  $98 = ((($97)) + 56|0); //@line 352 "../../iup_flatbutton.c"
  $99 = HEAP32[$98>>2]|0; //@line 352 "../../iup_flatbutton.c"
  $100 = (($99) - 1)|0; //@line 352 "../../iup_flatbutton.c"
  $101 = $10; //@line 353 "../../iup_flatbutton.c"
  $102 = $16; //@line 353 "../../iup_flatbutton.c"
  $103 = $7; //@line 353 "../../iup_flatbutton.c"
  $104 = $4; //@line 353 "../../iup_flatbutton.c"
  _iFlatButtonDrawBorder($92,0,$96,0,$100,$101,$102,$103,$104); //@line 351 "../../iup_flatbutton.c"
 }
 $105 = $8; //@line 357 "../../iup_flatbutton.c"
 $106 = ($105|0)!=(0|0); //@line 357 "../../iup_flatbutton.c"
 if ($106) {
  $107 = $1; //@line 358 "../../iup_flatbutton.c"
  $108 = $13; //@line 358 "../../iup_flatbutton.c"
  $109 = $10; //@line 358 "../../iup_flatbutton.c"
  $110 = $10; //@line 358 "../../iup_flatbutton.c"
  $111 = $8; //@line 358 "../../iup_flatbutton.c"
  $112 = $4; //@line 358 "../../iup_flatbutton.c"
  _iFlatButtonDrawImage($107,$108,$109,$110,12343,$111,$112); //@line 358 "../../iup_flatbutton.c"
 } else {
  $113 = $13; //@line 360 "../../iup_flatbutton.c"
  $114 = $10; //@line 360 "../../iup_flatbutton.c"
  $115 = $1; //@line 360 "../../iup_flatbutton.c"
  $116 = ((($115)) + 52|0); //@line 360 "../../iup_flatbutton.c"
  $117 = HEAP32[$116>>2]|0; //@line 360 "../../iup_flatbutton.c"
  $118 = (($117) - 1)|0; //@line 360 "../../iup_flatbutton.c"
  $119 = $10; //@line 360 "../../iup_flatbutton.c"
  $120 = (($118) - ($119))|0; //@line 360 "../../iup_flatbutton.c"
  $121 = $10; //@line 361 "../../iup_flatbutton.c"
  $122 = $1; //@line 361 "../../iup_flatbutton.c"
  $123 = ((($122)) + 56|0); //@line 361 "../../iup_flatbutton.c"
  $124 = HEAP32[$123>>2]|0; //@line 361 "../../iup_flatbutton.c"
  $125 = (($124) - 1)|0; //@line 361 "../../iup_flatbutton.c"
  $126 = $10; //@line 361 "../../iup_flatbutton.c"
  $127 = (($125) - ($126))|0; //@line 361 "../../iup_flatbutton.c"
  $128 = $7; //@line 362 "../../iup_flatbutton.c"
  _iFlatButtonDrawBox($113,$114,$120,$121,$127,$128,0,1); //@line 360 "../../iup_flatbutton.c"
 }
 $129 = $1; //@line 364 "../../iup_flatbutton.c"
 $130 = $13; //@line 364 "../../iup_flatbutton.c"
 $131 = $10; //@line 364 "../../iup_flatbutton.c"
 $132 = $10; //@line 364 "../../iup_flatbutton.c"
 $133 = $1; //@line 365 "../../iup_flatbutton.c"
 $134 = ((($133)) + 52|0); //@line 365 "../../iup_flatbutton.c"
 $135 = HEAP32[$134>>2]|0; //@line 365 "../../iup_flatbutton.c"
 $136 = $10; //@line 365 "../../iup_flatbutton.c"
 $137 = $136<<1; //@line 365 "../../iup_flatbutton.c"
 $138 = (($135) - ($137))|0; //@line 365 "../../iup_flatbutton.c"
 $139 = $1; //@line 365 "../../iup_flatbutton.c"
 $140 = ((($139)) + 56|0); //@line 365 "../../iup_flatbutton.c"
 $141 = HEAP32[$140>>2]|0; //@line 365 "../../iup_flatbutton.c"
 $142 = $10; //@line 365 "../../iup_flatbutton.c"
 $143 = $142<<1; //@line 365 "../../iup_flatbutton.c"
 $144 = (($141) - ($143))|0; //@line 365 "../../iup_flatbutton.c"
 $145 = $2; //@line 366 "../../iup_flatbutton.c"
 $146 = $3; //@line 366 "../../iup_flatbutton.c"
 $147 = $6; //@line 366 "../../iup_flatbutton.c"
 $148 = $7; //@line 366 "../../iup_flatbutton.c"
 $149 = $4; //@line 366 "../../iup_flatbutton.c"
 _iFlatButtonDrawIcon($129,$130,$131,$132,$138,$144,20169,$145,$146,$147,$148,$149); //@line 364 "../../iup_flatbutton.c"
 $150 = $9; //@line 368 "../../iup_flatbutton.c"
 $151 = ($150|0)!=(0|0); //@line 368 "../../iup_flatbutton.c"
 if ($151) {
  $152 = $1; //@line 369 "../../iup_flatbutton.c"
  $153 = $13; //@line 369 "../../iup_flatbutton.c"
  $154 = $10; //@line 369 "../../iup_flatbutton.c"
  $155 = $10; //@line 369 "../../iup_flatbutton.c"
  $156 = $9; //@line 369 "../../iup_flatbutton.c"
  $157 = $4; //@line 369 "../../iup_flatbutton.c"
  _iFlatButtonDrawImage($152,$153,$154,$155,12420,$156,$157); //@line 369 "../../iup_flatbutton.c"
 } else {
  $158 = $2; //@line 370 "../../iup_flatbutton.c"
  $159 = ($158|0)!=(0|0); //@line 370 "../../iup_flatbutton.c"
  $160 = $3; //@line 370 "../../iup_flatbutton.c"
  $161 = ($160|0)!=(0|0); //@line 370 "../../iup_flatbutton.c"
  $or$cond5 = $159 | $161; //@line 370 "../../iup_flatbutton.c"
  if (!($or$cond5)) {
   $162 = $10; //@line 372 "../../iup_flatbutton.c"
   $163 = (($162) + 2)|0; //@line 372 "../../iup_flatbutton.c"
   $17 = $163; //@line 372 "../../iup_flatbutton.c"
   $164 = $13; //@line 373 "../../iup_flatbutton.c"
   $165 = $17; //@line 373 "../../iup_flatbutton.c"
   $166 = $1; //@line 373 "../../iup_flatbutton.c"
   $167 = ((($166)) + 52|0); //@line 373 "../../iup_flatbutton.c"
   $168 = HEAP32[$167>>2]|0; //@line 373 "../../iup_flatbutton.c"
   $169 = (($168) - 1)|0; //@line 373 "../../iup_flatbutton.c"
   $170 = $17; //@line 373 "../../iup_flatbutton.c"
   $171 = (($169) - ($170))|0; //@line 373 "../../iup_flatbutton.c"
   $172 = $17; //@line 374 "../../iup_flatbutton.c"
   $173 = $1; //@line 374 "../../iup_flatbutton.c"
   $174 = ((($173)) + 56|0); //@line 374 "../../iup_flatbutton.c"
   $175 = HEAP32[$174>>2]|0; //@line 374 "../../iup_flatbutton.c"
   $176 = (($175) - 1)|0; //@line 374 "../../iup_flatbutton.c"
   $177 = $17; //@line 374 "../../iup_flatbutton.c"
   $178 = (($176) - ($177))|0; //@line 374 "../../iup_flatbutton.c"
   $179 = $7; //@line 375 "../../iup_flatbutton.c"
   $180 = $4; //@line 375 "../../iup_flatbutton.c"
   _iFlatButtonDrawBorder($164,$165,$171,$172,$178,1,19637,$179,$180); //@line 373 "../../iup_flatbutton.c"
   $181 = $17; //@line 376 "../../iup_flatbutton.c"
   $182 = (($181) + 1)|0; //@line 376 "../../iup_flatbutton.c"
   $17 = $182; //@line 376 "../../iup_flatbutton.c"
   $183 = $13; //@line 377 "../../iup_flatbutton.c"
   $184 = $17; //@line 377 "../../iup_flatbutton.c"
   $185 = $1; //@line 377 "../../iup_flatbutton.c"
   $186 = ((($185)) + 52|0); //@line 377 "../../iup_flatbutton.c"
   $187 = HEAP32[$186>>2]|0; //@line 377 "../../iup_flatbutton.c"
   $188 = (($187) - 1)|0; //@line 377 "../../iup_flatbutton.c"
   $189 = $17; //@line 377 "../../iup_flatbutton.c"
   $190 = (($188) - ($189))|0; //@line 377 "../../iup_flatbutton.c"
   $191 = $17; //@line 378 "../../iup_flatbutton.c"
   $192 = $1; //@line 378 "../../iup_flatbutton.c"
   $193 = ((($192)) + 56|0); //@line 378 "../../iup_flatbutton.c"
   $194 = HEAP32[$193>>2]|0; //@line 378 "../../iup_flatbutton.c"
   $195 = (($194) - 1)|0; //@line 378 "../../iup_flatbutton.c"
   $196 = $17; //@line 378 "../../iup_flatbutton.c"
   $197 = (($195) - ($196))|0; //@line 378 "../../iup_flatbutton.c"
   $198 = $6; //@line 379 "../../iup_flatbutton.c"
   $199 = $7; //@line 379 "../../iup_flatbutton.c"
   $200 = $4; //@line 379 "../../iup_flatbutton.c"
   _iFlatButtonDrawBox($183,$184,$190,$191,$197,$198,$199,$200); //@line 377 "../../iup_flatbutton.c"
  }
 }
 $201 = $5; //@line 383 "../../iup_flatbutton.c"
 $202 = ($201|0)==(0); //@line 383 "../../iup_flatbutton.c"
 $203 = $12; //@line 383 "../../iup_flatbutton.c"
 $204 = ($203|0)!=(0); //@line 383 "../../iup_flatbutton.c"
 $or$cond7 = $202 | $204; //@line 383 "../../iup_flatbutton.c"
 if (!($or$cond7)) {
  $205 = $8; //@line 383 "../../iup_flatbutton.c"
  $206 = ($205|0)!=(0|0); //@line 383 "../../iup_flatbutton.c"
  $207 = $2; //@line 383 "../../iup_flatbutton.c"
  $208 = ($207|0)!=(0|0); //@line 383 "../../iup_flatbutton.c"
  $or$cond9 = $206 | $208; //@line 383 "../../iup_flatbutton.c"
  if ($or$cond9) {
   $209 = $1; //@line 384 "../../iup_flatbutton.c"
   $210 = ((($209)) + 72|0); //@line 384 "../../iup_flatbutton.c"
   $211 = HEAP32[$210>>2]|0; //@line 384 "../../iup_flatbutton.c"
   $212 = ((($211)) + 36|0); //@line 384 "../../iup_flatbutton.c"
   HEAP32[$212>>2] = 0; //@line 384 "../../iup_flatbutton.c"
  }
 }
 $213 = $1; //@line 386 "../../iup_flatbutton.c"
 $214 = ((($213)) + 72|0); //@line 386 "../../iup_flatbutton.c"
 $215 = HEAP32[$214>>2]|0; //@line 386 "../../iup_flatbutton.c"
 $216 = ((($215)) + 28|0); //@line 386 "../../iup_flatbutton.c"
 $217 = HEAP32[$216>>2]|0; //@line 386 "../../iup_flatbutton.c"
 $218 = ($217|0)!=(0); //@line 386 "../../iup_flatbutton.c"
 if (!($218)) {
  $234 = $13; //@line 389 "../../iup_flatbutton.c"
  _iupDrawFlush($234); //@line 389 "../../iup_flatbutton.c"
  $235 = $13; //@line 391 "../../iup_flatbutton.c"
  _iupDrawKillCanvas($235); //@line 391 "../../iup_flatbutton.c"
  STACKTOP = sp;return -2; //@line 393 "../../iup_flatbutton.c"
 }
 $219 = $13; //@line 387 "../../iup_flatbutton.c"
 $220 = $10; //@line 387 "../../iup_flatbutton.c"
 $221 = $10; //@line 387 "../../iup_flatbutton.c"
 $222 = $1; //@line 387 "../../iup_flatbutton.c"
 $223 = ((($222)) + 52|0); //@line 387 "../../iup_flatbutton.c"
 $224 = HEAP32[$223>>2]|0; //@line 387 "../../iup_flatbutton.c"
 $225 = $10; //@line 387 "../../iup_flatbutton.c"
 $226 = $225<<1; //@line 387 "../../iup_flatbutton.c"
 $227 = (($224) - ($226))|0; //@line 387 "../../iup_flatbutton.c"
 $228 = $1; //@line 387 "../../iup_flatbutton.c"
 $229 = ((($228)) + 56|0); //@line 387 "../../iup_flatbutton.c"
 $230 = HEAP32[$229>>2]|0; //@line 387 "../../iup_flatbutton.c"
 $231 = $10; //@line 387 "../../iup_flatbutton.c"
 $232 = $231<<1; //@line 387 "../../iup_flatbutton.c"
 $233 = (($230) - ($232))|0; //@line 387 "../../iup_flatbutton.c"
 _iupDrawFocusRect($219,$220,$221,$227,$233); //@line 387 "../../iup_flatbutton.c"
 $234 = $13; //@line 389 "../../iup_flatbutton.c"
 _iupDrawFlush($234); //@line 389 "../../iup_flatbutton.c"
 $235 = $13; //@line 391 "../../iup_flatbutton.c"
 _iupDrawKillCanvas($235); //@line 391 "../../iup_flatbutton.c"
 STACKTOP = sp;return -2; //@line 393 "../../iup_flatbutton.c"
}
function _iFlatButtonButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $17 = $7; //@line 415 "../../iup_flatbutton.c"
 $18 = (_IupGetCallback($17,12116)|0); //@line 415 "../../iup_flatbutton.c"
 $13 = $18; //@line 415 "../../iup_flatbutton.c"
 $19 = $13; //@line 416 "../../iup_flatbutton.c"
 $20 = ($19|0)!=(0|0); //@line 416 "../../iup_flatbutton.c"
 if ($20) {
  $21 = $13; //@line 418 "../../iup_flatbutton.c"
  $22 = $7; //@line 418 "../../iup_flatbutton.c"
  $23 = $8; //@line 418 "../../iup_flatbutton.c"
  $24 = $9; //@line 418 "../../iup_flatbutton.c"
  $25 = $10; //@line 418 "../../iup_flatbutton.c"
  $26 = $11; //@line 418 "../../iup_flatbutton.c"
  $27 = $12; //@line 418 "../../iup_flatbutton.c"
  $28 = (FUNCTION_TABLE_iiiiiii[$21 & 1023]($22,$23,$24,$25,$26,$27)|0); //@line 418 "../../iup_flatbutton.c"
  $29 = ($28|0)==(-1); //@line 418 "../../iup_flatbutton.c"
  if ($29) {
   $6 = -2; //@line 419 "../../iup_flatbutton.c"
   $88 = $6; //@line 486 "../../iup_flatbutton.c"
   STACKTOP = sp;return ($88|0); //@line 486 "../../iup_flatbutton.c"
  }
 }
 $30 = $8; //@line 422 "../../iup_flatbutton.c"
 $31 = ($30|0)==(49); //@line 422 "../../iup_flatbutton.c"
 do {
  if ($31) {
   $32 = $7; //@line 424 "../../iup_flatbutton.c"
   $33 = (_iupAttribGetBoolean($32,15398)|0); //@line 424 "../../iup_flatbutton.c"
   $34 = ($33|0)!=(0); //@line 424 "../../iup_flatbutton.c"
   if (!($34)) {
    $79 = $9; //@line 477 "../../iup_flatbutton.c"
    $80 = $7; //@line 477 "../../iup_flatbutton.c"
    $81 = ((($80)) + 72|0); //@line 477 "../../iup_flatbutton.c"
    $82 = HEAP32[$81>>2]|0; //@line 477 "../../iup_flatbutton.c"
    $83 = ((($82)) + 36|0); //@line 477 "../../iup_flatbutton.c"
    HEAP32[$83>>2] = $79; //@line 477 "../../iup_flatbutton.c"
    $84 = $7; //@line 478 "../../iup_flatbutton.c"
    _iupdrvRedrawNow($84); //@line 478 "../../iup_flatbutton.c"
    $85 = $9; //@line 480 "../../iup_flatbutton.c"
    $86 = ($85|0)!=(0); //@line 480 "../../iup_flatbutton.c"
    if ($86) {
     break;
    }
    $87 = $7; //@line 481 "../../iup_flatbutton.c"
    _iFlatButtonNotify($87,0); //@line 481 "../../iup_flatbutton.c"
    break;
   }
   $35 = $7; //@line 426 "../../iup_flatbutton.c"
   $36 = (_iupRadioFindToggleParent($35)|0); //@line 426 "../../iup_flatbutton.c"
   $14 = $36; //@line 426 "../../iup_flatbutton.c"
   $37 = $7; //@line 427 "../../iup_flatbutton.c"
   $38 = (_iupAttribGetInt($37,20104)|0); //@line 427 "../../iup_flatbutton.c"
   $15 = $38; //@line 427 "../../iup_flatbutton.c"
   $16 = 0; //@line 428 "../../iup_flatbutton.c"
   $39 = $9; //@line 430 "../../iup_flatbutton.c"
   $40 = ($39|0)!=(0); //@line 430 "../../iup_flatbutton.c"
   do {
    if (!($40)) {
     $41 = $15; //@line 432 "../../iup_flatbutton.c"
     $42 = ($41|0)!=(0); //@line 432 "../../iup_flatbutton.c"
     $43 = $14; //@line 434 "../../iup_flatbutton.c"
     $44 = ($43|0)!=(0|0); //@line 434 "../../iup_flatbutton.c"
     if ($42) {
      $45 = $7; //@line 440 "../../iup_flatbutton.c"
      if ($44) {
       $16 = $45; //@line 440 "../../iup_flatbutton.c"
       break;
      } else {
       _iupAttribSet($45,20104,16024); //@line 436 "../../iup_flatbutton.c"
       $15 = 0; //@line 437 "../../iup_flatbutton.c"
       break;
      }
     }
     if ($44) {
      $46 = $14; //@line 446 "../../iup_flatbutton.c"
      $47 = (_iupAttribGet($46,12499)|0); //@line 446 "../../iup_flatbutton.c"
      $16 = $47; //@line 446 "../../iup_flatbutton.c"
      $48 = $16; //@line 447 "../../iup_flatbutton.c"
      $49 = (_iupObjectCheck($48)|0); //@line 447 "../../iup_flatbutton.c"
      $50 = ($49|0)!=(0); //@line 447 "../../iup_flatbutton.c"
      if ($50) {
       $51 = $16; //@line 447 "../../iup_flatbutton.c"
       $52 = $7; //@line 447 "../../iup_flatbutton.c"
       $53 = ($51|0)!=($52|0); //@line 447 "../../iup_flatbutton.c"
       if ($53) {
        $54 = $16; //@line 449 "../../iup_flatbutton.c"
        _iupAttribSet($54,20104,16024); //@line 449 "../../iup_flatbutton.c"
        $55 = $16; //@line 450 "../../iup_flatbutton.c"
        _iupdrvRedrawNow($55); //@line 450 "../../iup_flatbutton.c"
       } else {
        label = 15;
       }
      } else {
       label = 15;
      }
      if ((label|0) == 15) {
       $16 = 0; //@line 453 "../../iup_flatbutton.c"
      }
      $56 = $14; //@line 455 "../../iup_flatbutton.c"
      $57 = $7; //@line 455 "../../iup_flatbutton.c"
      _iupAttribSet($56,12499,$57); //@line 455 "../../iup_flatbutton.c"
     }
     $58 = $7; //@line 458 "../../iup_flatbutton.c"
     _iupAttribSet($58,20104,16028); //@line 458 "../../iup_flatbutton.c"
     $15 = 1; //@line 459 "../../iup_flatbutton.c"
    }
   } while(0);
   $59 = $9; //@line 463 "../../iup_flatbutton.c"
   $60 = $7; //@line 463 "../../iup_flatbutton.c"
   $61 = ((($60)) + 72|0); //@line 463 "../../iup_flatbutton.c"
   $62 = HEAP32[$61>>2]|0; //@line 463 "../../iup_flatbutton.c"
   $63 = ((($62)) + 36|0); //@line 463 "../../iup_flatbutton.c"
   HEAP32[$63>>2] = $59; //@line 463 "../../iup_flatbutton.c"
   $64 = $7; //@line 464 "../../iup_flatbutton.c"
   _iupdrvRedrawNow($64); //@line 464 "../../iup_flatbutton.c"
   $65 = $9; //@line 466 "../../iup_flatbutton.c"
   $66 = ($65|0)!=(0); //@line 466 "../../iup_flatbutton.c"
   if (!($66)) {
    $67 = $16; //@line 468 "../../iup_flatbutton.c"
    $68 = ($67|0)!=(0|0); //@line 468 "../../iup_flatbutton.c"
    if ($68) {
     $69 = $7; //@line 468 "../../iup_flatbutton.c"
     $70 = $16; //@line 468 "../../iup_flatbutton.c"
     $71 = ($69|0)!=($70|0); //@line 468 "../../iup_flatbutton.c"
     if ($71) {
      $72 = $16; //@line 469 "../../iup_flatbutton.c"
      _iFlatButtonNotify($72,1); //@line 469 "../../iup_flatbutton.c"
     }
    }
    $73 = $14; //@line 471 "../../iup_flatbutton.c"
    $74 = ($73|0)!=(0|0); //@line 471 "../../iup_flatbutton.c"
    if ($74) {
     $75 = $7; //@line 471 "../../iup_flatbutton.c"
     $76 = $16; //@line 471 "../../iup_flatbutton.c"
     $77 = ($75|0)!=($76|0); //@line 471 "../../iup_flatbutton.c"
     if (!($77)) {
      break;
     }
    }
    $78 = $7; //@line 472 "../../iup_flatbutton.c"
    _iFlatButtonNotify($78,1); //@line 472 "../../iup_flatbutton.c"
   }
  }
 } while(0);
 $6 = -2; //@line 485 "../../iup_flatbutton.c"
 $88 = $6; //@line 486 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($88|0); //@line 486 "../../iup_flatbutton.c"
}
function _iFlatButtonFocus_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 503 "../../iup_flatbutton.c"
 $7 = (_IupGetCallback($6,12131)|0); //@line 503 "../../iup_flatbutton.c"
 $5 = $7; //@line 503 "../../iup_flatbutton.c"
 $8 = $5; //@line 504 "../../iup_flatbutton.c"
 $9 = ($8|0)!=(0|0); //@line 504 "../../iup_flatbutton.c"
 if ($9) {
  $10 = $5; //@line 506 "../../iup_flatbutton.c"
  $11 = $3; //@line 506 "../../iup_flatbutton.c"
  $12 = $4; //@line 506 "../../iup_flatbutton.c"
  $13 = (FUNCTION_TABLE_iii[$10 & 1023]($11,$12)|0); //@line 506 "../../iup_flatbutton.c"
  $14 = ($13|0)==(-1); //@line 506 "../../iup_flatbutton.c"
  if ($14) {
   $2 = -2; //@line 507 "../../iup_flatbutton.c"
   $21 = $2; //@line 514 "../../iup_flatbutton.c"
   STACKTOP = sp;return ($21|0); //@line 514 "../../iup_flatbutton.c"
  }
 }
 $15 = $4; //@line 510 "../../iup_flatbutton.c"
 $16 = $3; //@line 510 "../../iup_flatbutton.c"
 $17 = ((($16)) + 72|0); //@line 510 "../../iup_flatbutton.c"
 $18 = HEAP32[$17>>2]|0; //@line 510 "../../iup_flatbutton.c"
 $19 = ((($18)) + 28|0); //@line 510 "../../iup_flatbutton.c"
 HEAP32[$19>>2] = $15; //@line 510 "../../iup_flatbutton.c"
 $20 = $3; //@line 511 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($20); //@line 511 "../../iup_flatbutton.c"
 $2 = -2; //@line 513 "../../iup_flatbutton.c"
 $21 = $2; //@line 514 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($21|0); //@line 514 "../../iup_flatbutton.c"
}
function _iFlatButtonLeaveWindow_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 533 "../../iup_flatbutton.c"
 $5 = (_IupGetCallback($4,12165)|0); //@line 533 "../../iup_flatbutton.c"
 $3 = $5; //@line 533 "../../iup_flatbutton.c"
 $6 = $3; //@line 534 "../../iup_flatbutton.c"
 $7 = ($6|0)!=(0|0); //@line 534 "../../iup_flatbutton.c"
 if ($7) {
  $8 = $3; //@line 536 "../../iup_flatbutton.c"
  $9 = $2; //@line 536 "../../iup_flatbutton.c"
  $10 = (FUNCTION_TABLE_ii[$8 & 1023]($9)|0); //@line 536 "../../iup_flatbutton.c"
  $11 = ($10|0)==(-1); //@line 536 "../../iup_flatbutton.c"
  if ($11) {
   $1 = -2; //@line 537 "../../iup_flatbutton.c"
   $17 = $1; //@line 544 "../../iup_flatbutton.c"
   STACKTOP = sp;return ($17|0); //@line 544 "../../iup_flatbutton.c"
  }
 }
 $12 = $2; //@line 540 "../../iup_flatbutton.c"
 $13 = ((($12)) + 72|0); //@line 540 "../../iup_flatbutton.c"
 $14 = HEAP32[$13>>2]|0; //@line 540 "../../iup_flatbutton.c"
 $15 = ((($14)) + 32|0); //@line 540 "../../iup_flatbutton.c"
 HEAP32[$15>>2] = 0; //@line 540 "../../iup_flatbutton.c"
 $16 = $2; //@line 541 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($16); //@line 541 "../../iup_flatbutton.c"
 $1 = -2; //@line 543 "../../iup_flatbutton.c"
 $17 = $1; //@line 544 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($17|0); //@line 544 "../../iup_flatbutton.c"
}
function _iFlatButtonEnterWindow_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 518 "../../iup_flatbutton.c"
 $5 = (_IupGetCallback($4,12145)|0); //@line 518 "../../iup_flatbutton.c"
 $3 = $5; //@line 518 "../../iup_flatbutton.c"
 $6 = $3; //@line 519 "../../iup_flatbutton.c"
 $7 = ($6|0)!=(0|0); //@line 519 "../../iup_flatbutton.c"
 if ($7) {
  $8 = $3; //@line 521 "../../iup_flatbutton.c"
  $9 = $2; //@line 521 "../../iup_flatbutton.c"
  $10 = (FUNCTION_TABLE_ii[$8 & 1023]($9)|0); //@line 521 "../../iup_flatbutton.c"
  $11 = ($10|0)==(-1); //@line 521 "../../iup_flatbutton.c"
  if ($11) {
   $1 = -2; //@line 522 "../../iup_flatbutton.c"
   $17 = $1; //@line 529 "../../iup_flatbutton.c"
   STACKTOP = sp;return ($17|0); //@line 529 "../../iup_flatbutton.c"
  }
 }
 $12 = $2; //@line 525 "../../iup_flatbutton.c"
 $13 = ((($12)) + 72|0); //@line 525 "../../iup_flatbutton.c"
 $14 = HEAP32[$13>>2]|0; //@line 525 "../../iup_flatbutton.c"
 $15 = ((($14)) + 32|0); //@line 525 "../../iup_flatbutton.c"
 HEAP32[$15>>2] = 1; //@line 525 "../../iup_flatbutton.c"
 $16 = $2; //@line 526 "../../iup_flatbutton.c"
 _iupdrvRedrawNow($16); //@line 526 "../../iup_flatbutton.c"
 $1 = -2; //@line 528 "../../iup_flatbutton.c"
 $17 = $1; //@line 529 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($17|0); //@line 529 "../../iup_flatbutton.c"
}
function _iFlatButtonActivate_CB($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $1 = $0;
 dest=$2; src=12530; stop=dest+11|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 490 "../../iup_flatbutton.c"
 $3 = $1; //@line 492 "../../iup_flatbutton.c"
 (_iFlatButtonButton_CB($3,49,1,0,0,$2)|0); //@line 492 "../../iup_flatbutton.c"
 _iupdrvSleep(100); //@line 494 "../../iup_flatbutton.c"
 $4 = $1; //@line 496 "../../iup_flatbutton.c"
 (_iFlatButtonButton_CB($4,49,0,0,0,$2)|0); //@line 496 "../../iup_flatbutton.c"
 STACKTOP = sp;return -2; //@line 498 "../../iup_flatbutton.c"
}
function _iFlatButtonNotify($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 398 "../../iup_flatbutton.c"
 $7 = (_IupGetCallback($6,12104)|0); //@line 398 "../../iup_flatbutton.c"
 $4 = $7; //@line 398 "../../iup_flatbutton.c"
 $8 = $4; //@line 399 "../../iup_flatbutton.c"
 $9 = ($8|0)!=(0|0); //@line 399 "../../iup_flatbutton.c"
 if ($9) {
  $10 = $4; //@line 401 "../../iup_flatbutton.c"
  $11 = $2; //@line 401 "../../iup_flatbutton.c"
  $12 = (FUNCTION_TABLE_ii[$10 & 1023]($11)|0); //@line 401 "../../iup_flatbutton.c"
  $5 = $12; //@line 401 "../../iup_flatbutton.c"
  $13 = $5; //@line 402 "../../iup_flatbutton.c"
  $14 = ($13|0)==(-3); //@line 402 "../../iup_flatbutton.c"
  if ($14) {
   _IupExitLoop(); //@line 403 "../../iup_flatbutton.c"
  }
 }
 $15 = $3; //@line 406 "../../iup_flatbutton.c"
 $16 = ($15|0)!=(0); //@line 406 "../../iup_flatbutton.c"
 if (!($16)) {
  STACKTOP = sp;return; //@line 411 "../../iup_flatbutton.c"
 }
 $17 = $2; //@line 408 "../../iup_flatbutton.c"
 $18 = (_iupObjectCheck($17)|0); //@line 408 "../../iup_flatbutton.c"
 $19 = ($18|0)!=(0); //@line 408 "../../iup_flatbutton.c"
 if (!($19)) {
  STACKTOP = sp;return; //@line 411 "../../iup_flatbutton.c"
 }
 $20 = $2; //@line 409 "../../iup_flatbutton.c"
 _iupBaseCallValueChangedCb($20); //@line 409 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 411 "../../iup_flatbutton.c"
}
function _iFlatButtonDrawBorder($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $18 = sp + 49|0;
 $19 = sp + 48|0;
 $20 = sp + 47|0;
 $23 = sp + 46|0;
 $24 = sp + 45|0;
 $25 = sp + 44|0;
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $3;
 $13 = $4;
 $14 = $5;
 $15 = $6;
 $16 = $7;
 $17 = $8;
 HEAP8[$18>>0] = 0; //@line 53 "../../iup_flatbutton.c"
 HEAP8[$19>>0] = 0; //@line 53 "../../iup_flatbutton.c"
 HEAP8[$20>>0] = 0; //@line 53 "../../iup_flatbutton.c"
 $26 = $15; //@line 55 "../../iup_flatbutton.c"
 $27 = ($26|0)==(0|0); //@line 55 "../../iup_flatbutton.c"
 $28 = $14; //@line 55 "../../iup_flatbutton.c"
 $29 = ($28|0)==(0); //@line 55 "../../iup_flatbutton.c"
 $or$cond = $27 | $29; //@line 55 "../../iup_flatbutton.c"
 if ($or$cond) {
  STACKTOP = sp;return; //@line 78 "../../iup_flatbutton.c"
 }
 $30 = $10; //@line 55 "../../iup_flatbutton.c"
 $31 = $11; //@line 55 "../../iup_flatbutton.c"
 $32 = ($30|0)==($31|0); //@line 55 "../../iup_flatbutton.c"
 if ($32) {
  STACKTOP = sp;return; //@line 78 "../../iup_flatbutton.c"
 }
 $33 = $12; //@line 55 "../../iup_flatbutton.c"
 $34 = $13; //@line 55 "../../iup_flatbutton.c"
 $35 = ($33|0)==($34|0); //@line 55 "../../iup_flatbutton.c"
 if ($35) {
  STACKTOP = sp;return; //@line 78 "../../iup_flatbutton.c"
 }
 $36 = $10; //@line 58 "../../iup_flatbutton.c"
 $37 = $11; //@line 58 "../../iup_flatbutton.c"
 $38 = ($36|0)>($37|0); //@line 58 "../../iup_flatbutton.c"
 if ($38) {
  $39 = $10; //@line 58 "../../iup_flatbutton.c"
  $21 = $39; //@line 58 "../../iup_flatbutton.c"
  $40 = $11; //@line 58 "../../iup_flatbutton.c"
  $10 = $40; //@line 58 "../../iup_flatbutton.c"
  $41 = $21; //@line 58 "../../iup_flatbutton.c"
  $11 = $41; //@line 58 "../../iup_flatbutton.c"
 }
 $42 = $12; //@line 59 "../../iup_flatbutton.c"
 $43 = $13; //@line 59 "../../iup_flatbutton.c"
 $44 = ($42|0)>($43|0); //@line 59 "../../iup_flatbutton.c"
 if ($44) {
  $45 = $12; //@line 59 "../../iup_flatbutton.c"
  $22 = $45; //@line 59 "../../iup_flatbutton.c"
  $46 = $13; //@line 59 "../../iup_flatbutton.c"
  $12 = $46; //@line 59 "../../iup_flatbutton.c"
  $47 = $22; //@line 59 "../../iup_flatbutton.c"
  $13 = $47; //@line 59 "../../iup_flatbutton.c"
 }
 $48 = $15; //@line 61 "../../iup_flatbutton.c"
 (_iupStrToRGB($48,$18,$19,$20)|0); //@line 61 "../../iup_flatbutton.c"
 $49 = $17; //@line 62 "../../iup_flatbutton.c"
 $50 = ($49|0)!=(0); //@line 62 "../../iup_flatbutton.c"
 if (!($50)) {
  HEAP8[$23>>0] = 0; //@line 64 "../../iup_flatbutton.c"
  HEAP8[$24>>0] = 0; //@line 64 "../../iup_flatbutton.c"
  HEAP8[$25>>0] = 0; //@line 64 "../../iup_flatbutton.c"
  $51 = $16; //@line 65 "../../iup_flatbutton.c"
  (_iupStrToRGB($51,$23,$24,$25)|0); //@line 65 "../../iup_flatbutton.c"
  $52 = HEAP8[$23>>0]|0; //@line 66 "../../iup_flatbutton.c"
  $53 = HEAP8[$24>>0]|0; //@line 66 "../../iup_flatbutton.c"
  $54 = HEAP8[$25>>0]|0; //@line 66 "../../iup_flatbutton.c"
  _iupImageColorMakeInactive($18,$19,$20,$52,$53,$54); //@line 66 "../../iup_flatbutton.c"
 }
 $55 = $9; //@line 69 "../../iup_flatbutton.c"
 $56 = $10; //@line 69 "../../iup_flatbutton.c"
 $57 = $12; //@line 69 "../../iup_flatbutton.c"
 $58 = $11; //@line 69 "../../iup_flatbutton.c"
 $59 = $13; //@line 69 "../../iup_flatbutton.c"
 $60 = HEAP8[$18>>0]|0; //@line 69 "../../iup_flatbutton.c"
 $61 = HEAP8[$19>>0]|0; //@line 69 "../../iup_flatbutton.c"
 $62 = HEAP8[$20>>0]|0; //@line 69 "../../iup_flatbutton.c"
 _iupDrawRectangle($55,$56,$57,$58,$59,$60,$61,$62,1); //@line 69 "../../iup_flatbutton.c"
 while(1) {
  $63 = $14; //@line 70 "../../iup_flatbutton.c"
  $64 = ($63|0)>(1); //@line 70 "../../iup_flatbutton.c"
  if (!($64)) {
   break;
  }
  $65 = $14; //@line 72 "../../iup_flatbutton.c"
  $66 = (($65) + -1)|0; //@line 72 "../../iup_flatbutton.c"
  $14 = $66; //@line 72 "../../iup_flatbutton.c"
  $67 = $9; //@line 73 "../../iup_flatbutton.c"
  $68 = $10; //@line 73 "../../iup_flatbutton.c"
  $69 = $14; //@line 73 "../../iup_flatbutton.c"
  $70 = (($68) + ($69))|0; //@line 73 "../../iup_flatbutton.c"
  $71 = $12; //@line 74 "../../iup_flatbutton.c"
  $72 = $14; //@line 74 "../../iup_flatbutton.c"
  $73 = (($71) + ($72))|0; //@line 74 "../../iup_flatbutton.c"
  $74 = $11; //@line 75 "../../iup_flatbutton.c"
  $75 = $14; //@line 75 "../../iup_flatbutton.c"
  $76 = (($74) - ($75))|0; //@line 75 "../../iup_flatbutton.c"
  $77 = $13; //@line 76 "../../iup_flatbutton.c"
  $78 = $14; //@line 76 "../../iup_flatbutton.c"
  $79 = (($77) - ($78))|0; //@line 76 "../../iup_flatbutton.c"
  $80 = HEAP8[$18>>0]|0; //@line 76 "../../iup_flatbutton.c"
  $81 = HEAP8[$19>>0]|0; //@line 76 "../../iup_flatbutton.c"
  $82 = HEAP8[$20>>0]|0; //@line 76 "../../iup_flatbutton.c"
  _iupDrawRectangle($67,$70,$73,$76,$79,$80,$81,$82,1); //@line 73 "../../iup_flatbutton.c"
 }
 STACKTOP = sp;return; //@line 78 "../../iup_flatbutton.c"
}
function _iFlatButtonDrawImage($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $14 = sp + 12|0;
 $15 = sp + 8|0;
 $16 = sp + 4|0;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $13 = $6;
 $18 = $7; //@line 145 "../../iup_flatbutton.c"
 $19 = $11; //@line 145 "../../iup_flatbutton.c"
 $20 = $12; //@line 145 "../../iup_flatbutton.c"
 $21 = $13; //@line 145 "../../iup_flatbutton.c"
 $22 = (_iFlatButtonGetImageName($18,$19,$20,$21,$16)|0); //@line 145 "../../iup_flatbutton.c"
 $17 = $22; //@line 145 "../../iup_flatbutton.c"
 $23 = $8; //@line 146 "../../iup_flatbutton.c"
 $24 = $17; //@line 146 "../../iup_flatbutton.c"
 $25 = HEAP32[$16>>2]|0; //@line 146 "../../iup_flatbutton.c"
 $26 = $9; //@line 146 "../../iup_flatbutton.c"
 $27 = $10; //@line 146 "../../iup_flatbutton.c"
 _iupDrawImage($23,$24,$25,$26,$27,$14,$15); //@line 146 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 147 "../../iup_flatbutton.c"
}
function _iFlatButtonDrawBox($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $16 = sp + 45|0;
 $17 = sp + 44|0;
 $18 = sp + 43|0;
 $21 = sp + 42|0;
 $22 = sp + 41|0;
 $23 = sp + 40|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $15 = $7;
 HEAP8[$16>>0] = 0; //@line 82 "../../iup_flatbutton.c"
 HEAP8[$17>>0] = 0; //@line 82 "../../iup_flatbutton.c"
 HEAP8[$18>>0] = 0; //@line 82 "../../iup_flatbutton.c"
 $24 = $13; //@line 84 "../../iup_flatbutton.c"
 $25 = ($24|0)!=(0|0); //@line 84 "../../iup_flatbutton.c"
 if (!($25)) {
  STACKTOP = sp;return; //@line 99 "../../iup_flatbutton.c"
 }
 $26 = $9; //@line 84 "../../iup_flatbutton.c"
 $27 = $10; //@line 84 "../../iup_flatbutton.c"
 $28 = ($26|0)==($27|0); //@line 84 "../../iup_flatbutton.c"
 if ($28) {
  STACKTOP = sp;return; //@line 99 "../../iup_flatbutton.c"
 }
 $29 = $11; //@line 84 "../../iup_flatbutton.c"
 $30 = $12; //@line 84 "../../iup_flatbutton.c"
 $31 = ($29|0)==($30|0); //@line 84 "../../iup_flatbutton.c"
 if ($31) {
  STACKTOP = sp;return; //@line 99 "../../iup_flatbutton.c"
 }
 $32 = $9; //@line 87 "../../iup_flatbutton.c"
 $33 = $10; //@line 87 "../../iup_flatbutton.c"
 $34 = ($32|0)>($33|0); //@line 87 "../../iup_flatbutton.c"
 if ($34) {
  $35 = $9; //@line 87 "../../iup_flatbutton.c"
  $19 = $35; //@line 87 "../../iup_flatbutton.c"
  $36 = $10; //@line 87 "../../iup_flatbutton.c"
  $9 = $36; //@line 87 "../../iup_flatbutton.c"
  $37 = $19; //@line 87 "../../iup_flatbutton.c"
  $10 = $37; //@line 87 "../../iup_flatbutton.c"
 }
 $38 = $11; //@line 88 "../../iup_flatbutton.c"
 $39 = $12; //@line 88 "../../iup_flatbutton.c"
 $40 = ($38|0)>($39|0); //@line 88 "../../iup_flatbutton.c"
 if ($40) {
  $41 = $11; //@line 88 "../../iup_flatbutton.c"
  $20 = $41; //@line 88 "../../iup_flatbutton.c"
  $42 = $12; //@line 88 "../../iup_flatbutton.c"
  $11 = $42; //@line 88 "../../iup_flatbutton.c"
  $43 = $20; //@line 88 "../../iup_flatbutton.c"
  $12 = $43; //@line 88 "../../iup_flatbutton.c"
 }
 $44 = $13; //@line 90 "../../iup_flatbutton.c"
 (_iupStrToRGB($44,$16,$17,$18)|0); //@line 90 "../../iup_flatbutton.c"
 $45 = $15; //@line 91 "../../iup_flatbutton.c"
 $46 = ($45|0)!=(0); //@line 91 "../../iup_flatbutton.c"
 if (!($46)) {
  HEAP8[$21>>0] = 0; //@line 93 "../../iup_flatbutton.c"
  HEAP8[$22>>0] = 0; //@line 93 "../../iup_flatbutton.c"
  HEAP8[$23>>0] = 0; //@line 93 "../../iup_flatbutton.c"
  $47 = $14; //@line 94 "../../iup_flatbutton.c"
  (_iupStrToRGB($47,$21,$22,$23)|0); //@line 94 "../../iup_flatbutton.c"
  $48 = HEAP8[$21>>0]|0; //@line 95 "../../iup_flatbutton.c"
  $49 = HEAP8[$22>>0]|0; //@line 95 "../../iup_flatbutton.c"
  $50 = HEAP8[$23>>0]|0; //@line 95 "../../iup_flatbutton.c"
  _iupImageColorMakeInactive($16,$17,$18,$48,$49,$50); //@line 95 "../../iup_flatbutton.c"
 }
 $51 = $8; //@line 98 "../../iup_flatbutton.c"
 $52 = $9; //@line 98 "../../iup_flatbutton.c"
 $53 = $11; //@line 98 "../../iup_flatbutton.c"
 $54 = $10; //@line 98 "../../iup_flatbutton.c"
 $55 = $12; //@line 98 "../../iup_flatbutton.c"
 $56 = HEAP8[$16>>0]|0; //@line 98 "../../iup_flatbutton.c"
 $57 = HEAP8[$17>>0]|0; //@line 98 "../../iup_flatbutton.c"
 $58 = HEAP8[$18>>0]|0; //@line 98 "../../iup_flatbutton.c"
 _iupDrawRectangle($51,$52,$53,$54,$55,$56,$57,$58,0); //@line 98 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 99 "../../iup_flatbutton.c"
}
function _iFlatButtonDrawIcon($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $24 = sp + 44|0;
 $25 = sp + 40|0;
 $26 = sp + 36|0;
 $27 = sp + 32|0;
 $28 = sp + 28|0;
 $29 = sp + 24|0;
 $30 = sp + 20|0;
 $31 = sp + 16|0;
 $32 = sp + 12|0;
 $33 = sp + 8|0;
 $34 = sp + 4|0;
 $35 = sp;
 $12 = $0;
 $13 = $1;
 $14 = $2;
 $15 = $3;
 $16 = $4;
 $17 = $5;
 $18 = $6;
 $19 = $7;
 $20 = $8;
 $21 = $9;
 $22 = $10;
 $23 = $11;
 $36 = $19; //@line 257 "../../iup_flatbutton.c"
 $37 = ($36|0)!=(0|0); //@line 257 "../../iup_flatbutton.c"
 $38 = $20; //@line 259 "../../iup_flatbutton.c"
 $39 = ($38|0)!=(0|0); //@line 259 "../../iup_flatbutton.c"
 if (!($37)) {
  if (!($39)) {
   STACKTOP = sp;return; //@line 305 "../../iup_flatbutton.c"
  }
  $146 = $12; //@line 299 "../../iup_flatbutton.c"
  $147 = $20; //@line 299 "../../iup_flatbutton.c"
  _iupdrvFontGetMultiLineStringSize($146,$147,$26,$27); //@line 299 "../../iup_flatbutton.c"
  $148 = $12; //@line 301 "../../iup_flatbutton.c"
  $149 = $16; //@line 301 "../../iup_flatbutton.c"
  $150 = $17; //@line 301 "../../iup_flatbutton.c"
  $151 = HEAP32[$26>>2]|0; //@line 301 "../../iup_flatbutton.c"
  $152 = HEAP32[$27>>2]|0; //@line 301 "../../iup_flatbutton.c"
  _iFlatButtonGetIconPosition($148,$149,$150,$24,$25,$151,$152); //@line 301 "../../iup_flatbutton.c"
  $153 = $12; //@line 303 "../../iup_flatbutton.c"
  $154 = $13; //@line 303 "../../iup_flatbutton.c"
  $155 = HEAP32[$24>>2]|0; //@line 303 "../../iup_flatbutton.c"
  $156 = $14; //@line 303 "../../iup_flatbutton.c"
  $157 = (($155) + ($156))|0; //@line 303 "../../iup_flatbutton.c"
  $158 = HEAP32[$25>>2]|0; //@line 303 "../../iup_flatbutton.c"
  $159 = $15; //@line 303 "../../iup_flatbutton.c"
  $160 = (($158) + ($159))|0; //@line 303 "../../iup_flatbutton.c"
  $161 = $20; //@line 303 "../../iup_flatbutton.c"
  $162 = $21; //@line 303 "../../iup_flatbutton.c"
  $163 = $22; //@line 303 "../../iup_flatbutton.c"
  $164 = $23; //@line 303 "../../iup_flatbutton.c"
  _iFlatButtonDrawText($153,$154,$157,$160,$161,$162,$163,$164); //@line 303 "../../iup_flatbutton.c"
  STACKTOP = sp;return; //@line 305 "../../iup_flatbutton.c"
 }
 if (!($39)) {
  $129 = $19; //@line 290 "../../iup_flatbutton.c"
  _iupImageGetInfo($129,$26,$27,0); //@line 290 "../../iup_flatbutton.c"
  $130 = $12; //@line 292 "../../iup_flatbutton.c"
  $131 = $16; //@line 292 "../../iup_flatbutton.c"
  $132 = $17; //@line 292 "../../iup_flatbutton.c"
  $133 = HEAP32[$26>>2]|0; //@line 292 "../../iup_flatbutton.c"
  $134 = HEAP32[$27>>2]|0; //@line 292 "../../iup_flatbutton.c"
  _iFlatButtonGetIconPosition($130,$131,$132,$24,$25,$133,$134); //@line 292 "../../iup_flatbutton.c"
  $135 = $12; //@line 294 "../../iup_flatbutton.c"
  $136 = $13; //@line 294 "../../iup_flatbutton.c"
  $137 = HEAP32[$24>>2]|0; //@line 294 "../../iup_flatbutton.c"
  $138 = $14; //@line 294 "../../iup_flatbutton.c"
  $139 = (($137) + ($138))|0; //@line 294 "../../iup_flatbutton.c"
  $140 = HEAP32[$25>>2]|0; //@line 294 "../../iup_flatbutton.c"
  $141 = $15; //@line 294 "../../iup_flatbutton.c"
  $142 = (($140) + ($141))|0; //@line 294 "../../iup_flatbutton.c"
  $143 = $18; //@line 294 "../../iup_flatbutton.c"
  $144 = $19; //@line 294 "../../iup_flatbutton.c"
  $145 = $23; //@line 294 "../../iup_flatbutton.c"
  _iFlatButtonDrawImage($135,$136,$139,$142,$143,$144,$145); //@line 294 "../../iup_flatbutton.c"
  STACKTOP = sp;return; //@line 305 "../../iup_flatbutton.c"
 }
 $40 = $12; //@line 265 "../../iup_flatbutton.c"
 $41 = $20; //@line 265 "../../iup_flatbutton.c"
 _iupdrvFontGetMultiLineStringSize($40,$41,$32,$33); //@line 265 "../../iup_flatbutton.c"
 $42 = $19; //@line 266 "../../iup_flatbutton.c"
 _iupImageGetInfo($42,$34,$35,0); //@line 266 "../../iup_flatbutton.c"
 $43 = $12; //@line 268 "../../iup_flatbutton.c"
 $44 = ((($43)) + 72|0); //@line 268 "../../iup_flatbutton.c"
 $45 = HEAP32[$44>>2]|0; //@line 268 "../../iup_flatbutton.c"
 $46 = ((($45)) + 12|0); //@line 268 "../../iup_flatbutton.c"
 $47 = HEAP32[$46>>2]|0; //@line 268 "../../iup_flatbutton.c"
 $48 = ($47|0)==(1); //@line 268 "../../iup_flatbutton.c"
 if ($48) {
  label = 5;
 } else {
  $49 = $12; //@line 268 "../../iup_flatbutton.c"
  $50 = ((($49)) + 72|0); //@line 268 "../../iup_flatbutton.c"
  $51 = HEAP32[$50>>2]|0; //@line 268 "../../iup_flatbutton.c"
  $52 = ((($51)) + 12|0); //@line 268 "../../iup_flatbutton.c"
  $53 = HEAP32[$52>>2]|0; //@line 268 "../../iup_flatbutton.c"
  $54 = ($53|0)==(0); //@line 268 "../../iup_flatbutton.c"
  if ($54) {
   label = 5;
  } else {
   $70 = HEAP32[$34>>2]|0; //@line 275 "../../iup_flatbutton.c"
   $71 = HEAP32[$32>>2]|0; //@line 275 "../../iup_flatbutton.c"
   $72 = ($70|0)>($71|0); //@line 275 "../../iup_flatbutton.c"
   $73 = HEAP32[$34>>2]|0; //@line 275 "../../iup_flatbutton.c"
   $74 = HEAP32[$32>>2]|0; //@line 275 "../../iup_flatbutton.c"
   $75 = $72 ? $73 : $74; //@line 275 "../../iup_flatbutton.c"
   HEAP32[$26>>2] = $75; //@line 275 "../../iup_flatbutton.c"
   $76 = HEAP32[$35>>2]|0; //@line 276 "../../iup_flatbutton.c"
   $77 = HEAP32[$33>>2]|0; //@line 276 "../../iup_flatbutton.c"
   $78 = (($76) + ($77))|0; //@line 276 "../../iup_flatbutton.c"
   $79 = $12; //@line 276 "../../iup_flatbutton.c"
   $80 = ((($79)) + 72|0); //@line 276 "../../iup_flatbutton.c"
   $81 = HEAP32[$80>>2]|0; //@line 276 "../../iup_flatbutton.c"
   $82 = ((($81)) + 8|0); //@line 276 "../../iup_flatbutton.c"
   $83 = HEAP32[$82>>2]|0; //@line 276 "../../iup_flatbutton.c"
   $84 = (($78) + ($83))|0; //@line 276 "../../iup_flatbutton.c"
   HEAP32[$27>>2] = $84; //@line 276 "../../iup_flatbutton.c"
  }
 }
 if ((label|0) == 5) {
  $55 = HEAP32[$34>>2]|0; //@line 270 "../../iup_flatbutton.c"
  $56 = HEAP32[$32>>2]|0; //@line 270 "../../iup_flatbutton.c"
  $57 = (($55) + ($56))|0; //@line 270 "../../iup_flatbutton.c"
  $58 = $12; //@line 270 "../../iup_flatbutton.c"
  $59 = ((($58)) + 72|0); //@line 270 "../../iup_flatbutton.c"
  $60 = HEAP32[$59>>2]|0; //@line 270 "../../iup_flatbutton.c"
  $61 = ((($60)) + 8|0); //@line 270 "../../iup_flatbutton.c"
  $62 = HEAP32[$61>>2]|0; //@line 270 "../../iup_flatbutton.c"
  $63 = (($57) + ($62))|0; //@line 270 "../../iup_flatbutton.c"
  HEAP32[$26>>2] = $63; //@line 270 "../../iup_flatbutton.c"
  $64 = HEAP32[$35>>2]|0; //@line 271 "../../iup_flatbutton.c"
  $65 = HEAP32[$33>>2]|0; //@line 271 "../../iup_flatbutton.c"
  $66 = ($64|0)>($65|0); //@line 271 "../../iup_flatbutton.c"
  $67 = HEAP32[$35>>2]|0; //@line 271 "../../iup_flatbutton.c"
  $68 = HEAP32[$33>>2]|0; //@line 271 "../../iup_flatbutton.c"
  $69 = $66 ? $67 : $68; //@line 271 "../../iup_flatbutton.c"
  HEAP32[$27>>2] = $69; //@line 271 "../../iup_flatbutton.c"
 }
 $85 = $12; //@line 279 "../../iup_flatbutton.c"
 $86 = $16; //@line 279 "../../iup_flatbutton.c"
 $87 = $17; //@line 279 "../../iup_flatbutton.c"
 $88 = HEAP32[$26>>2]|0; //@line 279 "../../iup_flatbutton.c"
 $89 = HEAP32[$27>>2]|0; //@line 279 "../../iup_flatbutton.c"
 _iFlatButtonGetIconPosition($85,$86,$87,$24,$25,$88,$89); //@line 279 "../../iup_flatbutton.c"
 $90 = HEAP32[$24>>2]|0; //@line 281 "../../iup_flatbutton.c"
 $91 = HEAP32[$25>>2]|0; //@line 281 "../../iup_flatbutton.c"
 $92 = $12; //@line 281 "../../iup_flatbutton.c"
 $93 = ((($92)) + 72|0); //@line 281 "../../iup_flatbutton.c"
 $94 = HEAP32[$93>>2]|0; //@line 281 "../../iup_flatbutton.c"
 $95 = ((($94)) + 12|0); //@line 281 "../../iup_flatbutton.c"
 $96 = HEAP32[$95>>2]|0; //@line 281 "../../iup_flatbutton.c"
 $97 = $12; //@line 281 "../../iup_flatbutton.c"
 $98 = ((($97)) + 72|0); //@line 281 "../../iup_flatbutton.c"
 $99 = HEAP32[$98>>2]|0; //@line 281 "../../iup_flatbutton.c"
 $100 = ((($99)) + 8|0); //@line 281 "../../iup_flatbutton.c"
 $101 = HEAP32[$100>>2]|0; //@line 281 "../../iup_flatbutton.c"
 $102 = HEAP32[$34>>2]|0; //@line 282 "../../iup_flatbutton.c"
 $103 = HEAP32[$35>>2]|0; //@line 282 "../../iup_flatbutton.c"
 $104 = HEAP32[$32>>2]|0; //@line 282 "../../iup_flatbutton.c"
 $105 = HEAP32[$33>>2]|0; //@line 282 "../../iup_flatbutton.c"
 _iFlatButtonGetImageTextPosition($90,$91,$96,$101,$102,$103,$104,$105,$28,$29,$30,$31); //@line 281 "../../iup_flatbutton.c"
 $106 = $12; //@line 285 "../../iup_flatbutton.c"
 $107 = $13; //@line 285 "../../iup_flatbutton.c"
 $108 = HEAP32[$28>>2]|0; //@line 285 "../../iup_flatbutton.c"
 $109 = $14; //@line 285 "../../iup_flatbutton.c"
 $110 = (($108) + ($109))|0; //@line 285 "../../iup_flatbutton.c"
 $111 = HEAP32[$29>>2]|0; //@line 285 "../../iup_flatbutton.c"
 $112 = $15; //@line 285 "../../iup_flatbutton.c"
 $113 = (($111) + ($112))|0; //@line 285 "../../iup_flatbutton.c"
 $114 = $18; //@line 285 "../../iup_flatbutton.c"
 $115 = $19; //@line 285 "../../iup_flatbutton.c"
 $116 = $23; //@line 285 "../../iup_flatbutton.c"
 _iFlatButtonDrawImage($106,$107,$110,$113,$114,$115,$116); //@line 285 "../../iup_flatbutton.c"
 $117 = $12; //@line 286 "../../iup_flatbutton.c"
 $118 = $13; //@line 286 "../../iup_flatbutton.c"
 $119 = HEAP32[$30>>2]|0; //@line 286 "../../iup_flatbutton.c"
 $120 = $14; //@line 286 "../../iup_flatbutton.c"
 $121 = (($119) + ($120))|0; //@line 286 "../../iup_flatbutton.c"
 $122 = HEAP32[$31>>2]|0; //@line 286 "../../iup_flatbutton.c"
 $123 = $15; //@line 286 "../../iup_flatbutton.c"
 $124 = (($122) + ($123))|0; //@line 286 "../../iup_flatbutton.c"
 $125 = $20; //@line 286 "../../iup_flatbutton.c"
 $126 = $21; //@line 286 "../../iup_flatbutton.c"
 $127 = $22; //@line 286 "../../iup_flatbutton.c"
 $128 = $23; //@line 286 "../../iup_flatbutton.c"
 _iFlatButtonDrawText($117,$118,$121,$124,$125,$126,$127,$128); //@line 286 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 305 "../../iup_flatbutton.c"
}
function _iFlatButtonGetIconPosition($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $13 = $6;
 $14 = $7; //@line 169 "../../iup_flatbutton.c"
 $15 = ((($14)) + 72|0); //@line 169 "../../iup_flatbutton.c"
 $16 = HEAP32[$15>>2]|0; //@line 169 "../../iup_flatbutton.c"
 $17 = ((($16)) + 16|0); //@line 169 "../../iup_flatbutton.c"
 $18 = HEAP32[$17>>2]|0; //@line 169 "../../iup_flatbutton.c"
 $19 = ($18|0)==(2); //@line 169 "../../iup_flatbutton.c"
 do {
  if ($19) {
   $20 = $8; //@line 170 "../../iup_flatbutton.c"
   $21 = $12; //@line 170 "../../iup_flatbutton.c"
   $22 = $7; //@line 170 "../../iup_flatbutton.c"
   $23 = ((($22)) + 72|0); //@line 170 "../../iup_flatbutton.c"
   $24 = HEAP32[$23>>2]|0; //@line 170 "../../iup_flatbutton.c"
   $25 = HEAP32[$24>>2]|0; //@line 170 "../../iup_flatbutton.c"
   $26 = $25<<1; //@line 170 "../../iup_flatbutton.c"
   $27 = (($21) + ($26))|0; //@line 170 "../../iup_flatbutton.c"
   $28 = (($20) - ($27))|0; //@line 170 "../../iup_flatbutton.c"
   $29 = $10; //@line 170 "../../iup_flatbutton.c"
   HEAP32[$29>>2] = $28; //@line 170 "../../iup_flatbutton.c"
  } else {
   $30 = $7; //@line 171 "../../iup_flatbutton.c"
   $31 = ((($30)) + 72|0); //@line 171 "../../iup_flatbutton.c"
   $32 = HEAP32[$31>>2]|0; //@line 171 "../../iup_flatbutton.c"
   $33 = ((($32)) + 16|0); //@line 171 "../../iup_flatbutton.c"
   $34 = HEAP32[$33>>2]|0; //@line 171 "../../iup_flatbutton.c"
   $35 = ($34|0)==(1); //@line 171 "../../iup_flatbutton.c"
   if ($35) {
    $36 = $8; //@line 172 "../../iup_flatbutton.c"
    $37 = $12; //@line 172 "../../iup_flatbutton.c"
    $38 = $7; //@line 172 "../../iup_flatbutton.c"
    $39 = ((($38)) + 72|0); //@line 172 "../../iup_flatbutton.c"
    $40 = HEAP32[$39>>2]|0; //@line 172 "../../iup_flatbutton.c"
    $41 = HEAP32[$40>>2]|0; //@line 172 "../../iup_flatbutton.c"
    $42 = $41<<1; //@line 172 "../../iup_flatbutton.c"
    $43 = (($37) + ($42))|0; //@line 172 "../../iup_flatbutton.c"
    $44 = (($36) - ($43))|0; //@line 172 "../../iup_flatbutton.c"
    $45 = (($44|0) / 2)&-1; //@line 172 "../../iup_flatbutton.c"
    $46 = $10; //@line 172 "../../iup_flatbutton.c"
    HEAP32[$46>>2] = $45; //@line 172 "../../iup_flatbutton.c"
    break;
   } else {
    $47 = $10; //@line 174 "../../iup_flatbutton.c"
    HEAP32[$47>>2] = 0; //@line 174 "../../iup_flatbutton.c"
    break;
   }
  }
 } while(0);
 $48 = $7; //@line 176 "../../iup_flatbutton.c"
 $49 = ((($48)) + 72|0); //@line 176 "../../iup_flatbutton.c"
 $50 = HEAP32[$49>>2]|0; //@line 176 "../../iup_flatbutton.c"
 $51 = ((($50)) + 20|0); //@line 176 "../../iup_flatbutton.c"
 $52 = HEAP32[$51>>2]|0; //@line 176 "../../iup_flatbutton.c"
 $53 = ($52|0)==(2); //@line 176 "../../iup_flatbutton.c"
 do {
  if ($53) {
   $54 = $9; //@line 177 "../../iup_flatbutton.c"
   $55 = $13; //@line 177 "../../iup_flatbutton.c"
   $56 = $7; //@line 177 "../../iup_flatbutton.c"
   $57 = ((($56)) + 72|0); //@line 177 "../../iup_flatbutton.c"
   $58 = HEAP32[$57>>2]|0; //@line 177 "../../iup_flatbutton.c"
   $59 = ((($58)) + 4|0); //@line 177 "../../iup_flatbutton.c"
   $60 = HEAP32[$59>>2]|0; //@line 177 "../../iup_flatbutton.c"
   $61 = $60<<1; //@line 177 "../../iup_flatbutton.c"
   $62 = (($55) + ($61))|0; //@line 177 "../../iup_flatbutton.c"
   $63 = (($54) - ($62))|0; //@line 177 "../../iup_flatbutton.c"
   $64 = $11; //@line 177 "../../iup_flatbutton.c"
   HEAP32[$64>>2] = $63; //@line 177 "../../iup_flatbutton.c"
  } else {
   $65 = $7; //@line 178 "../../iup_flatbutton.c"
   $66 = ((($65)) + 72|0); //@line 178 "../../iup_flatbutton.c"
   $67 = HEAP32[$66>>2]|0; //@line 178 "../../iup_flatbutton.c"
   $68 = ((($67)) + 20|0); //@line 178 "../../iup_flatbutton.c"
   $69 = HEAP32[$68>>2]|0; //@line 178 "../../iup_flatbutton.c"
   $70 = ($69|0)==(1); //@line 178 "../../iup_flatbutton.c"
   if ($70) {
    $71 = $9; //@line 179 "../../iup_flatbutton.c"
    $72 = $13; //@line 179 "../../iup_flatbutton.c"
    $73 = $7; //@line 179 "../../iup_flatbutton.c"
    $74 = ((($73)) + 72|0); //@line 179 "../../iup_flatbutton.c"
    $75 = HEAP32[$74>>2]|0; //@line 179 "../../iup_flatbutton.c"
    $76 = ((($75)) + 4|0); //@line 179 "../../iup_flatbutton.c"
    $77 = HEAP32[$76>>2]|0; //@line 179 "../../iup_flatbutton.c"
    $78 = $77<<1; //@line 179 "../../iup_flatbutton.c"
    $79 = (($72) + ($78))|0; //@line 179 "../../iup_flatbutton.c"
    $80 = (($71) - ($79))|0; //@line 179 "../../iup_flatbutton.c"
    $81 = (($80|0) / 2)&-1; //@line 179 "../../iup_flatbutton.c"
    $82 = $11; //@line 179 "../../iup_flatbutton.c"
    HEAP32[$82>>2] = $81; //@line 179 "../../iup_flatbutton.c"
    break;
   } else {
    $83 = $11; //@line 181 "../../iup_flatbutton.c"
    HEAP32[$83>>2] = 0; //@line 181 "../../iup_flatbutton.c"
    break;
   }
  }
 } while(0);
 $84 = $7; //@line 183 "../../iup_flatbutton.c"
 $85 = ((($84)) + 72|0); //@line 183 "../../iup_flatbutton.c"
 $86 = HEAP32[$85>>2]|0; //@line 183 "../../iup_flatbutton.c"
 $87 = HEAP32[$86>>2]|0; //@line 183 "../../iup_flatbutton.c"
 $88 = $10; //@line 183 "../../iup_flatbutton.c"
 $89 = HEAP32[$88>>2]|0; //@line 183 "../../iup_flatbutton.c"
 $90 = (($89) + ($87))|0; //@line 183 "../../iup_flatbutton.c"
 HEAP32[$88>>2] = $90; //@line 183 "../../iup_flatbutton.c"
 $91 = $7; //@line 184 "../../iup_flatbutton.c"
 $92 = ((($91)) + 72|0); //@line 184 "../../iup_flatbutton.c"
 $93 = HEAP32[$92>>2]|0; //@line 184 "../../iup_flatbutton.c"
 $94 = ((($93)) + 4|0); //@line 184 "../../iup_flatbutton.c"
 $95 = HEAP32[$94>>2]|0; //@line 184 "../../iup_flatbutton.c"
 $96 = $11; //@line 184 "../../iup_flatbutton.c"
 $97 = HEAP32[$96>>2]|0; //@line 184 "../../iup_flatbutton.c"
 $98 = (($97) + ($95))|0; //@line 184 "../../iup_flatbutton.c"
 HEAP32[$96>>2] = $98; //@line 184 "../../iup_flatbutton.c"
 STACKTOP = sp;return; //@line 185 "../../iup_flatbutton.c"
}
function _iFlatButtonGetImageTextPosition($0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 $10 = $10|0;
 $11 = $11|0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $12 = $0;
 $13 = $1;
 $14 = $2;
 $15 = $3;
 $16 = $4;
 $17 = $5;
 $18 = $6;
 $19 = $7;
 $20 = $8;
 $21 = $9;
 $22 = $10;
 $23 = $11;
 $24 = $14; //@line 191 "../../iup_flatbutton.c"
 switch ($24|0) {
 case 2:  {
  $25 = $13; //@line 194 "../../iup_flatbutton.c"
  $26 = $21; //@line 194 "../../iup_flatbutton.c"
  HEAP32[$26>>2] = $25; //@line 194 "../../iup_flatbutton.c"
  $27 = $13; //@line 195 "../../iup_flatbutton.c"
  $28 = $17; //@line 195 "../../iup_flatbutton.c"
  $29 = (($27) + ($28))|0; //@line 195 "../../iup_flatbutton.c"
  $30 = $15; //@line 195 "../../iup_flatbutton.c"
  $31 = (($29) + ($30))|0; //@line 195 "../../iup_flatbutton.c"
  $32 = $23; //@line 195 "../../iup_flatbutton.c"
  HEAP32[$32>>2] = $31; //@line 195 "../../iup_flatbutton.c"
  $33 = $16; //@line 196 "../../iup_flatbutton.c"
  $34 = $18; //@line 196 "../../iup_flatbutton.c"
  $35 = ($33|0)>($34|0); //@line 196 "../../iup_flatbutton.c"
  $36 = $12; //@line 198 "../../iup_flatbutton.c"
  if ($35) {
   $37 = $20; //@line 198 "../../iup_flatbutton.c"
   HEAP32[$37>>2] = $36; //@line 198 "../../iup_flatbutton.c"
   $38 = $12; //@line 199 "../../iup_flatbutton.c"
   $39 = $16; //@line 199 "../../iup_flatbutton.c"
   $40 = $18; //@line 199 "../../iup_flatbutton.c"
   $41 = (($39) - ($40))|0; //@line 199 "../../iup_flatbutton.c"
   $42 = (($41|0) / 2)&-1; //@line 199 "../../iup_flatbutton.c"
   $43 = (($38) + ($42))|0; //@line 199 "../../iup_flatbutton.c"
   $44 = $22; //@line 199 "../../iup_flatbutton.c"
   HEAP32[$44>>2] = $43; //@line 199 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  } else {
   $45 = $18; //@line 203 "../../iup_flatbutton.c"
   $46 = $16; //@line 203 "../../iup_flatbutton.c"
   $47 = (($45) - ($46))|0; //@line 203 "../../iup_flatbutton.c"
   $48 = (($47|0) / 2)&-1; //@line 203 "../../iup_flatbutton.c"
   $49 = (($36) + ($48))|0; //@line 203 "../../iup_flatbutton.c"
   $50 = $20; //@line 203 "../../iup_flatbutton.c"
   HEAP32[$50>>2] = $49; //@line 203 "../../iup_flatbutton.c"
   $51 = $12; //@line 204 "../../iup_flatbutton.c"
   $52 = $22; //@line 204 "../../iup_flatbutton.c"
   HEAP32[$52>>2] = $51; //@line 204 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  }
  break;
 }
 case 3:  {
  $53 = $13; //@line 208 "../../iup_flatbutton.c"
  $54 = $19; //@line 208 "../../iup_flatbutton.c"
  $55 = (($53) + ($54))|0; //@line 208 "../../iup_flatbutton.c"
  $56 = $15; //@line 208 "../../iup_flatbutton.c"
  $57 = (($55) + ($56))|0; //@line 208 "../../iup_flatbutton.c"
  $58 = $21; //@line 208 "../../iup_flatbutton.c"
  HEAP32[$58>>2] = $57; //@line 208 "../../iup_flatbutton.c"
  $59 = $13; //@line 209 "../../iup_flatbutton.c"
  $60 = $23; //@line 209 "../../iup_flatbutton.c"
  HEAP32[$60>>2] = $59; //@line 209 "../../iup_flatbutton.c"
  $61 = $16; //@line 210 "../../iup_flatbutton.c"
  $62 = $18; //@line 210 "../../iup_flatbutton.c"
  $63 = ($61|0)>($62|0); //@line 210 "../../iup_flatbutton.c"
  $64 = $12; //@line 212 "../../iup_flatbutton.c"
  if ($63) {
   $65 = $20; //@line 212 "../../iup_flatbutton.c"
   HEAP32[$65>>2] = $64; //@line 212 "../../iup_flatbutton.c"
   $66 = $12; //@line 213 "../../iup_flatbutton.c"
   $67 = $16; //@line 213 "../../iup_flatbutton.c"
   $68 = $18; //@line 213 "../../iup_flatbutton.c"
   $69 = (($67) - ($68))|0; //@line 213 "../../iup_flatbutton.c"
   $70 = (($69|0) / 2)&-1; //@line 213 "../../iup_flatbutton.c"
   $71 = (($66) + ($70))|0; //@line 213 "../../iup_flatbutton.c"
   $72 = $22; //@line 213 "../../iup_flatbutton.c"
   HEAP32[$72>>2] = $71; //@line 213 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  } else {
   $73 = $18; //@line 217 "../../iup_flatbutton.c"
   $74 = $16; //@line 217 "../../iup_flatbutton.c"
   $75 = (($73) - ($74))|0; //@line 217 "../../iup_flatbutton.c"
   $76 = (($75|0) / 2)&-1; //@line 217 "../../iup_flatbutton.c"
   $77 = (($64) + ($76))|0; //@line 217 "../../iup_flatbutton.c"
   $78 = $20; //@line 217 "../../iup_flatbutton.c"
   HEAP32[$78>>2] = $77; //@line 217 "../../iup_flatbutton.c"
   $79 = $12; //@line 218 "../../iup_flatbutton.c"
   $80 = $22; //@line 218 "../../iup_flatbutton.c"
   HEAP32[$80>>2] = $79; //@line 218 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  }
  break;
 }
 case 1:  {
  $81 = $12; //@line 222 "../../iup_flatbutton.c"
  $82 = $18; //@line 222 "../../iup_flatbutton.c"
  $83 = (($81) + ($82))|0; //@line 222 "../../iup_flatbutton.c"
  $84 = $15; //@line 222 "../../iup_flatbutton.c"
  $85 = (($83) + ($84))|0; //@line 222 "../../iup_flatbutton.c"
  $86 = $20; //@line 222 "../../iup_flatbutton.c"
  HEAP32[$86>>2] = $85; //@line 222 "../../iup_flatbutton.c"
  $87 = $12; //@line 223 "../../iup_flatbutton.c"
  $88 = $22; //@line 223 "../../iup_flatbutton.c"
  HEAP32[$88>>2] = $87; //@line 223 "../../iup_flatbutton.c"
  $89 = $17; //@line 224 "../../iup_flatbutton.c"
  $90 = $19; //@line 224 "../../iup_flatbutton.c"
  $91 = ($89|0)>($90|0); //@line 224 "../../iup_flatbutton.c"
  $92 = $13; //@line 226 "../../iup_flatbutton.c"
  if ($91) {
   $93 = $21; //@line 226 "../../iup_flatbutton.c"
   HEAP32[$93>>2] = $92; //@line 226 "../../iup_flatbutton.c"
   $94 = $13; //@line 227 "../../iup_flatbutton.c"
   $95 = $17; //@line 227 "../../iup_flatbutton.c"
   $96 = $19; //@line 227 "../../iup_flatbutton.c"
   $97 = (($95) - ($96))|0; //@line 227 "../../iup_flatbutton.c"
   $98 = (($97|0) / 2)&-1; //@line 227 "../../iup_flatbutton.c"
   $99 = (($94) + ($98))|0; //@line 227 "../../iup_flatbutton.c"
   $100 = $23; //@line 227 "../../iup_flatbutton.c"
   HEAP32[$100>>2] = $99; //@line 227 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  } else {
   $101 = $19; //@line 231 "../../iup_flatbutton.c"
   $102 = $17; //@line 231 "../../iup_flatbutton.c"
   $103 = (($101) - ($102))|0; //@line 231 "../../iup_flatbutton.c"
   $104 = (($103|0) / 2)&-1; //@line 231 "../../iup_flatbutton.c"
   $105 = (($92) + ($104))|0; //@line 231 "../../iup_flatbutton.c"
   $106 = $21; //@line 231 "../../iup_flatbutton.c"
   HEAP32[$106>>2] = $105; //@line 231 "../../iup_flatbutton.c"
   $107 = $13; //@line 232 "../../iup_flatbutton.c"
   $108 = $23; //@line 232 "../../iup_flatbutton.c"
   HEAP32[$108>>2] = $107; //@line 232 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  }
  break;
 }
 default: {
  $109 = $12; //@line 236 "../../iup_flatbutton.c"
  $110 = $20; //@line 236 "../../iup_flatbutton.c"
  HEAP32[$110>>2] = $109; //@line 236 "../../iup_flatbutton.c"
  $111 = $12; //@line 237 "../../iup_flatbutton.c"
  $112 = $16; //@line 237 "../../iup_flatbutton.c"
  $113 = (($111) + ($112))|0; //@line 237 "../../iup_flatbutton.c"
  $114 = $15; //@line 237 "../../iup_flatbutton.c"
  $115 = (($113) + ($114))|0; //@line 237 "../../iup_flatbutton.c"
  $116 = $22; //@line 237 "../../iup_flatbutton.c"
  HEAP32[$116>>2] = $115; //@line 237 "../../iup_flatbutton.c"
  $117 = $17; //@line 238 "../../iup_flatbutton.c"
  $118 = $19; //@line 238 "../../iup_flatbutton.c"
  $119 = ($117|0)>($118|0); //@line 238 "../../iup_flatbutton.c"
  $120 = $13; //@line 240 "../../iup_flatbutton.c"
  if ($119) {
   $121 = $21; //@line 240 "../../iup_flatbutton.c"
   HEAP32[$121>>2] = $120; //@line 240 "../../iup_flatbutton.c"
   $122 = $13; //@line 241 "../../iup_flatbutton.c"
   $123 = $17; //@line 241 "../../iup_flatbutton.c"
   $124 = $19; //@line 241 "../../iup_flatbutton.c"
   $125 = (($123) - ($124))|0; //@line 241 "../../iup_flatbutton.c"
   $126 = (($125|0) / 2)&-1; //@line 241 "../../iup_flatbutton.c"
   $127 = (($122) + ($126))|0; //@line 241 "../../iup_flatbutton.c"
   $128 = $23; //@line 241 "../../iup_flatbutton.c"
   HEAP32[$128>>2] = $127; //@line 241 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  } else {
   $129 = $19; //@line 245 "../../iup_flatbutton.c"
   $130 = $17; //@line 245 "../../iup_flatbutton.c"
   $131 = (($129) - ($130))|0; //@line 245 "../../iup_flatbutton.c"
   $132 = (($131|0) / 2)&-1; //@line 245 "../../iup_flatbutton.c"
   $133 = (($120) + ($132))|0; //@line 245 "../../iup_flatbutton.c"
   $134 = $21; //@line 245 "../../iup_flatbutton.c"
   HEAP32[$134>>2] = $133; //@line 245 "../../iup_flatbutton.c"
   $135 = $13; //@line 246 "../../iup_flatbutton.c"
   $136 = $23; //@line 246 "../../iup_flatbutton.c"
   HEAP32[$136>>2] = $135; //@line 246 "../../iup_flatbutton.c"
   STACKTOP = sp;return; //@line 250 "../../iup_flatbutton.c"
  }
 }
 }
}
function _iFlatButtonGetImageName($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = 0; //@line 111 "../../iup_flatbutton.c"
 $12 = $10; //@line 113 "../../iup_flatbutton.c"
 HEAP32[$12>>2] = 0; //@line 113 "../../iup_flatbutton.c"
 $13 = $7; //@line 115 "../../iup_flatbutton.c"
 $14 = ($13|0)!=(0|0); //@line 115 "../../iup_flatbutton.c"
 do {
  if ($14) {
   $15 = $9; //@line 117 "../../iup_flatbutton.c"
   $16 = ($15|0)!=(0); //@line 117 "../../iup_flatbutton.c"
   $17 = $6; //@line 119 "../../iup_flatbutton.c"
   if (!($16)) {
    $34 = $7; //@line 129 "../../iup_flatbutton.c"
    $35 = (_iFlatButtonMakeImageName($17,$34,12557)|0); //@line 129 "../../iup_flatbutton.c"
    $11 = $35; //@line 129 "../../iup_flatbutton.c"
    $36 = $11; //@line 130 "../../iup_flatbutton.c"
    $37 = ($36|0)!=(0|0); //@line 130 "../../iup_flatbutton.c"
    if ($37) {
     break;
    }
    $38 = $10; //@line 131 "../../iup_flatbutton.c"
    HEAP32[$38>>2] = 1; //@line 131 "../../iup_flatbutton.c"
    break;
   }
   $18 = ((($17)) + 72|0); //@line 119 "../../iup_flatbutton.c"
   $19 = HEAP32[$18>>2]|0; //@line 119 "../../iup_flatbutton.c"
   $20 = ((($19)) + 36|0); //@line 119 "../../iup_flatbutton.c"
   $21 = HEAP32[$20>>2]|0; //@line 119 "../../iup_flatbutton.c"
   $22 = ($21|0)!=(0); //@line 119 "../../iup_flatbutton.c"
   $23 = $6; //@line 120 "../../iup_flatbutton.c"
   if ($22) {
    $24 = $7; //@line 120 "../../iup_flatbutton.c"
    $25 = (_iFlatButtonMakeImageName($23,$24,12541)|0); //@line 120 "../../iup_flatbutton.c"
    $11 = $25; //@line 120 "../../iup_flatbutton.c"
    break;
   }
   $26 = ((($23)) + 72|0); //@line 123 "../../iup_flatbutton.c"
   $27 = HEAP32[$26>>2]|0; //@line 123 "../../iup_flatbutton.c"
   $28 = ((($27)) + 32|0); //@line 123 "../../iup_flatbutton.c"
   $29 = HEAP32[$28>>2]|0; //@line 123 "../../iup_flatbutton.c"
   $30 = ($29|0)!=(0); //@line 123 "../../iup_flatbutton.c"
   if ($30) {
    $31 = $6; //@line 124 "../../iup_flatbutton.c"
    $32 = $7; //@line 124 "../../iup_flatbutton.c"
    $33 = (_iFlatButtonMakeImageName($31,$32,12547)|0); //@line 124 "../../iup_flatbutton.c"
    $11 = $33; //@line 124 "../../iup_flatbutton.c"
   }
  }
 } while(0);
 $39 = $11; //@line 135 "../../iup_flatbutton.c"
 $40 = ($39|0)!=(0|0); //@line 135 "../../iup_flatbutton.c"
 if ($40) {
  $41 = $11; //@line 136 "../../iup_flatbutton.c"
  $5 = $41; //@line 136 "../../iup_flatbutton.c"
  $43 = $5; //@line 139 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($43|0); //@line 139 "../../iup_flatbutton.c"
 } else {
  $42 = $8; //@line 138 "../../iup_flatbutton.c"
  $5 = $42; //@line 138 "../../iup_flatbutton.c"
  $43 = $5; //@line 139 "../../iup_flatbutton.c"
  STACKTOP = sp;return ($43|0); //@line 139 "../../iup_flatbutton.c"
 }
 return (0)|0;
}
function _iFlatButtonMakeImageName($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1040|0);
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 104 "../../iup_flatbutton.c"
 (_strcpy($6,$7)|0); //@line 104 "../../iup_flatbutton.c"
 $8 = $5; //@line 105 "../../iup_flatbutton.c"
 (_strcat($6,$8)|0); //@line 105 "../../iup_flatbutton.c"
 $9 = $3; //@line 106 "../../iup_flatbutton.c"
 $10 = (_iupAttribGet($9,$6)|0); //@line 106 "../../iup_flatbutton.c"
 STACKTOP = sp;return ($10|0); //@line 106 "../../iup_flatbutton.c"
}
function _iupFocusCanAccept($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 39 "../../iup_focus.c"
 $4 = ((($3)) + 4|0); //@line 39 "../../iup_focus.c"
 $5 = HEAP32[$4>>2]|0; //@line 39 "../../iup_focus.c"
 $6 = ((($5)) + 16|0); //@line 39 "../../iup_focus.c"
 $7 = HEAP32[$6>>2]|0; //@line 39 "../../iup_focus.c"
 $8 = ($7|0)!=(0); //@line 39 "../../iup_focus.c"
 if ($8) {
  $9 = $2; //@line 40 "../../iup_focus.c"
  $10 = (_iupAttribGetBoolean($9,15995)|0); //@line 40 "../../iup_focus.c"
  $11 = ($10|0)!=(0); //@line 40 "../../iup_focus.c"
  if ($11) {
   $12 = $2; //@line 41 "../../iup_focus.c"
   $13 = ((($12)) + 16|0); //@line 41 "../../iup_focus.c"
   $14 = HEAP32[$13>>2]|0; //@line 41 "../../iup_focus.c"
   $15 = ($14|0)!=(0|0); //@line 41 "../../iup_focus.c"
   if ($15) {
    $16 = $2; //@line 42 "../../iup_focus.c"
    $17 = (_IupGetInt($16,12566)|0); //@line 42 "../../iup_focus.c"
    $18 = ($17|0)!=(0); //@line 42 "../../iup_focus.c"
    if ($18) {
     $19 = $2; //@line 43 "../../iup_focus.c"
     $20 = (_IupGetInt($19,20132)|0); //@line 43 "../../iup_focus.c"
     $21 = ($20|0)!=(0); //@line 43 "../../iup_focus.c"
     if ($21) {
      $1 = 1; //@line 44 "../../iup_focus.c"
      $22 = $1; //@line 47 "../../iup_focus.c"
      STACKTOP = sp;return ($22|0); //@line 47 "../../iup_focus.c"
     }
    }
   }
  }
 }
 $1 = 0; //@line 46 "../../iup_focus.c"
 $22 = $1; //@line 47 "../../iup_focus.c"
 STACKTOP = sp;return ($22|0); //@line 47 "../../iup_focus.c"
}
function _IupNextField($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 121 "../../iup_focus.c"
 $5 = (_iupObjectCheck($4)|0); //@line 121 "../../iup_focus.c"
 $6 = ($5|0)!=(0); //@line 121 "../../iup_focus.c"
 do {
  if ($6) {
   $7 = $2; //@line 124 "../../iup_focus.c"
   $8 = (_iFocusFindNext($7,1)|0); //@line 124 "../../iup_focus.c"
   $3 = $8; //@line 124 "../../iup_focus.c"
   $9 = $3; //@line 125 "../../iup_focus.c"
   $10 = ($9|0)!=(0|0); //@line 125 "../../iup_focus.c"
   if (!($10)) {
    $11 = $2; //@line 129 "../../iup_focus.c"
    $12 = (_IupGetDialog($11)|0); //@line 129 "../../iup_focus.c"
    $13 = (_iFocusFindNext($12,1)|0); //@line 129 "../../iup_focus.c"
    $3 = $13; //@line 129 "../../iup_focus.c"
    $14 = $3; //@line 130 "../../iup_focus.c"
    $15 = $2; //@line 130 "../../iup_focus.c"
    $16 = ($14|0)==($15|0); //@line 130 "../../iup_focus.c"
    if ($16) {
     $1 = 0; //@line 131 "../../iup_focus.c"
     break;
    }
   }
   $17 = $3; //@line 134 "../../iup_focus.c"
   $18 = ($17|0)!=(0|0); //@line 134 "../../iup_focus.c"
   if ($18) {
    $19 = $3; //@line 136 "../../iup_focus.c"
    _iupdrvSetFocus($19); //@line 136 "../../iup_focus.c"
    $20 = $3; //@line 137 "../../iup_focus.c"
    $1 = $20; //@line 137 "../../iup_focus.c"
    break;
   } else {
    $1 = 0; //@line 140 "../../iup_focus.c"
    break;
   }
  } else {
   $1 = 0; //@line 122 "../../iup_focus.c"
  }
 } while(0);
 $21 = $1; //@line 141 "../../iup_focus.c"
 STACKTOP = sp;return ($21|0); //@line 141 "../../iup_focus.c"
}
function _iFocusFindNext($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 83 "../../iup_focus.c"
 $8 = ($7|0)!=(0|0); //@line 83 "../../iup_focus.c"
 if (!($8)) {
  $2 = 0; //@line 84 "../../iup_focus.c"
  $57 = $2; //@line 114 "../../iup_focus.c"
  STACKTOP = sp;return ($57|0); //@line 114 "../../iup_focus.c"
 }
 $9 = $3; //@line 87 "../../iup_focus.c"
 $10 = ((($9)) + 64|0); //@line 87 "../../iup_focus.c"
 $11 = HEAP32[$10>>2]|0; //@line 87 "../../iup_focus.c"
 $12 = ($11|0)!=(0|0); //@line 87 "../../iup_focus.c"
 if ($12) {
  $13 = $3; //@line 89 "../../iup_focus.c"
  $14 = ((($13)) + 64|0); //@line 89 "../../iup_focus.c"
  $15 = HEAP32[$14>>2]|0; //@line 89 "../../iup_focus.c"
  $16 = $4; //@line 89 "../../iup_focus.c"
  $17 = (_iFocusFindAtBrothers($15,$16)|0); //@line 89 "../../iup_focus.c"
  $5 = $17; //@line 89 "../../iup_focus.c"
  $18 = $5; //@line 90 "../../iup_focus.c"
  $19 = ($18|0)!=(0|0); //@line 90 "../../iup_focus.c"
  if ($19) {
   $20 = $5; //@line 90 "../../iup_focus.c"
   $2 = $20; //@line 90 "../../iup_focus.c"
   $57 = $2; //@line 114 "../../iup_focus.c"
   STACKTOP = sp;return ($57|0); //@line 114 "../../iup_focus.c"
  }
 }
 $21 = $3; //@line 94 "../../iup_focus.c"
 $22 = ((($21)) + 68|0); //@line 94 "../../iup_focus.c"
 $23 = HEAP32[$22>>2]|0; //@line 94 "../../iup_focus.c"
 $24 = ($23|0)!=(0|0); //@line 94 "../../iup_focus.c"
 if ($24) {
  $25 = $3; //@line 96 "../../iup_focus.c"
  $26 = ((($25)) + 68|0); //@line 96 "../../iup_focus.c"
  $27 = HEAP32[$26>>2]|0; //@line 96 "../../iup_focus.c"
  $28 = $4; //@line 96 "../../iup_focus.c"
  $29 = (_iFocusFindAtBrothers($27,$28)|0); //@line 96 "../../iup_focus.c"
  $5 = $29; //@line 96 "../../iup_focus.c"
  $30 = $5; //@line 97 "../../iup_focus.c"
  $31 = ($30|0)!=(0|0); //@line 97 "../../iup_focus.c"
  if ($31) {
   $32 = $5; //@line 97 "../../iup_focus.c"
   $2 = $32; //@line 97 "../../iup_focus.c"
   $57 = $2; //@line 114 "../../iup_focus.c"
   STACKTOP = sp;return ($57|0); //@line 114 "../../iup_focus.c"
  }
 }
 $33 = $3; //@line 101 "../../iup_focus.c"
 $34 = ((($33)) + 60|0); //@line 101 "../../iup_focus.c"
 $35 = HEAP32[$34>>2]|0; //@line 101 "../../iup_focus.c"
 $36 = ($35|0)!=(0|0); //@line 101 "../../iup_focus.c"
 L15: do {
  if ($36) {
   $37 = $3; //@line 103 "../../iup_focus.c"
   $38 = ((($37)) + 60|0); //@line 103 "../../iup_focus.c"
   $39 = HEAP32[$38>>2]|0; //@line 103 "../../iup_focus.c"
   $6 = $39; //@line 103 "../../iup_focus.c"
   while(1) {
    $40 = $6; //@line 103 "../../iup_focus.c"
    $41 = ($40|0)!=(0|0); //@line 103 "../../iup_focus.c"
    if (!($41)) {
     break L15;
    }
    $42 = $6; //@line 105 "../../iup_focus.c"
    $43 = ((($42)) + 68|0); //@line 105 "../../iup_focus.c"
    $44 = HEAP32[$43>>2]|0; //@line 105 "../../iup_focus.c"
    $45 = ($44|0)!=(0|0); //@line 105 "../../iup_focus.c"
    if ($45) {
     $46 = $6; //@line 107 "../../iup_focus.c"
     $47 = ((($46)) + 68|0); //@line 107 "../../iup_focus.c"
     $48 = HEAP32[$47>>2]|0; //@line 107 "../../iup_focus.c"
     $49 = $4; //@line 107 "../../iup_focus.c"
     $50 = (_iFocusFindAtBrothers($48,$49)|0); //@line 107 "../../iup_focus.c"
     $5 = $50; //@line 107 "../../iup_focus.c"
     $51 = $5; //@line 108 "../../iup_focus.c"
     $52 = ($51|0)!=(0|0); //@line 108 "../../iup_focus.c"
     if ($52) {
      break;
     }
    }
    $54 = $6; //@line 103 "../../iup_focus.c"
    $55 = ((($54)) + 60|0); //@line 103 "../../iup_focus.c"
    $56 = HEAP32[$55>>2]|0; //@line 103 "../../iup_focus.c"
    $6 = $56; //@line 103 "../../iup_focus.c"
   }
   $53 = $5; //@line 108 "../../iup_focus.c"
   $2 = $53; //@line 108 "../../iup_focus.c"
   $57 = $2; //@line 114 "../../iup_focus.c"
   STACKTOP = sp;return ($57|0); //@line 114 "../../iup_focus.c"
  }
 } while(0);
 $2 = 0; //@line 113 "../../iup_focus.c"
 $57 = $2; //@line 114 "../../iup_focus.c"
 STACKTOP = sp;return ($57|0); //@line 114 "../../iup_focus.c"
}
function _iFocusFindAtBrothers($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 64 "../../iup_focus.c"
 $5 = $7; //@line 64 "../../iup_focus.c"
 while(1) {
  $8 = $5; //@line 64 "../../iup_focus.c"
  $9 = ($8|0)!=(0|0); //@line 64 "../../iup_focus.c"
  if (!($9)) {
   label = 10;
   break;
  }
  $10 = $5; //@line 67 "../../iup_focus.c"
  $11 = (_iupFocusCanAccept($10)|0); //@line 67 "../../iup_focus.c"
  $12 = ($11|0)!=(0); //@line 67 "../../iup_focus.c"
  if ($12) {
   $13 = $4; //@line 67 "../../iup_focus.c"
   $14 = ($13|0)!=(0); //@line 67 "../../iup_focus.c"
   if (!($14)) {
    label = 6;
    break;
   }
   $15 = $5; //@line 67 "../../iup_focus.c"
   $16 = (_iFocusCheckActiveRadio($15)|0); //@line 67 "../../iup_focus.c"
   $17 = ($16|0)!=(0); //@line 67 "../../iup_focus.c"
   if ($17) {
    label = 6;
    break;
   }
  }
  $19 = $5; //@line 71 "../../iup_focus.c"
  $20 = ((($19)) + 64|0); //@line 71 "../../iup_focus.c"
  $21 = HEAP32[$20>>2]|0; //@line 71 "../../iup_focus.c"
  $22 = $4; //@line 71 "../../iup_focus.c"
  $23 = (_iFocusFindAtBrothers($21,$22)|0); //@line 71 "../../iup_focus.c"
  $6 = $23; //@line 71 "../../iup_focus.c"
  $24 = $6; //@line 72 "../../iup_focus.c"
  $25 = ($24|0)!=(0|0); //@line 72 "../../iup_focus.c"
  if ($25) {
   label = 8;
   break;
  }
  $27 = $5; //@line 64 "../../iup_focus.c"
  $28 = ((($27)) + 68|0); //@line 64 "../../iup_focus.c"
  $29 = HEAP32[$28>>2]|0; //@line 64 "../../iup_focus.c"
  $5 = $29; //@line 64 "../../iup_focus.c"
 }
 if ((label|0) == 6) {
  $18 = $5; //@line 68 "../../iup_focus.c"
  $2 = $18; //@line 68 "../../iup_focus.c"
  $30 = $2; //@line 77 "../../iup_focus.c"
  STACKTOP = sp;return ($30|0); //@line 77 "../../iup_focus.c"
 }
 else if ((label|0) == 8) {
  $26 = $6; //@line 73 "../../iup_focus.c"
  $2 = $26; //@line 73 "../../iup_focus.c"
  $30 = $2; //@line 77 "../../iup_focus.c"
  STACKTOP = sp;return ($30|0); //@line 77 "../../iup_focus.c"
 }
 else if ((label|0) == 10) {
  $2 = 0; //@line 76 "../../iup_focus.c"
  $30 = $2; //@line 77 "../../iup_focus.c"
  STACKTOP = sp;return ($30|0); //@line 77 "../../iup_focus.c"
 }
 return (0)|0;
}
function _iFocusCheckActiveRadio($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 51 "../../iup_focus.c"
 $4 = (_IupClassMatch($3,17789)|0); //@line 51 "../../iup_focus.c"
 $5 = ($4|0)!=(0); //@line 51 "../../iup_focus.c"
 if ($5) {
  $6 = $2; //@line 52 "../../iup_focus.c"
  $7 = (_IupGetInt($6,17799)|0); //@line 52 "../../iup_focus.c"
  $8 = ($7|0)!=(0); //@line 52 "../../iup_focus.c"
  if ($8) {
   $9 = $2; //@line 53 "../../iup_focus.c"
   $10 = (_IupGetInt($9,20104)|0); //@line 53 "../../iup_focus.c"
   $11 = ($10|0)!=(0); //@line 53 "../../iup_focus.c"
   if (!($11)) {
    $1 = 0; //@line 54 "../../iup_focus.c"
    $12 = $1; //@line 57 "../../iup_focus.c"
    STACKTOP = sp;return ($12|0); //@line 57 "../../iup_focus.c"
   }
  }
 }
 $1 = 1; //@line 56 "../../iup_focus.c"
 $12 = $1; //@line 57 "../../iup_focus.c"
 STACKTOP = sp;return ($12|0); //@line 57 "../../iup_focus.c"
}
function _IupGetFocus() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 225 "../../iup_focus.c"
}
function _IupSetFocus($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = (_IupGetFocus()|0); //@line 235 "../../iup_focus.c"
 $3 = $4; //@line 235 "../../iup_focus.c"
 $5 = $2; //@line 238 "../../iup_focus.c"
 $6 = (_iupObjectCheck($5)|0); //@line 238 "../../iup_focus.c"
 $7 = ($6|0)!=(0); //@line 238 "../../iup_focus.c"
 if (!($7)) {
  $8 = $3; //@line 239 "../../iup_focus.c"
  $1 = $8; //@line 239 "../../iup_focus.c"
  $14 = $1; //@line 248 "../../iup_focus.c"
  STACKTOP = sp;return ($14|0); //@line 248 "../../iup_focus.c"
 }
 $9 = $2; //@line 244 "../../iup_focus.c"
 $10 = (_iupFocusCanAccept($9)|0); //@line 244 "../../iup_focus.c"
 $11 = ($10|0)!=(0); //@line 244 "../../iup_focus.c"
 if ($11) {
  $12 = $2; //@line 245 "../../iup_focus.c"
  _iupdrvSetFocus($12); //@line 245 "../../iup_focus.c"
 }
 $13 = $3; //@line 247 "../../iup_focus.c"
 $1 = $13; //@line 247 "../../iup_focus.c"
 $14 = $1; //@line 248 "../../iup_focus.c"
 STACKTOP = sp;return ($14|0); //@line 248 "../../iup_focus.c"
}
function _iupFontParsePango($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $18 = sp + 12|0;
 $21 = sp;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $22 = $8; //@line 552 "../../iup_font.c"
 $23 = HEAP8[$22>>0]|0; //@line 552 "../../iup_font.c"
 $24 = $23 << 24 >> 24; //@line 552 "../../iup_font.c"
 $25 = ($24|0)==(45); //@line 552 "../../iup_font.c"
 if ($25) {
  $7 = 0; //@line 553 "../../iup_font.c"
  $120 = $7; //@line 621 "../../iup_font.c"
  STACKTOP = sp;return ($120|0); //@line 621 "../../iup_font.c"
 }
 $26 = $8; //@line 555 "../../iup_font.c"
 $27 = (_strlen($26)|0); //@line 555 "../../iup_font.c"
 $17 = $27; //@line 555 "../../iup_font.c"
 $28 = $8; //@line 556 "../../iup_font.c"
 $29 = $17; //@line 556 "../../iup_font.c"
 $30 = (($28) + ($29)|0); //@line 556 "../../iup_font.c"
 $16 = $30; //@line 556 "../../iup_font.c"
 $31 = $8; //@line 557 "../../iup_font.c"
 $32 = $16; //@line 557 "../../iup_font.c"
 $33 = (_iFontGetStyleWord($31,$32,$18)|0); //@line 557 "../../iup_font.c"
 $15 = $33; //@line 557 "../../iup_font.c"
 $34 = HEAP32[$18>>2]|0; //@line 560 "../../iup_font.c"
 $35 = ($34|0)!=(0); //@line 560 "../../iup_font.c"
 if ($35) {
  $36 = $15; //@line 562 "../../iup_font.c"
  $37 = (_atoi($36)|0); //@line 562 "../../iup_font.c"
  $20 = $37; //@line 562 "../../iup_font.c"
  $38 = $20; //@line 563 "../../iup_font.c"
  $39 = ($38|0)!=(0); //@line 563 "../../iup_font.c"
  if ($39) {
   $40 = $20; //@line 565 "../../iup_font.c"
   $41 = $10; //@line 565 "../../iup_font.c"
   HEAP32[$41>>2] = $40; //@line 565 "../../iup_font.c"
   $42 = $15; //@line 566 "../../iup_font.c"
   $16 = $42; //@line 566 "../../iup_font.c"
  }
 }
 $19 = 0; //@line 571 "../../iup_font.c"
 $43 = $8; //@line 572 "../../iup_font.c"
 $44 = $16; //@line 572 "../../iup_font.c"
 $45 = (_iFontGetStyleWord($43,$44,$18)|0); //@line 572 "../../iup_font.c"
 $15 = $45; //@line 572 "../../iup_font.c"
 while(1) {
  $46 = HEAP32[$18>>2]|0; //@line 573 "../../iup_font.c"
  $47 = ($46|0)!=(0); //@line 573 "../../iup_font.c"
  if (!($47)) {
   break;
  }
  HEAP32[$21>>2] = 0; //@line 575 "../../iup_font.c"
  $48 = $15; //@line 577 "../../iup_font.c"
  $49 = HEAP32[$18>>2]|0; //@line 577 "../../iup_font.c"
  $50 = (_iFontFindStyleName($48,$49,$21)|0); //@line 577 "../../iup_font.c"
  $51 = ($50|0)!=(0); //@line 577 "../../iup_font.c"
  if (!($51)) {
   break;
  }
  $52 = HEAP32[$21>>2]|0; //@line 581 "../../iup_font.c"
  $53 = $19; //@line 581 "../../iup_font.c"
  $54 = $53 | $52; //@line 581 "../../iup_font.c"
  $19 = $54; //@line 581 "../../iup_font.c"
  $55 = $15; //@line 583 "../../iup_font.c"
  $16 = $55; //@line 583 "../../iup_font.c"
  $56 = $8; //@line 584 "../../iup_font.c"
  $57 = $16; //@line 584 "../../iup_font.c"
  $58 = (_iFontGetStyleWord($56,$57,$18)|0); //@line 584 "../../iup_font.c"
  $15 = $58; //@line 584 "../../iup_font.c"
 }
 $59 = $11; //@line 588 "../../iup_font.c"
 HEAP32[$59>>2] = 0; //@line 588 "../../iup_font.c"
 $60 = $12; //@line 589 "../../iup_font.c"
 HEAP32[$60>>2] = 0; //@line 589 "../../iup_font.c"
 $61 = $13; //@line 590 "../../iup_font.c"
 HEAP32[$61>>2] = 0; //@line 590 "../../iup_font.c"
 $62 = $14; //@line 591 "../../iup_font.c"
 HEAP32[$62>>2] = 0; //@line 591 "../../iup_font.c"
 $63 = $19; //@line 593 "../../iup_font.c"
 $64 = $63 & 1; //@line 593 "../../iup_font.c"
 $65 = ($64|0)!=(0); //@line 593 "../../iup_font.c"
 if ($65) {
  $66 = $11; //@line 594 "../../iup_font.c"
  HEAP32[$66>>2] = 1; //@line 594 "../../iup_font.c"
 }
 $67 = $19; //@line 595 "../../iup_font.c"
 $68 = $67 & 2; //@line 595 "../../iup_font.c"
 $69 = ($68|0)!=(0); //@line 595 "../../iup_font.c"
 if ($69) {
  $70 = $12; //@line 596 "../../iup_font.c"
  HEAP32[$70>>2] = 1; //@line 596 "../../iup_font.c"
 }
 $71 = $19; //@line 597 "../../iup_font.c"
 $72 = $71 & 4; //@line 597 "../../iup_font.c"
 $73 = ($72|0)!=(0); //@line 597 "../../iup_font.c"
 if ($73) {
  $74 = $13; //@line 598 "../../iup_font.c"
  HEAP32[$74>>2] = 1; //@line 598 "../../iup_font.c"
 }
 $75 = $19; //@line 599 "../../iup_font.c"
 $76 = $75 & 8; //@line 599 "../../iup_font.c"
 $77 = ($76|0)!=(0); //@line 599 "../../iup_font.c"
 if ($77) {
  $78 = $14; //@line 600 "../../iup_font.c"
  HEAP32[$78>>2] = 1; //@line 600 "../../iup_font.c"
 }
 while(1) {
  $79 = $16; //@line 605 "../../iup_font.c"
  $80 = $8; //@line 605 "../../iup_font.c"
  $81 = ($79>>>0)>($80>>>0); //@line 605 "../../iup_font.c"
  if (!($81)) {
   break;
  }
  $82 = $16; //@line 605 "../../iup_font.c"
  $83 = ((($82)) + -1|0); //@line 605 "../../iup_font.c"
  $84 = HEAP8[$83>>0]|0; //@line 605 "../../iup_font.c"
  $85 = $84 << 24 >> 24; //@line 605 "../../iup_font.c"
  $86 = ($85|0)==(32); //@line 605 "../../iup_font.c"
  if (!($86)) {
   $87 = $16; //@line 605 "../../iup_font.c"
   $88 = ((($87)) + -1|0); //@line 605 "../../iup_font.c"
   $89 = HEAP8[$88>>0]|0; //@line 605 "../../iup_font.c"
   $90 = $89 << 24 >> 24; //@line 605 "../../iup_font.c"
   $91 = ($90|0)==(44); //@line 605 "../../iup_font.c"
   if (!($91)) {
    break;
   }
  }
  $92 = $16; //@line 606 "../../iup_font.c"
  $93 = ((($92)) + -1|0); //@line 606 "../../iup_font.c"
  $16 = $93; //@line 606 "../../iup_font.c"
 }
 while(1) {
  $94 = $16; //@line 609 "../../iup_font.c"
  $95 = $8; //@line 609 "../../iup_font.c"
  $96 = ($94>>>0)>($95>>>0); //@line 609 "../../iup_font.c"
  if ($96) {
   $97 = $8; //@line 609 "../../iup_font.c"
   $98 = HEAP8[$97>>0]|0; //@line 609 "../../iup_font.c"
   $99 = $98 << 24 >> 24; //@line 609 "../../iup_font.c"
   $100 = ($99|0)==(32); //@line 609 "../../iup_font.c"
   if ($100) {
    $121 = 1;
   } else {
    $101 = $8; //@line 609 "../../iup_font.c"
    $102 = HEAP8[$101>>0]|0; //@line 609 "../../iup_font.c"
    $103 = $102 << 24 >> 24; //@line 609 "../../iup_font.c"
    $104 = ($103|0)==(44); //@line 609 "../../iup_font.c"
    $121 = $104;
   }
  } else {
   $121 = 0;
  }
  $105 = $8; //@line 610 "../../iup_font.c"
  if (!($121)) {
   break;
  }
  $106 = ((($105)) + 1|0); //@line 610 "../../iup_font.c"
  $8 = $106; //@line 610 "../../iup_font.c"
 }
 $107 = $16; //@line 612 "../../iup_font.c"
 $108 = ($105|0)!=($107|0); //@line 612 "../../iup_font.c"
 if ($108) {
  $109 = $16; //@line 614 "../../iup_font.c"
  $110 = $8; //@line 614 "../../iup_font.c"
  $111 = $109; //@line 614 "../../iup_font.c"
  $112 = $110; //@line 614 "../../iup_font.c"
  $113 = (($111) - ($112))|0; //@line 614 "../../iup_font.c"
  $17 = $113; //@line 614 "../../iup_font.c"
  $114 = $9; //@line 615 "../../iup_font.c"
  $115 = $8; //@line 615 "../../iup_font.c"
  $116 = $17; //@line 615 "../../iup_font.c"
  (_strncpy($114,$115,$116)|0); //@line 615 "../../iup_font.c"
  $117 = $17; //@line 616 "../../iup_font.c"
  $118 = $9; //@line 616 "../../iup_font.c"
  $119 = (($118) + ($117)|0); //@line 616 "../../iup_font.c"
  HEAP8[$119>>0] = 0; //@line 616 "../../iup_font.c"
  $7 = 1; //@line 617 "../../iup_font.c"
  $120 = $7; //@line 621 "../../iup_font.c"
  STACKTOP = sp;return ($120|0); //@line 621 "../../iup_font.c"
 } else {
  $7 = 0; //@line 620 "../../iup_font.c"
  $120 = $7; //@line 621 "../../iup_font.c"
  STACKTOP = sp;return ($120|0); //@line 621 "../../iup_font.c"
 }
 return (0)|0;
}
function _iFontGetStyleWord($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 while(1) {
  $7 = $4; //@line 534 "../../iup_font.c"
  $8 = $3; //@line 534 "../../iup_font.c"
  $9 = ($7>>>0)>($8>>>0); //@line 534 "../../iup_font.c"
  if ($9) {
   $10 = $4; //@line 534 "../../iup_font.c"
   $11 = ((($10)) + -1|0); //@line 534 "../../iup_font.c"
   $12 = HEAP8[$11>>0]|0; //@line 534 "../../iup_font.c"
   $13 = $12 << 24 >> 24; //@line 534 "../../iup_font.c"
   $14 = ($13|0)==(32); //@line 534 "../../iup_font.c"
   if ($14) {
    $46 = 1;
   } else {
    $15 = $4; //@line 534 "../../iup_font.c"
    $16 = ((($15)) + -1|0); //@line 534 "../../iup_font.c"
    $17 = HEAP8[$16>>0]|0; //@line 534 "../../iup_font.c"
    $18 = $17 << 24 >> 24; //@line 534 "../../iup_font.c"
    $19 = ($18|0)==(44); //@line 534 "../../iup_font.c"
    $46 = $19;
   }
  } else {
   $46 = 0;
  }
  $20 = $4; //@line 535 "../../iup_font.c"
  if (!($46)) {
   break;
  }
  $21 = ((($20)) + -1|0); //@line 535 "../../iup_font.c"
  $4 = $21; //@line 535 "../../iup_font.c"
 }
 $6 = $20; //@line 537 "../../iup_font.c"
 while(1) {
  $22 = $6; //@line 538 "../../iup_font.c"
  $23 = $3; //@line 538 "../../iup_font.c"
  $24 = ($22>>>0)>($23>>>0); //@line 538 "../../iup_font.c"
  if (!($24)) {
   label = 13;
   break;
  }
  $25 = $6; //@line 538 "../../iup_font.c"
  $26 = ((($25)) + -1|0); //@line 538 "../../iup_font.c"
  $27 = HEAP8[$26>>0]|0; //@line 538 "../../iup_font.c"
  $28 = $27 << 24 >> 24; //@line 538 "../../iup_font.c"
  $29 = ($28|0)==(32); //@line 538 "../../iup_font.c"
  if ($29) {
   $36 = 1;
  } else {
   $30 = $6; //@line 538 "../../iup_font.c"
   $31 = ((($30)) + -1|0); //@line 538 "../../iup_font.c"
   $32 = HEAP8[$31>>0]|0; //@line 538 "../../iup_font.c"
   $33 = $32 << 24 >> 24; //@line 538 "../../iup_font.c"
   $34 = ($33|0)==(44); //@line 538 "../../iup_font.c"
   $36 = $34;
  }
  $35 = $36 ^ 1; //@line 538 "../../iup_font.c"
  if (!($35)) {
   label = 13;
   break;
  }
  $37 = $6; //@line 539 "../../iup_font.c"
  $38 = ((($37)) + -1|0); //@line 539 "../../iup_font.c"
  $6 = $38; //@line 539 "../../iup_font.c"
 }
 if ((label|0) == 13) {
  $39 = $4; //@line 541 "../../iup_font.c"
  $40 = $6; //@line 541 "../../iup_font.c"
  $41 = $39; //@line 541 "../../iup_font.c"
  $42 = $40; //@line 541 "../../iup_font.c"
  $43 = (($41) - ($42))|0; //@line 541 "../../iup_font.c"
  $44 = $5; //@line 541 "../../iup_font.c"
  HEAP32[$44>>2] = $43; //@line 541 "../../iup_font.c"
  $45 = $6; //@line 543 "../../iup_font.c"
  STACKTOP = sp;return ($45|0); //@line 543 "../../iup_font.c"
 }
 return (0)|0;
}
function _iFontFindStyleName($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = 0; //@line 514 "../../iup_font.c"
 while(1) {
  $8 = $7; //@line 514 "../../iup_font.c"
  $9 = ($8|0)<(21); //@line 514 "../../iup_font.c"
  if (!($9)) {
   label = 6;
   break;
  }
  $10 = $7; //@line 517 "../../iup_font.c"
  $11 = (28 + ($10<<3)|0); //@line 517 "../../iup_font.c"
  $12 = HEAP32[$11>>2]|0; //@line 517 "../../iup_font.c"
  $13 = $4; //@line 517 "../../iup_font.c"
  $14 = $5; //@line 517 "../../iup_font.c"
  $15 = (_strncmp($12,$13,$14)|0); //@line 517 "../../iup_font.c"
  $16 = ($15|0)==(0); //@line 517 "../../iup_font.c"
  $17 = $7; //@line 519 "../../iup_font.c"
  if ($16) {
   label = 4;
   break;
  }
  $22 = (($17) + 1)|0; //@line 514 "../../iup_font.c"
  $7 = $22; //@line 514 "../../iup_font.c"
 }
 if ((label|0) == 4) {
  $18 = (28 + ($17<<3)|0); //@line 519 "../../iup_font.c"
  $19 = ((($18)) + 4|0); //@line 519 "../../iup_font.c"
  $20 = HEAP32[$19>>2]|0; //@line 519 "../../iup_font.c"
  $21 = $6; //@line 519 "../../iup_font.c"
  HEAP32[$21>>2] = $20; //@line 519 "../../iup_font.c"
  $3 = 1; //@line 520 "../../iup_font.c"
  $23 = $3; //@line 525 "../../iup_font.c"
  STACKTOP = sp;return ($23|0); //@line 525 "../../iup_font.c"
 }
 else if ((label|0) == 6) {
  $3 = 0; //@line 524 "../../iup_font.c"
  $23 = $3; //@line 525 "../../iup_font.c"
  STACKTOP = sp;return ($23|0); //@line 525 "../../iup_font.c"
 }
 return (0)|0;
}
function _IupMapFont($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $vararg_buffer = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $2 = $0;
 HEAP32[$3>>2] = 0; //@line 151 "../../iup_font.c"
 $6 = $2; //@line 155 "../../iup_font.c"
 $7 = ($6|0)!=(0|0); //@line 155 "../../iup_font.c"
 if (!($7)) {
  $1 = 0; //@line 156 "../../iup_font.c"
  $42 = $1; //@line 183 "../../iup_font.c"
  STACKTOP = sp;return ($42|0); //@line 183 "../../iup_font.c"
 }
 $8 = $2; //@line 158 "../../iup_font.c"
 $9 = (_strstr($8,12793)|0); //@line 158 "../../iup_font.c"
 $10 = ($9|0)!=(0|0); //@line 158 "../../iup_font.c"
 do {
  if ($10) {
   $4 = 12783; //@line 160 "../../iup_font.c"
   $11 = $2; //@line 161 "../../iup_font.c"
   $12 = ((($11)) + 10|0); //@line 161 "../../iup_font.c"
   $13 = (_iFontGetStyle($12,$3)|0); //@line 161 "../../iup_font.c"
   $5 = $13; //@line 161 "../../iup_font.c"
   $14 = $5; //@line 162 "../../iup_font.c"
   $15 = ($14|0)==(0|0); //@line 162 "../../iup_font.c"
   $16 = HEAP32[$3>>2]|0; //@line 162 "../../iup_font.c"
   $17 = ($16|0)==(0); //@line 162 "../../iup_font.c"
   $or$cond = $15 | $17; //@line 162 "../../iup_font.c"
   if ($or$cond) {
    $1 = 0; //@line 163 "../../iup_font.c"
    $42 = $1; //@line 183 "../../iup_font.c"
    STACKTOP = sp;return ($42|0); //@line 183 "../../iup_font.c"
   }
  } else {
   $18 = $2; //@line 165 "../../iup_font.c"
   $19 = (_strstr($18,12812)|0); //@line 165 "../../iup_font.c"
   $20 = ($19|0)!=(0|0); //@line 165 "../../iup_font.c"
   if ($20) {
    $4 = 12804; //@line 167 "../../iup_font.c"
    $21 = $2; //@line 168 "../../iup_font.c"
    $22 = ((($21)) + 8|0); //@line 168 "../../iup_font.c"
    $23 = (_iFontGetStyle($22,$3)|0); //@line 168 "../../iup_font.c"
    $5 = $23; //@line 168 "../../iup_font.c"
    $24 = $5; //@line 169 "../../iup_font.c"
    $25 = ($24|0)==(0|0); //@line 169 "../../iup_font.c"
    $26 = HEAP32[$3>>2]|0; //@line 169 "../../iup_font.c"
    $27 = ($26|0)==(0); //@line 169 "../../iup_font.c"
    $or$cond3 = $25 | $27; //@line 169 "../../iup_font.c"
    if (!($or$cond3)) {
     break;
    }
    $1 = 0; //@line 170 "../../iup_font.c"
    $42 = $1; //@line 183 "../../iup_font.c"
    STACKTOP = sp;return ($42|0); //@line 183 "../../iup_font.c"
   }
   $28 = $2; //@line 172 "../../iup_font.c"
   $29 = (_strstr($28,12827)|0); //@line 172 "../../iup_font.c"
   $30 = ($29|0)!=(0|0); //@line 172 "../../iup_font.c"
   if (!($30)) {
    $1 = 0; //@line 180 "../../iup_font.c"
    $42 = $1; //@line 183 "../../iup_font.c"
    STACKTOP = sp;return ($42|0); //@line 183 "../../iup_font.c"
   }
   $4 = 12821; //@line 174 "../../iup_font.c"
   $31 = $2; //@line 175 "../../iup_font.c"
   $32 = ((($31)) + 6|0); //@line 175 "../../iup_font.c"
   $33 = (_iFontGetStyle($32,$3)|0); //@line 175 "../../iup_font.c"
   $5 = $33; //@line 175 "../../iup_font.c"
   $34 = $5; //@line 176 "../../iup_font.c"
   $35 = ($34|0)==(0|0); //@line 176 "../../iup_font.c"
   $36 = HEAP32[$3>>2]|0; //@line 176 "../../iup_font.c"
   $37 = ($36|0)==(0); //@line 176 "../../iup_font.c"
   $or$cond5 = $35 | $37; //@line 176 "../../iup_font.c"
   if ($or$cond5) {
    $1 = 0; //@line 177 "../../iup_font.c"
    $42 = $1; //@line 183 "../../iup_font.c"
    STACKTOP = sp;return ($42|0); //@line 183 "../../iup_font.c"
   }
  }
 } while(0);
 $38 = $4; //@line 182 "../../iup_font.c"
 $39 = $5; //@line 182 "../../iup_font.c"
 $40 = HEAP32[$3>>2]|0; //@line 182 "../../iup_font.c"
 HEAP32[$vararg_buffer>>2] = $38; //@line 182 "../../iup_font.c"
 $vararg_ptr6 = ((($vararg_buffer)) + 4|0); //@line 182 "../../iup_font.c"
 HEAP32[$vararg_ptr6>>2] = $39; //@line 182 "../../iup_font.c"
 $vararg_ptr7 = ((($vararg_buffer)) + 8|0); //@line 182 "../../iup_font.c"
 HEAP32[$vararg_ptr7>>2] = $40; //@line 182 "../../iup_font.c"
 $41 = (_iupStrReturnStrf(12856,$vararg_buffer)|0); //@line 182 "../../iup_font.c"
 $1 = $41; //@line 182 "../../iup_font.c"
 $42 = $1; //@line 183 "../../iup_font.c"
 STACKTOP = sp;return ($42|0); //@line 183 "../../iup_font.c"
}
function _iFontGetStyle($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = 0; //@line 125 "../../iup_font.c"
 $6 = $3; //@line 127 "../../iup_font.c"
 $7 = (_strstr($6,12834)|0); //@line 127 "../../iup_font.c"
 $8 = ($7|0)!=(0|0); //@line 127 "../../iup_font.c"
 do {
  if ($8) {
   $5 = 362470; //@line 129 "../../iup_font.c"
   $9 = $3; //@line 130 "../../iup_font.c"
   $10 = ((($9)) + 7|0); //@line 130 "../../iup_font.c"
   $3 = $10; //@line 130 "../../iup_font.c"
  } else {
   $11 = $3; //@line 132 "../../iup_font.c"
   $12 = (_strstr($11,12842)|0); //@line 132 "../../iup_font.c"
   $13 = ($12|0)!=(0|0); //@line 132 "../../iup_font.c"
   if ($13) {
    $5 = 12588; //@line 134 "../../iup_font.c"
    $14 = $3; //@line 135 "../../iup_font.c"
    $15 = ((($14)) + 7|0); //@line 135 "../../iup_font.c"
    $3 = $15; //@line 135 "../../iup_font.c"
    break;
   }
   $16 = $3; //@line 137 "../../iup_font.c"
   $17 = (_strstr($16,12850)|0); //@line 137 "../../iup_font.c"
   $18 = ($17|0)!=(0|0); //@line 137 "../../iup_font.c"
   if ($18) {
    $5 = 12641; //@line 139 "../../iup_font.c"
    $19 = $3; //@line 140 "../../iup_font.c"
    $20 = ((($19)) + 5|0); //@line 140 "../../iup_font.c"
    $3 = $20; //@line 140 "../../iup_font.c"
    break;
   }
   $2 = 0; //@line 143 "../../iup_font.c"
   $25 = $2; //@line 147 "../../iup_font.c"
   STACKTOP = sp;return ($25|0); //@line 147 "../../iup_font.c"
  }
 } while(0);
 $21 = $3; //@line 145 "../../iup_font.c"
 $22 = (_atoi($21)|0); //@line 145 "../../iup_font.c"
 $23 = $4; //@line 145 "../../iup_font.c"
 HEAP32[$23>>2] = $22; //@line 145 "../../iup_font.c"
 $24 = $5; //@line 146 "../../iup_font.c"
 $2 = $24; //@line 146 "../../iup_font.c"
 $25 = $2; //@line 147 "../../iup_font.c"
 STACKTOP = sp;return ($25|0); //@line 147 "../../iup_font.c"
}
function _iupSetFontAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 188 "../../iup_font.c"
 $6 = (_IupMapFont($5)|0); //@line 188 "../../iup_font.c"
 $4 = $6; //@line 188 "../../iup_font.c"
 $7 = $4; //@line 189 "../../iup_font.c"
 $8 = ($7|0)!=(0|0); //@line 189 "../../iup_font.c"
 if (!($8)) {
  $9 = $3; //@line 190 "../../iup_font.c"
  $4 = $9; //@line 190 "../../iup_font.c"
 }
 $10 = $2; //@line 192 "../../iup_font.c"
 $11 = $4; //@line 192 "../../iup_font.c"
 _IupStoreAttribute($10,12866,$11); //@line 192 "../../iup_font.c"
 STACKTOP = sp;return 0; //@line 193 "../../iup_font.c"
}
function _iupGetFontAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 198 "../../iup_font.c"
 $3 = (_iupAttribGetStr($2,12866)|0); //@line 198 "../../iup_font.c"
 STACKTOP = sp;return ($3|0); //@line 198 "../../iup_font.c"
}
function _iupUpdateStandardFontAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 203 "../../iup_font.c"
 $3 = $1; //@line 203 "../../iup_font.c"
 $4 = (_iupGetFontAttrib($3)|0); //@line 203 "../../iup_font.c"
 _iupAttribSetClassObject($2,12866,$4); //@line 203 "../../iup_font.c"
 STACKTOP = sp;return; //@line 204 "../../iup_font.c"
}
function _iupGetFontInfo($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $15 = $10; //@line 208 "../../iup_font.c"
 $16 = ($15|0)!=(0|0); //@line 208 "../../iup_font.c"
 if ($16) {
  $17 = $10; //@line 208 "../../iup_font.c"
  HEAP32[$17>>2] = 0; //@line 208 "../../iup_font.c"
 }
 $18 = $11; //@line 209 "../../iup_font.c"
 $19 = ($18|0)!=(0|0); //@line 209 "../../iup_font.c"
 if ($19) {
  $20 = $11; //@line 209 "../../iup_font.c"
  HEAP32[$20>>2] = 0; //@line 209 "../../iup_font.c"
 }
 $21 = $12; //@line 210 "../../iup_font.c"
 $22 = ($21|0)!=(0|0); //@line 210 "../../iup_font.c"
 if ($22) {
  $23 = $12; //@line 210 "../../iup_font.c"
  HEAP32[$23>>2] = 0; //@line 210 "../../iup_font.c"
 }
 $24 = $13; //@line 211 "../../iup_font.c"
 $25 = ($24|0)!=(0|0); //@line 211 "../../iup_font.c"
 if ($25) {
  $26 = $13; //@line 211 "../../iup_font.c"
  HEAP32[$26>>2] = 0; //@line 211 "../../iup_font.c"
 }
 $27 = $14; //@line 212 "../../iup_font.c"
 $28 = ($27|0)!=(0|0); //@line 212 "../../iup_font.c"
 if ($28) {
  $29 = $14; //@line 212 "../../iup_font.c"
  HEAP32[$29>>2] = 0; //@line 212 "../../iup_font.c"
 }
 $30 = $9; //@line 213 "../../iup_font.c"
 $31 = ($30|0)!=(0|0); //@line 213 "../../iup_font.c"
 if ($31) {
  $32 = $9; //@line 213 "../../iup_font.c"
  HEAP8[$32>>0] = 0; //@line 213 "../../iup_font.c"
 }
 $33 = $8; //@line 216 "../../iup_font.c"
 $34 = $9; //@line 216 "../../iup_font.c"
 $35 = $10; //@line 216 "../../iup_font.c"
 $36 = $11; //@line 216 "../../iup_font.c"
 $37 = $12; //@line 216 "../../iup_font.c"
 $38 = $13; //@line 216 "../../iup_font.c"
 $39 = $14; //@line 216 "../../iup_font.c"
 $40 = (_iupFontParseWin($33,$34,$35,$36,$37,$38,$39)|0); //@line 216 "../../iup_font.c"
 $41 = ($40|0)!=(0); //@line 216 "../../iup_font.c"
 if (!($41)) {
  $42 = $8; //@line 218 "../../iup_font.c"
  $43 = $9; //@line 218 "../../iup_font.c"
  $44 = $10; //@line 218 "../../iup_font.c"
  $45 = $11; //@line 218 "../../iup_font.c"
  $46 = $12; //@line 218 "../../iup_font.c"
  $47 = $13; //@line 218 "../../iup_font.c"
  $48 = $14; //@line 218 "../../iup_font.c"
  $49 = (_iupFontParseX($42,$43,$44,$45,$46,$47,$48)|0); //@line 218 "../../iup_font.c"
  $50 = ($49|0)!=(0); //@line 218 "../../iup_font.c"
  if (!($50)) {
   $51 = $8; //@line 220 "../../iup_font.c"
   $52 = $9; //@line 220 "../../iup_font.c"
   $53 = $10; //@line 220 "../../iup_font.c"
   $54 = $11; //@line 220 "../../iup_font.c"
   $55 = $12; //@line 220 "../../iup_font.c"
   $56 = $13; //@line 220 "../../iup_font.c"
   $57 = $14; //@line 220 "../../iup_font.c"
   $58 = (_iupFontParsePango($51,$52,$53,$54,$55,$56,$57)|0); //@line 220 "../../iup_font.c"
   $59 = ($58|0)!=(0); //@line 220 "../../iup_font.c"
   if (!($59)) {
    $7 = 0; //@line 221 "../../iup_font.c"
    $60 = $7; //@line 226 "../../iup_font.c"
    STACKTOP = sp;return ($60|0); //@line 226 "../../iup_font.c"
   }
  }
 }
 $7 = 1; //@line 225 "../../iup_font.c"
 $60 = $7; //@line 226 "../../iup_font.c"
 STACKTOP = sp;return ($60|0); //@line 226 "../../iup_font.c"
}
function _iupFontParseWin($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $16 = sp + 36|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $17 = $8; //@line 628 "../../iup_font.c"
 $18 = HEAP8[$17>>0]|0; //@line 628 "../../iup_font.c"
 $19 = $18 << 24 >> 24; //@line 628 "../../iup_font.c"
 $20 = ($19|0)==(45); //@line 628 "../../iup_font.c"
 if ($20) {
  $7 = 0; //@line 629 "../../iup_font.c"
  $94 = $7; //@line 698 "../../iup_font.c"
  STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
 }
 $21 = $8; //@line 631 "../../iup_font.c"
 $22 = (_strstr($21,12886)|0); //@line 631 "../../iup_font.c"
 $23 = ($22|0)==(0|0); //@line 631 "../../iup_font.c"
 if ($23) {
  $7 = 0; //@line 632 "../../iup_font.c"
  $94 = $7; //@line 698 "../../iup_font.c"
  STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
 }
 $24 = $8; //@line 634 "../../iup_font.c"
 $25 = HEAP8[$24>>0]|0; //@line 634 "../../iup_font.c"
 $26 = $25 << 24 >> 24; //@line 634 "../../iup_font.c"
 $27 = ($26|0)==(58); //@line 634 "../../iup_font.c"
 $28 = $8; //@line 635 "../../iup_font.c"
 do {
  if ($27) {
   $29 = ((($28)) + 1|0); //@line 635 "../../iup_font.c"
   $8 = $29; //@line 635 "../../iup_font.c"
  } else {
   $30 = (_strcspn($28,12886)|0); //@line 638 "../../iup_font.c"
   $15 = $30; //@line 638 "../../iup_font.c"
   $31 = $15; //@line 639 "../../iup_font.c"
   $32 = ($31|0)==(0); //@line 639 "../../iup_font.c"
   if (!($32)) {
    $33 = $9; //@line 640 "../../iup_font.c"
    $34 = $8; //@line 640 "../../iup_font.c"
    $35 = $15; //@line 640 "../../iup_font.c"
    (_strncpy($33,$34,$35)|0); //@line 640 "../../iup_font.c"
    $36 = $15; //@line 641 "../../iup_font.c"
    $37 = $9; //@line 641 "../../iup_font.c"
    $38 = (($37) + ($36)|0); //@line 641 "../../iup_font.c"
    HEAP8[$38>>0] = 0; //@line 641 "../../iup_font.c"
    $39 = $15; //@line 642 "../../iup_font.c"
    $40 = (($39) + 1)|0; //@line 642 "../../iup_font.c"
    $41 = $8; //@line 642 "../../iup_font.c"
    $42 = (($41) + ($40)|0); //@line 642 "../../iup_font.c"
    $8 = $42; //@line 642 "../../iup_font.c"
    break;
   }
   $7 = 0; //@line 639 "../../iup_font.c"
   $94 = $7; //@line 698 "../../iup_font.c"
   STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
  }
 } while(0);
 $43 = $8; //@line 645 "../../iup_font.c"
 $44 = (_strstr($43,12886)|0); //@line 645 "../../iup_font.c"
 $45 = ($44|0)==(0|0); //@line 645 "../../iup_font.c"
 if ($45) {
  $7 = 0; //@line 646 "../../iup_font.c"
  $94 = $7; //@line 698 "../../iup_font.c"
  STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
 }
 $46 = $11; //@line 649 "../../iup_font.c"
 HEAP32[$46>>2] = 0; //@line 649 "../../iup_font.c"
 $47 = $12; //@line 650 "../../iup_font.c"
 HEAP32[$47>>2] = 0; //@line 650 "../../iup_font.c"
 $48 = $13; //@line 651 "../../iup_font.c"
 HEAP32[$48>>2] = 0; //@line 651 "../../iup_font.c"
 $49 = $14; //@line 652 "../../iup_font.c"
 HEAP32[$49>>2] = 0; //@line 652 "../../iup_font.c"
 $50 = $8; //@line 654 "../../iup_font.c"
 $51 = HEAP8[$50>>0]|0; //@line 654 "../../iup_font.c"
 $52 = $51 << 24 >> 24; //@line 654 "../../iup_font.c"
 $53 = ($52|0)==(58); //@line 654 "../../iup_font.c"
 L21: do {
  if ($53) {
   $54 = $8; //@line 655 "../../iup_font.c"
   $55 = ((($54)) + 1|0); //@line 655 "../../iup_font.c"
   $8 = $55; //@line 655 "../../iup_font.c"
  } else {
   while(1) {
    $56 = $8; //@line 658 "../../iup_font.c"
    $57 = (_strlen($56)|0); //@line 658 "../../iup_font.c"
    $58 = ($57|0)!=(0); //@line 658 "../../iup_font.c"
    if (!($58)) {
     break L21;
    }
    $59 = $8; //@line 662 "../../iup_font.c"
    $60 = (_strcspn($59,12888)|0); //@line 662 "../../iup_font.c"
    $15 = $60; //@line 662 "../../iup_font.c"
    $61 = $15; //@line 663 "../../iup_font.c"
    $62 = ($61|0)==(0); //@line 663 "../../iup_font.c"
    if ($62) {
     break L21;
    }
    $63 = $8; //@line 666 "../../iup_font.c"
    $64 = $15; //@line 666 "../../iup_font.c"
    (_strncpy($16,$63,$64)|0); //@line 666 "../../iup_font.c"
    $65 = $15; //@line 667 "../../iup_font.c"
    $66 = (($16) + ($65)|0); //@line 667 "../../iup_font.c"
    HEAP8[$66>>0] = 0; //@line 667 "../../iup_font.c"
    $67 = (_iupStrEqual($16,12891)|0); //@line 669 "../../iup_font.c"
    $68 = ($67|0)!=(0); //@line 669 "../../iup_font.c"
    do {
     if ($68) {
      $69 = $11; //@line 670 "../../iup_font.c"
      HEAP32[$69>>2] = 1; //@line 670 "../../iup_font.c"
     } else {
      $70 = (_iupStrEqual($16,12896)|0); //@line 671 "../../iup_font.c"
      $71 = ($70|0)!=(0); //@line 671 "../../iup_font.c"
      if ($71) {
       $72 = $12; //@line 672 "../../iup_font.c"
       HEAP32[$72>>2] = 1; //@line 672 "../../iup_font.c"
       break;
      }
      $73 = (_iupStrEqual($16,12903)|0); //@line 673 "../../iup_font.c"
      $74 = ($73|0)!=(0); //@line 673 "../../iup_font.c"
      if ($74) {
       $75 = $13; //@line 674 "../../iup_font.c"
       HEAP32[$75>>2] = 1; //@line 674 "../../iup_font.c"
       break;
      }
      $76 = (_iupStrEqual($16,12913)|0); //@line 675 "../../iup_font.c"
      $77 = ($76|0)!=(0); //@line 675 "../../iup_font.c"
      if ($77) {
       $78 = $14; //@line 676 "../../iup_font.c"
       HEAP32[$78>>2] = 1; //@line 676 "../../iup_font.c"
      }
     }
    } while(0);
    $79 = $15; //@line 678 "../../iup_font.c"
    $80 = $8; //@line 678 "../../iup_font.c"
    $81 = (($80) + ($79)|0); //@line 678 "../../iup_font.c"
    $8 = $81; //@line 678 "../../iup_font.c"
    $82 = $8; //@line 680 "../../iup_font.c"
    $83 = HEAP8[$82>>0]|0; //@line 680 "../../iup_font.c"
    $84 = $83 << 24 >> 24; //@line 680 "../../iup_font.c"
    $85 = ($84|0)==(58); //@line 680 "../../iup_font.c"
    $86 = $8; //@line 682 "../../iup_font.c"
    $87 = ((($86)) + 1|0); //@line 682 "../../iup_font.c"
    $8 = $87; //@line 682 "../../iup_font.c"
    if ($85) {
     break;
    }
   }
  }
 } while(0);
 $88 = $8; //@line 691 "../../iup_font.c"
 $89 = $10; //@line 691 "../../iup_font.c"
 $90 = (_iupStrToInt($88,$89)|0); //@line 691 "../../iup_font.c"
 $91 = ($90|0)!=(0); //@line 691 "../../iup_font.c"
 if (!($91)) {
  $7 = 0; //@line 692 "../../iup_font.c"
  $94 = $7; //@line 698 "../../iup_font.c"
  STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
 }
 $92 = $10; //@line 694 "../../iup_font.c"
 $93 = ($92|0)==(0|0); //@line 694 "../../iup_font.c"
 if ($93) {
  $7 = 0; //@line 695 "../../iup_font.c"
  $94 = $7; //@line 698 "../../iup_font.c"
  STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
 } else {
  $7 = 1; //@line 697 "../../iup_font.c"
  $94 = $7; //@line 698 "../../iup_font.c"
  STACKTOP = sp;return ($94|0); //@line 698 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupFontParseX($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1136|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1136|0);
 $15 = sp + 1094|0;
 $16 = sp + 1064|0;
 $18 = sp + 40|0;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $19 = $8; //@line 707 "../../iup_font.c"
 $20 = HEAP8[$19>>0]|0; //@line 707 "../../iup_font.c"
 $21 = $20 << 24 >> 24; //@line 707 "../../iup_font.c"
 $22 = ($21|0)!=(45); //@line 707 "../../iup_font.c"
 do {
  if ($22) {
   $7 = 0; //@line 708 "../../iup_font.c"
  } else {
   $23 = $8; //@line 710 "../../iup_font.c"
   $24 = ((($23)) + 1|0); //@line 710 "../../iup_font.c"
   (_strcpy($18,$24)|0); //@line 710 "../../iup_font.c"
   $25 = $11; //@line 712 "../../iup_font.c"
   HEAP32[$25>>2] = 0; //@line 712 "../../iup_font.c"
   $26 = $12; //@line 713 "../../iup_font.c"
   HEAP32[$26>>2] = 0; //@line 713 "../../iup_font.c"
   $27 = $13; //@line 714 "../../iup_font.c"
   HEAP32[$27>>2] = 0; //@line 714 "../../iup_font.c"
   $28 = $14; //@line 715 "../../iup_font.c"
   HEAP32[$28>>2] = 0; //@line 715 "../../iup_font.c"
   $29 = (_strtok($18,12879)|0); //@line 718 "../../iup_font.c"
   $17 = $29; //@line 718 "../../iup_font.c"
   $30 = $17; //@line 719 "../../iup_font.c"
   $31 = ($30|0)!=(0|0); //@line 719 "../../iup_font.c"
   if (!($31)) {
    $7 = 0; //@line 719 "../../iup_font.c"
    break;
   }
   $32 = (_strtok(0,12879)|0); //@line 722 "../../iup_font.c"
   $17 = $32; //@line 722 "../../iup_font.c"
   $33 = $17; //@line 723 "../../iup_font.c"
   $34 = ($33|0)!=(0|0); //@line 723 "../../iup_font.c"
   if (!($34)) {
    $7 = 0; //@line 723 "../../iup_font.c"
    break;
   }
   $35 = $9; //@line 724 "../../iup_font.c"
   $36 = $17; //@line 724 "../../iup_font.c"
   (_strcpy($35,$36)|0); //@line 724 "../../iup_font.c"
   $37 = (_strtok(0,12879)|0); //@line 727 "../../iup_font.c"
   $17 = $37; //@line 727 "../../iup_font.c"
   $38 = $17; //@line 728 "../../iup_font.c"
   $39 = ($38|0)!=(0|0); //@line 728 "../../iup_font.c"
   if (!($39)) {
    $7 = 0; //@line 728 "../../iup_font.c"
    break;
   }
   $40 = $17; //@line 729 "../../iup_font.c"
   (_strcpy($15,$40)|0); //@line 729 "../../iup_font.c"
   $41 = (_strstr(12881,$15)|0); //@line 730 "../../iup_font.c"
   $42 = ($41|0)!=(0|0); //@line 730 "../../iup_font.c"
   if ($42) {
    $43 = $11; //@line 731 "../../iup_font.c"
    HEAP32[$43>>2] = 1; //@line 731 "../../iup_font.c"
   }
   $44 = (_strtok(0,12879)|0); //@line 734 "../../iup_font.c"
   $17 = $44; //@line 734 "../../iup_font.c"
   $45 = $17; //@line 735 "../../iup_font.c"
   $46 = ($45|0)!=(0|0); //@line 735 "../../iup_font.c"
   if (!($46)) {
    $7 = 0; //@line 735 "../../iup_font.c"
    break;
   }
   $47 = $17; //@line 736 "../../iup_font.c"
   (_strcpy($16,$47)|0); //@line 736 "../../iup_font.c"
   $48 = HEAP8[$16>>0]|0; //@line 737 "../../iup_font.c"
   $49 = $48 << 24 >> 24; //@line 737 "../../iup_font.c"
   $50 = ($49|0)==(105); //@line 737 "../../iup_font.c"
   if ($50) {
    label = 15;
   } else {
    $51 = HEAP8[$16>>0]|0; //@line 737 "../../iup_font.c"
    $52 = $51 << 24 >> 24; //@line 737 "../../iup_font.c"
    $53 = ($52|0)==(111); //@line 737 "../../iup_font.c"
    if ($53) {
     label = 15;
    }
   }
   if ((label|0) == 15) {
    $54 = $12; //@line 738 "../../iup_font.c"
    HEAP32[$54>>2] = 1; //@line 738 "../../iup_font.c"
   }
   $55 = (_strtok(0,12879)|0); //@line 741 "../../iup_font.c"
   $17 = $55; //@line 741 "../../iup_font.c"
   $56 = $17; //@line 742 "../../iup_font.c"
   $57 = ($56|0)!=(0|0); //@line 742 "../../iup_font.c"
   if (!($57)) {
    $7 = 0; //@line 742 "../../iup_font.c"
    break;
   }
   $58 = (_strtok(0,12879)|0); //@line 744 "../../iup_font.c"
   $17 = $58; //@line 744 "../../iup_font.c"
   $59 = $17; //@line 745 "../../iup_font.c"
   $60 = ($59|0)!=(0|0); //@line 745 "../../iup_font.c"
   if (!($60)) {
    $7 = 0; //@line 745 "../../iup_font.c"
    break;
   }
   $61 = (_strtok(0,12879)|0); //@line 748 "../../iup_font.c"
   $17 = $61; //@line 748 "../../iup_font.c"
   $62 = $17; //@line 749 "../../iup_font.c"
   $63 = ($62|0)!=(0|0); //@line 749 "../../iup_font.c"
   if (!($63)) {
    $7 = 0; //@line 749 "../../iup_font.c"
    break;
   }
   $64 = $17; //@line 750 "../../iup_font.c"
   $65 = (_atoi($64)|0); //@line 750 "../../iup_font.c"
   $66 = (0 - ($65))|0; //@line 750 "../../iup_font.c"
   $67 = $10; //@line 750 "../../iup_font.c"
   HEAP32[$67>>2] = $66; //@line 750 "../../iup_font.c"
   $68 = $10; //@line 752 "../../iup_font.c"
   $69 = HEAP32[$68>>2]|0; //@line 752 "../../iup_font.c"
   $70 = ($69|0)<(0); //@line 752 "../../iup_font.c"
   if ($70) {
    $7 = 1; //@line 753 "../../iup_font.c"
    break;
   }
   $71 = (_strtok(0,12879)|0); //@line 756 "../../iup_font.c"
   $17 = $71; //@line 756 "../../iup_font.c"
   $72 = $17; //@line 757 "../../iup_font.c"
   $73 = ($72|0)!=(0|0); //@line 757 "../../iup_font.c"
   if (!($73)) {
    $7 = 0; //@line 757 "../../iup_font.c"
    break;
   }
   $74 = $17; //@line 758 "../../iup_font.c"
   $75 = (_atoi($74)|0); //@line 758 "../../iup_font.c"
   $76 = (($75|0) / 10)&-1; //@line 758 "../../iup_font.c"
   $77 = $10; //@line 758 "../../iup_font.c"
   HEAP32[$77>>2] = $76; //@line 758 "../../iup_font.c"
   $78 = $10; //@line 760 "../../iup_font.c"
   $79 = HEAP32[$78>>2]|0; //@line 760 "../../iup_font.c"
   $80 = ($79|0)>(0); //@line 760 "../../iup_font.c"
   if ($80) {
    $7 = 1; //@line 761 "../../iup_font.c"
    break;
   } else {
    $7 = 0; //@line 763 "../../iup_font.c"
    break;
   }
  }
 } while(0);
 $81 = $7; //@line 764 "../../iup_font.c"
 STACKTOP = sp;return ($81|0); //@line 764 "../../iup_font.c"
}
function _iupGetFontFaceAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);
 $3 = sp + 20|0;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp + 32|0;
 $2 = $0;
 HEAP32[$3>>2] = 0; //@line 230 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 231 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 232 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 233 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 234 "../../iup_font.c"
 $10 = $2; //@line 238 "../../iup_font.c"
 $11 = (_iupGetFontAttrib($10)|0); //@line 238 "../../iup_font.c"
 $9 = $11; //@line 238 "../../iup_font.c"
 $12 = $9; //@line 240 "../../iup_font.c"
 $13 = (_iupGetFontInfo($12,$8,$3,$4,$5,$6,$7)|0); //@line 240 "../../iup_font.c"
 $14 = ($13|0)!=(0); //@line 240 "../../iup_font.c"
 if ($14) {
  $15 = (_iupStrReturnStr($8)|0); //@line 243 "../../iup_font.c"
  $1 = $15; //@line 243 "../../iup_font.c"
  $16 = $1; //@line 244 "../../iup_font.c"
  STACKTOP = sp;return ($16|0); //@line 244 "../../iup_font.c"
 } else {
  $1 = 0; //@line 241 "../../iup_font.c"
  $16 = $1; //@line 244 "../../iup_font.c"
  STACKTOP = sp;return ($16|0); //@line 244 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupSetFontFaceAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1088|0);
 $vararg_buffer = sp;
 $5 = sp + 44|0;
 $6 = sp + 40|0;
 $7 = sp + 36|0;
 $8 = sp + 32|0;
 $9 = sp + 28|0;
 $10 = sp + 64|0;
 $3 = $0;
 $4 = $1;
 HEAP32[$5>>2] = 0; //@line 248 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 249 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 250 "../../iup_font.c"
 HEAP32[$8>>2] = 0; //@line 251 "../../iup_font.c"
 HEAP32[$9>>2] = 0; //@line 252 "../../iup_font.c"
 $12 = $4; //@line 256 "../../iup_font.c"
 $13 = ($12|0)!=(0|0); //@line 256 "../../iup_font.c"
 if (!($13)) {
  $2 = 0; //@line 257 "../../iup_font.c"
  $34 = $2; //@line 266 "../../iup_font.c"
  STACKTOP = sp;return ($34|0); //@line 266 "../../iup_font.c"
 }
 $14 = $3; //@line 259 "../../iup_font.c"
 $15 = (_iupGetFontAttrib($14)|0); //@line 259 "../../iup_font.c"
 $11 = $15; //@line 259 "../../iup_font.c"
 $16 = $11; //@line 261 "../../iup_font.c"
 $17 = (_iupGetFontInfo($16,$10,$5,$6,$7,$8,$9)|0); //@line 261 "../../iup_font.c"
 $18 = ($17|0)!=(0); //@line 261 "../../iup_font.c"
 if ($18) {
  $19 = $3; //@line 264 "../../iup_font.c"
  $20 = $4; //@line 264 "../../iup_font.c"
  $21 = HEAP32[$6>>2]|0; //@line 264 "../../iup_font.c"
  $22 = ($21|0)!=(0); //@line 264 "../../iup_font.c"
  $23 = $22 ? 12923 : 362470; //@line 264 "../../iup_font.c"
  $24 = HEAP32[$7>>2]|0; //@line 264 "../../iup_font.c"
  $25 = ($24|0)!=(0); //@line 264 "../../iup_font.c"
  $26 = $25 ? 12929 : 362470; //@line 264 "../../iup_font.c"
  $27 = HEAP32[$8>>2]|0; //@line 264 "../../iup_font.c"
  $28 = ($27|0)!=(0); //@line 264 "../../iup_font.c"
  $29 = $28 ? 12937 : 362470; //@line 264 "../../iup_font.c"
  $30 = HEAP32[$9>>2]|0; //@line 264 "../../iup_font.c"
  $31 = ($30|0)!=(0); //@line 264 "../../iup_font.c"
  $32 = $31 ? 12948 : 362470; //@line 264 "../../iup_font.c"
  $33 = HEAP32[$5>>2]|0; //@line 264 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $20; //@line 264 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 264 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $23; //@line 264 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 264 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $26; //@line 264 "../../iup_font.c"
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 264 "../../iup_font.c"
  HEAP32[$vararg_ptr3>>2] = $29; //@line 264 "../../iup_font.c"
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0); //@line 264 "../../iup_font.c"
  HEAP32[$vararg_ptr4>>2] = $32; //@line 264 "../../iup_font.c"
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0); //@line 264 "../../iup_font.c"
  HEAP32[$vararg_ptr5>>2] = $33; //@line 264 "../../iup_font.c"
  _IupSetfAttribute($19,12866,12959,$vararg_buffer); //@line 264 "../../iup_font.c"
  $2 = 0; //@line 265 "../../iup_font.c"
  $34 = $2; //@line 266 "../../iup_font.c"
  STACKTOP = sp;return ($34|0); //@line 266 "../../iup_font.c"
 } else {
  $2 = 0; //@line 262 "../../iup_font.c"
  $34 = $2; //@line 266 "../../iup_font.c"
  STACKTOP = sp;return ($34|0); //@line 266 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupGetFontSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);
 $3 = sp + 20|0;
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $8 = sp + 32|0;
 $2 = $0;
 HEAP32[$3>>2] = 0; //@line 270 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 271 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 272 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 273 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 274 "../../iup_font.c"
 $10 = $2; //@line 278 "../../iup_font.c"
 $11 = (_iupGetFontAttrib($10)|0); //@line 278 "../../iup_font.c"
 $9 = $11; //@line 278 "../../iup_font.c"
 $12 = $9; //@line 280 "../../iup_font.c"
 $13 = (_iupGetFontInfo($12,$8,$3,$4,$5,$6,$7)|0); //@line 280 "../../iup_font.c"
 $14 = ($13|0)!=(0); //@line 280 "../../iup_font.c"
 if ($14) {
  $15 = HEAP32[$3>>2]|0; //@line 283 "../../iup_font.c"
  $16 = (_iupStrReturnInt($15)|0); //@line 283 "../../iup_font.c"
  $1 = $16; //@line 283 "../../iup_font.c"
  $17 = $1; //@line 284 "../../iup_font.c"
  STACKTOP = sp;return ($17|0); //@line 284 "../../iup_font.c"
 } else {
  $1 = 0; //@line 281 "../../iup_font.c"
  $17 = $1; //@line 284 "../../iup_font.c"
  STACKTOP = sp;return ($17|0); //@line 284 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupSetFontSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1088|0);
 $vararg_buffer = sp;
 $5 = sp + 44|0;
 $6 = sp + 40|0;
 $7 = sp + 36|0;
 $8 = sp + 32|0;
 $9 = sp + 28|0;
 $10 = sp + 64|0;
 $3 = $0;
 $4 = $1;
 HEAP32[$5>>2] = 0; //@line 288 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 289 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 290 "../../iup_font.c"
 HEAP32[$8>>2] = 0; //@line 291 "../../iup_font.c"
 HEAP32[$9>>2] = 0; //@line 292 "../../iup_font.c"
 $12 = $4; //@line 296 "../../iup_font.c"
 $13 = ($12|0)!=(0|0); //@line 296 "../../iup_font.c"
 if (!($13)) {
  $2 = 0; //@line 297 "../../iup_font.c"
  $33 = $2; //@line 306 "../../iup_font.c"
  STACKTOP = sp;return ($33|0); //@line 306 "../../iup_font.c"
 }
 $14 = $3; //@line 299 "../../iup_font.c"
 $15 = (_iupGetFontAttrib($14)|0); //@line 299 "../../iup_font.c"
 $11 = $15; //@line 299 "../../iup_font.c"
 $16 = $11; //@line 301 "../../iup_font.c"
 $17 = (_iupGetFontInfo($16,$10,$5,$6,$7,$8,$9)|0); //@line 301 "../../iup_font.c"
 $18 = ($17|0)!=(0); //@line 301 "../../iup_font.c"
 if ($18) {
  $19 = $3; //@line 304 "../../iup_font.c"
  $20 = HEAP32[$6>>2]|0; //@line 304 "../../iup_font.c"
  $21 = ($20|0)!=(0); //@line 304 "../../iup_font.c"
  $22 = $21 ? 12923 : 362470; //@line 304 "../../iup_font.c"
  $23 = HEAP32[$7>>2]|0; //@line 304 "../../iup_font.c"
  $24 = ($23|0)!=(0); //@line 304 "../../iup_font.c"
  $25 = $24 ? 12929 : 362470; //@line 304 "../../iup_font.c"
  $26 = HEAP32[$8>>2]|0; //@line 304 "../../iup_font.c"
  $27 = ($26|0)!=(0); //@line 304 "../../iup_font.c"
  $28 = $27 ? 12937 : 362470; //@line 304 "../../iup_font.c"
  $29 = HEAP32[$9>>2]|0; //@line 304 "../../iup_font.c"
  $30 = ($29|0)!=(0); //@line 304 "../../iup_font.c"
  $31 = $30 ? 12948 : 362470; //@line 304 "../../iup_font.c"
  $32 = $4; //@line 304 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $10; //@line 304 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 304 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $22; //@line 304 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 304 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $25; //@line 304 "../../iup_font.c"
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 304 "../../iup_font.c"
  HEAP32[$vararg_ptr3>>2] = $28; //@line 304 "../../iup_font.c"
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0); //@line 304 "../../iup_font.c"
  HEAP32[$vararg_ptr4>>2] = $31; //@line 304 "../../iup_font.c"
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0); //@line 304 "../../iup_font.c"
  HEAP32[$vararg_ptr5>>2] = $32; //@line 304 "../../iup_font.c"
  _IupSetfAttribute($19,12866,12975,$vararg_buffer); //@line 304 "../../iup_font.c"
  $2 = 0; //@line 305 "../../iup_font.c"
  $33 = $2; //@line 306 "../../iup_font.c"
  STACKTOP = sp;return ($33|0); //@line 306 "../../iup_font.c"
 } else {
  $2 = 0; //@line 302 "../../iup_font.c"
  $33 = $2; //@line 306 "../../iup_font.c"
  STACKTOP = sp;return ($33|0); //@line 306 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupGetDefaultFontFaceGlobalAttrib() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);
 $1 = sp + 20|0;
 $2 = sp + 16|0;
 $3 = sp + 12|0;
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp + 32|0;
 HEAP32[$1>>2] = 0; //@line 310 "../../iup_font.c"
 HEAP32[$2>>2] = 0; //@line 311 "../../iup_font.c"
 HEAP32[$3>>2] = 0; //@line 312 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 313 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 314 "../../iup_font.c"
 $8 = (_IupGetGlobal(14998)|0); //@line 317 "../../iup_font.c"
 $7 = $8; //@line 317 "../../iup_font.c"
 $9 = $7; //@line 319 "../../iup_font.c"
 $10 = (_iupGetFontInfo($9,$6,$1,$2,$3,$4,$5)|0); //@line 319 "../../iup_font.c"
 $11 = ($10|0)!=(0); //@line 319 "../../iup_font.c"
 if ($11) {
  $12 = (_iupStrReturnStr($6)|0); //@line 322 "../../iup_font.c"
  $0 = $12; //@line 322 "../../iup_font.c"
  $13 = $0; //@line 323 "../../iup_font.c"
  STACKTOP = sp;return ($13|0); //@line 323 "../../iup_font.c"
 } else {
  $0 = 0; //@line 320 "../../iup_font.c"
  $13 = $0; //@line 323 "../../iup_font.c"
  STACKTOP = sp;return ($13|0); //@line 323 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupSetDefaultFontFaceGlobalAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1088|0);
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 $4 = sp + 40|0;
 $5 = sp + 36|0;
 $6 = sp + 32|0;
 $7 = sp + 28|0;
 $8 = sp + 56|0;
 $2 = $0;
 HEAP32[$3>>2] = 0; //@line 327 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 328 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 329 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 330 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 331 "../../iup_font.c"
 $10 = $2; //@line 335 "../../iup_font.c"
 $11 = ($10|0)!=(0|0); //@line 335 "../../iup_font.c"
 if (!($11)) {
  $1 = 0; //@line 336 "../../iup_font.c"
  $30 = $1; //@line 346 "../../iup_font.c"
  STACKTOP = sp;return ($30|0); //@line 346 "../../iup_font.c"
 }
 $12 = (_IupGetGlobal(14998)|0); //@line 338 "../../iup_font.c"
 $9 = $12; //@line 338 "../../iup_font.c"
 $13 = $9; //@line 340 "../../iup_font.c"
 $14 = (_iupGetFontInfo($13,$8,$3,$4,$5,$6,$7)|0); //@line 340 "../../iup_font.c"
 $15 = ($14|0)!=(0); //@line 340 "../../iup_font.c"
 if ($15) {
  $16 = $2; //@line 343 "../../iup_font.c"
  $17 = HEAP32[$4>>2]|0; //@line 343 "../../iup_font.c"
  $18 = ($17|0)!=(0); //@line 343 "../../iup_font.c"
  $19 = $18 ? 12923 : 362470; //@line 343 "../../iup_font.c"
  $20 = HEAP32[$5>>2]|0; //@line 343 "../../iup_font.c"
  $21 = ($20|0)!=(0); //@line 343 "../../iup_font.c"
  $22 = $21 ? 12929 : 362470; //@line 343 "../../iup_font.c"
  $23 = HEAP32[$6>>2]|0; //@line 343 "../../iup_font.c"
  $24 = ($23|0)!=(0); //@line 343 "../../iup_font.c"
  $25 = $24 ? 12937 : 362470; //@line 343 "../../iup_font.c"
  $26 = HEAP32[$7>>2]|0; //@line 343 "../../iup_font.c"
  $27 = ($26|0)!=(0); //@line 343 "../../iup_font.c"
  $28 = $27 ? 12948 : 362470; //@line 343 "../../iup_font.c"
  $29 = HEAP32[$3>>2]|0; //@line 343 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $16; //@line 343 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 343 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $19; //@line 343 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 343 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $22; //@line 343 "../../iup_font.c"
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 343 "../../iup_font.c"
  HEAP32[$vararg_ptr3>>2] = $25; //@line 343 "../../iup_font.c"
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0); //@line 343 "../../iup_font.c"
  HEAP32[$vararg_ptr4>>2] = $28; //@line 343 "../../iup_font.c"
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0); //@line 343 "../../iup_font.c"
  HEAP32[$vararg_ptr5>>2] = $29; //@line 343 "../../iup_font.c"
  _IupSetfAttribute(0,14998,12959,$vararg_buffer); //@line 343 "../../iup_font.c"
  $1 = 0; //@line 345 "../../iup_font.c"
  $30 = $1; //@line 346 "../../iup_font.c"
  STACKTOP = sp;return ($30|0); //@line 346 "../../iup_font.c"
 } else {
  $1 = 0; //@line 341 "../../iup_font.c"
  $30 = $1; //@line 346 "../../iup_font.c"
  STACKTOP = sp;return ($30|0); //@line 346 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupGetDefaultFontStyleGlobalAttrib() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $vararg_buffer = sp;
 $1 = sp + 36|0;
 $2 = sp + 32|0;
 $3 = sp + 28|0;
 $4 = sp + 24|0;
 $5 = sp + 20|0;
 $6 = sp + 48|0;
 HEAP32[$1>>2] = 0; //@line 350 "../../iup_font.c"
 HEAP32[$2>>2] = 0; //@line 351 "../../iup_font.c"
 HEAP32[$3>>2] = 0; //@line 352 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 353 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 354 "../../iup_font.c"
 $8 = (_IupGetGlobal(14998)|0); //@line 357 "../../iup_font.c"
 $7 = $8; //@line 357 "../../iup_font.c"
 $9 = $7; //@line 359 "../../iup_font.c"
 $10 = (_iupGetFontInfo($9,$6,$1,$2,$3,$4,$5)|0); //@line 359 "../../iup_font.c"
 $11 = ($10|0)!=(0); //@line 359 "../../iup_font.c"
 if ($11) {
  $12 = HEAP32[$2>>2]|0; //@line 362 "../../iup_font.c"
  $13 = ($12|0)!=(0); //@line 362 "../../iup_font.c"
  $14 = $13 ? 12923 : 362470; //@line 362 "../../iup_font.c"
  $15 = HEAP32[$3>>2]|0; //@line 362 "../../iup_font.c"
  $16 = ($15|0)!=(0); //@line 362 "../../iup_font.c"
  $17 = $16 ? 12929 : 362470; //@line 362 "../../iup_font.c"
  $18 = HEAP32[$4>>2]|0; //@line 362 "../../iup_font.c"
  $19 = ($18|0)!=(0); //@line 362 "../../iup_font.c"
  $20 = $19 ? 12937 : 362470; //@line 362 "../../iup_font.c"
  $21 = HEAP32[$5>>2]|0; //@line 362 "../../iup_font.c"
  $22 = ($21|0)!=(0); //@line 362 "../../iup_font.c"
  $23 = $22 ? 12948 : 362470; //@line 362 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $14; //@line 362 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 362 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $17; //@line 362 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 362 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $20; //@line 362 "../../iup_font.c"
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 362 "../../iup_font.c"
  HEAP32[$vararg_ptr3>>2] = $23; //@line 362 "../../iup_font.c"
  $24 = (_iupStrReturnStrf(12991,$vararg_buffer)|0); //@line 362 "../../iup_font.c"
  $0 = $24; //@line 362 "../../iup_font.c"
  $25 = $0; //@line 363 "../../iup_font.c"
  STACKTOP = sp;return ($25|0); //@line 363 "../../iup_font.c"
 } else {
  $0 = 0; //@line 360 "../../iup_font.c"
  $25 = $0; //@line 363 "../../iup_font.c"
  STACKTOP = sp;return ($25|0); //@line 363 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupSetDefaultFontStyleGlobalAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = sp + 28|0;
 $5 = sp + 24|0;
 $6 = sp + 20|0;
 $7 = sp + 16|0;
 $8 = sp + 48|0;
 $2 = $0;
 HEAP32[$3>>2] = 0; //@line 367 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 368 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 369 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 370 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 371 "../../iup_font.c"
 $10 = $2; //@line 375 "../../iup_font.c"
 $11 = ($10|0)!=(0|0); //@line 375 "../../iup_font.c"
 if (!($11)) {
  $1 = 0; //@line 376 "../../iup_font.c"
  $18 = $1; //@line 386 "../../iup_font.c"
  STACKTOP = sp;return ($18|0); //@line 386 "../../iup_font.c"
 }
 $12 = (_IupGetGlobal(14998)|0); //@line 378 "../../iup_font.c"
 $9 = $12; //@line 378 "../../iup_font.c"
 $13 = $9; //@line 380 "../../iup_font.c"
 $14 = (_iupGetFontInfo($13,$8,$3,$4,$5,$6,$7)|0); //@line 380 "../../iup_font.c"
 $15 = ($14|0)!=(0); //@line 380 "../../iup_font.c"
 if ($15) {
  $16 = $2; //@line 383 "../../iup_font.c"
  $17 = HEAP32[$3>>2]|0; //@line 383 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $8; //@line 383 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 383 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $16; //@line 383 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 383 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $17; //@line 383 "../../iup_font.c"
  _IupSetfAttribute(0,14998,12856,$vararg_buffer); //@line 383 "../../iup_font.c"
  $1 = 0; //@line 385 "../../iup_font.c"
  $18 = $1; //@line 386 "../../iup_font.c"
  STACKTOP = sp;return ($18|0); //@line 386 "../../iup_font.c"
 } else {
  $1 = 0; //@line 381 "../../iup_font.c"
  $18 = $1; //@line 386 "../../iup_font.c"
  STACKTOP = sp;return ($18|0); //@line 386 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupSetDefaultFontSizeGlobalAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1088|0);
 $vararg_buffer = sp;
 $2 = sp + 44|0;
 $3 = sp + 40|0;
 $4 = sp + 36|0;
 $5 = sp + 32|0;
 $6 = sp + 28|0;
 $7 = sp + 56|0;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 390 "../../iup_font.c"
 HEAP32[$3>>2] = 0; //@line 391 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 392 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 393 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 394 "../../iup_font.c"
 $9 = $1; //@line 398 "../../iup_font.c"
 $10 = ($9|0)!=(0|0); //@line 398 "../../iup_font.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 409 "../../iup_font.c"
 }
 $11 = (_IupGetGlobal(14998)|0); //@line 401 "../../iup_font.c"
 $8 = $11; //@line 401 "../../iup_font.c"
 $12 = $8; //@line 403 "../../iup_font.c"
 $13 = (_iupGetFontInfo($12,$7,$2,$3,$4,$5,$6)|0); //@line 403 "../../iup_font.c"
 $14 = ($13|0)!=(0); //@line 403 "../../iup_font.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 409 "../../iup_font.c"
 }
 $15 = HEAP32[$3>>2]|0; //@line 406 "../../iup_font.c"
 $16 = ($15|0)!=(0); //@line 406 "../../iup_font.c"
 $17 = $16 ? 12923 : 362470; //@line 406 "../../iup_font.c"
 $18 = HEAP32[$4>>2]|0; //@line 406 "../../iup_font.c"
 $19 = ($18|0)!=(0); //@line 406 "../../iup_font.c"
 $20 = $19 ? 12929 : 362470; //@line 406 "../../iup_font.c"
 $21 = HEAP32[$5>>2]|0; //@line 406 "../../iup_font.c"
 $22 = ($21|0)!=(0); //@line 406 "../../iup_font.c"
 $23 = $22 ? 12937 : 362470; //@line 406 "../../iup_font.c"
 $24 = HEAP32[$6>>2]|0; //@line 406 "../../iup_font.c"
 $25 = ($24|0)!=(0); //@line 406 "../../iup_font.c"
 $26 = $25 ? 12948 : 362470; //@line 406 "../../iup_font.c"
 $27 = $1; //@line 406 "../../iup_font.c"
 HEAP32[$vararg_buffer>>2] = $7; //@line 406 "../../iup_font.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 406 "../../iup_font.c"
 HEAP32[$vararg_ptr1>>2] = $17; //@line 406 "../../iup_font.c"
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 406 "../../iup_font.c"
 HEAP32[$vararg_ptr2>>2] = $20; //@line 406 "../../iup_font.c"
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 406 "../../iup_font.c"
 HEAP32[$vararg_ptr3>>2] = $23; //@line 406 "../../iup_font.c"
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0); //@line 406 "../../iup_font.c"
 HEAP32[$vararg_ptr4>>2] = $26; //@line 406 "../../iup_font.c"
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0); //@line 406 "../../iup_font.c"
 HEAP32[$vararg_ptr5>>2] = $27; //@line 406 "../../iup_font.c"
 _IupSetfAttribute(0,14998,12975,$vararg_buffer); //@line 406 "../../iup_font.c"
 STACKTOP = sp;return; //@line 409 "../../iup_font.c"
}
function _iupGetDefaultFontSizeGlobalAttrib() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);
 $1 = sp + 20|0;
 $2 = sp + 16|0;
 $3 = sp + 12|0;
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $6 = sp + 32|0;
 HEAP32[$1>>2] = 0; //@line 413 "../../iup_font.c"
 HEAP32[$2>>2] = 0; //@line 414 "../../iup_font.c"
 HEAP32[$3>>2] = 0; //@line 415 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 416 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 417 "../../iup_font.c"
 $8 = (_IupGetGlobal(14998)|0); //@line 420 "../../iup_font.c"
 $7 = $8; //@line 420 "../../iup_font.c"
 $9 = $7; //@line 422 "../../iup_font.c"
 $10 = (_iupGetFontInfo($9,$6,$1,$2,$3,$4,$5)|0); //@line 422 "../../iup_font.c"
 $11 = ($10|0)!=(0); //@line 422 "../../iup_font.c"
 if ($11) {
  $12 = HEAP32[$1>>2]|0; //@line 425 "../../iup_font.c"
  $13 = (_iupStrReturnInt($12)|0); //@line 425 "../../iup_font.c"
  $0 = $13; //@line 425 "../../iup_font.c"
  $14 = $0; //@line 426 "../../iup_font.c"
  STACKTOP = sp;return ($14|0); //@line 426 "../../iup_font.c"
 } else {
  $0 = 0; //@line 423 "../../iup_font.c"
  $14 = $0; //@line 426 "../../iup_font.c"
  STACKTOP = sp;return ($14|0); //@line 426 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupGetFontStyleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $vararg_buffer = sp;
 $3 = sp + 36|0;
 $4 = sp + 32|0;
 $5 = sp + 28|0;
 $6 = sp + 24|0;
 $7 = sp + 20|0;
 $8 = sp + 48|0;
 $2 = $0;
 HEAP32[$3>>2] = 0; //@line 430 "../../iup_font.c"
 HEAP32[$4>>2] = 0; //@line 431 "../../iup_font.c"
 HEAP32[$5>>2] = 0; //@line 432 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 433 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 434 "../../iup_font.c"
 $10 = $2; //@line 436 "../../iup_font.c"
 $11 = (_iupGetFontAttrib($10)|0); //@line 436 "../../iup_font.c"
 $9 = $11; //@line 436 "../../iup_font.c"
 $12 = $9; //@line 438 "../../iup_font.c"
 $13 = (_iupGetFontInfo($12,$8,$3,$4,$5,$6,$7)|0); //@line 438 "../../iup_font.c"
 $14 = ($13|0)!=(0); //@line 438 "../../iup_font.c"
 if ($14) {
  $15 = HEAP32[$4>>2]|0; //@line 441 "../../iup_font.c"
  $16 = ($15|0)!=(0); //@line 441 "../../iup_font.c"
  $17 = $16 ? 12923 : 362470; //@line 441 "../../iup_font.c"
  $18 = HEAP32[$5>>2]|0; //@line 441 "../../iup_font.c"
  $19 = ($18|0)!=(0); //@line 441 "../../iup_font.c"
  $20 = $19 ? 12929 : 362470; //@line 441 "../../iup_font.c"
  $21 = HEAP32[$6>>2]|0; //@line 441 "../../iup_font.c"
  $22 = ($21|0)!=(0); //@line 441 "../../iup_font.c"
  $23 = $22 ? 12937 : 362470; //@line 441 "../../iup_font.c"
  $24 = HEAP32[$7>>2]|0; //@line 441 "../../iup_font.c"
  $25 = ($24|0)!=(0); //@line 441 "../../iup_font.c"
  $26 = $25 ? 12948 : 362470; //@line 441 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $17; //@line 441 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 441 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $20; //@line 441 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 441 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $23; //@line 441 "../../iup_font.c"
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 441 "../../iup_font.c"
  HEAP32[$vararg_ptr3>>2] = $26; //@line 441 "../../iup_font.c"
  $27 = (_iupStrReturnStrf(12991,$vararg_buffer)|0); //@line 441 "../../iup_font.c"
  $1 = $27; //@line 441 "../../iup_font.c"
  $28 = $1; //@line 442 "../../iup_font.c"
  STACKTOP = sp;return ($28|0); //@line 442 "../../iup_font.c"
 } else {
  $1 = 0; //@line 439 "../../iup_font.c"
  $28 = $1; //@line 442 "../../iup_font.c"
  STACKTOP = sp;return ($28|0); //@line 442 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupSetFontStyleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $vararg_buffer = sp;
 $5 = sp + 32|0;
 $6 = sp + 28|0;
 $7 = sp + 24|0;
 $8 = sp + 20|0;
 $9 = sp + 16|0;
 $10 = sp + 48|0;
 $3 = $0;
 $4 = $1;
 HEAP32[$5>>2] = 0; //@line 446 "../../iup_font.c"
 HEAP32[$6>>2] = 0; //@line 447 "../../iup_font.c"
 HEAP32[$7>>2] = 0; //@line 448 "../../iup_font.c"
 HEAP32[$8>>2] = 0; //@line 449 "../../iup_font.c"
 HEAP32[$9>>2] = 0; //@line 450 "../../iup_font.c"
 $12 = $4; //@line 454 "../../iup_font.c"
 $13 = ($12|0)!=(0|0); //@line 454 "../../iup_font.c"
 if (!($13)) {
  $2 = 0; //@line 455 "../../iup_font.c"
  $22 = $2; //@line 465 "../../iup_font.c"
  STACKTOP = sp;return ($22|0); //@line 465 "../../iup_font.c"
 }
 $14 = $3; //@line 457 "../../iup_font.c"
 $15 = (_iupGetFontAttrib($14)|0); //@line 457 "../../iup_font.c"
 $11 = $15; //@line 457 "../../iup_font.c"
 $16 = $11; //@line 459 "../../iup_font.c"
 $17 = (_iupGetFontInfo($16,$10,$5,$6,$7,$8,$9)|0); //@line 459 "../../iup_font.c"
 $18 = ($17|0)!=(0); //@line 459 "../../iup_font.c"
 if ($18) {
  $19 = $3; //@line 462 "../../iup_font.c"
  $20 = $4; //@line 462 "../../iup_font.c"
  $21 = HEAP32[$5>>2]|0; //@line 462 "../../iup_font.c"
  HEAP32[$vararg_buffer>>2] = $10; //@line 462 "../../iup_font.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 462 "../../iup_font.c"
  HEAP32[$vararg_ptr1>>2] = $20; //@line 462 "../../iup_font.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 462 "../../iup_font.c"
  HEAP32[$vararg_ptr2>>2] = $21; //@line 462 "../../iup_font.c"
  _IupSetfAttribute($19,12866,12856,$vararg_buffer); //@line 462 "../../iup_font.c"
  $2 = 0; //@line 464 "../../iup_font.c"
  $22 = $2; //@line 465 "../../iup_font.c"
  STACKTOP = sp;return ($22|0); //@line 465 "../../iup_font.c"
 } else {
  $2 = 0; //@line 460 "../../iup_font.c"
  $22 = $2; //@line 465 "../../iup_font.c"
  STACKTOP = sp;return ($22|0); //@line 465 "../../iup_font.c"
 }
 return (0)|0;
}
function _iupFontDlgNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(15165)|0); //@line 30 "../../iup_fontdlg.c"
 $2 = (_iupClassNew($1)|0); //@line 30 "../../iup_fontdlg.c"
 $0 = $2; //@line 30 "../../iup_fontdlg.c"
 $3 = $0; //@line 32 "../../iup_fontdlg.c"
 HEAP32[$3>>2] = 13000; //@line 32 "../../iup_fontdlg.c"
 $4 = $0; //@line 33 "../../iup_fontdlg.c"
 $5 = ((($4)) + 8|0); //@line 33 "../../iup_fontdlg.c"
 HEAP32[$5>>2] = 3; //@line 33 "../../iup_fontdlg.c"
 $6 = $0; //@line 34 "../../iup_fontdlg.c"
 $7 = ((($6)) + 16|0); //@line 34 "../../iup_fontdlg.c"
 HEAP32[$7>>2] = 1; //@line 34 "../../iup_fontdlg.c"
 $8 = $0; //@line 36 "../../iup_fontdlg.c"
 $9 = ((($8)) + 32|0); //@line 36 "../../iup_fontdlg.c"
 HEAP32[$9>>2] = 227; //@line 36 "../../iup_fontdlg.c"
 $10 = (_IupGetGlobal(20399)|0); //@line 38 "../../iup_fontdlg.c"
 $11 = (_iupStrEqualNoCase($10,13008)|0); //@line 38 "../../iup_fontdlg.c"
 $12 = ($11|0)!=(0); //@line 38 "../../iup_fontdlg.c"
 if ($12) {
  $29 = $0; //@line 48 "../../iup_fontdlg.c"
  _iupClassRegisterAttribute($29,13014,0,0,0,0,33); //@line 48 "../../iup_fontdlg.c"
  $30 = $0; //@line 49 "../../iup_fontdlg.c"
  _iupClassRegisterAttribute($30,20104,0,0,0,0,1); //@line 49 "../../iup_fontdlg.c"
  $31 = $0; //@line 51 "../../iup_fontdlg.c"
  _iupdrvFontDlgInitClass($31); //@line 51 "../../iup_fontdlg.c"
  $32 = $0; //@line 53 "../../iup_fontdlg.c"
  STACKTOP = sp;return ($32|0); //@line 53 "../../iup_fontdlg.c"
 }
 $13 = $0; //@line 41 "../../iup_fontdlg.c"
 $14 = ((($13)) + 24|0); //@line 41 "../../iup_fontdlg.c"
 $15 = HEAP32[$14>>2]|0; //@line 41 "../../iup_fontdlg.c"
 $16 = ((($15)) + 72|0); //@line 41 "../../iup_fontdlg.c"
 HEAP32[$16>>2] = 0; //@line 41 "../../iup_fontdlg.c"
 $17 = $0; //@line 42 "../../iup_fontdlg.c"
 $18 = ((($17)) + 24|0); //@line 42 "../../iup_fontdlg.c"
 $19 = HEAP32[$18>>2]|0; //@line 42 "../../iup_fontdlg.c"
 $20 = ((($19)) + 84|0); //@line 42 "../../iup_fontdlg.c"
 HEAP32[$20>>2] = 0; //@line 42 "../../iup_fontdlg.c"
 $21 = $0; //@line 43 "../../iup_fontdlg.c"
 $22 = ((($21)) + 24|0); //@line 43 "../../iup_fontdlg.c"
 $23 = HEAP32[$22>>2]|0; //@line 43 "../../iup_fontdlg.c"
 $24 = ((($23)) + 44|0); //@line 43 "../../iup_fontdlg.c"
 HEAP32[$24>>2] = 0; //@line 43 "../../iup_fontdlg.c"
 $25 = $0; //@line 44 "../../iup_fontdlg.c"
 $26 = ((($25)) + 24|0); //@line 44 "../../iup_fontdlg.c"
 $27 = HEAP32[$26>>2]|0; //@line 44 "../../iup_fontdlg.c"
 $28 = ((($27)) + 48|0); //@line 44 "../../iup_fontdlg.c"
 HEAP32[$28>>2] = 0; //@line 44 "../../iup_fontdlg.c"
 $29 = $0; //@line 48 "../../iup_fontdlg.c"
 _iupClassRegisterAttribute($29,13014,0,0,0,0,33); //@line 48 "../../iup_fontdlg.c"
 $30 = $0; //@line 49 "../../iup_fontdlg.c"
 _iupClassRegisterAttribute($30,20104,0,0,0,0,1); //@line 49 "../../iup_fontdlg.c"
 $31 = $0; //@line 51 "../../iup_fontdlg.c"
 _iupdrvFontDlgInitClass($31); //@line 51 "../../iup_fontdlg.c"
 $32 = $0; //@line 53 "../../iup_fontdlg.c"
 STACKTOP = sp;return ($32|0); //@line 53 "../../iup_fontdlg.c"
}
function _iupFrameGetTitleHeight($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 26 "../../iup_frame.c"
 _iupdrvFontGetCharSize($3,0,$2); //@line 26 "../../iup_frame.c"
 $4 = HEAP32[$2>>2]|0; //@line 27 "../../iup_frame.c"
 STACKTOP = sp;return ($4|0); //@line 27 "../../iup_frame.c"
}
function _IupFrame($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 164 "../../iup_frame.c"
 HEAP32[$2>>2] = $3; //@line 164 "../../iup_frame.c"
 $4 = ((($2)) + 4|0); //@line 165 "../../iup_frame.c"
 HEAP32[$4>>2] = 0; //@line 165 "../../iup_frame.c"
 $5 = (_IupCreatev(13021,$2)|0); //@line 166 "../../iup_frame.c"
 STACKTOP = sp;return ($5|0); //@line 166 "../../iup_frame.c"
}
function _iupFrameNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 171 "../../iup_frame.c"
 $0 = $1; //@line 171 "../../iup_frame.c"
 $2 = $0; //@line 173 "../../iup_frame.c"
 HEAP32[$2>>2] = 13021; //@line 173 "../../iup_frame.c"
 $3 = $0; //@line 174 "../../iup_frame.c"
 $4 = ((($3)) + 4|0); //@line 174 "../../iup_frame.c"
 HEAP32[$4>>2] = 15852; //@line 174 "../../iup_frame.c"
 $5 = $0; //@line 175 "../../iup_frame.c"
 $6 = ((($5)) + 8|0); //@line 175 "../../iup_frame.c"
 HEAP32[$6>>2] = 1; //@line 175 "../../iup_frame.c"
 $7 = $0; //@line 176 "../../iup_frame.c"
 $8 = ((($7)) + 12|0); //@line 176 "../../iup_frame.c"
 HEAP32[$8>>2] = 2; //@line 176 "../../iup_frame.c"
 $9 = $0; //@line 177 "../../iup_frame.c"
 $10 = ((($9)) + 16|0); //@line 177 "../../iup_frame.c"
 HEAP32[$10>>2] = 0; //@line 177 "../../iup_frame.c"
 $11 = $0; //@line 180 "../../iup_frame.c"
 $12 = ((($11)) + 32|0); //@line 180 "../../iup_frame.c"
 HEAP32[$12>>2] = 228; //@line 180 "../../iup_frame.c"
 $13 = $0; //@line 181 "../../iup_frame.c"
 $14 = ((($13)) + 40|0); //@line 181 "../../iup_frame.c"
 HEAP32[$14>>2] = 229; //@line 181 "../../iup_frame.c"
 $15 = $0; //@line 183 "../../iup_frame.c"
 $16 = ((($15)) + 76|0); //@line 183 "../../iup_frame.c"
 HEAP32[$16>>2] = 230; //@line 183 "../../iup_frame.c"
 $17 = $0; //@line 184 "../../iup_frame.c"
 $18 = ((($17)) + 80|0); //@line 184 "../../iup_frame.c"
 HEAP32[$18>>2] = 231; //@line 184 "../../iup_frame.c"
 $19 = $0; //@line 185 "../../iup_frame.c"
 $20 = ((($19)) + 84|0); //@line 185 "../../iup_frame.c"
 HEAP32[$20>>2] = 232; //@line 185 "../../iup_frame.c"
 $21 = $0; //@line 187 "../../iup_frame.c"
 $22 = ((($21)) + 72|0); //@line 187 "../../iup_frame.c"
 HEAP32[$22>>2] = 47; //@line 187 "../../iup_frame.c"
 $23 = $0; //@line 188 "../../iup_frame.c"
 $24 = ((($23)) + 48|0); //@line 188 "../../iup_frame.c"
 HEAP32[$24>>2] = 48; //@line 188 "../../iup_frame.c"
 $25 = $0; //@line 191 "../../iup_frame.c"
 _iupClassRegisterCallback($25,15572,362470); //@line 191 "../../iup_frame.c"
 $26 = $0; //@line 192 "../../iup_frame.c"
 _iupClassRegisterCallback($26,15563,362470); //@line 192 "../../iup_frame.c"
 $27 = $0; //@line 195 "../../iup_frame.c"
 _iupBaseRegisterCommonAttrib($27); //@line 195 "../../iup_frame.c"
 $28 = $0; //@line 198 "../../iup_frame.c"
 _iupBaseRegisterVisualAttrib($28); //@line 198 "../../iup_frame.c"
 $29 = $0; //@line 201 "../../iup_frame.c"
 _iupClassRegisterAttribute($29,20080,233,0,0,0,41); //@line 201 "../../iup_frame.c"
 $30 = $0; //@line 202 "../../iup_frame.c"
 _iupClassRegisterAttribute($30,20091,234,0,0,0,41); //@line 202 "../../iup_frame.c"
 $31 = $0; //@line 203 "../../iup_frame.c"
 _iupClassRegisterAttribute($31,20073,20,0,(-1),20441,9); //@line 203 "../../iup_frame.c"
 $32 = $0; //@line 206 "../../iup_frame.c"
 _iupClassRegisterAttribute($32,17403,0,0,0,0,9); //@line 206 "../../iup_frame.c"
 $33 = $0; //@line 209 "../../iup_frame.c"
 _iupClassRegisterAttribute($33,13027,0,0,0,0,1); //@line 209 "../../iup_frame.c"
 $34 = $0; //@line 211 "../../iup_frame.c"
 _iupdrvFrameInitClass($34); //@line 211 "../../iup_frame.c"
 $35 = $0; //@line 213 "../../iup_frame.c"
 STACKTOP = sp;return ($35|0); //@line 213 "../../iup_frame.c"
}
function _iFrameCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 80 "../../iup_frame.c"
 $6 = ($5|0)!=(0|0); //@line 80 "../../iup_frame.c"
 if (!($6)) {
  STACKTOP = sp;return 0; //@line 87 "../../iup_frame.c"
 }
 $7 = $3; //@line 82 "../../iup_frame.c"
 $4 = $7; //@line 82 "../../iup_frame.c"
 $8 = $4; //@line 83 "../../iup_frame.c"
 $9 = HEAP32[$8>>2]|0; //@line 83 "../../iup_frame.c"
 $10 = ($9|0)!=(0|0); //@line 83 "../../iup_frame.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 87 "../../iup_frame.c"
 }
 $11 = $2; //@line 84 "../../iup_frame.c"
 $12 = $4; //@line 84 "../../iup_frame.c"
 $13 = HEAP32[$12>>2]|0; //@line 84 "../../iup_frame.c"
 (_IupAppend($11,$13)|0); //@line 84 "../../iup_frame.c"
 STACKTOP = sp;return 0; //@line 87 "../../iup_frame.c"
}
function _iFrameComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $4; //@line 93 "../../iup_frame.c"
 $12 = ((($11)) + 64|0); //@line 93 "../../iup_frame.c"
 $13 = HEAP32[$12>>2]|0; //@line 93 "../../iup_frame.c"
 $10 = $13; //@line 93 "../../iup_frame.c"
 $14 = $4; //@line 95 "../../iup_frame.c"
 _iFrameGetDecorSize($14,$8,$9); //@line 95 "../../iup_frame.c"
 $15 = HEAP32[$8>>2]|0; //@line 96 "../../iup_frame.c"
 $16 = $5; //@line 96 "../../iup_frame.c"
 HEAP32[$16>>2] = $15; //@line 96 "../../iup_frame.c"
 $17 = HEAP32[$9>>2]|0; //@line 97 "../../iup_frame.c"
 $18 = $6; //@line 97 "../../iup_frame.c"
 HEAP32[$18>>2] = $17; //@line 97 "../../iup_frame.c"
 $19 = $10; //@line 99 "../../iup_frame.c"
 $20 = ($19|0)!=(0|0); //@line 99 "../../iup_frame.c"
 if (!($20)) {
  STACKTOP = sp;return; //@line 108 "../../iup_frame.c"
 }
 $21 = $10; //@line 102 "../../iup_frame.c"
 _iupBaseComputeNaturalSize($21); //@line 102 "../../iup_frame.c"
 $22 = $10; //@line 104 "../../iup_frame.c"
 $23 = ((($22)) + 20|0); //@line 104 "../../iup_frame.c"
 $24 = HEAP32[$23>>2]|0; //@line 104 "../../iup_frame.c"
 $25 = $7; //@line 104 "../../iup_frame.c"
 HEAP32[$25>>2] = $24; //@line 104 "../../iup_frame.c"
 $26 = $10; //@line 105 "../../iup_frame.c"
 $27 = ((($26)) + 44|0); //@line 105 "../../iup_frame.c"
 $28 = HEAP32[$27>>2]|0; //@line 105 "../../iup_frame.c"
 $29 = $5; //@line 105 "../../iup_frame.c"
 $30 = HEAP32[$29>>2]|0; //@line 105 "../../iup_frame.c"
 $31 = (($30) + ($28))|0; //@line 105 "../../iup_frame.c"
 HEAP32[$29>>2] = $31; //@line 105 "../../iup_frame.c"
 $32 = $10; //@line 106 "../../iup_frame.c"
 $33 = ((($32)) + 48|0); //@line 106 "../../iup_frame.c"
 $34 = HEAP32[$33>>2]|0; //@line 106 "../../iup_frame.c"
 $35 = $6; //@line 106 "../../iup_frame.c"
 $36 = HEAP32[$35>>2]|0; //@line 106 "../../iup_frame.c"
 $37 = (($36) + ($34))|0; //@line 106 "../../iup_frame.c"
 HEAP32[$35>>2] = $37; //@line 106 "../../iup_frame.c"
 STACKTOP = sp;return; //@line 108 "../../iup_frame.c"
}
function _iFrameSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $2; //@line 114 "../../iup_frame.c"
 _iFrameGetDecorSize($8,$6,$7); //@line 114 "../../iup_frame.c"
 $9 = $2; //@line 116 "../../iup_frame.c"
 $10 = ((($9)) + 52|0); //@line 116 "../../iup_frame.c"
 $11 = HEAP32[$10>>2]|0; //@line 116 "../../iup_frame.c"
 $12 = HEAP32[$6>>2]|0; //@line 116 "../../iup_frame.c"
 $13 = (($11) - ($12))|0; //@line 116 "../../iup_frame.c"
 $4 = $13; //@line 116 "../../iup_frame.c"
 $14 = $2; //@line 117 "../../iup_frame.c"
 $15 = ((($14)) + 56|0); //@line 117 "../../iup_frame.c"
 $16 = HEAP32[$15>>2]|0; //@line 117 "../../iup_frame.c"
 $17 = HEAP32[$7>>2]|0; //@line 117 "../../iup_frame.c"
 $18 = (($16) - ($17))|0; //@line 117 "../../iup_frame.c"
 $5 = $18; //@line 117 "../../iup_frame.c"
 $19 = $4; //@line 118 "../../iup_frame.c"
 $20 = ($19|0)<(0); //@line 118 "../../iup_frame.c"
 if ($20) {
  $4 = 0; //@line 118 "../../iup_frame.c"
 }
 $21 = $5; //@line 119 "../../iup_frame.c"
 $22 = ($21|0)<(0); //@line 119 "../../iup_frame.c"
 if ($22) {
  $5 = 0; //@line 119 "../../iup_frame.c"
 }
 $23 = $2; //@line 121 "../../iup_frame.c"
 $24 = ((($23)) + 64|0); //@line 121 "../../iup_frame.c"
 $25 = HEAP32[$24>>2]|0; //@line 121 "../../iup_frame.c"
 $26 = ($25|0)!=(0|0); //@line 121 "../../iup_frame.c"
 if (!($26)) {
  STACKTOP = sp;return; //@line 123 "../../iup_frame.c"
 }
 $27 = $2; //@line 122 "../../iup_frame.c"
 $28 = ((($27)) + 64|0); //@line 122 "../../iup_frame.c"
 $29 = HEAP32[$28>>2]|0; //@line 122 "../../iup_frame.c"
 $30 = $4; //@line 122 "../../iup_frame.c"
 $31 = $5; //@line 122 "../../iup_frame.c"
 $32 = $3; //@line 122 "../../iup_frame.c"
 _iupBaseSetCurrentSize($29,$30,$31,$32); //@line 122 "../../iup_frame.c"
 STACKTOP = sp;return; //@line 123 "../../iup_frame.c"
}
function _iFrameSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 16|0;
 $5 = sp + 12|0;
 $7 = sp + 4|0;
 $8 = sp;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 $9 = $3; //@line 127 "../../iup_frame.c"
 $10 = ((($9)) + 64|0); //@line 127 "../../iup_frame.c"
 $11 = HEAP32[$10>>2]|0; //@line 127 "../../iup_frame.c"
 $12 = ($11|0)!=(0|0); //@line 127 "../../iup_frame.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 155 "../../iup_frame.c"
 }
 $13 = $3; //@line 129 "../../iup_frame.c"
 $14 = (_iupAttribGet($13,17403)|0); //@line 129 "../../iup_frame.c"
 $6 = $14; //@line 129 "../../iup_frame.c"
 HEAP32[$4>>2] = 0; //@line 132 "../../iup_frame.c"
 HEAP32[$5>>2] = 0; //@line 133 "../../iup_frame.c"
 $15 = $6; //@line 135 "../../iup_frame.c"
 $16 = ($15|0)!=(0|0); //@line 135 "../../iup_frame.c"
 if ($16) {
  $17 = $6; //@line 135 "../../iup_frame.c"
  (_iupStrToIntInt($17,$4,$5,120)|0); //@line 135 "../../iup_frame.c"
 }
 $18 = (_iupdrvFrameHasClientOffset()|0); //@line 140 "../../iup_frame.c"
 $19 = ($18|0)!=(0); //@line 140 "../../iup_frame.c"
 if ($19) {
  HEAP32[$7>>2] = 0; //@line 142 "../../iup_frame.c"
  HEAP32[$8>>2] = 0; //@line 142 "../../iup_frame.c"
  _iupdrvFrameGetDecorOffset($7,$8); //@line 143 "../../iup_frame.c"
  $20 = $3; //@line 145 "../../iup_frame.c"
  $21 = (_iupAttribGet($20,13034)|0); //@line 145 "../../iup_frame.c"
  $22 = ($21|0)!=(0|0); //@line 145 "../../iup_frame.c"
  if ($22) {
   label = 7;
  } else {
   $23 = $3; //@line 145 "../../iup_frame.c"
   $24 = (_iupAttribGet($23,20508)|0); //@line 145 "../../iup_frame.c"
   $25 = ($24|0)!=(0|0); //@line 145 "../../iup_frame.c"
   if ($25) {
    label = 7;
   }
  }
  if ((label|0) == 7) {
   $26 = $3; //@line 146 "../../iup_frame.c"
   $27 = (_iupFrameGetTitleHeight($26)|0); //@line 146 "../../iup_frame.c"
   $28 = HEAP32[$8>>2]|0; //@line 146 "../../iup_frame.c"
   $29 = (($28) + ($27))|0; //@line 146 "../../iup_frame.c"
   HEAP32[$8>>2] = $29; //@line 146 "../../iup_frame.c"
  }
  $30 = HEAP32[$7>>2]|0; //@line 148 "../../iup_frame.c"
  $31 = HEAP32[$4>>2]|0; //@line 148 "../../iup_frame.c"
  $32 = (($31) + ($30))|0; //@line 148 "../../iup_frame.c"
  HEAP32[$4>>2] = $32; //@line 148 "../../iup_frame.c"
  $33 = HEAP32[$8>>2]|0; //@line 149 "../../iup_frame.c"
  $34 = HEAP32[$5>>2]|0; //@line 149 "../../iup_frame.c"
  $35 = (($34) + ($33))|0; //@line 149 "../../iup_frame.c"
  HEAP32[$5>>2] = $35; //@line 149 "../../iup_frame.c"
 }
 $36 = $3; //@line 153 "../../iup_frame.c"
 $37 = ((($36)) + 64|0); //@line 153 "../../iup_frame.c"
 $38 = HEAP32[$37>>2]|0; //@line 153 "../../iup_frame.c"
 $39 = HEAP32[$4>>2]|0; //@line 153 "../../iup_frame.c"
 $40 = HEAP32[$5>>2]|0; //@line 153 "../../iup_frame.c"
 _iupBaseSetPosition($38,$39,$40); //@line 153 "../../iup_frame.c"
 STACKTOP = sp;return; //@line 155 "../../iup_frame.c"
}
function _iFrameGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 4|0;
 $5 = sp;
 $1 = $0;
 $6 = $1; //@line 50 "../../iup_frame.c"
 $7 = ((($6)) + 52|0); //@line 50 "../../iup_frame.c"
 $8 = HEAP32[$7>>2]|0; //@line 50 "../../iup_frame.c"
 $2 = $8; //@line 50 "../../iup_frame.c"
 $9 = $1; //@line 51 "../../iup_frame.c"
 $10 = ((($9)) + 56|0); //@line 51 "../../iup_frame.c"
 $11 = HEAP32[$10>>2]|0; //@line 51 "../../iup_frame.c"
 $3 = $11; //@line 51 "../../iup_frame.c"
 $12 = $1; //@line 52 "../../iup_frame.c"
 _iFrameGetDecorSize($12,$4,$5); //@line 52 "../../iup_frame.c"
 $13 = HEAP32[$4>>2]|0; //@line 53 "../../iup_frame.c"
 $14 = $2; //@line 53 "../../iup_frame.c"
 $15 = (($14) - ($13))|0; //@line 53 "../../iup_frame.c"
 $2 = $15; //@line 53 "../../iup_frame.c"
 $16 = HEAP32[$5>>2]|0; //@line 54 "../../iup_frame.c"
 $17 = $3; //@line 54 "../../iup_frame.c"
 $18 = (($17) - ($16))|0; //@line 54 "../../iup_frame.c"
 $3 = $18; //@line 54 "../../iup_frame.c"
 $19 = $2; //@line 55 "../../iup_frame.c"
 $20 = ($19|0)<(0); //@line 55 "../../iup_frame.c"
 if ($20) {
  $2 = 0; //@line 55 "../../iup_frame.c"
 }
 $21 = $3; //@line 56 "../../iup_frame.c"
 $22 = ($21|0)<(0); //@line 56 "../../iup_frame.c"
 if (!($22)) {
  $23 = $2; //@line 57 "../../iup_frame.c"
  $24 = $3; //@line 57 "../../iup_frame.c"
  $25 = (_iupStrReturnIntInt($23,$24,120)|0); //@line 57 "../../iup_frame.c"
  STACKTOP = sp;return ($25|0); //@line 57 "../../iup_frame.c"
 }
 $3 = 0; //@line 56 "../../iup_frame.c"
 $23 = $2; //@line 57 "../../iup_frame.c"
 $24 = $3; //@line 57 "../../iup_frame.c"
 $25 = (_iupStrReturnIntInt($23,$24,120)|0); //@line 57 "../../iup_frame.c"
 STACKTOP = sp;return ($25|0); //@line 57 "../../iup_frame.c"
}
function _iFrameGetClientOffsetAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 HEAP32[$2>>2] = 0; //@line 62 "../../iup_frame.c"
 HEAP32[$3>>2] = 0; //@line 62 "../../iup_frame.c"
 $4 = (_iupdrvFrameHasClientOffset()|0); //@line 67 "../../iup_frame.c"
 $5 = ($4|0)!=(0); //@line 67 "../../iup_frame.c"
 do {
  if (!($5)) {
   _iupdrvFrameGetDecorOffset($2,$3); //@line 69 "../../iup_frame.c"
   $6 = $1; //@line 71 "../../iup_frame.c"
   $7 = (_iupAttribGet($6,13034)|0); //@line 71 "../../iup_frame.c"
   $8 = ($7|0)!=(0|0); //@line 71 "../../iup_frame.c"
   if (!($8)) {
    $9 = $1; //@line 71 "../../iup_frame.c"
    $10 = (_iupAttribGet($9,20508)|0); //@line 71 "../../iup_frame.c"
    $11 = ($10|0)!=(0|0); //@line 71 "../../iup_frame.c"
    if (!($11)) {
     break;
    }
   }
   $12 = $1; //@line 72 "../../iup_frame.c"
   $13 = (_iupFrameGetTitleHeight($12)|0); //@line 72 "../../iup_frame.c"
   $14 = HEAP32[$3>>2]|0; //@line 72 "../../iup_frame.c"
   $15 = (($14) + ($13))|0; //@line 72 "../../iup_frame.c"
   HEAP32[$3>>2] = $15; //@line 72 "../../iup_frame.c"
  }
 } while(0);
 $16 = HEAP32[$2>>2]|0; //@line 75 "../../iup_frame.c"
 $17 = HEAP32[$3>>2]|0; //@line 75 "../../iup_frame.c"
 $18 = (_iupStrReturnIntInt($16,$17,120)|0); //@line 75 "../../iup_frame.c"
 STACKTOP = sp;return ($18|0); //@line 75 "../../iup_frame.c"
}
function _iFrameGetDecorSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 32 "../../iup_frame.c"
 HEAP32[$6>>2] = 5; //@line 32 "../../iup_frame.c"
 $7 = $5; //@line 33 "../../iup_frame.c"
 HEAP32[$7>>2] = 5; //@line 33 "../../iup_frame.c"
 $8 = $3; //@line 35 "../../iup_frame.c"
 $9 = (_iupAttribGet($8,13034)|0); //@line 35 "../../iup_frame.c"
 $10 = ($9|0)!=(0|0); //@line 35 "../../iup_frame.c"
 if (!($10)) {
  $11 = $3; //@line 35 "../../iup_frame.c"
  $12 = (_iupAttribGet($11,20508)|0); //@line 35 "../../iup_frame.c"
  $13 = ($12|0)!=(0|0); //@line 35 "../../iup_frame.c"
  if (!($13)) {
   STACKTOP = sp;return; //@line 37 "../../iup_frame.c"
  }
 }
 $14 = $3; //@line 36 "../../iup_frame.c"
 $15 = (_iupFrameGetTitleHeight($14)|0); //@line 36 "../../iup_frame.c"
 $16 = $5; //@line 36 "../../iup_frame.c"
 $17 = HEAP32[$16>>2]|0; //@line 36 "../../iup_frame.c"
 $18 = (($17) + ($15))|0; //@line 36 "../../iup_frame.c"
 HEAP32[$16>>2] = $18; //@line 36 "../../iup_frame.c"
 STACKTOP = sp;return; //@line 37 "../../iup_frame.c"
}
function _iupFuncInit() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupTableCreate(11)|0); //@line 23 "../../iup_func.c"
 HEAP32[5858] = $0; //@line 23 "../../iup_func.c"
 return; //@line 24 "../../iup_func.c"
}
function _IupGetFunction($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp + 4|0;
 $2 = $0;
 $5 = $2; //@line 43 "../../iup_func.c"
 $6 = ($5|0)!=(0|0); //@line 43 "../../iup_func.c"
 if (!($6)) {
  $1 = 0; //@line 44 "../../iup_func.c"
  $19 = $1; //@line 55 "../../iup_func.c"
  STACKTOP = sp;return ($19|0); //@line 55 "../../iup_func.c"
 }
 $7 = $2; //@line 46 "../../iup_func.c"
 HEAP32[5857] = $7; //@line 46 "../../iup_func.c"
 $8 = HEAP32[5858]|0; //@line 48 "../../iup_func.c"
 $9 = $2; //@line 48 "../../iup_func.c"
 $10 = (_iupTableGetFunc($8,$9,$3)|0); //@line 48 "../../iup_func.c"
 $4 = $10; //@line 48 "../../iup_func.c"
 $11 = $4; //@line 51 "../../iup_func.c"
 $12 = ($11|0)!=(0|0); //@line 51 "../../iup_func.c"
 if (!($12)) {
  $13 = $2; //@line 51 "../../iup_func.c"
  $14 = (_iupStrEqual($13,13054)|0); //@line 51 "../../iup_func.c"
  $15 = ($14|0)!=(0); //@line 51 "../../iup_func.c"
  if (!($15)) {
   $16 = HEAP32[5858]|0; //@line 52 "../../iup_func.c"
   $17 = (_iupTableGetFunc($16,13066,$3)|0); //@line 52 "../../iup_func.c"
   $4 = $17; //@line 52 "../../iup_func.c"
  }
 }
 $18 = $4; //@line 54 "../../iup_func.c"
 $1 = $18; //@line 54 "../../iup_func.c"
 $19 = $1; //@line 55 "../../iup_func.c"
 STACKTOP = sp;return ($19|0); //@line 55 "../../iup_func.c"
}
function _IupSetFunction($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 63 "../../iup_func.c"
 $8 = ($7|0)!=(0|0); //@line 63 "../../iup_func.c"
 if (!($8)) {
  $2 = 0; //@line 64 "../../iup_func.c"
  $22 = $2; //@line 78 "../../iup_func.c"
  STACKTOP = sp;return ($22|0); //@line 78 "../../iup_func.c"
 }
 $9 = HEAP32[5858]|0; //@line 66 "../../iup_func.c"
 $10 = $3; //@line 66 "../../iup_func.c"
 $11 = (_iupTableGetFunc($9,$10,$5)|0); //@line 66 "../../iup_func.c"
 $6 = $11; //@line 66 "../../iup_func.c"
 $12 = $4; //@line 68 "../../iup_func.c"
 $13 = ($12|0)!=(0|0); //@line 68 "../../iup_func.c"
 $14 = HEAP32[5858]|0; //@line 71 "../../iup_func.c"
 $15 = $3; //@line 71 "../../iup_func.c"
 if ($13) {
  $16 = $4; //@line 71 "../../iup_func.c"
  _iupTableSetFunc($14,$15,$16); //@line 71 "../../iup_func.c"
 } else {
  _iupTableRemove($14,$15); //@line 69 "../../iup_func.c"
 }
 $17 = $3; //@line 74 "../../iup_func.c"
 $18 = (_iupStrEqual($17,13054)|0); //@line 74 "../../iup_func.c"
 $19 = ($18|0)!=(0); //@line 74 "../../iup_func.c"
 if ($19) {
  $20 = $4; //@line 75 "../../iup_func.c"
  _iupdrvSetIdleFunction($20); //@line 75 "../../iup_func.c"
 }
 $21 = $6; //@line 77 "../../iup_func.c"
 $2 = $21; //@line 77 "../../iup_func.c"
 $22 = $2; //@line 78 "../../iup_func.c"
 STACKTOP = sp;return ($22|0); //@line 78 "../../iup_func.c"
}
function _iupGlobalAttribInit() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupTableCreate(11)|0); //@line 29 "../../iup_globalattrib.c"
 HEAP32[5859] = $0; //@line 29 "../../iup_globalattrib.c"
 return; //@line 30 "../../iup_globalattrib.c"
}
function _iupGlobalDefaultColorChanged($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $2 = sp + 4|0;
 $1 = $0;
 dest=$2; src=13163; stop=dest+50|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 52 "../../iup_globalattrib.c"
 $3 = $1; //@line 53 "../../iup_globalattrib.c"
 (_strcat($2,$3)|0); //@line 53 "../../iup_globalattrib.c"
 $4 = HEAP32[5859]|0; //@line 54 "../../iup_globalattrib.c"
 $5 = (_iupTableGet($4,$2)|0); //@line 54 "../../iup_globalattrib.c"
 $6 = ($5|0)!=(0|0); //@line 54 "../../iup_globalattrib.c"
 $7 = $6&1; //@line 54 "../../iup_globalattrib.c"
 STACKTOP = sp;return ($7|0); //@line 54 "../../iup_globalattrib.c"
}
function _iupGlobalSetDefaultColorAttrib($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer = sp;
 $8 = sp + 28|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 59 "../../iup_globalattrib.c"
 $10 = (_iupGlobalDefaultColorChanged($9)|0); //@line 59 "../../iup_globalattrib.c"
 $11 = ($10|0)!=(0); //@line 59 "../../iup_globalattrib.c"
 if ($11) {
  STACKTOP = sp;return; //@line 65 "../../iup_globalattrib.c"
 }
 $12 = $5; //@line 62 "../../iup_globalattrib.c"
 $13 = $6; //@line 62 "../../iup_globalattrib.c"
 $14 = $7; //@line 62 "../../iup_globalattrib.c"
 HEAP32[$vararg_buffer>>2] = $12; //@line 62 "../../iup_globalattrib.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 62 "../../iup_globalattrib.c"
 HEAP32[$vararg_ptr1>>2] = $13; //@line 62 "../../iup_globalattrib.c"
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 62 "../../iup_globalattrib.c"
 HEAP32[$vararg_ptr2>>2] = $14; //@line 62 "../../iup_globalattrib.c"
 (_sprintf($8,13081,$vararg_buffer)|0); //@line 62 "../../iup_globalattrib.c"
 $15 = HEAP32[5859]|0; //@line 63 "../../iup_globalattrib.c"
 $16 = $4; //@line 63 "../../iup_globalattrib.c"
 _iupTableSet($15,$16,$8,1); //@line 63 "../../iup_globalattrib.c"
 STACKTOP = sp;return; //@line 65 "../../iup_globalattrib.c"
}
function _IupSetGlobal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 147 "../../iup_globalattrib.c"
 $5 = $3; //@line 147 "../../iup_globalattrib.c"
 _iGlobalSet($4,$5,0); //@line 147 "../../iup_globalattrib.c"
 STACKTOP = sp;return; //@line 148 "../../iup_globalattrib.c"
}
function _iGlobalSet($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer = sp;
 $6 = sp + 44|0;
 $7 = sp + 40|0;
 $8 = sp + 36|0;
 $9 = sp + 32|0;
 $10 = sp + 28|0;
 $11 = sp + 24|0;
 $12 = sp + 20|0;
 $13 = sp + 16|0;
 $14 = sp + 60|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $15 = $3; //@line 80 "../../iup_globalattrib.c"
 $16 = ($15|0)!=(0|0); //@line 80 "../../iup_globalattrib.c"
 if (!($16)) {
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $17 = $3; //@line 82 "../../iup_globalattrib.c"
 $18 = (_iupStrEqual($17,13090)|0); //@line 82 "../../iup_globalattrib.c"
 $19 = ($18|0)!=(0); //@line 82 "../../iup_globalattrib.c"
 if ($19) {
  $20 = $4; //@line 84 "../../iup_globalattrib.c"
  _iupSetDefaultFontSizeGlobalAttrib($20); //@line 84 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $21 = $3; //@line 87 "../../iup_globalattrib.c"
 $22 = (_iupStrEqual($21,13106)|0); //@line 87 "../../iup_globalattrib.c"
 $23 = ($22|0)!=(0); //@line 87 "../../iup_globalattrib.c"
 if ($23) {
  $24 = $4; //@line 89 "../../iup_globalattrib.c"
  (_iupSetDefaultFontStyleGlobalAttrib($24)|0); //@line 89 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $25 = $3; //@line 92 "../../iup_globalattrib.c"
 $26 = (_iupStrEqual($25,13123)|0); //@line 92 "../../iup_globalattrib.c"
 $27 = ($26|0)!=(0); //@line 92 "../../iup_globalattrib.c"
 if ($27) {
  $28 = $4; //@line 94 "../../iup_globalattrib.c"
  (_iupSetDefaultFontFaceGlobalAttrib($28)|0); //@line 94 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $29 = $3; //@line 97 "../../iup_globalattrib.c"
 $30 = (_iupStrEqual($29,20266)|0); //@line 97 "../../iup_globalattrib.c"
 $31 = ($30|0)!=(0); //@line 97 "../../iup_globalattrib.c"
 if ($31) {
  $32 = $4; //@line 100 "../../iup_globalattrib.c"
  $33 = (_iupStrToInt($32,$6)|0); //@line 100 "../../iup_globalattrib.c"
  $34 = ($33|0)!=(0); //@line 100 "../../iup_globalattrib.c"
  if (!($34)) {
   STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
  }
  $35 = HEAP32[$6>>2]|0; //@line 101 "../../iup_globalattrib.c"
  _iupdrvSendKey($35,1); //@line 101 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $36 = $3; //@line 104 "../../iup_globalattrib.c"
 $37 = (_iupStrEqual($36,20275)|0); //@line 104 "../../iup_globalattrib.c"
 $38 = ($37|0)!=(0); //@line 104 "../../iup_globalattrib.c"
 if ($38) {
  $39 = $4; //@line 107 "../../iup_globalattrib.c"
  $40 = (_iupStrToInt($39,$7)|0); //@line 107 "../../iup_globalattrib.c"
  $41 = ($40|0)!=(0); //@line 107 "../../iup_globalattrib.c"
  if (!($41)) {
   STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
  }
  $42 = HEAP32[$7>>2]|0; //@line 108 "../../iup_globalattrib.c"
  _iupdrvSendKey($42,2); //@line 108 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $43 = $3; //@line 111 "../../iup_globalattrib.c"
 $44 = (_iupStrEqual($43,20286)|0); //@line 111 "../../iup_globalattrib.c"
 $45 = ($44|0)!=(0); //@line 111 "../../iup_globalattrib.c"
 if ($45) {
  $46 = $4; //@line 114 "../../iup_globalattrib.c"
  $47 = (_iupStrToInt($46,$8)|0); //@line 114 "../../iup_globalattrib.c"
  $48 = ($47|0)!=(0); //@line 114 "../../iup_globalattrib.c"
  if (!($48)) {
   STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
  }
  $49 = HEAP32[$8>>2]|0; //@line 115 "../../iup_globalattrib.c"
  _iupdrvSendKey($49,3); //@line 115 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $50 = $3; //@line 118 "../../iup_globalattrib.c"
 $51 = (_iupStrEqual($50,20231)|0); //@line 118 "../../iup_globalattrib.c"
 $52 = ($51|0)!=(0); //@line 118 "../../iup_globalattrib.c"
 if ($52) {
  $53 = $4; //@line 120 "../../iup_globalattrib.c"
  _iupStrMessageUpdateLanguage($53); //@line 120 "../../iup_globalattrib.c"
  $54 = $3; //@line 121 "../../iup_globalattrib.c"
  $55 = $4; //@line 121 "../../iup_globalattrib.c"
  $56 = $5; //@line 121 "../../iup_globalattrib.c"
  _iGlobalTableSet($54,$55,$56); //@line 121 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $57 = $3; //@line 124 "../../iup_globalattrib.c"
 $58 = (_iupStrEqual($57,20240)|0); //@line 124 "../../iup_globalattrib.c"
 $59 = ($58|0)!=(0); //@line 124 "../../iup_globalattrib.c"
 if ($59) {
  $60 = $4; //@line 127 "../../iup_globalattrib.c"
  $61 = (_iupStrToIntInt($60,$9,$10,120)|0); //@line 127 "../../iup_globalattrib.c"
  $62 = ($61|0)==(2); //@line 127 "../../iup_globalattrib.c"
  if (!($62)) {
   STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
  }
  $63 = HEAP32[$9>>2]|0; //@line 128 "../../iup_globalattrib.c"
  $64 = HEAP32[$10>>2]|0; //@line 128 "../../iup_globalattrib.c"
  _iupdrvWarpPointer($63,$64); //@line 128 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $65 = $3; //@line 131 "../../iup_globalattrib.c"
 $66 = (_iupStrEqual($65,13139)|0); //@line 131 "../../iup_globalattrib.c"
 $67 = ($66|0)!=(0); //@line 131 "../../iup_globalattrib.c"
 if ($67) {
  $68 = $4; //@line 135 "../../iup_globalattrib.c"
  HEAP32[$vararg_buffer>>2] = $11; //@line 135 "../../iup_globalattrib.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 135 "../../iup_globalattrib.c"
  HEAP32[$vararg_ptr1>>2] = $12; //@line 135 "../../iup_globalattrib.c"
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 135 "../../iup_globalattrib.c"
  HEAP32[$vararg_ptr2>>2] = $14; //@line 135 "../../iup_globalattrib.c"
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 135 "../../iup_globalattrib.c"
  HEAP32[$vararg_ptr3>>2] = $13; //@line 135 "../../iup_globalattrib.c"
  $69 = (_sscanf($68,13151,$vararg_buffer)|0); //@line 135 "../../iup_globalattrib.c"
  $70 = ($69|0)==(4); //@line 135 "../../iup_globalattrib.c"
  if (!($70)) {
   STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
  }
  $71 = HEAP32[$11>>2]|0; //@line 136 "../../iup_globalattrib.c"
  $72 = HEAP32[$12>>2]|0; //@line 136 "../../iup_globalattrib.c"
  $73 = HEAP8[$14>>0]|0; //@line 136 "../../iup_globalattrib.c"
  $74 = $73 << 24 >> 24; //@line 136 "../../iup_globalattrib.c"
  $75 = HEAP32[$13>>2]|0; //@line 136 "../../iup_globalattrib.c"
  _iupdrvSendMouse($71,$72,$74,$75); //@line 136 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
 }
 $76 = $3; //@line 140 "../../iup_globalattrib.c"
 $77 = (_iGlobalChangingDefaultColor($76)|0); //@line 140 "../../iup_globalattrib.c"
 $78 = ($77|0)!=(0); //@line 140 "../../iup_globalattrib.c"
 if (!($78)) {
  $79 = $3; //@line 141 "../../iup_globalattrib.c"
  $80 = $4; //@line 141 "../../iup_globalattrib.c"
  $81 = (_iupdrvSetGlobal($79,$80)|0); //@line 141 "../../iup_globalattrib.c"
  $82 = ($81|0)!=(0); //@line 141 "../../iup_globalattrib.c"
  if (!($82)) {
   STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
  }
 }
 $83 = $3; //@line 142 "../../iup_globalattrib.c"
 $84 = $4; //@line 142 "../../iup_globalattrib.c"
 $85 = $5; //@line 142 "../../iup_globalattrib.c"
 _iGlobalTableSet($83,$84,$85); //@line 142 "../../iup_globalattrib.c"
 STACKTOP = sp;return; //@line 143 "../../iup_globalattrib.c"
}
function _iGlobalTableSet($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 69 "../../iup_globalattrib.c"
 $7 = ($6|0)!=(0|0); //@line 69 "../../iup_globalattrib.c"
 if (!($7)) {
  $8 = HEAP32[5859]|0; //@line 70 "../../iup_globalattrib.c"
  $9 = $3; //@line 70 "../../iup_globalattrib.c"
  _iupTableRemove($8,$9); //@line 70 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 75 "../../iup_globalattrib.c"
 }
 $10 = $5; //@line 71 "../../iup_globalattrib.c"
 $11 = ($10|0)!=(0); //@line 71 "../../iup_globalattrib.c"
 $12 = HEAP32[5859]|0; //@line 72 "../../iup_globalattrib.c"
 $13 = $3; //@line 72 "../../iup_globalattrib.c"
 $14 = $4; //@line 72 "../../iup_globalattrib.c"
 if ($11) {
  _iupTableSet($12,$13,$14,1); //@line 72 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 75 "../../iup_globalattrib.c"
 } else {
  _iupTableSet($12,$13,$14,0); //@line 74 "../../iup_globalattrib.c"
  STACKTOP = sp;return; //@line 75 "../../iup_globalattrib.c"
 }
}
function _iGlobalChangingDefaultColor($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $3 = sp + 8|0;
 $2 = $0;
 $4 = $2; //@line 40 "../../iup_globalattrib.c"
 $5 = (_iupClassIsGlobalDefault($4,1)|0); //@line 40 "../../iup_globalattrib.c"
 $6 = ($5|0)!=(0); //@line 40 "../../iup_globalattrib.c"
 if ($6) {
  dest=$3; src=13163; stop=dest+50|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 42 "../../iup_globalattrib.c"
  $7 = $2; //@line 43 "../../iup_globalattrib.c"
  (_strcat($3,$7)|0); //@line 43 "../../iup_globalattrib.c"
  $8 = HEAP32[5859]|0; //@line 44 "../../iup_globalattrib.c"
  _iupTableSet($8,$3,19938,0); //@line 44 "../../iup_globalattrib.c"
  $1 = 1; //@line 45 "../../iup_globalattrib.c"
  $9 = $1; //@line 48 "../../iup_globalattrib.c"
  STACKTOP = sp;return ($9|0); //@line 48 "../../iup_globalattrib.c"
 } else {
  $1 = 0; //@line 47 "../../iup_globalattrib.c"
  $9 = $1; //@line 48 "../../iup_globalattrib.c"
  STACKTOP = sp;return ($9|0); //@line 48 "../../iup_globalattrib.c"
 }
 return (0)|0;
}
function _IupStoreGlobal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 152 "../../iup_globalattrib.c"
 $5 = $3; //@line 152 "../../iup_globalattrib.c"
 _iGlobalSet($4,$5,1); //@line 152 "../../iup_globalattrib.c"
 STACKTOP = sp;return; //@line 153 "../../iup_globalattrib.c"
}
function _IupGetGlobal($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp + 32|0;
 $5 = sp + 28|0;
 $6 = sp + 53|0;
 $7 = sp + 48|0;
 $9 = sp + 20|0;
 $10 = sp + 16|0;
 $11 = sp + 12|0;
 $12 = sp + 8|0;
 $2 = $0;
 $15 = $2; //@line 165 "../../iup_globalattrib.c"
 $16 = ($15|0)!=(0|0); //@line 165 "../../iup_globalattrib.c"
 do {
  if ($16) {
   $17 = $2; //@line 168 "../../iup_globalattrib.c"
   $18 = (_iupStrEqual($17,13090)|0); //@line 168 "../../iup_globalattrib.c"
   $19 = ($18|0)!=(0); //@line 168 "../../iup_globalattrib.c"
   if ($19) {
    $20 = (_iupGetDefaultFontSizeGlobalAttrib()|0); //@line 169 "../../iup_globalattrib.c"
    $1 = $20; //@line 169 "../../iup_globalattrib.c"
    break;
   }
   $21 = $2; //@line 170 "../../iup_globalattrib.c"
   $22 = (_iupStrEqual($21,13106)|0); //@line 170 "../../iup_globalattrib.c"
   $23 = ($22|0)!=(0); //@line 170 "../../iup_globalattrib.c"
   if ($23) {
    $24 = (_iupGetDefaultFontStyleGlobalAttrib()|0); //@line 171 "../../iup_globalattrib.c"
    $1 = $24; //@line 171 "../../iup_globalattrib.c"
    break;
   }
   $25 = $2; //@line 172 "../../iup_globalattrib.c"
   $26 = (_iupStrEqual($25,13123)|0); //@line 172 "../../iup_globalattrib.c"
   $27 = ($26|0)!=(0); //@line 172 "../../iup_globalattrib.c"
   if ($27) {
    $28 = (_iupGetDefaultFontFaceGlobalAttrib()|0); //@line 173 "../../iup_globalattrib.c"
    $1 = $28; //@line 173 "../../iup_globalattrib.c"
    break;
   }
   $29 = $2; //@line 174 "../../iup_globalattrib.c"
   $30 = (_iupStrEqual($29,20240)|0); //@line 174 "../../iup_globalattrib.c"
   $31 = ($30|0)!=(0); //@line 174 "../../iup_globalattrib.c"
   if ($31) {
    _iupdrvGetCursorPos($4,$5); //@line 177 "../../iup_globalattrib.c"
    $32 = HEAP32[$4>>2]|0; //@line 178 "../../iup_globalattrib.c"
    $33 = HEAP32[$5>>2]|0; //@line 178 "../../iup_globalattrib.c"
    $34 = (_iupStrReturnIntInt($32,$33,120)|0); //@line 178 "../../iup_globalattrib.c"
    $1 = $34; //@line 178 "../../iup_globalattrib.c"
    break;
   }
   $35 = $2; //@line 180 "../../iup_globalattrib.c"
   $36 = (_iupStrEqual($35,13213)|0); //@line 180 "../../iup_globalattrib.c"
   $37 = ($36|0)!=(0); //@line 180 "../../iup_globalattrib.c"
   if ($37) {
    _iupdrvGetKeyState($6); //@line 183 "../../iup_globalattrib.c"
    $38 = HEAP8[$6>>0]|0; //@line 184 "../../iup_globalattrib.c"
    $39 = $38 << 24 >> 24; //@line 184 "../../iup_globalattrib.c"
    $40 = ($39|0)==(83); //@line 184 "../../iup_globalattrib.c"
    $41 = $40&1; //@line 184 "../../iup_globalattrib.c"
    $42 = (_iupStrReturnChecked($41)|0); //@line 184 "../../iup_globalattrib.c"
    $1 = $42; //@line 184 "../../iup_globalattrib.c"
    break;
   }
   $43 = $2; //@line 186 "../../iup_globalattrib.c"
   $44 = (_iupStrEqual($43,13222)|0); //@line 186 "../../iup_globalattrib.c"
   $45 = ($44|0)!=(0); //@line 186 "../../iup_globalattrib.c"
   if ($45) {
    _iupdrvGetKeyState($7); //@line 189 "../../iup_globalattrib.c"
    $46 = ((($7)) + 1|0); //@line 190 "../../iup_globalattrib.c"
    $47 = HEAP8[$46>>0]|0; //@line 190 "../../iup_globalattrib.c"
    $48 = $47 << 24 >> 24; //@line 190 "../../iup_globalattrib.c"
    $49 = ($48|0)==(67); //@line 190 "../../iup_globalattrib.c"
    $50 = $49&1; //@line 190 "../../iup_globalattrib.c"
    $51 = (_iupStrReturnChecked($50)|0); //@line 190 "../../iup_globalattrib.c"
    $1 = $51; //@line 190 "../../iup_globalattrib.c"
    break;
   }
   $52 = $2; //@line 192 "../../iup_globalattrib.c"
   $53 = (_iupStrEqual($52,13233)|0); //@line 192 "../../iup_globalattrib.c"
   $54 = ($53|0)!=(0); //@line 192 "../../iup_globalattrib.c"
   if ($54) {
    $55 = (_iupStrGetMemory(5)|0); //@line 194 "../../iup_globalattrib.c"
    $8 = $55; //@line 194 "../../iup_globalattrib.c"
    $56 = $8; //@line 195 "../../iup_globalattrib.c"
    _iupdrvGetKeyState($56); //@line 195 "../../iup_globalattrib.c"
    $57 = $8; //@line 196 "../../iup_globalattrib.c"
    $1 = $57; //@line 196 "../../iup_globalattrib.c"
    break;
   }
   $58 = $2; //@line 198 "../../iup_globalattrib.c"
   $59 = (_iupStrEqual($58,13245)|0); //@line 198 "../../iup_globalattrib.c"
   $60 = ($59|0)!=(0); //@line 198 "../../iup_globalattrib.c"
   if ($60) {
    _iupdrvGetScreenSize($9,$10); //@line 201 "../../iup_globalattrib.c"
    $61 = HEAP32[$9>>2]|0; //@line 202 "../../iup_globalattrib.c"
    $62 = HEAP32[$10>>2]|0; //@line 202 "../../iup_globalattrib.c"
    $63 = (_iupStrReturnIntInt($61,$62,120)|0); //@line 202 "../../iup_globalattrib.c"
    $1 = $63; //@line 202 "../../iup_globalattrib.c"
    break;
   }
   $64 = $2; //@line 204 "../../iup_globalattrib.c"
   $65 = (_iupStrEqual($64,13256)|0); //@line 204 "../../iup_globalattrib.c"
   $66 = ($65|0)!=(0); //@line 204 "../../iup_globalattrib.c"
   if ($66) {
    _iupdrvGetFullSize($11,$12); //@line 207 "../../iup_globalattrib.c"
    $67 = HEAP32[$11>>2]|0; //@line 208 "../../iup_globalattrib.c"
    $68 = HEAP32[$12>>2]|0; //@line 208 "../../iup_globalattrib.c"
    $69 = (_iupStrReturnIntInt($67,$68,120)|0); //@line 208 "../../iup_globalattrib.c"
    $1 = $69; //@line 208 "../../iup_globalattrib.c"
    break;
   }
   $70 = $2; //@line 210 "../../iup_globalattrib.c"
   $71 = (_iupStrEqual($70,13265)|0); //@line 210 "../../iup_globalattrib.c"
   $72 = ($71|0)!=(0); //@line 210 "../../iup_globalattrib.c"
   if ($72) {
    $73 = (_iupdrvGetScreenDepth()|0); //@line 212 "../../iup_globalattrib.c"
    $13 = $73; //@line 212 "../../iup_globalattrib.c"
    $74 = $13; //@line 213 "../../iup_globalattrib.c"
    $75 = (_iupStrReturnInt($74)|0); //@line 213 "../../iup_globalattrib.c"
    $1 = $75; //@line 213 "../../iup_globalattrib.c"
    break;
   }
   $76 = $2; //@line 215 "../../iup_globalattrib.c"
   $77 = (_iupStrEqual($76,13277)|0); //@line 215 "../../iup_globalattrib.c"
   $78 = ($77|0)!=(0); //@line 215 "../../iup_globalattrib.c"
   if ($78) {
    $79 = (+_iupdrvGetScreenDpi()); //@line 217 "../../iup_globalattrib.c"
    $14 = $79; //@line 217 "../../iup_globalattrib.c"
    $80 = $14; //@line 218 "../../iup_globalattrib.c"
    $81 = (_iupStrReturnFloat($80)|0); //@line 218 "../../iup_globalattrib.c"
    $1 = $81; //@line 218 "../../iup_globalattrib.c"
    break;
   }
   $82 = $2; //@line 220 "../../iup_globalattrib.c"
   $83 = (_iupStrEqual($82,13287)|0); //@line 220 "../../iup_globalattrib.c"
   $84 = ($83|0)!=(0); //@line 220 "../../iup_globalattrib.c"
   if ($84) {
    $85 = (_iupdrvLocaleInfo()|0); //@line 221 "../../iup_globalattrib.c"
    $1 = $85; //@line 221 "../../iup_globalattrib.c"
    break;
   }
   $86 = $2; //@line 222 "../../iup_globalattrib.c"
   $87 = (_iupStrEqual($86,13300)|0); //@line 222 "../../iup_globalattrib.c"
   $88 = ($87|0)!=(0); //@line 222 "../../iup_globalattrib.c"
   if ($88) {
    $89 = (_iupdrvGetScrollbarSize()|0); //@line 223 "../../iup_globalattrib.c"
    $90 = (_iupStrReturnInt($89)|0); //@line 223 "../../iup_globalattrib.c"
    $1 = $90; //@line 223 "../../iup_globalattrib.c"
    break;
   }
   $91 = $2; //@line 225 "../../iup_globalattrib.c"
   $92 = (_iupdrvGetGlobal($91)|0); //@line 225 "../../iup_globalattrib.c"
   $3 = $92; //@line 225 "../../iup_globalattrib.c"
   $93 = $3; //@line 227 "../../iup_globalattrib.c"
   $94 = ($93|0)!=(0|0); //@line 227 "../../iup_globalattrib.c"
   if (!($94)) {
    $95 = HEAP32[5859]|0; //@line 228 "../../iup_globalattrib.c"
    $96 = $2; //@line 228 "../../iup_globalattrib.c"
    $97 = (_iupTableGet($95,$96)|0); //@line 228 "../../iup_globalattrib.c"
    $3 = $97; //@line 228 "../../iup_globalattrib.c"
   }
   $98 = $3; //@line 230 "../../iup_globalattrib.c"
   $1 = $98; //@line 230 "../../iup_globalattrib.c"
  } else {
   $1 = 0; //@line 166 "../../iup_globalattrib.c"
  }
 } while(0);
 $99 = $1; //@line 231 "../../iup_globalattrib.c"
 STACKTOP = sp;return ($99|0); //@line 231 "../../iup_globalattrib.c"
}
function _iupGridBoxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 998 "../../iup_gridbox.c"
 $0 = $1; //@line 998 "../../iup_gridbox.c"
 $2 = $0; //@line 1000 "../../iup_gridbox.c"
 HEAP32[$2>>2] = 13314; //@line 1000 "../../iup_gridbox.c"
 $3 = $0; //@line 1001 "../../iup_gridbox.c"
 $4 = ((($3)) + 4|0); //@line 1001 "../../iup_gridbox.c"
 HEAP32[$4>>2] = 20071; //@line 1001 "../../iup_gridbox.c"
 $5 = $0; //@line 1002 "../../iup_gridbox.c"
 $6 = ((($5)) + 8|0); //@line 1002 "../../iup_gridbox.c"
 HEAP32[$6>>2] = 0; //@line 1002 "../../iup_gridbox.c"
 $7 = $0; //@line 1003 "../../iup_gridbox.c"
 $8 = ((($7)) + 12|0); //@line 1003 "../../iup_gridbox.c"
 HEAP32[$8>>2] = 1; //@line 1003 "../../iup_gridbox.c"
 $9 = $0; //@line 1004 "../../iup_gridbox.c"
 $10 = ((($9)) + 16|0); //@line 1004 "../../iup_gridbox.c"
 HEAP32[$10>>2] = 0; //@line 1004 "../../iup_gridbox.c"
 $11 = $0; //@line 1007 "../../iup_gridbox.c"
 $12 = ((($11)) + 32|0); //@line 1007 "../../iup_gridbox.c"
 HEAP32[$12>>2] = 235; //@line 1007 "../../iup_gridbox.c"
 $13 = $0; //@line 1008 "../../iup_gridbox.c"
 $14 = ((($13)) + 40|0); //@line 1008 "../../iup_gridbox.c"
 HEAP32[$14>>2] = 236; //@line 1008 "../../iup_gridbox.c"
 $15 = $0; //@line 1009 "../../iup_gridbox.c"
 $16 = ((($15)) + 44|0); //@line 1009 "../../iup_gridbox.c"
 HEAP32[$16>>2] = 26; //@line 1009 "../../iup_gridbox.c"
 $17 = $0; //@line 1010 "../../iup_gridbox.c"
 $18 = ((($17)) + 76|0); //@line 1010 "../../iup_gridbox.c"
 HEAP32[$18>>2] = 237; //@line 1010 "../../iup_gridbox.c"
 $19 = $0; //@line 1011 "../../iup_gridbox.c"
 $20 = ((($19)) + 80|0); //@line 1011 "../../iup_gridbox.c"
 HEAP32[$20>>2] = 238; //@line 1011 "../../iup_gridbox.c"
 $21 = $0; //@line 1012 "../../iup_gridbox.c"
 $22 = ((($21)) + 84|0); //@line 1012 "../../iup_gridbox.c"
 HEAP32[$22>>2] = 239; //@line 1012 "../../iup_gridbox.c"
 $23 = $0; //@line 1015 "../../iup_gridbox.c"
 _iupBaseRegisterCommonAttrib($23); //@line 1015 "../../iup_gridbox.c"
 $24 = $0; //@line 1018 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($24,20073,20,0,(-1),20441,9); //@line 1018 "../../iup_gridbox.c"
 $25 = $0; //@line 1019 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($25,20080,240,0,0,0,41); //@line 1019 "../../iup_gridbox.c"
 $26 = $0; //@line 1020 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($26,20091,28,0,0,0,41); //@line 1020 "../../iup_gridbox.c"
 $27 = $0; //@line 1023 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($27,20666,241,242,(-1),15836,8); //@line 1023 "../../iup_gridbox.c"
 $28 = $0; //@line 1024 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($28,13322,243,244,(-1),15836,520); //@line 1024 "../../iup_gridbox.c"
 $29 = $0; //@line 1025 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($29,13330,241,242,(-1),15836,521); //@line 1025 "../../iup_gridbox.c"
 $30 = $0; //@line 1026 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($30,13338,243,244,(-1),15836,521); //@line 1026 "../../iup_gridbox.c"
 $31 = $0; //@line 1028 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($31,13347,245,246,0,0,9); //@line 1028 "../../iup_gridbox.c"
 $32 = $0; //@line 1029 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($32,13362,247,248,0,0,9); //@line 1029 "../../iup_gridbox.c"
 $33 = $0; //@line 1030 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($33,13377,249,250,0,0,9); //@line 1030 "../../iup_gridbox.c"
 $34 = $0; //@line 1031 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($34,13392,251,252,(-1),14846,9); //@line 1031 "../../iup_gridbox.c"
 $35 = $0; //@line 1034 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($35,13406,253,254,(-1),19944,8); //@line 1034 "../../iup_gridbox.c"
 $36 = $0; //@line 1035 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($36,13413,255,256,(-1),19944,520); //@line 1035 "../../iup_gridbox.c"
 $37 = $0; //@line 1036 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($37,13421,257,258,(-1),19944,8); //@line 1036 "../../iup_gridbox.c"
 $38 = $0; //@line 1037 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($38,13428,259,260,(-1),19944,520); //@line 1037 "../../iup_gridbox.c"
 $39 = $0; //@line 1038 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($39,13436,253,254,(-1),19944,521); //@line 1038 "../../iup_gridbox.c"
 $40 = $0; //@line 1039 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($40,13444,255,256,(-1),19944,521); //@line 1039 "../../iup_gridbox.c"
 $41 = $0; //@line 1040 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($41,13453,257,258,(-1),19944,521); //@line 1040 "../../iup_gridbox.c"
 $42 = $0; //@line 1041 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($42,13461,259,260,(-1),19944,521); //@line 1041 "../../iup_gridbox.c"
 $43 = $0; //@line 1043 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($43,13470,261,262,(-1),20143,9); //@line 1043 "../../iup_gridbox.c"
 $44 = $0; //@line 1044 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($44,13483,263,264,(-1),20156,9); //@line 1044 "../../iup_gridbox.c"
 $45 = $0; //@line 1045 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($45,19962,265,266,0,0,9); //@line 1045 "../../iup_gridbox.c"
 $46 = $0; //@line 1046 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($46,13496,267,268,(-1),13503,9); //@line 1046 "../../iup_gridbox.c"
 $47 = $0; //@line 1047 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($47,13508,269,0,0,0,41); //@line 1047 "../../iup_gridbox.c"
 $48 = $0; //@line 1048 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($48,13515,270,0,0,0,41); //@line 1048 "../../iup_gridbox.c"
 $49 = $0; //@line 1049 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($49,13522,271,272,(-1),19944,8); //@line 1049 "../../iup_gridbox.c"
 $50 = $0; //@line 1050 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($50,13530,273,274,(-1),19944,8); //@line 1050 "../../iup_gridbox.c"
 $51 = $0; //@line 1051 "../../iup_gridbox.c"
 _iupClassRegisterAttribute($51,13538,0,275,0,0,73); //@line 1051 "../../iup_gridbox.c"
 $52 = $0; //@line 1053 "../../iup_gridbox.c"
 STACKTOP = sp;return ($52|0); //@line 1053 "../../iup_gridbox.c"
}
function _iGridBoxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = (_calloc(1,80)|0); //@line 952 "../../iup_gridbox.c"
 $6 = $2; //@line 952 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 952 "../../iup_gridbox.c"
 HEAP32[$7>>2] = $5; //@line 952 "../../iup_gridbox.c"
 $8 = $3; //@line 954 "../../iup_gridbox.c"
 $9 = ($8|0)!=(0|0); //@line 954 "../../iup_gridbox.c"
 L1: do {
  if ($9) {
   $10 = $3; //@line 956 "../../iup_gridbox.c"
   $4 = $10; //@line 956 "../../iup_gridbox.c"
   while(1) {
    $11 = $4; //@line 957 "../../iup_gridbox.c"
    $12 = HEAP32[$11>>2]|0; //@line 957 "../../iup_gridbox.c"
    $13 = ($12|0)!=(0|0); //@line 957 "../../iup_gridbox.c"
    if (!($13)) {
     break L1;
    }
    $14 = $2; //@line 959 "../../iup_gridbox.c"
    $15 = $4; //@line 959 "../../iup_gridbox.c"
    $16 = HEAP32[$15>>2]|0; //@line 959 "../../iup_gridbox.c"
    (_IupAppend($14,$16)|0); //@line 959 "../../iup_gridbox.c"
    $17 = $4; //@line 960 "../../iup_gridbox.c"
    $18 = ((($17)) + 4|0); //@line 960 "../../iup_gridbox.c"
    $4 = $18; //@line 960 "../../iup_gridbox.c"
   }
  }
 } while(0);
 $19 = $2; //@line 964 "../../iup_gridbox.c"
 $20 = ((($19)) + 72|0); //@line 964 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 964 "../../iup_gridbox.c"
 $22 = ((($21)) + 52|0); //@line 964 "../../iup_gridbox.c"
 HEAP32[$22>>2] = -1; //@line 964 "../../iup_gridbox.c"
 $23 = $2; //@line 966 "../../iup_gridbox.c"
 (_IupSetCallback($23,13577,276)|0); //@line 966 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 968 "../../iup_gridbox.c"
}
function _iGridBoxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $18 = sp + 4|0;
 $19 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $13 = 0; //@line 537 "../../iup_gridbox.c"
 $14 = 0; //@line 537 "../../iup_gridbox.c"
 $15 = 0; //@line 540 "../../iup_gridbox.c"
 $16 = 0; //@line 541 "../../iup_gridbox.c"
 $17 = 0; //@line 542 "../../iup_gridbox.c"
 $20 = $4; //@line 544 "../../iup_gridbox.c"
 $21 = ((($20)) + 64|0); //@line 544 "../../iup_gridbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 544 "../../iup_gridbox.c"
 $8 = $22; //@line 544 "../../iup_gridbox.c"
 while(1) {
  $23 = $8; //@line 544 "../../iup_gridbox.c"
  $24 = ($23|0)!=(0|0); //@line 544 "../../iup_gridbox.c"
  $25 = $4; //@line 546 "../../iup_gridbox.c"
  $26 = ((($25)) + 72|0); //@line 546 "../../iup_gridbox.c"
  $27 = HEAP32[$26>>2]|0; //@line 546 "../../iup_gridbox.c"
  if (!($24)) {
   break;
  }
  $28 = ((($27)) + 8|0); //@line 546 "../../iup_gridbox.c"
  $29 = HEAP32[$28>>2]|0; //@line 546 "../../iup_gridbox.c"
  $30 = ($29|0)!=(0); //@line 546 "../../iup_gridbox.c"
  if ($30) {
   $31 = $4; //@line 547 "../../iup_gridbox.c"
   $32 = ((($31)) + 72|0); //@line 547 "../../iup_gridbox.c"
   $33 = HEAP32[$32>>2]|0; //@line 547 "../../iup_gridbox.c"
   $34 = ((($33)) + 8|0); //@line 547 "../../iup_gridbox.c"
   $35 = HEAP32[$34>>2]|0; //@line 547 "../../iup_gridbox.c"
   $36 = $8; //@line 547 "../../iup_gridbox.c"
   $37 = ((($36)) + 20|0); //@line 547 "../../iup_gridbox.c"
   HEAP32[$37>>2] = $35; //@line 547 "../../iup_gridbox.c"
  }
  $38 = $8; //@line 550 "../../iup_gridbox.c"
  $39 = ((($38)) + 24|0); //@line 550 "../../iup_gridbox.c"
  $40 = HEAP32[$39>>2]|0; //@line 550 "../../iup_gridbox.c"
  $41 = $40 & 2; //@line 550 "../../iup_gridbox.c"
  $42 = ($41|0)!=(0); //@line 550 "../../iup_gridbox.c"
  if (!($42)) {
   $43 = $8; //@line 551 "../../iup_gridbox.c"
   _iupBaseComputeNaturalSize($43); //@line 551 "../../iup_gridbox.c"
  }
  $44 = $8; //@line 553 "../../iup_gridbox.c"
  $45 = ((($44)) + 24|0); //@line 553 "../../iup_gridbox.c"
  $46 = HEAP32[$45>>2]|0; //@line 553 "../../iup_gridbox.c"
  $47 = $46 & 1; //@line 553 "../../iup_gridbox.c"
  $48 = ($47|0)!=(0); //@line 553 "../../iup_gridbox.c"
  if (!($48)) {
   $49 = $8; //@line 555 "../../iup_gridbox.c"
   $50 = ((($49)) + 20|0); //@line 555 "../../iup_gridbox.c"
   $51 = HEAP32[$50>>2]|0; //@line 555 "../../iup_gridbox.c"
   $52 = $7; //@line 555 "../../iup_gridbox.c"
   $53 = HEAP32[$52>>2]|0; //@line 555 "../../iup_gridbox.c"
   $54 = $53 | $51; //@line 555 "../../iup_gridbox.c"
   HEAP32[$52>>2] = $54; //@line 555 "../../iup_gridbox.c"
   $55 = $17; //@line 556 "../../iup_gridbox.c"
   $56 = (($55) + 1)|0; //@line 556 "../../iup_gridbox.c"
   $17 = $56; //@line 556 "../../iup_gridbox.c"
  }
  $57 = $8; //@line 544 "../../iup_gridbox.c"
  $58 = ((($57)) + 68|0); //@line 544 "../../iup_gridbox.c"
  $59 = HEAP32[$58>>2]|0; //@line 544 "../../iup_gridbox.c"
  $8 = $59; //@line 544 "../../iup_gridbox.c"
 }
 $60 = ((($27)) + 52|0); //@line 560 "../../iup_gridbox.c"
 $61 = HEAP32[$60>>2]|0; //@line 560 "../../iup_gridbox.c"
 $62 = ($61|0)==(-1); //@line 560 "../../iup_gridbox.c"
 $63 = $4; //@line 561 "../../iup_gridbox.c"
 if ($62) {
  $64 = (_iGridBoxCalcNumDiv($63)|0); //@line 561 "../../iup_gridbox.c"
  $11 = $64; //@line 561 "../../iup_gridbox.c"
 } else {
  $65 = ((($63)) + 72|0); //@line 563 "../../iup_gridbox.c"
  $66 = HEAP32[$65>>2]|0; //@line 563 "../../iup_gridbox.c"
  $67 = ((($66)) + 52|0); //@line 563 "../../iup_gridbox.c"
  $68 = HEAP32[$67>>2]|0; //@line 563 "../../iup_gridbox.c"
  $11 = $68; //@line 563 "../../iup_gridbox.c"
 }
 $69 = $4; //@line 566 "../../iup_gridbox.c"
 $70 = ((($69)) + 72|0); //@line 566 "../../iup_gridbox.c"
 $71 = HEAP32[$70>>2]|0; //@line 566 "../../iup_gridbox.c"
 $72 = ((($71)) + 48|0); //@line 566 "../../iup_gridbox.c"
 $73 = HEAP32[$72>>2]|0; //@line 566 "../../iup_gridbox.c"
 $74 = ($73|0)==(0); //@line 566 "../../iup_gridbox.c"
 if ($74) {
  $75 = $17; //@line 568 "../../iup_gridbox.c"
  $76 = $11; //@line 568 "../../iup_gridbox.c"
  $77 = (($75|0) / ($76|0))&-1; //@line 568 "../../iup_gridbox.c"
  $9 = $77; //@line 568 "../../iup_gridbox.c"
  $78 = $17; //@line 569 "../../iup_gridbox.c"
  $79 = $11; //@line 569 "../../iup_gridbox.c"
  $80 = (($78|0) % ($79|0))&-1; //@line 569 "../../iup_gridbox.c"
  $81 = ($80|0)!=(0); //@line 569 "../../iup_gridbox.c"
  if ($81) {
   $82 = $9; //@line 570 "../../iup_gridbox.c"
   $83 = (($82) + 1)|0; //@line 570 "../../iup_gridbox.c"
   $9 = $83; //@line 570 "../../iup_gridbox.c"
  }
  $84 = $11; //@line 571 "../../iup_gridbox.c"
  $10 = $84; //@line 571 "../../iup_gridbox.c"
 } else {
  $85 = $11; //@line 575 "../../iup_gridbox.c"
  $9 = $85; //@line 575 "../../iup_gridbox.c"
  $86 = $17; //@line 576 "../../iup_gridbox.c"
  $87 = $11; //@line 576 "../../iup_gridbox.c"
  $88 = (($86|0) / ($87|0))&-1; //@line 576 "../../iup_gridbox.c"
  $10 = $88; //@line 576 "../../iup_gridbox.c"
  $89 = $17; //@line 577 "../../iup_gridbox.c"
  $90 = $11; //@line 577 "../../iup_gridbox.c"
  $91 = (($89|0) % ($90|0))&-1; //@line 577 "../../iup_gridbox.c"
  $92 = ($91|0)!=(0); //@line 577 "../../iup_gridbox.c"
  if ($92) {
   $93 = $10; //@line 578 "../../iup_gridbox.c"
   $94 = (($93) + 1)|0; //@line 578 "../../iup_gridbox.c"
   $10 = $94; //@line 578 "../../iup_gridbox.c"
  }
 }
 $95 = $9; //@line 582 "../../iup_gridbox.c"
 $96 = $4; //@line 582 "../../iup_gridbox.c"
 $97 = ((($96)) + 72|0); //@line 582 "../../iup_gridbox.c"
 $98 = HEAP32[$97>>2]|0; //@line 582 "../../iup_gridbox.c"
 $99 = ((($98)) + 56|0); //@line 582 "../../iup_gridbox.c"
 HEAP32[$99>>2] = $95; //@line 582 "../../iup_gridbox.c"
 $100 = $10; //@line 583 "../../iup_gridbox.c"
 $101 = $4; //@line 583 "../../iup_gridbox.c"
 $102 = ((($101)) + 72|0); //@line 583 "../../iup_gridbox.c"
 $103 = HEAP32[$102>>2]|0; //@line 583 "../../iup_gridbox.c"
 $104 = ((($103)) + 60|0); //@line 583 "../../iup_gridbox.c"
 HEAP32[$104>>2] = $100; //@line 583 "../../iup_gridbox.c"
 $12 = 0; //@line 588 "../../iup_gridbox.c"
 $105 = $4; //@line 589 "../../iup_gridbox.c"
 $106 = ((($105)) + 64|0); //@line 589 "../../iup_gridbox.c"
 $107 = HEAP32[$106>>2]|0; //@line 589 "../../iup_gridbox.c"
 $8 = $107; //@line 589 "../../iup_gridbox.c"
 while(1) {
  $108 = $8; //@line 589 "../../iup_gridbox.c"
  $109 = ($108|0)!=(0|0); //@line 589 "../../iup_gridbox.c"
  if (!($109)) {
   break;
  }
  $110 = $8; //@line 591 "../../iup_gridbox.c"
  $111 = ((($110)) + 24|0); //@line 591 "../../iup_gridbox.c"
  $112 = HEAP32[$111>>2]|0; //@line 591 "../../iup_gridbox.c"
  $113 = $112 & 1; //@line 591 "../../iup_gridbox.c"
  $114 = ($113|0)!=(0); //@line 591 "../../iup_gridbox.c"
  if (!($114)) {
   $115 = $4; //@line 594 "../../iup_gridbox.c"
   $116 = $12; //@line 594 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($115,$116,$18,$19); //@line 594 "../../iup_gridbox.c"
   $117 = HEAP32[$19>>2]|0; //@line 596 "../../iup_gridbox.c"
   $118 = $4; //@line 596 "../../iup_gridbox.c"
   $119 = ((($118)) + 72|0); //@line 596 "../../iup_gridbox.c"
   $120 = HEAP32[$119>>2]|0; //@line 596 "../../iup_gridbox.c"
   $121 = ((($120)) + 36|0); //@line 596 "../../iup_gridbox.c"
   $122 = HEAP32[$121>>2]|0; //@line 596 "../../iup_gridbox.c"
   $123 = ($117|0)==($122|0); //@line 596 "../../iup_gridbox.c"
   if ($123) {
    $124 = $8; //@line 598 "../../iup_gridbox.c"
    $125 = ((($124)) + 48|0); //@line 598 "../../iup_gridbox.c"
    $126 = HEAP32[$125>>2]|0; //@line 598 "../../iup_gridbox.c"
    $127 = $14; //@line 598 "../../iup_gridbox.c"
    $128 = (($127) + ($126))|0; //@line 598 "../../iup_gridbox.c"
    $14 = $128; //@line 598 "../../iup_gridbox.c"
    $129 = $16; //@line 599 "../../iup_gridbox.c"
    $130 = $8; //@line 599 "../../iup_gridbox.c"
    $131 = ((($130)) + 48|0); //@line 599 "../../iup_gridbox.c"
    $132 = HEAP32[$131>>2]|0; //@line 599 "../../iup_gridbox.c"
    $133 = ($129|0)>($132|0); //@line 599 "../../iup_gridbox.c"
    if ($133) {
     $134 = $16; //@line 599 "../../iup_gridbox.c"
     $138 = $134;
    } else {
     $135 = $8; //@line 599 "../../iup_gridbox.c"
     $136 = ((($135)) + 48|0); //@line 599 "../../iup_gridbox.c"
     $137 = HEAP32[$136>>2]|0; //@line 599 "../../iup_gridbox.c"
     $138 = $137;
    }
    $16 = $138; //@line 599 "../../iup_gridbox.c"
   }
   $139 = HEAP32[$18>>2]|0; //@line 601 "../../iup_gridbox.c"
   $140 = $4; //@line 601 "../../iup_gridbox.c"
   $141 = ((($140)) + 72|0); //@line 601 "../../iup_gridbox.c"
   $142 = HEAP32[$141>>2]|0; //@line 601 "../../iup_gridbox.c"
   $143 = ((($142)) + 32|0); //@line 601 "../../iup_gridbox.c"
   $144 = HEAP32[$143>>2]|0; //@line 601 "../../iup_gridbox.c"
   $145 = ($139|0)==($144|0); //@line 601 "../../iup_gridbox.c"
   if ($145) {
    $146 = $8; //@line 603 "../../iup_gridbox.c"
    $147 = ((($146)) + 44|0); //@line 603 "../../iup_gridbox.c"
    $148 = HEAP32[$147>>2]|0; //@line 603 "../../iup_gridbox.c"
    $149 = $13; //@line 603 "../../iup_gridbox.c"
    $150 = (($149) + ($148))|0; //@line 603 "../../iup_gridbox.c"
    $13 = $150; //@line 603 "../../iup_gridbox.c"
    $151 = $15; //@line 604 "../../iup_gridbox.c"
    $152 = $8; //@line 604 "../../iup_gridbox.c"
    $153 = ((($152)) + 44|0); //@line 604 "../../iup_gridbox.c"
    $154 = HEAP32[$153>>2]|0; //@line 604 "../../iup_gridbox.c"
    $155 = ($151|0)>($154|0); //@line 604 "../../iup_gridbox.c"
    if ($155) {
     $156 = $15; //@line 604 "../../iup_gridbox.c"
     $160 = $156;
    } else {
     $157 = $8; //@line 604 "../../iup_gridbox.c"
     $158 = ((($157)) + 44|0); //@line 604 "../../iup_gridbox.c"
     $159 = HEAP32[$158>>2]|0; //@line 604 "../../iup_gridbox.c"
     $160 = $159;
    }
    $15 = $160; //@line 604 "../../iup_gridbox.c"
   }
   $161 = $12; //@line 607 "../../iup_gridbox.c"
   $162 = (($161) + 1)|0; //@line 607 "../../iup_gridbox.c"
   $12 = $162; //@line 607 "../../iup_gridbox.c"
  }
  $163 = $8; //@line 589 "../../iup_gridbox.c"
  $164 = ((($163)) + 68|0); //@line 589 "../../iup_gridbox.c"
  $165 = HEAP32[$164>>2]|0; //@line 589 "../../iup_gridbox.c"
  $8 = $165; //@line 589 "../../iup_gridbox.c"
 }
 $166 = $4; //@line 612 "../../iup_gridbox.c"
 $167 = ((($166)) + 72|0); //@line 612 "../../iup_gridbox.c"
 $168 = HEAP32[$167>>2]|0; //@line 612 "../../iup_gridbox.c"
 $169 = ((($168)) + 20|0); //@line 612 "../../iup_gridbox.c"
 $170 = HEAP32[$169>>2]|0; //@line 612 "../../iup_gridbox.c"
 $171 = ($170|0)!=(0); //@line 612 "../../iup_gridbox.c"
 if ($171) {
  $172 = $4; //@line 614 "../../iup_gridbox.c"
  $173 = $4; //@line 614 "../../iup_gridbox.c"
  $174 = ((($173)) + 72|0); //@line 614 "../../iup_gridbox.c"
  $175 = HEAP32[$174>>2]|0; //@line 614 "../../iup_gridbox.c"
  $176 = ((($175)) + 20|0); //@line 614 "../../iup_gridbox.c"
  $177 = HEAP32[$176>>2]|0; //@line 614 "../../iup_gridbox.c"
  $178 = $15; //@line 614 "../../iup_gridbox.c"
  $179 = $16; //@line 614 "../../iup_gridbox.c"
  _iupNormalizeSizeBoxChild($172,$177,$178,$179); //@line 614 "../../iup_gridbox.c"
  $180 = $4; //@line 618 "../../iup_gridbox.c"
  $181 = ((($180)) + 72|0); //@line 618 "../../iup_gridbox.c"
  $182 = HEAP32[$181>>2]|0; //@line 618 "../../iup_gridbox.c"
  $183 = ((($182)) + 20|0); //@line 618 "../../iup_gridbox.c"
  $184 = HEAP32[$183>>2]|0; //@line 618 "../../iup_gridbox.c"
  $185 = $184 & 1; //@line 618 "../../iup_gridbox.c"
  $186 = ($185|0)!=(0); //@line 618 "../../iup_gridbox.c"
  if ($186) {
   $187 = $15; //@line 619 "../../iup_gridbox.c"
   $188 = $10; //@line 619 "../../iup_gridbox.c"
   $189 = Math_imul($187, $188)|0; //@line 619 "../../iup_gridbox.c"
   $13 = $189; //@line 619 "../../iup_gridbox.c"
  }
  $190 = $4; //@line 620 "../../iup_gridbox.c"
  $191 = ((($190)) + 72|0); //@line 620 "../../iup_gridbox.c"
  $192 = HEAP32[$191>>2]|0; //@line 620 "../../iup_gridbox.c"
  $193 = ((($192)) + 20|0); //@line 620 "../../iup_gridbox.c"
  $194 = HEAP32[$193>>2]|0; //@line 620 "../../iup_gridbox.c"
  $195 = $194 & 2; //@line 620 "../../iup_gridbox.c"
  $196 = ($195|0)!=(0); //@line 620 "../../iup_gridbox.c"
  if ($196) {
   $197 = $16; //@line 621 "../../iup_gridbox.c"
   $198 = $9; //@line 621 "../../iup_gridbox.c"
   $199 = Math_imul($197, $198)|0; //@line 621 "../../iup_gridbox.c"
   $14 = $199; //@line 621 "../../iup_gridbox.c"
  }
 }
 $200 = $4; //@line 626 "../../iup_gridbox.c"
 $201 = ((($200)) + 72|0); //@line 626 "../../iup_gridbox.c"
 $202 = HEAP32[$201>>2]|0; //@line 626 "../../iup_gridbox.c"
 $203 = ((($202)) + 16|0); //@line 626 "../../iup_gridbox.c"
 $204 = HEAP32[$203>>2]|0; //@line 626 "../../iup_gridbox.c"
 $205 = ($204|0)!=(0); //@line 626 "../../iup_gridbox.c"
 if ($205) {
  $206 = $15; //@line 627 "../../iup_gridbox.c"
  $207 = $10; //@line 627 "../../iup_gridbox.c"
  $208 = Math_imul($206, $207)|0; //@line 627 "../../iup_gridbox.c"
  $13 = $208; //@line 627 "../../iup_gridbox.c"
 }
 $209 = $4; //@line 628 "../../iup_gridbox.c"
 $210 = ((($209)) + 72|0); //@line 628 "../../iup_gridbox.c"
 $211 = HEAP32[$210>>2]|0; //@line 628 "../../iup_gridbox.c"
 $212 = ((($211)) + 12|0); //@line 628 "../../iup_gridbox.c"
 $213 = HEAP32[$212>>2]|0; //@line 628 "../../iup_gridbox.c"
 $214 = ($213|0)!=(0); //@line 628 "../../iup_gridbox.c"
 if (!($214)) {
  $218 = $13; //@line 632 "../../iup_gridbox.c"
  $219 = $10; //@line 632 "../../iup_gridbox.c"
  $220 = (($219) - 1)|0; //@line 632 "../../iup_gridbox.c"
  $221 = $4; //@line 632 "../../iup_gridbox.c"
  $222 = ((($221)) + 72|0); //@line 632 "../../iup_gridbox.c"
  $223 = HEAP32[$222>>2]|0; //@line 632 "../../iup_gridbox.c"
  $224 = ((($223)) + 44|0); //@line 632 "../../iup_gridbox.c"
  $225 = HEAP32[$224>>2]|0; //@line 632 "../../iup_gridbox.c"
  $226 = Math_imul($220, $225)|0; //@line 632 "../../iup_gridbox.c"
  $227 = (($218) + ($226))|0; //@line 632 "../../iup_gridbox.c"
  $228 = $4; //@line 632 "../../iup_gridbox.c"
  $229 = ((($228)) + 72|0); //@line 632 "../../iup_gridbox.c"
  $230 = HEAP32[$229>>2]|0; //@line 632 "../../iup_gridbox.c"
  $231 = ((($230)) + 24|0); //@line 632 "../../iup_gridbox.c"
  $232 = HEAP32[$231>>2]|0; //@line 632 "../../iup_gridbox.c"
  $233 = $232<<1; //@line 632 "../../iup_gridbox.c"
  $234 = (($227) + ($233))|0; //@line 632 "../../iup_gridbox.c"
  $235 = $5; //@line 632 "../../iup_gridbox.c"
  HEAP32[$235>>2] = $234; //@line 632 "../../iup_gridbox.c"
  $236 = $14; //@line 633 "../../iup_gridbox.c"
  $237 = $9; //@line 633 "../../iup_gridbox.c"
  $238 = (($237) - 1)|0; //@line 633 "../../iup_gridbox.c"
  $239 = $4; //@line 633 "../../iup_gridbox.c"
  $240 = ((($239)) + 72|0); //@line 633 "../../iup_gridbox.c"
  $241 = HEAP32[$240>>2]|0; //@line 633 "../../iup_gridbox.c"
  $242 = ((($241)) + 40|0); //@line 633 "../../iup_gridbox.c"
  $243 = HEAP32[$242>>2]|0; //@line 633 "../../iup_gridbox.c"
  $244 = Math_imul($238, $243)|0; //@line 633 "../../iup_gridbox.c"
  $245 = (($236) + ($244))|0; //@line 633 "../../iup_gridbox.c"
  $246 = $4; //@line 633 "../../iup_gridbox.c"
  $247 = ((($246)) + 72|0); //@line 633 "../../iup_gridbox.c"
  $248 = HEAP32[$247>>2]|0; //@line 633 "../../iup_gridbox.c"
  $249 = ((($248)) + 28|0); //@line 633 "../../iup_gridbox.c"
  $250 = HEAP32[$249>>2]|0; //@line 633 "../../iup_gridbox.c"
  $251 = $250<<1; //@line 633 "../../iup_gridbox.c"
  $252 = (($245) + ($251))|0; //@line 633 "../../iup_gridbox.c"
  $253 = $6; //@line 633 "../../iup_gridbox.c"
  HEAP32[$253>>2] = $252; //@line 633 "../../iup_gridbox.c"
  $254 = $5; //@line 636 "../../iup_gridbox.c"
  $255 = HEAP32[$254>>2]|0; //@line 636 "../../iup_gridbox.c"
  $256 = $4; //@line 636 "../../iup_gridbox.c"
  $257 = ((($256)) + 72|0); //@line 636 "../../iup_gridbox.c"
  $258 = HEAP32[$257>>2]|0; //@line 636 "../../iup_gridbox.c"
  $259 = ((($258)) + 64|0); //@line 636 "../../iup_gridbox.c"
  HEAP32[$259>>2] = $255; //@line 636 "../../iup_gridbox.c"
  $260 = $6; //@line 637 "../../iup_gridbox.c"
  $261 = HEAP32[$260>>2]|0; //@line 637 "../../iup_gridbox.c"
  $262 = $4; //@line 637 "../../iup_gridbox.c"
  $263 = ((($262)) + 72|0); //@line 637 "../../iup_gridbox.c"
  $264 = HEAP32[$263>>2]|0; //@line 637 "../../iup_gridbox.c"
  $265 = ((($264)) + 68|0); //@line 637 "../../iup_gridbox.c"
  HEAP32[$265>>2] = $261; //@line 637 "../../iup_gridbox.c"
  STACKTOP = sp;return; //@line 638 "../../iup_gridbox.c"
 }
 $215 = $16; //@line 629 "../../iup_gridbox.c"
 $216 = $9; //@line 629 "../../iup_gridbox.c"
 $217 = Math_imul($215, $216)|0; //@line 629 "../../iup_gridbox.c"
 $14 = $217; //@line 629 "../../iup_gridbox.c"
 $218 = $13; //@line 632 "../../iup_gridbox.c"
 $219 = $10; //@line 632 "../../iup_gridbox.c"
 $220 = (($219) - 1)|0; //@line 632 "../../iup_gridbox.c"
 $221 = $4; //@line 632 "../../iup_gridbox.c"
 $222 = ((($221)) + 72|0); //@line 632 "../../iup_gridbox.c"
 $223 = HEAP32[$222>>2]|0; //@line 632 "../../iup_gridbox.c"
 $224 = ((($223)) + 44|0); //@line 632 "../../iup_gridbox.c"
 $225 = HEAP32[$224>>2]|0; //@line 632 "../../iup_gridbox.c"
 $226 = Math_imul($220, $225)|0; //@line 632 "../../iup_gridbox.c"
 $227 = (($218) + ($226))|0; //@line 632 "../../iup_gridbox.c"
 $228 = $4; //@line 632 "../../iup_gridbox.c"
 $229 = ((($228)) + 72|0); //@line 632 "../../iup_gridbox.c"
 $230 = HEAP32[$229>>2]|0; //@line 632 "../../iup_gridbox.c"
 $231 = ((($230)) + 24|0); //@line 632 "../../iup_gridbox.c"
 $232 = HEAP32[$231>>2]|0; //@line 632 "../../iup_gridbox.c"
 $233 = $232<<1; //@line 632 "../../iup_gridbox.c"
 $234 = (($227) + ($233))|0; //@line 632 "../../iup_gridbox.c"
 $235 = $5; //@line 632 "../../iup_gridbox.c"
 HEAP32[$235>>2] = $234; //@line 632 "../../iup_gridbox.c"
 $236 = $14; //@line 633 "../../iup_gridbox.c"
 $237 = $9; //@line 633 "../../iup_gridbox.c"
 $238 = (($237) - 1)|0; //@line 633 "../../iup_gridbox.c"
 $239 = $4; //@line 633 "../../iup_gridbox.c"
 $240 = ((($239)) + 72|0); //@line 633 "../../iup_gridbox.c"
 $241 = HEAP32[$240>>2]|0; //@line 633 "../../iup_gridbox.c"
 $242 = ((($241)) + 40|0); //@line 633 "../../iup_gridbox.c"
 $243 = HEAP32[$242>>2]|0; //@line 633 "../../iup_gridbox.c"
 $244 = Math_imul($238, $243)|0; //@line 633 "../../iup_gridbox.c"
 $245 = (($236) + ($244))|0; //@line 633 "../../iup_gridbox.c"
 $246 = $4; //@line 633 "../../iup_gridbox.c"
 $247 = ((($246)) + 72|0); //@line 633 "../../iup_gridbox.c"
 $248 = HEAP32[$247>>2]|0; //@line 633 "../../iup_gridbox.c"
 $249 = ((($248)) + 28|0); //@line 633 "../../iup_gridbox.c"
 $250 = HEAP32[$249>>2]|0; //@line 633 "../../iup_gridbox.c"
 $251 = $250<<1; //@line 633 "../../iup_gridbox.c"
 $252 = (($245) + ($251))|0; //@line 633 "../../iup_gridbox.c"
 $253 = $6; //@line 633 "../../iup_gridbox.c"
 HEAP32[$253>>2] = $252; //@line 633 "../../iup_gridbox.c"
 $254 = $5; //@line 636 "../../iup_gridbox.c"
 $255 = HEAP32[$254>>2]|0; //@line 636 "../../iup_gridbox.c"
 $256 = $4; //@line 636 "../../iup_gridbox.c"
 $257 = ((($256)) + 72|0); //@line 636 "../../iup_gridbox.c"
 $258 = HEAP32[$257>>2]|0; //@line 636 "../../iup_gridbox.c"
 $259 = ((($258)) + 64|0); //@line 636 "../../iup_gridbox.c"
 HEAP32[$259>>2] = $255; //@line 636 "../../iup_gridbox.c"
 $260 = $6; //@line 637 "../../iup_gridbox.c"
 $261 = HEAP32[$260>>2]|0; //@line 637 "../../iup_gridbox.c"
 $262 = $4; //@line 637 "../../iup_gridbox.c"
 $263 = ((($262)) + 72|0); //@line 637 "../../iup_gridbox.c"
 $264 = HEAP32[$263>>2]|0; //@line 637 "../../iup_gridbox.c"
 $265 = ((($264)) + 68|0); //@line 637 "../../iup_gridbox.c"
 HEAP32[$265>>2] = $261; //@line 637 "../../iup_gridbox.c"
 STACKTOP = sp;return; //@line 638 "../../iup_gridbox.c"
}
function _iGridBoxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $12 = sp + 4|0;
 $13 = sp;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 773 "../../iup_gridbox.c"
 $6 = 0; //@line 773 "../../iup_gridbox.c"
 $14 = $2; //@line 775 "../../iup_gridbox.c"
 $15 = ((($14)) + 72|0); //@line 775 "../../iup_gridbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 775 "../../iup_gridbox.c"
 $17 = ((($16)) + 12|0); //@line 775 "../../iup_gridbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 775 "../../iup_gridbox.c"
 $19 = ($18|0)!=(0); //@line 775 "../../iup_gridbox.c"
 if ($19) {
  $20 = $2; //@line 776 "../../iup_gridbox.c"
  $21 = (_iGridBoxCalcHomogeneousHeight($20)|0); //@line 776 "../../iup_gridbox.c"
  $22 = $2; //@line 776 "../../iup_gridbox.c"
  $23 = ((($22)) + 72|0); //@line 776 "../../iup_gridbox.c"
  $24 = HEAP32[$23>>2]|0; //@line 776 "../../iup_gridbox.c"
  $25 = ((($24)) + 76|0); //@line 776 "../../iup_gridbox.c"
  HEAP32[$25>>2] = $21; //@line 776 "../../iup_gridbox.c"
 } else {
  $8 = 0; //@line 779 "../../iup_gridbox.c"
  $9 = 0; //@line 779 "../../iup_gridbox.c"
  $26 = $2; //@line 781 "../../iup_gridbox.c"
  $27 = ((($26)) + 72|0); //@line 781 "../../iup_gridbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 781 "../../iup_gridbox.c"
  $29 = ((($28)) + 76|0); //@line 781 "../../iup_gridbox.c"
  HEAP32[$29>>2] = 0; //@line 781 "../../iup_gridbox.c"
  $30 = $2; //@line 785 "../../iup_gridbox.c"
  $31 = ((($30)) + 20|0); //@line 785 "../../iup_gridbox.c"
  $32 = HEAP32[$31>>2]|0; //@line 785 "../../iup_gridbox.c"
  $33 = $32 & 2; //@line 785 "../../iup_gridbox.c"
  $34 = ($33|0)!=(0); //@line 785 "../../iup_gridbox.c"
  $35 = $2; //@line 786 "../../iup_gridbox.c"
  if ($34) {
   $36 = (_iGridBoxCalcEmptyHeight($35,2)|0); //@line 786 "../../iup_gridbox.c"
   $9 = $36; //@line 786 "../../iup_gridbox.c"
  } else {
   $37 = ((($35)) + 20|0); //@line 788 "../../iup_gridbox.c"
   $38 = HEAP32[$37>>2]|0; //@line 788 "../../iup_gridbox.c"
   $39 = $38 & 1; //@line 788 "../../iup_gridbox.c"
   $40 = ($39|0)!=(0); //@line 788 "../../iup_gridbox.c"
   if ($40) {
    $41 = $2; //@line 789 "../../iup_gridbox.c"
    $42 = (_iGridBoxCalcEmptyHeight($41,1)|0); //@line 789 "../../iup_gridbox.c"
    $8 = $42; //@line 789 "../../iup_gridbox.c"
   }
  }
  $43 = $2; //@line 791 "../../iup_gridbox.c"
  $44 = ((($43)) + 72|0); //@line 791 "../../iup_gridbox.c"
  $45 = HEAP32[$44>>2]|0; //@line 791 "../../iup_gridbox.c"
  $46 = ((($45)) + 56|0); //@line 791 "../../iup_gridbox.c"
  $47 = HEAP32[$46>>2]|0; //@line 791 "../../iup_gridbox.c"
  $48 = $47<<2; //@line 791 "../../iup_gridbox.c"
  $49 = (_malloc($48)|0); //@line 791 "../../iup_gridbox.c"
  $5 = $49; //@line 791 "../../iup_gridbox.c"
  $50 = $2; //@line 792 "../../iup_gridbox.c"
  $51 = $5; //@line 792 "../../iup_gridbox.c"
  $52 = $8; //@line 792 "../../iup_gridbox.c"
  $53 = $9; //@line 792 "../../iup_gridbox.c"
  _iGridBoxCalcLineHeight($50,$51,$52,$53); //@line 792 "../../iup_gridbox.c"
 }
 $54 = $2; //@line 795 "../../iup_gridbox.c"
 $55 = ((($54)) + 72|0); //@line 795 "../../iup_gridbox.c"
 $56 = HEAP32[$55>>2]|0; //@line 795 "../../iup_gridbox.c"
 $57 = ((($56)) + 16|0); //@line 795 "../../iup_gridbox.c"
 $58 = HEAP32[$57>>2]|0; //@line 795 "../../iup_gridbox.c"
 $59 = ($58|0)!=(0); //@line 795 "../../iup_gridbox.c"
 if ($59) {
  $60 = $2; //@line 796 "../../iup_gridbox.c"
  $61 = (_iGridBoxCalcHomogeneousWidth($60)|0); //@line 796 "../../iup_gridbox.c"
  $62 = $2; //@line 796 "../../iup_gridbox.c"
  $63 = ((($62)) + 72|0); //@line 796 "../../iup_gridbox.c"
  $64 = HEAP32[$63>>2]|0; //@line 796 "../../iup_gridbox.c"
  $65 = ((($64)) + 72|0); //@line 796 "../../iup_gridbox.c"
  HEAP32[$65>>2] = $61; //@line 796 "../../iup_gridbox.c"
 } else {
  $10 = 0; //@line 799 "../../iup_gridbox.c"
  $11 = 0; //@line 799 "../../iup_gridbox.c"
  $66 = $2; //@line 801 "../../iup_gridbox.c"
  $67 = ((($66)) + 72|0); //@line 801 "../../iup_gridbox.c"
  $68 = HEAP32[$67>>2]|0; //@line 801 "../../iup_gridbox.c"
  $69 = ((($68)) + 72|0); //@line 801 "../../iup_gridbox.c"
  HEAP32[$69>>2] = 0; //@line 801 "../../iup_gridbox.c"
  $70 = $2; //@line 805 "../../iup_gridbox.c"
  $71 = ((($70)) + 20|0); //@line 805 "../../iup_gridbox.c"
  $72 = HEAP32[$71>>2]|0; //@line 805 "../../iup_gridbox.c"
  $73 = $72 & 8; //@line 805 "../../iup_gridbox.c"
  $74 = ($73|0)!=(0); //@line 805 "../../iup_gridbox.c"
  $75 = $2; //@line 806 "../../iup_gridbox.c"
  if ($74) {
   $76 = (_iGridBoxCalcEmptyWidth($75,8)|0); //@line 806 "../../iup_gridbox.c"
   $11 = $76; //@line 806 "../../iup_gridbox.c"
  } else {
   $77 = ((($75)) + 20|0); //@line 808 "../../iup_gridbox.c"
   $78 = HEAP32[$77>>2]|0; //@line 808 "../../iup_gridbox.c"
   $79 = $78 & 4; //@line 808 "../../iup_gridbox.c"
   $80 = ($79|0)!=(0); //@line 808 "../../iup_gridbox.c"
   if ($80) {
    $81 = $2; //@line 809 "../../iup_gridbox.c"
    $82 = (_iGridBoxCalcEmptyWidth($81,4)|0); //@line 809 "../../iup_gridbox.c"
    $10 = $82; //@line 809 "../../iup_gridbox.c"
   }
  }
  $83 = $2; //@line 811 "../../iup_gridbox.c"
  $84 = ((($83)) + 72|0); //@line 811 "../../iup_gridbox.c"
  $85 = HEAP32[$84>>2]|0; //@line 811 "../../iup_gridbox.c"
  $86 = ((($85)) + 60|0); //@line 811 "../../iup_gridbox.c"
  $87 = HEAP32[$86>>2]|0; //@line 811 "../../iup_gridbox.c"
  $88 = $87<<2; //@line 811 "../../iup_gridbox.c"
  $89 = (_malloc($88)|0); //@line 811 "../../iup_gridbox.c"
  $6 = $89; //@line 811 "../../iup_gridbox.c"
  $90 = $2; //@line 812 "../../iup_gridbox.c"
  $91 = $6; //@line 812 "../../iup_gridbox.c"
  $92 = $10; //@line 812 "../../iup_gridbox.c"
  $93 = $11; //@line 812 "../../iup_gridbox.c"
  _iGridBoxCalcColWidth($90,$91,$92,$93); //@line 812 "../../iup_gridbox.c"
 }
 $7 = 0; //@line 815 "../../iup_gridbox.c"
 $94 = $2; //@line 816 "../../iup_gridbox.c"
 $95 = ((($94)) + 64|0); //@line 816 "../../iup_gridbox.c"
 $96 = HEAP32[$95>>2]|0; //@line 816 "../../iup_gridbox.c"
 $4 = $96; //@line 816 "../../iup_gridbox.c"
 while(1) {
  $97 = $4; //@line 816 "../../iup_gridbox.c"
  $98 = ($97|0)!=(0|0); //@line 816 "../../iup_gridbox.c"
  if (!($98)) {
   break;
  }
  $99 = $4; //@line 818 "../../iup_gridbox.c"
  $100 = ((($99)) + 24|0); //@line 818 "../../iup_gridbox.c"
  $101 = HEAP32[$100>>2]|0; //@line 818 "../../iup_gridbox.c"
  $102 = $101 & 1; //@line 818 "../../iup_gridbox.c"
  $103 = ($102|0)!=(0); //@line 818 "../../iup_gridbox.c"
  if ($103) {
   $171 = $4; //@line 834 "../../iup_gridbox.c"
   $172 = ((($171)) + 24|0); //@line 834 "../../iup_gridbox.c"
   $173 = HEAP32[$172>>2]|0; //@line 834 "../../iup_gridbox.c"
   $174 = $173 & 2; //@line 834 "../../iup_gridbox.c"
   $175 = ($174|0)!=(0); //@line 834 "../../iup_gridbox.c"
   if (!($175)) {
    $176 = $4; //@line 837 "../../iup_gridbox.c"
    $177 = $4; //@line 837 "../../iup_gridbox.c"
    $178 = ((($177)) + 44|0); //@line 837 "../../iup_gridbox.c"
    $179 = HEAP32[$178>>2]|0; //@line 837 "../../iup_gridbox.c"
    $180 = $4; //@line 837 "../../iup_gridbox.c"
    $181 = ((($180)) + 48|0); //@line 837 "../../iup_gridbox.c"
    $182 = HEAP32[$181>>2]|0; //@line 837 "../../iup_gridbox.c"
    $183 = $3; //@line 837 "../../iup_gridbox.c"
    _iupBaseSetCurrentSize($176,$179,$182,$183); //@line 837 "../../iup_gridbox.c"
   }
  } else {
   $104 = $2; //@line 821 "../../iup_gridbox.c"
   $105 = $7; //@line 821 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($104,$105,$12,$13); //@line 821 "../../iup_gridbox.c"
   $106 = $2; //@line 823 "../../iup_gridbox.c"
   $107 = ((($106)) + 72|0); //@line 823 "../../iup_gridbox.c"
   $108 = HEAP32[$107>>2]|0; //@line 823 "../../iup_gridbox.c"
   $109 = ((($108)) + 72|0); //@line 823 "../../iup_gridbox.c"
   $110 = HEAP32[$109>>2]|0; //@line 823 "../../iup_gridbox.c"
   $111 = ($110|0)!=(0); //@line 823 "../../iup_gridbox.c"
   if ($111) {
    $112 = $2; //@line 823 "../../iup_gridbox.c"
    $113 = ((($112)) + 72|0); //@line 823 "../../iup_gridbox.c"
    $114 = HEAP32[$113>>2]|0; //@line 823 "../../iup_gridbox.c"
    $115 = ((($114)) + 76|0); //@line 823 "../../iup_gridbox.c"
    $116 = HEAP32[$115>>2]|0; //@line 823 "../../iup_gridbox.c"
    $117 = ($116|0)!=(0); //@line 823 "../../iup_gridbox.c"
    if ($117) {
     $118 = $4; //@line 824 "../../iup_gridbox.c"
     $119 = $2; //@line 824 "../../iup_gridbox.c"
     $120 = ((($119)) + 72|0); //@line 824 "../../iup_gridbox.c"
     $121 = HEAP32[$120>>2]|0; //@line 824 "../../iup_gridbox.c"
     $122 = ((($121)) + 72|0); //@line 824 "../../iup_gridbox.c"
     $123 = HEAP32[$122>>2]|0; //@line 824 "../../iup_gridbox.c"
     $124 = $2; //@line 824 "../../iup_gridbox.c"
     $125 = ((($124)) + 72|0); //@line 824 "../../iup_gridbox.c"
     $126 = HEAP32[$125>>2]|0; //@line 824 "../../iup_gridbox.c"
     $127 = ((($126)) + 76|0); //@line 824 "../../iup_gridbox.c"
     $128 = HEAP32[$127>>2]|0; //@line 824 "../../iup_gridbox.c"
     $129 = $3; //@line 824 "../../iup_gridbox.c"
     _iupBaseSetCurrentSize($118,$123,$128,$129); //@line 824 "../../iup_gridbox.c"
    } else {
     label = 21;
    }
   } else {
    label = 21;
   }
   do {
    if ((label|0) == 21) {
     label = 0;
     $130 = $2; //@line 825 "../../iup_gridbox.c"
     $131 = ((($130)) + 72|0); //@line 825 "../../iup_gridbox.c"
     $132 = HEAP32[$131>>2]|0; //@line 825 "../../iup_gridbox.c"
     $133 = ((($132)) + 72|0); //@line 825 "../../iup_gridbox.c"
     $134 = HEAP32[$133>>2]|0; //@line 825 "../../iup_gridbox.c"
     $135 = ($134|0)!=(0); //@line 825 "../../iup_gridbox.c"
     if ($135) {
      $136 = $4; //@line 826 "../../iup_gridbox.c"
      $137 = $2; //@line 826 "../../iup_gridbox.c"
      $138 = ((($137)) + 72|0); //@line 826 "../../iup_gridbox.c"
      $139 = HEAP32[$138>>2]|0; //@line 826 "../../iup_gridbox.c"
      $140 = ((($139)) + 72|0); //@line 826 "../../iup_gridbox.c"
      $141 = HEAP32[$140>>2]|0; //@line 826 "../../iup_gridbox.c"
      $142 = HEAP32[$12>>2]|0; //@line 826 "../../iup_gridbox.c"
      $143 = $5; //@line 826 "../../iup_gridbox.c"
      $144 = (($143) + ($142<<2)|0); //@line 826 "../../iup_gridbox.c"
      $145 = HEAP32[$144>>2]|0; //@line 826 "../../iup_gridbox.c"
      $146 = $3; //@line 826 "../../iup_gridbox.c"
      _iupBaseSetCurrentSize($136,$141,$145,$146); //@line 826 "../../iup_gridbox.c"
      break;
     }
     $147 = $2; //@line 827 "../../iup_gridbox.c"
     $148 = ((($147)) + 72|0); //@line 827 "../../iup_gridbox.c"
     $149 = HEAP32[$148>>2]|0; //@line 827 "../../iup_gridbox.c"
     $150 = ((($149)) + 76|0); //@line 827 "../../iup_gridbox.c"
     $151 = HEAP32[$150>>2]|0; //@line 827 "../../iup_gridbox.c"
     $152 = ($151|0)!=(0); //@line 827 "../../iup_gridbox.c"
     $153 = $4; //@line 828 "../../iup_gridbox.c"
     $154 = HEAP32[$13>>2]|0; //@line 828 "../../iup_gridbox.c"
     $155 = $6; //@line 828 "../../iup_gridbox.c"
     $156 = (($155) + ($154<<2)|0); //@line 828 "../../iup_gridbox.c"
     $157 = HEAP32[$156>>2]|0; //@line 828 "../../iup_gridbox.c"
     if ($152) {
      $158 = $2; //@line 828 "../../iup_gridbox.c"
      $159 = ((($158)) + 72|0); //@line 828 "../../iup_gridbox.c"
      $160 = HEAP32[$159>>2]|0; //@line 828 "../../iup_gridbox.c"
      $161 = ((($160)) + 76|0); //@line 828 "../../iup_gridbox.c"
      $162 = HEAP32[$161>>2]|0; //@line 828 "../../iup_gridbox.c"
      $163 = $3; //@line 828 "../../iup_gridbox.c"
      _iupBaseSetCurrentSize($153,$157,$162,$163); //@line 828 "../../iup_gridbox.c"
      break;
     } else {
      $164 = HEAP32[$12>>2]|0; //@line 830 "../../iup_gridbox.c"
      $165 = $5; //@line 830 "../../iup_gridbox.c"
      $166 = (($165) + ($164<<2)|0); //@line 830 "../../iup_gridbox.c"
      $167 = HEAP32[$166>>2]|0; //@line 830 "../../iup_gridbox.c"
      $168 = $3; //@line 830 "../../iup_gridbox.c"
      _iupBaseSetCurrentSize($153,$157,$167,$168); //@line 830 "../../iup_gridbox.c"
      break;
     }
    }
   } while(0);
   $169 = $7; //@line 832 "../../iup_gridbox.c"
   $170 = (($169) + 1)|0; //@line 832 "../../iup_gridbox.c"
   $7 = $170; //@line 832 "../../iup_gridbox.c"
  }
  $184 = $4; //@line 816 "../../iup_gridbox.c"
  $185 = ((($184)) + 68|0); //@line 816 "../../iup_gridbox.c"
  $186 = HEAP32[$185>>2]|0; //@line 816 "../../iup_gridbox.c"
  $4 = $186; //@line 816 "../../iup_gridbox.c"
 }
 $187 = $5; //@line 841 "../../iup_gridbox.c"
 $188 = ($187|0)!=(0|0); //@line 841 "../../iup_gridbox.c"
 if ($188) {
  $189 = $5; //@line 842 "../../iup_gridbox.c"
  _free($189); //@line 842 "../../iup_gridbox.c"
 }
 $190 = $6; //@line 843 "../../iup_gridbox.c"
 $191 = ($190|0)!=(0|0); //@line 843 "../../iup_gridbox.c"
 if (!($191)) {
  STACKTOP = sp;return; //@line 845 "../../iup_gridbox.c"
 }
 $192 = $6; //@line 844 "../../iup_gridbox.c"
 _free($192); //@line 844 "../../iup_gridbox.c"
 STACKTOP = sp;return; //@line 845 "../../iup_gridbox.c"
}
function _iGridBoxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0;
 var $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $10 = sp + 28|0;
 $11 = sp + 24|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $18 = $3; //@line 854 "../../iup_gridbox.c"
 $19 = ((($18)) + 72|0); //@line 854 "../../iup_gridbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 854 "../../iup_gridbox.c"
 $21 = ((($20)) + 60|0); //@line 854 "../../iup_gridbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 854 "../../iup_gridbox.c"
 $23 = $22<<2; //@line 854 "../../iup_gridbox.c"
 $24 = (_malloc($23)|0); //@line 854 "../../iup_gridbox.c"
 $12 = $24; //@line 854 "../../iup_gridbox.c"
 $25 = $3; //@line 855 "../../iup_gridbox.c"
 $26 = ((($25)) + 72|0); //@line 855 "../../iup_gridbox.c"
 $27 = HEAP32[$26>>2]|0; //@line 855 "../../iup_gridbox.c"
 $28 = ((($27)) + 56|0); //@line 855 "../../iup_gridbox.c"
 $29 = HEAP32[$28>>2]|0; //@line 855 "../../iup_gridbox.c"
 $30 = $29<<2; //@line 855 "../../iup_gridbox.c"
 $31 = (_malloc($30)|0); //@line 855 "../../iup_gridbox.c"
 $9 = $31; //@line 855 "../../iup_gridbox.c"
 $32 = $3; //@line 856 "../../iup_gridbox.c"
 $33 = ((($32)) + 72|0); //@line 856 "../../iup_gridbox.c"
 $34 = HEAP32[$33>>2]|0; //@line 856 "../../iup_gridbox.c"
 $35 = ((($34)) + 60|0); //@line 856 "../../iup_gridbox.c"
 $36 = HEAP32[$35>>2]|0; //@line 856 "../../iup_gridbox.c"
 $37 = $36<<2; //@line 856 "../../iup_gridbox.c"
 $38 = (_malloc($37)|0); //@line 856 "../../iup_gridbox.c"
 $13 = $38; //@line 856 "../../iup_gridbox.c"
 $39 = $3; //@line 857 "../../iup_gridbox.c"
 $40 = ((($39)) + 72|0); //@line 857 "../../iup_gridbox.c"
 $41 = HEAP32[$40>>2]|0; //@line 857 "../../iup_gridbox.c"
 $42 = ((($41)) + 56|0); //@line 857 "../../iup_gridbox.c"
 $43 = HEAP32[$42>>2]|0; //@line 857 "../../iup_gridbox.c"
 $44 = $43<<2; //@line 857 "../../iup_gridbox.c"
 $45 = (_malloc($44)|0); //@line 857 "../../iup_gridbox.c"
 $14 = $45; //@line 857 "../../iup_gridbox.c"
 $46 = $3; //@line 858 "../../iup_gridbox.c"
 $47 = ((($46)) + 72|0); //@line 858 "../../iup_gridbox.c"
 $48 = HEAP32[$47>>2]|0; //@line 858 "../../iup_gridbox.c"
 $49 = ((($48)) + 60|0); //@line 858 "../../iup_gridbox.c"
 $50 = HEAP32[$49>>2]|0; //@line 858 "../../iup_gridbox.c"
 $51 = $50<<2; //@line 858 "../../iup_gridbox.c"
 $52 = (_malloc($51)|0); //@line 858 "../../iup_gridbox.c"
 $15 = $52; //@line 858 "../../iup_gridbox.c"
 $53 = $3; //@line 859 "../../iup_gridbox.c"
 $54 = ((($53)) + 72|0); //@line 859 "../../iup_gridbox.c"
 $55 = HEAP32[$54>>2]|0; //@line 859 "../../iup_gridbox.c"
 $56 = ((($55)) + 56|0); //@line 859 "../../iup_gridbox.c"
 $57 = HEAP32[$56>>2]|0; //@line 859 "../../iup_gridbox.c"
 $58 = $57<<2; //@line 859 "../../iup_gridbox.c"
 $59 = (_malloc($58)|0); //@line 859 "../../iup_gridbox.c"
 $16 = $59; //@line 859 "../../iup_gridbox.c"
 $8 = 0; //@line 861 "../../iup_gridbox.c"
 $60 = $3; //@line 862 "../../iup_gridbox.c"
 $61 = ((($60)) + 64|0); //@line 862 "../../iup_gridbox.c"
 $62 = HEAP32[$61>>2]|0; //@line 862 "../../iup_gridbox.c"
 $17 = $62; //@line 862 "../../iup_gridbox.c"
 while(1) {
  $63 = $17; //@line 862 "../../iup_gridbox.c"
  $64 = ($63|0)!=(0|0); //@line 862 "../../iup_gridbox.c"
  if (!($64)) {
   break;
  }
  $65 = $17; //@line 864 "../../iup_gridbox.c"
  $66 = ((($65)) + 24|0); //@line 864 "../../iup_gridbox.c"
  $67 = HEAP32[$66>>2]|0; //@line 864 "../../iup_gridbox.c"
  $68 = $67 & 1; //@line 864 "../../iup_gridbox.c"
  $69 = ($68|0)!=(0); //@line 864 "../../iup_gridbox.c"
  if (!($69)) {
   $70 = $3; //@line 866 "../../iup_gridbox.c"
   $71 = $8; //@line 866 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($70,$71,$10,$11); //@line 866 "../../iup_gridbox.c"
   $72 = HEAP32[$10>>2]|0; //@line 870 "../../iup_gridbox.c"
   $73 = $3; //@line 870 "../../iup_gridbox.c"
   $74 = ((($73)) + 72|0); //@line 870 "../../iup_gridbox.c"
   $75 = HEAP32[$74>>2]|0; //@line 870 "../../iup_gridbox.c"
   $76 = ((($75)) + 32|0); //@line 870 "../../iup_gridbox.c"
   $77 = HEAP32[$76>>2]|0; //@line 870 "../../iup_gridbox.c"
   $78 = ($72|0)==($77|0); //@line 870 "../../iup_gridbox.c"
   if ($78) {
    $79 = $3; //@line 872 "../../iup_gridbox.c"
    $80 = ((($79)) + 72|0); //@line 872 "../../iup_gridbox.c"
    $81 = HEAP32[$80>>2]|0; //@line 872 "../../iup_gridbox.c"
    $82 = ((($81)) + 72|0); //@line 872 "../../iup_gridbox.c"
    $83 = HEAP32[$82>>2]|0; //@line 872 "../../iup_gridbox.c"
    $84 = ($83|0)!=(0); //@line 872 "../../iup_gridbox.c"
    if ($84) {
     $85 = $3; //@line 873 "../../iup_gridbox.c"
     $86 = ((($85)) + 72|0); //@line 873 "../../iup_gridbox.c"
     $87 = HEAP32[$86>>2]|0; //@line 873 "../../iup_gridbox.c"
     $88 = ((($87)) + 72|0); //@line 873 "../../iup_gridbox.c"
     $89 = HEAP32[$88>>2]|0; //@line 873 "../../iup_gridbox.c"
     $90 = $3; //@line 873 "../../iup_gridbox.c"
     $91 = ((($90)) + 72|0); //@line 873 "../../iup_gridbox.c"
     $92 = HEAP32[$91>>2]|0; //@line 873 "../../iup_gridbox.c"
     $93 = ((($92)) + 44|0); //@line 873 "../../iup_gridbox.c"
     $94 = HEAP32[$93>>2]|0; //@line 873 "../../iup_gridbox.c"
     $95 = (($89) + ($94))|0; //@line 873 "../../iup_gridbox.c"
     $96 = HEAP32[$11>>2]|0; //@line 873 "../../iup_gridbox.c"
     $97 = $15; //@line 873 "../../iup_gridbox.c"
     $98 = (($97) + ($96<<2)|0); //@line 873 "../../iup_gridbox.c"
     HEAP32[$98>>2] = $95; //@line 873 "../../iup_gridbox.c"
    } else {
     $99 = $17; //@line 875 "../../iup_gridbox.c"
     $100 = ((($99)) + 52|0); //@line 875 "../../iup_gridbox.c"
     $101 = HEAP32[$100>>2]|0; //@line 875 "../../iup_gridbox.c"
     $102 = $3; //@line 875 "../../iup_gridbox.c"
     $103 = ((($102)) + 72|0); //@line 875 "../../iup_gridbox.c"
     $104 = HEAP32[$103>>2]|0; //@line 875 "../../iup_gridbox.c"
     $105 = ((($104)) + 44|0); //@line 875 "../../iup_gridbox.c"
     $106 = HEAP32[$105>>2]|0; //@line 875 "../../iup_gridbox.c"
     $107 = (($101) + ($106))|0; //@line 875 "../../iup_gridbox.c"
     $108 = HEAP32[$11>>2]|0; //@line 875 "../../iup_gridbox.c"
     $109 = $15; //@line 875 "../../iup_gridbox.c"
     $110 = (($109) + ($108<<2)|0); //@line 875 "../../iup_gridbox.c"
     HEAP32[$110>>2] = $107; //@line 875 "../../iup_gridbox.c"
    }
    $111 = $3; //@line 877 "../../iup_gridbox.c"
    $112 = HEAP32[$11>>2]|0; //@line 877 "../../iup_gridbox.c"
    $113 = (_iGridBoxGetAlignmentCol($111,$112)|0); //@line 877 "../../iup_gridbox.c"
    $114 = HEAP32[$11>>2]|0; //@line 877 "../../iup_gridbox.c"
    $115 = $13; //@line 877 "../../iup_gridbox.c"
    $116 = (($115) + ($114<<2)|0); //@line 877 "../../iup_gridbox.c"
    HEAP32[$116>>2] = $113; //@line 877 "../../iup_gridbox.c"
   }
   $117 = HEAP32[$11>>2]|0; //@line 882 "../../iup_gridbox.c"
   $118 = $3; //@line 882 "../../iup_gridbox.c"
   $119 = ((($118)) + 72|0); //@line 882 "../../iup_gridbox.c"
   $120 = HEAP32[$119>>2]|0; //@line 882 "../../iup_gridbox.c"
   $121 = ((($120)) + 36|0); //@line 882 "../../iup_gridbox.c"
   $122 = HEAP32[$121>>2]|0; //@line 882 "../../iup_gridbox.c"
   $123 = ($117|0)==($122|0); //@line 882 "../../iup_gridbox.c"
   if ($123) {
    $124 = $3; //@line 884 "../../iup_gridbox.c"
    $125 = ((($124)) + 72|0); //@line 884 "../../iup_gridbox.c"
    $126 = HEAP32[$125>>2]|0; //@line 884 "../../iup_gridbox.c"
    $127 = ((($126)) + 76|0); //@line 884 "../../iup_gridbox.c"
    $128 = HEAP32[$127>>2]|0; //@line 884 "../../iup_gridbox.c"
    $129 = ($128|0)!=(0); //@line 884 "../../iup_gridbox.c"
    if ($129) {
     $130 = $3; //@line 885 "../../iup_gridbox.c"
     $131 = ((($130)) + 72|0); //@line 885 "../../iup_gridbox.c"
     $132 = HEAP32[$131>>2]|0; //@line 885 "../../iup_gridbox.c"
     $133 = ((($132)) + 76|0); //@line 885 "../../iup_gridbox.c"
     $134 = HEAP32[$133>>2]|0; //@line 885 "../../iup_gridbox.c"
     $135 = $3; //@line 885 "../../iup_gridbox.c"
     $136 = ((($135)) + 72|0); //@line 885 "../../iup_gridbox.c"
     $137 = HEAP32[$136>>2]|0; //@line 885 "../../iup_gridbox.c"
     $138 = ((($137)) + 40|0); //@line 885 "../../iup_gridbox.c"
     $139 = HEAP32[$138>>2]|0; //@line 885 "../../iup_gridbox.c"
     $140 = (($134) + ($139))|0; //@line 885 "../../iup_gridbox.c"
     $141 = HEAP32[$10>>2]|0; //@line 885 "../../iup_gridbox.c"
     $142 = $16; //@line 885 "../../iup_gridbox.c"
     $143 = (($142) + ($141<<2)|0); //@line 885 "../../iup_gridbox.c"
     HEAP32[$143>>2] = $140; //@line 885 "../../iup_gridbox.c"
    } else {
     $144 = $17; //@line 887 "../../iup_gridbox.c"
     $145 = ((($144)) + 56|0); //@line 887 "../../iup_gridbox.c"
     $146 = HEAP32[$145>>2]|0; //@line 887 "../../iup_gridbox.c"
     $147 = $3; //@line 887 "../../iup_gridbox.c"
     $148 = ((($147)) + 72|0); //@line 887 "../../iup_gridbox.c"
     $149 = HEAP32[$148>>2]|0; //@line 887 "../../iup_gridbox.c"
     $150 = ((($149)) + 40|0); //@line 887 "../../iup_gridbox.c"
     $151 = HEAP32[$150>>2]|0; //@line 887 "../../iup_gridbox.c"
     $152 = (($146) + ($151))|0; //@line 887 "../../iup_gridbox.c"
     $153 = HEAP32[$10>>2]|0; //@line 887 "../../iup_gridbox.c"
     $154 = $16; //@line 887 "../../iup_gridbox.c"
     $155 = (($154) + ($153<<2)|0); //@line 887 "../../iup_gridbox.c"
     HEAP32[$155>>2] = $152; //@line 887 "../../iup_gridbox.c"
    }
    $156 = $3; //@line 889 "../../iup_gridbox.c"
    $157 = HEAP32[$10>>2]|0; //@line 889 "../../iup_gridbox.c"
    $158 = (_iGridBoxGetAlignmentLin($156,$157)|0); //@line 889 "../../iup_gridbox.c"
    $159 = HEAP32[$10>>2]|0; //@line 889 "../../iup_gridbox.c"
    $160 = $14; //@line 889 "../../iup_gridbox.c"
    $161 = (($160) + ($159<<2)|0); //@line 889 "../../iup_gridbox.c"
    HEAP32[$161>>2] = $158; //@line 889 "../../iup_gridbox.c"
   }
   $162 = $8; //@line 892 "../../iup_gridbox.c"
   $163 = (($162) + 1)|0; //@line 892 "../../iup_gridbox.c"
   $8 = $163; //@line 892 "../../iup_gridbox.c"
  }
  $164 = $17; //@line 862 "../../iup_gridbox.c"
  $165 = ((($164)) + 68|0); //@line 862 "../../iup_gridbox.c"
  $166 = HEAP32[$165>>2]|0; //@line 862 "../../iup_gridbox.c"
  $17 = $166; //@line 862 "../../iup_gridbox.c"
 }
 HEAP32[$11>>2] = 0; //@line 896 "../../iup_gridbox.c"
 while(1) {
  $167 = HEAP32[$11>>2]|0; //@line 896 "../../iup_gridbox.c"
  $168 = $3; //@line 896 "../../iup_gridbox.c"
  $169 = ((($168)) + 72|0); //@line 896 "../../iup_gridbox.c"
  $170 = HEAP32[$169>>2]|0; //@line 896 "../../iup_gridbox.c"
  $171 = ((($170)) + 60|0); //@line 896 "../../iup_gridbox.c"
  $172 = HEAP32[$171>>2]|0; //@line 896 "../../iup_gridbox.c"
  $173 = ($167|0)<($172|0); //@line 896 "../../iup_gridbox.c"
  if (!($173)) {
   break;
  }
  $174 = HEAP32[$11>>2]|0; //@line 898 "../../iup_gridbox.c"
  $175 = ($174|0)==(0); //@line 898 "../../iup_gridbox.c"
  if ($175) {
   $176 = $3; //@line 899 "../../iup_gridbox.c"
   $177 = ((($176)) + 72|0); //@line 899 "../../iup_gridbox.c"
   $178 = HEAP32[$177>>2]|0; //@line 899 "../../iup_gridbox.c"
   $179 = ((($178)) + 24|0); //@line 899 "../../iup_gridbox.c"
   $180 = HEAP32[$179>>2]|0; //@line 899 "../../iup_gridbox.c"
   $181 = HEAP32[$11>>2]|0; //@line 899 "../../iup_gridbox.c"
   $182 = $12; //@line 899 "../../iup_gridbox.c"
   $183 = (($182) + ($181<<2)|0); //@line 899 "../../iup_gridbox.c"
   HEAP32[$183>>2] = $180; //@line 899 "../../iup_gridbox.c"
  } else {
   $184 = HEAP32[$11>>2]|0; //@line 901 "../../iup_gridbox.c"
   $185 = (($184) - 1)|0; //@line 901 "../../iup_gridbox.c"
   $186 = $12; //@line 901 "../../iup_gridbox.c"
   $187 = (($186) + ($185<<2)|0); //@line 901 "../../iup_gridbox.c"
   $188 = HEAP32[$187>>2]|0; //@line 901 "../../iup_gridbox.c"
   $189 = HEAP32[$11>>2]|0; //@line 901 "../../iup_gridbox.c"
   $190 = (($189) - 1)|0; //@line 901 "../../iup_gridbox.c"
   $191 = $15; //@line 901 "../../iup_gridbox.c"
   $192 = (($191) + ($190<<2)|0); //@line 901 "../../iup_gridbox.c"
   $193 = HEAP32[$192>>2]|0; //@line 901 "../../iup_gridbox.c"
   $194 = (($188) + ($193))|0; //@line 901 "../../iup_gridbox.c"
   $195 = HEAP32[$11>>2]|0; //@line 901 "../../iup_gridbox.c"
   $196 = $12; //@line 901 "../../iup_gridbox.c"
   $197 = (($196) + ($195<<2)|0); //@line 901 "../../iup_gridbox.c"
   HEAP32[$197>>2] = $194; //@line 901 "../../iup_gridbox.c"
  }
  $198 = HEAP32[$11>>2]|0; //@line 896 "../../iup_gridbox.c"
  $199 = (($198) + 1)|0; //@line 896 "../../iup_gridbox.c"
  HEAP32[$11>>2] = $199; //@line 896 "../../iup_gridbox.c"
 }
 HEAP32[$10>>2] = 0; //@line 904 "../../iup_gridbox.c"
 while(1) {
  $200 = HEAP32[$10>>2]|0; //@line 904 "../../iup_gridbox.c"
  $201 = $3; //@line 904 "../../iup_gridbox.c"
  $202 = ((($201)) + 72|0); //@line 904 "../../iup_gridbox.c"
  $203 = HEAP32[$202>>2]|0; //@line 904 "../../iup_gridbox.c"
  $204 = ((($203)) + 56|0); //@line 904 "../../iup_gridbox.c"
  $205 = HEAP32[$204>>2]|0; //@line 904 "../../iup_gridbox.c"
  $206 = ($200|0)<($205|0); //@line 904 "../../iup_gridbox.c"
  if (!($206)) {
   break;
  }
  $207 = HEAP32[$10>>2]|0; //@line 906 "../../iup_gridbox.c"
  $208 = ($207|0)==(0); //@line 906 "../../iup_gridbox.c"
  if ($208) {
   $209 = $3; //@line 907 "../../iup_gridbox.c"
   $210 = ((($209)) + 72|0); //@line 907 "../../iup_gridbox.c"
   $211 = HEAP32[$210>>2]|0; //@line 907 "../../iup_gridbox.c"
   $212 = ((($211)) + 28|0); //@line 907 "../../iup_gridbox.c"
   $213 = HEAP32[$212>>2]|0; //@line 907 "../../iup_gridbox.c"
   $214 = HEAP32[$10>>2]|0; //@line 907 "../../iup_gridbox.c"
   $215 = $9; //@line 907 "../../iup_gridbox.c"
   $216 = (($215) + ($214<<2)|0); //@line 907 "../../iup_gridbox.c"
   HEAP32[$216>>2] = $213; //@line 907 "../../iup_gridbox.c"
  } else {
   $217 = HEAP32[$10>>2]|0; //@line 909 "../../iup_gridbox.c"
   $218 = (($217) - 1)|0; //@line 909 "../../iup_gridbox.c"
   $219 = $9; //@line 909 "../../iup_gridbox.c"
   $220 = (($219) + ($218<<2)|0); //@line 909 "../../iup_gridbox.c"
   $221 = HEAP32[$220>>2]|0; //@line 909 "../../iup_gridbox.c"
   $222 = HEAP32[$10>>2]|0; //@line 909 "../../iup_gridbox.c"
   $223 = (($222) - 1)|0; //@line 909 "../../iup_gridbox.c"
   $224 = $16; //@line 909 "../../iup_gridbox.c"
   $225 = (($224) + ($223<<2)|0); //@line 909 "../../iup_gridbox.c"
   $226 = HEAP32[$225>>2]|0; //@line 909 "../../iup_gridbox.c"
   $227 = (($221) + ($226))|0; //@line 909 "../../iup_gridbox.c"
   $228 = HEAP32[$10>>2]|0; //@line 909 "../../iup_gridbox.c"
   $229 = $9; //@line 909 "../../iup_gridbox.c"
   $230 = (($229) + ($228<<2)|0); //@line 909 "../../iup_gridbox.c"
   HEAP32[$230>>2] = $227; //@line 909 "../../iup_gridbox.c"
  }
  $231 = HEAP32[$10>>2]|0; //@line 904 "../../iup_gridbox.c"
  $232 = (($231) + 1)|0; //@line 904 "../../iup_gridbox.c"
  HEAP32[$10>>2] = $232; //@line 904 "../../iup_gridbox.c"
 }
 $8 = 0; //@line 912 "../../iup_gridbox.c"
 $233 = $3; //@line 913 "../../iup_gridbox.c"
 $234 = ((($233)) + 64|0); //@line 913 "../../iup_gridbox.c"
 $235 = HEAP32[$234>>2]|0; //@line 913 "../../iup_gridbox.c"
 $17 = $235; //@line 913 "../../iup_gridbox.c"
 while(1) {
  $236 = $17; //@line 913 "../../iup_gridbox.c"
  $237 = ($236|0)!=(0|0); //@line 913 "../../iup_gridbox.c"
  if (!($237)) {
   break;
  }
  $238 = $17; //@line 915 "../../iup_gridbox.c"
  $239 = ((($238)) + 24|0); //@line 915 "../../iup_gridbox.c"
  $240 = HEAP32[$239>>2]|0; //@line 915 "../../iup_gridbox.c"
  $241 = $240 & 1; //@line 915 "../../iup_gridbox.c"
  $242 = ($241|0)!=(0); //@line 915 "../../iup_gridbox.c"
  if (!($242)) {
   $243 = $3; //@line 917 "../../iup_gridbox.c"
   $244 = $8; //@line 917 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($243,$244,$10,$11); //@line 917 "../../iup_gridbox.c"
   $245 = HEAP32[$10>>2]|0; //@line 919 "../../iup_gridbox.c"
   $246 = $14; //@line 919 "../../iup_gridbox.c"
   $247 = (($246) + ($245<<2)|0); //@line 919 "../../iup_gridbox.c"
   $248 = HEAP32[$247>>2]|0; //@line 919 "../../iup_gridbox.c"
   $249 = ($248|0)==(1); //@line 919 "../../iup_gridbox.c"
   $250 = HEAP32[$10>>2]|0; //@line 920 "../../iup_gridbox.c"
   do {
    if ($249) {
     $251 = $16; //@line 920 "../../iup_gridbox.c"
     $252 = (($251) + ($250<<2)|0); //@line 920 "../../iup_gridbox.c"
     $253 = HEAP32[$252>>2]|0; //@line 920 "../../iup_gridbox.c"
     $254 = $17; //@line 920 "../../iup_gridbox.c"
     $255 = ((($254)) + 56|0); //@line 920 "../../iup_gridbox.c"
     $256 = HEAP32[$255>>2]|0; //@line 920 "../../iup_gridbox.c"
     $257 = (($253) - ($256))|0; //@line 920 "../../iup_gridbox.c"
     $258 = (($257|0) / 2)&-1; //@line 920 "../../iup_gridbox.c"
     $7 = $258; //@line 920 "../../iup_gridbox.c"
    } else {
     $259 = $14; //@line 921 "../../iup_gridbox.c"
     $260 = (($259) + ($250<<2)|0); //@line 921 "../../iup_gridbox.c"
     $261 = HEAP32[$260>>2]|0; //@line 921 "../../iup_gridbox.c"
     $262 = ($261|0)==(2); //@line 921 "../../iup_gridbox.c"
     if ($262) {
      $263 = HEAP32[$10>>2]|0; //@line 922 "../../iup_gridbox.c"
      $264 = $16; //@line 922 "../../iup_gridbox.c"
      $265 = (($264) + ($263<<2)|0); //@line 922 "../../iup_gridbox.c"
      $266 = HEAP32[$265>>2]|0; //@line 922 "../../iup_gridbox.c"
      $267 = $17; //@line 922 "../../iup_gridbox.c"
      $268 = ((($267)) + 56|0); //@line 922 "../../iup_gridbox.c"
      $269 = HEAP32[$268>>2]|0; //@line 922 "../../iup_gridbox.c"
      $270 = (($266) - ($269))|0; //@line 922 "../../iup_gridbox.c"
      $7 = $270; //@line 922 "../../iup_gridbox.c"
      break;
     } else {
      $7 = 0; //@line 924 "../../iup_gridbox.c"
      break;
     }
    }
   } while(0);
   $271 = $7; //@line 925 "../../iup_gridbox.c"
   $272 = ($271|0)<(0); //@line 925 "../../iup_gridbox.c"
   if ($272) {
    $7 = 0; //@line 925 "../../iup_gridbox.c"
   }
   $273 = HEAP32[$11>>2]|0; //@line 927 "../../iup_gridbox.c"
   $274 = $13; //@line 927 "../../iup_gridbox.c"
   $275 = (($274) + ($273<<2)|0); //@line 927 "../../iup_gridbox.c"
   $276 = HEAP32[$275>>2]|0; //@line 927 "../../iup_gridbox.c"
   $277 = ($276|0)==(1); //@line 927 "../../iup_gridbox.c"
   $278 = HEAP32[$11>>2]|0; //@line 928 "../../iup_gridbox.c"
   do {
    if ($277) {
     $279 = $15; //@line 928 "../../iup_gridbox.c"
     $280 = (($279) + ($278<<2)|0); //@line 928 "../../iup_gridbox.c"
     $281 = HEAP32[$280>>2]|0; //@line 928 "../../iup_gridbox.c"
     $282 = $17; //@line 928 "../../iup_gridbox.c"
     $283 = ((($282)) + 52|0); //@line 928 "../../iup_gridbox.c"
     $284 = HEAP32[$283>>2]|0; //@line 928 "../../iup_gridbox.c"
     $285 = (($281) - ($284))|0; //@line 928 "../../iup_gridbox.c"
     $286 = (($285|0) / 2)&-1; //@line 928 "../../iup_gridbox.c"
     $6 = $286; //@line 928 "../../iup_gridbox.c"
    } else {
     $287 = $13; //@line 929 "../../iup_gridbox.c"
     $288 = (($287) + ($278<<2)|0); //@line 929 "../../iup_gridbox.c"
     $289 = HEAP32[$288>>2]|0; //@line 929 "../../iup_gridbox.c"
     $290 = ($289|0)==(2); //@line 929 "../../iup_gridbox.c"
     if ($290) {
      $291 = HEAP32[$11>>2]|0; //@line 930 "../../iup_gridbox.c"
      $292 = $15; //@line 930 "../../iup_gridbox.c"
      $293 = (($292) + ($291<<2)|0); //@line 930 "../../iup_gridbox.c"
      $294 = HEAP32[$293>>2]|0; //@line 930 "../../iup_gridbox.c"
      $295 = $17; //@line 930 "../../iup_gridbox.c"
      $296 = ((($295)) + 52|0); //@line 930 "../../iup_gridbox.c"
      $297 = HEAP32[$296>>2]|0; //@line 930 "../../iup_gridbox.c"
      $298 = (($294) - ($297))|0; //@line 930 "../../iup_gridbox.c"
      $6 = $298; //@line 930 "../../iup_gridbox.c"
      break;
     } else {
      $6 = 0; //@line 932 "../../iup_gridbox.c"
      break;
     }
    }
   } while(0);
   $299 = $6; //@line 933 "../../iup_gridbox.c"
   $300 = ($299|0)<(0); //@line 933 "../../iup_gridbox.c"
   if ($300) {
    $6 = 0; //@line 933 "../../iup_gridbox.c"
   }
   $301 = $17; //@line 936 "../../iup_gridbox.c"
   $302 = $4; //@line 936 "../../iup_gridbox.c"
   $303 = HEAP32[$11>>2]|0; //@line 936 "../../iup_gridbox.c"
   $304 = $12; //@line 936 "../../iup_gridbox.c"
   $305 = (($304) + ($303<<2)|0); //@line 936 "../../iup_gridbox.c"
   $306 = HEAP32[$305>>2]|0; //@line 936 "../../iup_gridbox.c"
   $307 = (($302) + ($306))|0; //@line 936 "../../iup_gridbox.c"
   $308 = $6; //@line 936 "../../iup_gridbox.c"
   $309 = (($307) + ($308))|0; //@line 936 "../../iup_gridbox.c"
   $310 = $5; //@line 936 "../../iup_gridbox.c"
   $311 = HEAP32[$10>>2]|0; //@line 936 "../../iup_gridbox.c"
   $312 = $9; //@line 936 "../../iup_gridbox.c"
   $313 = (($312) + ($311<<2)|0); //@line 936 "../../iup_gridbox.c"
   $314 = HEAP32[$313>>2]|0; //@line 936 "../../iup_gridbox.c"
   $315 = (($310) + ($314))|0; //@line 936 "../../iup_gridbox.c"
   $316 = $7; //@line 936 "../../iup_gridbox.c"
   $317 = (($315) + ($316))|0; //@line 936 "../../iup_gridbox.c"
   _iupBaseSetPosition($301,$309,$317); //@line 936 "../../iup_gridbox.c"
   $318 = $8; //@line 938 "../../iup_gridbox.c"
   $319 = (($318) + 1)|0; //@line 938 "../../iup_gridbox.c"
   $8 = $319; //@line 938 "../../iup_gridbox.c"
  }
  $320 = $17; //@line 913 "../../iup_gridbox.c"
  $321 = ((($320)) + 68|0); //@line 913 "../../iup_gridbox.c"
  $322 = HEAP32[$321>>2]|0; //@line 913 "../../iup_gridbox.c"
  $17 = $322; //@line 913 "../../iup_gridbox.c"
 }
 $323 = $13; //@line 942 "../../iup_gridbox.c"
 _free($323); //@line 942 "../../iup_gridbox.c"
 $324 = $14; //@line 943 "../../iup_gridbox.c"
 _free($324); //@line 943 "../../iup_gridbox.c"
 $325 = $15; //@line 944 "../../iup_gridbox.c"
 _free($325); //@line 944 "../../iup_gridbox.c"
 $326 = $16; //@line 945 "../../iup_gridbox.c"
 _free($326); //@line 945 "../../iup_gridbox.c"
 $327 = $12; //@line 946 "../../iup_gridbox.c"
 _free($327); //@line 946 "../../iup_gridbox.c"
 $328 = $9; //@line 947 "../../iup_gridbox.c"
 _free($328); //@line 947 "../../iup_gridbox.c"
 STACKTOP = sp;return; //@line 948 "../../iup_gridbox.c"
}
function _iGridBoxGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 61 "../../iup_gridbox.c"
 $5 = ((($4)) + 52|0); //@line 61 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 61 "../../iup_gridbox.c"
 $2 = $6; //@line 61 "../../iup_gridbox.c"
 $7 = $1; //@line 62 "../../iup_gridbox.c"
 $8 = ((($7)) + 56|0); //@line 62 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 62 "../../iup_gridbox.c"
 $3 = $9; //@line 62 "../../iup_gridbox.c"
 $10 = $1; //@line 63 "../../iup_gridbox.c"
 $11 = ((($10)) + 72|0); //@line 63 "../../iup_gridbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 63 "../../iup_gridbox.c"
 $13 = ((($12)) + 24|0); //@line 63 "../../iup_gridbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 63 "../../iup_gridbox.c"
 $15 = $14<<1; //@line 63 "../../iup_gridbox.c"
 $16 = $2; //@line 63 "../../iup_gridbox.c"
 $17 = (($16) - ($15))|0; //@line 63 "../../iup_gridbox.c"
 $2 = $17; //@line 63 "../../iup_gridbox.c"
 $18 = $1; //@line 64 "../../iup_gridbox.c"
 $19 = ((($18)) + 72|0); //@line 64 "../../iup_gridbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 64 "../../iup_gridbox.c"
 $21 = ((($20)) + 28|0); //@line 64 "../../iup_gridbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 64 "../../iup_gridbox.c"
 $23 = $22<<1; //@line 64 "../../iup_gridbox.c"
 $24 = $3; //@line 64 "../../iup_gridbox.c"
 $25 = (($24) - ($23))|0; //@line 64 "../../iup_gridbox.c"
 $3 = $25; //@line 64 "../../iup_gridbox.c"
 $26 = $2; //@line 65 "../../iup_gridbox.c"
 $27 = ($26|0)<(0); //@line 65 "../../iup_gridbox.c"
 if ($27) {
  $2 = 0; //@line 65 "../../iup_gridbox.c"
 }
 $28 = $3; //@line 66 "../../iup_gridbox.c"
 $29 = ($28|0)<(0); //@line 66 "../../iup_gridbox.c"
 if (!($29)) {
  $30 = $2; //@line 67 "../../iup_gridbox.c"
  $31 = $3; //@line 67 "../../iup_gridbox.c"
  $32 = (_iupStrReturnIntInt($30,$31,120)|0); //@line 67 "../../iup_gridbox.c"
  STACKTOP = sp;return ($32|0); //@line 67 "../../iup_gridbox.c"
 }
 $3 = 0; //@line 66 "../../iup_gridbox.c"
 $30 = $2; //@line 67 "../../iup_gridbox.c"
 $31 = $3; //@line 67 "../../iup_gridbox.c"
 $32 = (_iupStrReturnIntInt($30,$31,120)|0); //@line 67 "../../iup_gridbox.c"
 STACKTOP = sp;return ($32|0); //@line 67 "../../iup_gridbox.c"
}
function _iGridBoxGetMarginAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 341 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 341 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 341 "../../iup_gridbox.c"
 $5 = ((($4)) + 24|0); //@line 341 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 341 "../../iup_gridbox.c"
 $7 = $1; //@line 341 "../../iup_gridbox.c"
 $8 = ((($7)) + 72|0); //@line 341 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 341 "../../iup_gridbox.c"
 $10 = ((($9)) + 28|0); //@line 341 "../../iup_gridbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 341 "../../iup_gridbox.c"
 $12 = (_iupStrReturnIntInt($6,$11,120)|0); //@line 341 "../../iup_gridbox.c"
 STACKTOP = sp;return ($12|0); //@line 341 "../../iup_gridbox.c"
}
function _iGridBoxSetMarginAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 335 "../../iup_gridbox.c"
 $5 = $2; //@line 335 "../../iup_gridbox.c"
 $6 = ((($5)) + 72|0); //@line 335 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 335 "../../iup_gridbox.c"
 $8 = ((($7)) + 24|0); //@line 335 "../../iup_gridbox.c"
 $9 = $2; //@line 335 "../../iup_gridbox.c"
 $10 = ((($9)) + 72|0); //@line 335 "../../iup_gridbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 335 "../../iup_gridbox.c"
 $12 = ((($11)) + 28|0); //@line 335 "../../iup_gridbox.c"
 (_iupStrToIntInt($4,$8,$12,120)|0); //@line 335 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 336 "../../iup_gridbox.c"
}
function _iGridBoxGetCMarginAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0.0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 $4 = $1; //@line 329 "../../iup_gridbox.c"
 _iupdrvFontGetCharSize($4,$2,$3); //@line 329 "../../iup_gridbox.c"
 $5 = $1; //@line 330 "../../iup_gridbox.c"
 $6 = ((($5)) + 72|0); //@line 330 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 330 "../../iup_gridbox.c"
 $8 = ((($7)) + 24|0); //@line 330 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 330 "../../iup_gridbox.c"
 $10 = (+($9|0)); //@line 330 "../../iup_gridbox.c"
 $11 = $10 * 4.0; //@line 330 "../../iup_gridbox.c"
 $12 = HEAP32[$2>>2]|0; //@line 330 "../../iup_gridbox.c"
 $13 = (+($12|0)); //@line 330 "../../iup_gridbox.c"
 $14 = $11 / $13; //@line 330 "../../iup_gridbox.c"
 $15 = $14 + 0.5; //@line 330 "../../iup_gridbox.c"
 $16 = (~~(($15))); //@line 330 "../../iup_gridbox.c"
 $17 = $1; //@line 330 "../../iup_gridbox.c"
 $18 = ((($17)) + 72|0); //@line 330 "../../iup_gridbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 330 "../../iup_gridbox.c"
 $20 = ((($19)) + 28|0); //@line 330 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 330 "../../iup_gridbox.c"
 $22 = (+($21|0)); //@line 330 "../../iup_gridbox.c"
 $23 = $22 * 8.0; //@line 330 "../../iup_gridbox.c"
 $24 = HEAP32[$3>>2]|0; //@line 330 "../../iup_gridbox.c"
 $25 = (+($24|0)); //@line 330 "../../iup_gridbox.c"
 $26 = $23 / $25; //@line 330 "../../iup_gridbox.c"
 $27 = $26 + 0.5; //@line 330 "../../iup_gridbox.c"
 $28 = (~~(($27))); //@line 330 "../../iup_gridbox.c"
 $29 = (_iupStrReturnIntInt($16,$28,120)|0); //@line 330 "../../iup_gridbox.c"
 STACKTOP = sp;return ($29|0); //@line 330 "../../iup_gridbox.c"
}
function _iGridBoxSetCMarginAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0;
 var $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 HEAP32[$4>>2] = -1; //@line 315 "../../iup_gridbox.c"
 HEAP32[$5>>2] = -1; //@line 315 "../../iup_gridbox.c"
 $8 = $2; //@line 317 "../../iup_gridbox.c"
 _iupdrvFontGetCharSize($8,$6,$7); //@line 317 "../../iup_gridbox.c"
 $9 = $3; //@line 318 "../../iup_gridbox.c"
 (_iupStrToIntInt($9,$4,$5,120)|0); //@line 318 "../../iup_gridbox.c"
 $10 = HEAP32[$4>>2]|0; //@line 319 "../../iup_gridbox.c"
 $11 = ($10|0)!=(-1); //@line 319 "../../iup_gridbox.c"
 if ($11) {
  $12 = HEAP32[$4>>2]|0; //@line 320 "../../iup_gridbox.c"
  $13 = HEAP32[$6>>2]|0; //@line 320 "../../iup_gridbox.c"
  $14 = Math_imul($12, $13)|0; //@line 320 "../../iup_gridbox.c"
  $15 = (+($14|0)); //@line 320 "../../iup_gridbox.c"
  $16 = $15 / 4.0; //@line 320 "../../iup_gridbox.c"
  $17 = $16 + 0.5; //@line 320 "../../iup_gridbox.c"
  $18 = (~~(($17))); //@line 320 "../../iup_gridbox.c"
  $19 = $2; //@line 320 "../../iup_gridbox.c"
  $20 = ((($19)) + 72|0); //@line 320 "../../iup_gridbox.c"
  $21 = HEAP32[$20>>2]|0; //@line 320 "../../iup_gridbox.c"
  $22 = ((($21)) + 24|0); //@line 320 "../../iup_gridbox.c"
  HEAP32[$22>>2] = $18; //@line 320 "../../iup_gridbox.c"
 }
 $23 = HEAP32[$5>>2]|0; //@line 321 "../../iup_gridbox.c"
 $24 = ($23|0)!=(-1); //@line 321 "../../iup_gridbox.c"
 if (!($24)) {
  STACKTOP = sp;return 1; //@line 323 "../../iup_gridbox.c"
 }
 $25 = HEAP32[$5>>2]|0; //@line 322 "../../iup_gridbox.c"
 $26 = HEAP32[$7>>2]|0; //@line 322 "../../iup_gridbox.c"
 $27 = Math_imul($25, $26)|0; //@line 322 "../../iup_gridbox.c"
 $28 = (+($27|0)); //@line 322 "../../iup_gridbox.c"
 $29 = $28 / 8.0; //@line 322 "../../iup_gridbox.c"
 $30 = $29 + 0.5; //@line 322 "../../iup_gridbox.c"
 $31 = (~~(($30))); //@line 322 "../../iup_gridbox.c"
 $32 = $2; //@line 322 "../../iup_gridbox.c"
 $33 = ((($32)) + 72|0); //@line 322 "../../iup_gridbox.c"
 $34 = HEAP32[$33>>2]|0; //@line 322 "../../iup_gridbox.c"
 $35 = ((($34)) + 28|0); //@line 322 "../../iup_gridbox.c"
 HEAP32[$35>>2] = $31; //@line 322 "../../iup_gridbox.c"
 STACKTOP = sp;return 1; //@line 323 "../../iup_gridbox.c"
}
function _iGridBoxGetExpandChildrenAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 189 "../../iup_gridbox.c"
 $4 = ((($3)) + 72|0); //@line 189 "../../iup_gridbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 189 "../../iup_gridbox.c"
 $6 = ((($5)) + 8|0); //@line 189 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 189 "../../iup_gridbox.c"
 $8 = $7 & 12; //@line 189 "../../iup_gridbox.c"
 $9 = ($8|0)!=(0); //@line 189 "../../iup_gridbox.c"
 if ($9) {
  $10 = $2; //@line 189 "../../iup_gridbox.c"
  $11 = ((($10)) + 72|0); //@line 189 "../../iup_gridbox.c"
  $12 = HEAP32[$11>>2]|0; //@line 189 "../../iup_gridbox.c"
  $13 = ((($12)) + 8|0); //@line 189 "../../iup_gridbox.c"
  $14 = HEAP32[$13>>2]|0; //@line 189 "../../iup_gridbox.c"
  $15 = $14 & 3; //@line 189 "../../iup_gridbox.c"
  $16 = ($15|0)!=(0); //@line 189 "../../iup_gridbox.c"
  if ($16) {
   $1 = 20441; //@line 190 "../../iup_gridbox.c"
   $31 = $1; //@line 197 "../../iup_gridbox.c"
   STACKTOP = sp;return ($31|0); //@line 197 "../../iup_gridbox.c"
  }
 }
 $17 = $2; //@line 191 "../../iup_gridbox.c"
 $18 = ((($17)) + 72|0); //@line 191 "../../iup_gridbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 191 "../../iup_gridbox.c"
 $20 = ((($19)) + 8|0); //@line 191 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 191 "../../iup_gridbox.c"
 $22 = $21 & 12; //@line 191 "../../iup_gridbox.c"
 $23 = ($22|0)!=(0); //@line 191 "../../iup_gridbox.c"
 if ($23) {
  $1 = 19951; //@line 192 "../../iup_gridbox.c"
  $31 = $1; //@line 197 "../../iup_gridbox.c"
  STACKTOP = sp;return ($31|0); //@line 197 "../../iup_gridbox.c"
 }
 $24 = $2; //@line 193 "../../iup_gridbox.c"
 $25 = ((($24)) + 72|0); //@line 193 "../../iup_gridbox.c"
 $26 = HEAP32[$25>>2]|0; //@line 193 "../../iup_gridbox.c"
 $27 = ((($26)) + 8|0); //@line 193 "../../iup_gridbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 193 "../../iup_gridbox.c"
 $29 = $28 & 3; //@line 193 "../../iup_gridbox.c"
 $30 = ($29|0)!=(0); //@line 193 "../../iup_gridbox.c"
 if ($30) {
  $1 = 19983; //@line 194 "../../iup_gridbox.c"
  $31 = $1; //@line 197 "../../iup_gridbox.c"
  STACKTOP = sp;return ($31|0); //@line 197 "../../iup_gridbox.c"
 } else {
  $1 = 20140; //@line 196 "../../iup_gridbox.c"
  $31 = $1; //@line 197 "../../iup_gridbox.c"
  STACKTOP = sp;return ($31|0); //@line 197 "../../iup_gridbox.c"
 }
 return (0)|0;
}
function _iGridBoxSetExpandChildrenAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 176 "../../iup_gridbox.c"
 $5 = (_iupStrEqualNoCase($4,20441)|0); //@line 176 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 176 "../../iup_gridbox.c"
 if ($6) {
  $7 = $2; //@line 177 "../../iup_gridbox.c"
  $8 = ((($7)) + 72|0); //@line 177 "../../iup_gridbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 177 "../../iup_gridbox.c"
  $10 = ((($9)) + 8|0); //@line 177 "../../iup_gridbox.c"
  HEAP32[$10>>2] = 15; //@line 177 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 184 "../../iup_gridbox.c"
 }
 $11 = $3; //@line 178 "../../iup_gridbox.c"
 $12 = (_iupStrEqualNoCase($11,19951)|0); //@line 178 "../../iup_gridbox.c"
 $13 = ($12|0)!=(0); //@line 178 "../../iup_gridbox.c"
 if ($13) {
  $14 = $2; //@line 179 "../../iup_gridbox.c"
  $15 = ((($14)) + 72|0); //@line 179 "../../iup_gridbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 179 "../../iup_gridbox.c"
  $17 = ((($16)) + 8|0); //@line 179 "../../iup_gridbox.c"
  HEAP32[$17>>2] = 12; //@line 179 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 184 "../../iup_gridbox.c"
 }
 $18 = $3; //@line 180 "../../iup_gridbox.c"
 $19 = (_iupStrEqualNoCase($18,19983)|0); //@line 180 "../../iup_gridbox.c"
 $20 = ($19|0)!=(0); //@line 180 "../../iup_gridbox.c"
 $21 = $2; //@line 181 "../../iup_gridbox.c"
 $22 = ((($21)) + 72|0); //@line 181 "../../iup_gridbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 181 "../../iup_gridbox.c"
 $24 = ((($23)) + 8|0); //@line 181 "../../iup_gridbox.c"
 if ($20) {
  HEAP32[$24>>2] = 3; //@line 181 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 184 "../../iup_gridbox.c"
 } else {
  HEAP32[$24>>2] = 0; //@line 183 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 184 "../../iup_gridbox.c"
 }
 return (0)|0;
}
function _iGridBoxGetHomogeneousLinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 148 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 148 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 148 "../../iup_gridbox.c"
 $5 = ((($4)) + 12|0); //@line 148 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 148 "../../iup_gridbox.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 148 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 148 "../../iup_gridbox.c"
}
function _iGridBoxSetHomogeneousLinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 153 "../../iup_gridbox.c"
 $5 = (_iupStrBoolean($4)|0); //@line 153 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 153 "../../iup_gridbox.c"
 $7 = $2; //@line 154 "../../iup_gridbox.c"
 $8 = ((($7)) + 72|0); //@line 154 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 154 "../../iup_gridbox.c"
 $10 = ((($9)) + 12|0); //@line 154 "../../iup_gridbox.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 154 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 157 "../../iup_gridbox.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 156 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 157 "../../iup_gridbox.c"
 }
 return (0)|0;
}
function _iGridBoxGetHomogeneousColAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 162 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 162 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 162 "../../iup_gridbox.c"
 $5 = ((($4)) + 16|0); //@line 162 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 162 "../../iup_gridbox.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 162 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 162 "../../iup_gridbox.c"
}
function _iGridBoxSetHomogeneousColAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 167 "../../iup_gridbox.c"
 $5 = (_iupStrBoolean($4)|0); //@line 167 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 167 "../../iup_gridbox.c"
 $7 = $2; //@line 168 "../../iup_gridbox.c"
 $8 = ((($7)) + 72|0); //@line 168 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 168 "../../iup_gridbox.c"
 $10 = ((($9)) + 16|0); //@line 168 "../../iup_gridbox.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 168 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 171 "../../iup_gridbox.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 170 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 171 "../../iup_gridbox.c"
 }
 return (0)|0;
}
function _iGridBoxGetNormalizeSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 207 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 207 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 207 "../../iup_gridbox.c"
 $5 = ((($4)) + 20|0); //@line 207 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 207 "../../iup_gridbox.c"
 $7 = (_iupNormalizeGetNormalizeSizeStr($6)|0); //@line 207 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 207 "../../iup_gridbox.c"
}
function _iGridBoxSetNormalizeSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 201 "../../iup_gridbox.c"
 $5 = (_iupNormalizeGetNormalizeSize($4)|0); //@line 201 "../../iup_gridbox.c"
 $6 = $2; //@line 201 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 201 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 201 "../../iup_gridbox.c"
 $9 = ((($8)) + 20|0); //@line 201 "../../iup_gridbox.c"
 HEAP32[$9>>2] = $5; //@line 201 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 202 "../../iup_gridbox.c"
}
function _iGridBoxGetGapLinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 110 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 110 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 110 "../../iup_gridbox.c"
 $5 = ((($4)) + 40|0); //@line 110 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 110 "../../iup_gridbox.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 110 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 110 "../../iup_gridbox.c"
}
function _iGridBoxSetGapLinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 104 "../../iup_gridbox.c"
 $5 = $2; //@line 104 "../../iup_gridbox.c"
 $6 = ((($5)) + 72|0); //@line 104 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 104 "../../iup_gridbox.c"
 $8 = ((($7)) + 40|0); //@line 104 "../../iup_gridbox.c"
 (_iupStrToInt($4,$8)|0); //@line 104 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 105 "../../iup_gridbox.c"
}
function _iGridBoxGetCGapLinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 91 "../../iup_gridbox.c"
 _iupdrvFontGetCharSize($3,$2,0); //@line 91 "../../iup_gridbox.c"
 $4 = $1; //@line 92 "../../iup_gridbox.c"
 $5 = ((($4)) + 72|0); //@line 92 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 92 "../../iup_gridbox.c"
 $7 = ((($6)) + 40|0); //@line 92 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 92 "../../iup_gridbox.c"
 $9 = (+($8|0)); //@line 92 "../../iup_gridbox.c"
 $10 = $9 * 4.0; //@line 92 "../../iup_gridbox.c"
 $11 = HEAP32[$2>>2]|0; //@line 92 "../../iup_gridbox.c"
 $12 = (+($11|0)); //@line 92 "../../iup_gridbox.c"
 $13 = $10 / $12; //@line 92 "../../iup_gridbox.c"
 $14 = $13 + 0.5; //@line 92 "../../iup_gridbox.c"
 $15 = (~~(($14))); //@line 92 "../../iup_gridbox.c"
 $16 = (_iupStrReturnInt($15)|0); //@line 92 "../../iup_gridbox.c"
 STACKTOP = sp;return ($16|0); //@line 92 "../../iup_gridbox.c"
}
function _iGridBoxSetCGapLinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 82 "../../iup_gridbox.c"
 (_iupStrToInt($6,$4)|0); //@line 82 "../../iup_gridbox.c"
 $7 = $2; //@line 83 "../../iup_gridbox.c"
 _iupdrvFontGetCharSize($7,$5,0); //@line 83 "../../iup_gridbox.c"
 $8 = HEAP32[$4>>2]|0; //@line 84 "../../iup_gridbox.c"
 $9 = HEAP32[$5>>2]|0; //@line 84 "../../iup_gridbox.c"
 $10 = Math_imul($8, $9)|0; //@line 84 "../../iup_gridbox.c"
 $11 = (+($10|0)); //@line 84 "../../iup_gridbox.c"
 $12 = $11 / 4.0; //@line 84 "../../iup_gridbox.c"
 $13 = $12 + 0.5; //@line 84 "../../iup_gridbox.c"
 $14 = (~~(($13))); //@line 84 "../../iup_gridbox.c"
 $15 = $2; //@line 84 "../../iup_gridbox.c"
 $16 = ((($15)) + 72|0); //@line 84 "../../iup_gridbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 84 "../../iup_gridbox.c"
 $18 = ((($17)) + 40|0); //@line 84 "../../iup_gridbox.c"
 HEAP32[$18>>2] = $14; //@line 84 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 85 "../../iup_gridbox.c"
}
function _iGridBoxGetGapColAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 121 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 121 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 121 "../../iup_gridbox.c"
 $5 = ((($4)) + 44|0); //@line 121 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 121 "../../iup_gridbox.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 121 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 121 "../../iup_gridbox.c"
}
function _iGridBoxSetGapColAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 115 "../../iup_gridbox.c"
 $5 = $2; //@line 115 "../../iup_gridbox.c"
 $6 = ((($5)) + 72|0); //@line 115 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 115 "../../iup_gridbox.c"
 $8 = ((($7)) + 44|0); //@line 115 "../../iup_gridbox.c"
 (_iupStrToInt($4,$8)|0); //@line 115 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 116 "../../iup_gridbox.c"
}
function _iGridBoxGetCGapColAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 98 "../../iup_gridbox.c"
 _iupdrvFontGetCharSize($3,0,$2); //@line 98 "../../iup_gridbox.c"
 $4 = $1; //@line 99 "../../iup_gridbox.c"
 $5 = ((($4)) + 72|0); //@line 99 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 99 "../../iup_gridbox.c"
 $7 = ((($6)) + 44|0); //@line 99 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 99 "../../iup_gridbox.c"
 $9 = (+($8|0)); //@line 99 "../../iup_gridbox.c"
 $10 = $9 * 8.0; //@line 99 "../../iup_gridbox.c"
 $11 = HEAP32[$2>>2]|0; //@line 99 "../../iup_gridbox.c"
 $12 = (+($11|0)); //@line 99 "../../iup_gridbox.c"
 $13 = $10 / $12; //@line 99 "../../iup_gridbox.c"
 $14 = $13 + 0.5; //@line 99 "../../iup_gridbox.c"
 $15 = (~~(($14))); //@line 99 "../../iup_gridbox.c"
 $16 = (_iupStrReturnInt($15)|0); //@line 99 "../../iup_gridbox.c"
 STACKTOP = sp;return ($16|0); //@line 99 "../../iup_gridbox.c"
}
function _iGridBoxSetCGapColAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 73 "../../iup_gridbox.c"
 (_iupStrToInt($6,$4)|0); //@line 73 "../../iup_gridbox.c"
 $7 = $2; //@line 74 "../../iup_gridbox.c"
 _iupdrvFontGetCharSize($7,0,$5); //@line 74 "../../iup_gridbox.c"
 $8 = HEAP32[$4>>2]|0; //@line 75 "../../iup_gridbox.c"
 $9 = HEAP32[$5>>2]|0; //@line 75 "../../iup_gridbox.c"
 $10 = Math_imul($8, $9)|0; //@line 75 "../../iup_gridbox.c"
 $11 = (+($10|0)); //@line 75 "../../iup_gridbox.c"
 $12 = $11 / 8.0; //@line 75 "../../iup_gridbox.c"
 $13 = $12 + 0.5; //@line 75 "../../iup_gridbox.c"
 $14 = (~~(($13))); //@line 75 "../../iup_gridbox.c"
 $15 = $2; //@line 75 "../../iup_gridbox.c"
 $16 = ((($15)) + 72|0); //@line 75 "../../iup_gridbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 75 "../../iup_gridbox.c"
 $18 = ((($17)) + 44|0); //@line 75 "../../iup_gridbox.c"
 HEAP32[$18>>2] = $14; //@line 75 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 76 "../../iup_gridbox.c"
}
function _iGridBoxGetAlignmentLinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 443 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 443 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 443 "../../iup_gridbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 443 "../../iup_gridbox.c"
 $6 = (196 + ($5<<2)|0); //@line 443 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 443 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 443 "../../iup_gridbox.c"
}
function _iGridBoxSetAlignmentLinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 431 "../../iup_gridbox.c"
 $5 = (_iupStrEqualNoCase($4,20148)|0); //@line 431 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 431 "../../iup_gridbox.c"
 if ($6) {
  $7 = $2; //@line 432 "../../iup_gridbox.c"
  $8 = ((($7)) + 72|0); //@line 432 "../../iup_gridbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 432 "../../iup_gridbox.c"
  HEAP32[$9>>2] = 2; //@line 432 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 437 "../../iup_gridbox.c"
 }
 $10 = $3; //@line 433 "../../iup_gridbox.c"
 $11 = (_iupStrEqualNoCase($10,20689)|0); //@line 433 "../../iup_gridbox.c"
 $12 = ($11|0)!=(0); //@line 433 "../../iup_gridbox.c"
 if ($12) {
  $13 = $2; //@line 434 "../../iup_gridbox.c"
  $14 = ((($13)) + 72|0); //@line 434 "../../iup_gridbox.c"
  $15 = HEAP32[$14>>2]|0; //@line 434 "../../iup_gridbox.c"
  HEAP32[$15>>2] = 1; //@line 434 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 437 "../../iup_gridbox.c"
 }
 $16 = $3; //@line 435 "../../iup_gridbox.c"
 $17 = (_iupStrEqualNoCase($16,20143)|0); //@line 435 "../../iup_gridbox.c"
 $18 = ($17|0)!=(0); //@line 435 "../../iup_gridbox.c"
 if (!($18)) {
  STACKTOP = sp;return 0; //@line 437 "../../iup_gridbox.c"
 }
 $19 = $2; //@line 436 "../../iup_gridbox.c"
 $20 = ((($19)) + 72|0); //@line 436 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 436 "../../iup_gridbox.c"
 HEAP32[$21>>2] = 0; //@line 436 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 437 "../../iup_gridbox.c"
}
function _iGridBoxGetAlignmentColAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 ;HEAP32[$2>>2]=HEAP32[1012>>2]|0;HEAP32[$2+4>>2]=HEAP32[1012+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[1012+8>>2]|0; //@line 459 "../../iup_gridbox.c"
 $3 = $1; //@line 460 "../../iup_gridbox.c"
 $4 = ((($3)) + 72|0); //@line 460 "../../iup_gridbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 460 "../../iup_gridbox.c"
 $6 = ((($5)) + 4|0); //@line 460 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 460 "../../iup_gridbox.c"
 $8 = (($2) + ($7<<2)|0); //@line 460 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 460 "../../iup_gridbox.c"
 $10 = (_iupStrReturnStr($9)|0); //@line 460 "../../iup_gridbox.c"
 STACKTOP = sp;return ($10|0); //@line 460 "../../iup_gridbox.c"
}
function _iGridBoxSetAlignmentColAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 448 "../../iup_gridbox.c"
 $5 = (_iupStrEqualNoCase($4,20162)|0); //@line 448 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 448 "../../iup_gridbox.c"
 if ($6) {
  $7 = $2; //@line 449 "../../iup_gridbox.c"
  $8 = ((($7)) + 72|0); //@line 449 "../../iup_gridbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 449 "../../iup_gridbox.c"
  $10 = ((($9)) + 4|0); //@line 449 "../../iup_gridbox.c"
  HEAP32[$10>>2] = 2; //@line 449 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 454 "../../iup_gridbox.c"
 }
 $11 = $3; //@line 450 "../../iup_gridbox.c"
 $12 = (_iupStrEqualNoCase($11,20689)|0); //@line 450 "../../iup_gridbox.c"
 $13 = ($12|0)!=(0); //@line 450 "../../iup_gridbox.c"
 if ($13) {
  $14 = $2; //@line 451 "../../iup_gridbox.c"
  $15 = ((($14)) + 72|0); //@line 451 "../../iup_gridbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 451 "../../iup_gridbox.c"
  $17 = ((($16)) + 4|0); //@line 451 "../../iup_gridbox.c"
  HEAP32[$17>>2] = 1; //@line 451 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 454 "../../iup_gridbox.c"
 }
 $18 = $3; //@line 452 "../../iup_gridbox.c"
 $19 = (_iupStrEqualNoCase($18,20156)|0); //@line 452 "../../iup_gridbox.c"
 $20 = ($19|0)!=(0); //@line 452 "../../iup_gridbox.c"
 if (!($20)) {
  STACKTOP = sp;return 0; //@line 454 "../../iup_gridbox.c"
 }
 $21 = $2; //@line 453 "../../iup_gridbox.c"
 $22 = ((($21)) + 72|0); //@line 453 "../../iup_gridbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 453 "../../iup_gridbox.c"
 $24 = ((($23)) + 4|0); //@line 453 "../../iup_gridbox.c"
 HEAP32[$24>>2] = 0; //@line 453 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 454 "../../iup_gridbox.c"
}
function _iGridBoxGetOrientationAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 355 "../../iup_gridbox.c"
 $4 = ((($3)) + 72|0); //@line 355 "../../iup_gridbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 355 "../../iup_gridbox.c"
 $6 = ((($5)) + 48|0); //@line 355 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 355 "../../iup_gridbox.c"
 $8 = ($7|0)==(0); //@line 355 "../../iup_gridbox.c"
 if ($8) {
  $1 = 19951; //@line 356 "../../iup_gridbox.c"
 } else {
  $1 = 19983; //@line 358 "../../iup_gridbox.c"
 }
 $9 = $1; //@line 359 "../../iup_gridbox.c"
 STACKTOP = sp;return ($9|0); //@line 359 "../../iup_gridbox.c"
}
function _iGridBoxSetOrientationAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 346 "../../iup_gridbox.c"
 $5 = (_iupStrEqualNoCase($4,19983)|0); //@line 346 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 346 "../../iup_gridbox.c"
 if ($6) {
  $7 = $2; //@line 347 "../../iup_gridbox.c"
  $8 = ((($7)) + 72|0); //@line 347 "../../iup_gridbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 347 "../../iup_gridbox.c"
  $10 = ((($9)) + 48|0); //@line 347 "../../iup_gridbox.c"
  HEAP32[$10>>2] = 1; //@line 347 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 350 "../../iup_gridbox.c"
 }
 $11 = $3; //@line 348 "../../iup_gridbox.c"
 $12 = (_iupStrEqualNoCase($11,19951)|0); //@line 348 "../../iup_gridbox.c"
 $13 = ($12|0)!=(0); //@line 348 "../../iup_gridbox.c"
 if (!($13)) {
  STACKTOP = sp;return 0; //@line 350 "../../iup_gridbox.c"
 }
 $14 = $2; //@line 349 "../../iup_gridbox.c"
 $15 = ((($14)) + 72|0); //@line 349 "../../iup_gridbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 349 "../../iup_gridbox.c"
 $17 = ((($16)) + 48|0); //@line 349 "../../iup_gridbox.c"
 HEAP32[$17>>2] = 0; //@line 349 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 350 "../../iup_gridbox.c"
}
function _iGridBoxGetNumDivAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 376 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 376 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 376 "../../iup_gridbox.c"
 $5 = ((($4)) + 52|0); //@line 376 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 376 "../../iup_gridbox.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 376 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 376 "../../iup_gridbox.c"
}
function _iGridBoxSetNumDivAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 363 "../../iup_gridbox.c"
 $5 = (_iupStrEqualNoCase($4,13503)|0); //@line 363 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0); //@line 363 "../../iup_gridbox.c"
 if ($6) {
  $7 = $2; //@line 364 "../../iup_gridbox.c"
  $8 = ((($7)) + 72|0); //@line 364 "../../iup_gridbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 364 "../../iup_gridbox.c"
  $10 = ((($9)) + 52|0); //@line 364 "../../iup_gridbox.c"
  HEAP32[$10>>2] = -1; //@line 364 "../../iup_gridbox.c"
  STACKTOP = sp;return 0; //@line 371 "../../iup_gridbox.c"
 }
 $11 = $3; //@line 367 "../../iup_gridbox.c"
 $12 = $2; //@line 367 "../../iup_gridbox.c"
 $13 = ((($12)) + 72|0); //@line 367 "../../iup_gridbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 367 "../../iup_gridbox.c"
 $15 = ((($14)) + 52|0); //@line 367 "../../iup_gridbox.c"
 (_iupStrToInt($11,$15)|0); //@line 367 "../../iup_gridbox.c"
 $16 = $2; //@line 368 "../../iup_gridbox.c"
 $17 = ((($16)) + 72|0); //@line 368 "../../iup_gridbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 368 "../../iup_gridbox.c"
 $19 = ((($18)) + 52|0); //@line 368 "../../iup_gridbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 368 "../../iup_gridbox.c"
 $21 = ($20|0)<=(0); //@line 368 "../../iup_gridbox.c"
 if (!($21)) {
  STACKTOP = sp;return 0; //@line 371 "../../iup_gridbox.c"
 }
 $22 = $2; //@line 369 "../../iup_gridbox.c"
 $23 = ((($22)) + 72|0); //@line 369 "../../iup_gridbox.c"
 $24 = HEAP32[$23>>2]|0; //@line 369 "../../iup_gridbox.c"
 $25 = ((($24)) + 52|0); //@line 369 "../../iup_gridbox.c"
 HEAP32[$25>>2] = 1; //@line 369 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 371 "../../iup_gridbox.c"
}
function _iGridBoxGetNumColAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 381 "../../iup_gridbox.c"
 $3 = ((($2)) + 16|0); //@line 381 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 381 "../../iup_gridbox.c"
 $5 = ($4|0)!=(0|0); //@line 381 "../../iup_gridbox.c"
 if (!($5)) {
  $6 = $1; //@line 382 "../../iup_gridbox.c"
  _iupBaseComputeNaturalSize($6); //@line 382 "../../iup_gridbox.c"
 }
 $7 = $1; //@line 384 "../../iup_gridbox.c"
 $8 = ((($7)) + 72|0); //@line 384 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 384 "../../iup_gridbox.c"
 $10 = ((($9)) + 60|0); //@line 384 "../../iup_gridbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 384 "../../iup_gridbox.c"
 $12 = (_iupStrReturnInt($11)|0); //@line 384 "../../iup_gridbox.c"
 STACKTOP = sp;return ($12|0); //@line 384 "../../iup_gridbox.c"
}
function _iGridBoxGetNumLinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 389 "../../iup_gridbox.c"
 $3 = ((($2)) + 16|0); //@line 389 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 389 "../../iup_gridbox.c"
 $5 = ($4|0)!=(0|0); //@line 389 "../../iup_gridbox.c"
 if (!($5)) {
  $6 = $1; //@line 390 "../../iup_gridbox.c"
  _iupBaseComputeNaturalSize($6); //@line 390 "../../iup_gridbox.c"
 }
 $7 = $1; //@line 392 "../../iup_gridbox.c"
 $8 = ((($7)) + 72|0); //@line 392 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 392 "../../iup_gridbox.c"
 $10 = ((($9)) + 56|0); //@line 392 "../../iup_gridbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 392 "../../iup_gridbox.c"
 $12 = (_iupStrReturnInt($11)|0); //@line 392 "../../iup_gridbox.c"
 STACKTOP = sp;return ($12|0); //@line 392 "../../iup_gridbox.c"
}
function _iGridBoxGetSizeLinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 132 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 132 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 132 "../../iup_gridbox.c"
 $5 = ((($4)) + 32|0); //@line 132 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 132 "../../iup_gridbox.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 132 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 132 "../../iup_gridbox.c"
}
function _iGridBoxSetSizeLinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 126 "../../iup_gridbox.c"
 $5 = $2; //@line 126 "../../iup_gridbox.c"
 $6 = ((($5)) + 72|0); //@line 126 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 126 "../../iup_gridbox.c"
 $8 = ((($7)) + 32|0); //@line 126 "../../iup_gridbox.c"
 (_iupStrToInt($4,$8)|0); //@line 126 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 127 "../../iup_gridbox.c"
}
function _iGridBoxGetSizeColAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 143 "../../iup_gridbox.c"
 $3 = ((($2)) + 72|0); //@line 143 "../../iup_gridbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 143 "../../iup_gridbox.c"
 $5 = ((($4)) + 36|0); //@line 143 "../../iup_gridbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 143 "../../iup_gridbox.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 143 "../../iup_gridbox.c"
 STACKTOP = sp;return ($7|0); //@line 143 "../../iup_gridbox.c"
}
function _iGridBoxSetSizeColAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 137 "../../iup_gridbox.c"
 $5 = $2; //@line 137 "../../iup_gridbox.c"
 $6 = ((($5)) + 72|0); //@line 137 "../../iup_gridbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 137 "../../iup_gridbox.c"
 $8 = ((($7)) + 36|0); //@line 137 "../../iup_gridbox.c"
 (_iupStrToInt($4,$8)|0); //@line 137 "../../iup_gridbox.c"
 STACKTOP = sp;return 0; //@line 138 "../../iup_gridbox.c"
}
function _iGridBoxSetFitToChildrenAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 4|0;
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $7 = $4; //@line 288 "../../iup_gridbox.c"
 $8 = ($7|0)!=(0|0); //@line 288 "../../iup_gridbox.c"
 if ($8) {
  $9 = $4; //@line 288 "../../iup_gridbox.c"
  $10 = HEAP8[$9>>0]|0; //@line 288 "../../iup_gridbox.c"
  $11 = $10 << 24 >> 24; //@line 288 "../../iup_gridbox.c"
  $12 = ($11|0)==(0); //@line 288 "../../iup_gridbox.c"
  if (!($12)) {
   $13 = $4; //@line 291 "../../iup_gridbox.c"
   $14 = HEAP8[$13>>0]|0; //@line 291 "../../iup_gridbox.c"
   $15 = $14 << 24 >> 24; //@line 291 "../../iup_gridbox.c"
   $16 = ($15|0)==(67); //@line 291 "../../iup_gridbox.c"
   $17 = $4; //@line 294 "../../iup_gridbox.c"
   if ($16) {
    $18 = ((($17)) + 1|0); //@line 294 "../../iup_gridbox.c"
    $19 = (_iupStrToInt($18,$5)|0); //@line 294 "../../iup_gridbox.c"
    $20 = ($19|0)!=(0); //@line 294 "../../iup_gridbox.c"
    if ($20) {
     $21 = $3; //@line 296 "../../iup_gridbox.c"
     $22 = HEAP32[$5>>2]|0; //@line 296 "../../iup_gridbox.c"
     _iGridBoxFitColChildren($21,$22); //@line 296 "../../iup_gridbox.c"
     $23 = $3; //@line 297 "../../iup_gridbox.c"
     _IupRefreshChildren($23); //@line 297 "../../iup_gridbox.c"
    }
   } else {
    $24 = HEAP8[$17>>0]|0; //@line 300 "../../iup_gridbox.c"
    $25 = $24 << 24 >> 24; //@line 300 "../../iup_gridbox.c"
    $26 = ($25|0)==(76); //@line 300 "../../iup_gridbox.c"
    if ($26) {
     $27 = $4; //@line 303 "../../iup_gridbox.c"
     $28 = ((($27)) + 1|0); //@line 303 "../../iup_gridbox.c"
     $29 = (_iupStrToInt($28,$6)|0); //@line 303 "../../iup_gridbox.c"
     $30 = ($29|0)!=(0); //@line 303 "../../iup_gridbox.c"
     if ($30) {
      $31 = $3; //@line 305 "../../iup_gridbox.c"
      $32 = HEAP32[$6>>2]|0; //@line 305 "../../iup_gridbox.c"
      _iGridBoxFitLineChildren($31,$32); //@line 305 "../../iup_gridbox.c"
      $33 = $3; //@line 306 "../../iup_gridbox.c"
      _IupRefreshChildren($33); //@line 306 "../../iup_gridbox.c"
     }
    }
   }
   $2 = 0; //@line 310 "../../iup_gridbox.c"
   $34 = $2; //@line 311 "../../iup_gridbox.c"
   STACKTOP = sp;return ($34|0); //@line 311 "../../iup_gridbox.c"
  }
 }
 $2 = 0; //@line 289 "../../iup_gridbox.c"
 $34 = $2; //@line 311 "../../iup_gridbox.c"
 STACKTOP = sp;return ($34|0); //@line 311 "../../iup_gridbox.c"
}
function _iGridBoxFitColChildren($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 4|0;
 $10 = sp;
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 213 "../../iup_gridbox.c"
 $8 = 0; //@line 214 "../../iup_gridbox.c"
 $11 = $2; //@line 216 "../../iup_gridbox.c"
 $12 = ((($11)) + 72|0); //@line 216 "../../iup_gridbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 216 "../../iup_gridbox.c"
 $14 = ((($13)) + 60|0); //@line 216 "../../iup_gridbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 216 "../../iup_gridbox.c"
 $16 = ($15|0)==(0); //@line 216 "../../iup_gridbox.c"
 if ($16) {
  STACKTOP = sp;return; //@line 246 "../../iup_gridbox.c"
 }
 $17 = $2; //@line 216 "../../iup_gridbox.c"
 $18 = ((($17)) + 72|0); //@line 216 "../../iup_gridbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 216 "../../iup_gridbox.c"
 $20 = ((($19)) + 56|0); //@line 216 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 216 "../../iup_gridbox.c"
 $22 = ($21|0)==(0); //@line 216 "../../iup_gridbox.c"
 if ($22) {
  STACKTOP = sp;return; //@line 246 "../../iup_gridbox.c"
 }
 $6 = 0; //@line 219 "../../iup_gridbox.c"
 $23 = $2; //@line 220 "../../iup_gridbox.c"
 $24 = ((($23)) + 64|0); //@line 220 "../../iup_gridbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 220 "../../iup_gridbox.c"
 $7 = $25; //@line 220 "../../iup_gridbox.c"
 while(1) {
  $26 = $7; //@line 220 "../../iup_gridbox.c"
  $27 = ($26|0)!=(0|0); //@line 220 "../../iup_gridbox.c"
  if (!($27)) {
   break;
  }
  $28 = $7; //@line 222 "../../iup_gridbox.c"
  $29 = ((($28)) + 24|0); //@line 222 "../../iup_gridbox.c"
  $30 = HEAP32[$29>>2]|0; //@line 222 "../../iup_gridbox.c"
  $31 = $30 & 1; //@line 222 "../../iup_gridbox.c"
  $32 = ($31|0)!=(0); //@line 222 "../../iup_gridbox.c"
  if (!($32)) {
   $33 = $2; //@line 225 "../../iup_gridbox.c"
   $34 = $6; //@line 225 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($33,$34,$9,$10); //@line 225 "../../iup_gridbox.c"
   $35 = HEAP32[$10>>2]|0; //@line 227 "../../iup_gridbox.c"
   $36 = $3; //@line 227 "../../iup_gridbox.c"
   $37 = ($35|0)==($36|0); //@line 227 "../../iup_gridbox.c"
   if ($37) {
    $38 = $7; //@line 229 "../../iup_gridbox.c"
    $39 = ((($38)) + 44|0); //@line 229 "../../iup_gridbox.c"
    $40 = HEAP32[$39>>2]|0; //@line 229 "../../iup_gridbox.c"
    $41 = $4; //@line 229 "../../iup_gridbox.c"
    $42 = ($40|0)>($41|0); //@line 229 "../../iup_gridbox.c"
    if ($42) {
     $43 = $7; //@line 230 "../../iup_gridbox.c"
     $44 = ((($43)) + 44|0); //@line 230 "../../iup_gridbox.c"
     $45 = HEAP32[$44>>2]|0; //@line 230 "../../iup_gridbox.c"
     $4 = $45; //@line 230 "../../iup_gridbox.c"
    }
    $46 = HEAP32[$9>>2]|0; //@line 232 "../../iup_gridbox.c"
    $47 = $2; //@line 232 "../../iup_gridbox.c"
    $48 = ((($47)) + 72|0); //@line 232 "../../iup_gridbox.c"
    $49 = HEAP32[$48>>2]|0; //@line 232 "../../iup_gridbox.c"
    $50 = ((($49)) + 32|0); //@line 232 "../../iup_gridbox.c"
    $51 = HEAP32[$50>>2]|0; //@line 232 "../../iup_gridbox.c"
    $52 = ($46|0)==($51|0); //@line 232 "../../iup_gridbox.c"
    if ($52) {
     $53 = $7; //@line 233 "../../iup_gridbox.c"
     $8 = $53; //@line 233 "../../iup_gridbox.c"
    }
   }
   $54 = $6; //@line 236 "../../iup_gridbox.c"
   $55 = (($54) + 1)|0; //@line 236 "../../iup_gridbox.c"
   $6 = $55; //@line 236 "../../iup_gridbox.c"
  }
  $56 = $7; //@line 220 "../../iup_gridbox.c"
  $57 = ((($56)) + 68|0); //@line 220 "../../iup_gridbox.c"
  $58 = HEAP32[$57>>2]|0; //@line 220 "../../iup_gridbox.c"
  $7 = $58; //@line 220 "../../iup_gridbox.c"
 }
 $59 = $2; //@line 240 "../../iup_gridbox.c"
 $60 = $3; //@line 240 "../../iup_gridbox.c"
 $61 = (_iupAttribGetIntId($59,13565,$60)|0); //@line 240 "../../iup_gridbox.c"
 $5 = $61; //@line 240 "../../iup_gridbox.c"
 $62 = $5; //@line 241 "../../iup_gridbox.c"
 $63 = ($62|0)!=(0); //@line 241 "../../iup_gridbox.c"
 if ($63) {
  $64 = $5; //@line 241 "../../iup_gridbox.c"
  $65 = $4; //@line 241 "../../iup_gridbox.c"
  $66 = ($64|0)>($65|0); //@line 241 "../../iup_gridbox.c"
  if ($66) {
   $67 = $5; //@line 242 "../../iup_gridbox.c"
   $4 = $67; //@line 242 "../../iup_gridbox.c"
  }
 }
 $68 = $8; //@line 244 "../../iup_gridbox.c"
 $69 = ($68|0)!=(0|0); //@line 244 "../../iup_gridbox.c"
 if (!($69)) {
  STACKTOP = sp;return; //@line 246 "../../iup_gridbox.c"
 }
 $70 = $4; //@line 245 "../../iup_gridbox.c"
 $71 = $8; //@line 245 "../../iup_gridbox.c"
 $72 = ((($71)) + 36|0); //@line 245 "../../iup_gridbox.c"
 HEAP32[$72>>2] = $70; //@line 245 "../../iup_gridbox.c"
 STACKTOP = sp;return; //@line 246 "../../iup_gridbox.c"
}
function _iGridBoxFitLineChildren($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 4|0;
 $10 = sp;
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 251 "../../iup_gridbox.c"
 $8 = 0; //@line 252 "../../iup_gridbox.c"
 $11 = $2; //@line 254 "../../iup_gridbox.c"
 $12 = ((($11)) + 72|0); //@line 254 "../../iup_gridbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 254 "../../iup_gridbox.c"
 $14 = ((($13)) + 60|0); //@line 254 "../../iup_gridbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 254 "../../iup_gridbox.c"
 $16 = ($15|0)==(0); //@line 254 "../../iup_gridbox.c"
 if ($16) {
  STACKTOP = sp;return; //@line 284 "../../iup_gridbox.c"
 }
 $17 = $2; //@line 254 "../../iup_gridbox.c"
 $18 = ((($17)) + 72|0); //@line 254 "../../iup_gridbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 254 "../../iup_gridbox.c"
 $20 = ((($19)) + 56|0); //@line 254 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 254 "../../iup_gridbox.c"
 $22 = ($21|0)==(0); //@line 254 "../../iup_gridbox.c"
 if ($22) {
  STACKTOP = sp;return; //@line 284 "../../iup_gridbox.c"
 }
 $6 = 0; //@line 257 "../../iup_gridbox.c"
 $23 = $2; //@line 258 "../../iup_gridbox.c"
 $24 = ((($23)) + 64|0); //@line 258 "../../iup_gridbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 258 "../../iup_gridbox.c"
 $7 = $25; //@line 258 "../../iup_gridbox.c"
 while(1) {
  $26 = $7; //@line 258 "../../iup_gridbox.c"
  $27 = ($26|0)!=(0|0); //@line 258 "../../iup_gridbox.c"
  if (!($27)) {
   break;
  }
  $28 = $7; //@line 260 "../../iup_gridbox.c"
  $29 = ((($28)) + 24|0); //@line 260 "../../iup_gridbox.c"
  $30 = HEAP32[$29>>2]|0; //@line 260 "../../iup_gridbox.c"
  $31 = $30 & 1; //@line 260 "../../iup_gridbox.c"
  $32 = ($31|0)!=(0); //@line 260 "../../iup_gridbox.c"
  if (!($32)) {
   $33 = $2; //@line 263 "../../iup_gridbox.c"
   $34 = $6; //@line 263 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($33,$34,$9,$10); //@line 263 "../../iup_gridbox.c"
   $35 = HEAP32[$9>>2]|0; //@line 265 "../../iup_gridbox.c"
   $36 = $3; //@line 265 "../../iup_gridbox.c"
   $37 = ($35|0)==($36|0); //@line 265 "../../iup_gridbox.c"
   if ($37) {
    $38 = $7; //@line 267 "../../iup_gridbox.c"
    $39 = ((($38)) + 48|0); //@line 267 "../../iup_gridbox.c"
    $40 = HEAP32[$39>>2]|0; //@line 267 "../../iup_gridbox.c"
    $41 = $4; //@line 267 "../../iup_gridbox.c"
    $42 = ($40|0)>($41|0); //@line 267 "../../iup_gridbox.c"
    if ($42) {
     $43 = $7; //@line 268 "../../iup_gridbox.c"
     $44 = ((($43)) + 48|0); //@line 268 "../../iup_gridbox.c"
     $45 = HEAP32[$44>>2]|0; //@line 268 "../../iup_gridbox.c"
     $4 = $45; //@line 268 "../../iup_gridbox.c"
    }
    $46 = HEAP32[$10>>2]|0; //@line 270 "../../iup_gridbox.c"
    $47 = $2; //@line 270 "../../iup_gridbox.c"
    $48 = ((($47)) + 72|0); //@line 270 "../../iup_gridbox.c"
    $49 = HEAP32[$48>>2]|0; //@line 270 "../../iup_gridbox.c"
    $50 = ((($49)) + 36|0); //@line 270 "../../iup_gridbox.c"
    $51 = HEAP32[$50>>2]|0; //@line 270 "../../iup_gridbox.c"
    $52 = ($46|0)==($51|0); //@line 270 "../../iup_gridbox.c"
    if ($52) {
     $53 = $7; //@line 271 "../../iup_gridbox.c"
     $8 = $53; //@line 271 "../../iup_gridbox.c"
    }
   }
   $54 = $6; //@line 274 "../../iup_gridbox.c"
   $55 = (($54) + 1)|0; //@line 274 "../../iup_gridbox.c"
   $6 = $55; //@line 274 "../../iup_gridbox.c"
  }
  $56 = $7; //@line 258 "../../iup_gridbox.c"
  $57 = ((($56)) + 68|0); //@line 258 "../../iup_gridbox.c"
  $58 = HEAP32[$57>>2]|0; //@line 258 "../../iup_gridbox.c"
  $7 = $58; //@line 258 "../../iup_gridbox.c"
 }
 $59 = $2; //@line 278 "../../iup_gridbox.c"
 $60 = $3; //@line 278 "../../iup_gridbox.c"
 $61 = (_iupAttribGetIntId($59,13552,$60)|0); //@line 278 "../../iup_gridbox.c"
 $5 = $61; //@line 278 "../../iup_gridbox.c"
 $62 = $5; //@line 279 "../../iup_gridbox.c"
 $63 = ($62|0)!=(0); //@line 279 "../../iup_gridbox.c"
 if ($63) {
  $64 = $5; //@line 279 "../../iup_gridbox.c"
  $65 = $4; //@line 279 "../../iup_gridbox.c"
  $66 = ($64|0)>($65|0); //@line 279 "../../iup_gridbox.c"
  if ($66) {
   $67 = $5; //@line 280 "../../iup_gridbox.c"
   $4 = $67; //@line 280 "../../iup_gridbox.c"
  }
 }
 $68 = $8; //@line 282 "../../iup_gridbox.c"
 $69 = ($68|0)!=(0|0); //@line 282 "../../iup_gridbox.c"
 if (!($69)) {
  STACKTOP = sp;return; //@line 284 "../../iup_gridbox.c"
 }
 $70 = $4; //@line 283 "../../iup_gridbox.c"
 $71 = $8; //@line 283 "../../iup_gridbox.c"
 $72 = ((($71)) + 40|0); //@line 283 "../../iup_gridbox.c"
 HEAP32[$72>>2] = $70; //@line 283 "../../iup_gridbox.c"
 STACKTOP = sp;return; //@line 284 "../../iup_gridbox.c"
}
function _iGridBoxCalcLinCol($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 43 "../../iup_gridbox.c"
 $9 = ((($8)) + 72|0); //@line 43 "../../iup_gridbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 43 "../../iup_gridbox.c"
 $11 = ((($10)) + 48|0); //@line 43 "../../iup_gridbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 43 "../../iup_gridbox.c"
 $13 = ($12|0)==(0); //@line 43 "../../iup_gridbox.c"
 $14 = $5; //@line 45 "../../iup_gridbox.c"
 $15 = $4; //@line 45 "../../iup_gridbox.c"
 $16 = ((($15)) + 72|0); //@line 45 "../../iup_gridbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 45 "../../iup_gridbox.c"
 if ($13) {
  $18 = ((($17)) + 60|0); //@line 45 "../../iup_gridbox.c"
  $19 = HEAP32[$18>>2]|0; //@line 45 "../../iup_gridbox.c"
  $20 = (($14|0) / ($19|0))&-1; //@line 45 "../../iup_gridbox.c"
  $21 = $6; //@line 45 "../../iup_gridbox.c"
  HEAP32[$21>>2] = $20; //@line 45 "../../iup_gridbox.c"
  $22 = $5; //@line 46 "../../iup_gridbox.c"
  $23 = $4; //@line 46 "../../iup_gridbox.c"
  $24 = ((($23)) + 72|0); //@line 46 "../../iup_gridbox.c"
  $25 = HEAP32[$24>>2]|0; //@line 46 "../../iup_gridbox.c"
  $26 = ((($25)) + 60|0); //@line 46 "../../iup_gridbox.c"
  $27 = HEAP32[$26>>2]|0; //@line 46 "../../iup_gridbox.c"
  $28 = (($22|0) % ($27|0))&-1; //@line 46 "../../iup_gridbox.c"
  $29 = $7; //@line 46 "../../iup_gridbox.c"
  HEAP32[$29>>2] = $28; //@line 46 "../../iup_gridbox.c"
  STACKTOP = sp;return; //@line 53 "../../iup_gridbox.c"
 } else {
  $30 = ((($17)) + 56|0); //@line 50 "../../iup_gridbox.c"
  $31 = HEAP32[$30>>2]|0; //@line 50 "../../iup_gridbox.c"
  $32 = (($14|0) / ($31|0))&-1; //@line 50 "../../iup_gridbox.c"
  $33 = $7; //@line 50 "../../iup_gridbox.c"
  HEAP32[$33>>2] = $32; //@line 50 "../../iup_gridbox.c"
  $34 = $5; //@line 51 "../../iup_gridbox.c"
  $35 = $4; //@line 51 "../../iup_gridbox.c"
  $36 = ((($35)) + 72|0); //@line 51 "../../iup_gridbox.c"
  $37 = HEAP32[$36>>2]|0; //@line 51 "../../iup_gridbox.c"
  $38 = ((($37)) + 56|0); //@line 51 "../../iup_gridbox.c"
  $39 = HEAP32[$38>>2]|0; //@line 51 "../../iup_gridbox.c"
  $40 = (($34|0) % ($39|0))&-1; //@line 51 "../../iup_gridbox.c"
  $41 = $6; //@line 51 "../../iup_gridbox.c"
  HEAP32[$41>>2] = $40; //@line 51 "../../iup_gridbox.c"
  STACKTOP = sp;return; //@line 53 "../../iup_gridbox.c"
 }
}
function _iGridBoxGetAlignmentCol($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 414 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 414 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 414 "../../iup_gridbox.c"
 $9 = ((($8)) + 4|0); //@line 414 "../../iup_gridbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 414 "../../iup_gridbox.c"
 $4 = $10; //@line 414 "../../iup_gridbox.c"
 $11 = $2; //@line 416 "../../iup_gridbox.c"
 $12 = $3; //@line 416 "../../iup_gridbox.c"
 $13 = (_iupAttribGetId($11,13483,$12)|0); //@line 416 "../../iup_gridbox.c"
 $5 = $13; //@line 416 "../../iup_gridbox.c"
 $14 = $5; //@line 417 "../../iup_gridbox.c"
 $15 = ($14|0)!=(0|0); //@line 417 "../../iup_gridbox.c"
 do {
  if ($15) {
   $16 = $5; //@line 419 "../../iup_gridbox.c"
   $17 = (_iupStrEqualNoCase($16,20162)|0); //@line 419 "../../iup_gridbox.c"
   $18 = ($17|0)!=(0); //@line 419 "../../iup_gridbox.c"
   if ($18) {
    $4 = 2; //@line 420 "../../iup_gridbox.c"
    break;
   }
   $19 = $5; //@line 421 "../../iup_gridbox.c"
   $20 = (_iupStrEqualNoCase($19,20689)|0); //@line 421 "../../iup_gridbox.c"
   $21 = ($20|0)!=(0); //@line 421 "../../iup_gridbox.c"
   if ($21) {
    $4 = 1; //@line 422 "../../iup_gridbox.c"
    break;
   }
   $22 = $5; //@line 423 "../../iup_gridbox.c"
   $23 = (_iupStrEqualNoCase($22,20156)|0); //@line 423 "../../iup_gridbox.c"
   $24 = ($23|0)!=(0); //@line 423 "../../iup_gridbox.c"
   if ($24) {
    $4 = 0; //@line 424 "../../iup_gridbox.c"
   }
  }
 } while(0);
 $25 = $4; //@line 426 "../../iup_gridbox.c"
 STACKTOP = sp;return ($25|0); //@line 426 "../../iup_gridbox.c"
}
function _iGridBoxGetAlignmentLin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 397 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 397 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 397 "../../iup_gridbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 397 "../../iup_gridbox.c"
 $4 = $9; //@line 397 "../../iup_gridbox.c"
 $10 = $2; //@line 399 "../../iup_gridbox.c"
 $11 = $3; //@line 399 "../../iup_gridbox.c"
 $12 = (_iupAttribGetId($10,13470,$11)|0); //@line 399 "../../iup_gridbox.c"
 $5 = $12; //@line 399 "../../iup_gridbox.c"
 $13 = $5; //@line 400 "../../iup_gridbox.c"
 $14 = ($13|0)!=(0|0); //@line 400 "../../iup_gridbox.c"
 do {
  if ($14) {
   $15 = $5; //@line 402 "../../iup_gridbox.c"
   $16 = (_iupStrEqualNoCase($15,20148)|0); //@line 402 "../../iup_gridbox.c"
   $17 = ($16|0)!=(0); //@line 402 "../../iup_gridbox.c"
   if ($17) {
    $4 = 2; //@line 403 "../../iup_gridbox.c"
    break;
   }
   $18 = $5; //@line 404 "../../iup_gridbox.c"
   $19 = (_iupStrEqualNoCase($18,20689)|0); //@line 404 "../../iup_gridbox.c"
   $20 = ($19|0)!=(0); //@line 404 "../../iup_gridbox.c"
   if ($20) {
    $4 = 1; //@line 405 "../../iup_gridbox.c"
    break;
   } else {
    $4 = 0; //@line 407 "../../iup_gridbox.c"
    break;
   }
  }
 } while(0);
 $21 = $4; //@line 409 "../../iup_gridbox.c"
 STACKTOP = sp;return ($21|0); //@line 409 "../../iup_gridbox.c"
}
function _iGridBoxCalcHomogeneousHeight($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 651 "../../iup_gridbox.c"
 $4 = ((($3)) + 56|0); //@line 651 "../../iup_gridbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 651 "../../iup_gridbox.c"
 $6 = $1; //@line 651 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 651 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 651 "../../iup_gridbox.c"
 $9 = ((($8)) + 56|0); //@line 651 "../../iup_gridbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 651 "../../iup_gridbox.c"
 $11 = (($10) - 1)|0; //@line 651 "../../iup_gridbox.c"
 $12 = $1; //@line 651 "../../iup_gridbox.c"
 $13 = ((($12)) + 72|0); //@line 651 "../../iup_gridbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 651 "../../iup_gridbox.c"
 $15 = ((($14)) + 40|0); //@line 651 "../../iup_gridbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 651 "../../iup_gridbox.c"
 $17 = Math_imul($11, $16)|0; //@line 651 "../../iup_gridbox.c"
 $18 = (($5) - ($17))|0; //@line 651 "../../iup_gridbox.c"
 $19 = $1; //@line 651 "../../iup_gridbox.c"
 $20 = ((($19)) + 72|0); //@line 651 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 651 "../../iup_gridbox.c"
 $22 = ((($21)) + 28|0); //@line 651 "../../iup_gridbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 651 "../../iup_gridbox.c"
 $24 = $23<<1; //@line 651 "../../iup_gridbox.c"
 $25 = (($18) - ($24))|0; //@line 651 "../../iup_gridbox.c"
 $26 = $1; //@line 651 "../../iup_gridbox.c"
 $27 = ((($26)) + 72|0); //@line 651 "../../iup_gridbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 651 "../../iup_gridbox.c"
 $29 = ((($28)) + 56|0); //@line 651 "../../iup_gridbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 651 "../../iup_gridbox.c"
 $31 = (($25|0) / ($30|0))&-1; //@line 651 "../../iup_gridbox.c"
 $2 = $31; //@line 651 "../../iup_gridbox.c"
 $32 = $2; //@line 652 "../../iup_gridbox.c"
 $33 = ($32|0)<(0); //@line 652 "../../iup_gridbox.c"
 $$ = $33 ? 0 : $31; //@line 652 "../../iup_gridbox.c"
 $2 = $$; //@line 652 "../../iup_gridbox.c"
 $34 = $2; //@line 653 "../../iup_gridbox.c"
 STACKTOP = sp;return ($34|0); //@line 653 "../../iup_gridbox.c"
}
function _iGridBoxCalcEmptyHeight($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 4|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $7 = 0; //@line 694 "../../iup_gridbox.c"
 $8 = 0; //@line 694 "../../iup_gridbox.c"
 $11 = $3; //@line 695 "../../iup_gridbox.c"
 $12 = ((($11)) + 64|0); //@line 695 "../../iup_gridbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 695 "../../iup_gridbox.c"
 $5 = $13; //@line 695 "../../iup_gridbox.c"
 while(1) {
  $14 = $5; //@line 695 "../../iup_gridbox.c"
  $15 = ($14|0)!=(0|0); //@line 695 "../../iup_gridbox.c"
  if (!($15)) {
   break;
  }
  $16 = $5; //@line 697 "../../iup_gridbox.c"
  $17 = ((($16)) + 24|0); //@line 697 "../../iup_gridbox.c"
  $18 = HEAP32[$17>>2]|0; //@line 697 "../../iup_gridbox.c"
  $19 = $18 & 1; //@line 697 "../../iup_gridbox.c"
  $20 = ($19|0)!=(0); //@line 697 "../../iup_gridbox.c"
  if (!($20)) {
   $21 = $3; //@line 700 "../../iup_gridbox.c"
   $22 = $8; //@line 700 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($21,$22,$9,$10); //@line 700 "../../iup_gridbox.c"
   $23 = HEAP32[$10>>2]|0; //@line 704 "../../iup_gridbox.c"
   $24 = $3; //@line 704 "../../iup_gridbox.c"
   $25 = ((($24)) + 72|0); //@line 704 "../../iup_gridbox.c"
   $26 = HEAP32[$25>>2]|0; //@line 704 "../../iup_gridbox.c"
   $27 = ((($26)) + 36|0); //@line 704 "../../iup_gridbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 704 "../../iup_gridbox.c"
   $29 = ($23|0)==($28|0); //@line 704 "../../iup_gridbox.c"
   if ($29) {
    $30 = $5; //@line 705 "../../iup_gridbox.c"
    $31 = ((($30)) + 20|0); //@line 705 "../../iup_gridbox.c"
    $32 = HEAP32[$31>>2]|0; //@line 705 "../../iup_gridbox.c"
    $33 = $4; //@line 705 "../../iup_gridbox.c"
    $34 = $32 & $33; //@line 705 "../../iup_gridbox.c"
    $35 = ($34|0)!=(0); //@line 705 "../../iup_gridbox.c"
    if ($35) {
     $36 = $7; //@line 706 "../../iup_gridbox.c"
     $37 = (($36) + 1)|0; //@line 706 "../../iup_gridbox.c"
     $7 = $37; //@line 706 "../../iup_gridbox.c"
    }
   }
   $38 = $8; //@line 708 "../../iup_gridbox.c"
   $39 = (($38) + 1)|0; //@line 708 "../../iup_gridbox.c"
   $8 = $39; //@line 708 "../../iup_gridbox.c"
  }
  $40 = $5; //@line 695 "../../iup_gridbox.c"
  $41 = ((($40)) + 68|0); //@line 695 "../../iup_gridbox.c"
  $42 = HEAP32[$41>>2]|0; //@line 695 "../../iup_gridbox.c"
  $5 = $42; //@line 695 "../../iup_gridbox.c"
 }
 $43 = $7; //@line 711 "../../iup_gridbox.c"
 $44 = ($43|0)==(0); //@line 711 "../../iup_gridbox.c"
 if ($44) {
  $2 = 0; //@line 712 "../../iup_gridbox.c"
  $59 = $2; //@line 718 "../../iup_gridbox.c"
  STACKTOP = sp;return ($59|0); //@line 718 "../../iup_gridbox.c"
 } else {
  $45 = $3; //@line 715 "../../iup_gridbox.c"
  $46 = ((($45)) + 56|0); //@line 715 "../../iup_gridbox.c"
  $47 = HEAP32[$46>>2]|0; //@line 715 "../../iup_gridbox.c"
  $48 = $3; //@line 715 "../../iup_gridbox.c"
  $49 = ((($48)) + 72|0); //@line 715 "../../iup_gridbox.c"
  $50 = HEAP32[$49>>2]|0; //@line 715 "../../iup_gridbox.c"
  $51 = ((($50)) + 68|0); //@line 715 "../../iup_gridbox.c"
  $52 = HEAP32[$51>>2]|0; //@line 715 "../../iup_gridbox.c"
  $53 = (($47) - ($52))|0; //@line 715 "../../iup_gridbox.c"
  $54 = $7; //@line 715 "../../iup_gridbox.c"
  $55 = (($53|0) / ($54|0))&-1; //@line 715 "../../iup_gridbox.c"
  $6 = $55; //@line 715 "../../iup_gridbox.c"
  $56 = $6; //@line 716 "../../iup_gridbox.c"
  $57 = ($56|0)<(0); //@line 716 "../../iup_gridbox.c"
  $$ = $57 ? 0 : $55; //@line 716 "../../iup_gridbox.c"
  $6 = $$; //@line 716 "../../iup_gridbox.c"
  $58 = $6; //@line 717 "../../iup_gridbox.c"
  $2 = $58; //@line 717 "../../iup_gridbox.c"
  $59 = $2; //@line 718 "../../iup_gridbox.c"
  STACKTOP = sp;return ($59|0); //@line 718 "../../iup_gridbox.c"
 }
 return (0)|0;
}
function _iGridBoxCalcLineHeight($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = sp + 8|0;
 $11 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = 0; //@line 749 "../../iup_gridbox.c"
 $13 = $4; //@line 750 "../../iup_gridbox.c"
 $14 = ((($13)) + 64|0); //@line 750 "../../iup_gridbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 750 "../../iup_gridbox.c"
 $8 = $15; //@line 750 "../../iup_gridbox.c"
 while(1) {
  $16 = $8; //@line 750 "../../iup_gridbox.c"
  $17 = ($16|0)!=(0|0); //@line 750 "../../iup_gridbox.c"
  if (!($17)) {
   break;
  }
  $18 = $8; //@line 752 "../../iup_gridbox.c"
  $19 = ((($18)) + 24|0); //@line 752 "../../iup_gridbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 752 "../../iup_gridbox.c"
  $21 = $20 & 1; //@line 752 "../../iup_gridbox.c"
  $22 = ($21|0)!=(0); //@line 752 "../../iup_gridbox.c"
  if (!($22)) {
   $23 = $4; //@line 755 "../../iup_gridbox.c"
   $24 = $9; //@line 755 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($23,$24,$10,$11); //@line 755 "../../iup_gridbox.c"
   $25 = HEAP32[$11>>2]|0; //@line 759 "../../iup_gridbox.c"
   $26 = $4; //@line 759 "../../iup_gridbox.c"
   $27 = ((($26)) + 72|0); //@line 759 "../../iup_gridbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 759 "../../iup_gridbox.c"
   $29 = ((($28)) + 36|0); //@line 759 "../../iup_gridbox.c"
   $30 = HEAP32[$29>>2]|0; //@line 759 "../../iup_gridbox.c"
   $31 = ($25|0)==($30|0); //@line 759 "../../iup_gridbox.c"
   if ($31) {
    $32 = $8; //@line 761 "../../iup_gridbox.c"
    $33 = ((($32)) + 20|0); //@line 761 "../../iup_gridbox.c"
    $34 = HEAP32[$33>>2]|0; //@line 761 "../../iup_gridbox.c"
    $35 = $34 & 2; //@line 761 "../../iup_gridbox.c"
    $36 = ($35|0)!=(0); //@line 761 "../../iup_gridbox.c"
    if ($36) {
     $37 = $7; //@line 761 "../../iup_gridbox.c"
     $45 = $37;
    } else {
     $38 = $8; //@line 761 "../../iup_gridbox.c"
     $39 = ((($38)) + 20|0); //@line 761 "../../iup_gridbox.c"
     $40 = HEAP32[$39>>2]|0; //@line 761 "../../iup_gridbox.c"
     $41 = $40 & 1; //@line 761 "../../iup_gridbox.c"
     $42 = ($41|0)!=(0); //@line 761 "../../iup_gridbox.c"
     $43 = $6; //@line 761 "../../iup_gridbox.c"
     $44 = $42 ? $43 : 0; //@line 761 "../../iup_gridbox.c"
     $45 = $44;
    }
    $12 = $45; //@line 761 "../../iup_gridbox.c"
    $46 = $8; //@line 762 "../../iup_gridbox.c"
    $47 = ((($46)) + 48|0); //@line 762 "../../iup_gridbox.c"
    $48 = HEAP32[$47>>2]|0; //@line 762 "../../iup_gridbox.c"
    $49 = $12; //@line 762 "../../iup_gridbox.c"
    $50 = (($48) + ($49))|0; //@line 762 "../../iup_gridbox.c"
    $51 = HEAP32[$10>>2]|0; //@line 762 "../../iup_gridbox.c"
    $52 = $5; //@line 762 "../../iup_gridbox.c"
    $53 = (($52) + ($51<<2)|0); //@line 762 "../../iup_gridbox.c"
    HEAP32[$53>>2] = $50; //@line 762 "../../iup_gridbox.c"
   }
   $54 = $9; //@line 765 "../../iup_gridbox.c"
   $55 = (($54) + 1)|0; //@line 765 "../../iup_gridbox.c"
   $9 = $55; //@line 765 "../../iup_gridbox.c"
  }
  $56 = $8; //@line 750 "../../iup_gridbox.c"
  $57 = ((($56)) + 68|0); //@line 750 "../../iup_gridbox.c"
  $58 = HEAP32[$57>>2]|0; //@line 750 "../../iup_gridbox.c"
  $8 = $58; //@line 750 "../../iup_gridbox.c"
 }
 STACKTOP = sp;return; //@line 768 "../../iup_gridbox.c"
}
function _iGridBoxCalcHomogeneousWidth($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 643 "../../iup_gridbox.c"
 $4 = ((($3)) + 52|0); //@line 643 "../../iup_gridbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 643 "../../iup_gridbox.c"
 $6 = $1; //@line 643 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 643 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 643 "../../iup_gridbox.c"
 $9 = ((($8)) + 60|0); //@line 643 "../../iup_gridbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 643 "../../iup_gridbox.c"
 $11 = (($10) - 1)|0; //@line 643 "../../iup_gridbox.c"
 $12 = $1; //@line 643 "../../iup_gridbox.c"
 $13 = ((($12)) + 72|0); //@line 643 "../../iup_gridbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 643 "../../iup_gridbox.c"
 $15 = ((($14)) + 44|0); //@line 643 "../../iup_gridbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 643 "../../iup_gridbox.c"
 $17 = Math_imul($11, $16)|0; //@line 643 "../../iup_gridbox.c"
 $18 = (($5) - ($17))|0; //@line 643 "../../iup_gridbox.c"
 $19 = $1; //@line 643 "../../iup_gridbox.c"
 $20 = ((($19)) + 72|0); //@line 643 "../../iup_gridbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 643 "../../iup_gridbox.c"
 $22 = ((($21)) + 24|0); //@line 643 "../../iup_gridbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 643 "../../iup_gridbox.c"
 $24 = $23<<1; //@line 643 "../../iup_gridbox.c"
 $25 = (($18) - ($24))|0; //@line 643 "../../iup_gridbox.c"
 $26 = $1; //@line 643 "../../iup_gridbox.c"
 $27 = ((($26)) + 72|0); //@line 643 "../../iup_gridbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 643 "../../iup_gridbox.c"
 $29 = ((($28)) + 60|0); //@line 643 "../../iup_gridbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 643 "../../iup_gridbox.c"
 $31 = (($25|0) / ($30|0))&-1; //@line 643 "../../iup_gridbox.c"
 $2 = $31; //@line 643 "../../iup_gridbox.c"
 $32 = $2; //@line 644 "../../iup_gridbox.c"
 $33 = ($32|0)<(0); //@line 644 "../../iup_gridbox.c"
 $$ = $33 ? 0 : $31; //@line 644 "../../iup_gridbox.c"
 $2 = $$; //@line 644 "../../iup_gridbox.c"
 $34 = $2; //@line 645 "../../iup_gridbox.c"
 STACKTOP = sp;return ($34|0); //@line 645 "../../iup_gridbox.c"
}
function _iGridBoxCalcEmptyWidth($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp + 4|0;
 $10 = sp;
 $3 = $0;
 $4 = $1;
 $7 = 0; //@line 662 "../../iup_gridbox.c"
 $8 = 0; //@line 662 "../../iup_gridbox.c"
 $11 = $3; //@line 663 "../../iup_gridbox.c"
 $12 = ((($11)) + 64|0); //@line 663 "../../iup_gridbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 663 "../../iup_gridbox.c"
 $5 = $13; //@line 663 "../../iup_gridbox.c"
 while(1) {
  $14 = $5; //@line 663 "../../iup_gridbox.c"
  $15 = ($14|0)!=(0|0); //@line 663 "../../iup_gridbox.c"
  if (!($15)) {
   break;
  }
  $16 = $5; //@line 665 "../../iup_gridbox.c"
  $17 = ((($16)) + 24|0); //@line 665 "../../iup_gridbox.c"
  $18 = HEAP32[$17>>2]|0; //@line 665 "../../iup_gridbox.c"
  $19 = $18 & 1; //@line 665 "../../iup_gridbox.c"
  $20 = ($19|0)!=(0); //@line 665 "../../iup_gridbox.c"
  if (!($20)) {
   $21 = $3; //@line 668 "../../iup_gridbox.c"
   $22 = $8; //@line 668 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($21,$22,$9,$10); //@line 668 "../../iup_gridbox.c"
   $23 = HEAP32[$9>>2]|0; //@line 672 "../../iup_gridbox.c"
   $24 = $3; //@line 672 "../../iup_gridbox.c"
   $25 = ((($24)) + 72|0); //@line 672 "../../iup_gridbox.c"
   $26 = HEAP32[$25>>2]|0; //@line 672 "../../iup_gridbox.c"
   $27 = ((($26)) + 32|0); //@line 672 "../../iup_gridbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 672 "../../iup_gridbox.c"
   $29 = ($23|0)==($28|0); //@line 672 "../../iup_gridbox.c"
   if ($29) {
    $30 = $5; //@line 673 "../../iup_gridbox.c"
    $31 = ((($30)) + 20|0); //@line 673 "../../iup_gridbox.c"
    $32 = HEAP32[$31>>2]|0; //@line 673 "../../iup_gridbox.c"
    $33 = $4; //@line 673 "../../iup_gridbox.c"
    $34 = $32 & $33; //@line 673 "../../iup_gridbox.c"
    $35 = ($34|0)!=(0); //@line 673 "../../iup_gridbox.c"
    if ($35) {
     $36 = $7; //@line 674 "../../iup_gridbox.c"
     $37 = (($36) + 1)|0; //@line 674 "../../iup_gridbox.c"
     $7 = $37; //@line 674 "../../iup_gridbox.c"
    }
   }
   $38 = $8; //@line 676 "../../iup_gridbox.c"
   $39 = (($38) + 1)|0; //@line 676 "../../iup_gridbox.c"
   $8 = $39; //@line 676 "../../iup_gridbox.c"
  }
  $40 = $5; //@line 663 "../../iup_gridbox.c"
  $41 = ((($40)) + 68|0); //@line 663 "../../iup_gridbox.c"
  $42 = HEAP32[$41>>2]|0; //@line 663 "../../iup_gridbox.c"
  $5 = $42; //@line 663 "../../iup_gridbox.c"
 }
 $43 = $7; //@line 679 "../../iup_gridbox.c"
 $44 = ($43|0)==(0); //@line 679 "../../iup_gridbox.c"
 if ($44) {
  $2 = 0; //@line 680 "../../iup_gridbox.c"
  $59 = $2; //@line 686 "../../iup_gridbox.c"
  STACKTOP = sp;return ($59|0); //@line 686 "../../iup_gridbox.c"
 } else {
  $45 = $3; //@line 683 "../../iup_gridbox.c"
  $46 = ((($45)) + 52|0); //@line 683 "../../iup_gridbox.c"
  $47 = HEAP32[$46>>2]|0; //@line 683 "../../iup_gridbox.c"
  $48 = $3; //@line 683 "../../iup_gridbox.c"
  $49 = ((($48)) + 72|0); //@line 683 "../../iup_gridbox.c"
  $50 = HEAP32[$49>>2]|0; //@line 683 "../../iup_gridbox.c"
  $51 = ((($50)) + 64|0); //@line 683 "../../iup_gridbox.c"
  $52 = HEAP32[$51>>2]|0; //@line 683 "../../iup_gridbox.c"
  $53 = (($47) - ($52))|0; //@line 683 "../../iup_gridbox.c"
  $54 = $7; //@line 683 "../../iup_gridbox.c"
  $55 = (($53|0) / ($54|0))&-1; //@line 683 "../../iup_gridbox.c"
  $6 = $55; //@line 683 "../../iup_gridbox.c"
  $56 = $6; //@line 684 "../../iup_gridbox.c"
  $57 = ($56|0)<(0); //@line 684 "../../iup_gridbox.c"
  $$ = $57 ? 0 : $55; //@line 684 "../../iup_gridbox.c"
  $6 = $$; //@line 684 "../../iup_gridbox.c"
  $58 = $6; //@line 685 "../../iup_gridbox.c"
  $2 = $58; //@line 685 "../../iup_gridbox.c"
  $59 = $2; //@line 686 "../../iup_gridbox.c"
  STACKTOP = sp;return ($59|0); //@line 686 "../../iup_gridbox.c"
 }
 return (0)|0;
}
function _iGridBoxCalcColWidth($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = sp + 8|0;
 $11 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = 0; //@line 724 "../../iup_gridbox.c"
 $13 = $4; //@line 725 "../../iup_gridbox.c"
 $14 = ((($13)) + 64|0); //@line 725 "../../iup_gridbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 725 "../../iup_gridbox.c"
 $8 = $15; //@line 725 "../../iup_gridbox.c"
 while(1) {
  $16 = $8; //@line 725 "../../iup_gridbox.c"
  $17 = ($16|0)!=(0|0); //@line 725 "../../iup_gridbox.c"
  if (!($17)) {
   break;
  }
  $18 = $8; //@line 727 "../../iup_gridbox.c"
  $19 = ((($18)) + 24|0); //@line 727 "../../iup_gridbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 727 "../../iup_gridbox.c"
  $21 = $20 & 1; //@line 727 "../../iup_gridbox.c"
  $22 = ($21|0)!=(0); //@line 727 "../../iup_gridbox.c"
  if (!($22)) {
   $23 = $4; //@line 730 "../../iup_gridbox.c"
   $24 = $9; //@line 730 "../../iup_gridbox.c"
   _iGridBoxCalcLinCol($23,$24,$10,$11); //@line 730 "../../iup_gridbox.c"
   $25 = HEAP32[$10>>2]|0; //@line 734 "../../iup_gridbox.c"
   $26 = $4; //@line 734 "../../iup_gridbox.c"
   $27 = ((($26)) + 72|0); //@line 734 "../../iup_gridbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 734 "../../iup_gridbox.c"
   $29 = ((($28)) + 32|0); //@line 734 "../../iup_gridbox.c"
   $30 = HEAP32[$29>>2]|0; //@line 734 "../../iup_gridbox.c"
   $31 = ($25|0)==($30|0); //@line 734 "../../iup_gridbox.c"
   if ($31) {
    $32 = $8; //@line 736 "../../iup_gridbox.c"
    $33 = ((($32)) + 20|0); //@line 736 "../../iup_gridbox.c"
    $34 = HEAP32[$33>>2]|0; //@line 736 "../../iup_gridbox.c"
    $35 = $34 & 8; //@line 736 "../../iup_gridbox.c"
    $36 = ($35|0)!=(0); //@line 736 "../../iup_gridbox.c"
    if ($36) {
     $37 = $7; //@line 736 "../../iup_gridbox.c"
     $45 = $37;
    } else {
     $38 = $8; //@line 736 "../../iup_gridbox.c"
     $39 = ((($38)) + 20|0); //@line 736 "../../iup_gridbox.c"
     $40 = HEAP32[$39>>2]|0; //@line 736 "../../iup_gridbox.c"
     $41 = $40 & 4; //@line 736 "../../iup_gridbox.c"
     $42 = ($41|0)!=(0); //@line 736 "../../iup_gridbox.c"
     $43 = $6; //@line 736 "../../iup_gridbox.c"
     $44 = $42 ? $43 : 0; //@line 736 "../../iup_gridbox.c"
     $45 = $44;
    }
    $12 = $45; //@line 736 "../../iup_gridbox.c"
    $46 = $8; //@line 737 "../../iup_gridbox.c"
    $47 = ((($46)) + 44|0); //@line 737 "../../iup_gridbox.c"
    $48 = HEAP32[$47>>2]|0; //@line 737 "../../iup_gridbox.c"
    $49 = $12; //@line 737 "../../iup_gridbox.c"
    $50 = (($48) + ($49))|0; //@line 737 "../../iup_gridbox.c"
    $51 = HEAP32[$11>>2]|0; //@line 737 "../../iup_gridbox.c"
    $52 = $5; //@line 737 "../../iup_gridbox.c"
    $53 = (($52) + ($51<<2)|0); //@line 737 "../../iup_gridbox.c"
    HEAP32[$53>>2] = $50; //@line 737 "../../iup_gridbox.c"
   }
   $54 = $9; //@line 740 "../../iup_gridbox.c"
   $55 = (($54) + 1)|0; //@line 740 "../../iup_gridbox.c"
   $9 = $55; //@line 740 "../../iup_gridbox.c"
  }
  $56 = $8; //@line 725 "../../iup_gridbox.c"
  $57 = ((($56)) + 68|0); //@line 725 "../../iup_gridbox.c"
  $58 = HEAP32[$57>>2]|0; //@line 725 "../../iup_gridbox.c"
  $8 = $58; //@line 725 "../../iup_gridbox.c"
 }
 STACKTOP = sp;return; //@line 743 "../../iup_gridbox.c"
}
function _iGridBoxCalcNumDiv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $6 = $1; //@line 495 "../../iup_gridbox.c"
 $7 = ((($6)) + 72|0); //@line 495 "../../iup_gridbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 495 "../../iup_gridbox.c"
 $9 = ((($8)) + 48|0); //@line 495 "../../iup_gridbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 495 "../../iup_gridbox.c"
 $11 = ($10|0)==(0); //@line 495 "../../iup_gridbox.c"
 if ($11) {
  $4 = 0; //@line 497 "../../iup_gridbox.c"
  $2 = 1; //@line 499 "../../iup_gridbox.c"
  $12 = $1; //@line 500 "../../iup_gridbox.c"
  $13 = ((($12)) + 64|0); //@line 500 "../../iup_gridbox.c"
  $14 = HEAP32[$13>>2]|0; //@line 500 "../../iup_gridbox.c"
  $3 = $14; //@line 500 "../../iup_gridbox.c"
  while(1) {
   $15 = $3; //@line 500 "../../iup_gridbox.c"
   $16 = ($15|0)!=(0|0); //@line 500 "../../iup_gridbox.c"
   if (!($16)) {
    label = 14;
    break;
   }
   $17 = $3; //@line 502 "../../iup_gridbox.c"
   $18 = ((($17)) + 24|0); //@line 502 "../../iup_gridbox.c"
   $19 = HEAP32[$18>>2]|0; //@line 502 "../../iup_gridbox.c"
   $20 = $19 & 1; //@line 502 "../../iup_gridbox.c"
   $21 = ($20|0)!=(0); //@line 502 "../../iup_gridbox.c"
   if (!($21)) {
    $22 = $3; //@line 504 "../../iup_gridbox.c"
    $23 = ((($22)) + 44|0); //@line 504 "../../iup_gridbox.c"
    $24 = HEAP32[$23>>2]|0; //@line 504 "../../iup_gridbox.c"
    $25 = $4; //@line 504 "../../iup_gridbox.c"
    $26 = (($25) + ($24))|0; //@line 504 "../../iup_gridbox.c"
    $4 = $26; //@line 504 "../../iup_gridbox.c"
    $27 = $4; //@line 505 "../../iup_gridbox.c"
    $28 = $1; //@line 505 "../../iup_gridbox.c"
    $29 = ((($28)) + 44|0); //@line 505 "../../iup_gridbox.c"
    $30 = HEAP32[$29>>2]|0; //@line 505 "../../iup_gridbox.c"
    $31 = ($27|0)>($30|0); //@line 505 "../../iup_gridbox.c"
    if ($31) {
     label = 14;
     break;
    }
    $32 = $2; //@line 508 "../../iup_gridbox.c"
    $33 = (($32) + 1)|0; //@line 508 "../../iup_gridbox.c"
    $2 = $33; //@line 508 "../../iup_gridbox.c"
   }
   $34 = $3; //@line 500 "../../iup_gridbox.c"
   $35 = ((($34)) + 68|0); //@line 500 "../../iup_gridbox.c"
   $36 = HEAP32[$35>>2]|0; //@line 500 "../../iup_gridbox.c"
   $3 = $36; //@line 500 "../../iup_gridbox.c"
  }
  if ((label|0) == 14) {
   $62 = $2; //@line 530 "../../iup_gridbox.c"
   STACKTOP = sp;return ($62|0); //@line 530 "../../iup_gridbox.c"
  }
 } else {
  $5 = 0; //@line 514 "../../iup_gridbox.c"
  $2 = 1; //@line 516 "../../iup_gridbox.c"
  $37 = $1; //@line 517 "../../iup_gridbox.c"
  $38 = ((($37)) + 64|0); //@line 517 "../../iup_gridbox.c"
  $39 = HEAP32[$38>>2]|0; //@line 517 "../../iup_gridbox.c"
  $3 = $39; //@line 517 "../../iup_gridbox.c"
  while(1) {
   $40 = $3; //@line 517 "../../iup_gridbox.c"
   $41 = ($40|0)!=(0|0); //@line 517 "../../iup_gridbox.c"
   if (!($41)) {
    label = 14;
    break;
   }
   $42 = $3; //@line 519 "../../iup_gridbox.c"
   $43 = ((($42)) + 24|0); //@line 519 "../../iup_gridbox.c"
   $44 = HEAP32[$43>>2]|0; //@line 519 "../../iup_gridbox.c"
   $45 = $44 & 1; //@line 519 "../../iup_gridbox.c"
   $46 = ($45|0)!=(0); //@line 519 "../../iup_gridbox.c"
   if (!($46)) {
    $47 = $3; //@line 521 "../../iup_gridbox.c"
    $48 = ((($47)) + 48|0); //@line 521 "../../iup_gridbox.c"
    $49 = HEAP32[$48>>2]|0; //@line 521 "../../iup_gridbox.c"
    $50 = $5; //@line 521 "../../iup_gridbox.c"
    $51 = (($50) + ($49))|0; //@line 521 "../../iup_gridbox.c"
    $5 = $51; //@line 521 "../../iup_gridbox.c"
    $52 = $5; //@line 522 "../../iup_gridbox.c"
    $53 = $1; //@line 522 "../../iup_gridbox.c"
    $54 = ((($53)) + 48|0); //@line 522 "../../iup_gridbox.c"
    $55 = HEAP32[$54>>2]|0; //@line 522 "../../iup_gridbox.c"
    $56 = ($52|0)>($55|0); //@line 522 "../../iup_gridbox.c"
    if ($56) {
     label = 14;
     break;
    }
    $57 = $2; //@line 525 "../../iup_gridbox.c"
    $58 = (($57) + 1)|0; //@line 525 "../../iup_gridbox.c"
    $2 = $58; //@line 525 "../../iup_gridbox.c"
   }
   $59 = $3; //@line 517 "../../iup_gridbox.c"
   $60 = ((($59)) + 68|0); //@line 517 "../../iup_gridbox.c"
   $61 = HEAP32[$60>>2]|0; //@line 517 "../../iup_gridbox.c"
   $3 = $61; //@line 517 "../../iup_gridbox.c"
  }
  if ((label|0) == 14) {
   $62 = $2; //@line 530 "../../iup_gridbox.c"
   STACKTOP = sp;return ($62|0); //@line 530 "../../iup_gridbox.c"
  }
 }
 return (0)|0;
}
function _iGridBoxUpdateAttribFromFont($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 465 "../../iup_gridbox.c"
 $4 = (_iupAttribGet($3,13322)|0); //@line 465 "../../iup_gridbox.c"
 $2 = $4; //@line 465 "../../iup_gridbox.c"
 $5 = $2; //@line 466 "../../iup_gridbox.c"
 $6 = ($5|0)!=(0|0); //@line 466 "../../iup_gridbox.c"
 if (!($6)) {
  $7 = $1; //@line 467 "../../iup_gridbox.c"
  $8 = (_iupAttribGet($7,13338)|0); //@line 467 "../../iup_gridbox.c"
  $2 = $8; //@line 467 "../../iup_gridbox.c"
 }
 $9 = $2; //@line 468 "../../iup_gridbox.c"
 $10 = ($9|0)!=(0|0); //@line 468 "../../iup_gridbox.c"
 if ($10) {
  $11 = $1; //@line 469 "../../iup_gridbox.c"
  $12 = $2; //@line 469 "../../iup_gridbox.c"
  (_iGridBoxSetCMarginAttrib($11,$12)|0); //@line 469 "../../iup_gridbox.c"
 }
 $13 = $1; //@line 471 "../../iup_gridbox.c"
 $14 = (_iupAttribGet($13,13413)|0); //@line 471 "../../iup_gridbox.c"
 $2 = $14; //@line 471 "../../iup_gridbox.c"
 $15 = $2; //@line 472 "../../iup_gridbox.c"
 $16 = ($15|0)!=(0|0); //@line 472 "../../iup_gridbox.c"
 if (!($16)) {
  $17 = $1; //@line 473 "../../iup_gridbox.c"
  $18 = (_iupAttribGet($17,13444)|0); //@line 473 "../../iup_gridbox.c"
  $2 = $18; //@line 473 "../../iup_gridbox.c"
 }
 $19 = $2; //@line 474 "../../iup_gridbox.c"
 $20 = ($19|0)!=(0|0); //@line 474 "../../iup_gridbox.c"
 if ($20) {
  $21 = $1; //@line 475 "../../iup_gridbox.c"
  $22 = $2; //@line 475 "../../iup_gridbox.c"
  (_iGridBoxSetCGapLinAttrib($21,$22)|0); //@line 475 "../../iup_gridbox.c"
 }
 $23 = $1; //@line 477 "../../iup_gridbox.c"
 $24 = (_iupAttribGet($23,13428)|0); //@line 477 "../../iup_gridbox.c"
 $2 = $24; //@line 477 "../../iup_gridbox.c"
 $25 = $2; //@line 478 "../../iup_gridbox.c"
 $26 = ($25|0)!=(0|0); //@line 478 "../../iup_gridbox.c"
 if (!($26)) {
  $27 = $1; //@line 479 "../../iup_gridbox.c"
  $28 = (_iupAttribGet($27,13461)|0); //@line 479 "../../iup_gridbox.c"
  $2 = $28; //@line 479 "../../iup_gridbox.c"
 }
 $29 = $2; //@line 480 "../../iup_gridbox.c"
 $30 = ($29|0)!=(0|0); //@line 480 "../../iup_gridbox.c"
 if (!($30)) {
  STACKTOP = sp;return -2; //@line 483 "../../iup_gridbox.c"
 }
 $31 = $1; //@line 481 "../../iup_gridbox.c"
 $32 = $2; //@line 481 "../../iup_gridbox.c"
 (_iGridBoxSetCGapColAttrib($31,$32)|0); //@line 481 "../../iup_gridbox.c"
 STACKTOP = sp;return -2; //@line 483 "../../iup_gridbox.c"
}
function _IupHbox($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $1 = $0;
 HEAP32[$4>>2] = $varargs; //@line 281 "../../iup_hbox.c"
 $5 = $1; //@line 282 "../../iup_hbox.c"
 $6 = (_iupObjectGetParamList($5,$4)|0); //@line 282 "../../iup_hbox.c"
 $2 = $6; //@line 282 "../../iup_hbox.c"
 $7 = $2; //@line 285 "../../iup_hbox.c"
 $8 = (_IupCreatev(13598,$7)|0); //@line 285 "../../iup_hbox.c"
 $3 = $8; //@line 285 "../../iup_hbox.c"
 $9 = $2; //@line 286 "../../iup_hbox.c"
 _free($9); //@line 286 "../../iup_hbox.c"
 $10 = $3; //@line 288 "../../iup_hbox.c"
 STACKTOP = sp;return ($10|0); //@line 288 "../../iup_hbox.c"
}
function _iupHboxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupBoxNewClassBase()|0); //@line 293 "../../iup_hbox.c"
 $0 = $1; //@line 293 "../../iup_hbox.c"
 $2 = $0; //@line 295 "../../iup_hbox.c"
 HEAP32[$2>>2] = 13598; //@line 295 "../../iup_hbox.c"
 $3 = $0; //@line 298 "../../iup_hbox.c"
 $4 = ((($3)) + 32|0); //@line 298 "../../iup_hbox.c"
 HEAP32[$4>>2] = 277; //@line 298 "../../iup_hbox.c"
 $5 = $0; //@line 299 "../../iup_hbox.c"
 $6 = ((($5)) + 76|0); //@line 299 "../../iup_hbox.c"
 HEAP32[$6>>2] = 278; //@line 299 "../../iup_hbox.c"
 $7 = $0; //@line 300 "../../iup_hbox.c"
 $8 = ((($7)) + 80|0); //@line 300 "../../iup_hbox.c"
 HEAP32[$8>>2] = 279; //@line 300 "../../iup_hbox.c"
 $9 = $0; //@line 301 "../../iup_hbox.c"
 $10 = ((($9)) + 84|0); //@line 301 "../../iup_hbox.c"
 HEAP32[$10>>2] = 280; //@line 301 "../../iup_hbox.c"
 $11 = $0; //@line 304 "../../iup_hbox.c"
 _iupClassRegisterAttribute($11,20003,71,281,0,0,521); //@line 304 "../../iup_hbox.c"
 $12 = $0; //@line 305 "../../iup_hbox.c"
 _iupClassRegisterAttribute($12,20008,73,282,0,0,521); //@line 305 "../../iup_hbox.c"
 $13 = $0; //@line 308 "../../iup_hbox.c"
 _iupClassRegisterAttribute($13,20679,283,284,(-1),20143,9); //@line 308 "../../iup_hbox.c"
 $14 = $0; //@line 310 "../../iup_hbox.c"
 STACKTOP = sp;return ($14|0); //@line 310 "../../iup_hbox.c"
}
function _iHboxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = 0; //@line 90 "../../iup_hbox.c"
 $12 = 0; //@line 91 "../../iup_hbox.c"
 $13 = 0; //@line 92 "../../iup_hbox.c"
 $14 = 0; //@line 93 "../../iup_hbox.c"
 $15 = $4; //@line 95 "../../iup_hbox.c"
 $16 = ((($15)) + 64|0); //@line 95 "../../iup_hbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 95 "../../iup_hbox.c"
 $8 = $17; //@line 95 "../../iup_hbox.c"
 while(1) {
  $18 = $8; //@line 95 "../../iup_hbox.c"
  $19 = ($18|0)!=(0|0); //@line 95 "../../iup_hbox.c"
  $20 = $4; //@line 97 "../../iup_hbox.c"
  $21 = ((($20)) + 72|0); //@line 97 "../../iup_hbox.c"
  $22 = HEAP32[$21>>2]|0; //@line 97 "../../iup_hbox.c"
  if (!($19)) {
   break;
  }
  $23 = ((($22)) + 4|0); //@line 97 "../../iup_hbox.c"
  $24 = HEAP32[$23>>2]|0; //@line 97 "../../iup_hbox.c"
  $25 = ($24|0)!=(0); //@line 97 "../../iup_hbox.c"
  if ($25) {
   $26 = $4; //@line 98 "../../iup_hbox.c"
   $27 = ((($26)) + 72|0); //@line 98 "../../iup_hbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 98 "../../iup_hbox.c"
   $29 = ((($28)) + 4|0); //@line 98 "../../iup_hbox.c"
   $30 = HEAP32[$29>>2]|0; //@line 98 "../../iup_hbox.c"
   $31 = $8; //@line 98 "../../iup_hbox.c"
   $32 = ((($31)) + 20|0); //@line 98 "../../iup_hbox.c"
   HEAP32[$32>>2] = $30; //@line 98 "../../iup_hbox.c"
  }
  $33 = $8; //@line 101 "../../iup_hbox.c"
  $34 = ((($33)) + 24|0); //@line 101 "../../iup_hbox.c"
  $35 = HEAP32[$34>>2]|0; //@line 101 "../../iup_hbox.c"
  $36 = $35 & 2; //@line 101 "../../iup_hbox.c"
  $37 = ($36|0)!=(0); //@line 101 "../../iup_hbox.c"
  if (!($37)) {
   $38 = $8; //@line 102 "../../iup_hbox.c"
   _iupBaseComputeNaturalSize($38); //@line 102 "../../iup_hbox.c"
  }
  $39 = $8; //@line 104 "../../iup_hbox.c"
  $40 = ((($39)) + 24|0); //@line 104 "../../iup_hbox.c"
  $41 = HEAP32[$40>>2]|0; //@line 104 "../../iup_hbox.c"
  $42 = $41 & 1; //@line 104 "../../iup_hbox.c"
  $43 = ($42|0)!=(0); //@line 104 "../../iup_hbox.c"
  if (!($43)) {
   $44 = $8; //@line 106 "../../iup_hbox.c"
   $45 = ((($44)) + 20|0); //@line 106 "../../iup_hbox.c"
   $46 = HEAP32[$45>>2]|0; //@line 106 "../../iup_hbox.c"
   $47 = $7; //@line 106 "../../iup_hbox.c"
   $48 = HEAP32[$47>>2]|0; //@line 106 "../../iup_hbox.c"
   $49 = $48 | $46; //@line 106 "../../iup_hbox.c"
   HEAP32[$47>>2] = $49; //@line 106 "../../iup_hbox.c"
   $50 = $13; //@line 107 "../../iup_hbox.c"
   $51 = $8; //@line 107 "../../iup_hbox.c"
   $52 = ((($51)) + 44|0); //@line 107 "../../iup_hbox.c"
   $53 = HEAP32[$52>>2]|0; //@line 107 "../../iup_hbox.c"
   $54 = ($50|0)>($53|0); //@line 107 "../../iup_hbox.c"
   if ($54) {
    $55 = $13; //@line 107 "../../iup_hbox.c"
    $59 = $55;
   } else {
    $56 = $8; //@line 107 "../../iup_hbox.c"
    $57 = ((($56)) + 44|0); //@line 107 "../../iup_hbox.c"
    $58 = HEAP32[$57>>2]|0; //@line 107 "../../iup_hbox.c"
    $59 = $58;
   }
   $13 = $59; //@line 107 "../../iup_hbox.c"
   $60 = $14; //@line 108 "../../iup_hbox.c"
   $61 = $8; //@line 108 "../../iup_hbox.c"
   $62 = ((($61)) + 48|0); //@line 108 "../../iup_hbox.c"
   $63 = HEAP32[$62>>2]|0; //@line 108 "../../iup_hbox.c"
   $64 = ($60|0)>($63|0); //@line 108 "../../iup_hbox.c"
   if ($64) {
    $65 = $14; //@line 108 "../../iup_hbox.c"
    $69 = $65;
   } else {
    $66 = $8; //@line 108 "../../iup_hbox.c"
    $67 = ((($66)) + 48|0); //@line 108 "../../iup_hbox.c"
    $68 = HEAP32[$67>>2]|0; //@line 108 "../../iup_hbox.c"
    $69 = $68;
   }
   $14 = $69; //@line 108 "../../iup_hbox.c"
   $70 = $11; //@line 109 "../../iup_hbox.c"
   $71 = (($70) + 1)|0; //@line 109 "../../iup_hbox.c"
   $11 = $71; //@line 109 "../../iup_hbox.c"
  }
  $72 = $8; //@line 95 "../../iup_hbox.c"
  $73 = ((($72)) + 68|0); //@line 95 "../../iup_hbox.c"
  $74 = HEAP32[$73>>2]|0; //@line 95 "../../iup_hbox.c"
  $8 = $74; //@line 95 "../../iup_hbox.c"
 }
 $75 = ((($22)) + 12|0); //@line 114 "../../iup_hbox.c"
 $76 = HEAP32[$75>>2]|0; //@line 114 "../../iup_hbox.c"
 $77 = ($76|0)!=(0); //@line 114 "../../iup_hbox.c"
 if ($77) {
  $78 = $4; //@line 115 "../../iup_hbox.c"
  $79 = $4; //@line 115 "../../iup_hbox.c"
  $80 = ((($79)) + 72|0); //@line 115 "../../iup_hbox.c"
  $81 = HEAP32[$80>>2]|0; //@line 115 "../../iup_hbox.c"
  $82 = ((($81)) + 12|0); //@line 115 "../../iup_hbox.c"
  $83 = HEAP32[$82>>2]|0; //@line 115 "../../iup_hbox.c"
  $84 = $13; //@line 115 "../../iup_hbox.c"
  $85 = $14; //@line 115 "../../iup_hbox.c"
  _iupNormalizeSizeBoxChild($78,$83,$84,$85); //@line 115 "../../iup_hbox.c"
 }
 $86 = $4; //@line 118 "../../iup_hbox.c"
 $87 = ((($86)) + 64|0); //@line 118 "../../iup_hbox.c"
 $88 = HEAP32[$87>>2]|0; //@line 118 "../../iup_hbox.c"
 $8 = $88; //@line 118 "../../iup_hbox.c"
 while(1) {
  $89 = $8; //@line 118 "../../iup_hbox.c"
  $90 = ($89|0)!=(0|0); //@line 118 "../../iup_hbox.c"
  if (!($90)) {
   break;
  }
  $91 = $8; //@line 120 "../../iup_hbox.c"
  $92 = ((($91)) + 24|0); //@line 120 "../../iup_hbox.c"
  $93 = HEAP32[$92>>2]|0; //@line 120 "../../iup_hbox.c"
  $94 = $93 & 1; //@line 120 "../../iup_hbox.c"
  $95 = ($94|0)!=(0); //@line 120 "../../iup_hbox.c"
  if (!($95)) {
   $96 = $8; //@line 121 "../../iup_hbox.c"
   $97 = ((($96)) + 44|0); //@line 121 "../../iup_hbox.c"
   $98 = HEAP32[$97>>2]|0; //@line 121 "../../iup_hbox.c"
   $99 = $12; //@line 121 "../../iup_hbox.c"
   $100 = (($99) + ($98))|0; //@line 121 "../../iup_hbox.c"
   $12 = $100; //@line 121 "../../iup_hbox.c"
  }
  $101 = $8; //@line 118 "../../iup_hbox.c"
  $102 = ((($101)) + 68|0); //@line 118 "../../iup_hbox.c"
  $103 = HEAP32[$102>>2]|0; //@line 118 "../../iup_hbox.c"
  $8 = $103; //@line 118 "../../iup_hbox.c"
 }
 $104 = $4; //@line 125 "../../iup_hbox.c"
 $105 = ((($104)) + 72|0); //@line 125 "../../iup_hbox.c"
 $106 = HEAP32[$105>>2]|0; //@line 125 "../../iup_hbox.c"
 $107 = ((($106)) + 8|0); //@line 125 "../../iup_hbox.c"
 $108 = HEAP32[$107>>2]|0; //@line 125 "../../iup_hbox.c"
 $109 = ($108|0)!=(0); //@line 125 "../../iup_hbox.c"
 if ($109) {
  $110 = $13; //@line 126 "../../iup_hbox.c"
  $111 = $11; //@line 126 "../../iup_hbox.c"
  $112 = Math_imul($110, $111)|0; //@line 126 "../../iup_hbox.c"
  $12 = $112; //@line 126 "../../iup_hbox.c"
 }
 $113 = $12; //@line 129 "../../iup_hbox.c"
 $114 = $11; //@line 129 "../../iup_hbox.c"
 $115 = (($114) - 1)|0; //@line 129 "../../iup_hbox.c"
 $116 = $4; //@line 129 "../../iup_hbox.c"
 $117 = ((($116)) + 72|0); //@line 129 "../../iup_hbox.c"
 $118 = HEAP32[$117>>2]|0; //@line 129 "../../iup_hbox.c"
 $119 = ((($118)) + 24|0); //@line 129 "../../iup_hbox.c"
 $120 = HEAP32[$119>>2]|0; //@line 129 "../../iup_hbox.c"
 $121 = Math_imul($115, $120)|0; //@line 129 "../../iup_hbox.c"
 $122 = (($113) + ($121))|0; //@line 129 "../../iup_hbox.c"
 $123 = $4; //@line 129 "../../iup_hbox.c"
 $124 = ((($123)) + 72|0); //@line 129 "../../iup_hbox.c"
 $125 = HEAP32[$124>>2]|0; //@line 129 "../../iup_hbox.c"
 $126 = ((($125)) + 16|0); //@line 129 "../../iup_hbox.c"
 $127 = HEAP32[$126>>2]|0; //@line 129 "../../iup_hbox.c"
 $128 = $127<<1; //@line 129 "../../iup_hbox.c"
 $129 = (($122) + ($128))|0; //@line 129 "../../iup_hbox.c"
 $9 = $129; //@line 129 "../../iup_hbox.c"
 $130 = $14; //@line 130 "../../iup_hbox.c"
 $131 = $4; //@line 130 "../../iup_hbox.c"
 $132 = ((($131)) + 72|0); //@line 130 "../../iup_hbox.c"
 $133 = HEAP32[$132>>2]|0; //@line 130 "../../iup_hbox.c"
 $134 = ((($133)) + 20|0); //@line 130 "../../iup_hbox.c"
 $135 = HEAP32[$134>>2]|0; //@line 130 "../../iup_hbox.c"
 $136 = $135<<1; //@line 130 "../../iup_hbox.c"
 $137 = (($130) + ($136))|0; //@line 130 "../../iup_hbox.c"
 $10 = $137; //@line 130 "../../iup_hbox.c"
 $138 = $9; //@line 133 "../../iup_hbox.c"
 $139 = $4; //@line 133 "../../iup_hbox.c"
 $140 = ((($139)) + 72|0); //@line 133 "../../iup_hbox.c"
 $141 = HEAP32[$140>>2]|0; //@line 133 "../../iup_hbox.c"
 $142 = ((($141)) + 28|0); //@line 133 "../../iup_hbox.c"
 HEAP32[$142>>2] = $138; //@line 133 "../../iup_hbox.c"
 $143 = $9; //@line 135 "../../iup_hbox.c"
 $144 = $5; //@line 135 "../../iup_hbox.c"
 HEAP32[$144>>2] = $143; //@line 135 "../../iup_hbox.c"
 $145 = $10; //@line 136 "../../iup_hbox.c"
 $146 = $6; //@line 136 "../../iup_hbox.c"
 HEAP32[$146>>2] = $145; //@line 136 "../../iup_hbox.c"
 STACKTOP = sp;return; //@line 137 "../../iup_hbox.c"
}
function _iHboxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = sp;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 184 "../../iup_hbox.c"
 $6 = 0; //@line 184 "../../iup_hbox.c"
 $11 = $2; //@line 186 "../../iup_hbox.c"
 $12 = ((($11)) + 72|0); //@line 186 "../../iup_hbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 186 "../../iup_hbox.c"
 $14 = ((($13)) + 8|0); //@line 186 "../../iup_hbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 186 "../../iup_hbox.c"
 $16 = ($15|0)!=(0); //@line 186 "../../iup_hbox.c"
 $17 = $2; //@line 187 "../../iup_hbox.c"
 do {
  if ($16) {
   $18 = (_iHboxCalcHomogeneousWidth($17)|0); //@line 187 "../../iup_hbox.c"
   $19 = $2; //@line 187 "../../iup_hbox.c"
   $20 = ((($19)) + 72|0); //@line 187 "../../iup_hbox.c"
   $21 = HEAP32[$20>>2]|0; //@line 187 "../../iup_hbox.c"
   $22 = ((($21)) + 32|0); //@line 187 "../../iup_hbox.c"
   HEAP32[$22>>2] = $18; //@line 187 "../../iup_hbox.c"
  } else {
   $23 = ((($17)) + 72|0); //@line 190 "../../iup_hbox.c"
   $24 = HEAP32[$23>>2]|0; //@line 190 "../../iup_hbox.c"
   $25 = ((($24)) + 32|0); //@line 190 "../../iup_hbox.c"
   HEAP32[$25>>2] = 0; //@line 190 "../../iup_hbox.c"
   $26 = $2; //@line 194 "../../iup_hbox.c"
   $27 = ((($26)) + 20|0); //@line 194 "../../iup_hbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 194 "../../iup_hbox.c"
   $29 = $28 & 8; //@line 194 "../../iup_hbox.c"
   $30 = ($29|0)!=(0); //@line 194 "../../iup_hbox.c"
   $31 = $2; //@line 195 "../../iup_hbox.c"
   if ($30) {
    $32 = (_iHboxCalcEmptyWidth($31,8)|0); //@line 195 "../../iup_hbox.c"
    $6 = $32; //@line 195 "../../iup_hbox.c"
    break;
   }
   $33 = ((($31)) + 20|0); //@line 197 "../../iup_hbox.c"
   $34 = HEAP32[$33>>2]|0; //@line 197 "../../iup_hbox.c"
   $35 = $34 & 4; //@line 197 "../../iup_hbox.c"
   $36 = ($35|0)!=(0); //@line 197 "../../iup_hbox.c"
   if ($36) {
    $37 = $2; //@line 198 "../../iup_hbox.c"
    $38 = (_iHboxCalcEmptyWidth($37,4)|0); //@line 198 "../../iup_hbox.c"
    $5 = $38; //@line 198 "../../iup_hbox.c"
   }
  }
 } while(0);
 $39 = $2; //@line 201 "../../iup_hbox.c"
 $40 = ((($39)) + 56|0); //@line 201 "../../iup_hbox.c"
 $41 = HEAP32[$40>>2]|0; //@line 201 "../../iup_hbox.c"
 $42 = $2; //@line 201 "../../iup_hbox.c"
 $43 = ((($42)) + 72|0); //@line 201 "../../iup_hbox.c"
 $44 = HEAP32[$43>>2]|0; //@line 201 "../../iup_hbox.c"
 $45 = ((($44)) + 20|0); //@line 201 "../../iup_hbox.c"
 $46 = HEAP32[$45>>2]|0; //@line 201 "../../iup_hbox.c"
 $47 = $46<<1; //@line 201 "../../iup_hbox.c"
 $48 = (($41) - ($47))|0; //@line 201 "../../iup_hbox.c"
 $7 = $48; //@line 201 "../../iup_hbox.c"
 $49 = $7; //@line 202 "../../iup_hbox.c"
 $50 = ($49|0)<(0); //@line 202 "../../iup_hbox.c"
 $$ = $50 ? 0 : $48; //@line 202 "../../iup_hbox.c"
 $7 = $$; //@line 202 "../../iup_hbox.c"
 $51 = $2; //@line 204 "../../iup_hbox.c"
 $52 = ((($51)) + 64|0); //@line 204 "../../iup_hbox.c"
 $53 = HEAP32[$52>>2]|0; //@line 204 "../../iup_hbox.c"
 $4 = $53; //@line 204 "../../iup_hbox.c"
 while(1) {
  $54 = $4; //@line 204 "../../iup_hbox.c"
  $55 = ($54|0)!=(0|0); //@line 204 "../../iup_hbox.c"
  if (!($55)) {
   break;
  }
  $56 = $4; //@line 206 "../../iup_hbox.c"
  $57 = ((($56)) + 24|0); //@line 206 "../../iup_hbox.c"
  $58 = HEAP32[$57>>2]|0; //@line 206 "../../iup_hbox.c"
  $59 = $58 & 1; //@line 206 "../../iup_hbox.c"
  $60 = ($59|0)!=(0); //@line 206 "../../iup_hbox.c"
  do {
   if ($60) {
    $109 = $4; //@line 223 "../../iup_hbox.c"
    $110 = ((($109)) + 24|0); //@line 223 "../../iup_hbox.c"
    $111 = HEAP32[$110>>2]|0; //@line 223 "../../iup_hbox.c"
    $112 = $111 & 2; //@line 223 "../../iup_hbox.c"
    $113 = ($112|0)!=(0); //@line 223 "../../iup_hbox.c"
    if (!($113)) {
     $114 = $4; //@line 226 "../../iup_hbox.c"
     $115 = $4; //@line 226 "../../iup_hbox.c"
     $116 = ((($115)) + 44|0); //@line 226 "../../iup_hbox.c"
     $117 = HEAP32[$116>>2]|0; //@line 226 "../../iup_hbox.c"
     $118 = $4; //@line 226 "../../iup_hbox.c"
     $119 = ((($118)) + 48|0); //@line 226 "../../iup_hbox.c"
     $120 = HEAP32[$119>>2]|0; //@line 226 "../../iup_hbox.c"
     $121 = $3; //@line 226 "../../iup_hbox.c"
     _iupBaseSetCurrentSize($114,$117,$120,$121); //@line 226 "../../iup_hbox.c"
    }
   } else {
    $61 = $2; //@line 208 "../../iup_hbox.c"
    $62 = ((($61)) + 72|0); //@line 208 "../../iup_hbox.c"
    $63 = HEAP32[$62>>2]|0; //@line 208 "../../iup_hbox.c"
    $64 = ((($63)) + 32|0); //@line 208 "../../iup_hbox.c"
    $65 = HEAP32[$64>>2]|0; //@line 208 "../../iup_hbox.c"
    $66 = ($65|0)!=(0); //@line 208 "../../iup_hbox.c"
    $67 = $4; //@line 209 "../../iup_hbox.c"
    if ($66) {
     $68 = $2; //@line 209 "../../iup_hbox.c"
     $69 = ((($68)) + 72|0); //@line 209 "../../iup_hbox.c"
     $70 = HEAP32[$69>>2]|0; //@line 209 "../../iup_hbox.c"
     $71 = ((($70)) + 32|0); //@line 209 "../../iup_hbox.c"
     $72 = HEAP32[$71>>2]|0; //@line 209 "../../iup_hbox.c"
     $73 = $7; //@line 209 "../../iup_hbox.c"
     $74 = $3; //@line 209 "../../iup_hbox.c"
     _iupBaseSetCurrentSize($67,$72,$73,$74); //@line 209 "../../iup_hbox.c"
     break;
    }
    $75 = ((($67)) + 20|0); //@line 212 "../../iup_hbox.c"
    $76 = HEAP32[$75>>2]|0; //@line 212 "../../iup_hbox.c"
    $77 = $76 & 8; //@line 212 "../../iup_hbox.c"
    $78 = ($77|0)!=(0); //@line 212 "../../iup_hbox.c"
    if ($78) {
     $79 = $6; //@line 212 "../../iup_hbox.c"
     $87 = $79;
    } else {
     $80 = $4; //@line 212 "../../iup_hbox.c"
     $81 = ((($80)) + 20|0); //@line 212 "../../iup_hbox.c"
     $82 = HEAP32[$81>>2]|0; //@line 212 "../../iup_hbox.c"
     $83 = $82 & 4; //@line 212 "../../iup_hbox.c"
     $84 = ($83|0)!=(0); //@line 212 "../../iup_hbox.c"
     $85 = $5; //@line 212 "../../iup_hbox.c"
     $86 = $84 ? $85 : 0; //@line 212 "../../iup_hbox.c"
     $87 = $86;
    }
    $8 = $87; //@line 212 "../../iup_hbox.c"
    $88 = $4; //@line 213 "../../iup_hbox.c"
    $89 = (_iupAttribGet($88,20019)|0); //@line 213 "../../iup_hbox.c"
    $9 = $89; //@line 213 "../../iup_hbox.c"
    $90 = $9; //@line 214 "../../iup_hbox.c"
    $91 = ($90|0)!=(0|0); //@line 214 "../../iup_hbox.c"
    if ($91) {
     $92 = $9; //@line 217 "../../iup_hbox.c"
     $93 = (_iupStrToFloat($92,$10)|0); //@line 217 "../../iup_hbox.c"
     $94 = ($93|0)!=(0); //@line 217 "../../iup_hbox.c"
     if ($94) {
      $95 = $8; //@line 218 "../../iup_hbox.c"
      $96 = (+($95|0)); //@line 218 "../../iup_hbox.c"
      $97 = +HEAPF32[$10>>2]; //@line 218 "../../iup_hbox.c"
      $98 = $96 * $97; //@line 218 "../../iup_hbox.c"
      $99 = $98; //@line 218 "../../iup_hbox.c"
      $100 = (_iupRound($99)|0); //@line 218 "../../iup_hbox.c"
      $8 = $100; //@line 218 "../../iup_hbox.c"
     }
    }
    $101 = $4; //@line 220 "../../iup_hbox.c"
    $102 = $4; //@line 220 "../../iup_hbox.c"
    $103 = ((($102)) + 44|0); //@line 220 "../../iup_hbox.c"
    $104 = HEAP32[$103>>2]|0; //@line 220 "../../iup_hbox.c"
    $105 = $8; //@line 220 "../../iup_hbox.c"
    $106 = (($104) + ($105))|0; //@line 220 "../../iup_hbox.c"
    $107 = $7; //@line 220 "../../iup_hbox.c"
    $108 = $3; //@line 220 "../../iup_hbox.c"
    _iupBaseSetCurrentSize($101,$106,$107,$108); //@line 220 "../../iup_hbox.c"
   }
  } while(0);
  $122 = $4; //@line 204 "../../iup_hbox.c"
  $123 = ((($122)) + 68|0); //@line 204 "../../iup_hbox.c"
  $124 = HEAP32[$123>>2]|0; //@line 204 "../../iup_hbox.c"
  $4 = $124; //@line 204 "../../iup_hbox.c"
 }
 STACKTOP = sp;return; //@line 229 "../../iup_hbox.c"
}
function _iHboxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 236 "../../iup_hbox.c"
 $10 = ((($9)) + 72|0); //@line 236 "../../iup_hbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 236 "../../iup_hbox.c"
 $12 = ((($11)) + 16|0); //@line 236 "../../iup_hbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 236 "../../iup_hbox.c"
 $14 = $4; //@line 236 "../../iup_hbox.c"
 $15 = (($14) + ($13))|0; //@line 236 "../../iup_hbox.c"
 $4 = $15; //@line 236 "../../iup_hbox.c"
 $16 = $3; //@line 237 "../../iup_hbox.c"
 $17 = ((($16)) + 72|0); //@line 237 "../../iup_hbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 237 "../../iup_hbox.c"
 $19 = ((($18)) + 20|0); //@line 237 "../../iup_hbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 237 "../../iup_hbox.c"
 $21 = $5; //@line 237 "../../iup_hbox.c"
 $22 = (($21) + ($20))|0; //@line 237 "../../iup_hbox.c"
 $5 = $22; //@line 237 "../../iup_hbox.c"
 $23 = $3; //@line 239 "../../iup_hbox.c"
 $24 = ((($23)) + 56|0); //@line 239 "../../iup_hbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 239 "../../iup_hbox.c"
 $26 = $3; //@line 239 "../../iup_hbox.c"
 $27 = ((($26)) + 72|0); //@line 239 "../../iup_hbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 239 "../../iup_hbox.c"
 $29 = ((($28)) + 20|0); //@line 239 "../../iup_hbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 239 "../../iup_hbox.c"
 $31 = $30<<1; //@line 239 "../../iup_hbox.c"
 $32 = (($25) - ($31))|0; //@line 239 "../../iup_hbox.c"
 $7 = $32; //@line 239 "../../iup_hbox.c"
 $33 = $7; //@line 240 "../../iup_hbox.c"
 $34 = ($33|0)<(0); //@line 240 "../../iup_hbox.c"
 $$ = $34 ? 0 : $32; //@line 240 "../../iup_hbox.c"
 $7 = $$; //@line 240 "../../iup_hbox.c"
 $35 = $3; //@line 242 "../../iup_hbox.c"
 $36 = ((($35)) + 64|0); //@line 242 "../../iup_hbox.c"
 $37 = HEAP32[$36>>2]|0; //@line 242 "../../iup_hbox.c"
 $8 = $37; //@line 242 "../../iup_hbox.c"
 while(1) {
  $38 = $8; //@line 242 "../../iup_hbox.c"
  $39 = ($38|0)!=(0|0); //@line 242 "../../iup_hbox.c"
  if (!($39)) {
   break;
  }
  $40 = $8; //@line 244 "../../iup_hbox.c"
  $41 = ((($40)) + 24|0); //@line 244 "../../iup_hbox.c"
  $42 = HEAP32[$41>>2]|0; //@line 244 "../../iup_hbox.c"
  $43 = $42 & 1; //@line 244 "../../iup_hbox.c"
  $44 = ($43|0)!=(0); //@line 244 "../../iup_hbox.c"
  do {
   if (!($44)) {
    $45 = $3; //@line 246 "../../iup_hbox.c"
    $46 = ((($45)) + 72|0); //@line 246 "../../iup_hbox.c"
    $47 = HEAP32[$46>>2]|0; //@line 246 "../../iup_hbox.c"
    $48 = HEAP32[$47>>2]|0; //@line 246 "../../iup_hbox.c"
    $49 = ($48|0)==(1); //@line 246 "../../iup_hbox.c"
    do {
     if ($49) {
      $50 = $7; //@line 247 "../../iup_hbox.c"
      $51 = $8; //@line 247 "../../iup_hbox.c"
      $52 = ((($51)) + 56|0); //@line 247 "../../iup_hbox.c"
      $53 = HEAP32[$52>>2]|0; //@line 247 "../../iup_hbox.c"
      $54 = (($50) - ($53))|0; //@line 247 "../../iup_hbox.c"
      $55 = (($54|0) / 2)&-1; //@line 247 "../../iup_hbox.c"
      $6 = $55; //@line 247 "../../iup_hbox.c"
     } else {
      $56 = $3; //@line 248 "../../iup_hbox.c"
      $57 = ((($56)) + 72|0); //@line 248 "../../iup_hbox.c"
      $58 = HEAP32[$57>>2]|0; //@line 248 "../../iup_hbox.c"
      $59 = HEAP32[$58>>2]|0; //@line 248 "../../iup_hbox.c"
      $60 = ($59|0)==(2); //@line 248 "../../iup_hbox.c"
      if ($60) {
       $61 = $7; //@line 249 "../../iup_hbox.c"
       $62 = $8; //@line 249 "../../iup_hbox.c"
       $63 = ((($62)) + 56|0); //@line 249 "../../iup_hbox.c"
       $64 = HEAP32[$63>>2]|0; //@line 249 "../../iup_hbox.c"
       $65 = (($61) - ($64))|0; //@line 249 "../../iup_hbox.c"
       $6 = $65; //@line 249 "../../iup_hbox.c"
       break;
      } else {
       $6 = 0; //@line 251 "../../iup_hbox.c"
       break;
      }
     }
    } while(0);
    $66 = $6; //@line 252 "../../iup_hbox.c"
    $67 = ($66|0)<(0); //@line 252 "../../iup_hbox.c"
    if ($67) {
     $6 = 0; //@line 252 "../../iup_hbox.c"
    }
    $68 = $8; //@line 255 "../../iup_hbox.c"
    $69 = $4; //@line 255 "../../iup_hbox.c"
    $70 = $5; //@line 255 "../../iup_hbox.c"
    $71 = $6; //@line 255 "../../iup_hbox.c"
    $72 = (($70) + ($71))|0; //@line 255 "../../iup_hbox.c"
    _iupBaseSetPosition($68,$69,$72); //@line 255 "../../iup_hbox.c"
    $73 = $3; //@line 258 "../../iup_hbox.c"
    $74 = ((($73)) + 72|0); //@line 258 "../../iup_hbox.c"
    $75 = HEAP32[$74>>2]|0; //@line 258 "../../iup_hbox.c"
    $76 = ((($75)) + 32|0); //@line 258 "../../iup_hbox.c"
    $77 = HEAP32[$76>>2]|0; //@line 258 "../../iup_hbox.c"
    $78 = ($77|0)!=(0); //@line 258 "../../iup_hbox.c"
    if ($78) {
     $79 = $3; //@line 259 "../../iup_hbox.c"
     $80 = ((($79)) + 72|0); //@line 259 "../../iup_hbox.c"
     $81 = HEAP32[$80>>2]|0; //@line 259 "../../iup_hbox.c"
     $82 = ((($81)) + 32|0); //@line 259 "../../iup_hbox.c"
     $83 = HEAP32[$82>>2]|0; //@line 259 "../../iup_hbox.c"
     $84 = $3; //@line 259 "../../iup_hbox.c"
     $85 = ((($84)) + 72|0); //@line 259 "../../iup_hbox.c"
     $86 = HEAP32[$85>>2]|0; //@line 259 "../../iup_hbox.c"
     $87 = ((($86)) + 24|0); //@line 259 "../../iup_hbox.c"
     $88 = HEAP32[$87>>2]|0; //@line 259 "../../iup_hbox.c"
     $89 = (($83) + ($88))|0; //@line 259 "../../iup_hbox.c"
     $90 = $4; //@line 259 "../../iup_hbox.c"
     $91 = (($90) + ($89))|0; //@line 259 "../../iup_hbox.c"
     $4 = $91; //@line 259 "../../iup_hbox.c"
     break;
    } else {
     $92 = $8; //@line 261 "../../iup_hbox.c"
     $93 = ((($92)) + 52|0); //@line 261 "../../iup_hbox.c"
     $94 = HEAP32[$93>>2]|0; //@line 261 "../../iup_hbox.c"
     $95 = $3; //@line 261 "../../iup_hbox.c"
     $96 = ((($95)) + 72|0); //@line 261 "../../iup_hbox.c"
     $97 = HEAP32[$96>>2]|0; //@line 261 "../../iup_hbox.c"
     $98 = ((($97)) + 24|0); //@line 261 "../../iup_hbox.c"
     $99 = HEAP32[$98>>2]|0; //@line 261 "../../iup_hbox.c"
     $100 = (($94) + ($99))|0; //@line 261 "../../iup_hbox.c"
     $101 = $4; //@line 261 "../../iup_hbox.c"
     $102 = (($101) + ($100))|0; //@line 261 "../../iup_hbox.c"
     $4 = $102; //@line 261 "../../iup_hbox.c"
     break;
    }
   }
  } while(0);
  $103 = $8; //@line 242 "../../iup_hbox.c"
  $104 = ((($103)) + 68|0); //@line 242 "../../iup_hbox.c"
  $105 = HEAP32[$104>>2]|0; //@line 242 "../../iup_hbox.c"
  $8 = $105; //@line 242 "../../iup_hbox.c"
 }
 STACKTOP = sp;return; //@line 264 "../../iup_hbox.c"
}
function _iHboxSetSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $3; //@line 47 "../../iup_hbox.c"
 $9 = ($8|0)!=(0|0); //@line 47 "../../iup_hbox.c"
 if (!($9)) {
  $10 = $2; //@line 49 "../../iup_hbox.c"
  $11 = ((($10)) + 36|0); //@line 49 "../../iup_hbox.c"
  HEAP32[$11>>2] = 0; //@line 49 "../../iup_hbox.c"
  $12 = $2; //@line 50 "../../iup_hbox.c"
  $13 = ((($12)) + 40|0); //@line 50 "../../iup_hbox.c"
  HEAP32[$13>>2] = 0; //@line 50 "../../iup_hbox.c"
  STACKTOP = sp;return 1; //@line 64 "../../iup_hbox.c"
 }
 HEAP32[$4>>2] = 0; //@line 54 "../../iup_hbox.c"
 HEAP32[$5>>2] = 0; //@line 54 "../../iup_hbox.c"
 $14 = $3; //@line 55 "../../iup_hbox.c"
 (_iupStrToIntInt($14,$4,$5,120)|0); //@line 55 "../../iup_hbox.c"
 $15 = HEAP32[$4>>2]|0; //@line 56 "../../iup_hbox.c"
 $16 = ($15|0)>(0); //@line 56 "../../iup_hbox.c"
 if (!($16)) {
  STACKTOP = sp;return 1; //@line 64 "../../iup_hbox.c"
 }
 $17 = $2; //@line 59 "../../iup_hbox.c"
 _iupdrvFontGetCharSize($17,$6,$7); //@line 59 "../../iup_hbox.c"
 $18 = $2; //@line 60 "../../iup_hbox.c"
 $19 = ((($18)) + 40|0); //@line 60 "../../iup_hbox.c"
 HEAP32[$19>>2] = 0; //@line 60 "../../iup_hbox.c"
 $20 = HEAP32[$4>>2]|0; //@line 61 "../../iup_hbox.c"
 $21 = HEAP32[$6>>2]|0; //@line 61 "../../iup_hbox.c"
 $22 = Math_imul($20, $21)|0; //@line 61 "../../iup_hbox.c"
 $23 = (+($22|0)); //@line 61 "../../iup_hbox.c"
 $24 = $23 / 4.0; //@line 61 "../../iup_hbox.c"
 $25 = $24 + 0.5; //@line 61 "../../iup_hbox.c"
 $26 = (~~(($25))); //@line 61 "../../iup_hbox.c"
 $27 = $2; //@line 61 "../../iup_hbox.c"
 $28 = ((($27)) + 36|0); //@line 61 "../../iup_hbox.c"
 HEAP32[$28>>2] = $26; //@line 61 "../../iup_hbox.c"
 STACKTOP = sp;return 1; //@line 64 "../../iup_hbox.c"
}
function _iHboxSetRasterSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 26 "../../iup_hbox.c"
 $7 = ($6|0)!=(0|0); //@line 26 "../../iup_hbox.c"
 if ($7) {
  HEAP32[$4>>2] = 0; //@line 33 "../../iup_hbox.c"
  HEAP32[$5>>2] = 0; //@line 33 "../../iup_hbox.c"
  $12 = $3; //@line 34 "../../iup_hbox.c"
  (_iupStrToIntInt($12,$4,$5,120)|0); //@line 34 "../../iup_hbox.c"
  $13 = HEAP32[$4>>2]|0; //@line 35 "../../iup_hbox.c"
  $14 = ($13|0)>(0); //@line 35 "../../iup_hbox.c"
  if ($14) {
   $15 = $2; //@line 37 "../../iup_hbox.c"
   $16 = ((($15)) + 40|0); //@line 37 "../../iup_hbox.c"
   HEAP32[$16>>2] = 0; //@line 37 "../../iup_hbox.c"
   $17 = HEAP32[$4>>2]|0; //@line 38 "../../iup_hbox.c"
   $18 = $2; //@line 38 "../../iup_hbox.c"
   $19 = ((($18)) + 36|0); //@line 38 "../../iup_hbox.c"
   HEAP32[$19>>2] = $17; //@line 38 "../../iup_hbox.c"
  }
 } else {
  $8 = $2; //@line 28 "../../iup_hbox.c"
  $9 = ((($8)) + 36|0); //@line 28 "../../iup_hbox.c"
  HEAP32[$9>>2] = 0; //@line 28 "../../iup_hbox.c"
  $10 = $2; //@line 29 "../../iup_hbox.c"
  $11 = ((($10)) + 40|0); //@line 29 "../../iup_hbox.c"
  HEAP32[$11>>2] = 0; //@line 29 "../../iup_hbox.c"
 }
 $20 = $2; //@line 41 "../../iup_hbox.c"
 _iupAttribSet($20,20003,0); //@line 41 "../../iup_hbox.c"
 STACKTOP = sp;return 0; //@line 42 "../../iup_hbox.c"
}
function _iHboxGetAlignmentAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 81 "../../iup_hbox.c"
 $3 = ((($2)) + 72|0); //@line 81 "../../iup_hbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 81 "../../iup_hbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 81 "../../iup_hbox.c"
 $6 = (196 + ($5<<2)|0); //@line 81 "../../iup_hbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 81 "../../iup_hbox.c"
 STACKTOP = sp;return ($7|0); //@line 81 "../../iup_hbox.c"
}
function _iHboxSetAlignmentAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 69 "../../iup_hbox.c"
 $5 = (_iupStrEqualNoCase($4,20148)|0); //@line 69 "../../iup_hbox.c"
 $6 = ($5|0)!=(0); //@line 69 "../../iup_hbox.c"
 if ($6) {
  $7 = $2; //@line 70 "../../iup_hbox.c"
  $8 = ((($7)) + 72|0); //@line 70 "../../iup_hbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 70 "../../iup_hbox.c"
  HEAP32[$9>>2] = 2; //@line 70 "../../iup_hbox.c"
  STACKTOP = sp;return 0; //@line 75 "../../iup_hbox.c"
 }
 $10 = $3; //@line 71 "../../iup_hbox.c"
 $11 = (_iupStrEqualNoCase($10,20689)|0); //@line 71 "../../iup_hbox.c"
 $12 = ($11|0)!=(0); //@line 71 "../../iup_hbox.c"
 if ($12) {
  $13 = $2; //@line 72 "../../iup_hbox.c"
  $14 = ((($13)) + 72|0); //@line 72 "../../iup_hbox.c"
  $15 = HEAP32[$14>>2]|0; //@line 72 "../../iup_hbox.c"
  HEAP32[$15>>2] = 1; //@line 72 "../../iup_hbox.c"
  STACKTOP = sp;return 0; //@line 75 "../../iup_hbox.c"
 }
 $16 = $3; //@line 73 "../../iup_hbox.c"
 $17 = (_iupStrEqualNoCase($16,20143)|0); //@line 73 "../../iup_hbox.c"
 $18 = ($17|0)!=(0); //@line 73 "../../iup_hbox.c"
 if (!($18)) {
  STACKTOP = sp;return 0; //@line 75 "../../iup_hbox.c"
 }
 $19 = $2; //@line 74 "../../iup_hbox.c"
 $20 = ((($19)) + 72|0); //@line 74 "../../iup_hbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 74 "../../iup_hbox.c"
 HEAP32[$21>>2] = 0; //@line 74 "../../iup_hbox.c"
 STACKTOP = sp;return 0; //@line 75 "../../iup_hbox.c"
}
function _iHboxCalcHomogeneousWidth($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $5 = 0; //@line 144 "../../iup_hbox.c"
 $6 = $2; //@line 145 "../../iup_hbox.c"
 $7 = ((($6)) + 64|0); //@line 145 "../../iup_hbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 145 "../../iup_hbox.c"
 $3 = $8; //@line 145 "../../iup_hbox.c"
 while(1) {
  $9 = $3; //@line 145 "../../iup_hbox.c"
  $10 = ($9|0)!=(0|0); //@line 145 "../../iup_hbox.c"
  if (!($10)) {
   break;
  }
  $11 = $3; //@line 147 "../../iup_hbox.c"
  $12 = ((($11)) + 24|0); //@line 147 "../../iup_hbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 147 "../../iup_hbox.c"
  $14 = $13 & 1; //@line 147 "../../iup_hbox.c"
  $15 = ($14|0)!=(0); //@line 147 "../../iup_hbox.c"
  if (!($15)) {
   $16 = $5; //@line 148 "../../iup_hbox.c"
   $17 = (($16) + 1)|0; //@line 148 "../../iup_hbox.c"
   $5 = $17; //@line 148 "../../iup_hbox.c"
  }
  $18 = $3; //@line 145 "../../iup_hbox.c"
  $19 = ((($18)) + 68|0); //@line 145 "../../iup_hbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 145 "../../iup_hbox.c"
  $3 = $20; //@line 145 "../../iup_hbox.c"
 }
 $21 = $5; //@line 150 "../../iup_hbox.c"
 $22 = ($21|0)==(0); //@line 150 "../../iup_hbox.c"
 if ($22) {
  $1 = 0; //@line 151 "../../iup_hbox.c"
  $47 = $1; //@line 157 "../../iup_hbox.c"
  STACKTOP = sp;return ($47|0); //@line 157 "../../iup_hbox.c"
 } else {
  $23 = $2; //@line 154 "../../iup_hbox.c"
  $24 = ((($23)) + 52|0); //@line 154 "../../iup_hbox.c"
  $25 = HEAP32[$24>>2]|0; //@line 154 "../../iup_hbox.c"
  $26 = $5; //@line 154 "../../iup_hbox.c"
  $27 = (($26) - 1)|0; //@line 154 "../../iup_hbox.c"
  $28 = $2; //@line 154 "../../iup_hbox.c"
  $29 = ((($28)) + 72|0); //@line 154 "../../iup_hbox.c"
  $30 = HEAP32[$29>>2]|0; //@line 154 "../../iup_hbox.c"
  $31 = ((($30)) + 24|0); //@line 154 "../../iup_hbox.c"
  $32 = HEAP32[$31>>2]|0; //@line 154 "../../iup_hbox.c"
  $33 = Math_imul($27, $32)|0; //@line 154 "../../iup_hbox.c"
  $34 = (($25) - ($33))|0; //@line 154 "../../iup_hbox.c"
  $35 = $2; //@line 154 "../../iup_hbox.c"
  $36 = ((($35)) + 72|0); //@line 154 "../../iup_hbox.c"
  $37 = HEAP32[$36>>2]|0; //@line 154 "../../iup_hbox.c"
  $38 = ((($37)) + 16|0); //@line 154 "../../iup_hbox.c"
  $39 = HEAP32[$38>>2]|0; //@line 154 "../../iup_hbox.c"
  $40 = $39<<1; //@line 154 "../../iup_hbox.c"
  $41 = (($34) - ($40))|0; //@line 154 "../../iup_hbox.c"
  $42 = $5; //@line 154 "../../iup_hbox.c"
  $43 = (($41|0) / ($42|0))&-1; //@line 154 "../../iup_hbox.c"
  $4 = $43; //@line 154 "../../iup_hbox.c"
  $44 = $4; //@line 155 "../../iup_hbox.c"
  $45 = ($44|0)<(0); //@line 155 "../../iup_hbox.c"
  $$ = $45 ? 0 : $43; //@line 155 "../../iup_hbox.c"
  $4 = $$; //@line 155 "../../iup_hbox.c"
  $46 = $4; //@line 156 "../../iup_hbox.c"
  $1 = $46; //@line 156 "../../iup_hbox.c"
  $47 = $1; //@line 157 "../../iup_hbox.c"
  STACKTOP = sp;return ($47|0); //@line 157 "../../iup_hbox.c"
 }
 return (0)|0;
}
function _iHboxCalcEmptyWidth($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = 0; //@line 165 "../../iup_hbox.c"
 $8 = $3; //@line 166 "../../iup_hbox.c"
 $9 = ((($8)) + 64|0); //@line 166 "../../iup_hbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 166 "../../iup_hbox.c"
 $5 = $10; //@line 166 "../../iup_hbox.c"
 while(1) {
  $11 = $5; //@line 166 "../../iup_hbox.c"
  $12 = ($11|0)!=(0|0); //@line 166 "../../iup_hbox.c"
  if (!($12)) {
   break;
  }
  $13 = $5; //@line 168 "../../iup_hbox.c"
  $14 = ((($13)) + 24|0); //@line 168 "../../iup_hbox.c"
  $15 = HEAP32[$14>>2]|0; //@line 168 "../../iup_hbox.c"
  $16 = $15 & 1; //@line 168 "../../iup_hbox.c"
  $17 = ($16|0)!=(0); //@line 168 "../../iup_hbox.c"
  if (!($17)) {
   $18 = $5; //@line 168 "../../iup_hbox.c"
   $19 = ((($18)) + 20|0); //@line 168 "../../iup_hbox.c"
   $20 = HEAP32[$19>>2]|0; //@line 168 "../../iup_hbox.c"
   $21 = $4; //@line 168 "../../iup_hbox.c"
   $22 = $20 & $21; //@line 168 "../../iup_hbox.c"
   $23 = ($22|0)!=(0); //@line 168 "../../iup_hbox.c"
   if ($23) {
    $24 = $7; //@line 169 "../../iup_hbox.c"
    $25 = (($24) + 1)|0; //@line 169 "../../iup_hbox.c"
    $7 = $25; //@line 169 "../../iup_hbox.c"
   }
  }
  $26 = $5; //@line 166 "../../iup_hbox.c"
  $27 = ((($26)) + 68|0); //@line 166 "../../iup_hbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 166 "../../iup_hbox.c"
  $5 = $28; //@line 166 "../../iup_hbox.c"
 }
 $29 = $7; //@line 171 "../../iup_hbox.c"
 $30 = ($29|0)==(0); //@line 171 "../../iup_hbox.c"
 if ($30) {
  $2 = 0; //@line 172 "../../iup_hbox.c"
  $45 = $2; //@line 178 "../../iup_hbox.c"
  STACKTOP = sp;return ($45|0); //@line 178 "../../iup_hbox.c"
 } else {
  $31 = $3; //@line 175 "../../iup_hbox.c"
  $32 = ((($31)) + 52|0); //@line 175 "../../iup_hbox.c"
  $33 = HEAP32[$32>>2]|0; //@line 175 "../../iup_hbox.c"
  $34 = $3; //@line 175 "../../iup_hbox.c"
  $35 = ((($34)) + 72|0); //@line 175 "../../iup_hbox.c"
  $36 = HEAP32[$35>>2]|0; //@line 175 "../../iup_hbox.c"
  $37 = ((($36)) + 28|0); //@line 175 "../../iup_hbox.c"
  $38 = HEAP32[$37>>2]|0; //@line 175 "../../iup_hbox.c"
  $39 = (($33) - ($38))|0; //@line 175 "../../iup_hbox.c"
  $40 = $7; //@line 175 "../../iup_hbox.c"
  $41 = (($39|0) / ($40|0))&-1; //@line 175 "../../iup_hbox.c"
  $6 = $41; //@line 175 "../../iup_hbox.c"
  $42 = $6; //@line 176 "../../iup_hbox.c"
  $43 = ($42|0)<(0); //@line 176 "../../iup_hbox.c"
  $$ = $43 ? 0 : $41; //@line 176 "../../iup_hbox.c"
  $6 = $$; //@line 176 "../../iup_hbox.c"
  $44 = $6; //@line 177 "../../iup_hbox.c"
  $2 = $44; //@line 177 "../../iup_hbox.c"
  $45 = $2; //@line 178 "../../iup_hbox.c"
  STACKTOP = sp;return ($45|0); //@line 178 "../../iup_hbox.c"
 }
 return (0)|0;
}
function _iupImageStockInit() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupTableCreate(11)|0); //@line 33 "../../iup_image.c"
 HEAP32[5860] = $0; //@line 33 "../../iup_image.c"
 return; //@line 34 "../../iup_image.c"
}
function _iImageStockGet($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = HEAP32[5860]|0; //@line 69 "../../iup_image.c"
 $8 = $3; //@line 69 "../../iup_image.c"
 $9 = (_iupTableGet($7,$8)|0); //@line 69 "../../iup_image.c"
 $6 = $9; //@line 69 "../../iup_image.c"
 $10 = $6; //@line 70 "../../iup_image.c"
 $11 = ($10|0)!=(0|0); //@line 70 "../../iup_image.c"
 if (!($11)) {
  STACKTOP = sp;return; //@line 82 "../../iup_image.c"
 }
 $12 = $6; //@line 72 "../../iup_image.c"
 $13 = ((($12)) + 4|0); //@line 72 "../../iup_image.c"
 $14 = HEAP32[$13>>2]|0; //@line 72 "../../iup_image.c"
 $15 = ($14|0)!=(0|0); //@line 72 "../../iup_image.c"
 $16 = $6; //@line 73 "../../iup_image.c"
 if ($15) {
  $17 = ((($16)) + 4|0); //@line 73 "../../iup_image.c"
  $18 = HEAP32[$17>>2]|0; //@line 73 "../../iup_image.c"
  $19 = $4; //@line 73 "../../iup_image.c"
  HEAP32[$19>>2] = $18; //@line 73 "../../iup_image.c"
  STACKTOP = sp;return; //@line 82 "../../iup_image.c"
 }
 $20 = ((($16)) + 8|0); //@line 74 "../../iup_image.c"
 $21 = HEAP32[$20>>2]|0; //@line 74 "../../iup_image.c"
 $22 = ($21|0)!=(0|0); //@line 74 "../../iup_image.c"
 $23 = $6; //@line 75 "../../iup_image.c"
 if ($22) {
  $24 = ((($23)) + 8|0); //@line 75 "../../iup_image.c"
  $25 = HEAP32[$24>>2]|0; //@line 75 "../../iup_image.c"
  $26 = $5; //@line 75 "../../iup_image.c"
  HEAP32[$26>>2] = $25; //@line 75 "../../iup_image.c"
  STACKTOP = sp;return; //@line 82 "../../iup_image.c"
 }
 $27 = HEAP32[$23>>2]|0; //@line 76 "../../iup_image.c"
 $28 = ($27|0)!=(0|0); //@line 76 "../../iup_image.c"
 if (!($28)) {
  STACKTOP = sp;return; //@line 82 "../../iup_image.c"
 }
 $29 = $6; //@line 78 "../../iup_image.c"
 $30 = HEAP32[$29>>2]|0; //@line 78 "../../iup_image.c"
 $31 = (FUNCTION_TABLE_i[$30 & 1023]()|0); //@line 78 "../../iup_image.c"
 $32 = $6; //@line 78 "../../iup_image.c"
 $33 = ((($32)) + 4|0); //@line 78 "../../iup_image.c"
 HEAP32[$33>>2] = $31; //@line 78 "../../iup_image.c"
 $34 = $6; //@line 79 "../../iup_image.c"
 $35 = ((($34)) + 4|0); //@line 79 "../../iup_image.c"
 $36 = HEAP32[$35>>2]|0; //@line 79 "../../iup_image.c"
 $37 = $4; //@line 79 "../../iup_image.c"
 HEAP32[$37>>2] = $36; //@line 79 "../../iup_image.c"
 STACKTOP = sp;return; //@line 82 "../../iup_image.c"
}
function _IupImageRGBA($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 713 "../../iup_image.c"
 $8 = $7; //@line 713 "../../iup_image.c"
 HEAP32[$6>>2] = $8; //@line 713 "../../iup_image.c"
 $9 = $4; //@line 714 "../../iup_image.c"
 $10 = $9; //@line 714 "../../iup_image.c"
 $11 = ((($6)) + 4|0); //@line 714 "../../iup_image.c"
 HEAP32[$11>>2] = $10; //@line 714 "../../iup_image.c"
 $12 = $5; //@line 715 "../../iup_image.c"
 $13 = ($12|0)!=(0|0); //@line 715 "../../iup_image.c"
 $14 = $5; //@line 715 "../../iup_image.c"
 $15 = $13 ? $14 : (-1); //@line 715 "../../iup_image.c"
 $16 = ((($6)) + 8|0); //@line 715 "../../iup_image.c"
 HEAP32[$16>>2] = $15; //@line 715 "../../iup_image.c"
 $17 = ((($6)) + 12|0); //@line 716 "../../iup_image.c"
 HEAP32[$17>>2] = (-1); //@line 716 "../../iup_image.c"
 $18 = (_IupCreatev(13649,$6)|0); //@line 717 "../../iup_image.c"
 STACKTOP = sp;return ($18|0); //@line 717 "../../iup_image.c"
}
function _iupImageColorMakeInactive($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $17 = $6; //@line 241 "../../iup_image.c"
 $18 = HEAP8[$17>>0]|0; //@line 241 "../../iup_image.c"
 $19 = $18&255; //@line 241 "../../iup_image.c"
 $20 = $9; //@line 241 "../../iup_image.c"
 $21 = $20&255; //@line 241 "../../iup_image.c"
 $22 = ($19|0)==($21|0); //@line 241 "../../iup_image.c"
 if ($22) {
  $23 = $7; //@line 241 "../../iup_image.c"
  $24 = HEAP8[$23>>0]|0; //@line 241 "../../iup_image.c"
  $25 = $24&255; //@line 241 "../../iup_image.c"
  $26 = $10; //@line 241 "../../iup_image.c"
  $27 = $26&255; //@line 241 "../../iup_image.c"
  $28 = ($25|0)==($27|0); //@line 241 "../../iup_image.c"
  if ($28) {
   $29 = $8; //@line 241 "../../iup_image.c"
   $30 = HEAP8[$29>>0]|0; //@line 241 "../../iup_image.c"
   $31 = $30&255; //@line 241 "../../iup_image.c"
   $32 = $11; //@line 241 "../../iup_image.c"
   $33 = $32&255; //@line 241 "../../iup_image.c"
   $34 = ($31|0)==($33|0); //@line 241 "../../iup_image.c"
   if ($34) {
    $35 = $9; //@line 243 "../../iup_image.c"
    $36 = $6; //@line 243 "../../iup_image.c"
    HEAP8[$36>>0] = $35; //@line 243 "../../iup_image.c"
    $37 = $10; //@line 244 "../../iup_image.c"
    $38 = $7; //@line 244 "../../iup_image.c"
    HEAP8[$38>>0] = $37; //@line 244 "../../iup_image.c"
    $39 = $11; //@line 245 "../../iup_image.c"
    $40 = $8; //@line 245 "../../iup_image.c"
    HEAP8[$40>>0] = $39; //@line 245 "../../iup_image.c"
    STACKTOP = sp;return; //@line 269 "../../iup_image.c"
   }
  }
 }
 $12 = 0; //@line 249 "../../iup_image.c"
 $13 = 0; //@line 249 "../../iup_image.c"
 $14 = 0; //@line 249 "../../iup_image.c"
 $41 = $6; //@line 250 "../../iup_image.c"
 $42 = HEAP8[$41>>0]|0; //@line 250 "../../iup_image.c"
 $43 = $42&255; //@line 250 "../../iup_image.c"
 $44 = $7; //@line 250 "../../iup_image.c"
 $45 = HEAP8[$44>>0]|0; //@line 250 "../../iup_image.c"
 $46 = $45&255; //@line 250 "../../iup_image.c"
 $47 = (($43) + ($46))|0; //@line 250 "../../iup_image.c"
 $48 = $8; //@line 250 "../../iup_image.c"
 $49 = HEAP8[$48>>0]|0; //@line 250 "../../iup_image.c"
 $50 = $49&255; //@line 250 "../../iup_image.c"
 $51 = (($47) + ($50))|0; //@line 250 "../../iup_image.c"
 $52 = (($51|0) / 3)&-1; //@line 250 "../../iup_image.c"
 $15 = $52; //@line 250 "../../iup_image.c"
 $53 = $9; //@line 251 "../../iup_image.c"
 $54 = $53&255; //@line 251 "../../iup_image.c"
 $55 = $10; //@line 251 "../../iup_image.c"
 $56 = $55&255; //@line 251 "../../iup_image.c"
 $57 = (($54) + ($56))|0; //@line 251 "../../iup_image.c"
 $58 = $11; //@line 251 "../../iup_image.c"
 $59 = $58&255; //@line 251 "../../iup_image.c"
 $60 = (($57) + ($59))|0; //@line 251 "../../iup_image.c"
 $61 = (($60|0) / 3)&-1; //@line 251 "../../iup_image.c"
 $16 = $61; //@line 251 "../../iup_image.c"
 $62 = $16; //@line 253 "../../iup_image.c"
 $63 = ($62|0)!=(0); //@line 253 "../../iup_image.c"
 if ($63) {
  $64 = $9; //@line 255 "../../iup_image.c"
  $65 = $64&255; //@line 255 "../../iup_image.c"
  $66 = $15; //@line 255 "../../iup_image.c"
  $67 = Math_imul($65, $66)|0; //@line 255 "../../iup_image.c"
  $68 = $16; //@line 255 "../../iup_image.c"
  $69 = (($67|0) / ($68|0))&-1; //@line 255 "../../iup_image.c"
  $12 = $69; //@line 255 "../../iup_image.c"
  $70 = $10; //@line 256 "../../iup_image.c"
  $71 = $70&255; //@line 256 "../../iup_image.c"
  $72 = $15; //@line 256 "../../iup_image.c"
  $73 = Math_imul($71, $72)|0; //@line 256 "../../iup_image.c"
  $74 = $16; //@line 256 "../../iup_image.c"
  $75 = (($73|0) / ($74|0))&-1; //@line 256 "../../iup_image.c"
  $13 = $75; //@line 256 "../../iup_image.c"
  $76 = $11; //@line 257 "../../iup_image.c"
  $77 = $76&255; //@line 257 "../../iup_image.c"
  $78 = $15; //@line 257 "../../iup_image.c"
  $79 = Math_imul($77, $78)|0; //@line 257 "../../iup_image.c"
  $80 = $16; //@line 257 "../../iup_image.c"
  $81 = (($79|0) / ($80|0))&-1; //@line 257 "../../iup_image.c"
  $14 = $81; //@line 257 "../../iup_image.c"
 }
 $82 = $12; //@line 261 "../../iup_image.c"
 $83 = (255 + ($82))|0; //@line 261 "../../iup_image.c"
 $84 = (($83|0) / 2)&-1; //@line 261 "../../iup_image.c"
 $12 = $84; //@line 261 "../../iup_image.c"
 $85 = $13; //@line 262 "../../iup_image.c"
 $86 = (255 + ($85))|0; //@line 262 "../../iup_image.c"
 $87 = (($86|0) / 2)&-1; //@line 262 "../../iup_image.c"
 $13 = $87; //@line 262 "../../iup_image.c"
 $88 = $14; //@line 263 "../../iup_image.c"
 $89 = (255 + ($88))|0; //@line 263 "../../iup_image.c"
 $90 = (($89|0) / 2)&-1; //@line 263 "../../iup_image.c"
 $14 = $90; //@line 263 "../../iup_image.c"
 $91 = $12; //@line 265 "../../iup_image.c"
 $92 = ($91|0)<(0); //@line 265 "../../iup_image.c"
 if ($92) {
  $98 = 0;
 } else {
  $93 = $12; //@line 265 "../../iup_image.c"
  $94 = ($93|0)>(255); //@line 265 "../../iup_image.c"
  $95 = $12; //@line 265 "../../iup_image.c"
  $96 = $94 ? 255 : $95; //@line 265 "../../iup_image.c"
  $98 = $96;
 }
 $97 = $98&255; //@line 265 "../../iup_image.c"
 $99 = $6; //@line 265 "../../iup_image.c"
 HEAP8[$99>>0] = $97; //@line 265 "../../iup_image.c"
 $100 = $13; //@line 266 "../../iup_image.c"
 $101 = ($100|0)<(0); //@line 266 "../../iup_image.c"
 if ($101) {
  $107 = 0;
 } else {
  $102 = $13; //@line 266 "../../iup_image.c"
  $103 = ($102|0)>(255); //@line 266 "../../iup_image.c"
  $104 = $13; //@line 266 "../../iup_image.c"
  $105 = $103 ? 255 : $104; //@line 266 "../../iup_image.c"
  $107 = $105;
 }
 $106 = $107&255; //@line 266 "../../iup_image.c"
 $108 = $7; //@line 266 "../../iup_image.c"
 HEAP8[$108>>0] = $106; //@line 266 "../../iup_image.c"
 $109 = $14; //@line 267 "../../iup_image.c"
 $110 = ($109|0)<(0); //@line 267 "../../iup_image.c"
 if ($110) {
  $116 = 0;
 } else {
  $111 = $14; //@line 267 "../../iup_image.c"
  $112 = ($111|0)>(255); //@line 267 "../../iup_image.c"
  $113 = $14; //@line 267 "../../iup_image.c"
  $114 = $112 ? 255 : $113; //@line 267 "../../iup_image.c"
  $116 = $114;
 }
 $115 = $116&255; //@line 267 "../../iup_image.c"
 $117 = $8; //@line 267 "../../iup_image.c"
 HEAP8[$117>>0] = $115; //@line 267 "../../iup_image.c"
 STACKTOP = sp;return; //@line 269 "../../iup_image.c"
}
function _iupImageGetInfo($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $9 = sp + 4|0;
 $10 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $4; //@line 376 "../../iup_image.c"
 $12 = ($11|0)!=(0|0); //@line 376 "../../iup_image.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 412 "../../iup_image.c"
 }
 $13 = $4; //@line 380 "../../iup_image.c"
 $14 = (_IupGetHandle($13)|0); //@line 380 "../../iup_image.c"
 HEAP32[$9>>2] = $14; //@line 380 "../../iup_image.c"
 $15 = HEAP32[$9>>2]|0; //@line 381 "../../iup_image.c"
 $16 = ($15|0)!=(0|0); //@line 381 "../../iup_image.c"
 if (!($16)) {
  HEAP32[$10>>2] = 0; //@line 383 "../../iup_image.c"
  $17 = $4; //@line 386 "../../iup_image.c"
  $18 = (_iupdrvImageLoad($17,0)|0); //@line 386 "../../iup_image.c"
  $8 = $18; //@line 386 "../../iup_image.c"
  $19 = $8; //@line 387 "../../iup_image.c"
  $20 = ($19|0)!=(0|0); //@line 387 "../../iup_image.c"
  if ($20) {
   $21 = $8; //@line 389 "../../iup_image.c"
   $22 = $5; //@line 389 "../../iup_image.c"
   $23 = $6; //@line 389 "../../iup_image.c"
   $24 = $7; //@line 389 "../../iup_image.c"
   (_iupdrvImageGetInfo($21,$22,$23,$24)|0); //@line 389 "../../iup_image.c"
   STACKTOP = sp;return; //@line 412 "../../iup_image.c"
  }
  $25 = $4; //@line 394 "../../iup_image.c"
  _iImageStockGet($25,$9,$10); //@line 394 "../../iup_image.c"
  $26 = HEAP32[$10>>2]|0; //@line 395 "../../iup_image.c"
  $27 = ($26|0)!=(0|0); //@line 395 "../../iup_image.c"
  if ($27) {
   $28 = HEAP32[$10>>2]|0; //@line 397 "../../iup_image.c"
   $29 = (_iupdrvImageLoad($28,0)|0); //@line 397 "../../iup_image.c"
   $8 = $29; //@line 397 "../../iup_image.c"
   $30 = $8; //@line 398 "../../iup_image.c"
   $31 = ($30|0)!=(0|0); //@line 398 "../../iup_image.c"
   if ($31) {
    $32 = $8; //@line 400 "../../iup_image.c"
    $33 = $5; //@line 400 "../../iup_image.c"
    $34 = $6; //@line 400 "../../iup_image.c"
    $35 = $7; //@line 400 "../../iup_image.c"
    (_iupdrvImageGetInfo($32,$33,$34,$35)|0); //@line 400 "../../iup_image.c"
    STACKTOP = sp;return; //@line 412 "../../iup_image.c"
   }
  }
  $36 = HEAP32[$9>>2]|0; //@line 405 "../../iup_image.c"
  $37 = ($36|0)!=(0|0); //@line 405 "../../iup_image.c"
  if (!($37)) {
   STACKTOP = sp;return; //@line 412 "../../iup_image.c"
  }
 }
 $38 = $5; //@line 409 "../../iup_image.c"
 $39 = ($38|0)!=(0|0); //@line 409 "../../iup_image.c"
 if ($39) {
  $40 = HEAP32[$9>>2]|0; //@line 409 "../../iup_image.c"
  $41 = ((($40)) + 52|0); //@line 409 "../../iup_image.c"
  $42 = HEAP32[$41>>2]|0; //@line 409 "../../iup_image.c"
  $43 = $5; //@line 409 "../../iup_image.c"
  HEAP32[$43>>2] = $42; //@line 409 "../../iup_image.c"
 }
 $44 = $6; //@line 410 "../../iup_image.c"
 $45 = ($44|0)!=(0|0); //@line 410 "../../iup_image.c"
 if ($45) {
  $46 = HEAP32[$9>>2]|0; //@line 410 "../../iup_image.c"
  $47 = ((($46)) + 56|0); //@line 410 "../../iup_image.c"
  $48 = HEAP32[$47>>2]|0; //@line 410 "../../iup_image.c"
  $49 = $6; //@line 410 "../../iup_image.c"
  HEAP32[$49>>2] = $48; //@line 410 "../../iup_image.c"
 }
 $50 = $7; //@line 411 "../../iup_image.c"
 $51 = ($50|0)!=(0|0); //@line 411 "../../iup_image.c"
 if (!($51)) {
  STACKTOP = sp;return; //@line 412 "../../iup_image.c"
 }
 $52 = HEAP32[$9>>2]|0; //@line 411 "../../iup_image.c"
 $53 = (_IupGetInt($52,13706)|0); //@line 411 "../../iup_image.c"
 $54 = $7; //@line 411 "../../iup_image.c"
 HEAP32[$54>>2] = $53; //@line 411 "../../iup_image.c"
 STACKTOP = sp;return; //@line 412 "../../iup_image.c"
}
function _iupImageGetImage($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond5$not = 0, $or$cond7 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $7 = sp + 36|0;
 $10 = sp + 8|0;
 $12 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 dest=$7; src=13710; stop=dest+100|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 416 "../../iup_image.c"
 $11 = 0; //@line 420 "../../iup_image.c"
 $13 = $4; //@line 422 "../../iup_image.c"
 $14 = ($13|0)!=(0|0); //@line 422 "../../iup_image.c"
 if (!($14)) {
  $3 = 0; //@line 423 "../../iup_image.c"
  $87 = $3; //@line 493 "../../iup_image.c"
  STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
 }
 $15 = $4; //@line 426 "../../iup_image.c"
 $16 = (_IupGetHandle($15)|0); //@line 426 "../../iup_image.c"
 HEAP32[$10>>2] = $16; //@line 426 "../../iup_image.c"
 $17 = HEAP32[$10>>2]|0; //@line 427 "../../iup_image.c"
 $18 = ($17|0)!=(0|0); //@line 427 "../../iup_image.c"
 if (!($18)) {
  HEAP32[$12>>2] = 0; //@line 429 "../../iup_image.c"
  $19 = $4; //@line 432 "../../iup_image.c"
  $20 = (_iupdrvImageLoad($19,0)|0); //@line 432 "../../iup_image.c"
  $9 = $20; //@line 432 "../../iup_image.c"
  $21 = $9; //@line 433 "../../iup_image.c"
  $22 = ($21|0)!=(0|0); //@line 433 "../../iup_image.c"
  if ($22) {
   $23 = $9; //@line 434 "../../iup_image.c"
   $3 = $23; //@line 434 "../../iup_image.c"
   $87 = $3; //@line 493 "../../iup_image.c"
   STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
  }
  $24 = $4; //@line 437 "../../iup_image.c"
  _iImageStockGet($24,$10,$12); //@line 437 "../../iup_image.c"
  $25 = HEAP32[$12>>2]|0; //@line 438 "../../iup_image.c"
  $26 = ($25|0)!=(0|0); //@line 438 "../../iup_image.c"
  if ($26) {
   $27 = HEAP32[$12>>2]|0; //@line 440 "../../iup_image.c"
   $28 = (_iupdrvImageLoad($27,0)|0); //@line 440 "../../iup_image.c"
   $9 = $28; //@line 440 "../../iup_image.c"
   $29 = $9; //@line 441 "../../iup_image.c"
   $30 = ($29|0)!=(0|0); //@line 441 "../../iup_image.c"
   if ($30) {
    $31 = $9; //@line 442 "../../iup_image.c"
    $3 = $31; //@line 442 "../../iup_image.c"
    $87 = $3; //@line 493 "../../iup_image.c"
    STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
   }
  }
  $32 = HEAP32[$10>>2]|0; //@line 445 "../../iup_image.c"
  $33 = ($32|0)!=(0|0); //@line 445 "../../iup_image.c"
  if (!($33)) {
   $3 = 0; //@line 446 "../../iup_image.c"
   $87 = $3; //@line 493 "../../iup_image.c"
   STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
  }
 }
 $34 = HEAP32[$10>>2]|0; //@line 449 "../../iup_image.c"
 $35 = (_iupAttribGet($34,13618)|0); //@line 449 "../../iup_image.c"
 $9 = $35; //@line 449 "../../iup_image.c"
 $36 = $9; //@line 450 "../../iup_image.c"
 $37 = ($36|0)!=(0|0); //@line 450 "../../iup_image.c"
 if ($37) {
  $38 = $9; //@line 451 "../../iup_image.c"
  $3 = $38; //@line 451 "../../iup_image.c"
  $87 = $3; //@line 493 "../../iup_image.c"
  STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
 }
 $39 = HEAP32[$10>>2]|0; //@line 453 "../../iup_image.c"
 $40 = (_iupAttribGet($39,20290)|0); //@line 453 "../../iup_image.c"
 $8 = $40; //@line 453 "../../iup_image.c"
 $41 = $5; //@line 454 "../../iup_image.c"
 $42 = ($41|0)==(0|0); //@line 454 "../../iup_image.c"
 $43 = $8; //@line 454 "../../iup_image.c"
 $44 = ($43|0)!=(0|0); //@line 454 "../../iup_image.c"
 $or$cond = $42 | $44; //@line 454 "../../iup_image.c"
 if (!($or$cond)) {
  $45 = $5; //@line 455 "../../iup_image.c"
  $46 = (_IupGetAttribute($45,20290)|0); //@line 455 "../../iup_image.c"
  $8 = $46; //@line 455 "../../iup_image.c"
 }
 $47 = $6; //@line 457 "../../iup_image.c"
 $48 = ($47|0)!=(0); //@line 457 "../../iup_image.c"
 if ($48) {
  (_strcat($7,13810)|0); //@line 458 "../../iup_image.c"
 }
 $49 = HEAP32[$10>>2]|0; //@line 460 "../../iup_image.c"
 $50 = (_iupAttribGet($49,13820)|0); //@line 460 "../../iup_image.c"
 $51 = ($50|0)!=(0|0); //@line 460 "../../iup_image.c"
 $52 = $8; //@line 460 "../../iup_image.c"
 $53 = ($52|0)!=(0|0); //@line 460 "../../iup_image.c"
 $or$cond3 = $51 & $53; //@line 460 "../../iup_image.c"
 if ($or$cond3) {
  (_strcat($7,13840)|0); //@line 462 "../../iup_image.c"
  $54 = $8; //@line 463 "../../iup_image.c"
  (_strcat($7,$54)|0); //@line 463 "../../iup_image.c"
  (_strcat($7,13842)|0); //@line 464 "../../iup_image.c"
  $11 = 1; //@line 465 "../../iup_image.c"
 }
 $55 = HEAP32[$10>>2]|0; //@line 469 "../../iup_image.c"
 $56 = (_iupAttribGet($55,$7)|0); //@line 469 "../../iup_image.c"
 $9 = $56; //@line 469 "../../iup_image.c"
 $57 = $9; //@line 470 "../../iup_image.c"
 $58 = ($57|0)!=(0|0); //@line 470 "../../iup_image.c"
 if ($58) {
  $59 = $9; //@line 471 "../../iup_image.c"
  $3 = $59; //@line 471 "../../iup_image.c"
  $87 = $3; //@line 493 "../../iup_image.c"
  STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
 }
 $60 = $5; //@line 473 "../../iup_image.c"
 $61 = ($60|0)!=(0|0); //@line 473 "../../iup_image.c"
 if ($61) {
  $62 = $5; //@line 473 "../../iup_image.c"
  $63 = (_iupAttribGetStr($62,13844)|0); //@line 473 "../../iup_image.c"
  $64 = ($63|0)!=(0|0); //@line 473 "../../iup_image.c"
  if ($64) {
   $65 = HEAP32[$10>>2]|0; //@line 474 "../../iup_image.c"
   _iupAttribSet($65,13844,19938); //@line 474 "../../iup_image.c"
  }
 }
 $66 = HEAP32[$10>>2]|0; //@line 477 "../../iup_image.c"
 $67 = $8; //@line 477 "../../iup_image.c"
 $68 = $6; //@line 477 "../../iup_image.c"
 $69 = (_iupdrvImageCreateImage($66,$67,$68)|0); //@line 477 "../../iup_image.c"
 $9 = $69; //@line 477 "../../iup_image.c"
 $70 = $5; //@line 479 "../../iup_image.c"
 $71 = ($70|0)!=(0|0); //@line 479 "../../iup_image.c"
 if ($71) {
  $72 = $5; //@line 479 "../../iup_image.c"
  $73 = (_iupAttribGetStr($72,13844)|0); //@line 479 "../../iup_image.c"
  $74 = ($73|0)!=(0|0); //@line 479 "../../iup_image.c"
  if ($74) {
   $75 = HEAP32[$10>>2]|0; //@line 480 "../../iup_image.c"
   _iupAttribSet($75,13844,0); //@line 480 "../../iup_image.c"
  }
 }
 $76 = HEAP32[$10>>2]|0; //@line 482 "../../iup_image.c"
 $77 = (_iupAttribGet($76,13820)|0); //@line 482 "../../iup_image.c"
 $78 = ($77|0)!=(0|0); //@line 482 "../../iup_image.c"
 $79 = $8; //@line 482 "../../iup_image.c"
 $80 = ($79|0)!=(0|0); //@line 482 "../../iup_image.c"
 $or$cond5 = $78 & $80; //@line 482 "../../iup_image.c"
 $or$cond5$not = $or$cond5 ^ 1; //@line 482 "../../iup_image.c"
 $81 = $11; //@line 482 "../../iup_image.c"
 $82 = ($81|0)!=(0); //@line 482 "../../iup_image.c"
 $or$cond7 = $or$cond5$not | $82; //@line 482 "../../iup_image.c"
 if (!($or$cond7)) {
  (_strcat($7,13840)|0); //@line 484 "../../iup_image.c"
  $83 = $8; //@line 485 "../../iup_image.c"
  (_strcat($7,$83)|0); //@line 485 "../../iup_image.c"
  (_strcat($7,13842)|0); //@line 486 "../../iup_image.c"
 }
 $84 = HEAP32[$10>>2]|0; //@line 490 "../../iup_image.c"
 $85 = $9; //@line 490 "../../iup_image.c"
 _iupAttribSet($84,$7,$85); //@line 490 "../../iup_image.c"
 $86 = $9; //@line 492 "../../iup_image.c"
 $3 = $86; //@line 492 "../../iup_image.c"
 $87 = $3; //@line 493 "../../iup_image.c"
 STACKTOP = sp;return ($87|0); //@line 493 "../../iup_image.c"
}
function _iupImageUpdateParent($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 500 "../../iup_image.c"
 $4 = (_iupAttribGet($3,20169)|0); //@line 500 "../../iup_image.c"
 $2 = $4; //@line 500 "../../iup_image.c"
 $5 = $2; //@line 501 "../../iup_image.c"
 $6 = ($5|0)!=(0|0); //@line 501 "../../iup_image.c"
 if ($6) {
  $7 = $1; //@line 502 "../../iup_image.c"
  $8 = $2; //@line 502 "../../iup_image.c"
  _iupAttribSetClassObject($7,20169,$8); //@line 502 "../../iup_image.c"
 }
 $9 = $1; //@line 504 "../../iup_image.c"
 $10 = (_iupAttribGet($9,13855)|0); //@line 504 "../../iup_image.c"
 $2 = $10; //@line 504 "../../iup_image.c"
 $11 = $2; //@line 505 "../../iup_image.c"
 $12 = ($11|0)!=(0|0); //@line 505 "../../iup_image.c"
 if ($12) {
  $13 = $1; //@line 506 "../../iup_image.c"
  $14 = $2; //@line 506 "../../iup_image.c"
  _iupAttribSetClassObject($13,13855,$14); //@line 506 "../../iup_image.c"
 }
 $15 = $1; //@line 508 "../../iup_image.c"
 $16 = (_iupAttribGet($15,13866)|0); //@line 508 "../../iup_image.c"
 $2 = $16; //@line 508 "../../iup_image.c"
 $17 = $2; //@line 509 "../../iup_image.c"
 $18 = ($17|0)!=(0|0); //@line 509 "../../iup_image.c"
 if (!($18)) {
  STACKTOP = sp;return; //@line 511 "../../iup_image.c"
 }
 $19 = $1; //@line 510 "../../iup_image.c"
 $20 = $2; //@line 510 "../../iup_image.c"
 _iupAttribSetClassObject($19,13866,$20); //@line 510 "../../iup_image.c"
 STACKTOP = sp;return; //@line 511 "../../iup_image.c"
}
function _IupImage($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 693 "../../iup_image.c"
 $8 = $7; //@line 693 "../../iup_image.c"
 HEAP32[$6>>2] = $8; //@line 693 "../../iup_image.c"
 $9 = $4; //@line 694 "../../iup_image.c"
 $10 = $9; //@line 694 "../../iup_image.c"
 $11 = ((($6)) + 4|0); //@line 694 "../../iup_image.c"
 HEAP32[$11>>2] = $10; //@line 694 "../../iup_image.c"
 $12 = $5; //@line 695 "../../iup_image.c"
 $13 = ($12|0)!=(0|0); //@line 695 "../../iup_image.c"
 $14 = $5; //@line 695 "../../iup_image.c"
 $15 = $13 ? $14 : (-1); //@line 695 "../../iup_image.c"
 $16 = ((($6)) + 8|0); //@line 695 "../../iup_image.c"
 HEAP32[$16>>2] = $15; //@line 695 "../../iup_image.c"
 $17 = ((($6)) + 12|0); //@line 696 "../../iup_image.c"
 HEAP32[$17>>2] = (-1); //@line 696 "../../iup_image.c"
 $18 = (_IupCreatev(13874,$6)|0); //@line 697 "../../iup_image.c"
 STACKTOP = sp;return ($18|0); //@line 697 "../../iup_image.c"
}
function _iupImageNewClass() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iImageNewClassBase(13874)|0); //@line 750 "../../iup_image.c"
 $0 = $1; //@line 750 "../../iup_image.c"
 $2 = $0; //@line 751 "../../iup_image.c"
 $3 = ((($2)) + 32|0); //@line 751 "../../iup_image.c"
 HEAP32[$3>>2] = 285; //@line 751 "../../iup_image.c"
 $4 = $0; //@line 752 "../../iup_image.c"
 $5 = ((($4)) + 40|0); //@line 752 "../../iup_image.c"
 HEAP32[$5>>2] = 286; //@line 752 "../../iup_image.c"
 $6 = $0; //@line 753 "../../iup_image.c"
 STACKTOP = sp;return ($6|0); //@line 753 "../../iup_image.c"
}
function _iImageNewClassBase($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = (_iupClassNew(0)|0); //@line 722 "../../iup_image.c"
 $2 = $3; //@line 722 "../../iup_image.c"
 $4 = $1; //@line 724 "../../iup_image.c"
 $5 = $2; //@line 724 "../../iup_image.c"
 HEAP32[$5>>2] = $4; //@line 724 "../../iup_image.c"
 $6 = $2; //@line 725 "../../iup_image.c"
 $7 = ((($6)) + 4|0); //@line 725 "../../iup_image.c"
 HEAP32[$7>>2] = 13889; //@line 725 "../../iup_image.c"
 $8 = $2; //@line 726 "../../iup_image.c"
 $9 = ((($8)) + 8|0); //@line 726 "../../iup_image.c"
 HEAP32[$9>>2] = 4; //@line 726 "../../iup_image.c"
 $10 = $2; //@line 727 "../../iup_image.c"
 $11 = ((($10)) + 12|0); //@line 727 "../../iup_image.c"
 HEAP32[$11>>2] = 0; //@line 727 "../../iup_image.c"
 $12 = $2; //@line 728 "../../iup_image.c"
 $13 = ((($12)) + 16|0); //@line 728 "../../iup_image.c"
 HEAP32[$13>>2] = 0; //@line 728 "../../iup_image.c"
 $14 = $2; //@line 731 "../../iup_image.c"
 $15 = ((($14)) + 52|0); //@line 731 "../../iup_image.c"
 HEAP32[$15>>2] = 287; //@line 731 "../../iup_image.c"
 $16 = $2; //@line 734 "../../iup_image.c"
 _iupClassRegisterAttribute($16,17776,0,0,0,0,37); //@line 734 "../../iup_image.c"
 $17 = $2; //@line 735 "../../iup_image.c"
 _iupClassRegisterAttribute($17,13893,288,0,0,0,41); //@line 735 "../../iup_image.c"
 $18 = $2; //@line 736 "../../iup_image.c"
 _iupClassRegisterAttribute($18,13899,289,0,0,0,41); //@line 736 "../../iup_image.c"
 $19 = $2; //@line 737 "../../iup_image.c"
 _iupClassRegisterAttribute($19,20008,73,0,0,0,41); //@line 737 "../../iup_image.c"
 $20 = $2; //@line 738 "../../iup_image.c"
 _iupClassRegisterAttribute($20,20290,0,0,(-1),20331,1); //@line 738 "../../iup_image.c"
 $21 = $2; //@line 740 "../../iup_image.c"
 _iupClassRegisterAttribute($21,13706,0,0,0,0,33); //@line 740 "../../iup_image.c"
 $22 = $2; //@line 741 "../../iup_image.c"
 _iupClassRegisterAttribute($22,13880,0,0,0,0,33); //@line 741 "../../iup_image.c"
 $23 = $2; //@line 743 "../../iup_image.c"
 _iupClassRegisterAttribute($23,13906,0,0,13914,0,1); //@line 743 "../../iup_image.c"
 $24 = $2; //@line 745 "../../iup_image.c"
 STACKTOP = sp;return ($24|0); //@line 745 "../../iup_image.c"
}
function _iImageCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 657 "../../iup_image.c"
 $5 = $3; //@line 657 "../../iup_image.c"
 $6 = (_iImageCreate($4,$5,8)|0); //@line 657 "../../iup_image.c"
 STACKTOP = sp;return ($6|0); //@line 657 "../../iup_image.c"
}
function _iImageCreate($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $13 = $5; //@line 610 "../../iup_image.c"
 $14 = ($13|0)!=(0|0); //@line 610 "../../iup_image.c"
 if (!($14)) {
  $3 = 1; //@line 611 "../../iup_image.c"
  $84 = $3; //@line 653 "../../iup_image.c"
  STACKTOP = sp;return ($84|0); //@line 653 "../../iup_image.c"
 }
 $15 = $5; //@line 613 "../../iup_image.c"
 $16 = HEAP32[$15>>2]|0; //@line 613 "../../iup_image.c"
 $17 = $16; //@line 613 "../../iup_image.c"
 $7 = $17; //@line 613 "../../iup_image.c"
 $18 = $5; //@line 614 "../../iup_image.c"
 $19 = ((($18)) + 4|0); //@line 614 "../../iup_image.c"
 $20 = HEAP32[$19>>2]|0; //@line 614 "../../iup_image.c"
 $21 = $20; //@line 614 "../../iup_image.c"
 $8 = $21; //@line 614 "../../iup_image.c"
 $22 = $7; //@line 619 "../../iup_image.c"
 $23 = ($22|0)<=(0); //@line 619 "../../iup_image.c"
 $24 = $8; //@line 619 "../../iup_image.c"
 $25 = ($24|0)<=(0); //@line 619 "../../iup_image.c"
 $or$cond = $23 | $25; //@line 619 "../../iup_image.c"
 if ($or$cond) {
  $3 = 1; //@line 620 "../../iup_image.c"
  $84 = $3; //@line 653 "../../iup_image.c"
  STACKTOP = sp;return ($84|0); //@line 653 "../../iup_image.c"
 }
 $26 = $7; //@line 622 "../../iup_image.c"
 $27 = $4; //@line 622 "../../iup_image.c"
 $28 = ((($27)) + 52|0); //@line 622 "../../iup_image.c"
 HEAP32[$28>>2] = $26; //@line 622 "../../iup_image.c"
 $29 = $8; //@line 623 "../../iup_image.c"
 $30 = $4; //@line 623 "../../iup_image.c"
 $31 = ((($30)) + 56|0); //@line 623 "../../iup_image.c"
 HEAP32[$31>>2] = $29; //@line 623 "../../iup_image.c"
 $9 = 1; //@line 625 "../../iup_image.c"
 $32 = $6; //@line 626 "../../iup_image.c"
 $33 = ($32|0)==(24); //@line 626 "../../iup_image.c"
 if ($33) {
  $9 = 3; //@line 627 "../../iup_image.c"
 } else {
  $34 = $6; //@line 628 "../../iup_image.c"
  $35 = ($34|0)==(32); //@line 628 "../../iup_image.c"
  if ($35) {
   $9 = 4; //@line 629 "../../iup_image.c"
  }
 }
 $36 = $7; //@line 631 "../../iup_image.c"
 $37 = $8; //@line 631 "../../iup_image.c"
 $38 = Math_imul($36, $37)|0; //@line 631 "../../iup_image.c"
 $39 = $9; //@line 631 "../../iup_image.c"
 $40 = Math_imul($38, $39)|0; //@line 631 "../../iup_image.c"
 $10 = $40; //@line 631 "../../iup_image.c"
 $41 = $10; //@line 632 "../../iup_image.c"
 $42 = (_malloc($41)|0); //@line 632 "../../iup_image.c"
 $11 = $42; //@line 632 "../../iup_image.c"
 $43 = $5; //@line 634 "../../iup_image.c"
 $44 = ((($43)) + 8|0); //@line 634 "../../iup_image.c"
 $45 = HEAP32[$44>>2]|0; //@line 634 "../../iup_image.c"
 $46 = $45; //@line 634 "../../iup_image.c"
 $47 = ($46|0)==(-1); //@line 634 "../../iup_image.c"
 L14: do {
  if ($47) {
   label = 11;
  } else {
   $48 = $5; //@line 634 "../../iup_image.c"
   $49 = ((($48)) + 12|0); //@line 634 "../../iup_image.c"
   $50 = HEAP32[$49>>2]|0; //@line 634 "../../iup_image.c"
   $51 = $50; //@line 634 "../../iup_image.c"
   $52 = ($51|0)==(-1); //@line 634 "../../iup_image.c"
   if ($52) {
    label = 11;
   } else {
    $12 = 0; //@line 642 "../../iup_image.c"
    while(1) {
     $63 = $12; //@line 642 "../../iup_image.c"
     $64 = $10; //@line 642 "../../iup_image.c"
     $65 = ($63|0)<($64|0); //@line 642 "../../iup_image.c"
     if (!($65)) {
      break L14;
     }
     $66 = $12; //@line 644 "../../iup_image.c"
     $67 = (($66) + 2)|0; //@line 644 "../../iup_image.c"
     $68 = $5; //@line 644 "../../iup_image.c"
     $69 = (($68) + ($67<<2)|0); //@line 644 "../../iup_image.c"
     $70 = HEAP32[$69>>2]|0; //@line 644 "../../iup_image.c"
     $71 = $70; //@line 644 "../../iup_image.c"
     $72 = $71&255; //@line 644 "../../iup_image.c"
     $73 = $12; //@line 644 "../../iup_image.c"
     $74 = $11; //@line 644 "../../iup_image.c"
     $75 = (($74) + ($73)|0); //@line 644 "../../iup_image.c"
     HEAP8[$75>>0] = $72; //@line 644 "../../iup_image.c"
     $76 = $12; //@line 642 "../../iup_image.c"
     $77 = (($76) + 1)|0; //@line 642 "../../iup_image.c"
     $12 = $77; //@line 642 "../../iup_image.c"
    }
   }
  }
 } while(0);
 if ((label|0) == 11) {
  $53 = $5; //@line 636 "../../iup_image.c"
  $54 = ((($53)) + 8|0); //@line 636 "../../iup_image.c"
  $55 = HEAP32[$54>>2]|0; //@line 636 "../../iup_image.c"
  $56 = $55; //@line 636 "../../iup_image.c"
  $57 = ($56|0)!=(-1); //@line 636 "../../iup_image.c"
  if ($57) {
   $58 = $11; //@line 637 "../../iup_image.c"
   $59 = $5; //@line 637 "../../iup_image.c"
   $60 = ((($59)) + 8|0); //@line 637 "../../iup_image.c"
   $61 = HEAP32[$60>>2]|0; //@line 637 "../../iup_image.c"
   $62 = $10; //@line 637 "../../iup_image.c"
   _memcpy(($58|0),($61|0),($62|0))|0; //@line 637 "../../iup_image.c"
  }
 }
 $78 = $4; //@line 648 "../../iup_image.c"
 $79 = $11; //@line 648 "../../iup_image.c"
 _iupAttribSet($78,17776,$79); //@line 648 "../../iup_image.c"
 $80 = $4; //@line 649 "../../iup_image.c"
 $81 = $6; //@line 649 "../../iup_image.c"
 _iupAttribSetInt($80,13706,$81); //@line 649 "../../iup_image.c"
 $82 = $4; //@line 650 "../../iup_image.c"
 $83 = $9; //@line 650 "../../iup_image.c"
 _iupAttribSetInt($82,13880,$83); //@line 650 "../../iup_image.c"
 $3 = 0; //@line 652 "../../iup_image.c"
 $84 = $3; //@line 653 "../../iup_image.c"
 STACKTOP = sp;return ($84|0); //@line 653 "../../iup_image.c"
}
function _iImageDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 674 "../../iup_image.c"
 $5 = (_iupAttribGetStr($4,17776)|0); //@line 674 "../../iup_image.c"
 $3 = $5; //@line 674 "../../iup_image.c"
 $6 = $3; //@line 675 "../../iup_image.c"
 $7 = ($6|0)!=(0|0); //@line 675 "../../iup_image.c"
 if ($7) {
  $8 = $1; //@line 677 "../../iup_image.c"
  _iupAttribSet($8,17776,0); //@line 677 "../../iup_image.c"
  $9 = $3; //@line 678 "../../iup_image.c"
  _free($9); //@line 678 "../../iup_image.c"
 }
 $10 = $1; //@line 681 "../../iup_image.c"
 $11 = (_iupAttribGet($10,13603)|0); //@line 681 "../../iup_image.c"
 $2 = $11; //@line 681 "../../iup_image.c"
 $12 = $2; //@line 682 "../../iup_image.c"
 $13 = ($12|0)!=(0|0); //@line 682 "../../iup_image.c"
 if (!($13)) {
  $15 = $1; //@line 685 "../../iup_image.c"
  _iImageClearCache($15); //@line 685 "../../iup_image.c"
  STACKTOP = sp;return; //@line 686 "../../iup_image.c"
 }
 $14 = $2; //@line 683 "../../iup_image.c"
 _iImageStockUnload($14); //@line 683 "../../iup_image.c"
 $15 = $1; //@line 685 "../../iup_image.c"
 _iImageClearCache($15); //@line 685 "../../iup_image.c"
 STACKTOP = sp;return; //@line 686 "../../iup_image.c"
}
function _iImageGetWidthAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 515 "../../iup_image.c"
 $3 = ((($2)) + 52|0); //@line 515 "../../iup_image.c"
 $4 = HEAP32[$3>>2]|0; //@line 515 "../../iup_image.c"
 $5 = (_iupStrReturnInt($4)|0); //@line 515 "../../iup_image.c"
 STACKTOP = sp;return ($5|0); //@line 515 "../../iup_image.c"
}
function _iImageGetHeightAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 520 "../../iup_image.c"
 $3 = ((($2)) + 56|0); //@line 520 "../../iup_image.c"
 $4 = HEAP32[$3>>2]|0; //@line 520 "../../iup_image.c"
 $5 = (_iupStrReturnInt($4)|0); //@line 520 "../../iup_image.c"
 STACKTOP = sp;return ($5|0); //@line 520 "../../iup_image.c"
}
function _iImageStockUnload($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = HEAP32[5860]|0; //@line 86 "../../iup_image.c"
 $4 = $1; //@line 86 "../../iup_image.c"
 $5 = (_iupTableGet($3,$4)|0); //@line 86 "../../iup_image.c"
 $2 = $5; //@line 86 "../../iup_image.c"
 $6 = $2; //@line 87 "../../iup_image.c"
 $7 = ($6|0)!=(0|0); //@line 87 "../../iup_image.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 89 "../../iup_image.c"
 }
 $8 = $2; //@line 88 "../../iup_image.c"
 $9 = ((($8)) + 4|0); //@line 88 "../../iup_image.c"
 HEAP32[$9>>2] = 0; //@line 88 "../../iup_image.c"
 STACKTOP = sp;return; //@line 89 "../../iup_image.c"
}
function _iImageClearCache($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 550 "../../iup_image.c"
 $5 = (_iupAttribGet($4,13659)|0); //@line 550 "../../iup_image.c"
 $3 = $5; //@line 550 "../../iup_image.c"
 $6 = $3; //@line 551 "../../iup_image.c"
 $7 = ($6|0)!=(0|0); //@line 551 "../../iup_image.c"
 if ($7) {
  $8 = $3; //@line 553 "../../iup_image.c"
  _iupdrvImageDestroy($8,0); //@line 553 "../../iup_image.c"
  $9 = $1; //@line 554 "../../iup_image.c"
  _iupAttribSet($9,13659,0); //@line 554 "../../iup_image.c"
 }
 $10 = $1; //@line 557 "../../iup_image.c"
 $11 = (_iupAttribGet($10,13674)|0); //@line 557 "../../iup_image.c"
 $3 = $11; //@line 557 "../../iup_image.c"
 $12 = $3; //@line 558 "../../iup_image.c"
 $13 = ($12|0)!=(0|0); //@line 558 "../../iup_image.c"
 if ($13) {
  $14 = $3; //@line 560 "../../iup_image.c"
  _iupdrvImageDestroy($14,1); //@line 560 "../../iup_image.c"
  $15 = $1; //@line 561 "../../iup_image.c"
  _iupAttribSet($15,13674,0); //@line 561 "../../iup_image.c"
 }
 $16 = $1; //@line 564 "../../iup_image.c"
 $17 = (_iupAttribGet($16,13689)|0); //@line 564 "../../iup_image.c"
 $3 = $17; //@line 564 "../../iup_image.c"
 $18 = $3; //@line 565 "../../iup_image.c"
 $19 = ($18|0)!=(0|0); //@line 565 "../../iup_image.c"
 if ($19) {
  $20 = $3; //@line 567 "../../iup_image.c"
  _iupdrvImageDestroy($20,2); //@line 567 "../../iup_image.c"
  $21 = $1; //@line 568 "../../iup_image.c"
  _iupAttribSet($21,13689,0); //@line 568 "../../iup_image.c"
 }
 $22 = $1; //@line 572 "../../iup_image.c"
 $23 = ((($22)) + 8|0); //@line 572 "../../iup_image.c"
 $24 = HEAP32[$23>>2]|0; //@line 572 "../../iup_image.c"
 $25 = (_iupTableFirst($24)|0); //@line 572 "../../iup_image.c"
 $2 = $25; //@line 572 "../../iup_image.c"
 while(1) {
  $26 = $2; //@line 573 "../../iup_image.c"
  $27 = ($26|0)!=(0|0); //@line 573 "../../iup_image.c"
  if (!($27)) {
   break;
  }
  $28 = $2; //@line 575 "../../iup_image.c"
  $29 = (_iupStrEqualPartial($28,13918)|0); //@line 575 "../../iup_image.c"
  $30 = ($29|0)!=(0); //@line 575 "../../iup_image.c"
  if ($30) {
   $31 = $1; //@line 577 "../../iup_image.c"
   $32 = ((($31)) + 8|0); //@line 577 "../../iup_image.c"
   $33 = HEAP32[$32>>2]|0; //@line 577 "../../iup_image.c"
   $34 = (_iupTableGetCurr($33)|0); //@line 577 "../../iup_image.c"
   $3 = $34; //@line 577 "../../iup_image.c"
   $35 = $3; //@line 578 "../../iup_image.c"
   $36 = ($35|0)!=(0|0); //@line 578 "../../iup_image.c"
   if ($36) {
    $37 = $3; //@line 580 "../../iup_image.c"
    _iupdrvImageDestroy($37,0); //@line 580 "../../iup_image.c"
    $38 = $1; //@line 581 "../../iup_image.c"
    $39 = ((($38)) + 8|0); //@line 581 "../../iup_image.c"
    $40 = HEAP32[$39>>2]|0; //@line 581 "../../iup_image.c"
    _iupTableSetCurr($40,0,0); //@line 581 "../../iup_image.c"
   }
  }
  $41 = $1; //@line 585 "../../iup_image.c"
  $42 = ((($41)) + 8|0); //@line 585 "../../iup_image.c"
  $43 = HEAP32[$42>>2]|0; //@line 585 "../../iup_image.c"
  $44 = (_iupTableNext($43)|0); //@line 585 "../../iup_image.c"
  $2 = $44; //@line 585 "../../iup_image.c"
 }
 $45 = $1; //@line 589 "../../iup_image.c"
 $46 = (_iupAttribGet($45,13934)|0); //@line 589 "../../iup_image.c"
 $3 = $46; //@line 589 "../../iup_image.c"
 $47 = $3; //@line 590 "../../iup_image.c"
 $48 = ($47|0)!=(0|0); //@line 590 "../../iup_image.c"
 if ($48) {
  $49 = $1; //@line 592 "../../iup_image.c"
  _iupAttribSet($49,13934,0); //@line 592 "../../iup_image.c"
  $50 = $3; //@line 593 "../../iup_image.c"
  _free($50); //@line 593 "../../iup_image.c"
 }
 $51 = $1; //@line 596 "../../iup_image.c"
 $52 = (_iupAttribGet($51,13951)|0); //@line 596 "../../iup_image.c"
 $3 = $52; //@line 596 "../../iup_image.c"
 $53 = $3; //@line 597 "../../iup_image.c"
 $54 = ($53|0)!=(0|0); //@line 597 "../../iup_image.c"
 if (!($54)) {
  STACKTOP = sp;return; //@line 602 "../../iup_image.c"
 }
 $55 = $1; //@line 599 "../../iup_image.c"
 _iupAttribSet($55,13951,0); //@line 599 "../../iup_image.c"
 $56 = $3; //@line 600 "../../iup_image.c"
 _free($56); //@line 600 "../../iup_image.c"
 STACKTOP = sp;return; //@line 602 "../../iup_image.c"
}
function _iupImageRGBNewClass() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iImageNewClassBase(13640)|0); //@line 758 "../../iup_image.c"
 $0 = $1; //@line 758 "../../iup_image.c"
 $2 = $0; //@line 759 "../../iup_image.c"
 $3 = ((($2)) + 32|0); //@line 759 "../../iup_image.c"
 HEAP32[$3>>2] = 290; //@line 759 "../../iup_image.c"
 $4 = $0; //@line 760 "../../iup_image.c"
 $5 = ((($4)) + 40|0); //@line 760 "../../iup_image.c"
 HEAP32[$5>>2] = 291; //@line 760 "../../iup_image.c"
 $6 = $0; //@line 761 "../../iup_image.c"
 STACKTOP = sp;return ($6|0); //@line 761 "../../iup_image.c"
}
function _iImageRGBCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 662 "../../iup_image.c"
 $5 = $3; //@line 662 "../../iup_image.c"
 $6 = (_iImageCreate($4,$5,24)|0); //@line 662 "../../iup_image.c"
 STACKTOP = sp;return ($6|0); //@line 662 "../../iup_image.c"
}
function _iupImageRGBANewClass() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iImageNewClassBase(13649)|0); //@line 766 "../../iup_image.c"
 $0 = $1; //@line 766 "../../iup_image.c"
 $2 = $0; //@line 767 "../../iup_image.c"
 $3 = ((($2)) + 32|0); //@line 767 "../../iup_image.c"
 HEAP32[$3>>2] = 292; //@line 767 "../../iup_image.c"
 $4 = $0; //@line 768 "../../iup_image.c"
 $5 = ((($4)) + 40|0); //@line 768 "../../iup_image.c"
 HEAP32[$5>>2] = 293; //@line 768 "../../iup_image.c"
 $6 = $0; //@line 769 "../../iup_image.c"
 STACKTOP = sp;return ($6|0); //@line 769 "../../iup_image.c"
}
function _iImageRGBACreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 667 "../../iup_image.c"
 $5 = $3; //@line 667 "../../iup_image.c"
 $6 = (_iImageCreate($4,$5,32)|0); //@line 667 "../../iup_image.c"
 STACKTOP = sp;return ($6|0); //@line 667 "../../iup_image.c"
}
function _iupKeyInit() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _memset((23444|0),0,1024)|0; //@line 130 "../../iup_key.c"
 HEAP32[(23488)>>2] = 13977; //@line 132 "../../iup_key.c"
 HEAP32[(23520)>>2] = 13986; //@line 133 "../../iup_key.c"
 HEAP32[(23524)>>2] = 13994; //@line 134 "../../iup_key.c"
 HEAP32[(23552)>>2] = 14003; //@line 135 "../../iup_key.c"
 HEAP32[(23764)>>2] = 14009; //@line 136 "../../iup_key.c"
 HEAP32[(23768)>>2] = 14016; //@line 137 "../../iup_key.c"
 HEAP32[(23772)>>2] = 14023; //@line 138 "../../iup_key.c"
 HEAP32[(23776)>>2] = 14028; //@line 139 "../../iup_key.c"
 HEAP32[(23780)>>2] = 14036; //@line 140 "../../iup_key.c"
 HEAP32[(23784)>>2] = 14043; //@line 141 "../../iup_key.c"
 HEAP32[(23788)>>2] = 14050; //@line 142 "../../iup_key.c"
 HEAP32[(23792)>>2] = 14057; //@line 143 "../../iup_key.c"
 HEAP32[(23832)>>2] = 14063; //@line 144 "../../iup_key.c"
 HEAP32[(23840)>>2] = 14071; //@line 145 "../../iup_key.c"
 HEAP32[(23856)>>2] = 14077; //@line 146 "../../iup_key.c"
 HEAP32[(23952)>>2] = 14084; //@line 147 "../../iup_key.c"
 HEAP32[(24204)>>2] = 14090; //@line 149 "../../iup_key.c"
 HEAP32[(24208)>>2] = 14095; //@line 150 "../../iup_key.c"
 HEAP32[(24212)>>2] = 14100; //@line 151 "../../iup_key.c"
 HEAP32[(24216)>>2] = 14105; //@line 152 "../../iup_key.c"
 HEAP32[(24220)>>2] = 14110; //@line 153 "../../iup_key.c"
 HEAP32[(24224)>>2] = 14115; //@line 154 "../../iup_key.c"
 HEAP32[(24228)>>2] = 14120; //@line 155 "../../iup_key.c"
 HEAP32[(24232)>>2] = 14125; //@line 156 "../../iup_key.c"
 HEAP32[(24236)>>2] = 14130; //@line 157 "../../iup_key.c"
 HEAP32[(24240)>>2] = 14135; //@line 158 "../../iup_key.c"
 HEAP32[(24244)>>2] = 14141; //@line 159 "../../iup_key.c"
 HEAP32[(24248)>>2] = 14147; //@line 160 "../../iup_key.c"
 HEAP32[(24344)>>2] = 14153; //@line 162 "../../iup_key.c"
 HEAP32[(24348)>>2] = 14162; //@line 163 "../../iup_key.c"
 HEAP32[(24352)>>2] = 14171; //@line 164 "../../iup_key.c"
 HEAP32[(24356)>>2] = 14179; //@line 165 "../../iup_key.c"
 HEAP32[(24360)>>2] = 14187; //@line 166 "../../iup_key.c"
 HEAP32[(24376)>>2] = 14194; //@line 167 "../../iup_key.c"
 HEAP32[(24380)>>2] = 14201; //@line 168 "../../iup_key.c"
 HEAP32[(24464)>>2] = 14208; //@line 170 "../../iup_key.c"
 return; //@line 171 "../../iup_key.c"
}
function _iupLabelGetTypeBeforeMap($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 63 "../../iup_label.c"
 $5 = ((($4)) + 72|0); //@line 63 "../../iup_label.c"
 $6 = HEAP32[$5>>2]|0; //@line 63 "../../iup_label.c"
 $7 = HEAP32[$6>>2]|0; //@line 63 "../../iup_label.c"
 $2 = $7; //@line 63 "../../iup_label.c"
 $8 = $1; //@line 65 "../../iup_label.c"
 $9 = ((($8)) + 16|0); //@line 65 "../../iup_label.c"
 $10 = HEAP32[$9>>2]|0; //@line 65 "../../iup_label.c"
 $11 = ($10|0)!=(0|0); //@line 65 "../../iup_label.c"
 do {
  if (!($11)) {
   $12 = $1; //@line 68 "../../iup_label.c"
   $13 = (_iupAttribGet($12,14214)|0); //@line 68 "../../iup_label.c"
   $3 = $13; //@line 68 "../../iup_label.c"
   $14 = $3; //@line 69 "../../iup_label.c"
   $15 = ($14|0)!=(0|0); //@line 69 "../../iup_label.c"
   if ($15) {
    $16 = $3; //@line 71 "../../iup_label.c"
    $17 = (_iupStrEqualNoCase($16,19951)|0); //@line 71 "../../iup_label.c"
    $18 = ($17|0)!=(0); //@line 71 "../../iup_label.c"
    if ($18) {
     $2 = 0; //@line 72 "../../iup_label.c"
     break;
    } else {
     $2 = 1; //@line 74 "../../iup_label.c"
     break;
    }
   } else {
    $19 = $1; //@line 78 "../../iup_label.c"
    $20 = (_iupAttribGet($19,20169)|0); //@line 78 "../../iup_label.c"
    $3 = $20; //@line 78 "../../iup_label.c"
    $21 = $3; //@line 79 "../../iup_label.c"
    $22 = ($21|0)!=(0|0); //@line 79 "../../iup_label.c"
    if ($22) {
     $2 = 2; //@line 80 "../../iup_label.c"
     break;
    } else {
     $2 = 3; //@line 82 "../../iup_label.c"
     break;
    }
   }
  }
 } while(0);
 $23 = $2; //@line 86 "../../iup_label.c"
 STACKTOP = sp;return ($23|0); //@line 86 "../../iup_label.c"
}
function _IupLabel($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 $3 = $1; //@line 156 "../../iup_label.c"
 HEAP32[$2>>2] = $3; //@line 156 "../../iup_label.c"
 $4 = ((($2)) + 4|0); //@line 157 "../../iup_label.c"
 HEAP32[$4>>2] = 0; //@line 157 "../../iup_label.c"
 $5 = (_IupCreatev(14247,$2)|0); //@line 158 "../../iup_label.c"
 STACKTOP = sp;return ($5|0); //@line 158 "../../iup_label.c"
}
function _iupLabelNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 163 "../../iup_label.c"
 $0 = $1; //@line 163 "../../iup_label.c"
 $2 = $0; //@line 165 "../../iup_label.c"
 HEAP32[$2>>2] = 14247; //@line 165 "../../iup_label.c"
 $3 = $0; //@line 166 "../../iup_label.c"
 $4 = ((($3)) + 4|0); //@line 166 "../../iup_label.c"
 HEAP32[$4>>2] = 19916; //@line 166 "../../iup_label.c"
 $5 = $0; //@line 167 "../../iup_label.c"
 $6 = ((($5)) + 8|0); //@line 167 "../../iup_label.c"
 HEAP32[$6>>2] = 1; //@line 167 "../../iup_label.c"
 $7 = $0; //@line 168 "../../iup_label.c"
 $8 = ((($7)) + 12|0); //@line 168 "../../iup_label.c"
 HEAP32[$8>>2] = 0; //@line 168 "../../iup_label.c"
 $9 = $0; //@line 169 "../../iup_label.c"
 $10 = ((($9)) + 16|0); //@line 169 "../../iup_label.c"
 HEAP32[$10>>2] = 0; //@line 169 "../../iup_label.c"
 $11 = $0; //@line 172 "../../iup_label.c"
 $12 = ((($11)) + 32|0); //@line 172 "../../iup_label.c"
 HEAP32[$12>>2] = 294; //@line 172 "../../iup_label.c"
 $13 = $0; //@line 173 "../../iup_label.c"
 $14 = ((($13)) + 40|0); //@line 173 "../../iup_label.c"
 HEAP32[$14>>2] = 295; //@line 173 "../../iup_label.c"
 $15 = $0; //@line 174 "../../iup_label.c"
 $16 = ((($15)) + 76|0); //@line 174 "../../iup_label.c"
 HEAP32[$16>>2] = 296; //@line 174 "../../iup_label.c"
 $17 = $0; //@line 176 "../../iup_label.c"
 $18 = ((($17)) + 72|0); //@line 176 "../../iup_label.c"
 HEAP32[$18>>2] = 47; //@line 176 "../../iup_label.c"
 $19 = $0; //@line 177 "../../iup_label.c"
 $20 = ((($19)) + 48|0); //@line 177 "../../iup_label.c"
 HEAP32[$20>>2] = 48; //@line 177 "../../iup_label.c"
 $21 = $0; //@line 180 "../../iup_label.c"
 _iupClassRegisterCallback($21,15572,362470); //@line 180 "../../iup_label.c"
 $22 = $0; //@line 181 "../../iup_label.c"
 _iupClassRegisterCallback($22,15563,362470); //@line 181 "../../iup_label.c"
 $23 = $0; //@line 183 "../../iup_label.c"
 _iupClassRegisterCallback($23,20522,18053); //@line 183 "../../iup_label.c"
 $24 = $0; //@line 184 "../../iup_label.c"
 _iupClassRegisterCallback($24,14303,362470); //@line 184 "../../iup_label.c"
 $25 = $0; //@line 185 "../../iup_label.c"
 _iupClassRegisterCallback($25,14318,362470); //@line 185 "../../iup_label.c"
 $26 = $0; //@line 188 "../../iup_label.c"
 _iupBaseRegisterCommonAttrib($26); //@line 188 "../../iup_label.c"
 $27 = $0; //@line 191 "../../iup_label.c"
 _iupBaseRegisterVisualAttrib($27); //@line 191 "../../iup_label.c"
 $28 = $0; //@line 194 "../../iup_label.c"
 _iupdrvRegisterDragDropAttrib($28); //@line 194 "../../iup_label.c"
 $29 = $0; //@line 197 "../../iup_label.c"
 _iupClassRegisterAttribute($29,14214,297,298,0,0,9); //@line 197 "../../iup_label.c"
 $30 = $0; //@line 199 "../../iup_label.c"
 _iupdrvLabelInitClass($30); //@line 199 "../../iup_label.c"
 $31 = $0; //@line 201 "../../iup_label.c"
 STACKTOP = sp;return ($31|0); //@line 201 "../../iup_label.c"
}
function _iLabelCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 105 "../../iup_label.c"
 $5 = ($4|0)!=(0|0); //@line 105 "../../iup_label.c"
 if ($5) {
  $6 = $3; //@line 105 "../../iup_label.c"
  $7 = HEAP32[$6>>2]|0; //@line 105 "../../iup_label.c"
  $8 = ($7|0)!=(0|0); //@line 105 "../../iup_label.c"
  if ($8) {
   $9 = $2; //@line 106 "../../iup_label.c"
   $10 = $3; //@line 106 "../../iup_label.c"
   $11 = HEAP32[$10>>2]|0; //@line 106 "../../iup_label.c"
   _iupAttribSetStr($9,20508,$11); //@line 106 "../../iup_label.c"
  }
 }
 $12 = (_calloc(1,28)|0); //@line 108 "../../iup_label.c"
 $13 = $2; //@line 108 "../../iup_label.c"
 $14 = ((($13)) + 72|0); //@line 108 "../../iup_label.c"
 HEAP32[$14>>2] = $12; //@line 108 "../../iup_label.c"
 $15 = $2; //@line 111 "../../iup_label.c"
 $16 = ((($15)) + 72|0); //@line 111 "../../iup_label.c"
 $17 = HEAP32[$16>>2]|0; //@line 111 "../../iup_label.c"
 $18 = ((($17)) + 16|0); //@line 111 "../../iup_label.c"
 HEAP32[$18>>2] = 1; //@line 111 "../../iup_label.c"
 STACKTOP = sp;return 0; //@line 112 "../../iup_label.c"
}
function _iLabelComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 16|0;
 $9 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 HEAP32[$8>>2] = 0; //@line 117 "../../iup_label.c"
 HEAP32[$9>>2] = 0; //@line 118 "../../iup_label.c"
 $13 = $4; //@line 119 "../../iup_label.c"
 $14 = (_iupLabelGetTypeBeforeMap($13)|0); //@line 119 "../../iup_label.c"
 $10 = $14; //@line 119 "../../iup_label.c"
 $15 = $10; //@line 122 "../../iup_label.c"
 $16 = ($15|0)==(0); //@line 122 "../../iup_label.c"
 do {
  if ($16) {
   HEAP32[$9>>2] = 2; //@line 123 "../../iup_label.c"
  } else {
   $17 = $10; //@line 124 "../../iup_label.c"
   $18 = ($17|0)==(1); //@line 124 "../../iup_label.c"
   if ($18) {
    HEAP32[$8>>2] = 2; //@line 125 "../../iup_label.c"
    break;
   }
   $19 = $10; //@line 126 "../../iup_label.c"
   $20 = ($19|0)==(2); //@line 126 "../../iup_label.c"
   $21 = $4; //@line 128 "../../iup_label.c"
   if ($20) {
    $22 = (_iupAttribGet($21,20169)|0); //@line 128 "../../iup_label.c"
    _iupImageGetInfo($22,$8,$9,0); //@line 128 "../../iup_label.c"
    $23 = $4; //@line 130 "../../iup_label.c"
    $24 = ((($23)) + 72|0); //@line 130 "../../iup_label.c"
    $25 = HEAP32[$24>>2]|0; //@line 130 "../../iup_label.c"
    $26 = ((($25)) + 4|0); //@line 130 "../../iup_label.c"
    $27 = HEAP32[$26>>2]|0; //@line 130 "../../iup_label.c"
    $28 = $27<<1; //@line 130 "../../iup_label.c"
    $29 = HEAP32[$8>>2]|0; //@line 130 "../../iup_label.c"
    $30 = (($29) + ($28))|0; //@line 130 "../../iup_label.c"
    HEAP32[$8>>2] = $30; //@line 130 "../../iup_label.c"
    $31 = $4; //@line 131 "../../iup_label.c"
    $32 = ((($31)) + 72|0); //@line 131 "../../iup_label.c"
    $33 = HEAP32[$32>>2]|0; //@line 131 "../../iup_label.c"
    $34 = ((($33)) + 8|0); //@line 131 "../../iup_label.c"
    $35 = HEAP32[$34>>2]|0; //@line 131 "../../iup_label.c"
    $36 = $35<<1; //@line 131 "../../iup_label.c"
    $37 = HEAP32[$9>>2]|0; //@line 131 "../../iup_label.c"
    $38 = (($37) + ($36))|0; //@line 131 "../../iup_label.c"
    HEAP32[$9>>2] = $38; //@line 131 "../../iup_label.c"
    break;
   }
   $39 = (_IupGetAttribute($21,20508)|0); //@line 136 "../../iup_label.c"
   $11 = $39; //@line 136 "../../iup_label.c"
   $40 = $11; //@line 137 "../../iup_label.c"
   $41 = (_iupStrProcessMnemonic($40,0,0)|0); //@line 137 "../../iup_label.c"
   $12 = $41; //@line 137 "../../iup_label.c"
   $42 = $4; //@line 138 "../../iup_label.c"
   $43 = $12; //@line 138 "../../iup_label.c"
   _iupdrvFontGetMultiLineStringSize($42,$43,$8,$9); //@line 138 "../../iup_label.c"
   $44 = $12; //@line 139 "../../iup_label.c"
   $45 = ($44|0)!=(0|0); //@line 139 "../../iup_label.c"
   if ($45) {
    $46 = $12; //@line 139 "../../iup_label.c"
    $47 = $11; //@line 139 "../../iup_label.c"
    $48 = ($46|0)!=($47|0); //@line 139 "../../iup_label.c"
    if ($48) {
     $49 = $12; //@line 139 "../../iup_label.c"
     _free($49); //@line 139 "../../iup_label.c"
    }
   }
   $50 = $4; //@line 141 "../../iup_label.c"
   $51 = ((($50)) + 72|0); //@line 141 "../../iup_label.c"
   $52 = HEAP32[$51>>2]|0; //@line 141 "../../iup_label.c"
   $53 = ((($52)) + 4|0); //@line 141 "../../iup_label.c"
   $54 = HEAP32[$53>>2]|0; //@line 141 "../../iup_label.c"
   $55 = $54<<1; //@line 141 "../../iup_label.c"
   $56 = HEAP32[$8>>2]|0; //@line 141 "../../iup_label.c"
   $57 = (($56) + ($55))|0; //@line 141 "../../iup_label.c"
   HEAP32[$8>>2] = $57; //@line 141 "../../iup_label.c"
   $58 = $4; //@line 142 "../../iup_label.c"
   $59 = ((($58)) + 72|0); //@line 142 "../../iup_label.c"
   $60 = HEAP32[$59>>2]|0; //@line 142 "../../iup_label.c"
   $61 = ((($60)) + 8|0); //@line 142 "../../iup_label.c"
   $62 = HEAP32[$61>>2]|0; //@line 142 "../../iup_label.c"
   $63 = $62<<1; //@line 142 "../../iup_label.c"
   $64 = HEAP32[$9>>2]|0; //@line 142 "../../iup_label.c"
   $65 = (($64) + ($63))|0; //@line 142 "../../iup_label.c"
   HEAP32[$9>>2] = $65; //@line 142 "../../iup_label.c"
  }
 } while(0);
 $66 = HEAP32[$8>>2]|0; //@line 145 "../../iup_label.c"
 $67 = $5; //@line 145 "../../iup_label.c"
 HEAP32[$67>>2] = $66; //@line 145 "../../iup_label.c"
 $68 = HEAP32[$9>>2]|0; //@line 146 "../../iup_label.c"
 $69 = $6; //@line 146 "../../iup_label.c"
 HEAP32[$69>>2] = $68; //@line 146 "../../iup_label.c"
 STACKTOP = sp;return; //@line 147 "../../iup_label.c"
}
function _iLabelGetSeparatorAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 51 "../../iup_label.c"
 $4 = ((($3)) + 16|0); //@line 51 "../../iup_label.c"
 $5 = HEAP32[$4>>2]|0; //@line 51 "../../iup_label.c"
 $6 = ($5|0)!=(0|0); //@line 51 "../../iup_label.c"
 do {
  if ($6) {
   $7 = $2; //@line 53 "../../iup_label.c"
   $8 = ((($7)) + 72|0); //@line 53 "../../iup_label.c"
   $9 = HEAP32[$8>>2]|0; //@line 53 "../../iup_label.c"
   $10 = HEAP32[$9>>2]|0; //@line 53 "../../iup_label.c"
   $11 = ($10|0)==(0); //@line 53 "../../iup_label.c"
   if ($11) {
    $1 = 19951; //@line 54 "../../iup_label.c"
    break;
   }
   $12 = $2; //@line 55 "../../iup_label.c"
   $13 = ((($12)) + 72|0); //@line 55 "../../iup_label.c"
   $14 = HEAP32[$13>>2]|0; //@line 55 "../../iup_label.c"
   $15 = HEAP32[$14>>2]|0; //@line 55 "../../iup_label.c"
   $16 = ($15|0)==(1); //@line 55 "../../iup_label.c"
   if ($16) {
    $1 = 19983; //@line 56 "../../iup_label.c"
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
 } while(0);
 if ((label|0) == 6) {
  $1 = 0; //@line 58 "../../iup_label.c"
 }
 $17 = $1; //@line 59 "../../iup_label.c"
 STACKTOP = sp;return ($17|0); //@line 59 "../../iup_label.c"
}
function _iLabelSetSeparatorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 27 "../../iup_label.c"
 $6 = ((($5)) + 16|0); //@line 27 "../../iup_label.c"
 $7 = HEAP32[$6>>2]|0; //@line 27 "../../iup_label.c"
 $8 = ($7|0)!=(0|0); //@line 27 "../../iup_label.c"
 if ($8) {
  $2 = 0; //@line 28 "../../iup_label.c"
  $31 = $2; //@line 47 "../../iup_label.c"
  STACKTOP = sp;return ($31|0); //@line 47 "../../iup_label.c"
 }
 $9 = $4; //@line 30 "../../iup_label.c"
 $10 = ($9|0)!=(0|0); //@line 30 "../../iup_label.c"
 do {
  if ($10) {
   $11 = $4; //@line 32 "../../iup_label.c"
   $12 = (_iupStrEqualNoCase($11,19951)|0); //@line 32 "../../iup_label.c"
   $13 = ($12|0)!=(0); //@line 32 "../../iup_label.c"
   if ($13) {
    $14 = $3; //@line 34 "../../iup_label.c"
    $15 = ((($14)) + 20|0); //@line 34 "../../iup_label.c"
    $16 = HEAP32[$15>>2]|0; //@line 34 "../../iup_label.c"
    $17 = $16 & 12; //@line 34 "../../iup_label.c"
    $18 = ($17|0)!=(0); //@line 34 "../../iup_label.c"
    if ($18) {
     break;
    }
    $19 = $3; //@line 35 "../../iup_label.c"
    $20 = ((($19)) + 20|0); //@line 35 "../../iup_label.c"
    HEAP32[$20>>2] = 32; //@line 35 "../../iup_label.c"
    break;
   }
   $21 = $4; //@line 37 "../../iup_label.c"
   $22 = (_iupStrEqualNoCase($21,19983)|0); //@line 37 "../../iup_label.c"
   $23 = ($22|0)!=(0); //@line 37 "../../iup_label.c"
   if ($23) {
    $24 = $3; //@line 39 "../../iup_label.c"
    $25 = ((($24)) + 20|0); //@line 39 "../../iup_label.c"
    $26 = HEAP32[$25>>2]|0; //@line 39 "../../iup_label.c"
    $27 = $26 & 3; //@line 39 "../../iup_label.c"
    $28 = ($27|0)!=(0); //@line 39 "../../iup_label.c"
    if ($28) {
     break;
    }
    $29 = $3; //@line 40 "../../iup_label.c"
    $30 = ((($29)) + 20|0); //@line 40 "../../iup_label.c"
    HEAP32[$30>>2] = 16; //@line 40 "../../iup_label.c"
    break;
   } else {
    $2 = 0; //@line 43 "../../iup_label.c"
    $31 = $2; //@line 47 "../../iup_label.c"
    STACKTOP = sp;return ($31|0); //@line 47 "../../iup_label.c"
   }
  }
 } while(0);
 $2 = 1; //@line 46 "../../iup_label.c"
 $31 = $2; //@line 47 "../../iup_label.c"
 STACKTOP = sp;return ($31|0); //@line 47 "../../iup_label.c"
}
function _IupRefreshChildren($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $1 = $0;
 $8 = $1; //@line 27 "../../iup_layout.c"
 $9 = (_iupObjectCheck($8)|0); //@line 27 "../../iup_layout.c"
 $10 = ($9|0)!=(0); //@line 27 "../../iup_layout.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 71 "../../iup_layout.c"
 }
 $11 = $1; //@line 31 "../../iup_layout.c"
 $12 = ((($11)) + 16|0); //@line 31 "../../iup_layout.c"
 $13 = HEAP32[$12>>2]|0; //@line 31 "../../iup_layout.c"
 $14 = ($13|0)!=(0|0); //@line 31 "../../iup_layout.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 71 "../../iup_layout.c"
 }
 $15 = $1; //@line 35 "../../iup_layout.c"
 $16 = ((($15)) + 64|0); //@line 35 "../../iup_layout.c"
 $17 = HEAP32[$16>>2]|0; //@line 35 "../../iup_layout.c"
 $18 = ($17|0)!=(0|0); //@line 35 "../../iup_layout.c"
 if (!($18)) {
  STACKTOP = sp;return; //@line 71 "../../iup_layout.c"
 }
 $19 = $1; //@line 40 "../../iup_layout.c"
 $20 = (_IupGetDialog($19)|0); //@line 40 "../../iup_layout.c"
 $3 = $20; //@line 40 "../../iup_layout.c"
 $21 = $3; //@line 41 "../../iup_layout.c"
 $22 = ($21|0)!=(0|0); //@line 41 "../../iup_layout.c"
 if (!($22)) {
  STACKTOP = sp;return; //@line 71 "../../iup_layout.c"
 }
 $23 = $3; //@line 41 "../../iup_layout.c"
 $24 = $1; //@line 41 "../../iup_layout.c"
 $25 = ($23|0)==($24|0); //@line 41 "../../iup_layout.c"
 if ($25) {
  STACKTOP = sp;return; //@line 71 "../../iup_layout.c"
 }
 $26 = $3; //@line 47 "../../iup_layout.c"
 $27 = (_iupAttribGetBoolean($26,14224)|0); //@line 47 "../../iup_layout.c"
 $2 = $27; //@line 47 "../../iup_layout.c"
 HEAP32[$5>>2] = 0; //@line 51 "../../iup_layout.c"
 HEAP32[$6>>2] = 0; //@line 51 "../../iup_layout.c"
 $28 = $1; //@line 51 "../../iup_layout.c"
 $29 = ((($28)) + 20|0); //@line 51 "../../iup_layout.c"
 $30 = HEAP32[$29>>2]|0; //@line 51 "../../iup_layout.c"
 HEAP32[$7>>2] = $30; //@line 51 "../../iup_layout.c"
 $31 = $1; //@line 52 "../../iup_layout.c"
 _iupClassObjectComputeNaturalSize($31,$5,$6,$7); //@line 52 "../../iup_layout.c"
 $32 = $1; //@line 58 "../../iup_layout.c"
 $33 = $2; //@line 58 "../../iup_layout.c"
 _iupClassObjectSetChildrenCurrentSize($32,$33); //@line 58 "../../iup_layout.c"
 $34 = $1; //@line 61 "../../iup_layout.c"
 $35 = $1; //@line 61 "../../iup_layout.c"
 $36 = ((($35)) + 28|0); //@line 61 "../../iup_layout.c"
 $37 = HEAP32[$36>>2]|0; //@line 61 "../../iup_layout.c"
 $38 = $1; //@line 61 "../../iup_layout.c"
 $39 = ((($38)) + 32|0); //@line 61 "../../iup_layout.c"
 $40 = HEAP32[$39>>2]|0; //@line 61 "../../iup_layout.c"
 _iupClassObjectSetChildrenPosition($34,$37,$40); //@line 61 "../../iup_layout.c"
 $41 = $1; //@line 66 "../../iup_layout.c"
 $42 = ((($41)) + 64|0); //@line 66 "../../iup_layout.c"
 $43 = HEAP32[$42>>2]|0; //@line 66 "../../iup_layout.c"
 $4 = $43; //@line 66 "../../iup_layout.c"
 while(1) {
  $44 = $4; //@line 66 "../../iup_layout.c"
  $45 = ($44|0)!=(0|0); //@line 66 "../../iup_layout.c"
  if (!($45)) {
   break;
  }
  $46 = $4; //@line 68 "../../iup_layout.c"
  $47 = ((($46)) + 16|0); //@line 68 "../../iup_layout.c"
  $48 = HEAP32[$47>>2]|0; //@line 68 "../../iup_layout.c"
  $49 = ($48|0)!=(0|0); //@line 68 "../../iup_layout.c"
  if ($49) {
   $50 = $4; //@line 69 "../../iup_layout.c"
   _iupLayoutUpdate($50); //@line 69 "../../iup_layout.c"
  }
  $51 = $4; //@line 66 "../../iup_layout.c"
  $52 = ((($51)) + 68|0); //@line 66 "../../iup_layout.c"
  $53 = HEAP32[$52>>2]|0; //@line 66 "../../iup_layout.c"
  $4 = $53; //@line 66 "../../iup_layout.c"
 }
 STACKTOP = sp;return; //@line 71 "../../iup_layout.c"
}
function _iupLayoutUpdate($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 149 "../../iup_layout.c"
 $4 = ((($3)) + 24|0); //@line 149 "../../iup_layout.c"
 $5 = HEAP32[$4>>2]|0; //@line 149 "../../iup_layout.c"
 $6 = $5 & 2; //@line 149 "../../iup_layout.c"
 $7 = ($6|0)!=(0); //@line 149 "../../iup_layout.c"
 if ($7) {
  STACKTOP = sp;return; //@line 161 "../../iup_layout.c"
 }
 $8 = $1; //@line 153 "../../iup_layout.c"
 _iupClassObjectLayoutUpdate($8); //@line 153 "../../iup_layout.c"
 $9 = $1; //@line 156 "../../iup_layout.c"
 $10 = ((($9)) + 64|0); //@line 156 "../../iup_layout.c"
 $11 = HEAP32[$10>>2]|0; //@line 156 "../../iup_layout.c"
 $2 = $11; //@line 156 "../../iup_layout.c"
 while(1) {
  $12 = $2; //@line 156 "../../iup_layout.c"
  $13 = ($12|0)!=(0|0); //@line 156 "../../iup_layout.c"
  if (!($13)) {
   break;
  }
  $14 = $2; //@line 158 "../../iup_layout.c"
  $15 = ((($14)) + 16|0); //@line 158 "../../iup_layout.c"
  $16 = HEAP32[$15>>2]|0; //@line 158 "../../iup_layout.c"
  $17 = ($16|0)!=(0|0); //@line 158 "../../iup_layout.c"
  if ($17) {
   $18 = $2; //@line 159 "../../iup_layout.c"
   _iupLayoutUpdate($18); //@line 159 "../../iup_layout.c"
  }
  $19 = $2; //@line 156 "../../iup_layout.c"
  $20 = ((($19)) + 68|0); //@line 156 "../../iup_layout.c"
  $21 = HEAP32[$20>>2]|0; //@line 156 "../../iup_layout.c"
  $2 = $21; //@line 156 "../../iup_layout.c"
 }
 STACKTOP = sp;return; //@line 161 "../../iup_layout.c"
}
function _IupRefresh($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 78 "../../iup_layout.c"
 $4 = (_iupObjectCheck($3)|0); //@line 78 "../../iup_layout.c"
 $5 = ($4|0)!=(0); //@line 78 "../../iup_layout.c"
 if (!($5)) {
  STACKTOP = sp;return; //@line 89 "../../iup_layout.c"
 }
 $6 = $1; //@line 81 "../../iup_layout.c"
 $7 = (_IupGetDialog($6)|0); //@line 81 "../../iup_layout.c"
 $2 = $7; //@line 81 "../../iup_layout.c"
 $8 = $2; //@line 82 "../../iup_layout.c"
 $9 = ($8|0)!=(0|0); //@line 82 "../../iup_layout.c"
 if (!($9)) {
  STACKTOP = sp;return; //@line 89 "../../iup_layout.c"
 }
 $10 = $2; //@line 84 "../../iup_layout.c"
 _iupLayoutCompute($10); //@line 84 "../../iup_layout.c"
 $11 = $2; //@line 86 "../../iup_layout.c"
 $12 = ((($11)) + 16|0); //@line 86 "../../iup_layout.c"
 $13 = HEAP32[$12>>2]|0; //@line 86 "../../iup_layout.c"
 $14 = ($13|0)!=(0|0); //@line 86 "../../iup_layout.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 89 "../../iup_layout.c"
 }
 $15 = $2; //@line 87 "../../iup_layout.c"
 _iupLayoutUpdate($15); //@line 87 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 89 "../../iup_layout.c"
}
function _iupLayoutCompute($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 167 "../../iup_layout.c"
 $4 = (_iupAttribGetBoolean($3,14224)|0); //@line 167 "../../iup_layout.c"
 $2 = $4; //@line 167 "../../iup_layout.c"
 $5 = $1; //@line 179 "../../iup_layout.c"
 _iupBaseComputeNaturalSize($5); //@line 179 "../../iup_layout.c"
 $6 = $1; //@line 187 "../../iup_layout.c"
 $7 = $2; //@line 187 "../../iup_layout.c"
 _iupBaseSetCurrentSize($6,0,0,$7); //@line 187 "../../iup_layout.c"
 $8 = $1; //@line 192 "../../iup_layout.c"
 _iupBaseSetPosition($8,0,0); //@line 192 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 193 "../../iup_layout.c"
}
function _iupBaseComputeNaturalSize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp + 20|0;
 $3 = sp + 16|0;
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $1 = $0;
 $8 = $1; //@line 219 "../../iup_layout.c"
 $9 = ((($8)) + 36|0); //@line 219 "../../iup_layout.c"
 $10 = HEAP32[$9>>2]|0; //@line 219 "../../iup_layout.c"
 $11 = $1; //@line 219 "../../iup_layout.c"
 $12 = ((($11)) + 44|0); //@line 219 "../../iup_layout.c"
 HEAP32[$12>>2] = $10; //@line 219 "../../iup_layout.c"
 $13 = $1; //@line 220 "../../iup_layout.c"
 $14 = ((($13)) + 40|0); //@line 220 "../../iup_layout.c"
 $15 = HEAP32[$14>>2]|0; //@line 220 "../../iup_layout.c"
 $16 = $1; //@line 220 "../../iup_layout.c"
 $17 = ((($16)) + 48|0); //@line 220 "../../iup_layout.c"
 HEAP32[$17>>2] = $15; //@line 220 "../../iup_layout.c"
 $18 = $1; //@line 222 "../../iup_layout.c"
 $19 = ((($18)) + 4|0); //@line 222 "../../iup_layout.c"
 $20 = HEAP32[$19>>2]|0; //@line 222 "../../iup_layout.c"
 $21 = ((($20)) + 12|0); //@line 222 "../../iup_layout.c"
 $22 = HEAP32[$21>>2]|0; //@line 222 "../../iup_layout.c"
 $23 = ($22|0)!=(0); //@line 222 "../../iup_layout.c"
 do {
  if ($23) {
   label = 3;
  } else {
   $24 = $1; //@line 223 "../../iup_layout.c"
   $25 = ((($24)) + 4|0); //@line 223 "../../iup_layout.c"
   $26 = HEAP32[$25>>2]|0; //@line 223 "../../iup_layout.c"
   $27 = ((($26)) + 8|0); //@line 223 "../../iup_layout.c"
   $28 = HEAP32[$27>>2]|0; //@line 223 "../../iup_layout.c"
   $29 = ($28|0)==(3); //@line 223 "../../iup_layout.c"
   if ($29) {
    label = 3;
   } else {
    $100 = $1; //@line 256 "../../iup_layout.c"
    $101 = ((($100)) + 44|0); //@line 256 "../../iup_layout.c"
    $102 = HEAP32[$101>>2]|0; //@line 256 "../../iup_layout.c"
    $103 = ($102|0)<=(0); //@line 256 "../../iup_layout.c"
    if (!($103)) {
     $104 = $1; //@line 256 "../../iup_layout.c"
     $105 = ((($104)) + 48|0); //@line 256 "../../iup_layout.c"
     $106 = HEAP32[$105>>2]|0; //@line 256 "../../iup_layout.c"
     $107 = ($106|0)<=(0); //@line 256 "../../iup_layout.c"
     if (!($107)) {
      break;
     }
    }
    HEAP32[$5>>2] = 0; //@line 258 "../../iup_layout.c"
    HEAP32[$6>>2] = 0; //@line 258 "../../iup_layout.c"
    $108 = $1; //@line 260 "../../iup_layout.c"
    _iupClassObjectComputeNaturalSize($108,$5,$6,$7); //@line 260 "../../iup_layout.c"
    $109 = $1; //@line 262 "../../iup_layout.c"
    $110 = ((($109)) + 44|0); //@line 262 "../../iup_layout.c"
    $111 = HEAP32[$110>>2]|0; //@line 262 "../../iup_layout.c"
    $112 = ($111|0)<=(0); //@line 262 "../../iup_layout.c"
    if ($112) {
     $113 = HEAP32[$5>>2]|0; //@line 262 "../../iup_layout.c"
     $114 = $1; //@line 262 "../../iup_layout.c"
     $115 = ((($114)) + 44|0); //@line 262 "../../iup_layout.c"
     HEAP32[$115>>2] = $113; //@line 262 "../../iup_layout.c"
    }
    $116 = $1; //@line 263 "../../iup_layout.c"
    $117 = ((($116)) + 48|0); //@line 263 "../../iup_layout.c"
    $118 = HEAP32[$117>>2]|0; //@line 263 "../../iup_layout.c"
    $119 = ($118|0)<=(0); //@line 263 "../../iup_layout.c"
    if ($119) {
     $120 = HEAP32[$6>>2]|0; //@line 263 "../../iup_layout.c"
     $121 = $1; //@line 263 "../../iup_layout.c"
     $122 = ((($121)) + 48|0); //@line 263 "../../iup_layout.c"
     HEAP32[$122>>2] = $120; //@line 263 "../../iup_layout.c"
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 3) {
   HEAP32[$2>>2] = 0; //@line 225 "../../iup_layout.c"
   HEAP32[$3>>2] = 0; //@line 225 "../../iup_layout.c"
   HEAP32[$4>>2] = 0; //@line 225 "../../iup_layout.c"
   $30 = $1; //@line 230 "../../iup_layout.c"
   _iupBaseContainerUpdateExpand($30); //@line 230 "../../iup_layout.c"
   $31 = $1; //@line 233 "../../iup_layout.c"
   _iupClassObjectComputeNaturalSize($31,$2,$3,$4); //@line 233 "../../iup_layout.c"
   $32 = $1; //@line 235 "../../iup_layout.c"
   $33 = ((($32)) + 4|0); //@line 235 "../../iup_layout.c"
   $34 = HEAP32[$33>>2]|0; //@line 235 "../../iup_layout.c"
   $35 = ((($34)) + 8|0); //@line 235 "../../iup_layout.c"
   $36 = HEAP32[$35>>2]|0; //@line 235 "../../iup_layout.c"
   $37 = ($36|0)==(3); //@line 235 "../../iup_layout.c"
   $38 = HEAP32[$4>>2]|0; //@line 241 "../../iup_layout.c"
   $39 = $1; //@line 241 "../../iup_layout.c"
   $40 = ((($39)) + 20|0); //@line 241 "../../iup_layout.c"
   $41 = HEAP32[$40>>2]|0; //@line 241 "../../iup_layout.c"
   if (!($37)) {
    $75 = $41 & $38; //@line 248 "../../iup_layout.c"
    HEAP32[$40>>2] = $75; //@line 248 "../../iup_layout.c"
    $76 = $1; //@line 249 "../../iup_layout.c"
    $77 = ((($76)) + 44|0); //@line 249 "../../iup_layout.c"
    $78 = HEAP32[$77>>2]|0; //@line 249 "../../iup_layout.c"
    $79 = HEAP32[$2>>2]|0; //@line 249 "../../iup_layout.c"
    $80 = ($78|0)>($79|0); //@line 249 "../../iup_layout.c"
    if ($80) {
     $81 = $1; //@line 249 "../../iup_layout.c"
     $82 = ((($81)) + 44|0); //@line 249 "../../iup_layout.c"
     $83 = HEAP32[$82>>2]|0; //@line 249 "../../iup_layout.c"
     $87 = $83;
    } else {
     $84 = HEAP32[$2>>2]|0; //@line 249 "../../iup_layout.c"
     $87 = $84;
    }
    $85 = $1; //@line 249 "../../iup_layout.c"
    $86 = ((($85)) + 44|0); //@line 249 "../../iup_layout.c"
    HEAP32[$86>>2] = $87; //@line 249 "../../iup_layout.c"
    $88 = $1; //@line 250 "../../iup_layout.c"
    $89 = ((($88)) + 48|0); //@line 250 "../../iup_layout.c"
    $90 = HEAP32[$89>>2]|0; //@line 250 "../../iup_layout.c"
    $91 = HEAP32[$3>>2]|0; //@line 250 "../../iup_layout.c"
    $92 = ($90|0)>($91|0); //@line 250 "../../iup_layout.c"
    if ($92) {
     $93 = $1; //@line 250 "../../iup_layout.c"
     $94 = ((($93)) + 48|0); //@line 250 "../../iup_layout.c"
     $95 = HEAP32[$94>>2]|0; //@line 250 "../../iup_layout.c"
     $99 = $95;
    } else {
     $96 = HEAP32[$3>>2]|0; //@line 250 "../../iup_layout.c"
     $99 = $96;
    }
    $97 = $1; //@line 250 "../../iup_layout.c"
    $98 = ((($97)) + 48|0); //@line 250 "../../iup_layout.c"
    HEAP32[$98>>2] = $99; //@line 250 "../../iup_layout.c"
    break;
   }
   $42 = $41 | $38; //@line 241 "../../iup_layout.c"
   HEAP32[$40>>2] = $42; //@line 241 "../../iup_layout.c"
   $43 = $1; //@line 242 "../../iup_layout.c"
   $44 = ((($43)) + 44|0); //@line 242 "../../iup_layout.c"
   $45 = HEAP32[$44>>2]|0; //@line 242 "../../iup_layout.c"
   $46 = ($45|0)<=(0); //@line 242 "../../iup_layout.c"
   if ($46) {
    $47 = $1; //@line 242 "../../iup_layout.c"
    $48 = ((($47)) + 52|0); //@line 242 "../../iup_layout.c"
    $49 = HEAP32[$48>>2]|0; //@line 242 "../../iup_layout.c"
    $50 = HEAP32[$2>>2]|0; //@line 242 "../../iup_layout.c"
    $51 = ($49|0)>($50|0); //@line 242 "../../iup_layout.c"
    if ($51) {
     $52 = $1; //@line 242 "../../iup_layout.c"
     $53 = ((($52)) + 52|0); //@line 242 "../../iup_layout.c"
     $54 = HEAP32[$53>>2]|0; //@line 242 "../../iup_layout.c"
     $58 = $54;
    } else {
     $55 = HEAP32[$2>>2]|0; //@line 242 "../../iup_layout.c"
     $58 = $55;
    }
    $56 = $1; //@line 242 "../../iup_layout.c"
    $57 = ((($56)) + 44|0); //@line 242 "../../iup_layout.c"
    HEAP32[$57>>2] = $58; //@line 242 "../../iup_layout.c"
   }
   $59 = $1; //@line 243 "../../iup_layout.c"
   $60 = ((($59)) + 48|0); //@line 243 "../../iup_layout.c"
   $61 = HEAP32[$60>>2]|0; //@line 243 "../../iup_layout.c"
   $62 = ($61|0)<=(0); //@line 243 "../../iup_layout.c"
   if ($62) {
    $63 = $1; //@line 243 "../../iup_layout.c"
    $64 = ((($63)) + 56|0); //@line 243 "../../iup_layout.c"
    $65 = HEAP32[$64>>2]|0; //@line 243 "../../iup_layout.c"
    $66 = HEAP32[$3>>2]|0; //@line 243 "../../iup_layout.c"
    $67 = ($65|0)>($66|0); //@line 243 "../../iup_layout.c"
    if ($67) {
     $68 = $1; //@line 243 "../../iup_layout.c"
     $69 = ((($68)) + 56|0); //@line 243 "../../iup_layout.c"
     $70 = HEAP32[$69>>2]|0; //@line 243 "../../iup_layout.c"
     $74 = $70;
    } else {
     $71 = HEAP32[$3>>2]|0; //@line 243 "../../iup_layout.c"
     $74 = $71;
    }
    $72 = $1; //@line 243 "../../iup_layout.c"
    $73 = ((($72)) + 48|0); //@line 243 "../../iup_layout.c"
    HEAP32[$73>>2] = $74; //@line 243 "../../iup_layout.c"
   }
  }
 } while(0);
 $123 = $1; //@line 268 "../../iup_layout.c"
 $124 = $1; //@line 268 "../../iup_layout.c"
 $125 = ((($124)) + 44|0); //@line 268 "../../iup_layout.c"
 $126 = $1; //@line 268 "../../iup_layout.c"
 $127 = ((($126)) + 48|0); //@line 268 "../../iup_layout.c"
 _iupLayoutApplyMinMaxSize($123,$125,$127); //@line 268 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 269 "../../iup_layout.c"
}
function _iupBaseSetCurrentSize($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 273 "../../iup_layout.c"
 $9 = ((($8)) + 4|0); //@line 273 "../../iup_layout.c"
 $10 = HEAP32[$9>>2]|0; //@line 273 "../../iup_layout.c"
 $11 = ((($10)) + 8|0); //@line 273 "../../iup_layout.c"
 $12 = HEAP32[$11>>2]|0; //@line 273 "../../iup_layout.c"
 $13 = ($12|0)==(3); //@line 273 "../../iup_layout.c"
 $14 = $4; //@line 279 "../../iup_layout.c"
 if ($13) {
  $15 = ((($14)) + 52|0); //@line 279 "../../iup_layout.c"
  $16 = HEAP32[$15>>2]|0; //@line 279 "../../iup_layout.c"
  $17 = ($16|0)!=(0); //@line 279 "../../iup_layout.c"
  if (!($17)) {
   $18 = $4; //@line 279 "../../iup_layout.c"
   $19 = ((($18)) + 44|0); //@line 279 "../../iup_layout.c"
   $20 = HEAP32[$19>>2]|0; //@line 279 "../../iup_layout.c"
   $21 = $4; //@line 279 "../../iup_layout.c"
   $22 = ((($21)) + 52|0); //@line 279 "../../iup_layout.c"
   HEAP32[$22>>2] = $20; //@line 279 "../../iup_layout.c"
  }
  $23 = $4; //@line 280 "../../iup_layout.c"
  $24 = ((($23)) + 56|0); //@line 280 "../../iup_layout.c"
  $25 = HEAP32[$24>>2]|0; //@line 280 "../../iup_layout.c"
  $26 = ($25|0)!=(0); //@line 280 "../../iup_layout.c"
  if (!($26)) {
   $27 = $4; //@line 280 "../../iup_layout.c"
   $28 = ((($27)) + 48|0); //@line 280 "../../iup_layout.c"
   $29 = HEAP32[$28>>2]|0; //@line 280 "../../iup_layout.c"
   $30 = $4; //@line 280 "../../iup_layout.c"
   $31 = ((($30)) + 56|0); //@line 280 "../../iup_layout.c"
   HEAP32[$31>>2] = $29; //@line 280 "../../iup_layout.c"
  }
 } else {
  $32 = ((($14)) + 4|0); //@line 284 "../../iup_layout.c"
  $33 = HEAP32[$32>>2]|0; //@line 284 "../../iup_layout.c"
  $34 = ((($33)) + 12|0); //@line 284 "../../iup_layout.c"
  $35 = HEAP32[$34>>2]|0; //@line 284 "../../iup_layout.c"
  $36 = ($35|0)==(0); //@line 284 "../../iup_layout.c"
  $37 = $7; //@line 284 "../../iup_layout.c"
  $38 = ($37|0)!=(0); //@line 284 "../../iup_layout.c"
  $or$cond = $36 | $38; //@line 284 "../../iup_layout.c"
  if (!($or$cond)) {
   $39 = $4; //@line 288 "../../iup_layout.c"
   $40 = ((($39)) + 44|0); //@line 288 "../../iup_layout.c"
   $41 = HEAP32[$40>>2]|0; //@line 288 "../../iup_layout.c"
   $42 = $5; //@line 288 "../../iup_layout.c"
   $43 = ($41|0)>($42|0); //@line 288 "../../iup_layout.c"
   if ($43) {
    $44 = $4; //@line 288 "../../iup_layout.c"
    $45 = ((($44)) + 44|0); //@line 288 "../../iup_layout.c"
    $46 = HEAP32[$45>>2]|0; //@line 288 "../../iup_layout.c"
    $48 = $46;
   } else {
    $47 = $5; //@line 288 "../../iup_layout.c"
    $48 = $47;
   }
   $5 = $48; //@line 288 "../../iup_layout.c"
   $49 = $4; //@line 289 "../../iup_layout.c"
   $50 = ((($49)) + 48|0); //@line 289 "../../iup_layout.c"
   $51 = HEAP32[$50>>2]|0; //@line 289 "../../iup_layout.c"
   $52 = $6; //@line 289 "../../iup_layout.c"
   $53 = ($51|0)>($52|0); //@line 289 "../../iup_layout.c"
   if ($53) {
    $54 = $4; //@line 289 "../../iup_layout.c"
    $55 = ((($54)) + 48|0); //@line 289 "../../iup_layout.c"
    $56 = HEAP32[$55>>2]|0; //@line 289 "../../iup_layout.c"
    $58 = $56;
   } else {
    $57 = $6; //@line 289 "../../iup_layout.c"
    $58 = $57;
   }
   $6 = $58; //@line 289 "../../iup_layout.c"
  }
  $59 = $4; //@line 293 "../../iup_layout.c"
  $60 = ((($59)) + 20|0); //@line 293 "../../iup_layout.c"
  $61 = HEAP32[$60>>2]|0; //@line 293 "../../iup_layout.c"
  $62 = $61 & 12; //@line 293 "../../iup_layout.c"
  $63 = ($62|0)!=(0); //@line 293 "../../iup_layout.c"
  if ($63) {
   label = 16;
  } else {
   $64 = $4; //@line 293 "../../iup_layout.c"
   $65 = ((($64)) + 20|0); //@line 293 "../../iup_layout.c"
   $66 = HEAP32[$65>>2]|0; //@line 293 "../../iup_layout.c"
   $67 = $66 & 32; //@line 293 "../../iup_layout.c"
   $68 = ($67|0)!=(0); //@line 293 "../../iup_layout.c"
   if ($68) {
    label = 16;
   } else {
    $70 = $4; //@line 293 "../../iup_layout.c"
    $71 = ((($70)) + 44|0); //@line 293 "../../iup_layout.c"
    $72 = HEAP32[$71>>2]|0; //@line 293 "../../iup_layout.c"
    $75 = $72;
   }
  }
  if ((label|0) == 16) {
   $69 = $5; //@line 293 "../../iup_layout.c"
   $75 = $69;
  }
  $73 = $4; //@line 293 "../../iup_layout.c"
  $74 = ((($73)) + 52|0); //@line 293 "../../iup_layout.c"
  HEAP32[$74>>2] = $75; //@line 293 "../../iup_layout.c"
  $76 = $4; //@line 294 "../../iup_layout.c"
  $77 = ((($76)) + 20|0); //@line 294 "../../iup_layout.c"
  $78 = HEAP32[$77>>2]|0; //@line 294 "../../iup_layout.c"
  $79 = $78 & 3; //@line 294 "../../iup_layout.c"
  $80 = ($79|0)!=(0); //@line 294 "../../iup_layout.c"
  if ($80) {
   label = 20;
  } else {
   $81 = $4; //@line 294 "../../iup_layout.c"
   $82 = ((($81)) + 20|0); //@line 294 "../../iup_layout.c"
   $83 = HEAP32[$82>>2]|0; //@line 294 "../../iup_layout.c"
   $84 = $83 & 16; //@line 294 "../../iup_layout.c"
   $85 = ($84|0)!=(0); //@line 294 "../../iup_layout.c"
   if ($85) {
    label = 20;
   } else {
    $87 = $4; //@line 294 "../../iup_layout.c"
    $88 = ((($87)) + 48|0); //@line 294 "../../iup_layout.c"
    $89 = HEAP32[$88>>2]|0; //@line 294 "../../iup_layout.c"
    $92 = $89;
   }
  }
  if ((label|0) == 20) {
   $86 = $6; //@line 294 "../../iup_layout.c"
   $92 = $86;
  }
  $90 = $4; //@line 294 "../../iup_layout.c"
  $91 = ((($90)) + 56|0); //@line 294 "../../iup_layout.c"
  HEAP32[$91>>2] = $92; //@line 294 "../../iup_layout.c"
 }
 $93 = $4; //@line 298 "../../iup_layout.c"
 $94 = ((($93)) + 20|0); //@line 298 "../../iup_layout.c"
 $95 = HEAP32[$94>>2]|0; //@line 298 "../../iup_layout.c"
 $96 = $95 & 12; //@line 298 "../../iup_layout.c"
 $97 = ($96|0)!=(0); //@line 298 "../../iup_layout.c"
 if ($97) {
  label = 27;
 } else {
  $98 = $4; //@line 298 "../../iup_layout.c"
  $99 = ((($98)) + 20|0); //@line 298 "../../iup_layout.c"
  $100 = HEAP32[$99>>2]|0; //@line 298 "../../iup_layout.c"
  $101 = $100 & 3; //@line 298 "../../iup_layout.c"
  $102 = ($101|0)!=(0); //@line 298 "../../iup_layout.c"
  if ($102) {
   label = 27;
  } else {
   $103 = $4; //@line 299 "../../iup_layout.c"
   $104 = ((($103)) + 20|0); //@line 299 "../../iup_layout.c"
   $105 = HEAP32[$104>>2]|0; //@line 299 "../../iup_layout.c"
   $106 = $105 & 32; //@line 299 "../../iup_layout.c"
   $107 = ($106|0)!=(0); //@line 299 "../../iup_layout.c"
   if ($107) {
    label = 27;
   } else {
    $108 = $4; //@line 299 "../../iup_layout.c"
    $109 = ((($108)) + 20|0); //@line 299 "../../iup_layout.c"
    $110 = HEAP32[$109>>2]|0; //@line 299 "../../iup_layout.c"
    $111 = $110 & 16; //@line 299 "../../iup_layout.c"
    $112 = ($111|0)!=(0); //@line 299 "../../iup_layout.c"
    if ($112) {
     label = 27;
    }
   }
  }
 }
 if ((label|0) == 27) {
  $113 = $4; //@line 300 "../../iup_layout.c"
  $114 = $4; //@line 300 "../../iup_layout.c"
  $115 = ((($114)) + 52|0); //@line 300 "../../iup_layout.c"
  $116 = $4; //@line 300 "../../iup_layout.c"
  $117 = ((($116)) + 56|0); //@line 300 "../../iup_layout.c"
  _iupLayoutApplyMinMaxSize($113,$115,$117); //@line 300 "../../iup_layout.c"
 }
 $118 = $4; //@line 302 "../../iup_layout.c"
 $119 = ((($118)) + 64|0); //@line 302 "../../iup_layout.c"
 $120 = HEAP32[$119>>2]|0; //@line 302 "../../iup_layout.c"
 $121 = ($120|0)!=(0|0); //@line 302 "../../iup_layout.c"
 if (!($121)) {
  STACKTOP = sp;return; //@line 304 "../../iup_layout.c"
 }
 $122 = $4; //@line 303 "../../iup_layout.c"
 $123 = $7; //@line 303 "../../iup_layout.c"
 _iupClassObjectSetChildrenCurrentSize($122,$123); //@line 303 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 304 "../../iup_layout.c"
}
function _iupBaseSetPosition($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 308 "../../iup_layout.c"
 $7 = $3; //@line 308 "../../iup_layout.c"
 $8 = ((($7)) + 28|0); //@line 308 "../../iup_layout.c"
 HEAP32[$8>>2] = $6; //@line 308 "../../iup_layout.c"
 $9 = $5; //@line 309 "../../iup_layout.c"
 $10 = $3; //@line 309 "../../iup_layout.c"
 $11 = ((($10)) + 32|0); //@line 309 "../../iup_layout.c"
 HEAP32[$11>>2] = $9; //@line 309 "../../iup_layout.c"
 $12 = $3; //@line 311 "../../iup_layout.c"
 $13 = ((($12)) + 64|0); //@line 311 "../../iup_layout.c"
 $14 = HEAP32[$13>>2]|0; //@line 311 "../../iup_layout.c"
 $15 = ($14|0)!=(0|0); //@line 311 "../../iup_layout.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 313 "../../iup_layout.c"
 }
 $16 = $3; //@line 312 "../../iup_layout.c"
 $17 = $4; //@line 312 "../../iup_layout.c"
 $18 = $5; //@line 312 "../../iup_layout.c"
 _iupClassObjectSetChildrenPosition($16,$17,$18); //@line 312 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 313 "../../iup_layout.c"
}
function _iupLayoutApplyMinMaxSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = sp + 16|0;
 $8 = sp + 12|0;
 $10 = sp + 4|0;
 $11 = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $12 = $3; //@line 197 "../../iup_layout.c"
 $13 = ((($12)) + 24|0); //@line 197 "../../iup_layout.c"
 $14 = HEAP32[$13>>2]|0; //@line 197 "../../iup_layout.c"
 $15 = $14 & 8; //@line 197 "../../iup_layout.c"
 $16 = ($15|0)!=(0); //@line 197 "../../iup_layout.c"
 if ($16) {
  $17 = $3; //@line 199 "../../iup_layout.c"
  $18 = (_iupAttribGet($17,14231)|0); //@line 199 "../../iup_layout.c"
  $6 = $18; //@line 199 "../../iup_layout.c"
  HEAP32[$7>>2] = 0; //@line 200 "../../iup_layout.c"
  HEAP32[$8>>2] = 0; //@line 200 "../../iup_layout.c"
  $19 = $6; //@line 201 "../../iup_layout.c"
  (_iupStrToIntInt($19,$7,$8,120)|0); //@line 201 "../../iup_layout.c"
  $20 = $4; //@line 202 "../../iup_layout.c"
  $21 = ($20|0)!=(0|0); //@line 202 "../../iup_layout.c"
  if ($21) {
   $22 = $4; //@line 202 "../../iup_layout.c"
   $23 = HEAP32[$22>>2]|0; //@line 202 "../../iup_layout.c"
   $24 = HEAP32[$7>>2]|0; //@line 202 "../../iup_layout.c"
   $25 = ($23|0)<($24|0); //@line 202 "../../iup_layout.c"
   if ($25) {
    $26 = HEAP32[$7>>2]|0; //@line 202 "../../iup_layout.c"
    $27 = $4; //@line 202 "../../iup_layout.c"
    HEAP32[$27>>2] = $26; //@line 202 "../../iup_layout.c"
   }
  }
  $28 = $5; //@line 203 "../../iup_layout.c"
  $29 = ($28|0)!=(0|0); //@line 203 "../../iup_layout.c"
  if ($29) {
   $30 = $5; //@line 203 "../../iup_layout.c"
   $31 = HEAP32[$30>>2]|0; //@line 203 "../../iup_layout.c"
   $32 = HEAP32[$8>>2]|0; //@line 203 "../../iup_layout.c"
   $33 = ($31|0)<($32|0); //@line 203 "../../iup_layout.c"
   if ($33) {
    $34 = HEAP32[$8>>2]|0; //@line 203 "../../iup_layout.c"
    $35 = $5; //@line 203 "../../iup_layout.c"
    HEAP32[$35>>2] = $34; //@line 203 "../../iup_layout.c"
   }
  }
 }
 $36 = $3; //@line 206 "../../iup_layout.c"
 $37 = ((($36)) + 24|0); //@line 206 "../../iup_layout.c"
 $38 = HEAP32[$37>>2]|0; //@line 206 "../../iup_layout.c"
 $39 = $38 & 4; //@line 206 "../../iup_layout.c"
 $40 = ($39|0)!=(0); //@line 206 "../../iup_layout.c"
 if (!($40)) {
  STACKTOP = sp;return; //@line 214 "../../iup_layout.c"
 }
 $41 = $3; //@line 208 "../../iup_layout.c"
 $42 = (_iupAttribGet($41,14239)|0); //@line 208 "../../iup_layout.c"
 $9 = $42; //@line 208 "../../iup_layout.c"
 HEAP32[$10>>2] = 65535; //@line 209 "../../iup_layout.c"
 HEAP32[$11>>2] = 65535; //@line 209 "../../iup_layout.c"
 $43 = $9; //@line 210 "../../iup_layout.c"
 (_iupStrToIntInt($43,$10,$11,120)|0); //@line 210 "../../iup_layout.c"
 $44 = $4; //@line 211 "../../iup_layout.c"
 $45 = ($44|0)!=(0|0); //@line 211 "../../iup_layout.c"
 if ($45) {
  $46 = $4; //@line 211 "../../iup_layout.c"
  $47 = HEAP32[$46>>2]|0; //@line 211 "../../iup_layout.c"
  $48 = HEAP32[$10>>2]|0; //@line 211 "../../iup_layout.c"
  $49 = ($47|0)>($48|0); //@line 211 "../../iup_layout.c"
  if ($49) {
   $50 = HEAP32[$10>>2]|0; //@line 211 "../../iup_layout.c"
   $51 = $4; //@line 211 "../../iup_layout.c"
   HEAP32[$51>>2] = $50; //@line 211 "../../iup_layout.c"
  }
 }
 $52 = $5; //@line 212 "../../iup_layout.c"
 $53 = ($52|0)!=(0|0); //@line 212 "../../iup_layout.c"
 if (!($53)) {
  STACKTOP = sp;return; //@line 214 "../../iup_layout.c"
 }
 $54 = $5; //@line 212 "../../iup_layout.c"
 $55 = HEAP32[$54>>2]|0; //@line 212 "../../iup_layout.c"
 $56 = HEAP32[$11>>2]|0; //@line 212 "../../iup_layout.c"
 $57 = ($55|0)>($56|0); //@line 212 "../../iup_layout.c"
 if (!($57)) {
  STACKTOP = sp;return; //@line 214 "../../iup_layout.c"
 }
 $58 = HEAP32[$11>>2]|0; //@line 212 "../../iup_layout.c"
 $59 = $5; //@line 212 "../../iup_layout.c"
 HEAP32[$59>>2] = $58; //@line 212 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 214 "../../iup_layout.c"
}
function _IupUpdate($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 94 "../../iup_layout.c"
 $3 = (_iupObjectCheck($2)|0); //@line 94 "../../iup_layout.c"
 $4 = ($3|0)!=(0); //@line 94 "../../iup_layout.c"
 if (!($4)) {
  STACKTOP = sp;return; //@line 99 "../../iup_layout.c"
 }
 $5 = $1; //@line 97 "../../iup_layout.c"
 $6 = ((($5)) + 16|0); //@line 97 "../../iup_layout.c"
 $7 = HEAP32[$6>>2]|0; //@line 97 "../../iup_layout.c"
 $8 = ($7|0)!=(0|0); //@line 97 "../../iup_layout.c"
 if (!($8)) {
  STACKTOP = sp;return; //@line 99 "../../iup_layout.c"
 }
 $9 = $1; //@line 97 "../../iup_layout.c"
 $10 = ((($9)) + 4|0); //@line 97 "../../iup_layout.c"
 $11 = HEAP32[$10>>2]|0; //@line 97 "../../iup_layout.c"
 $12 = ((($11)) + 8|0); //@line 97 "../../iup_layout.c"
 $13 = HEAP32[$12>>2]|0; //@line 97 "../../iup_layout.c"
 $14 = ($13|0)!=(0); //@line 97 "../../iup_layout.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 99 "../../iup_layout.c"
 }
 $15 = $1; //@line 98 "../../iup_layout.c"
 _iupdrvPostRedraw($15); //@line 98 "../../iup_layout.c"
 STACKTOP = sp;return; //@line 99 "../../iup_layout.c"
}
function _iupLinkNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(14247)|0); //@line 82 "../../iup_link.c"
 $2 = (_iupClassNew($1)|0); //@line 82 "../../iup_link.c"
 $0 = $2; //@line 82 "../../iup_link.c"
 $3 = $0; //@line 84 "../../iup_link.c"
 HEAP32[$3>>2] = 14253; //@line 84 "../../iup_link.c"
 $4 = $0; //@line 85 "../../iup_link.c"
 $5 = ((($4)) + 4|0); //@line 85 "../../iup_link.c"
 HEAP32[$5>>2] = 14258; //@line 85 "../../iup_link.c"
 $6 = $0; //@line 86 "../../iup_link.c"
 $7 = ((($6)) + 8|0); //@line 86 "../../iup_link.c"
 HEAP32[$7>>2] = 1; //@line 86 "../../iup_link.c"
 $8 = $0; //@line 87 "../../iup_link.c"
 $9 = ((($8)) + 12|0); //@line 87 "../../iup_link.c"
 HEAP32[$9>>2] = 0; //@line 87 "../../iup_link.c"
 $10 = $0; //@line 88 "../../iup_link.c"
 $11 = ((($10)) + 16|0); //@line 88 "../../iup_link.c"
 HEAP32[$11>>2] = 1; //@line 88 "../../iup_link.c"
 $12 = $0; //@line 91 "../../iup_link.c"
 $13 = ((($12)) + 32|0); //@line 91 "../../iup_link.c"
 HEAP32[$13>>2] = 299; //@line 91 "../../iup_link.c"
 $14 = $0; //@line 92 "../../iup_link.c"
 $15 = ((($14)) + 40|0); //@line 92 "../../iup_link.c"
 HEAP32[$15>>2] = 300; //@line 92 "../../iup_link.c"
 $16 = $0; //@line 93 "../../iup_link.c"
 $17 = ((($16)) + 44|0); //@line 93 "../../iup_link.c"
 HEAP32[$17>>2] = 301; //@line 93 "../../iup_link.c"
 $18 = $0; //@line 96 "../../iup_link.c"
 _iupClassRegisterCallback($18,20479,19916); //@line 96 "../../iup_link.c"
 $19 = $0; //@line 99 "../../iup_link.c"
 _iupClassRegisterAttribute($19,14261,0,0,0,0,3); //@line 99 "../../iup_link.c"
 $20 = $0; //@line 100 "../../iup_link.c"
 _iupClassRegisterAttribute($20,15959,0,57,(-1),14265,2049); //@line 100 "../../iup_link.c"
 $21 = $0; //@line 102 "../../iup_link.c"
 _iupClassRegisterReplaceAttribDef($21,20610,14271,0); //@line 102 "../../iup_link.c"
 $22 = $0; //@line 104 "../../iup_link.c"
 STACKTOP = sp;return ($22|0); //@line 104 "../../iup_link.c"
}
function _iLinkCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 67 "../../iup_link.c"
 $5 = ($4|0)!=(0|0); //@line 67 "../../iup_link.c"
 if ($5) {
  $6 = $3; //@line 69 "../../iup_link.c"
  $7 = HEAP32[$6>>2]|0; //@line 69 "../../iup_link.c"
  $8 = ($7|0)!=(0|0); //@line 69 "../../iup_link.c"
  if ($8) {
   $9 = $2; //@line 69 "../../iup_link.c"
   $10 = $3; //@line 69 "../../iup_link.c"
   $11 = HEAP32[$10>>2]|0; //@line 69 "../../iup_link.c"
   _iupAttribSetStr($9,14261,$11); //@line 69 "../../iup_link.c"
  }
  $12 = $3; //@line 70 "../../iup_link.c"
  $13 = ((($12)) + 4|0); //@line 70 "../../iup_link.c"
  $14 = HEAP32[$13>>2]|0; //@line 70 "../../iup_link.c"
  $15 = ($14|0)!=(0|0); //@line 70 "../../iup_link.c"
  if ($15) {
   $16 = $2; //@line 70 "../../iup_link.c"
   $17 = $3; //@line 70 "../../iup_link.c"
   $18 = ((($17)) + 4|0); //@line 70 "../../iup_link.c"
   $19 = HEAP32[$18>>2]|0; //@line 70 "../../iup_link.c"
   _iupAttribSetStr($16,20508,$19); //@line 70 "../../iup_link.c"
  }
 }
 $20 = $2; //@line 73 "../../iup_link.c"
 (_IupSetCallback($20,20522,302)|0); //@line 73 "../../iup_link.c"
 $21 = $2; //@line 74 "../../iup_link.c"
 (_IupSetCallback($21,14303,303)|0); //@line 74 "../../iup_link.c"
 $22 = $2; //@line 75 "../../iup_link.c"
 (_IupSetCallback($22,14318,304)|0); //@line 75 "../../iup_link.c"
 STACKTOP = sp;return 0; //@line 77 "../../iup_link.c"
}
function _iLinkMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 61 "../../iup_link.c"
 _IupSetAttribute($2,14283,14293); //@line 61 "../../iup_link.c"
 STACKTOP = sp;return 0; //@line 62 "../../iup_link.c"
}
function _iLinkButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $15 = $7; //@line 25 "../../iup_link.c"
 $16 = ($15|0)==(49); //@line 25 "../../iup_link.c"
 $17 = $8; //@line 25 "../../iup_link.c"
 $18 = ($17|0)!=(0); //@line 25 "../../iup_link.c"
 $or$cond = $16 & $18; //@line 25 "../../iup_link.c"
 if (!($or$cond)) {
  STACKTOP = sp;return -2; //@line 44 "../../iup_link.c"
 }
 $19 = $6; //@line 27 "../../iup_link.c"
 $20 = (_IupGetCallback($19,20479)|0); //@line 27 "../../iup_link.c"
 $12 = $20; //@line 27 "../../iup_link.c"
 $21 = $6; //@line 28 "../../iup_link.c"
 $22 = (_iupAttribGetStr($21,14261)|0); //@line 28 "../../iup_link.c"
 $13 = $22; //@line 28 "../../iup_link.c"
 $23 = $12; //@line 29 "../../iup_link.c"
 $24 = ($23|0)!=(0|0); //@line 29 "../../iup_link.c"
 if (!($24)) {
  $36 = $13; //@line 38 "../../iup_link.c"
  (_IupHelp($36)|0); //@line 38 "../../iup_link.c"
  STACKTOP = sp;return -2; //@line 44 "../../iup_link.c"
 }
 $25 = $12; //@line 31 "../../iup_link.c"
 $26 = $6; //@line 31 "../../iup_link.c"
 $27 = $13; //@line 31 "../../iup_link.c"
 $28 = (FUNCTION_TABLE_iii[$25 & 1023]($26,$27)|0); //@line 31 "../../iup_link.c"
 $14 = $28; //@line 31 "../../iup_link.c"
 $29 = $14; //@line 32 "../../iup_link.c"
 $30 = ($29|0)==(-3); //@line 32 "../../iup_link.c"
 if ($30) {
  _IupExitLoop(); //@line 33 "../../iup_link.c"
  STACKTOP = sp;return -2; //@line 44 "../../iup_link.c"
 }
 $31 = $14; //@line 34 "../../iup_link.c"
 $32 = ($31|0)==(-2); //@line 34 "../../iup_link.c"
 $33 = $13; //@line 34 "../../iup_link.c"
 $34 = ($33|0)!=(0|0); //@line 34 "../../iup_link.c"
 $or$cond3 = $32 & $34; //@line 34 "../../iup_link.c"
 if (!($or$cond3)) {
  STACKTOP = sp;return -2; //@line 44 "../../iup_link.c"
 }
 $35 = $13; //@line 35 "../../iup_link.c"
 (_IupHelp($35)|0); //@line 35 "../../iup_link.c"
 STACKTOP = sp;return -2; //@line 44 "../../iup_link.c"
}
function _iLinkEnterWindow_CB($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 49 "../../iup_link.c"
 _IupSetAttribute($2,15959,14333); //@line 49 "../../iup_link.c"
 STACKTOP = sp;return -2; //@line 50 "../../iup_link.c"
}
function _iLinkLeaveWindow_CB($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 55 "../../iup_link.c"
 _IupSetAttribute($2,15959,14265); //@line 55 "../../iup_link.c"
 STACKTOP = sp;return -2; //@line 56 "../../iup_link.c"
}
function _iupListGetPosAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 179 "../../iup_list.c"
 $7 = (($6) + -1)|0; //@line 179 "../../iup_list.c"
 $4 = $7; //@line 179 "../../iup_list.c"
 $8 = $4; //@line 181 "../../iup_list.c"
 $9 = ($8|0)<(0); //@line 181 "../../iup_list.c"
 do {
  if ($9) {
   $2 = -1; //@line 182 "../../iup_list.c"
  } else {
   $10 = $3; //@line 184 "../../iup_list.c"
   $11 = (_iupdrvListGetCount($10)|0); //@line 184 "../../iup_list.c"
   $5 = $11; //@line 184 "../../iup_list.c"
   $12 = $4; //@line 186 "../../iup_list.c"
   $13 = $5; //@line 186 "../../iup_list.c"
   $14 = ($12|0)==($13|0); //@line 186 "../../iup_list.c"
   if ($14) {
    $2 = -2; //@line 186 "../../iup_list.c"
    break;
   }
   $15 = $4; //@line 187 "../../iup_list.c"
   $16 = $5; //@line 187 "../../iup_list.c"
   $17 = ($15|0)>($16|0); //@line 187 "../../iup_list.c"
   if ($17) {
    $2 = -1; //@line 187 "../../iup_list.c"
    break;
   } else {
    $18 = $4; //@line 189 "../../iup_list.c"
    $2 = $18; //@line 189 "../../iup_list.c"
    break;
   }
  }
 } while(0);
 $19 = $2; //@line 190 "../../iup_list.c"
 STACKTOP = sp;return ($19|0); //@line 190 "../../iup_list.c"
}
function _iupListNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 1017 "../../iup_list.c"
 $0 = $1; //@line 1017 "../../iup_list.c"
 $2 = $0; //@line 1019 "../../iup_list.c"
 HEAP32[$2>>2] = 14356; //@line 1019 "../../iup_list.c"
 $3 = $0; //@line 1020 "../../iup_list.c"
 $4 = ((($3)) + 4|0); //@line 1020 "../../iup_list.c"
 HEAP32[$4>>2] = 17485; //@line 1020 "../../iup_list.c"
 $5 = $0; //@line 1021 "../../iup_list.c"
 $6 = ((($5)) + 8|0); //@line 1021 "../../iup_list.c"
 HEAP32[$6>>2] = 1; //@line 1021 "../../iup_list.c"
 $7 = $0; //@line 1022 "../../iup_list.c"
 $8 = ((($7)) + 12|0); //@line 1022 "../../iup_list.c"
 HEAP32[$8>>2] = 0; //@line 1022 "../../iup_list.c"
 $9 = $0; //@line 1023 "../../iup_list.c"
 $10 = ((($9)) + 16|0); //@line 1023 "../../iup_list.c"
 HEAP32[$10>>2] = 1; //@line 1023 "../../iup_list.c"
 $11 = $0; //@line 1024 "../../iup_list.c"
 $12 = ((($11)) + 20|0); //@line 1024 "../../iup_list.c"
 HEAP32[$12>>2] = 1; //@line 1024 "../../iup_list.c"
 $13 = $0; //@line 1027 "../../iup_list.c"
 $14 = ((($13)) + 32|0); //@line 1027 "../../iup_list.c"
 HEAP32[$14>>2] = 305; //@line 1027 "../../iup_list.c"
 $15 = $0; //@line 1028 "../../iup_list.c"
 $16 = ((($15)) + 40|0); //@line 1028 "../../iup_list.c"
 HEAP32[$16>>2] = 306; //@line 1028 "../../iup_list.c"
 $17 = $0; //@line 1029 "../../iup_list.c"
 $18 = ((($17)) + 52|0); //@line 1029 "../../iup_list.c"
 HEAP32[$18>>2] = 307; //@line 1029 "../../iup_list.c"
 $19 = $0; //@line 1030 "../../iup_list.c"
 $20 = ((($19)) + 76|0); //@line 1030 "../../iup_list.c"
 HEAP32[$20>>2] = 308; //@line 1030 "../../iup_list.c"
 $21 = $0; //@line 1032 "../../iup_list.c"
 $22 = ((($21)) + 72|0); //@line 1032 "../../iup_list.c"
 HEAP32[$22>>2] = 47; //@line 1032 "../../iup_list.c"
 $23 = $0; //@line 1033 "../../iup_list.c"
 $24 = ((($23)) + 48|0); //@line 1033 "../../iup_list.c"
 HEAP32[$24>>2] = 48; //@line 1033 "../../iup_list.c"
 $25 = $0; //@line 1036 "../../iup_list.c"
 _iupClassRegisterCallback($25,20479,14361); //@line 1036 "../../iup_list.c"
 $26 = $0; //@line 1037 "../../iup_list.c"
 _iupClassRegisterCallback($26,14365,19916); //@line 1037 "../../iup_list.c"
 $27 = $0; //@line 1038 "../../iup_list.c"
 _iupClassRegisterCallback($27,14380,17949); //@line 1038 "../../iup_list.c"
 $28 = $0; //@line 1039 "../../iup_list.c"
 _iupClassRegisterCallback($28,14392,18005); //@line 1039 "../../iup_list.c"
 $29 = $0; //@line 1040 "../../iup_list.c"
 _iupClassRegisterCallback($29,19918,362470); //@line 1040 "../../iup_list.c"
 $30 = $0; //@line 1041 "../../iup_list.c"
 _iupClassRegisterCallback($30,18039,18049); //@line 1041 "../../iup_list.c"
 $31 = $0; //@line 1042 "../../iup_list.c"
 _iupClassRegisterCallback($31,20522,18053); //@line 1042 "../../iup_list.c"
 $32 = $0; //@line 1043 "../../iup_list.c"
 _iupClassRegisterCallback($32,18008,18020); //@line 1043 "../../iup_list.c"
 $33 = $0; //@line 1045 "../../iup_list.c"
 _iupClassRegisterCallback($33,14404,18005); //@line 1045 "../../iup_list.c"
 $34 = $0; //@line 1046 "../../iup_list.c"
 _iupClassRegisterCallback($34,17487,17496); //@line 1046 "../../iup_list.c"
 $35 = $0; //@line 1049 "../../iup_list.c"
 _iupBaseRegisterCommonCallbacks($35); //@line 1049 "../../iup_list.c"
 $36 = $0; //@line 1052 "../../iup_list.c"
 _iupBaseRegisterCommonAttrib($36); //@line 1052 "../../iup_list.c"
 $37 = $0; //@line 1055 "../../iup_list.c"
 _iupBaseRegisterVisualAttrib($37); //@line 1055 "../../iup_list.c"
 $38 = $0; //@line 1058 "../../iup_list.c"
 _iupdrvRegisterDragDropAttrib($38); //@line 1058 "../../iup_list.c"
 $39 = $0; //@line 1061 "../../iup_list.c"
 _iupClassRegisterAttribute($39,17508,309,310,(-1),20441,9); //@line 1061 "../../iup_list.c"
 $40 = $0; //@line 1062 "../../iup_list.c"
 _iupClassRegisterAttribute($40,17518,0,0,(-1),20441,1); //@line 1062 "../../iup_list.c"
 $41 = $0; //@line 1064 "../../iup_list.c"
 _iupClassRegisterAttribute($41,19752,311,312,0,0,9); //@line 1064 "../../iup_list.c"
 $42 = $0; //@line 1065 "../../iup_list.c"
 _iupClassRegisterAttribute($42,14412,313,314,0,0,9); //@line 1065 "../../iup_list.c"
 $43 = $0; //@line 1066 "../../iup_list.c"
 _iupClassRegisterAttribute($43,14421,315,316,0,0,9); //@line 1066 "../../iup_list.c"
 $44 = $0; //@line 1067 "../../iup_list.c"
 _iupClassRegisterAttribute($44,18119,317,0,0,0,41); //@line 1067 "../../iup_list.c"
 $45 = $0; //@line 1068 "../../iup_list.c"
 _iupClassRegisterAttribute($45,14429,318,319,0,0,3); //@line 1068 "../../iup_list.c"
 $46 = $0; //@line 1070 "../../iup_list.c"
 _iupClassRegisterAttributeId($46,14441,0,320,9); //@line 1070 "../../iup_list.c"
 $47 = $0; //@line 1071 "../../iup_list.c"
 _iupClassRegisterAttribute($47,14452,0,321,0,0,9); //@line 1071 "../../iup_list.c"
 $48 = $0; //@line 1072 "../../iup_list.c"
 _iupClassRegisterAttribute($48,14463,0,322,0,0,9); //@line 1072 "../../iup_list.c"
 $49 = $0; //@line 1074 "../../iup_list.c"
 _iupClassRegisterAttribute($49,17551,0,323,0,0,65); //@line 1074 "../../iup_list.c"
 $50 = $0; //@line 1075 "../../iup_list.c"
 _iupClassRegisterAttribute($50,17563,0,0,0,0,9); //@line 1075 "../../iup_list.c"
 $51 = $0; //@line 1076 "../../iup_list.c"
 _iupClassRegisterAttribute($51,17573,0,0,0,0,9); //@line 1076 "../../iup_list.c"
 $52 = $0; //@line 1077 "../../iup_list.c"
 _iupClassRegisterAttribute($52,17591,324,325,0,0,9); //@line 1077 "../../iup_list.c"
 $53 = $0; //@line 1078 "../../iup_list.c"
 _iupClassRegisterAttribute($53,17596,0,326,0,0,9); //@line 1078 "../../iup_list.c"
 $54 = $0; //@line 1079 "../../iup_list.c"
 _iupClassRegisterAttribute($54,17604,0,327,0,0,9); //@line 1079 "../../iup_list.c"
 $55 = $0; //@line 1080 "../../iup_list.c"
 _iupClassRegisterAttribute($55,17614,0,328,0,0,9); //@line 1080 "../../iup_list.c"
 $56 = $0; //@line 1081 "../../iup_list.c"
 _iupClassRegisterAttribute($56,17623,329,0,0,0,41); //@line 1081 "../../iup_list.c"
 $57 = $0; //@line 1083 "../../iup_list.c"
 _iupClassRegisterAttribute($57,17683,0,0,0,0,9); //@line 1083 "../../iup_list.c"
 $58 = $0; //@line 1084 "../../iup_list.c"
 _iupClassRegisterAttribute($58,17698,0,0,0,0,9); //@line 1084 "../../iup_list.c"
 $59 = $0; //@line 1086 "../../iup_list.c"
 _iupClassRegisterAttribute($59,14474,330,331,0,0,9); //@line 1086 "../../iup_list.c"
 $60 = $0; //@line 1087 "../../iup_list.c"
 _iupClassRegisterAttribute($60,18072,332,333,0,0,9); //@line 1087 "../../iup_list.c"
 $61 = $0; //@line 1088 "../../iup_list.c"
 _iupClassRegisterAttribute($61,14484,0,334,0,0,1); //@line 1088 "../../iup_list.c"
 $62 = $0; //@line 1090 "../../iup_list.c"
 _iupdrvListInitClass($62); //@line 1090 "../../iup_list.c"
 $63 = $0; //@line 1092 "../../iup_list.c"
 STACKTOP = sp;return ($63|0); //@line 1092 "../../iup_list.c"
}
function _iListCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 834 "../../iup_list.c"
 $5 = ($4|0)!=(0|0); //@line 834 "../../iup_list.c"
 if ($5) {
  $6 = $3; //@line 834 "../../iup_list.c"
  $7 = HEAP32[$6>>2]|0; //@line 834 "../../iup_list.c"
  $8 = ($7|0)!=(0|0); //@line 834 "../../iup_list.c"
  if ($8) {
   $9 = $2; //@line 835 "../../iup_list.c"
   $10 = $3; //@line 835 "../../iup_list.c"
   $11 = HEAP32[$10>>2]|0; //@line 835 "../../iup_list.c"
   _iupAttribSetStr($9,20479,$11); //@line 835 "../../iup_list.c"
  }
 }
 $12 = (_calloc(1,56)|0); //@line 837 "../../iup_list.c"
 $13 = $2; //@line 837 "../../iup_list.c"
 $14 = ((($13)) + 72|0); //@line 837 "../../iup_list.c"
 HEAP32[$14>>2] = $12; //@line 837 "../../iup_list.c"
 $15 = $2; //@line 838 "../../iup_list.c"
 $16 = ((($15)) + 72|0); //@line 838 "../../iup_list.c"
 $17 = HEAP32[$16>>2]|0; //@line 838 "../../iup_list.c"
 HEAP32[$17>>2] = 1; //@line 838 "../../iup_list.c"
 STACKTOP = sp;return 0; //@line 840 "../../iup_list.c"
}
function _iListDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 999 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 999 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 999 "../../iup_list.c"
 $5 = ((($4)) + 52|0); //@line 999 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 999 "../../iup_list.c"
 $7 = ($6|0)!=(0|0); //@line 999 "../../iup_list.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 1001 "../../iup_list.c"
 }
 $8 = $1; //@line 1000 "../../iup_list.c"
 $9 = ((($8)) + 72|0); //@line 1000 "../../iup_list.c"
 $10 = HEAP32[$9>>2]|0; //@line 1000 "../../iup_list.c"
 $11 = ((($10)) + 52|0); //@line 1000 "../../iup_list.c"
 $12 = HEAP32[$11>>2]|0; //@line 1000 "../../iup_list.c"
 _iupMaskDestroy($12); //@line 1000 "../../iup_list.c"
 STACKTOP = sp;return; //@line 1001 "../../iup_list.c"
}
function _iListComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = (_iupdrvGetScrollbarSize()|0); //@line 961 "../../iup_list.c"
 $10 = $11; //@line 961 "../../iup_list.c"
 $12 = $4; //@line 964 "../../iup_list.c"
 _iListGetNaturalItemsSize($12,$8,$9); //@line 964 "../../iup_list.c"
 $13 = $4; //@line 967 "../../iup_list.c"
 _iupdrvListAddBorders($13,$8,$9); //@line 967 "../../iup_list.c"
 $14 = $4; //@line 969 "../../iup_list.c"
 $15 = ((($14)) + 72|0); //@line 969 "../../iup_list.c"
 $16 = HEAP32[$15>>2]|0; //@line 969 "../../iup_list.c"
 $17 = ((($16)) + 28|0); //@line 969 "../../iup_list.c"
 $18 = HEAP32[$17>>2]|0; //@line 969 "../../iup_list.c"
 $19 = ($18|0)!=(0); //@line 969 "../../iup_list.c"
 if ($19) {
  $20 = $10; //@line 972 "../../iup_list.c"
  $21 = HEAP32[$8>>2]|0; //@line 972 "../../iup_list.c"
  $22 = (($21) + ($20))|0; //@line 972 "../../iup_list.c"
  HEAP32[$8>>2] = $22; //@line 972 "../../iup_list.c"
  $23 = HEAP32[$9>>2]|0; //@line 974 "../../iup_list.c"
  $24 = $10; //@line 974 "../../iup_list.c"
  $25 = ($23|0)<($24|0); //@line 974 "../../iup_list.c"
  if ($25) {
   $26 = $10; //@line 975 "../../iup_list.c"
   HEAP32[$9>>2] = $26; //@line 975 "../../iup_list.c"
  }
 } else {
  $27 = $4; //@line 980 "../../iup_list.c"
  $28 = ((($27)) + 72|0); //@line 980 "../../iup_list.c"
  $29 = HEAP32[$28>>2]|0; //@line 980 "../../iup_list.c"
  $30 = HEAP32[$29>>2]|0; //@line 980 "../../iup_list.c"
  $31 = ($30|0)!=(0); //@line 980 "../../iup_list.c"
  if ($31) {
   $32 = $10; //@line 982 "../../iup_list.c"
   $33 = HEAP32[$9>>2]|0; //@line 982 "../../iup_list.c"
   $34 = (($33) + ($32))|0; //@line 982 "../../iup_list.c"
   HEAP32[$9>>2] = $34; //@line 982 "../../iup_list.c"
   $35 = $10; //@line 983 "../../iup_list.c"
   $36 = HEAP32[$8>>2]|0; //@line 983 "../../iup_list.c"
   $37 = (($36) + ($35))|0; //@line 983 "../../iup_list.c"
   HEAP32[$8>>2] = $37; //@line 983 "../../iup_list.c"
  }
 }
 $38 = $4; //@line 987 "../../iup_list.c"
 $39 = ((($38)) + 72|0); //@line 987 "../../iup_list.c"
 $40 = HEAP32[$39>>2]|0; //@line 987 "../../iup_list.c"
 $41 = ((($40)) + 32|0); //@line 987 "../../iup_list.c"
 $42 = HEAP32[$41>>2]|0; //@line 987 "../../iup_list.c"
 $43 = ($42|0)!=(0); //@line 987 "../../iup_list.c"
 if (!($43)) {
  $60 = HEAP32[$8>>2]|0; //@line 993 "../../iup_list.c"
  $61 = $5; //@line 993 "../../iup_list.c"
  HEAP32[$61>>2] = $60; //@line 993 "../../iup_list.c"
  $62 = HEAP32[$9>>2]|0; //@line 994 "../../iup_list.c"
  $63 = $6; //@line 994 "../../iup_list.c"
  HEAP32[$63>>2] = $62; //@line 994 "../../iup_list.c"
  STACKTOP = sp;return; //@line 995 "../../iup_list.c"
 }
 $44 = $4; //@line 989 "../../iup_list.c"
 $45 = ((($44)) + 72|0); //@line 989 "../../iup_list.c"
 $46 = HEAP32[$45>>2]|0; //@line 989 "../../iup_list.c"
 $47 = ((($46)) + 12|0); //@line 989 "../../iup_list.c"
 $48 = HEAP32[$47>>2]|0; //@line 989 "../../iup_list.c"
 $49 = $48<<1; //@line 989 "../../iup_list.c"
 $50 = HEAP32[$8>>2]|0; //@line 989 "../../iup_list.c"
 $51 = (($50) + ($49))|0; //@line 989 "../../iup_list.c"
 HEAP32[$8>>2] = $51; //@line 989 "../../iup_list.c"
 $52 = $4; //@line 990 "../../iup_list.c"
 $53 = ((($52)) + 72|0); //@line 990 "../../iup_list.c"
 $54 = HEAP32[$53>>2]|0; //@line 990 "../../iup_list.c"
 $55 = ((($54)) + 16|0); //@line 990 "../../iup_list.c"
 $56 = HEAP32[$55>>2]|0; //@line 990 "../../iup_list.c"
 $57 = $56<<1; //@line 990 "../../iup_list.c"
 $58 = HEAP32[$9>>2]|0; //@line 990 "../../iup_list.c"
 $59 = (($58) + ($57))|0; //@line 990 "../../iup_list.c"
 HEAP32[$9>>2] = $59; //@line 990 "../../iup_list.c"
 $60 = HEAP32[$8>>2]|0; //@line 993 "../../iup_list.c"
 $61 = $5; //@line 993 "../../iup_list.c"
 HEAP32[$61>>2] = $60; //@line 993 "../../iup_list.c"
 $62 = HEAP32[$9>>2]|0; //@line 994 "../../iup_list.c"
 $63 = $6; //@line 994 "../../iup_list.c"
 HEAP32[$63>>2] = $62; //@line 994 "../../iup_list.c"
 STACKTOP = sp;return; //@line 995 "../../iup_list.c"
}
function _iListGetScrollbarAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 416 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 416 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 416 "../../iup_list.c"
 $5 = HEAP32[$4>>2]|0; //@line 416 "../../iup_list.c"
 $6 = (_iupStrReturnBoolean($5)|0); //@line 416 "../../iup_list.c"
 STACKTOP = sp;return ($6|0); //@line 416 "../../iup_list.c"
}
function _iListSetScrollbarAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 403 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 403 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 403 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 403 "../../iup_list.c"
 if ($8) {
  $2 = 0; //@line 404 "../../iup_list.c"
  $15 = $2; //@line 412 "../../iup_list.c"
  STACKTOP = sp;return ($15|0); //@line 412 "../../iup_list.c"
 }
 $9 = $4; //@line 406 "../../iup_list.c"
 $10 = (_iupStrBoolean($9)|0); //@line 406 "../../iup_list.c"
 $11 = ($10|0)!=(0); //@line 406 "../../iup_list.c"
 $12 = $3; //@line 407 "../../iup_list.c"
 $13 = ((($12)) + 72|0); //@line 407 "../../iup_list.c"
 $14 = HEAP32[$13>>2]|0; //@line 407 "../../iup_list.c"
 if ($11) {
  HEAP32[$14>>2] = 1; //@line 407 "../../iup_list.c"
 } else {
  HEAP32[$14>>2] = 0; //@line 409 "../../iup_list.c"
 }
 $2 = 0; //@line 411 "../../iup_list.c"
 $15 = $2; //@line 412 "../../iup_list.c"
 STACKTOP = sp;return ($15|0); //@line 412 "../../iup_list.c"
}
function _iListGetMultipleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 375 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 375 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 375 "../../iup_list.c"
 $5 = ((($4)) + 24|0); //@line 375 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 375 "../../iup_list.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 375 "../../iup_list.c"
 STACKTOP = sp;return ($7|0); //@line 375 "../../iup_list.c"
}
function _iListSetMultipleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 358 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 358 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 358 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 358 "../../iup_list.c"
 if ($8) {
  $2 = 0; //@line 359 "../../iup_list.c"
  $24 = $2; //@line 371 "../../iup_list.c"
  STACKTOP = sp;return ($24|0); //@line 371 "../../iup_list.c"
 }
 $9 = $4; //@line 361 "../../iup_list.c"
 $10 = (_iupStrBoolean($9)|0); //@line 361 "../../iup_list.c"
 $11 = ($10|0)!=(0); //@line 361 "../../iup_list.c"
 $12 = $3; //@line 363 "../../iup_list.c"
 $13 = ((($12)) + 72|0); //@line 363 "../../iup_list.c"
 $14 = HEAP32[$13>>2]|0; //@line 363 "../../iup_list.c"
 $15 = ((($14)) + 24|0); //@line 363 "../../iup_list.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 363 "../../iup_list.c"
  $16 = $3; //@line 364 "../../iup_list.c"
  $17 = ((($16)) + 72|0); //@line 364 "../../iup_list.c"
  $18 = HEAP32[$17>>2]|0; //@line 364 "../../iup_list.c"
  $19 = ((($18)) + 28|0); //@line 364 "../../iup_list.c"
  HEAP32[$19>>2] = 0; //@line 364 "../../iup_list.c"
  $20 = $3; //@line 365 "../../iup_list.c"
  $21 = ((($20)) + 72|0); //@line 365 "../../iup_list.c"
  $22 = HEAP32[$21>>2]|0; //@line 365 "../../iup_list.c"
  $23 = ((($22)) + 32|0); //@line 365 "../../iup_list.c"
  HEAP32[$23>>2] = 0; //@line 365 "../../iup_list.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 368 "../../iup_list.c"
 }
 $2 = 0; //@line 370 "../../iup_list.c"
 $24 = $2; //@line 371 "../../iup_list.c"
 STACKTOP = sp;return ($24|0); //@line 371 "../../iup_list.c"
}
function _iListGetDropdownAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 352 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 352 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 352 "../../iup_list.c"
 $5 = ((($4)) + 28|0); //@line 352 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 352 "../../iup_list.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 352 "../../iup_list.c"
 STACKTOP = sp;return ($7|0); //@line 352 "../../iup_list.c"
}
function _iListSetDropdownAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 336 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 336 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 336 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 336 "../../iup_list.c"
 if ($8) {
  $2 = 0; //@line 337 "../../iup_list.c"
  $20 = $2; //@line 348 "../../iup_list.c"
  STACKTOP = sp;return ($20|0); //@line 348 "../../iup_list.c"
 }
 $9 = $4; //@line 339 "../../iup_list.c"
 $10 = (_iupStrBoolean($9)|0); //@line 339 "../../iup_list.c"
 $11 = ($10|0)!=(0); //@line 339 "../../iup_list.c"
 $12 = $3; //@line 341 "../../iup_list.c"
 $13 = ((($12)) + 72|0); //@line 341 "../../iup_list.c"
 $14 = HEAP32[$13>>2]|0; //@line 341 "../../iup_list.c"
 $15 = ((($14)) + 28|0); //@line 341 "../../iup_list.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 341 "../../iup_list.c"
  $16 = $3; //@line 342 "../../iup_list.c"
  $17 = ((($16)) + 72|0); //@line 342 "../../iup_list.c"
  $18 = HEAP32[$17>>2]|0; //@line 342 "../../iup_list.c"
  $19 = ((($18)) + 24|0); //@line 342 "../../iup_list.c"
  HEAP32[$19>>2] = 0; //@line 342 "../../iup_list.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 345 "../../iup_list.c"
 }
 $2 = 0; //@line 347 "../../iup_list.c"
 $20 = $2; //@line 348 "../../iup_list.c"
 STACKTOP = sp;return ($20|0); //@line 348 "../../iup_list.c"
}
function _iListGetEditboxAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 397 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 397 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 397 "../../iup_list.c"
 $5 = ((($4)) + 32|0); //@line 397 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 397 "../../iup_list.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 397 "../../iup_list.c"
 STACKTOP = sp;return ($7|0); //@line 397 "../../iup_list.c"
}
function _iListSetEditboxAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 381 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 381 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 381 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 381 "../../iup_list.c"
 if ($8) {
  $2 = 0; //@line 382 "../../iup_list.c"
  $20 = $2; //@line 393 "../../iup_list.c"
  STACKTOP = sp;return ($20|0); //@line 393 "../../iup_list.c"
 }
 $9 = $4; //@line 384 "../../iup_list.c"
 $10 = (_iupStrBoolean($9)|0); //@line 384 "../../iup_list.c"
 $11 = ($10|0)!=(0); //@line 384 "../../iup_list.c"
 $12 = $3; //@line 386 "../../iup_list.c"
 $13 = ((($12)) + 72|0); //@line 386 "../../iup_list.c"
 $14 = HEAP32[$13>>2]|0; //@line 386 "../../iup_list.c"
 $15 = ((($14)) + 32|0); //@line 386 "../../iup_list.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 386 "../../iup_list.c"
  $16 = $3; //@line 387 "../../iup_list.c"
  $17 = ((($16)) + 72|0); //@line 387 "../../iup_list.c"
  $18 = HEAP32[$17>>2]|0; //@line 387 "../../iup_list.c"
  $19 = ((($18)) + 24|0); //@line 387 "../../iup_list.c"
  HEAP32[$19>>2] = 0; //@line 387 "../../iup_list.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 390 "../../iup_list.c"
 }
 $2 = 0; //@line 392 "../../iup_list.c"
 $20 = $2; //@line 393 "../../iup_list.c"
 STACKTOP = sp;return ($20|0); //@line 393 "../../iup_list.c"
}
function _iListGetCountAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 330 "../../iup_list.c"
 $3 = (_iListGetCount($2)|0); //@line 330 "../../iup_list.c"
 $4 = (_iupStrReturnInt($3)|0); //@line 330 "../../iup_list.c"
 STACKTOP = sp;return ($4|0); //@line 330 "../../iup_list.c"
}
function _iListGetValueStringAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 800 "../../iup_list.c"
 $5 = ((($4)) + 72|0); //@line 800 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 800 "../../iup_list.c"
 $7 = ((($6)) + 32|0); //@line 800 "../../iup_list.c"
 $8 = HEAP32[$7>>2]|0; //@line 800 "../../iup_list.c"
 $9 = ($8|0)!=(0); //@line 800 "../../iup_list.c"
 do {
  if (!($9)) {
   $10 = $2; //@line 800 "../../iup_list.c"
   $11 = ((($10)) + 72|0); //@line 800 "../../iup_list.c"
   $12 = HEAP32[$11>>2]|0; //@line 800 "../../iup_list.c"
   $13 = ((($12)) + 28|0); //@line 800 "../../iup_list.c"
   $14 = HEAP32[$13>>2]|0; //@line 800 "../../iup_list.c"
   $15 = ($14|0)!=(0); //@line 800 "../../iup_list.c"
   if (!($15)) {
    $16 = $2; //@line 800 "../../iup_list.c"
    $17 = ((($16)) + 72|0); //@line 800 "../../iup_list.c"
    $18 = HEAP32[$17>>2]|0; //@line 800 "../../iup_list.c"
    $19 = ((($18)) + 24|0); //@line 800 "../../iup_list.c"
    $20 = HEAP32[$19>>2]|0; //@line 800 "../../iup_list.c"
    $21 = ($20|0)!=(0); //@line 800 "../../iup_list.c"
    if ($21) {
     break;
    }
   }
   $22 = $2; //@line 802 "../../iup_list.c"
   $23 = (_IupGetInt($22,20104)|0); //@line 802 "../../iup_list.c"
   $3 = $23; //@line 802 "../../iup_list.c"
   $24 = $2; //@line 803 "../../iup_list.c"
   $25 = $3; //@line 803 "../../iup_list.c"
   $26 = (_IupGetAttributeId($24,362470,$25)|0); //@line 803 "../../iup_list.c"
   $1 = $26; //@line 803 "../../iup_list.c"
   $27 = $1; //@line 806 "../../iup_list.c"
   STACKTOP = sp;return ($27|0); //@line 806 "../../iup_list.c"
  }
 } while(0);
 $1 = 0; //@line 805 "../../iup_list.c"
 $27 = $1; //@line 806 "../../iup_list.c"
 STACKTOP = sp;return ($27|0); //@line 806 "../../iup_list.c"
}
function _iListSetValueStringAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $3; //@line 810 "../../iup_list.c"
 $9 = ((($8)) + 72|0); //@line 810 "../../iup_list.c"
 $10 = HEAP32[$9>>2]|0; //@line 810 "../../iup_list.c"
 $11 = ((($10)) + 32|0); //@line 810 "../../iup_list.c"
 $12 = HEAP32[$11>>2]|0; //@line 810 "../../iup_list.c"
 $13 = ($12|0)!=(0); //@line 810 "../../iup_list.c"
 L1: do {
  if (!($13)) {
   $14 = $3; //@line 810 "../../iup_list.c"
   $15 = ((($14)) + 72|0); //@line 810 "../../iup_list.c"
   $16 = HEAP32[$15>>2]|0; //@line 810 "../../iup_list.c"
   $17 = ((($16)) + 28|0); //@line 810 "../../iup_list.c"
   $18 = HEAP32[$17>>2]|0; //@line 810 "../../iup_list.c"
   $19 = ($18|0)!=(0); //@line 810 "../../iup_list.c"
   if (!($19)) {
    $20 = $3; //@line 810 "../../iup_list.c"
    $21 = ((($20)) + 72|0); //@line 810 "../../iup_list.c"
    $22 = HEAP32[$21>>2]|0; //@line 810 "../../iup_list.c"
    $23 = ((($22)) + 24|0); //@line 810 "../../iup_list.c"
    $24 = HEAP32[$23>>2]|0; //@line 810 "../../iup_list.c"
    $25 = ($24|0)!=(0); //@line 810 "../../iup_list.c"
    if ($25) {
     break;
    }
   }
   $26 = $3; //@line 812 "../../iup_list.c"
   $27 = (_iListGetCount($26)|0); //@line 812 "../../iup_list.c"
   $6 = $27; //@line 812 "../../iup_list.c"
   $5 = 1; //@line 814 "../../iup_list.c"
   while(1) {
    $28 = $5; //@line 814 "../../iup_list.c"
    $29 = $6; //@line 814 "../../iup_list.c"
    $30 = ($28|0)<=($29|0); //@line 814 "../../iup_list.c"
    if (!($30)) {
     break L1;
    }
    $31 = $3; //@line 816 "../../iup_list.c"
    $32 = $5; //@line 816 "../../iup_list.c"
    $33 = (_IupGetAttributeId($31,362470,$32)|0); //@line 816 "../../iup_list.c"
    $7 = $33; //@line 816 "../../iup_list.c"
    $34 = $4; //@line 817 "../../iup_list.c"
    $35 = $7; //@line 817 "../../iup_list.c"
    $36 = (_iupStrEqual($34,$35)|0); //@line 817 "../../iup_list.c"
    $37 = ($36|0)!=(0); //@line 817 "../../iup_list.c"
    if ($37) {
     break;
    }
    $40 = $5; //@line 814 "../../iup_list.c"
    $41 = (($40) + 1)|0; //@line 814 "../../iup_list.c"
    $5 = $41; //@line 814 "../../iup_list.c"
   }
   $38 = $3; //@line 819 "../../iup_list.c"
   $39 = $5; //@line 819 "../../iup_list.c"
   _IupSetInt($38,20104,$39); //@line 819 "../../iup_list.c"
   $2 = 0; //@line 820 "../../iup_list.c"
   $42 = $2; //@line 826 "../../iup_list.c"
   STACKTOP = sp;return ($42|0); //@line 826 "../../iup_list.c"
  }
 } while(0);
 $2 = 0; //@line 825 "../../iup_list.c"
 $42 = $2; //@line 826 "../../iup_list.c"
 STACKTOP = sp;return ($42|0); //@line 826 "../../iup_list.c"
}
function _iListSetInsertItemAttrib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4; //@line 279 "../../iup_list.c"
 $9 = ((($8)) + 16|0); //@line 279 "../../iup_list.c"
 $10 = HEAP32[$9>>2]|0; //@line 279 "../../iup_list.c"
 $11 = ($10|0)!=(0|0); //@line 279 "../../iup_list.c"
 if (!($11)) {
  $3 = 0; //@line 280 "../../iup_list.c"
  $26 = $3; //@line 290 "../../iup_list.c"
  STACKTOP = sp;return ($26|0); //@line 290 "../../iup_list.c"
 }
 $12 = $6; //@line 281 "../../iup_list.c"
 $13 = ($12|0)!=(0|0); //@line 281 "../../iup_list.c"
 do {
  if ($13) {
   $14 = $4; //@line 283 "../../iup_list.c"
   $15 = $5; //@line 283 "../../iup_list.c"
   $16 = (_iupListGetPosAttrib($14,$15)|0); //@line 283 "../../iup_list.c"
   $7 = $16; //@line 283 "../../iup_list.c"
   $17 = $7; //@line 284 "../../iup_list.c"
   $18 = ($17|0)>=(0); //@line 284 "../../iup_list.c"
   if ($18) {
    $19 = $4; //@line 285 "../../iup_list.c"
    $20 = $7; //@line 285 "../../iup_list.c"
    $21 = $6; //@line 285 "../../iup_list.c"
    _iupdrvListInsertItem($19,$20,$21); //@line 285 "../../iup_list.c"
    break;
   }
   $22 = $7; //@line 286 "../../iup_list.c"
   $23 = ($22|0)==(-2); //@line 286 "../../iup_list.c"
   if ($23) {
    $24 = $4; //@line 287 "../../iup_list.c"
    $25 = $6; //@line 287 "../../iup_list.c"
    _iupdrvListAppendItem($24,$25); //@line 287 "../../iup_list.c"
   }
  }
 } while(0);
 $3 = 0; //@line 289 "../../iup_list.c"
 $26 = $3; //@line 290 "../../iup_list.c"
 STACKTOP = sp;return ($26|0); //@line 290 "../../iup_list.c"
}
function _iListSetAppendItemAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 270 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 270 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 270 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 270 "../../iup_list.c"
 if (!($8)) {
  $2 = 0; //@line 271 "../../iup_list.c"
  $13 = $2; //@line 275 "../../iup_list.c"
  STACKTOP = sp;return ($13|0); //@line 275 "../../iup_list.c"
 }
 $9 = $4; //@line 272 "../../iup_list.c"
 $10 = ($9|0)!=(0|0); //@line 272 "../../iup_list.c"
 if ($10) {
  $11 = $3; //@line 273 "../../iup_list.c"
  $12 = $4; //@line 273 "../../iup_list.c"
  _iupdrvListAppendItem($11,$12); //@line 273 "../../iup_list.c"
 }
 $2 = 0; //@line 274 "../../iup_list.c"
 $13 = $2; //@line 275 "../../iup_list.c"
 STACKTOP = sp;return ($13|0); //@line 275 "../../iup_list.c"
}
function _iListSetRemoveItemAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 294 "../../iup_list.c"
 $8 = ((($7)) + 16|0); //@line 294 "../../iup_list.c"
 $9 = HEAP32[$8>>2]|0; //@line 294 "../../iup_list.c"
 $10 = ($9|0)!=(0|0); //@line 294 "../../iup_list.c"
 if (!($10)) {
  $2 = 0; //@line 295 "../../iup_list.c"
  $28 = $2; //@line 312 "../../iup_list.c"
  STACKTOP = sp;return ($28|0); //@line 312 "../../iup_list.c"
 }
 $11 = $4; //@line 296 "../../iup_list.c"
 $12 = ($11|0)!=(0|0); //@line 296 "../../iup_list.c"
 if ($12) {
  $13 = $4; //@line 296 "../../iup_list.c"
  $14 = (_iupStrEqualNoCase($13,14527)|0); //@line 296 "../../iup_list.c"
  $15 = ($14|0)!=(0); //@line 296 "../../iup_list.c"
  if ($15) {
   label = 5;
  } else {
   $18 = $4; //@line 304 "../../iup_list.c"
   $19 = (_iupStrToInt($18,$5)|0); //@line 304 "../../iup_list.c"
   $20 = ($19|0)!=(0); //@line 304 "../../iup_list.c"
   if ($20) {
    $21 = $3; //@line 306 "../../iup_list.c"
    $22 = HEAP32[$5>>2]|0; //@line 306 "../../iup_list.c"
    $23 = (_iupListGetPosAttrib($21,$22)|0); //@line 306 "../../iup_list.c"
    $6 = $23; //@line 306 "../../iup_list.c"
    $24 = $6; //@line 307 "../../iup_list.c"
    $25 = ($24|0)>=(0); //@line 307 "../../iup_list.c"
    if ($25) {
     $26 = $3; //@line 308 "../../iup_list.c"
     $27 = $6; //@line 308 "../../iup_list.c"
     _iupdrvListRemoveItem($26,$27); //@line 308 "../../iup_list.c"
    }
   }
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $16 = $3; //@line 298 "../../iup_list.c"
  _iupdrvListRemoveAllItems($16); //@line 298 "../../iup_list.c"
  $17 = $3; //@line 299 "../../iup_list.c"
  _iupAttribSet($17,14338,0); //@line 299 "../../iup_list.c"
 }
 $2 = 0; //@line 311 "../../iup_list.c"
 $28 = $2; //@line 312 "../../iup_list.c"
 STACKTOP = sp;return ($28|0); //@line 312 "../../iup_list.c"
}
function _iListSetValueMaskedAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 441 "../../iup_list.c"
 $6 = ((($5)) + 72|0); //@line 441 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 441 "../../iup_list.c"
 $8 = ((($7)) + 32|0); //@line 441 "../../iup_list.c"
 $9 = HEAP32[$8>>2]|0; //@line 441 "../../iup_list.c"
 $10 = ($9|0)!=(0); //@line 441 "../../iup_list.c"
 if (!($10)) {
  $2 = 0; //@line 442 "../../iup_list.c"
  $29 = $2; //@line 451 "../../iup_list.c"
  STACKTOP = sp;return ($29|0); //@line 451 "../../iup_list.c"
 }
 $11 = $4; //@line 444 "../../iup_list.c"
 $12 = ($11|0)!=(0|0); //@line 444 "../../iup_list.c"
 if ($12) {
  $13 = $3; //@line 446 "../../iup_list.c"
  $14 = ((($13)) + 72|0); //@line 446 "../../iup_list.c"
  $15 = HEAP32[$14>>2]|0; //@line 446 "../../iup_list.c"
  $16 = ((($15)) + 52|0); //@line 446 "../../iup_list.c"
  $17 = HEAP32[$16>>2]|0; //@line 446 "../../iup_list.c"
  $18 = ($17|0)!=(0|0); //@line 446 "../../iup_list.c"
  if ($18) {
   $19 = $3; //@line 446 "../../iup_list.c"
   $20 = ((($19)) + 72|0); //@line 446 "../../iup_list.c"
   $21 = HEAP32[$20>>2]|0; //@line 446 "../../iup_list.c"
   $22 = ((($21)) + 52|0); //@line 446 "../../iup_list.c"
   $23 = HEAP32[$22>>2]|0; //@line 446 "../../iup_list.c"
   $24 = $4; //@line 446 "../../iup_list.c"
   $25 = (_iupMaskCheck($23,$24)|0); //@line 446 "../../iup_list.c"
   $26 = ($25|0)==(0); //@line 446 "../../iup_list.c"
   if ($26) {
    $2 = 0; //@line 447 "../../iup_list.c"
    $29 = $2; //@line 451 "../../iup_list.c"
    STACKTOP = sp;return ($29|0); //@line 451 "../../iup_list.c"
   }
  }
  $27 = $3; //@line 448 "../../iup_list.c"
  $28 = $4; //@line 448 "../../iup_list.c"
  _IupStoreAttribute($27,20104,$28); //@line 448 "../../iup_list.c"
 }
 $2 = 0; //@line 450 "../../iup_list.c"
 $29 = $2; //@line 451 "../../iup_list.c"
 STACKTOP = sp;return ($29|0); //@line 451 "../../iup_list.c"
}
function _iListGetMaskAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 430 "../../iup_list.c"
 $4 = ((($3)) + 72|0); //@line 430 "../../iup_list.c"
 $5 = HEAP32[$4>>2]|0; //@line 430 "../../iup_list.c"
 $6 = ((($5)) + 32|0); //@line 430 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 430 "../../iup_list.c"
 $8 = ($7|0)!=(0); //@line 430 "../../iup_list.c"
 if (!($8)) {
  $1 = 0; //@line 431 "../../iup_list.c"
  $21 = $1; //@line 437 "../../iup_list.c"
  STACKTOP = sp;return ($21|0); //@line 437 "../../iup_list.c"
 }
 $9 = $2; //@line 433 "../../iup_list.c"
 $10 = ((($9)) + 72|0); //@line 433 "../../iup_list.c"
 $11 = HEAP32[$10>>2]|0; //@line 433 "../../iup_list.c"
 $12 = ((($11)) + 52|0); //@line 433 "../../iup_list.c"
 $13 = HEAP32[$12>>2]|0; //@line 433 "../../iup_list.c"
 $14 = ($13|0)!=(0|0); //@line 433 "../../iup_list.c"
 if ($14) {
  $15 = $2; //@line 434 "../../iup_list.c"
  $16 = ((($15)) + 72|0); //@line 434 "../../iup_list.c"
  $17 = HEAP32[$16>>2]|0; //@line 434 "../../iup_list.c"
  $18 = ((($17)) + 52|0); //@line 434 "../../iup_list.c"
  $19 = HEAP32[$18>>2]|0; //@line 434 "../../iup_list.c"
  $20 = (_iupMaskGetStr($19)|0); //@line 434 "../../iup_list.c"
  $1 = $20; //@line 434 "../../iup_list.c"
  $21 = $1; //@line 437 "../../iup_list.c"
  STACKTOP = sp;return ($21|0); //@line 437 "../../iup_list.c"
 } else {
  $1 = 0; //@line 436 "../../iup_list.c"
  $21 = $1; //@line 437 "../../iup_list.c"
  STACKTOP = sp;return ($21|0); //@line 437 "../../iup_list.c"
 }
 return (0)|0;
}
function _iListSetMaskAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 455 "../../iup_list.c"
 $8 = ((($7)) + 72|0); //@line 455 "../../iup_list.c"
 $9 = HEAP32[$8>>2]|0; //@line 455 "../../iup_list.c"
 $10 = ((($9)) + 32|0); //@line 455 "../../iup_list.c"
 $11 = HEAP32[$10>>2]|0; //@line 455 "../../iup_list.c"
 $12 = ($11|0)!=(0); //@line 455 "../../iup_list.c"
 if (!($12)) {
  $2 = 0; //@line 456 "../../iup_list.c"
  $52 = $2; //@line 481 "../../iup_list.c"
  STACKTOP = sp;return ($52|0); //@line 481 "../../iup_list.c"
 }
 $13 = $4; //@line 458 "../../iup_list.c"
 $14 = ($13|0)!=(0|0); //@line 458 "../../iup_list.c"
 $15 = $3; //@line 468 "../../iup_list.c"
 if ($14) {
  $30 = (_iupAttribGetInt($15,17563)|0); //@line 468 "../../iup_list.c"
  $5 = $30; //@line 468 "../../iup_list.c"
  $31 = $4; //@line 469 "../../iup_list.c"
  $32 = $5; //@line 469 "../../iup_list.c"
  $33 = (_iupMaskCreate($31,$32)|0); //@line 469 "../../iup_list.c"
  $6 = $33; //@line 469 "../../iup_list.c"
  $34 = $6; //@line 470 "../../iup_list.c"
  $35 = ($34|0)!=(0|0); //@line 470 "../../iup_list.c"
  if ($35) {
   $36 = $3; //@line 472 "../../iup_list.c"
   $37 = ((($36)) + 72|0); //@line 472 "../../iup_list.c"
   $38 = HEAP32[$37>>2]|0; //@line 472 "../../iup_list.c"
   $39 = ((($38)) + 52|0); //@line 472 "../../iup_list.c"
   $40 = HEAP32[$39>>2]|0; //@line 472 "../../iup_list.c"
   $41 = ($40|0)!=(0|0); //@line 472 "../../iup_list.c"
   if ($41) {
    $42 = $3; //@line 473 "../../iup_list.c"
    $43 = ((($42)) + 72|0); //@line 473 "../../iup_list.c"
    $44 = HEAP32[$43>>2]|0; //@line 473 "../../iup_list.c"
    $45 = ((($44)) + 52|0); //@line 473 "../../iup_list.c"
    $46 = HEAP32[$45>>2]|0; //@line 473 "../../iup_list.c"
    _iupMaskDestroy($46); //@line 473 "../../iup_list.c"
   }
   $47 = $6; //@line 475 "../../iup_list.c"
   $48 = $3; //@line 475 "../../iup_list.c"
   $49 = ((($48)) + 72|0); //@line 475 "../../iup_list.c"
   $50 = HEAP32[$49>>2]|0; //@line 475 "../../iup_list.c"
   $51 = ((($50)) + 52|0); //@line 475 "../../iup_list.c"
   HEAP32[$51>>2] = $47; //@line 475 "../../iup_list.c"
   $2 = 0; //@line 476 "../../iup_list.c"
   $52 = $2; //@line 481 "../../iup_list.c"
   STACKTOP = sp;return ($52|0); //@line 481 "../../iup_list.c"
  }
 } else {
  $16 = ((($15)) + 72|0); //@line 460 "../../iup_list.c"
  $17 = HEAP32[$16>>2]|0; //@line 460 "../../iup_list.c"
  $18 = ((($17)) + 52|0); //@line 460 "../../iup_list.c"
  $19 = HEAP32[$18>>2]|0; //@line 460 "../../iup_list.c"
  $20 = ($19|0)!=(0|0); //@line 460 "../../iup_list.c"
  if ($20) {
   $21 = $3; //@line 462 "../../iup_list.c"
   $22 = ((($21)) + 72|0); //@line 462 "../../iup_list.c"
   $23 = HEAP32[$22>>2]|0; //@line 462 "../../iup_list.c"
   $24 = ((($23)) + 52|0); //@line 462 "../../iup_list.c"
   $25 = HEAP32[$24>>2]|0; //@line 462 "../../iup_list.c"
   _iupMaskDestroy($25); //@line 462 "../../iup_list.c"
   $26 = $3; //@line 463 "../../iup_list.c"
   $27 = ((($26)) + 72|0); //@line 463 "../../iup_list.c"
   $28 = HEAP32[$27>>2]|0; //@line 463 "../../iup_list.c"
   $29 = ((($28)) + 52|0); //@line 463 "../../iup_list.c"
   HEAP32[$29>>2] = 0; //@line 463 "../../iup_list.c"
  }
 }
 $2 = 0; //@line 480 "../../iup_list.c"
 $52 = $2; //@line 481 "../../iup_list.c"
 STACKTOP = sp;return ($52|0); //@line 481 "../../iup_list.c"
}
function _iListSetMaskIntAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $8 = $3; //@line 485 "../../iup_list.c"
 $9 = ((($8)) + 72|0); //@line 485 "../../iup_list.c"
 $10 = HEAP32[$9>>2]|0; //@line 485 "../../iup_list.c"
 $11 = ((($10)) + 32|0); //@line 485 "../../iup_list.c"
 $12 = HEAP32[$11>>2]|0; //@line 485 "../../iup_list.c"
 $13 = ($12|0)!=(0); //@line 485 "../../iup_list.c"
 if (!($13)) {
  $2 = 0; //@line 486 "../../iup_list.c"
  $53 = $2; //@line 513 "../../iup_list.c"
  STACKTOP = sp;return ($53|0); //@line 513 "../../iup_list.c"
 }
 $14 = $4; //@line 488 "../../iup_list.c"
 $15 = ($14|0)!=(0|0); //@line 488 "../../iup_list.c"
 if ($15) {
  $31 = $4; //@line 501 "../../iup_list.c"
  $32 = (_iupStrToIntInt($31,$6,$7,58)|0); //@line 501 "../../iup_list.c"
  $33 = ($32|0)!=(2); //@line 501 "../../iup_list.c"
  if ($33) {
   $2 = 0; //@line 502 "../../iup_list.c"
   $53 = $2; //@line 513 "../../iup_list.c"
   STACKTOP = sp;return ($53|0); //@line 513 "../../iup_list.c"
  }
  $34 = HEAP32[$6>>2]|0; //@line 504 "../../iup_list.c"
  $35 = HEAP32[$7>>2]|0; //@line 504 "../../iup_list.c"
  $36 = (_iupMaskCreateInt($34,$35)|0); //@line 504 "../../iup_list.c"
  $5 = $36; //@line 504 "../../iup_list.c"
  $37 = $3; //@line 506 "../../iup_list.c"
  $38 = ((($37)) + 72|0); //@line 506 "../../iup_list.c"
  $39 = HEAP32[$38>>2]|0; //@line 506 "../../iup_list.c"
  $40 = ((($39)) + 52|0); //@line 506 "../../iup_list.c"
  $41 = HEAP32[$40>>2]|0; //@line 506 "../../iup_list.c"
  $42 = ($41|0)!=(0|0); //@line 506 "../../iup_list.c"
  if ($42) {
   $43 = $3; //@line 507 "../../iup_list.c"
   $44 = ((($43)) + 72|0); //@line 507 "../../iup_list.c"
   $45 = HEAP32[$44>>2]|0; //@line 507 "../../iup_list.c"
   $46 = ((($45)) + 52|0); //@line 507 "../../iup_list.c"
   $47 = HEAP32[$46>>2]|0; //@line 507 "../../iup_list.c"
   _iupMaskDestroy($47); //@line 507 "../../iup_list.c"
  }
  $48 = $5; //@line 509 "../../iup_list.c"
  $49 = $3; //@line 509 "../../iup_list.c"
  $50 = ((($49)) + 72|0); //@line 509 "../../iup_list.c"
  $51 = HEAP32[$50>>2]|0; //@line 509 "../../iup_list.c"
  $52 = ((($51)) + 52|0); //@line 509 "../../iup_list.c"
  HEAP32[$52>>2] = $48; //@line 509 "../../iup_list.c"
 } else {
  $16 = $3; //@line 490 "../../iup_list.c"
  $17 = ((($16)) + 72|0); //@line 490 "../../iup_list.c"
  $18 = HEAP32[$17>>2]|0; //@line 490 "../../iup_list.c"
  $19 = ((($18)) + 52|0); //@line 490 "../../iup_list.c"
  $20 = HEAP32[$19>>2]|0; //@line 490 "../../iup_list.c"
  $21 = ($20|0)!=(0|0); //@line 490 "../../iup_list.c"
  if ($21) {
   $22 = $3; //@line 492 "../../iup_list.c"
   $23 = ((($22)) + 72|0); //@line 492 "../../iup_list.c"
   $24 = HEAP32[$23>>2]|0; //@line 492 "../../iup_list.c"
   $25 = ((($24)) + 52|0); //@line 492 "../../iup_list.c"
   $26 = HEAP32[$25>>2]|0; //@line 492 "../../iup_list.c"
   _iupMaskDestroy($26); //@line 492 "../../iup_list.c"
   $27 = $3; //@line 493 "../../iup_list.c"
   $28 = ((($27)) + 72|0); //@line 493 "../../iup_list.c"
   $29 = HEAP32[$28>>2]|0; //@line 493 "../../iup_list.c"
   $30 = ((($29)) + 52|0); //@line 493 "../../iup_list.c"
   HEAP32[$30>>2] = 0; //@line 493 "../../iup_list.c"
  }
 }
 $2 = 0; //@line 512 "../../iup_list.c"
 $53 = $2; //@line 513 "../../iup_list.c"
 STACKTOP = sp;return ($53|0); //@line 513 "../../iup_list.c"
}
function _iListSetMaskFloatAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $9 = $3; //@line 517 "../../iup_list.c"
 $10 = ((($9)) + 72|0); //@line 517 "../../iup_list.c"
 $11 = HEAP32[$10>>2]|0; //@line 517 "../../iup_list.c"
 $12 = ((($11)) + 32|0); //@line 517 "../../iup_list.c"
 $13 = HEAP32[$12>>2]|0; //@line 517 "../../iup_list.c"
 $14 = ($13|0)!=(0); //@line 517 "../../iup_list.c"
 if (!($14)) {
  $2 = 0; //@line 518 "../../iup_list.c"
  $56 = $2; //@line 546 "../../iup_list.c"
  STACKTOP = sp;return ($56|0); //@line 546 "../../iup_list.c"
 }
 $15 = $4; //@line 520 "../../iup_list.c"
 $16 = ($15|0)!=(0|0); //@line 520 "../../iup_list.c"
 $17 = $3; //@line 532 "../../iup_list.c"
 if ($16) {
  $32 = (_iupAttribGet($17,17573)|0); //@line 532 "../../iup_list.c"
  $8 = $32; //@line 532 "../../iup_list.c"
  $33 = $4; //@line 534 "../../iup_list.c"
  $34 = (_iupStrToFloatFloat($33,$6,$7,58)|0); //@line 534 "../../iup_list.c"
  $35 = ($34|0)!=(2); //@line 534 "../../iup_list.c"
  if ($35) {
   $2 = 0; //@line 535 "../../iup_list.c"
   $56 = $2; //@line 546 "../../iup_list.c"
   STACKTOP = sp;return ($56|0); //@line 546 "../../iup_list.c"
  }
  $36 = +HEAPF32[$6>>2]; //@line 537 "../../iup_list.c"
  $37 = +HEAPF32[$7>>2]; //@line 537 "../../iup_list.c"
  $38 = $8; //@line 537 "../../iup_list.c"
  $39 = (_iupMaskCreateFloat($36,$37,$38)|0); //@line 537 "../../iup_list.c"
  $5 = $39; //@line 537 "../../iup_list.c"
  $40 = $3; //@line 539 "../../iup_list.c"
  $41 = ((($40)) + 72|0); //@line 539 "../../iup_list.c"
  $42 = HEAP32[$41>>2]|0; //@line 539 "../../iup_list.c"
  $43 = ((($42)) + 52|0); //@line 539 "../../iup_list.c"
  $44 = HEAP32[$43>>2]|0; //@line 539 "../../iup_list.c"
  $45 = ($44|0)!=(0|0); //@line 539 "../../iup_list.c"
  if ($45) {
   $46 = $3; //@line 540 "../../iup_list.c"
   $47 = ((($46)) + 72|0); //@line 540 "../../iup_list.c"
   $48 = HEAP32[$47>>2]|0; //@line 540 "../../iup_list.c"
   $49 = ((($48)) + 52|0); //@line 540 "../../iup_list.c"
   $50 = HEAP32[$49>>2]|0; //@line 540 "../../iup_list.c"
   _iupMaskDestroy($50); //@line 540 "../../iup_list.c"
  }
  $51 = $5; //@line 542 "../../iup_list.c"
  $52 = $3; //@line 542 "../../iup_list.c"
  $53 = ((($52)) + 72|0); //@line 542 "../../iup_list.c"
  $54 = HEAP32[$53>>2]|0; //@line 542 "../../iup_list.c"
  $55 = ((($54)) + 52|0); //@line 542 "../../iup_list.c"
  HEAP32[$55>>2] = $51; //@line 542 "../../iup_list.c"
 } else {
  $18 = ((($17)) + 72|0); //@line 522 "../../iup_list.c"
  $19 = HEAP32[$18>>2]|0; //@line 522 "../../iup_list.c"
  $20 = ((($19)) + 52|0); //@line 522 "../../iup_list.c"
  $21 = HEAP32[$20>>2]|0; //@line 522 "../../iup_list.c"
  $22 = ($21|0)!=(0|0); //@line 522 "../../iup_list.c"
  if ($22) {
   $23 = $3; //@line 524 "../../iup_list.c"
   $24 = ((($23)) + 72|0); //@line 524 "../../iup_list.c"
   $25 = HEAP32[$24>>2]|0; //@line 524 "../../iup_list.c"
   $26 = ((($25)) + 52|0); //@line 524 "../../iup_list.c"
   $27 = HEAP32[$26>>2]|0; //@line 524 "../../iup_list.c"
   _iupMaskDestroy($27); //@line 524 "../../iup_list.c"
   $28 = $3; //@line 525 "../../iup_list.c"
   $29 = ((($28)) + 72|0); //@line 525 "../../iup_list.c"
   $30 = HEAP32[$29>>2]|0; //@line 525 "../../iup_list.c"
   $31 = ((($30)) + 52|0); //@line 525 "../../iup_list.c"
   HEAP32[$31>>2] = 0; //@line 525 "../../iup_list.c"
  }
 }
 $2 = 0; //@line 545 "../../iup_list.c"
 $56 = $2; //@line 546 "../../iup_list.c"
 STACKTOP = sp;return ($56|0); //@line 546 "../../iup_list.c"
}
function _iListSetMaskRealAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $8 = $3; //@line 550 "../../iup_list.c"
 $9 = ((($8)) + 72|0); //@line 550 "../../iup_list.c"
 $10 = HEAP32[$9>>2]|0; //@line 550 "../../iup_list.c"
 $11 = ((($10)) + 32|0); //@line 550 "../../iup_list.c"
 $12 = HEAP32[$11>>2]|0; //@line 550 "../../iup_list.c"
 $13 = ($12|0)!=(0); //@line 550 "../../iup_list.c"
 if (!($13)) {
  $2 = 0; //@line 551 "../../iup_list.c"
  $54 = $2; //@line 579 "../../iup_list.c"
  STACKTOP = sp;return ($54|0); //@line 579 "../../iup_list.c"
 }
 $14 = $4; //@line 553 "../../iup_list.c"
 $15 = ($14|0)!=(0|0); //@line 553 "../../iup_list.c"
 $16 = $3; //@line 564 "../../iup_list.c"
 if ($15) {
  $31 = (_iupAttribGet($16,17573)|0); //@line 564 "../../iup_list.c"
  $6 = $31; //@line 564 "../../iup_list.c"
  $7 = 0; //@line 565 "../../iup_list.c"
  $32 = $4; //@line 567 "../../iup_list.c"
  $33 = (_iupStrEqualNoCase($32,17720)|0); //@line 567 "../../iup_list.c"
  $34 = ($33|0)!=(0); //@line 567 "../../iup_list.c"
  if ($34) {
   $7 = 1; //@line 568 "../../iup_list.c"
  }
  $35 = $7; //@line 570 "../../iup_list.c"
  $36 = $6; //@line 570 "../../iup_list.c"
  $37 = (_iupMaskCreateReal($35,$36)|0); //@line 570 "../../iup_list.c"
  $5 = $37; //@line 570 "../../iup_list.c"
  $38 = $3; //@line 572 "../../iup_list.c"
  $39 = ((($38)) + 72|0); //@line 572 "../../iup_list.c"
  $40 = HEAP32[$39>>2]|0; //@line 572 "../../iup_list.c"
  $41 = ((($40)) + 52|0); //@line 572 "../../iup_list.c"
  $42 = HEAP32[$41>>2]|0; //@line 572 "../../iup_list.c"
  $43 = ($42|0)!=(0|0); //@line 572 "../../iup_list.c"
  if ($43) {
   $44 = $3; //@line 573 "../../iup_list.c"
   $45 = ((($44)) + 72|0); //@line 573 "../../iup_list.c"
   $46 = HEAP32[$45>>2]|0; //@line 573 "../../iup_list.c"
   $47 = ((($46)) + 52|0); //@line 573 "../../iup_list.c"
   $48 = HEAP32[$47>>2]|0; //@line 573 "../../iup_list.c"
   _iupMaskDestroy($48); //@line 573 "../../iup_list.c"
  }
  $49 = $5; //@line 575 "../../iup_list.c"
  $50 = $3; //@line 575 "../../iup_list.c"
  $51 = ((($50)) + 72|0); //@line 575 "../../iup_list.c"
  $52 = HEAP32[$51>>2]|0; //@line 575 "../../iup_list.c"
  $53 = ((($52)) + 52|0); //@line 575 "../../iup_list.c"
  HEAP32[$53>>2] = $49; //@line 575 "../../iup_list.c"
 } else {
  $17 = ((($16)) + 72|0); //@line 555 "../../iup_list.c"
  $18 = HEAP32[$17>>2]|0; //@line 555 "../../iup_list.c"
  $19 = ((($18)) + 52|0); //@line 555 "../../iup_list.c"
  $20 = HEAP32[$19>>2]|0; //@line 555 "../../iup_list.c"
  $21 = ($20|0)!=(0|0); //@line 555 "../../iup_list.c"
  if ($21) {
   $22 = $3; //@line 557 "../../iup_list.c"
   $23 = ((($22)) + 72|0); //@line 557 "../../iup_list.c"
   $24 = HEAP32[$23>>2]|0; //@line 557 "../../iup_list.c"
   $25 = ((($24)) + 52|0); //@line 557 "../../iup_list.c"
   $26 = HEAP32[$25>>2]|0; //@line 557 "../../iup_list.c"
   _iupMaskDestroy($26); //@line 557 "../../iup_list.c"
   $27 = $3; //@line 558 "../../iup_list.c"
   $28 = ((($27)) + 72|0); //@line 558 "../../iup_list.c"
   $29 = HEAP32[$28>>2]|0; //@line 558 "../../iup_list.c"
   $30 = ((($29)) + 52|0); //@line 558 "../../iup_list.c"
   HEAP32[$30>>2] = 0; //@line 558 "../../iup_list.c"
  }
 }
 $2 = 0; //@line 578 "../../iup_list.c"
 $54 = $2; //@line 579 "../../iup_list.c"
 STACKTOP = sp;return ($54|0); //@line 579 "../../iup_list.c"
}
function _iListGetMaskDataAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 421 "../../iup_list.c"
 $4 = ((($3)) + 72|0); //@line 421 "../../iup_list.c"
 $5 = HEAP32[$4>>2]|0; //@line 421 "../../iup_list.c"
 $6 = ((($5)) + 32|0); //@line 421 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 421 "../../iup_list.c"
 $8 = ($7|0)!=(0); //@line 421 "../../iup_list.c"
 if ($8) {
  $9 = $2; //@line 425 "../../iup_list.c"
  $10 = ((($9)) + 72|0); //@line 425 "../../iup_list.c"
  $11 = HEAP32[$10>>2]|0; //@line 425 "../../iup_list.c"
  $12 = ((($11)) + 52|0); //@line 425 "../../iup_list.c"
  $13 = HEAP32[$12>>2]|0; //@line 425 "../../iup_list.c"
  $1 = $13; //@line 425 "../../iup_list.c"
  $14 = $1; //@line 426 "../../iup_list.c"
  STACKTOP = sp;return ($14|0); //@line 426 "../../iup_list.c"
 } else {
  $1 = 0; //@line 422 "../../iup_list.c"
  $14 = $1; //@line 426 "../../iup_list.c"
  STACKTOP = sp;return ($14|0); //@line 426 "../../iup_list.c"
 }
 return (0)|0;
}
function _iListGetShowImageAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 597 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 597 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 597 "../../iup_list.c"
 $5 = ((($4)) + 44|0); //@line 597 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 597 "../../iup_list.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 597 "../../iup_list.c"
 STACKTOP = sp;return ($7|0); //@line 597 "../../iup_list.c"
}
function _iListSetShowImageAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 584 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 584 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 584 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 584 "../../iup_list.c"
 if ($8) {
  $2 = 0; //@line 585 "../../iup_list.c"
  $16 = $2; //@line 593 "../../iup_list.c"
  STACKTOP = sp;return ($16|0); //@line 593 "../../iup_list.c"
 }
 $9 = $4; //@line 587 "../../iup_list.c"
 $10 = (_iupStrBoolean($9)|0); //@line 587 "../../iup_list.c"
 $11 = ($10|0)!=(0); //@line 587 "../../iup_list.c"
 $12 = $3; //@line 588 "../../iup_list.c"
 $13 = ((($12)) + 72|0); //@line 588 "../../iup_list.c"
 $14 = HEAP32[$13>>2]|0; //@line 588 "../../iup_list.c"
 $15 = ((($14)) + 44|0); //@line 588 "../../iup_list.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 588 "../../iup_list.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 590 "../../iup_list.c"
 }
 $2 = 0; //@line 592 "../../iup_list.c"
 $16 = $2; //@line 593 "../../iup_list.c"
 STACKTOP = sp;return ($16|0); //@line 593 "../../iup_list.c"
}
function _iListGetShowDragDropAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 633 "../../iup_list.c"
 $3 = ((($2)) + 72|0); //@line 633 "../../iup_list.c"
 $4 = HEAP32[$3>>2]|0; //@line 633 "../../iup_list.c"
 $5 = ((($4)) + 48|0); //@line 633 "../../iup_list.c"
 $6 = HEAP32[$5>>2]|0; //@line 633 "../../iup_list.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 633 "../../iup_list.c"
 STACKTOP = sp;return ($7|0); //@line 633 "../../iup_list.c"
}
function _iListSetShowDragDropAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 639 "../../iup_list.c"
 $6 = ((($5)) + 16|0); //@line 639 "../../iup_list.c"
 $7 = HEAP32[$6>>2]|0; //@line 639 "../../iup_list.c"
 $8 = ($7|0)!=(0|0); //@line 639 "../../iup_list.c"
 if ($8) {
  $2 = 0; //@line 640 "../../iup_list.c"
  $16 = $2; //@line 648 "../../iup_list.c"
  STACKTOP = sp;return ($16|0); //@line 648 "../../iup_list.c"
 }
 $9 = $4; //@line 642 "../../iup_list.c"
 $10 = (_iupStrBoolean($9)|0); //@line 642 "../../iup_list.c"
 $11 = ($10|0)!=(0); //@line 642 "../../iup_list.c"
 $12 = $3; //@line 643 "../../iup_list.c"
 $13 = ((($12)) + 72|0); //@line 643 "../../iup_list.c"
 $14 = HEAP32[$13>>2]|0; //@line 643 "../../iup_list.c"
 $15 = ((($14)) + 48|0); //@line 643 "../../iup_list.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 643 "../../iup_list.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 645 "../../iup_list.c"
 }
 $2 = 0; //@line 647 "../../iup_list.c"
 $16 = $2; //@line 648 "../../iup_list.c"
 STACKTOP = sp;return ($16|0); //@line 648 "../../iup_list.c"
}
function _iListSetDragDropListAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 776 "../../iup_list.c"
 $5 = (_iupStrBoolean($4)|0); //@line 776 "../../iup_list.c"
 $6 = ($5|0)!=(0); //@line 776 "../../iup_list.c"
 $7 = $2; //@line 779 "../../iup_list.c"
 if ($6) {
  (_IupSetCallback($7,19768,335)|0); //@line 779 "../../iup_list.c"
  $8 = $2; //@line 780 "../../iup_list.c"
  (_IupSetCallback($8,19781,336)|0); //@line 780 "../../iup_list.c"
  $9 = $2; //@line 781 "../../iup_list.c"
  (_IupSetCallback($9,19797,337)|0); //@line 781 "../../iup_list.c"
  $10 = $2; //@line 782 "../../iup_list.c"
  (_IupSetCallback($10,19809,338)|0); //@line 782 "../../iup_list.c"
  $11 = $2; //@line 783 "../../iup_list.c"
  (_IupSetCallback($11,19820,339)|0); //@line 783 "../../iup_list.c"
  STACKTOP = sp;return 1; //@line 795 "../../iup_list.c"
 } else {
  (_IupSetCallback($7,19768,0)|0); //@line 788 "../../iup_list.c"
  $12 = $2; //@line 789 "../../iup_list.c"
  (_IupSetCallback($12,19781,0)|0); //@line 789 "../../iup_list.c"
  $13 = $2; //@line 790 "../../iup_list.c"
  (_IupSetCallback($13,19797,0)|0); //@line 790 "../../iup_list.c"
  $14 = $2; //@line 791 "../../iup_list.c"
  (_IupSetCallback($14,19809,0)|0); //@line 791 "../../iup_list.c"
  $15 = $2; //@line 792 "../../iup_list.c"
  (_IupSetCallback($15,19820,0)|0); //@line 792 "../../iup_list.c"
  STACKTOP = sp;return 1; //@line 795 "../../iup_list.c"
 }
 return (0)|0;
}
function _iListDragBegin_CB($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 769 "../../iup_list.c"
 $8 = $4; //@line 769 "../../iup_list.c"
 $9 = $5; //@line 769 "../../iup_list.c"
 $10 = (_IupConvertXYToPos($7,$8,$9)|0); //@line 769 "../../iup_list.c"
 $6 = $10; //@line 769 "../../iup_list.c"
 $11 = $3; //@line 770 "../../iup_list.c"
 $12 = $6; //@line 770 "../../iup_list.c"
 _iupAttribSetInt($11,14497,$12); //@line 770 "../../iup_list.c"
 STACKTOP = sp;return -2; //@line 771 "../../iup_list.c"
}
function _iListDragDataSize_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 4; //@line 757 "../../iup_list.c"
}
function _iListDragData_CB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 24|0;
 HEAP32[$5>>2] = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $12 = HEAP32[$5>>2]|0; //@line 720 "../../iup_list.c"
 $13 = (_iupAttribGetInt($12,14497)|0); //@line 720 "../../iup_list.c"
 $9 = $13; //@line 720 "../../iup_list.c"
 $14 = $9; //@line 721 "../../iup_list.c"
 $15 = ($14|0)<(1); //@line 721 "../../iup_list.c"
 if ($15) {
  $4 = -2; //@line 722 "../../iup_list.c"
  $45 = $4; //@line 751 "../../iup_list.c"
  STACKTOP = sp;return ($45|0); //@line 751 "../../iup_list.c"
 }
 $16 = HEAP32[$5>>2]|0; //@line 724 "../../iup_list.c"
 $17 = ((($16)) + 72|0); //@line 724 "../../iup_list.c"
 $18 = HEAP32[$17>>2]|0; //@line 724 "../../iup_list.c"
 $19 = ((($18)) + 24|0); //@line 724 "../../iup_list.c"
 $20 = HEAP32[$19>>2]|0; //@line 724 "../../iup_list.c"
 $21 = ($20|0)!=(0); //@line 724 "../../iup_list.c"
 $22 = HEAP32[$5>>2]|0; //@line 726 "../../iup_list.c"
 if ($21) {
  $23 = (_IupGetAttribute($22,20104)|0); //@line 726 "../../iup_list.c"
  $10 = $23; //@line 726 "../../iup_list.c"
  $24 = $9; //@line 731 "../../iup_list.c"
  $25 = (($24) - 1)|0; //@line 731 "../../iup_list.c"
  $26 = $10; //@line 731 "../../iup_list.c"
  $27 = (($26) + ($25)|0); //@line 731 "../../iup_list.c"
  $28 = HEAP8[$27>>0]|0; //@line 731 "../../iup_list.c"
  $29 = $28 << 24 >> 24; //@line 731 "../../iup_list.c"
  $30 = ($29|0)==(45); //@line 731 "../../iup_list.c"
  if ($30) {
   $31 = $10; //@line 733 "../../iup_list.c"
   $32 = (_strlen($31)|0); //@line 733 "../../iup_list.c"
   $11 = $32; //@line 733 "../../iup_list.c"
   $33 = HEAP32[$5>>2]|0; //@line 734 "../../iup_list.c"
   _IupSetAttribute($33,14517,14846); //@line 734 "../../iup_list.c"
   $34 = $10; //@line 735 "../../iup_list.c"
   $35 = $11; //@line 735 "../../iup_list.c"
   _memset(($34|0),45,($35|0))|0; //@line 735 "../../iup_list.c"
   $36 = $9; //@line 736 "../../iup_list.c"
   $37 = (($36) - 1)|0; //@line 736 "../../iup_list.c"
   $38 = $10; //@line 736 "../../iup_list.c"
   $39 = (($38) + ($37)|0); //@line 736 "../../iup_list.c"
   HEAP8[$39>>0] = 43; //@line 736 "../../iup_list.c"
   $40 = HEAP32[$5>>2]|0; //@line 737 "../../iup_list.c"
   $41 = $10; //@line 737 "../../iup_list.c"
   _IupSetAttribute($40,20104,$41); //@line 737 "../../iup_list.c"
  }
 } else {
  $42 = $9; //@line 743 "../../iup_list.c"
  _IupSetInt($22,20104,$42); //@line 743 "../../iup_list.c"
 }
 $43 = $7; //@line 747 "../../iup_list.c"
 $44 = $8; //@line 747 "../../iup_list.c"
 _memcpy(($43|0),($5|0),($44|0))|0; //@line 747 "../../iup_list.c"
 $4 = -2; //@line 750 "../../iup_list.c"
 $45 = $4; //@line 751 "../../iup_list.c"
 STACKTOP = sp;return ($45|0); //@line 751 "../../iup_list.c"
}
function _iListDragEnd_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 762 "../../iup_list.c"
 _iupAttribSetInt($4,14497,0); //@line 762 "../../iup_list.c"
 STACKTOP = sp;return -2; //@line 764 "../../iup_list.c"
}
function _iListDropData_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $14 = sp + 48|0;
 $15 = sp + 12|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $19 = $6; //@line 656 "../../iup_list.c"
 $20 = $10; //@line 656 "../../iup_list.c"
 $21 = $11; //@line 656 "../../iup_list.c"
 $22 = (_IupConvertXYToPos($19,$20,$21)|0); //@line 656 "../../iup_list.c"
 $12 = $22; //@line 656 "../../iup_list.c"
 $13 = 0; //@line 657 "../../iup_list.c"
 $23 = $8; //@line 662 "../../iup_list.c"
 $24 = $9; //@line 662 "../../iup_list.c"
 _memcpy(($15|0),($23|0),($24|0))|0; //@line 662 "../../iup_list.c"
 _iupdrvGetKeyState($14); //@line 667 "../../iup_list.c"
 $25 = ((($14)) + 1|0); //@line 668 "../../iup_list.c"
 $26 = HEAP8[$25>>0]|0; //@line 668 "../../iup_list.c"
 $27 = $26 << 24 >> 24; //@line 668 "../../iup_list.c"
 $28 = ($27|0)==(67); //@line 668 "../../iup_list.c"
 if ($28) {
  $13 = 1; //@line 669 "../../iup_list.c"
 }
 $29 = HEAP32[$15>>2]|0; //@line 671 "../../iup_list.c"
 $30 = ((($29)) + 72|0); //@line 671 "../../iup_list.c"
 $31 = HEAP32[$30>>2]|0; //@line 671 "../../iup_list.c"
 $32 = ((($31)) + 24|0); //@line 671 "../../iup_list.c"
 $33 = HEAP32[$32>>2]|0; //@line 671 "../../iup_list.c"
 $34 = ($33|0)!=(0); //@line 671 "../../iup_list.c"
 if (!($34)) {
  $85 = $6; //@line 704 "../../iup_list.c"
  $86 = $12; //@line 704 "../../iup_list.c"
  $87 = HEAP32[$15>>2]|0; //@line 704 "../../iup_list.c"
  $88 = HEAP32[$15>>2]|0; //@line 704 "../../iup_list.c"
  $89 = (_IupGetAttribute($88,20104)|0); //@line 704 "../../iup_list.c"
  $90 = (_IupGetAttribute($87,$89)|0); //@line 704 "../../iup_list.c"
  _iupdrvListInsertItem($85,$86,$90); //@line 704 "../../iup_list.c"
  $91 = $6; //@line 705 "../../iup_list.c"
  $92 = $12; //@line 705 "../../iup_list.c"
  $93 = (($92) + 1)|0; //@line 705 "../../iup_list.c"
  $12 = $93; //@line 705 "../../iup_list.c"
  $94 = HEAP32[$15>>2]|0; //@line 705 "../../iup_list.c"
  $95 = HEAP32[$15>>2]|0; //@line 705 "../../iup_list.c"
  $96 = (_IupGetInt($95,20104)|0); //@line 705 "../../iup_list.c"
  $97 = (_iupdrvListGetImageHandle($94,$96)|0); //@line 705 "../../iup_list.c"
  (_iupdrvListSetImageHandle($91,$93,$97)|0); //@line 705 "../../iup_list.c"
  $98 = HEAP32[$15>>2]|0; //@line 707 "../../iup_list.c"
  $99 = (_IupGetInt($98,19852)|0); //@line 707 "../../iup_list.c"
  $100 = ($99|0)==(0); //@line 707 "../../iup_list.c"
  $101 = $13; //@line 707 "../../iup_list.c"
  $102 = ($101|0)!=(0); //@line 707 "../../iup_list.c"
  $or$cond3 = $100 | $102; //@line 707 "../../iup_list.c"
  if ($or$cond3) {
   STACKTOP = sp;return -2; //@line 715 "../../iup_list.c"
  }
  $103 = HEAP32[$15>>2]|0; //@line 709 "../../iup_list.c"
  $104 = (_iupAttribGetInt($103,14497)|0); //@line 709 "../../iup_list.c"
  $18 = $104; //@line 709 "../../iup_list.c"
  $105 = HEAP32[$15>>2]|0; //@line 710 "../../iup_list.c"
  $106 = $18; //@line 710 "../../iup_list.c"
  $107 = (($106) + -1)|0; //@line 710 "../../iup_list.c"
  $18 = $107; //@line 710 "../../iup_list.c"
  _iupdrvListRemoveItem($105,$107); //@line 710 "../../iup_list.c"
  STACKTOP = sp;return -2; //@line 715 "../../iup_list.c"
 }
 $35 = HEAP32[$15>>2]|0; //@line 673 "../../iup_list.c"
 $36 = (_IupGetAttribute($35,20104)|0); //@line 673 "../../iup_list.c"
 $16 = $36; //@line 673 "../../iup_list.c"
 $17 = 1; //@line 676 "../../iup_list.c"
 while(1) {
  $37 = $17; //@line 677 "../../iup_list.c"
  $38 = (($37) - 1)|0; //@line 677 "../../iup_list.c"
  $39 = $16; //@line 677 "../../iup_list.c"
  $40 = (($39) + ($38)|0); //@line 677 "../../iup_list.c"
  $41 = HEAP8[$40>>0]|0; //@line 677 "../../iup_list.c"
  $42 = $41 << 24 >> 24; //@line 677 "../../iup_list.c"
  $43 = ($42|0)!=(0); //@line 677 "../../iup_list.c"
  if (!($43)) {
   break;
  }
  $44 = $17; //@line 679 "../../iup_list.c"
  $45 = (($44) - 1)|0; //@line 679 "../../iup_list.c"
  $46 = $16; //@line 679 "../../iup_list.c"
  $47 = (($46) + ($45)|0); //@line 679 "../../iup_list.c"
  $48 = HEAP8[$47>>0]|0; //@line 679 "../../iup_list.c"
  $49 = $48 << 24 >> 24; //@line 679 "../../iup_list.c"
  $50 = ($49|0)==(43); //@line 679 "../../iup_list.c"
  if ($50) {
   $51 = $6; //@line 681 "../../iup_list.c"
   $52 = $12; //@line 681 "../../iup_list.c"
   $53 = HEAP32[$15>>2]|0; //@line 681 "../../iup_list.c"
   $54 = $17; //@line 681 "../../iup_list.c"
   $55 = (_iupStrReturnInt($54)|0); //@line 681 "../../iup_list.c"
   $56 = (_IupGetAttribute($53,$55)|0); //@line 681 "../../iup_list.c"
   _iupdrvListInsertItem($51,$52,$56); //@line 681 "../../iup_list.c"
   $57 = $6; //@line 682 "../../iup_list.c"
   $58 = $12; //@line 682 "../../iup_list.c"
   $59 = (($58) + 1)|0; //@line 682 "../../iup_list.c"
   $12 = $59; //@line 682 "../../iup_list.c"
   $60 = HEAP32[$15>>2]|0; //@line 682 "../../iup_list.c"
   $61 = $17; //@line 682 "../../iup_list.c"
   $62 = (_iupdrvListGetImageHandle($60,$61)|0); //@line 682 "../../iup_list.c"
   (_iupdrvListSetImageHandle($57,$59,$62)|0); //@line 682 "../../iup_list.c"
  }
  $63 = $17; //@line 685 "../../iup_list.c"
  $64 = (($63) + 1)|0; //@line 685 "../../iup_list.c"
  $17 = $64; //@line 685 "../../iup_list.c"
 }
 $65 = HEAP32[$15>>2]|0; //@line 688 "../../iup_list.c"
 $66 = (_IupGetInt($65,19852)|0); //@line 688 "../../iup_list.c"
 $67 = ($66|0)==(0); //@line 688 "../../iup_list.c"
 $68 = $13; //@line 688 "../../iup_list.c"
 $69 = ($68|0)!=(0); //@line 688 "../../iup_list.c"
 $or$cond = $67 | $69; //@line 688 "../../iup_list.c"
 if ($or$cond) {
  STACKTOP = sp;return -2; //@line 715 "../../iup_list.c"
 }
 $17 = 1; //@line 691 "../../iup_list.c"
 while(1) {
  $70 = $16; //@line 692 "../../iup_list.c"
  $71 = HEAP8[$70>>0]|0; //@line 692 "../../iup_list.c"
  $72 = $71 << 24 >> 24; //@line 692 "../../iup_list.c"
  $73 = ($72|0)!=(0); //@line 692 "../../iup_list.c"
  if (!($73)) {
   break;
  }
  $74 = $16; //@line 694 "../../iup_list.c"
  $75 = HEAP8[$74>>0]|0; //@line 694 "../../iup_list.c"
  $76 = $75 << 24 >> 24; //@line 694 "../../iup_list.c"
  $77 = ($76|0)==(43); //@line 694 "../../iup_list.c"
  if ($77) {
   $78 = HEAP32[$15>>2]|0; //@line 695 "../../iup_list.c"
   $79 = $17; //@line 695 "../../iup_list.c"
   $80 = (($79) + -1)|0; //@line 695 "../../iup_list.c"
   $17 = $80; //@line 695 "../../iup_list.c"
   _iupdrvListRemoveItem($78,$80); //@line 695 "../../iup_list.c"
  }
  $81 = $17; //@line 697 "../../iup_list.c"
  $82 = (($81) + 1)|0; //@line 697 "../../iup_list.c"
  $17 = $82; //@line 697 "../../iup_list.c"
  $83 = $16; //@line 698 "../../iup_list.c"
  $84 = ((($83)) + 1|0); //@line 698 "../../iup_list.c"
  $16 = $84; //@line 698 "../../iup_list.c"
 }
 STACKTOP = sp;return -2; //@line 715 "../../iup_list.c"
}
function _iListGetCount($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 317 "../../iup_list.c"
 $4 = ((($3)) + 16|0); //@line 317 "../../iup_list.c"
 $5 = HEAP32[$4>>2]|0; //@line 317 "../../iup_list.c"
 $6 = ($5|0)!=(0|0); //@line 317 "../../iup_list.c"
 if ($6) {
  $7 = $1; //@line 318 "../../iup_list.c"
  $8 = (_iupdrvListGetCount($7)|0); //@line 318 "../../iup_list.c"
  $2 = $8; //@line 318 "../../iup_list.c"
  $16 = $2; //@line 325 "../../iup_list.c"
  STACKTOP = sp;return ($16|0); //@line 325 "../../iup_list.c"
 }
 $2 = 0; //@line 321 "../../iup_list.c"
 while(1) {
  $9 = $1; //@line 322 "../../iup_list.c"
  $10 = $2; //@line 322 "../../iup_list.c"
  $11 = (($10) + 1)|0; //@line 322 "../../iup_list.c"
  $12 = (_iupAttribGetId($9,362470,$11)|0); //@line 322 "../../iup_list.c"
  $13 = ($12|0)!=(0|0); //@line 322 "../../iup_list.c"
  if (!($13)) {
   break;
  }
  $14 = $2; //@line 323 "../../iup_list.c"
  $15 = (($14) + 1)|0; //@line 323 "../../iup_list.c"
  $2 = $15; //@line 323 "../../iup_list.c"
 }
 $16 = $2; //@line 325 "../../iup_list.c"
 STACKTOP = sp;return ($16|0); //@line 325 "../../iup_list.c"
}
function _iListGetNaturalItemsSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $13 = sp + 16|0;
 $14 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = 0; //@line 868 "../../iup_list.c"
 $8 = 0; //@line 868 "../../iup_list.c"
 $18 = $3; //@line 870 "../../iup_list.c"
 $19 = (_iListGetCount($18)|0); //@line 870 "../../iup_list.c"
 $11 = $19; //@line 870 "../../iup_list.c"
 $20 = $4; //@line 872 "../../iup_list.c"
 HEAP32[$20>>2] = 0; //@line 872 "../../iup_list.c"
 $21 = $5; //@line 873 "../../iup_list.c"
 HEAP32[$21>>2] = 0; //@line 873 "../../iup_list.c"
 $22 = $3; //@line 875 "../../iup_list.c"
 $23 = $4; //@line 875 "../../iup_list.c"
 $24 = $5; //@line 875 "../../iup_list.c"
 _iupdrvFontGetCharSize($22,$23,$24); //@line 875 "../../iup_list.c"
 $25 = $3; //@line 877 "../../iup_list.c"
 $26 = (_iupAttribGetInt($25,17683)|0); //@line 877 "../../iup_list.c"
 $9 = $26; //@line 877 "../../iup_list.c"
 $27 = $9; //@line 878 "../../iup_list.c"
 $28 = ($27|0)!=(0); //@line 878 "../../iup_list.c"
 if ($28) {
  $29 = $3; //@line 880 "../../iup_list.c"
  $30 = (_iupdrvFontGetStringWidth($29,17749)|0); //@line 880 "../../iup_list.c"
  $31 = $4; //@line 880 "../../iup_list.c"
  HEAP32[$31>>2] = $30; //@line 880 "../../iup_list.c"
  $32 = $9; //@line 881 "../../iup_list.c"
  $33 = $4; //@line 881 "../../iup_list.c"
  $34 = HEAP32[$33>>2]|0; //@line 881 "../../iup_list.c"
  $35 = Math_imul($32, $34)|0; //@line 881 "../../iup_list.c"
  $36 = (($35|0) / 10)&-1; //@line 881 "../../iup_list.c"
  $37 = $4; //@line 881 "../../iup_list.c"
  HEAP32[$37>>2] = $36; //@line 881 "../../iup_list.c"
 } else {
  $10 = 1; //@line 887 "../../iup_list.c"
  while(1) {
   $38 = $10; //@line 887 "../../iup_list.c"
   $39 = $11; //@line 887 "../../iup_list.c"
   $40 = ($38|0)<=($39|0); //@line 887 "../../iup_list.c"
   if (!($40)) {
    break;
   }
   $12 = 0; //@line 889 "../../iup_list.c"
   $41 = $3; //@line 891 "../../iup_list.c"
   $42 = $10; //@line 891 "../../iup_list.c"
   $43 = (_IupGetAttributeId($41,362470,$42)|0); //@line 891 "../../iup_list.c"
   $6 = $43; //@line 891 "../../iup_list.c"
   $44 = $6; //@line 892 "../../iup_list.c"
   $45 = ($44|0)!=(0|0); //@line 892 "../../iup_list.c"
   if ($45) {
    $46 = $3; //@line 893 "../../iup_list.c"
    $47 = $6; //@line 893 "../../iup_list.c"
    $48 = (_iupdrvFontGetStringWidth($46,$47)|0); //@line 893 "../../iup_list.c"
    $12 = $48; //@line 893 "../../iup_list.c"
   }
   $49 = $12; //@line 895 "../../iup_list.c"
   $50 = $4; //@line 895 "../../iup_list.c"
   $51 = HEAP32[$50>>2]|0; //@line 895 "../../iup_list.c"
   $52 = ($49|0)>($51|0); //@line 895 "../../iup_list.c"
   if ($52) {
    $53 = $12; //@line 896 "../../iup_list.c"
    $54 = $4; //@line 896 "../../iup_list.c"
    HEAP32[$54>>2] = $53; //@line 896 "../../iup_list.c"
   }
   $55 = $10; //@line 887 "../../iup_list.c"
   $56 = (($55) + 1)|0; //@line 887 "../../iup_list.c"
   $10 = $56; //@line 887 "../../iup_list.c"
  }
  $57 = $4; //@line 899 "../../iup_list.c"
  $58 = HEAP32[$57>>2]|0; //@line 899 "../../iup_list.c"
  $59 = ($58|0)==(0); //@line 899 "../../iup_list.c"
  if ($59) {
   $60 = $3; //@line 900 "../../iup_list.c"
   $61 = (_iupdrvFontGetStringWidth($60,14531)|0); //@line 900 "../../iup_list.c"
   $62 = $4; //@line 900 "../../iup_list.c"
   HEAP32[$62>>2] = $61; //@line 900 "../../iup_list.c"
  }
 }
 $63 = $3; //@line 903 "../../iup_list.c"
 $64 = ((($63)) + 72|0); //@line 903 "../../iup_list.c"
 $65 = HEAP32[$64>>2]|0; //@line 903 "../../iup_list.c"
 $66 = ((($65)) + 44|0); //@line 903 "../../iup_list.c"
 $67 = HEAP32[$66>>2]|0; //@line 903 "../../iup_list.c"
 $68 = ($67|0)!=(0); //@line 903 "../../iup_list.c"
 if ($68) {
  $10 = 1; //@line 905 "../../iup_list.c"
  while(1) {
   $69 = $10; //@line 905 "../../iup_list.c"
   $70 = $11; //@line 905 "../../iup_list.c"
   $71 = ($69|0)<=($70|0); //@line 905 "../../iup_list.c"
   if (!($71)) {
    break;
   }
   $72 = $3; //@line 908 "../../iup_list.c"
   $73 = $10; //@line 908 "../../iup_list.c"
   _iListGetItemImageInfo($72,$73,$13,$14); //@line 908 "../../iup_list.c"
   $74 = HEAP32[$13>>2]|0; //@line 909 "../../iup_list.c"
   $75 = $7; //@line 909 "../../iup_list.c"
   $76 = ($74|0)>($75|0); //@line 909 "../../iup_list.c"
   if ($76) {
    $77 = HEAP32[$13>>2]|0; //@line 910 "../../iup_list.c"
    $7 = $77; //@line 910 "../../iup_list.c"
   }
   $78 = HEAP32[$14>>2]|0; //@line 911 "../../iup_list.c"
   $79 = $8; //@line 911 "../../iup_list.c"
   $80 = ($78|0)>($79|0); //@line 911 "../../iup_list.c"
   if ($80) {
    $81 = HEAP32[$14>>2]|0; //@line 912 "../../iup_list.c"
    $8 = $81; //@line 912 "../../iup_list.c"
   }
   $82 = $10; //@line 905 "../../iup_list.c"
   $83 = (($82) + 1)|0; //@line 905 "../../iup_list.c"
   $10 = $83; //@line 905 "../../iup_list.c"
  }
  $84 = $7; //@line 916 "../../iup_list.c"
  $85 = $3; //@line 916 "../../iup_list.c"
  $86 = ((($85)) + 72|0); //@line 916 "../../iup_list.c"
  $87 = HEAP32[$86>>2]|0; //@line 916 "../../iup_list.c"
  $88 = ((($87)) + 36|0); //@line 916 "../../iup_list.c"
  HEAP32[$88>>2] = $84; //@line 916 "../../iup_list.c"
  $89 = $8; //@line 917 "../../iup_list.c"
  $90 = $3; //@line 917 "../../iup_list.c"
  $91 = ((($90)) + 72|0); //@line 917 "../../iup_list.c"
  $92 = HEAP32[$91>>2]|0; //@line 917 "../../iup_list.c"
  $93 = ((($92)) + 40|0); //@line 917 "../../iup_list.c"
  HEAP32[$93>>2] = $89; //@line 917 "../../iup_list.c"
  $94 = $7; //@line 919 "../../iup_list.c"
  $95 = $4; //@line 919 "../../iup_list.c"
  $96 = HEAP32[$95>>2]|0; //@line 919 "../../iup_list.c"
  $97 = (($96) + ($94))|0; //@line 919 "../../iup_list.c"
  HEAP32[$95>>2] = $97; //@line 919 "../../iup_list.c"
 }
 $98 = $3; //@line 923 "../../iup_list.c"
 $99 = ((($98)) + 72|0); //@line 923 "../../iup_list.c"
 $100 = HEAP32[$99>>2]|0; //@line 923 "../../iup_list.c"
 $101 = ((($100)) + 28|0); //@line 923 "../../iup_list.c"
 $102 = HEAP32[$101>>2]|0; //@line 923 "../../iup_list.c"
 $103 = ($102|0)!=(0); //@line 923 "../../iup_list.c"
 if ($103) {
  $161 = $3; //@line 950 "../../iup_list.c"
  $162 = ((($161)) + 72|0); //@line 950 "../../iup_list.c"
  $163 = HEAP32[$162>>2]|0; //@line 950 "../../iup_list.c"
  $164 = ((($163)) + 32|0); //@line 950 "../../iup_list.c"
  $165 = HEAP32[$164>>2]|0; //@line 950 "../../iup_list.c"
  $166 = ($165|0)!=(0); //@line 950 "../../iup_list.c"
  if ($166) {
   STACKTOP = sp;return; //@line 956 "../../iup_list.c"
  }
  $167 = $3; //@line 952 "../../iup_list.c"
  $168 = ((($167)) + 72|0); //@line 952 "../../iup_list.c"
  $169 = HEAP32[$168>>2]|0; //@line 952 "../../iup_list.c"
  $170 = ((($169)) + 44|0); //@line 952 "../../iup_list.c"
  $171 = HEAP32[$170>>2]|0; //@line 952 "../../iup_list.c"
  $172 = ($171|0)!=(0); //@line 952 "../../iup_list.c"
  if (!($172)) {
   STACKTOP = sp;return; //@line 956 "../../iup_list.c"
  }
  $173 = $8; //@line 952 "../../iup_list.c"
  $174 = $5; //@line 952 "../../iup_list.c"
  $175 = HEAP32[$174>>2]|0; //@line 952 "../../iup_list.c"
  $176 = ($173|0)>($175|0); //@line 952 "../../iup_list.c"
  if (!($176)) {
   STACKTOP = sp;return; //@line 956 "../../iup_list.c"
  }
  $177 = $8; //@line 953 "../../iup_list.c"
  $178 = $5; //@line 953 "../../iup_list.c"
  HEAP32[$178>>2] = $177; //@line 953 "../../iup_list.c"
  STACKTOP = sp;return; //@line 956 "../../iup_list.c"
 }
 $104 = $5; //@line 926 "../../iup_list.c"
 $105 = HEAP32[$104>>2]|0; //@line 926 "../../iup_list.c"
 $17 = $105; //@line 926 "../../iup_list.c"
 $106 = $3; //@line 928 "../../iup_list.c"
 $107 = ((($106)) + 72|0); //@line 928 "../../iup_list.c"
 $108 = HEAP32[$107>>2]|0; //@line 928 "../../iup_list.c"
 $109 = ((($108)) + 44|0); //@line 928 "../../iup_list.c"
 $110 = HEAP32[$109>>2]|0; //@line 928 "../../iup_list.c"
 $111 = ($110|0)!=(0); //@line 928 "../../iup_list.c"
 if ($111) {
  $112 = $8; //@line 928 "../../iup_list.c"
  $113 = $5; //@line 928 "../../iup_list.c"
  $114 = HEAP32[$113>>2]|0; //@line 928 "../../iup_list.c"
  $115 = ($112|0)>($114|0); //@line 928 "../../iup_list.c"
  if ($115) {
   $116 = $8; //@line 929 "../../iup_list.c"
   $117 = $5; //@line 929 "../../iup_list.c"
   HEAP32[$117>>2] = $116; //@line 929 "../../iup_list.c"
  }
 }
 $118 = $3; //@line 931 "../../iup_list.c"
 $119 = $5; //@line 931 "../../iup_list.c"
 _iupdrvListAddItemSpace($118,$119); //@line 931 "../../iup_list.c"
 $120 = $3; //@line 933 "../../iup_list.c"
 $121 = ((($120)) + 72|0); //@line 933 "../../iup_list.c"
 $122 = HEAP32[$121>>2]|0; //@line 933 "../../iup_list.c"
 $123 = ((($122)) + 8|0); //@line 933 "../../iup_list.c"
 $124 = HEAP32[$123>>2]|0; //@line 933 "../../iup_list.c"
 $125 = $124<<1; //@line 933 "../../iup_list.c"
 $126 = $5; //@line 933 "../../iup_list.c"
 $127 = HEAP32[$126>>2]|0; //@line 933 "../../iup_list.c"
 $128 = (($127) + ($125))|0; //@line 933 "../../iup_list.c"
 HEAP32[$126>>2] = $128; //@line 933 "../../iup_list.c"
 $129 = $3; //@line 934 "../../iup_list.c"
 $130 = ((($129)) + 72|0); //@line 934 "../../iup_list.c"
 $131 = HEAP32[$130>>2]|0; //@line 934 "../../iup_list.c"
 $132 = ((($131)) + 8|0); //@line 934 "../../iup_list.c"
 $133 = HEAP32[$132>>2]|0; //@line 934 "../../iup_list.c"
 $134 = $133<<1; //@line 934 "../../iup_list.c"
 $135 = $4; //@line 934 "../../iup_list.c"
 $136 = HEAP32[$135>>2]|0; //@line 934 "../../iup_list.c"
 $137 = (($136) + ($134))|0; //@line 934 "../../iup_list.c"
 HEAP32[$135>>2] = $137; //@line 934 "../../iup_list.c"
 $138 = $11; //@line 936 "../../iup_list.c"
 $16 = $138; //@line 936 "../../iup_list.c"
 $139 = $16; //@line 937 "../../iup_list.c"
 $140 = ($139|0)==(0); //@line 937 "../../iup_list.c"
 $$ = $140 ? 1 : $138; //@line 937 "../../iup_list.c"
 $16 = $$; //@line 937 "../../iup_list.c"
 $141 = $3; //@line 939 "../../iup_list.c"
 $142 = (_iupAttribGetInt($141,17698)|0); //@line 939 "../../iup_list.c"
 $15 = $142; //@line 939 "../../iup_list.c"
 $143 = $15; //@line 940 "../../iup_list.c"
 $144 = ($143|0)!=(0); //@line 940 "../../iup_list.c"
 if ($144) {
  $145 = $15; //@line 941 "../../iup_list.c"
  $16 = $145; //@line 941 "../../iup_list.c"
 }
 $146 = $5; //@line 943 "../../iup_list.c"
 $147 = HEAP32[$146>>2]|0; //@line 943 "../../iup_list.c"
 $148 = $16; //@line 943 "../../iup_list.c"
 $149 = Math_imul($147, $148)|0; //@line 943 "../../iup_list.c"
 $150 = $5; //@line 943 "../../iup_list.c"
 HEAP32[$150>>2] = $149; //@line 943 "../../iup_list.c"
 $151 = $3; //@line 945 "../../iup_list.c"
 $152 = ((($151)) + 72|0); //@line 945 "../../iup_list.c"
 $153 = HEAP32[$152>>2]|0; //@line 945 "../../iup_list.c"
 $154 = ((($153)) + 32|0); //@line 945 "../../iup_list.c"
 $155 = HEAP32[$154>>2]|0; //@line 945 "../../iup_list.c"
 $156 = ($155|0)!=(0); //@line 945 "../../iup_list.c"
 if (!($156)) {
  STACKTOP = sp;return; //@line 956 "../../iup_list.c"
 }
 $157 = $17; //@line 946 "../../iup_list.c"
 $158 = $5; //@line 946 "../../iup_list.c"
 $159 = HEAP32[$158>>2]|0; //@line 946 "../../iup_list.c"
 $160 = (($159) + ($157))|0; //@line 946 "../../iup_list.c"
 HEAP32[$158>>2] = $160; //@line 946 "../../iup_list.c"
 STACKTOP = sp;return; //@line 956 "../../iup_list.c"
}
function _iListGetItemImageInfo($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $10 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $6; //@line 845 "../../iup_list.c"
 HEAP32[$11>>2] = 0; //@line 845 "../../iup_list.c"
 $12 = $7; //@line 846 "../../iup_list.c"
 HEAP32[$12>>2] = 0; //@line 846 "../../iup_list.c"
 $13 = $4; //@line 848 "../../iup_list.c"
 $14 = ((($13)) + 16|0); //@line 848 "../../iup_list.c"
 $15 = HEAP32[$14>>2]|0; //@line 848 "../../iup_list.c"
 $16 = ($15|0)!=(0|0); //@line 848 "../../iup_list.c"
 $17 = $4; //@line 856 "../../iup_list.c"
 $18 = $5; //@line 856 "../../iup_list.c"
 if ($16) {
  $25 = (_iupdrvListGetImageHandle($17,$18)|0); //@line 856 "../../iup_list.c"
  $9 = $25; //@line 856 "../../iup_list.c"
  $26 = $9; //@line 857 "../../iup_list.c"
  $27 = ($26|0)!=(0|0); //@line 857 "../../iup_list.c"
  if (!($27)) {
   STACKTOP = sp;return; //@line 863 "../../iup_list.c"
  }
  $28 = $9; //@line 860 "../../iup_list.c"
  $29 = $6; //@line 860 "../../iup_list.c"
  $30 = $7; //@line 860 "../../iup_list.c"
  (_iupdrvImageGetInfo($28,$29,$30,$10)|0); //@line 860 "../../iup_list.c"
  STACKTOP = sp;return; //@line 863 "../../iup_list.c"
 } else {
  $19 = (_iupAttribGetId($17,20169,$18)|0); //@line 850 "../../iup_list.c"
  $8 = $19; //@line 850 "../../iup_list.c"
  $20 = $8; //@line 851 "../../iup_list.c"
  $21 = ($20|0)!=(0|0); //@line 851 "../../iup_list.c"
  if (!($21)) {
   STACKTOP = sp;return; //@line 863 "../../iup_list.c"
  }
  $22 = $8; //@line 852 "../../iup_list.c"
  $23 = $6; //@line 852 "../../iup_list.c"
  $24 = $7; //@line 852 "../../iup_list.c"
  _iupImageGetInfo($22,$23,$24,0); //@line 852 "../../iup_list.c"
  STACKTOP = sp;return; //@line 863 "../../iup_list.c"
 }
}
function _iupMaskCheck($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0.0, $46 = 0;
 var $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $8 = $4; //@line 42 "../../iup_mask.c"
 $9 = ($8|0)!=(0|0); //@line 42 "../../iup_mask.c"
 if ($9) {
  $10 = $4; //@line 42 "../../iup_mask.c"
  $11 = HEAP8[$10>>0]|0; //@line 42 "../../iup_mask.c"
  $12 = ($11<<24>>24)!=(0); //@line 42 "../../iup_mask.c"
  $13 = $3; //@line 42 "../../iup_mask.c"
  $14 = ($13|0)!=(0|0); //@line 42 "../../iup_mask.c"
  $or$cond = $12 & $14; //@line 42 "../../iup_mask.c"
  if ($or$cond) {
   $15 = $4; //@line 45 "../../iup_mask.c"
   $16 = $3; //@line 45 "../../iup_mask.c"
   $17 = ((($16)) + 4|0); //@line 45 "../../iup_mask.c"
   $18 = HEAP32[$17>>2]|0; //@line 45 "../../iup_mask.c"
   $19 = $3; //@line 45 "../../iup_mask.c"
   $20 = ((($19)) + 8|0); //@line 45 "../../iup_mask.c"
   $21 = HEAP32[$20>>2]|0; //@line 45 "../../iup_mask.c"
   $22 = (_iupMaskMatch($15,$18,0,0,0,0,$21)|0); //@line 45 "../../iup_mask.c"
   $5 = $22; //@line 45 "../../iup_mask.c"
   $23 = $5; //@line 46 "../../iup_mask.c"
   $24 = ($23|0)==(-4); //@line 46 "../../iup_mask.c"
   if ($24) {
    $2 = -1; //@line 47 "../../iup_mask.c"
    $55 = $2; //@line 72 "../../iup_mask.c"
    STACKTOP = sp;return ($55|0); //@line 72 "../../iup_mask.c"
   }
   $25 = $5; //@line 48 "../../iup_mask.c"
   $26 = $4; //@line 48 "../../iup_mask.c"
   $27 = (_strlen($26)|0); //@line 48 "../../iup_mask.c"
   $28 = ($25|0)!=($27|0); //@line 48 "../../iup_mask.c"
   if ($28) {
    $2 = 0; //@line 49 "../../iup_mask.c"
    $55 = $2; //@line 72 "../../iup_mask.c"
    STACKTOP = sp;return ($55|0); //@line 72 "../../iup_mask.c"
   }
   $29 = $3; //@line 51 "../../iup_mask.c"
   $30 = ((($29)) + 12|0); //@line 51 "../../iup_mask.c"
   $31 = HEAP8[$30>>0]|0; //@line 51 "../../iup_mask.c"
   $32 = $31 << 24 >> 24; //@line 51 "../../iup_mask.c"
   L12: do {
    switch ($32|0) {
    case 73:  {
     HEAP32[$6>>2] = 0; //@line 55 "../../iup_mask.c"
     $33 = $4; //@line 56 "../../iup_mask.c"
     (_iupStrToInt($33,$6)|0); //@line 56 "../../iup_mask.c"
     $34 = HEAP32[$6>>2]|0; //@line 57 "../../iup_mask.c"
     $35 = $3; //@line 57 "../../iup_mask.c"
     $36 = ((($35)) + 24|0); //@line 57 "../../iup_mask.c"
     $37 = HEAP32[$36>>2]|0; //@line 57 "../../iup_mask.c"
     $38 = ($34|0)<($37|0); //@line 57 "../../iup_mask.c"
     if (!($38)) {
      $39 = HEAP32[$6>>2]|0; //@line 57 "../../iup_mask.c"
      $40 = $3; //@line 57 "../../iup_mask.c"
      $41 = ((($40)) + 28|0); //@line 57 "../../iup_mask.c"
      $42 = HEAP32[$41>>2]|0; //@line 57 "../../iup_mask.c"
      $43 = ($39|0)>($42|0); //@line 57 "../../iup_mask.c"
      if (!($43)) {
       break L12;
      }
     }
     $2 = 0; //@line 58 "../../iup_mask.c"
     $55 = $2; //@line 72 "../../iup_mask.c"
     STACKTOP = sp;return ($55|0); //@line 72 "../../iup_mask.c"
     break;
    }
    case 70:  {
     HEAPF32[$7>>2] = 0.0; //@line 63 "../../iup_mask.c"
     $44 = $4; //@line 64 "../../iup_mask.c"
     (_iupStrToFloat($44,$7)|0); //@line 64 "../../iup_mask.c"
     $45 = +HEAPF32[$7>>2]; //@line 65 "../../iup_mask.c"
     $46 = $3; //@line 65 "../../iup_mask.c"
     $47 = ((($46)) + 16|0); //@line 65 "../../iup_mask.c"
     $48 = +HEAPF32[$47>>2]; //@line 65 "../../iup_mask.c"
     $49 = $45 < $48; //@line 65 "../../iup_mask.c"
     if (!($49)) {
      $50 = +HEAPF32[$7>>2]; //@line 65 "../../iup_mask.c"
      $51 = $3; //@line 65 "../../iup_mask.c"
      $52 = ((($51)) + 20|0); //@line 65 "../../iup_mask.c"
      $53 = +HEAPF32[$52>>2]; //@line 65 "../../iup_mask.c"
      $54 = $50 > $53; //@line 65 "../../iup_mask.c"
      if (!($54)) {
       break L12;
      }
     }
     $2 = 0; //@line 66 "../../iup_mask.c"
     $55 = $2; //@line 72 "../../iup_mask.c"
     STACKTOP = sp;return ($55|0); //@line 72 "../../iup_mask.c"
     break;
    }
    default: {
    }
    }
   } while(0);
   $2 = 1; //@line 71 "../../iup_mask.c"
   $55 = $2; //@line 72 "../../iup_mask.c"
   STACKTOP = sp;return ($55|0); //@line 72 "../../iup_mask.c"
  }
 }
 $2 = 1; //@line 43 "../../iup_mask.c"
 $55 = $2; //@line 72 "../../iup_mask.c"
 STACKTOP = sp;return ($55|0); //@line 72 "../../iup_mask.c"
}
function _iupMaskCreate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $3 = $0;
 $4 = $1;
 $8 = $3; //@line 80 "../../iup_mask.c"
 $9 = ($8|0)!=(0|0); //@line 80 "../../iup_mask.c"
 if (!($9)) {
  $2 = 0; //@line 81 "../../iup_mask.c"
  $27 = $2; //@line 99 "../../iup_mask.c"
  STACKTOP = sp;return ($27|0); //@line 99 "../../iup_mask.c"
 }
 $10 = $3; //@line 84 "../../iup_mask.c"
 $11 = (_iupStrDup($10)|0); //@line 84 "../../iup_mask.c"
 $7 = $11; //@line 84 "../../iup_mask.c"
 $12 = $7; //@line 85 "../../iup_mask.c"
 $13 = (_iupMaskParse($12,$5)|0); //@line 85 "../../iup_mask.c"
 $14 = ($13|0)!=(0); //@line 85 "../../iup_mask.c"
 if ($14) {
  $15 = $7; //@line 87 "../../iup_mask.c"
  _free($15); //@line 87 "../../iup_mask.c"
  $2 = 0; //@line 88 "../../iup_mask.c"
  $27 = $2; //@line 99 "../../iup_mask.c"
  STACKTOP = sp;return ($27|0); //@line 99 "../../iup_mask.c"
 } else {
  $16 = (_malloc(32)|0); //@line 91 "../../iup_mask.c"
  $6 = $16; //@line 91 "../../iup_mask.c"
  $17 = $6; //@line 92 "../../iup_mask.c"
  ;HEAP32[$17>>2]=0|0;HEAP32[$17+4>>2]=0|0;HEAP32[$17+8>>2]=0|0;HEAP32[$17+12>>2]=0|0;HEAP32[$17+16>>2]=0|0;HEAP32[$17+20>>2]=0|0;HEAP32[$17+24>>2]=0|0;HEAP32[$17+28>>2]=0|0; //@line 92 "../../iup_mask.c"
  $18 = $7; //@line 94 "../../iup_mask.c"
  $19 = $6; //@line 94 "../../iup_mask.c"
  HEAP32[$19>>2] = $18; //@line 94 "../../iup_mask.c"
  $20 = $4; //@line 95 "../../iup_mask.c"
  $21 = $6; //@line 95 "../../iup_mask.c"
  $22 = ((($21)) + 8|0); //@line 95 "../../iup_mask.c"
  HEAP32[$22>>2] = $20; //@line 95 "../../iup_mask.c"
  $23 = HEAP32[$5>>2]|0; //@line 96 "../../iup_mask.c"
  $24 = $6; //@line 96 "../../iup_mask.c"
  $25 = ((($24)) + 4|0); //@line 96 "../../iup_mask.c"
  HEAP32[$25>>2] = $23; //@line 96 "../../iup_mask.c"
  $26 = $6; //@line 98 "../../iup_mask.c"
  $2 = $26; //@line 98 "../../iup_mask.c"
  $27 = $2; //@line 99 "../../iup_mask.c"
  STACKTOP = sp;return ($27|0); //@line 99 "../../iup_mask.c"
 }
 return (0)|0;
}
function _iupMaskCreateInt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 105 "../../iup_mask.c"
 $6 = ($5|0)<(0); //@line 105 "../../iup_mask.c"
 if ($6) {
  $7 = (_iupMaskCreate(14537,0)|0); //@line 106 "../../iup_mask.c"
  $4 = $7; //@line 106 "../../iup_mask.c"
 } else {
  $8 = (_iupMaskCreate(14547,0)|0); //@line 108 "../../iup_mask.c"
  $4 = $8; //@line 108 "../../iup_mask.c"
 }
 $9 = $4; //@line 110 "../../iup_mask.c"
 $10 = ($9|0)!=(0|0); //@line 110 "../../iup_mask.c"
 if (!($10)) {
  $19 = $4; //@line 117 "../../iup_mask.c"
  STACKTOP = sp;return ($19|0); //@line 117 "../../iup_mask.c"
 }
 $11 = $2; //@line 112 "../../iup_mask.c"
 $12 = $4; //@line 112 "../../iup_mask.c"
 $13 = ((($12)) + 24|0); //@line 112 "../../iup_mask.c"
 HEAP32[$13>>2] = $11; //@line 112 "../../iup_mask.c"
 $14 = $3; //@line 113 "../../iup_mask.c"
 $15 = $4; //@line 113 "../../iup_mask.c"
 $16 = ((($15)) + 28|0); //@line 113 "../../iup_mask.c"
 HEAP32[$16>>2] = $14; //@line 113 "../../iup_mask.c"
 $17 = $4; //@line 114 "../../iup_mask.c"
 $18 = ((($17)) + 12|0); //@line 114 "../../iup_mask.c"
 HEAP8[$18>>0] = 73; //@line 114 "../../iup_mask.c"
 $19 = $4; //@line 117 "../../iup_mask.c"
 STACKTOP = sp;return ($19|0); //@line 117 "../../iup_mask.c"
}
function _iupMaskCreateReal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 123 "../../iup_mask.c"
 $7 = $3; //@line 125 "../../iup_mask.c"
 $8 = ($7|0)!=(0|0); //@line 125 "../../iup_mask.c"
 if ($8) {
  $9 = $3; //@line 127 "../../iup_mask.c"
  $10 = HEAP8[$9>>0]|0; //@line 127 "../../iup_mask.c"
  $11 = $10 << 24 >> 24; //@line 127 "../../iup_mask.c"
  $12 = ($11|0)==(44); //@line 127 "../../iup_mask.c"
  if ($12) {
   $5 = 1; //@line 128 "../../iup_mask.c"
  }
 } else {
  $13 = (_localeconv()|0); //@line 132 "../../iup_mask.c"
  $6 = $13; //@line 132 "../../iup_mask.c"
  $14 = $6; //@line 133 "../../iup_mask.c"
  $15 = HEAP32[$14>>2]|0; //@line 133 "../../iup_mask.c"
  $16 = HEAP8[$15>>0]|0; //@line 133 "../../iup_mask.c"
  $17 = $16 << 24 >> 24; //@line 133 "../../iup_mask.c"
  $18 = ($17|0)==(44); //@line 133 "../../iup_mask.c"
  if ($18) {
   $5 = 1; //@line 134 "../../iup_mask.c"
  }
 }
 $19 = $5; //@line 137 "../../iup_mask.c"
 $20 = ($19|0)!=(0); //@line 137 "../../iup_mask.c"
 $21 = $2; //@line 139 "../../iup_mask.c"
 $22 = ($21|0)!=(0); //@line 139 "../../iup_mask.c"
 do {
  if ($20) {
   if ($22) {
    $23 = (_iupMaskCreate(14551,0)|0); //@line 140 "../../iup_mask.c"
    $4 = $23; //@line 140 "../../iup_mask.c"
    break;
   } else {
    $24 = (_iupMaskCreate(14569,0)|0); //@line 142 "../../iup_mask.c"
    $4 = $24; //@line 142 "../../iup_mask.c"
    break;
   }
  } else {
   if ($22) {
    $25 = (_iupMaskCreate(14593,0)|0); //@line 147 "../../iup_mask.c"
    $4 = $25; //@line 147 "../../iup_mask.c"
    break;
   } else {
    $26 = (_iupMaskCreate(14611,0)|0); //@line 149 "../../iup_mask.c"
    $4 = $26; //@line 149 "../../iup_mask.c"
    break;
   }
  }
 } while(0);
 $27 = $4; //@line 152 "../../iup_mask.c"
 STACKTOP = sp;return ($27|0); //@line 152 "../../iup_mask.c"
}
function _iupMaskCreateFloat($0,$1,$2) {
 $0 = +$0;
 $1 = +$1;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0.0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 157 "../../iup_mask.c"
 $8 = $7 >= 0.0; //@line 157 "../../iup_mask.c"
 $9 = $8&1; //@line 157 "../../iup_mask.c"
 $10 = $5; //@line 157 "../../iup_mask.c"
 $11 = (_iupMaskCreateReal($9,$10)|0); //@line 157 "../../iup_mask.c"
 $6 = $11; //@line 157 "../../iup_mask.c"
 $12 = $6; //@line 159 "../../iup_mask.c"
 $13 = ($12|0)!=(0|0); //@line 159 "../../iup_mask.c"
 if (!($13)) {
  $22 = $6; //@line 166 "../../iup_mask.c"
  STACKTOP = sp;return ($22|0); //@line 166 "../../iup_mask.c"
 }
 $14 = $3; //@line 161 "../../iup_mask.c"
 $15 = $6; //@line 161 "../../iup_mask.c"
 $16 = ((($15)) + 16|0); //@line 161 "../../iup_mask.c"
 HEAPF32[$16>>2] = $14; //@line 161 "../../iup_mask.c"
 $17 = $4; //@line 162 "../../iup_mask.c"
 $18 = $6; //@line 162 "../../iup_mask.c"
 $19 = ((($18)) + 20|0); //@line 162 "../../iup_mask.c"
 HEAPF32[$19>>2] = $17; //@line 162 "../../iup_mask.c"
 $20 = $6; //@line 163 "../../iup_mask.c"
 $21 = ((($20)) + 12|0); //@line 163 "../../iup_mask.c"
 HEAP8[$21>>0] = 70; //@line 163 "../../iup_mask.c"
 $22 = $6; //@line 166 "../../iup_mask.c"
 STACKTOP = sp;return ($22|0); //@line 166 "../../iup_mask.c"
}
function _iupMaskDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 171 "../../iup_mask.c"
 $3 = HEAP32[$2>>2]|0; //@line 171 "../../iup_mask.c"
 _free($3); //@line 171 "../../iup_mask.c"
 $4 = $1; //@line 172 "../../iup_mask.c"
 $5 = ((($4)) + 4|0); //@line 172 "../../iup_mask.c"
 $6 = HEAP32[$5>>2]|0; //@line 172 "../../iup_mask.c"
 _free($6); //@line 172 "../../iup_mask.c"
 $7 = $1; //@line 173 "../../iup_mask.c"
 _free($7); //@line 173 "../../iup_mask.c"
 STACKTOP = sp;return; //@line 174 "../../iup_mask.c"
}
function _iupMaskGetStr($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 178 "../../iup_mask.c"
 $3 = HEAP32[$2>>2]|0; //@line 178 "../../iup_mask.c"
 STACKTOP = sp;return ($3|0); //@line 178 "../../iup_mask.c"
}
function _iupMaskMatchGetFuncs() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (208|0); //@line 126 "../../iup_maskmatch.c"
}
function _match_alphanum($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 86 "../../iup_maskmatch.c"
 $5 = $2; //@line 86 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 86 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 86 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 86 "../../iup_maskmatch.c"
 $9 = (_isalnum($8)|0); //@line 86 "../../iup_maskmatch.c"
 $10 = ($9|0)!=(0); //@line 86 "../../iup_maskmatch.c"
 if ($10) {
  $17 = 1;
  $18 = $17 ? 0 : 2; //@line 86 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($18|0); //@line 86 "../../iup_maskmatch.c"
 }
 $11 = $3; //@line 86 "../../iup_maskmatch.c"
 $12 = $2; //@line 86 "../../iup_maskmatch.c"
 $13 = (($12) + ($11)|0); //@line 86 "../../iup_maskmatch.c"
 $14 = HEAP8[$13>>0]|0; //@line 86 "../../iup_maskmatch.c"
 $15 = $14 << 24 >> 24; //@line 86 "../../iup_maskmatch.c"
 $16 = ($15|0)==(95); //@line 86 "../../iup_maskmatch.c"
 $17 = $16;
 $18 = $17 ? 0 : 2; //@line 86 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($18|0); //@line 86 "../../iup_maskmatch.c"
}
function _match_non_alphanum($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 91 "../../iup_maskmatch.c"
 $5 = $2; //@line 91 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 91 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 91 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 91 "../../iup_maskmatch.c"
 $9 = (_isalnum($8)|0); //@line 91 "../../iup_maskmatch.c"
 $10 = ($9|0)!=(0); //@line 91 "../../iup_maskmatch.c"
 if ($10) {
  $23 = 1;
 } else {
  $11 = $3; //@line 91 "../../iup_maskmatch.c"
  $12 = $2; //@line 91 "../../iup_maskmatch.c"
  $13 = (($12) + ($11)|0); //@line 91 "../../iup_maskmatch.c"
  $14 = HEAP8[$13>>0]|0; //@line 91 "../../iup_maskmatch.c"
  $15 = $14 << 24 >> 24; //@line 91 "../../iup_maskmatch.c"
  $16 = ($15|0)==(95); //@line 91 "../../iup_maskmatch.c"
  if ($16) {
   $23 = 1;
  } else {
   $17 = $3; //@line 91 "../../iup_maskmatch.c"
   $18 = $2; //@line 91 "../../iup_maskmatch.c"
   $19 = (($18) + ($17)|0); //@line 91 "../../iup_maskmatch.c"
   $20 = HEAP8[$19>>0]|0; //@line 91 "../../iup_maskmatch.c"
   $21 = $20 << 24 >> 24; //@line 91 "../../iup_maskmatch.c"
   $22 = ($21|0)==(0); //@line 91 "../../iup_maskmatch.c"
   $23 = $22;
  }
 }
 $24 = $23 ? 2 : 0; //@line 91 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($24|0); //@line 91 "../../iup_maskmatch.c"
}
function _match_digit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 75 "../../iup_maskmatch.c"
 $5 = $2; //@line 75 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 75 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 75 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 75 "../../iup_maskmatch.c"
 $9 = (_isdigit($8)|0); //@line 75 "../../iup_maskmatch.c"
 $10 = ($9|0)!=(0); //@line 75 "../../iup_maskmatch.c"
 $11 = $10 ? 0 : 2; //@line 75 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($11|0); //@line 75 "../../iup_maskmatch.c"
}
function _match_non_digit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 80 "../../iup_maskmatch.c"
 $5 = $2; //@line 80 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 80 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 80 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 80 "../../iup_maskmatch.c"
 $9 = (_isdigit($8)|0); //@line 80 "../../iup_maskmatch.c"
 $10 = ($9|0)!=(0); //@line 80 "../../iup_maskmatch.c"
 if ($10) {
  $17 = 0;
  $18 = $17 ? 0 : 2; //@line 80 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($18|0); //@line 80 "../../iup_maskmatch.c"
 }
 $11 = $3; //@line 80 "../../iup_maskmatch.c"
 $12 = $2; //@line 80 "../../iup_maskmatch.c"
 $13 = (($12) + ($11)|0); //@line 80 "../../iup_maskmatch.c"
 $14 = HEAP8[$13>>0]|0; //@line 80 "../../iup_maskmatch.c"
 $15 = $14 << 24 >> 24; //@line 80 "../../iup_maskmatch.c"
 $16 = ($15|0)!=(0); //@line 80 "../../iup_maskmatch.c"
 $17 = $16;
 $18 = $17 ? 0 : 2; //@line 80 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($18|0); //@line 80 "../../iup_maskmatch.c"
}
function _match_non_blanks($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 57 "../../iup_maskmatch.c"
 $5 = $2; //@line 57 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 57 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 57 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 57 "../../iup_maskmatch.c"
 $9 = ($8|0)==(9); //@line 57 "../../iup_maskmatch.c"
 if ($9) {
  $29 = 1;
 } else {
  $10 = $3; //@line 57 "../../iup_maskmatch.c"
  $11 = $2; //@line 57 "../../iup_maskmatch.c"
  $12 = (($11) + ($10)|0); //@line 57 "../../iup_maskmatch.c"
  $13 = HEAP8[$12>>0]|0; //@line 57 "../../iup_maskmatch.c"
  $14 = $13 << 24 >> 24; //@line 57 "../../iup_maskmatch.c"
  $15 = ($14|0)==(-1); //@line 57 "../../iup_maskmatch.c"
  if ($15) {
   $29 = 1;
  } else {
   $16 = $3; //@line 58 "../../iup_maskmatch.c"
   $17 = $2; //@line 58 "../../iup_maskmatch.c"
   $18 = (($17) + ($16)|0); //@line 58 "../../iup_maskmatch.c"
   $19 = HEAP8[$18>>0]|0; //@line 58 "../../iup_maskmatch.c"
   $20 = $19 << 24 >> 24; //@line 58 "../../iup_maskmatch.c"
   $21 = ($20|0)==(32); //@line 58 "../../iup_maskmatch.c"
   if ($21) {
    $29 = 1;
   } else {
    $22 = $3; //@line 58 "../../iup_maskmatch.c"
    $23 = $2; //@line 58 "../../iup_maskmatch.c"
    $24 = (($23) + ($22)|0); //@line 58 "../../iup_maskmatch.c"
    $25 = HEAP8[$24>>0]|0; //@line 58 "../../iup_maskmatch.c"
    $26 = $25 << 24 >> 24; //@line 58 "../../iup_maskmatch.c"
    $27 = ($26|0)==(10); //@line 58 "../../iup_maskmatch.c"
    $29 = $27;
   }
  }
 }
 $28 = $29 ^ 1; //@line 57 "../../iup_maskmatch.c"
 $30 = $28 ? 0 : 2; //@line 57 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($30|0); //@line 57 "../../iup_maskmatch.c"
}
function _match_blanks($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 51 "../../iup_maskmatch.c"
 $5 = $2; //@line 51 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 51 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 51 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 51 "../../iup_maskmatch.c"
 $9 = ($8|0)==(9); //@line 51 "../../iup_maskmatch.c"
 if ($9) {
  $28 = 1;
 } else {
  $10 = $3; //@line 51 "../../iup_maskmatch.c"
  $11 = $2; //@line 51 "../../iup_maskmatch.c"
  $12 = (($11) + ($10)|0); //@line 51 "../../iup_maskmatch.c"
  $13 = HEAP8[$12>>0]|0; //@line 51 "../../iup_maskmatch.c"
  $14 = $13 << 24 >> 24; //@line 51 "../../iup_maskmatch.c"
  $15 = ($14|0)==(-1); //@line 51 "../../iup_maskmatch.c"
  if ($15) {
   $28 = 1;
  } else {
   $16 = $3; //@line 51 "../../iup_maskmatch.c"
   $17 = $2; //@line 51 "../../iup_maskmatch.c"
   $18 = (($17) + ($16)|0); //@line 51 "../../iup_maskmatch.c"
   $19 = HEAP8[$18>>0]|0; //@line 51 "../../iup_maskmatch.c"
   $20 = $19 << 24 >> 24; //@line 51 "../../iup_maskmatch.c"
   $21 = ($20|0)==(32); //@line 51 "../../iup_maskmatch.c"
   if ($21) {
    $28 = 1;
   } else {
    $22 = $3; //@line 52 "../../iup_maskmatch.c"
    $23 = $2; //@line 52 "../../iup_maskmatch.c"
    $24 = (($23) + ($22)|0); //@line 52 "../../iup_maskmatch.c"
    $25 = HEAP8[$24>>0]|0; //@line 52 "../../iup_maskmatch.c"
    $26 = $25 << 24 >> 24; //@line 52 "../../iup_maskmatch.c"
    $27 = ($26|0)==(10); //@line 52 "../../iup_maskmatch.c"
    $28 = $27;
   }
  }
 }
 $29 = $28 ? 0 : 2; //@line 51 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($29|0); //@line 51 "../../iup_maskmatch.c"
}
function _match_word_boundary($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $4; //@line 97 "../../iup_maskmatch.c"
 $6 = ($5|0)==(0); //@line 97 "../../iup_maskmatch.c"
 do {
  if ($6) {
   $7 = $4; //@line 97 "../../iup_maskmatch.c"
   $8 = $3; //@line 97 "../../iup_maskmatch.c"
   $9 = (($8) + ($7)|0); //@line 97 "../../iup_maskmatch.c"
   $10 = HEAP8[$9>>0]|0; //@line 97 "../../iup_maskmatch.c"
   $11 = $10 << 24 >> 24; //@line 97 "../../iup_maskmatch.c"
   $12 = (_isalnum($11)|0); //@line 97 "../../iup_maskmatch.c"
   $13 = ($12|0)!=(0); //@line 97 "../../iup_maskmatch.c"
   if (!($13)) {
    $14 = $4; //@line 97 "../../iup_maskmatch.c"
    $15 = $3; //@line 97 "../../iup_maskmatch.c"
    $16 = (($15) + ($14)|0); //@line 97 "../../iup_maskmatch.c"
    $17 = HEAP8[$16>>0]|0; //@line 97 "../../iup_maskmatch.c"
    $18 = $17 << 24 >> 24; //@line 97 "../../iup_maskmatch.c"
    $19 = ($18|0)==(95); //@line 97 "../../iup_maskmatch.c"
    if (!($19)) {
     break;
    }
   }
   $2 = 1; //@line 98 "../../iup_maskmatch.c"
   $76 = $2; //@line 108 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($76|0); //@line 108 "../../iup_maskmatch.c"
  }
 } while(0);
 $20 = $4; //@line 100 "../../iup_maskmatch.c"
 $21 = (($20) - 1)|0; //@line 100 "../../iup_maskmatch.c"
 $22 = $3; //@line 100 "../../iup_maskmatch.c"
 $23 = (($22) + ($21)|0); //@line 100 "../../iup_maskmatch.c"
 $24 = HEAP8[$23>>0]|0; //@line 100 "../../iup_maskmatch.c"
 $25 = $24 << 24 >> 24; //@line 100 "../../iup_maskmatch.c"
 $26 = (_isalnum($25)|0); //@line 100 "../../iup_maskmatch.c"
 $27 = ($26|0)!=(0); //@line 100 "../../iup_maskmatch.c"
 if ($27) {
  label = 7;
 } else {
  $28 = $4; //@line 100 "../../iup_maskmatch.c"
  $29 = (($28) - 1)|0; //@line 100 "../../iup_maskmatch.c"
  $30 = $3; //@line 100 "../../iup_maskmatch.c"
  $31 = (($30) + ($29)|0); //@line 100 "../../iup_maskmatch.c"
  $32 = HEAP8[$31>>0]|0; //@line 100 "../../iup_maskmatch.c"
  $33 = $32 << 24 >> 24; //@line 100 "../../iup_maskmatch.c"
  $34 = ($33|0)==(95); //@line 100 "../../iup_maskmatch.c"
  if ($34) {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $35 = $4; //@line 100 "../../iup_maskmatch.c"
  $36 = $3; //@line 100 "../../iup_maskmatch.c"
  $37 = (($36) + ($35)|0); //@line 100 "../../iup_maskmatch.c"
  $38 = HEAP8[$37>>0]|0; //@line 100 "../../iup_maskmatch.c"
  $39 = $38 << 24 >> 24; //@line 100 "../../iup_maskmatch.c"
  $40 = (_isalnum($39)|0); //@line 100 "../../iup_maskmatch.c"
  $41 = ($40|0)!=(0); //@line 100 "../../iup_maskmatch.c"
  if (!($41)) {
   $42 = $4; //@line 100 "../../iup_maskmatch.c"
   $43 = $3; //@line 100 "../../iup_maskmatch.c"
   $44 = (($43) + ($42)|0); //@line 100 "../../iup_maskmatch.c"
   $45 = HEAP8[$44>>0]|0; //@line 100 "../../iup_maskmatch.c"
   $46 = $45 << 24 >> 24; //@line 100 "../../iup_maskmatch.c"
   $47 = ($46|0)==(95); //@line 100 "../../iup_maskmatch.c"
   if (!($47)) {
    $2 = 1; //@line 101 "../../iup_maskmatch.c"
    $76 = $2; //@line 108 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($76|0); //@line 108 "../../iup_maskmatch.c"
   }
  }
 }
 $48 = $4; //@line 103 "../../iup_maskmatch.c"
 $49 = $3; //@line 103 "../../iup_maskmatch.c"
 $50 = (($49) + ($48)|0); //@line 103 "../../iup_maskmatch.c"
 $51 = HEAP8[$50>>0]|0; //@line 103 "../../iup_maskmatch.c"
 $52 = $51 << 24 >> 24; //@line 103 "../../iup_maskmatch.c"
 $53 = (_isalnum($52)|0); //@line 103 "../../iup_maskmatch.c"
 $54 = ($53|0)!=(0); //@line 103 "../../iup_maskmatch.c"
 if ($54) {
  label = 12;
 } else {
  $55 = $4; //@line 103 "../../iup_maskmatch.c"
  $56 = $3; //@line 103 "../../iup_maskmatch.c"
  $57 = (($56) + ($55)|0); //@line 103 "../../iup_maskmatch.c"
  $58 = HEAP8[$57>>0]|0; //@line 103 "../../iup_maskmatch.c"
  $59 = $58 << 24 >> 24; //@line 103 "../../iup_maskmatch.c"
  $60 = ($59|0)==(95); //@line 103 "../../iup_maskmatch.c"
  if ($60) {
   label = 12;
  }
 }
 if ((label|0) == 12) {
  $61 = $4; //@line 103 "../../iup_maskmatch.c"
  $62 = (($61) - 1)|0; //@line 103 "../../iup_maskmatch.c"
  $63 = $3; //@line 103 "../../iup_maskmatch.c"
  $64 = (($63) + ($62)|0); //@line 103 "../../iup_maskmatch.c"
  $65 = HEAP8[$64>>0]|0; //@line 103 "../../iup_maskmatch.c"
  $66 = $65 << 24 >> 24; //@line 103 "../../iup_maskmatch.c"
  $67 = (_isalnum($66)|0); //@line 103 "../../iup_maskmatch.c"
  $68 = ($67|0)!=(0); //@line 103 "../../iup_maskmatch.c"
  if (!($68)) {
   $69 = $4; //@line 103 "../../iup_maskmatch.c"
   $70 = (($69) - 1)|0; //@line 103 "../../iup_maskmatch.c"
   $71 = $3; //@line 103 "../../iup_maskmatch.c"
   $72 = (($71) + ($70)|0); //@line 103 "../../iup_maskmatch.c"
   $73 = HEAP8[$72>>0]|0; //@line 103 "../../iup_maskmatch.c"
   $74 = $73 << 24 >> 24; //@line 103 "../../iup_maskmatch.c"
   $75 = ($74|0)==(95); //@line 103 "../../iup_maskmatch.c"
   if (!($75)) {
    $2 = 1; //@line 104 "../../iup_maskmatch.c"
    $76 = $2; //@line 108 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($76|0); //@line 108 "../../iup_maskmatch.c"
   }
  }
 }
 $2 = 2; //@line 106 "../../iup_maskmatch.c"
 $76 = $2; //@line 108 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($76|0); //@line 108 "../../iup_maskmatch.c"
}
function _match_alpha($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 64 "../../iup_maskmatch.c"
 $5 = $2; //@line 64 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 64 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 64 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 64 "../../iup_maskmatch.c"
 $9 = (_isalpha($8)|0); //@line 64 "../../iup_maskmatch.c"
 $10 = ($9|0)!=(0); //@line 64 "../../iup_maskmatch.c"
 $11 = $10 ? 0 : 2; //@line 64 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($11|0); //@line 64 "../../iup_maskmatch.c"
}
function _match_non_alpha($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 69 "../../iup_maskmatch.c"
 $5 = $2; //@line 69 "../../iup_maskmatch.c"
 $6 = (($5) + ($4)|0); //@line 69 "../../iup_maskmatch.c"
 $7 = HEAP8[$6>>0]|0; //@line 69 "../../iup_maskmatch.c"
 $8 = $7 << 24 >> 24; //@line 69 "../../iup_maskmatch.c"
 $9 = (_isalpha($8)|0); //@line 69 "../../iup_maskmatch.c"
 $10 = ($9|0)!=(0); //@line 69 "../../iup_maskmatch.c"
 if ($10) {
  $17 = 0;
  $18 = $17 ? 0 : 2; //@line 69 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($18|0); //@line 69 "../../iup_maskmatch.c"
 }
 $11 = $3; //@line 69 "../../iup_maskmatch.c"
 $12 = $2; //@line 69 "../../iup_maskmatch.c"
 $13 = (($12) + ($11)|0); //@line 69 "../../iup_maskmatch.c"
 $14 = HEAP8[$13>>0]|0; //@line 69 "../../iup_maskmatch.c"
 $15 = $14 << 24 >> 24; //@line 69 "../../iup_maskmatch.c"
 $16 = ($15|0)!=(0); //@line 69 "../../iup_maskmatch.c"
 $17 = $16;
 $18 = $17 ? 0 : 2; //@line 69 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($18|0); //@line 69 "../../iup_maskmatch.c"
}
function _iupMaskMatch($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 20064|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(20064|0);
 $16 = sp + 56|0;
 $17 = sp;
 $8 = $0;
 $9 = $1;
 $10 = $2;
 $11 = $3;
 $12 = $4;
 $13 = $5;
 $14 = $6;
 $18 = $9; //@line 570 "../../iup_maskmatch.c"
 $19 = HEAP8[$18>>0]|0; //@line 570 "../../iup_maskmatch.c"
 $20 = $19 << 24 >> 24; //@line 570 "../../iup_maskmatch.c"
 $21 = ($20|0)==(101); //@line 570 "../../iup_maskmatch.c"
 $22 = $8; //@line 571 "../../iup_maskmatch.c"
 if ($21) {
  $23 = $9; //@line 571 "../../iup_maskmatch.c"
  $24 = $10; //@line 571 "../../iup_maskmatch.c"
  $25 = $13; //@line 571 "../../iup_maskmatch.c"
  $26 = $14; //@line 571 "../../iup_maskmatch.c"
  $27 = (_iMaskMatchLocal($22,$23,$24,$25,$26)|0); //@line 571 "../../iup_maskmatch.c"
  $7 = $27; //@line 571 "../../iup_maskmatch.c"
  $47 = $7; //@line 582 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($47|0); //@line 582 "../../iup_maskmatch.c"
 } else {
  HEAP32[$17>>2] = $22; //@line 573 "../../iup_maskmatch.c"
  $28 = $9; //@line 574 "../../iup_maskmatch.c"
  $29 = ((($17)) + 4|0); //@line 574 "../../iup_maskmatch.c"
  HEAP32[$29>>2] = $28; //@line 574 "../../iup_maskmatch.c"
  $30 = ((($17)) + 12|0); //@line 575 "../../iup_maskmatch.c"
  HEAP32[$30>>2] = $16; //@line 575 "../../iup_maskmatch.c"
  $31 = $11; //@line 576 "../../iup_maskmatch.c"
  $32 = ((($17)) + 8|0); //@line 576 "../../iup_maskmatch.c"
  HEAP32[$32>>2] = $31; //@line 576 "../../iup_maskmatch.c"
  $33 = $12; //@line 577 "../../iup_maskmatch.c"
  $34 = ((($17)) + 16|0); //@line 577 "../../iup_maskmatch.c"
  HEAP32[$34>>2] = $33; //@line 577 "../../iup_maskmatch.c"
  $35 = $10; //@line 579 "../../iup_maskmatch.c"
  $36 = $9; //@line 579 "../../iup_maskmatch.c"
  $37 = ((($36)) + 8|0); //@line 579 "../../iup_maskmatch.c"
  $38 = HEAP32[$37>>2]|0; //@line 579 "../../iup_maskmatch.c"
  $39 = (_iMaskMatchRecursive($17,$35,$38,0,0)|0); //@line 579 "../../iup_maskmatch.c"
  $15 = $39; //@line 579 "../../iup_maskmatch.c"
  $40 = $15; //@line 581 "../../iup_maskmatch.c"
  $41 = $10; //@line 581 "../../iup_maskmatch.c"
  $42 = ($40|0)>=($41|0); //@line 581 "../../iup_maskmatch.c"
  $43 = $15; //@line 581 "../../iup_maskmatch.c"
  $44 = $10; //@line 581 "../../iup_maskmatch.c"
  $45 = (($43) - ($44))|0; //@line 581 "../../iup_maskmatch.c"
  $46 = $42 ? $45 : $43; //@line 581 "../../iup_maskmatch.c"
  $7 = $46; //@line 581 "../../iup_maskmatch.c"
  $47 = $7; //@line 582 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($47|0); //@line 582 "../../iup_maskmatch.c"
 }
 return (0)|0;
}
function _iMaskMatchLocal($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4096|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4096|0);
 $12 = sp + 48|0;
 $13 = sp + 40|0;
 $14 = sp + 2088|0;
 $15 = sp + 88|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = -1; //@line 368 "../../iup_maskmatch.c"
 $17 = 0; //@line 373 "../../iup_maskmatch.c"
 $25 = $9; //@line 376 "../../iup_maskmatch.c"
 $26 = ($25|0)!=(0|0); //@line 376 "../../iup_maskmatch.c"
 if ($26) {
  $27 = $9; //@line 376 "../../iup_maskmatch.c"
  HEAP8[$27>>0] = 0; //@line 376 "../../iup_maskmatch.c"
 }
 $28 = $8; //@line 378 "../../iup_maskmatch.c"
 $17 = $28; //@line 378 "../../iup_maskmatch.c"
 _iMaskNewStack($12,$14); //@line 380 "../../iup_maskmatch.c"
 _iMaskNewStack($13,$15); //@line 381 "../../iup_maskmatch.c"
 $29 = $7; //@line 383 "../../iup_maskmatch.c"
 $30 = ((($29)) + 8|0); //@line 383 "../../iup_maskmatch.c"
 $31 = HEAP32[$30>>2]|0; //@line 383 "../../iup_maskmatch.c"
 _iMaskPushStack($12,$31); //@line 383 "../../iup_maskmatch.c"
 while(1) {
  $18 = 0; //@line 387 "../../iup_maskmatch.c"
  while(1) {
   $32 = $18; //@line 387 "../../iup_maskmatch.c"
   $33 = ((($12)) + 4|0); //@line 387 "../../iup_maskmatch.c"
   $34 = HEAP16[$33>>1]|0; //@line 387 "../../iup_maskmatch.c"
   $35 = $34 << 16 >> 16; //@line 387 "../../iup_maskmatch.c"
   $36 = ($32|0)<($35|0); //@line 387 "../../iup_maskmatch.c"
   if (!($36)) {
    break;
   }
   $37 = $18; //@line 389 "../../iup_maskmatch.c"
   $38 = HEAP32[$12>>2]|0; //@line 389 "../../iup_maskmatch.c"
   $39 = (($38) + ($37<<1)|0); //@line 389 "../../iup_maskmatch.c"
   $40 = HEAP16[$39>>1]|0; //@line 389 "../../iup_maskmatch.c"
   $41 = $40 << 16 >> 16; //@line 389 "../../iup_maskmatch.c"
   $16 = $41; //@line 389 "../../iup_maskmatch.c"
   $42 = $16; //@line 391 "../../iup_maskmatch.c"
   $43 = ($42|0)==(0); //@line 391 "../../iup_maskmatch.c"
   L9: do {
    if ($43) {
     $44 = $17; //@line 393 "../../iup_maskmatch.c"
     $45 = $8; //@line 393 "../../iup_maskmatch.c"
     $46 = (($44) - ($45))|0; //@line 393 "../../iup_maskmatch.c"
     $11 = $46; //@line 393 "../../iup_maskmatch.c"
    } else {
     $47 = $16; //@line 397 "../../iup_maskmatch.c"
     $48 = $7; //@line 397 "../../iup_maskmatch.c"
     $49 = (($48) + ($47<<4)|0); //@line 397 "../../iup_maskmatch.c"
     $50 = ((($49)) + 4|0); //@line 397 "../../iup_maskmatch.c"
     $51 = HEAP32[$50>>2]|0; //@line 397 "../../iup_maskmatch.c"
     $52 = ($51|0)==(1); //@line 397 "../../iup_maskmatch.c"
     if ($52) {
      $53 = $16; //@line 399 "../../iup_maskmatch.c"
      $54 = $7; //@line 399 "../../iup_maskmatch.c"
      $55 = (($54) + ($53<<4)|0); //@line 399 "../../iup_maskmatch.c"
      $56 = ((($55)) + 12|0); //@line 399 "../../iup_maskmatch.c"
      $57 = HEAP32[$56>>2]|0; //@line 399 "../../iup_maskmatch.c"
      $58 = (_iMaskInStack($12,$57)|0); //@line 399 "../../iup_maskmatch.c"
      $59 = ($58|0)!=(0); //@line 399 "../../iup_maskmatch.c"
      if (!($59)) {
       $60 = $16; //@line 400 "../../iup_maskmatch.c"
       $61 = $7; //@line 400 "../../iup_maskmatch.c"
       $62 = (($61) + ($60<<4)|0); //@line 400 "../../iup_maskmatch.c"
       $63 = ((($62)) + 12|0); //@line 400 "../../iup_maskmatch.c"
       $64 = HEAP32[$63>>2]|0; //@line 400 "../../iup_maskmatch.c"
       _iMaskPushStack($12,$64); //@line 400 "../../iup_maskmatch.c"
      }
      $65 = $16; //@line 402 "../../iup_maskmatch.c"
      $66 = $7; //@line 402 "../../iup_maskmatch.c"
      $67 = (($66) + ($65<<4)|0); //@line 402 "../../iup_maskmatch.c"
      $68 = ((($67)) + 8|0); //@line 402 "../../iup_maskmatch.c"
      $69 = HEAP32[$68>>2]|0; //@line 402 "../../iup_maskmatch.c"
      $70 = $16; //@line 402 "../../iup_maskmatch.c"
      $71 = $7; //@line 402 "../../iup_maskmatch.c"
      $72 = (($71) + ($70<<4)|0); //@line 402 "../../iup_maskmatch.c"
      $73 = ((($72)) + 12|0); //@line 402 "../../iup_maskmatch.c"
      $74 = HEAP32[$73>>2]|0; //@line 402 "../../iup_maskmatch.c"
      $75 = ($69|0)!=($74|0); //@line 402 "../../iup_maskmatch.c"
      if (!($75)) {
       break;
      }
      $76 = $16; //@line 404 "../../iup_maskmatch.c"
      $77 = $7; //@line 404 "../../iup_maskmatch.c"
      $78 = (($77) + ($76<<4)|0); //@line 404 "../../iup_maskmatch.c"
      $79 = ((($78)) + 8|0); //@line 404 "../../iup_maskmatch.c"
      $80 = HEAP32[$79>>2]|0; //@line 404 "../../iup_maskmatch.c"
      $81 = (_iMaskInStack($12,$80)|0); //@line 404 "../../iup_maskmatch.c"
      $82 = ($81|0)!=(0); //@line 404 "../../iup_maskmatch.c"
      if ($82) {
       break;
      }
      $83 = $16; //@line 405 "../../iup_maskmatch.c"
      $84 = $7; //@line 405 "../../iup_maskmatch.c"
      $85 = (($84) + ($83<<4)|0); //@line 405 "../../iup_maskmatch.c"
      $86 = ((($85)) + 8|0); //@line 405 "../../iup_maskmatch.c"
      $87 = HEAP32[$86>>2]|0; //@line 405 "../../iup_maskmatch.c"
      _iMaskPushStack($12,$87); //@line 405 "../../iup_maskmatch.c"
      break;
     }
     $88 = $17; //@line 408 "../../iup_maskmatch.c"
     $89 = $6; //@line 408 "../../iup_maskmatch.c"
     $90 = (($89) + ($88)|0); //@line 408 "../../iup_maskmatch.c"
     $91 = HEAP8[$90>>0]|0; //@line 408 "../../iup_maskmatch.c"
     $92 = $91 << 24 >> 24; //@line 408 "../../iup_maskmatch.c"
     $93 = ($92|0)==(0); //@line 408 "../../iup_maskmatch.c"
     if (!($93)) {
      $94 = $16; //@line 409 "../../iup_maskmatch.c"
      $95 = $7; //@line 409 "../../iup_maskmatch.c"
      $96 = (($95) + ($94<<4)|0); //@line 409 "../../iup_maskmatch.c"
      $97 = ((($96)) + 4|0); //@line 409 "../../iup_maskmatch.c"
      $98 = HEAP32[$97>>2]|0; //@line 409 "../../iup_maskmatch.c"
      $99 = ($98|0)==(3); //@line 409 "../../iup_maskmatch.c"
      do {
       if ($99) {
        $100 = $10; //@line 410 "../../iup_maskmatch.c"
        $101 = ($100|0)!=(0); //@line 410 "../../iup_maskmatch.c"
        if (!($101)) {
         $102 = $16; //@line 410 "../../iup_maskmatch.c"
         $103 = $7; //@line 410 "../../iup_maskmatch.c"
         $104 = (($103) + ($102<<4)|0); //@line 410 "../../iup_maskmatch.c"
         $105 = HEAP8[$104>>0]|0; //@line 410 "../../iup_maskmatch.c"
         $106 = $105 << 24 >> 24; //@line 410 "../../iup_maskmatch.c"
         $107 = $17; //@line 410 "../../iup_maskmatch.c"
         $108 = $6; //@line 410 "../../iup_maskmatch.c"
         $109 = (($108) + ($107)|0); //@line 410 "../../iup_maskmatch.c"
         $110 = HEAP8[$109>>0]|0; //@line 410 "../../iup_maskmatch.c"
         $111 = $110 << 24 >> 24; //@line 410 "../../iup_maskmatch.c"
         $112 = ($106|0)==($111|0); //@line 410 "../../iup_maskmatch.c"
         if ($112) {
          break;
         }
        }
        $113 = $10; //@line 411 "../../iup_maskmatch.c"
        $114 = ($113|0)!=(0); //@line 411 "../../iup_maskmatch.c"
        if ($114) {
         $115 = $16; //@line 411 "../../iup_maskmatch.c"
         $116 = $7; //@line 411 "../../iup_maskmatch.c"
         $117 = (($116) + ($115<<4)|0); //@line 411 "../../iup_maskmatch.c"
         $118 = HEAP8[$117>>0]|0; //@line 411 "../../iup_maskmatch.c"
         $119 = $118 << 24 >> 24; //@line 411 "../../iup_maskmatch.c"
         $120 = (_tolower($119)|0); //@line 411 "../../iup_maskmatch.c"
         $121 = $17; //@line 411 "../../iup_maskmatch.c"
         $122 = $6; //@line 411 "../../iup_maskmatch.c"
         $123 = (($122) + ($121)|0); //@line 411 "../../iup_maskmatch.c"
         $124 = HEAP8[$123>>0]|0; //@line 411 "../../iup_maskmatch.c"
         $125 = $124 << 24 >> 24; //@line 411 "../../iup_maskmatch.c"
         $126 = (_tolower($125)|0); //@line 411 "../../iup_maskmatch.c"
         $127 = ($120|0)==($126|0); //@line 411 "../../iup_maskmatch.c"
         if (!($127)) {
          label = 20;
         }
        } else {
         label = 20;
        }
       } else {
        label = 20;
       }
      } while(0);
      do {
       if ((label|0) == 20) {
        label = 0;
        $128 = $16; //@line 414 "../../iup_maskmatch.c"
        $129 = $7; //@line 414 "../../iup_maskmatch.c"
        $130 = (($129) + ($128<<4)|0); //@line 414 "../../iup_maskmatch.c"
        $131 = ((($130)) + 4|0); //@line 414 "../../iup_maskmatch.c"
        $132 = HEAP32[$131>>2]|0; //@line 414 "../../iup_maskmatch.c"
        $133 = ($132|0)==(2); //@line 414 "../../iup_maskmatch.c"
        if ($133) {
         $134 = $17; //@line 415 "../../iup_maskmatch.c"
         $135 = $6; //@line 415 "../../iup_maskmatch.c"
         $136 = (($135) + ($134)|0); //@line 415 "../../iup_maskmatch.c"
         $137 = HEAP8[$136>>0]|0; //@line 415 "../../iup_maskmatch.c"
         $138 = $137 << 24 >> 24; //@line 415 "../../iup_maskmatch.c"
         $139 = ($138|0)!=(10); //@line 415 "../../iup_maskmatch.c"
         if ($139) {
          break;
         }
        }
        $145 = $16; //@line 419 "../../iup_maskmatch.c"
        $146 = $7; //@line 419 "../../iup_maskmatch.c"
        $147 = (($146) + ($145<<4)|0); //@line 419 "../../iup_maskmatch.c"
        $148 = ((($147)) + 4|0); //@line 419 "../../iup_maskmatch.c"
        $149 = HEAP32[$148>>2]|0; //@line 419 "../../iup_maskmatch.c"
        $150 = ($149|0)==(4); //@line 419 "../../iup_maskmatch.c"
        $151 = $16; //@line 423 "../../iup_maskmatch.c"
        $152 = $7; //@line 423 "../../iup_maskmatch.c"
        $153 = (($152) + ($151<<4)|0); //@line 423 "../../iup_maskmatch.c"
        if ($150) {
         $154 = HEAP8[$153>>0]|0; //@line 423 "../../iup_maskmatch.c"
         $155 = $154 << 24 >> 24; //@line 423 "../../iup_maskmatch.c"
         $156 = (208 + ($155<<3)|0); //@line 423 "../../iup_maskmatch.c"
         $157 = ((($156)) + 4|0); //@line 423 "../../iup_maskmatch.c"
         $158 = HEAP32[$157>>2]|0; //@line 423 "../../iup_maskmatch.c"
         $159 = $6; //@line 423 "../../iup_maskmatch.c"
         $160 = $17; //@line 423 "../../iup_maskmatch.c"
         $161 = (FUNCTION_TABLE_iii[$158 & 1023]($159,$160)|0); //@line 423 "../../iup_maskmatch.c"
         $19 = $161; //@line 423 "../../iup_maskmatch.c"
         $162 = $19; //@line 424 "../../iup_maskmatch.c"
         switch ($162|0) {
         case 1:  {
          $168 = $16; //@line 434 "../../iup_maskmatch.c"
          $169 = $7; //@line 434 "../../iup_maskmatch.c"
          $170 = (($169) + ($168<<4)|0); //@line 434 "../../iup_maskmatch.c"
          $171 = ((($170)) + 8|0); //@line 434 "../../iup_maskmatch.c"
          $172 = HEAP32[$171>>2]|0; //@line 434 "../../iup_maskmatch.c"
          _iMaskPushStack($12,$172); //@line 434 "../../iup_maskmatch.c"
          break L9;
          break;
         }
         case 0:  {
          $163 = $16; //@line 430 "../../iup_maskmatch.c"
          $164 = $7; //@line 430 "../../iup_maskmatch.c"
          $165 = (($164) + ($163<<4)|0); //@line 430 "../../iup_maskmatch.c"
          $166 = ((($165)) + 8|0); //@line 430 "../../iup_maskmatch.c"
          $167 = HEAP32[$166>>2]|0; //@line 430 "../../iup_maskmatch.c"
          _iMaskPushStack($13,$167); //@line 430 "../../iup_maskmatch.c"
          break L9;
          break;
         }
         default: {
          break L9;
         }
         }
        }
        $173 = ((($153)) + 4|0); //@line 438 "../../iup_maskmatch.c"
        $174 = HEAP32[$173>>2]|0; //@line 438 "../../iup_maskmatch.c"
        $175 = ($174|0)==(5); //@line 438 "../../iup_maskmatch.c"
        if (!($175)) {
         $294 = $16; //@line 480 "../../iup_maskmatch.c"
         $295 = $7; //@line 480 "../../iup_maskmatch.c"
         $296 = (($295) + ($294<<4)|0); //@line 480 "../../iup_maskmatch.c"
         $297 = ((($296)) + 4|0); //@line 480 "../../iup_maskmatch.c"
         $298 = HEAP32[$297>>2]|0; //@line 480 "../../iup_maskmatch.c"
         $299 = ($298|0)==(6); //@line 480 "../../iup_maskmatch.c"
         if ($299) {
          $300 = $17; //@line 482 "../../iup_maskmatch.c"
          $301 = (($300) - 1)|0; //@line 482 "../../iup_maskmatch.c"
          $302 = $6; //@line 482 "../../iup_maskmatch.c"
          $303 = (($302) + ($301)|0); //@line 482 "../../iup_maskmatch.c"
          $304 = HEAP8[$303>>0]|0; //@line 482 "../../iup_maskmatch.c"
          $305 = $304 << 24 >> 24; //@line 482 "../../iup_maskmatch.c"
          $306 = ($305|0)==(10); //@line 482 "../../iup_maskmatch.c"
          $307 = $17; //@line 482 "../../iup_maskmatch.c"
          $308 = ($307|0)==(0); //@line 482 "../../iup_maskmatch.c"
          $or$cond = $306 | $308; //@line 482 "../../iup_maskmatch.c"
          if (!($or$cond)) {
           break L9;
          }
          $309 = $16; //@line 483 "../../iup_maskmatch.c"
          $310 = $7; //@line 483 "../../iup_maskmatch.c"
          $311 = (($310) + ($309<<4)|0); //@line 483 "../../iup_maskmatch.c"
          $312 = ((($311)) + 8|0); //@line 483 "../../iup_maskmatch.c"
          $313 = HEAP32[$312>>2]|0; //@line 483 "../../iup_maskmatch.c"
          _iMaskPushStack($12,$313); //@line 483 "../../iup_maskmatch.c"
          break L9;
         }
         $314 = $16; //@line 485 "../../iup_maskmatch.c"
         $315 = $7; //@line 485 "../../iup_maskmatch.c"
         $316 = (($315) + ($314<<4)|0); //@line 485 "../../iup_maskmatch.c"
         $317 = ((($316)) + 4|0); //@line 485 "../../iup_maskmatch.c"
         $318 = HEAP32[$317>>2]|0; //@line 485 "../../iup_maskmatch.c"
         $319 = ($318|0)==(7); //@line 485 "../../iup_maskmatch.c"
         if (!($319)) {
          break L9;
         }
         $320 = $17; //@line 487 "../../iup_maskmatch.c"
         $321 = $6; //@line 487 "../../iup_maskmatch.c"
         $322 = (($321) + ($320)|0); //@line 487 "../../iup_maskmatch.c"
         $323 = HEAP8[$322>>0]|0; //@line 487 "../../iup_maskmatch.c"
         $324 = $323 << 24 >> 24; //@line 487 "../../iup_maskmatch.c"
         $325 = ($324|0)==(10); //@line 487 "../../iup_maskmatch.c"
         if (!($325)) {
          $326 = $17; //@line 487 "../../iup_maskmatch.c"
          $327 = $6; //@line 487 "../../iup_maskmatch.c"
          $328 = (($327) + ($326)|0); //@line 487 "../../iup_maskmatch.c"
          $329 = HEAP8[$328>>0]|0; //@line 487 "../../iup_maskmatch.c"
          $330 = $329 << 24 >> 24; //@line 487 "../../iup_maskmatch.c"
          $331 = ($330|0)==(0); //@line 487 "../../iup_maskmatch.c"
          if (!($331)) {
           break L9;
          }
         }
         $332 = $16; //@line 488 "../../iup_maskmatch.c"
         $333 = $7; //@line 488 "../../iup_maskmatch.c"
         $334 = (($333) + ($332<<4)|0); //@line 488 "../../iup_maskmatch.c"
         $335 = ((($334)) + 8|0); //@line 488 "../../iup_maskmatch.c"
         $336 = HEAP32[$335>>2]|0; //@line 488 "../../iup_maskmatch.c"
         _iMaskPushStack($12,$336); //@line 488 "../../iup_maskmatch.c"
         break L9;
        }
        $21 = 0; //@line 440 "../../iup_maskmatch.c"
        $176 = $16; //@line 442 "../../iup_maskmatch.c"
        $177 = $7; //@line 442 "../../iup_maskmatch.c"
        $178 = (($177) + ($176<<4)|0); //@line 442 "../../iup_maskmatch.c"
        $179 = ((($178)) + 8|0); //@line 442 "../../iup_maskmatch.c"
        $180 = HEAP32[$179>>2]|0; //@line 442 "../../iup_maskmatch.c"
        $20 = $180; //@line 442 "../../iup_maskmatch.c"
        $181 = $16; //@line 443 "../../iup_maskmatch.c"
        $182 = $7; //@line 443 "../../iup_maskmatch.c"
        $183 = (($182) + ($181<<4)|0); //@line 443 "../../iup_maskmatch.c"
        $184 = ((($183)) + 12|0); //@line 443 "../../iup_maskmatch.c"
        $185 = HEAP32[$184>>2]|0; //@line 443 "../../iup_maskmatch.c"
        $22 = $185; //@line 443 "../../iup_maskmatch.c"
        $186 = $16; //@line 444 "../../iup_maskmatch.c"
        $187 = (($186) + 1)|0; //@line 444 "../../iup_maskmatch.c"
        $16 = $187; //@line 444 "../../iup_maskmatch.c"
        while(1) {
         $188 = $16; //@line 446 "../../iup_maskmatch.c"
         $189 = $7; //@line 446 "../../iup_maskmatch.c"
         $190 = (($189) + ($188<<4)|0); //@line 446 "../../iup_maskmatch.c"
         $191 = ((($190)) + 4|0); //@line 446 "../../iup_maskmatch.c"
         $192 = HEAP32[$191>>2]|0; //@line 446 "../../iup_maskmatch.c"
         $193 = ($192|0)!=(1); //@line 446 "../../iup_maskmatch.c"
         if (!($193)) {
          break;
         }
         $194 = $16; //@line 448 "../../iup_maskmatch.c"
         $195 = $7; //@line 448 "../../iup_maskmatch.c"
         $196 = (($195) + ($194<<4)|0); //@line 448 "../../iup_maskmatch.c"
         $197 = ((($196)) + 4|0); //@line 448 "../../iup_maskmatch.c"
         $198 = HEAP32[$197>>2]|0; //@line 448 "../../iup_maskmatch.c"
         $199 = ($198|0)==(50); //@line 448 "../../iup_maskmatch.c"
         if ($199) {
          $200 = $10; //@line 450 "../../iup_maskmatch.c"
          $201 = ($200|0)!=(0); //@line 450 "../../iup_maskmatch.c"
          if (!($201)) {
           $202 = $17; //@line 450 "../../iup_maskmatch.c"
           $203 = $6; //@line 450 "../../iup_maskmatch.c"
           $204 = (($203) + ($202)|0); //@line 450 "../../iup_maskmatch.c"
           $205 = HEAP8[$204>>0]|0; //@line 450 "../../iup_maskmatch.c"
           $206 = $205 << 24 >> 24; //@line 450 "../../iup_maskmatch.c"
           $207 = $16; //@line 450 "../../iup_maskmatch.c"
           $208 = $7; //@line 450 "../../iup_maskmatch.c"
           $209 = (($208) + ($207<<4)|0); //@line 450 "../../iup_maskmatch.c"
           $210 = HEAP8[$209>>0]|0; //@line 450 "../../iup_maskmatch.c"
           $211 = $210 << 24 >> 24; //@line 450 "../../iup_maskmatch.c"
           $212 = ($206|0)>=($211|0); //@line 450 "../../iup_maskmatch.c"
           if ($212) {
            $213 = $17; //@line 451 "../../iup_maskmatch.c"
            $214 = $6; //@line 451 "../../iup_maskmatch.c"
            $215 = (($214) + ($213)|0); //@line 451 "../../iup_maskmatch.c"
            $216 = HEAP8[$215>>0]|0; //@line 451 "../../iup_maskmatch.c"
            $217 = $216 << 24 >> 24; //@line 451 "../../iup_maskmatch.c"
            $218 = $16; //@line 451 "../../iup_maskmatch.c"
            $219 = $7; //@line 451 "../../iup_maskmatch.c"
            $220 = (($219) + ($218<<4)|0); //@line 451 "../../iup_maskmatch.c"
            $221 = ((($220)) + 8|0); //@line 451 "../../iup_maskmatch.c"
            $222 = HEAP32[$221>>2]|0; //@line 451 "../../iup_maskmatch.c"
            $223 = ($217|0)<=($222|0); //@line 451 "../../iup_maskmatch.c"
            if ($223) {
             label = 37;
             break;
            }
           }
          }
          $224 = $10; //@line 453 "../../iup_maskmatch.c"
          $225 = ($224|0)!=(0); //@line 453 "../../iup_maskmatch.c"
          if ($225) {
           $226 = $17; //@line 453 "../../iup_maskmatch.c"
           $227 = $6; //@line 453 "../../iup_maskmatch.c"
           $228 = (($227) + ($226)|0); //@line 453 "../../iup_maskmatch.c"
           $229 = HEAP8[$228>>0]|0; //@line 453 "../../iup_maskmatch.c"
           $230 = $229 << 24 >> 24; //@line 453 "../../iup_maskmatch.c"
           $231 = (_tolower($230)|0); //@line 453 "../../iup_maskmatch.c"
           $232 = $16; //@line 453 "../../iup_maskmatch.c"
           $233 = $7; //@line 453 "../../iup_maskmatch.c"
           $234 = (($233) + ($232<<4)|0); //@line 453 "../../iup_maskmatch.c"
           $235 = HEAP8[$234>>0]|0; //@line 453 "../../iup_maskmatch.c"
           $236 = $235 << 24 >> 24; //@line 453 "../../iup_maskmatch.c"
           $237 = (_tolower($236)|0); //@line 453 "../../iup_maskmatch.c"
           $238 = ($231|0)>=($237|0); //@line 453 "../../iup_maskmatch.c"
           if ($238) {
            $239 = $17; //@line 454 "../../iup_maskmatch.c"
            $240 = $6; //@line 454 "../../iup_maskmatch.c"
            $241 = (($240) + ($239)|0); //@line 454 "../../iup_maskmatch.c"
            $242 = HEAP8[$241>>0]|0; //@line 454 "../../iup_maskmatch.c"
            $243 = $242 << 24 >> 24; //@line 454 "../../iup_maskmatch.c"
            $244 = (_tolower($243)|0); //@line 454 "../../iup_maskmatch.c"
            $245 = $16; //@line 454 "../../iup_maskmatch.c"
            $246 = $7; //@line 454 "../../iup_maskmatch.c"
            $247 = (($246) + ($245<<4)|0); //@line 454 "../../iup_maskmatch.c"
            $248 = ((($247)) + 8|0); //@line 454 "../../iup_maskmatch.c"
            $249 = HEAP32[$248>>2]|0; //@line 454 "../../iup_maskmatch.c"
            $250 = (_tolower($249)|0); //@line 454 "../../iup_maskmatch.c"
            $251 = ($244|0)<=($250|0); //@line 454 "../../iup_maskmatch.c"
            if ($251) {
             label = 37;
             break;
            }
           }
          }
         } else {
          $252 = $16; //@line 462 "../../iup_maskmatch.c"
          $253 = $7; //@line 462 "../../iup_maskmatch.c"
          $254 = (($253) + ($252<<4)|0); //@line 462 "../../iup_maskmatch.c"
          $255 = ((($254)) + 4|0); //@line 462 "../../iup_maskmatch.c"
          $256 = HEAP32[$255>>2]|0; //@line 462 "../../iup_maskmatch.c"
          $257 = ($256|0)==(51); //@line 462 "../../iup_maskmatch.c"
          if ($257) {
           $258 = $10; //@line 463 "../../iup_maskmatch.c"
           $259 = ($258|0)!=(0); //@line 463 "../../iup_maskmatch.c"
           if (!($259)) {
            $260 = $17; //@line 463 "../../iup_maskmatch.c"
            $261 = $6; //@line 463 "../../iup_maskmatch.c"
            $262 = (($261) + ($260)|0); //@line 463 "../../iup_maskmatch.c"
            $263 = HEAP8[$262>>0]|0; //@line 463 "../../iup_maskmatch.c"
            $264 = $263 << 24 >> 24; //@line 463 "../../iup_maskmatch.c"
            $265 = $16; //@line 463 "../../iup_maskmatch.c"
            $266 = $7; //@line 463 "../../iup_maskmatch.c"
            $267 = (($266) + ($265<<4)|0); //@line 463 "../../iup_maskmatch.c"
            $268 = HEAP8[$267>>0]|0; //@line 463 "../../iup_maskmatch.c"
            $269 = $268 << 24 >> 24; //@line 463 "../../iup_maskmatch.c"
            $270 = ($264|0)==($269|0); //@line 463 "../../iup_maskmatch.c"
            if ($270) {
             label = 43;
             break;
            }
           }
           $271 = $10; //@line 464 "../../iup_maskmatch.c"
           $272 = ($271|0)!=(0); //@line 464 "../../iup_maskmatch.c"
           if ($272) {
            $273 = $17; //@line 464 "../../iup_maskmatch.c"
            $274 = $6; //@line 464 "../../iup_maskmatch.c"
            $275 = (($274) + ($273)|0); //@line 464 "../../iup_maskmatch.c"
            $276 = HEAP8[$275>>0]|0; //@line 464 "../../iup_maskmatch.c"
            $277 = $276 << 24 >> 24; //@line 464 "../../iup_maskmatch.c"
            $278 = (_tolower($277)|0); //@line 464 "../../iup_maskmatch.c"
            $279 = $16; //@line 464 "../../iup_maskmatch.c"
            $280 = $7; //@line 464 "../../iup_maskmatch.c"
            $281 = (($280) + ($279<<4)|0); //@line 464 "../../iup_maskmatch.c"
            $282 = HEAP8[$281>>0]|0; //@line 464 "../../iup_maskmatch.c"
            $283 = $282 << 24 >> 24; //@line 464 "../../iup_maskmatch.c"
            $284 = (_tolower($283)|0); //@line 464 "../../iup_maskmatch.c"
            $285 = ($278|0)==($284|0); //@line 464 "../../iup_maskmatch.c"
            if ($285) {
             label = 43;
             break;
            }
           }
          }
         }
         $286 = $16; //@line 471 "../../iup_maskmatch.c"
         $287 = (($286) + 1)|0; //@line 471 "../../iup_maskmatch.c"
         $16 = $287; //@line 471 "../../iup_maskmatch.c"
        }
        if ((label|0) == 37) {
         label = 0;
         $21 = 1; //@line 458 "../../iup_maskmatch.c"
        }
        else if ((label|0) == 43) {
         label = 0;
         $21 = 1; //@line 468 "../../iup_maskmatch.c"
        }
        $288 = $21; //@line 474 "../../iup_maskmatch.c"
        $289 = $22; //@line 474 "../../iup_maskmatch.c"
        $290 = $288 ^ $289; //@line 474 "../../iup_maskmatch.c"
        $291 = ($290|0)!=(0); //@line 474 "../../iup_maskmatch.c"
        if (!($291)) {
         break L9;
        }
        $292 = $20; //@line 476 "../../iup_maskmatch.c"
        _iMaskPushStack($13,$292); //@line 476 "../../iup_maskmatch.c"
        $293 = $20; //@line 477 "../../iup_maskmatch.c"
        $16 = $293; //@line 477 "../../iup_maskmatch.c"
        break L9;
       }
      } while(0);
      $140 = $16; //@line 418 "../../iup_maskmatch.c"
      $141 = $7; //@line 418 "../../iup_maskmatch.c"
      $142 = (($141) + ($140<<4)|0); //@line 418 "../../iup_maskmatch.c"
      $143 = ((($142)) + 8|0); //@line 418 "../../iup_maskmatch.c"
      $144 = HEAP32[$143>>2]|0; //@line 418 "../../iup_maskmatch.c"
      _iMaskPushStack($13,$144); //@line 418 "../../iup_maskmatch.c"
     }
    }
   } while(0);
   $337 = $18; //@line 387 "../../iup_maskmatch.c"
   $338 = (($337) + 1)|0; //@line 387 "../../iup_maskmatch.c"
   $18 = $338; //@line 387 "../../iup_maskmatch.c"
  }
  $339 = $17; //@line 492 "../../iup_maskmatch.c"
  $340 = $6; //@line 492 "../../iup_maskmatch.c"
  $341 = (($340) + ($339)|0); //@line 492 "../../iup_maskmatch.c"
  $342 = HEAP8[$341>>0]|0; //@line 492 "../../iup_maskmatch.c"
  $343 = $342 << 24 >> 24; //@line 492 "../../iup_maskmatch.c"
  $344 = ($343|0)==(0); //@line 492 "../../iup_maskmatch.c"
  if ($344) {
   break;
  }
  $458 = $17; //@line 548 "../../iup_maskmatch.c"
  $459 = (($458) + 1)|0; //@line 548 "../../iup_maskmatch.c"
  $17 = $459; //@line 548 "../../iup_maskmatch.c"
  $460 = ((($13)) + 4|0); //@line 550 "../../iup_maskmatch.c"
  $461 = HEAP16[$460>>1]|0; //@line 550 "../../iup_maskmatch.c"
  $462 = $461 << 16 >> 16; //@line 550 "../../iup_maskmatch.c"
  $463 = ($462|0)==(0); //@line 550 "../../iup_maskmatch.c"
  if ($463) {
   label = 82;
   break;
  }
  _iMaskMoveStack($12,$13); //@line 558 "../../iup_maskmatch.c"
 }
 if ((label|0) == 82) {
  $464 = $11; //@line 552 "../../iup_maskmatch.c"
  $465 = ($464|0)>(-1); //@line 552 "../../iup_maskmatch.c"
  if ($465) {
   $466 = $11; //@line 553 "../../iup_maskmatch.c"
   $5 = $466; //@line 553 "../../iup_maskmatch.c"
   $467 = $5; //@line 560 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($467|0); //@line 560 "../../iup_maskmatch.c"
  } else {
   $5 = -1; //@line 555 "../../iup_maskmatch.c"
   $467 = $5; //@line 560 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($467|0); //@line 560 "../../iup_maskmatch.c"
  }
 }
 $345 = ((($13)) + 4|0); //@line 494 "../../iup_maskmatch.c"
 $346 = HEAP16[$345>>1]|0; //@line 494 "../../iup_maskmatch.c"
 $347 = $346 << 16 >> 16; //@line 494 "../../iup_maskmatch.c"
 $348 = ($347|0)==(0); //@line 494 "../../iup_maskmatch.c"
 if ($348) {
  $349 = $11; //@line 494 "../../iup_maskmatch.c"
  $350 = $17; //@line 494 "../../iup_maskmatch.c"
  $351 = ($349|0)==($350|0); //@line 494 "../../iup_maskmatch.c"
  if ($351) {
   $352 = $11; //@line 496 "../../iup_maskmatch.c"
   $5 = $352; //@line 496 "../../iup_maskmatch.c"
   $467 = $5; //@line 560 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($467|0); //@line 560 "../../iup_maskmatch.c"
  }
 }
 $353 = $9; //@line 498 "../../iup_maskmatch.c"
 $354 = ($353|0)!=(0|0); //@line 498 "../../iup_maskmatch.c"
 if ($354) {
  $23 = 0; //@line 502 "../../iup_maskmatch.c"
  while(1) {
   $355 = $23; //@line 502 "../../iup_maskmatch.c"
   $356 = ((($12)) + 4|0); //@line 502 "../../iup_maskmatch.c"
   $357 = HEAP16[$356>>1]|0; //@line 502 "../../iup_maskmatch.c"
   $358 = $357 << 16 >> 16; //@line 502 "../../iup_maskmatch.c"
   $359 = ($355|0)<($358|0); //@line 502 "../../iup_maskmatch.c"
   if (!($359)) {
    break;
   }
   $360 = $23; //@line 504 "../../iup_maskmatch.c"
   $361 = HEAP32[$12>>2]|0; //@line 504 "../../iup_maskmatch.c"
   $362 = (($361) + ($360<<1)|0); //@line 504 "../../iup_maskmatch.c"
   $363 = HEAP16[$362>>1]|0; //@line 504 "../../iup_maskmatch.c"
   $364 = $363 << 16 >> 16; //@line 504 "../../iup_maskmatch.c"
   $16 = $364; //@line 504 "../../iup_maskmatch.c"
   $365 = $16; //@line 505 "../../iup_maskmatch.c"
   $366 = $7; //@line 505 "../../iup_maskmatch.c"
   $367 = (($366) + ($365<<4)|0); //@line 505 "../../iup_maskmatch.c"
   $368 = ((($367)) + 4|0); //@line 505 "../../iup_maskmatch.c"
   $369 = HEAP32[$368>>2]|0; //@line 505 "../../iup_maskmatch.c"
   $370 = ($369|0)==(3); //@line 505 "../../iup_maskmatch.c"
   $371 = $16; //@line 507 "../../iup_maskmatch.c"
   if ($370) {
    _iMaskPushStack($13,$371); //@line 507 "../../iup_maskmatch.c"
   } else {
    $372 = $7; //@line 509 "../../iup_maskmatch.c"
    $373 = (($372) + ($371<<4)|0); //@line 509 "../../iup_maskmatch.c"
    $374 = ((($373)) + 4|0); //@line 509 "../../iup_maskmatch.c"
    $375 = HEAP32[$374>>2]|0; //@line 509 "../../iup_maskmatch.c"
    $376 = ($375|0)!=(1); //@line 509 "../../iup_maskmatch.c"
    if ($376) {
     label = 65;
     break;
    }
    $378 = $16; //@line 516 "../../iup_maskmatch.c"
    $379 = $7; //@line 516 "../../iup_maskmatch.c"
    $380 = (($379) + ($378<<4)|0); //@line 516 "../../iup_maskmatch.c"
    $381 = ((($380)) + 12|0); //@line 516 "../../iup_maskmatch.c"
    $382 = HEAP32[$381>>2]|0; //@line 516 "../../iup_maskmatch.c"
    $383 = (_iMaskInStack($12,$382)|0); //@line 516 "../../iup_maskmatch.c"
    $384 = ($383|0)!=(0); //@line 516 "../../iup_maskmatch.c"
    if (!($384)) {
     $385 = $16; //@line 517 "../../iup_maskmatch.c"
     $386 = $7; //@line 517 "../../iup_maskmatch.c"
     $387 = (($386) + ($385<<4)|0); //@line 517 "../../iup_maskmatch.c"
     $388 = ((($387)) + 12|0); //@line 517 "../../iup_maskmatch.c"
     $389 = HEAP32[$388>>2]|0; //@line 517 "../../iup_maskmatch.c"
     _iMaskPushStack($12,$389); //@line 517 "../../iup_maskmatch.c"
    }
    $390 = $16; //@line 519 "../../iup_maskmatch.c"
    $391 = $7; //@line 519 "../../iup_maskmatch.c"
    $392 = (($391) + ($390<<4)|0); //@line 519 "../../iup_maskmatch.c"
    $393 = ((($392)) + 8|0); //@line 519 "../../iup_maskmatch.c"
    $394 = HEAP32[$393>>2]|0; //@line 519 "../../iup_maskmatch.c"
    $395 = $16; //@line 519 "../../iup_maskmatch.c"
    $396 = $7; //@line 519 "../../iup_maskmatch.c"
    $397 = (($396) + ($395<<4)|0); //@line 519 "../../iup_maskmatch.c"
    $398 = ((($397)) + 12|0); //@line 519 "../../iup_maskmatch.c"
    $399 = HEAP32[$398>>2]|0; //@line 519 "../../iup_maskmatch.c"
    $400 = ($394|0)!=($399|0); //@line 519 "../../iup_maskmatch.c"
    if ($400) {
     $401 = $16; //@line 521 "../../iup_maskmatch.c"
     $402 = $7; //@line 521 "../../iup_maskmatch.c"
     $403 = (($402) + ($401<<4)|0); //@line 521 "../../iup_maskmatch.c"
     $404 = ((($403)) + 8|0); //@line 521 "../../iup_maskmatch.c"
     $405 = HEAP32[$404>>2]|0; //@line 521 "../../iup_maskmatch.c"
     $406 = (_iMaskInStack($12,$405)|0); //@line 521 "../../iup_maskmatch.c"
     $407 = ($406|0)!=(0); //@line 521 "../../iup_maskmatch.c"
     if (!($407)) {
      $408 = $16; //@line 522 "../../iup_maskmatch.c"
      $409 = $7; //@line 522 "../../iup_maskmatch.c"
      $410 = (($409) + ($408<<4)|0); //@line 522 "../../iup_maskmatch.c"
      $411 = ((($410)) + 8|0); //@line 522 "../../iup_maskmatch.c"
      $412 = HEAP32[$411>>2]|0; //@line 522 "../../iup_maskmatch.c"
      _iMaskPushStack($12,$412); //@line 522 "../../iup_maskmatch.c"
     }
    }
   }
   $413 = $23; //@line 502 "../../iup_maskmatch.c"
   $414 = (($413) + 1)|0; //@line 502 "../../iup_maskmatch.c"
   $23 = $414; //@line 502 "../../iup_maskmatch.c"
  }
  if ((label|0) == 65) {
   $377 = ((($13)) + 4|0); //@line 511 "../../iup_maskmatch.c"
   HEAP16[$377>>1] = 0; //@line 511 "../../iup_maskmatch.c"
  }
  _iMaskMoveStack($12,$13); //@line 527 "../../iup_maskmatch.c"
  $415 = ((($12)) + 4|0); //@line 529 "../../iup_maskmatch.c"
  $416 = HEAP16[$415>>1]|0; //@line 529 "../../iup_maskmatch.c"
  $417 = $416 << 16 >> 16; //@line 529 "../../iup_maskmatch.c"
  $418 = ($417|0)==(1); //@line 529 "../../iup_maskmatch.c"
  if ($418) {
   $24 = 0; //@line 531 "../../iup_maskmatch.c"
   $419 = HEAP32[$12>>2]|0; //@line 532 "../../iup_maskmatch.c"
   $420 = HEAP16[$419>>1]|0; //@line 532 "../../iup_maskmatch.c"
   $421 = $420 << 16 >> 16; //@line 532 "../../iup_maskmatch.c"
   $16 = $421; //@line 532 "../../iup_maskmatch.c"
   while(1) {
    $422 = $16; //@line 533 "../../iup_maskmatch.c"
    $423 = $7; //@line 533 "../../iup_maskmatch.c"
    $424 = (($423) + ($422<<4)|0); //@line 533 "../../iup_maskmatch.c"
    $425 = ((($424)) + 8|0); //@line 533 "../../iup_maskmatch.c"
    $426 = HEAP32[$425>>2]|0; //@line 533 "../../iup_maskmatch.c"
    $427 = $16; //@line 533 "../../iup_maskmatch.c"
    $428 = $7; //@line 533 "../../iup_maskmatch.c"
    $429 = (($428) + ($427<<4)|0); //@line 533 "../../iup_maskmatch.c"
    $430 = ((($429)) + 12|0); //@line 533 "../../iup_maskmatch.c"
    $431 = HEAP32[$430>>2]|0; //@line 533 "../../iup_maskmatch.c"
    $432 = ($426|0)==($431|0); //@line 533 "../../iup_maskmatch.c"
    if (!($432)) {
     break;
    }
    $433 = $16; //@line 535 "../../iup_maskmatch.c"
    $434 = $7; //@line 535 "../../iup_maskmatch.c"
    $435 = (($434) + ($433<<4)|0); //@line 535 "../../iup_maskmatch.c"
    $436 = ((($435)) + 4|0); //@line 535 "../../iup_maskmatch.c"
    $437 = HEAP32[$436>>2]|0; //@line 535 "../../iup_maskmatch.c"
    $438 = ($437|0)==(3); //@line 535 "../../iup_maskmatch.c"
    $439 = $16; //@line 536 "../../iup_maskmatch.c"
    $440 = $7; //@line 536 "../../iup_maskmatch.c"
    $441 = (($440) + ($439<<4)|0); //@line 536 "../../iup_maskmatch.c"
    if ($438) {
     $442 = HEAP8[$441>>0]|0; //@line 536 "../../iup_maskmatch.c"
     $443 = $24; //@line 536 "../../iup_maskmatch.c"
     $444 = (($443) + 1)|0; //@line 536 "../../iup_maskmatch.c"
     $24 = $444; //@line 536 "../../iup_maskmatch.c"
     $445 = $9; //@line 536 "../../iup_maskmatch.c"
     $446 = (($445) + ($443)|0); //@line 536 "../../iup_maskmatch.c"
     HEAP8[$446>>0] = $442; //@line 536 "../../iup_maskmatch.c"
    } else {
     $447 = ((($441)) + 4|0); //@line 537 "../../iup_maskmatch.c"
     $448 = HEAP32[$447>>2]|0; //@line 537 "../../iup_maskmatch.c"
     $449 = ($448|0)!=(1); //@line 537 "../../iup_maskmatch.c"
     if ($449) {
      break;
     }
    }
    $450 = $16; //@line 540 "../../iup_maskmatch.c"
    $451 = $7; //@line 540 "../../iup_maskmatch.c"
    $452 = (($451) + ($450<<4)|0); //@line 540 "../../iup_maskmatch.c"
    $453 = ((($452)) + 8|0); //@line 540 "../../iup_maskmatch.c"
    $454 = HEAP32[$453>>2]|0; //@line 540 "../../iup_maskmatch.c"
    $16 = $454; //@line 540 "../../iup_maskmatch.c"
   }
   $455 = $24; //@line 542 "../../iup_maskmatch.c"
   $456 = $9; //@line 542 "../../iup_maskmatch.c"
   $457 = (($456) + ($455)|0); //@line 542 "../../iup_maskmatch.c"
   HEAP8[$457>>0] = 0; //@line 542 "../../iup_maskmatch.c"
  }
 }
 $5 = -4; //@line 545 "../../iup_maskmatch.c"
 $467 = $5; //@line 560 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($467|0); //@line 560 "../../iup_maskmatch.c"
}
function _iMaskMatchRecursive($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(96|0);
 $14 = sp + 40|0;
 $16 = sp + 16|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $21 = $8; //@line 168 "../../iup_maskmatch.c"
 $22 = $6; //@line 168 "../../iup_maskmatch.c"
 $23 = ((($22)) + 4|0); //@line 168 "../../iup_maskmatch.c"
 $24 = HEAP32[$23>>2]|0; //@line 168 "../../iup_maskmatch.c"
 $25 = (($24) + ($21<<4)|0); //@line 168 "../../iup_maskmatch.c"
 $26 = ((($25)) + 4|0); //@line 168 "../../iup_maskmatch.c"
 $27 = HEAP32[$26>>2]|0; //@line 168 "../../iup_maskmatch.c"
 L1: do {
  switch ($27|0) {
  case 1:  {
   $28 = $8; //@line 171 "../../iup_maskmatch.c"
   $29 = $6; //@line 171 "../../iup_maskmatch.c"
   $30 = ((($29)) + 4|0); //@line 171 "../../iup_maskmatch.c"
   $31 = HEAP32[$30>>2]|0; //@line 171 "../../iup_maskmatch.c"
   $32 = (($31) + ($28<<4)|0); //@line 171 "../../iup_maskmatch.c"
   $33 = ((($32)) + 8|0); //@line 171 "../../iup_maskmatch.c"
   $34 = HEAP32[$33>>2]|0; //@line 171 "../../iup_maskmatch.c"
   $35 = ($34|0)==(0); //@line 171 "../../iup_maskmatch.c"
   if ($35) {
    $36 = $6; //@line 173 "../../iup_maskmatch.c"
    $37 = ((($36)) + 8|0); //@line 173 "../../iup_maskmatch.c"
    $38 = HEAP32[$37>>2]|0; //@line 173 "../../iup_maskmatch.c"
    $39 = ($38|0)!=(0|0); //@line 173 "../../iup_maskmatch.c"
    if ($39) {
     $40 = $6; //@line 174 "../../iup_maskmatch.c"
     $41 = $9; //@line 174 "../../iup_maskmatch.c"
     _iMaskMatchCaptureResult($40,$41); //@line 174 "../../iup_maskmatch.c"
    }
    $42 = $7; //@line 176 "../../iup_maskmatch.c"
    $5 = $42; //@line 176 "../../iup_maskmatch.c"
    $377 = $5; //@line 332 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   }
   $11 = 0; //@line 182 "../../iup_maskmatch.c"
   while(1) {
    $43 = $11; //@line 182 "../../iup_maskmatch.c"
    $44 = $10; //@line 182 "../../iup_maskmatch.c"
    $45 = ($43|0)<($44|0); //@line 182 "../../iup_maskmatch.c"
    if (!($45)) {
     break;
    }
    $46 = $11; //@line 183 "../../iup_maskmatch.c"
    $47 = $6; //@line 183 "../../iup_maskmatch.c"
    $48 = ((($47)) + 12|0); //@line 183 "../../iup_maskmatch.c"
    $49 = HEAP32[$48>>2]|0; //@line 183 "../../iup_maskmatch.c"
    $50 = (($49) + ($46<<1)|0); //@line 183 "../../iup_maskmatch.c"
    $51 = HEAP16[$50>>1]|0; //@line 183 "../../iup_maskmatch.c"
    $52 = $51 << 16 >> 16; //@line 183 "../../iup_maskmatch.c"
    $53 = $8; //@line 183 "../../iup_maskmatch.c"
    $54 = ($52|0)==($53|0); //@line 183 "../../iup_maskmatch.c"
    if ($54) {
     label = 9;
     break;
    }
    $55 = $11; //@line 182 "../../iup_maskmatch.c"
    $56 = (($55) + 1)|0; //@line 182 "../../iup_maskmatch.c"
    $11 = $56; //@line 182 "../../iup_maskmatch.c"
   }
   if ((label|0) == 9) {
    $5 = -1; //@line 184 "../../iup_maskmatch.c"
    $377 = $5; //@line 332 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   }
   $57 = $8; //@line 187 "../../iup_maskmatch.c"
   $58 = $57&65535; //@line 187 "../../iup_maskmatch.c"
   $59 = $10; //@line 187 "../../iup_maskmatch.c"
   $60 = (($59) + 1)|0; //@line 187 "../../iup_maskmatch.c"
   $10 = $60; //@line 187 "../../iup_maskmatch.c"
   $61 = $6; //@line 187 "../../iup_maskmatch.c"
   $62 = ((($61)) + 12|0); //@line 187 "../../iup_maskmatch.c"
   $63 = HEAP32[$62>>2]|0; //@line 187 "../../iup_maskmatch.c"
   $64 = (($63) + ($59<<1)|0); //@line 187 "../../iup_maskmatch.c"
   HEAP16[$64>>1] = $58; //@line 187 "../../iup_maskmatch.c"
   $65 = $8; //@line 192 "../../iup_maskmatch.c"
   $66 = $6; //@line 192 "../../iup_maskmatch.c"
   $67 = ((($66)) + 4|0); //@line 192 "../../iup_maskmatch.c"
   $68 = HEAP32[$67>>2]|0; //@line 192 "../../iup_maskmatch.c"
   $69 = (($68) + ($65<<4)|0); //@line 192 "../../iup_maskmatch.c"
   $70 = ((($69)) + 8|0); //@line 192 "../../iup_maskmatch.c"
   $71 = HEAP32[$70>>2]|0; //@line 192 "../../iup_maskmatch.c"
   $72 = $8; //@line 192 "../../iup_maskmatch.c"
   $73 = $6; //@line 192 "../../iup_maskmatch.c"
   $74 = ((($73)) + 4|0); //@line 192 "../../iup_maskmatch.c"
   $75 = HEAP32[$74>>2]|0; //@line 192 "../../iup_maskmatch.c"
   $76 = (($75) + ($72<<4)|0); //@line 192 "../../iup_maskmatch.c"
   $77 = ((($76)) + 12|0); //@line 192 "../../iup_maskmatch.c"
   $78 = HEAP32[$77>>2]|0; //@line 192 "../../iup_maskmatch.c"
   $79 = ($71|0)!=($78|0); //@line 192 "../../iup_maskmatch.c"
   if ($79) {
    $80 = $6; //@line 196 "../../iup_maskmatch.c"
    $81 = $7; //@line 196 "../../iup_maskmatch.c"
    $82 = $8; //@line 196 "../../iup_maskmatch.c"
    $83 = $6; //@line 196 "../../iup_maskmatch.c"
    $84 = ((($83)) + 4|0); //@line 196 "../../iup_maskmatch.c"
    $85 = HEAP32[$84>>2]|0; //@line 196 "../../iup_maskmatch.c"
    $86 = (($85) + ($82<<4)|0); //@line 196 "../../iup_maskmatch.c"
    $87 = ((($86)) + 12|0); //@line 196 "../../iup_maskmatch.c"
    $88 = HEAP32[$87>>2]|0; //@line 196 "../../iup_maskmatch.c"
    $89 = $9; //@line 196 "../../iup_maskmatch.c"
    $90 = $10; //@line 196 "../../iup_maskmatch.c"
    $91 = (_iMaskMatchRecursive($80,$81,$88,$89,$90)|0); //@line 196 "../../iup_maskmatch.c"
    $12 = $91; //@line 196 "../../iup_maskmatch.c"
    $92 = $12; //@line 198 "../../iup_maskmatch.c"
    $93 = ($92|0)!=(-1); //@line 198 "../../iup_maskmatch.c"
    if ($93) {
     $94 = $12; //@line 199 "../../iup_maskmatch.c"
     $5 = $94; //@line 199 "../../iup_maskmatch.c"
     $377 = $5; //@line 332 "../../iup_maskmatch.c"
     STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
    } else {
     $95 = $6; //@line 201 "../../iup_maskmatch.c"
     $96 = $7; //@line 201 "../../iup_maskmatch.c"
     $97 = $8; //@line 201 "../../iup_maskmatch.c"
     $98 = $6; //@line 201 "../../iup_maskmatch.c"
     $99 = ((($98)) + 4|0); //@line 201 "../../iup_maskmatch.c"
     $100 = HEAP32[$99>>2]|0; //@line 201 "../../iup_maskmatch.c"
     $101 = (($100) + ($97<<4)|0); //@line 201 "../../iup_maskmatch.c"
     $102 = ((($101)) + 8|0); //@line 201 "../../iup_maskmatch.c"
     $103 = HEAP32[$102>>2]|0; //@line 201 "../../iup_maskmatch.c"
     $104 = $9; //@line 201 "../../iup_maskmatch.c"
     $105 = $10; //@line 201 "../../iup_maskmatch.c"
     $106 = (_iMaskMatchRecursive($95,$96,$103,$104,$105)|0); //@line 201 "../../iup_maskmatch.c"
     $12 = $106; //@line 201 "../../iup_maskmatch.c"
     $107 = $12; //@line 203 "../../iup_maskmatch.c"
     $5 = $107; //@line 203 "../../iup_maskmatch.c"
     $377 = $5; //@line 332 "../../iup_maskmatch.c"
     STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
    }
   }
   break;
  }
  case 71:  {
   $108 = $9; //@line 212 "../../iup_maskmatch.c"
   HEAP32[$14>>2] = $108; //@line 212 "../../iup_maskmatch.c"
   $109 = ((($14)) + 4|0); //@line 213 "../../iup_maskmatch.c"
   HEAP32[$109>>2] = 0; //@line 213 "../../iup_maskmatch.c"
   $110 = $7; //@line 214 "../../iup_maskmatch.c"
   $111 = ((($14)) + 12|0); //@line 214 "../../iup_maskmatch.c"
   HEAP32[$111>>2] = $110; //@line 214 "../../iup_maskmatch.c"
   $112 = $8; //@line 215 "../../iup_maskmatch.c"
   $113 = $6; //@line 215 "../../iup_maskmatch.c"
   $114 = ((($113)) + 4|0); //@line 215 "../../iup_maskmatch.c"
   $115 = HEAP32[$114>>2]|0; //@line 215 "../../iup_maskmatch.c"
   $116 = (($115) + ($112<<4)|0); //@line 215 "../../iup_maskmatch.c"
   $117 = HEAP8[$116>>0]|0; //@line 215 "../../iup_maskmatch.c"
   $118 = $117 << 24 >> 24; //@line 215 "../../iup_maskmatch.c"
   $119 = ((($14)) + 8|0); //@line 215 "../../iup_maskmatch.c"
   HEAP16[$119>>1] = $118; //@line 215 "../../iup_maskmatch.c"
   $120 = $6; //@line 217 "../../iup_maskmatch.c"
   $121 = $7; //@line 217 "../../iup_maskmatch.c"
   $122 = $8; //@line 217 "../../iup_maskmatch.c"
   $123 = $6; //@line 217 "../../iup_maskmatch.c"
   $124 = ((($123)) + 4|0); //@line 217 "../../iup_maskmatch.c"
   $125 = HEAP32[$124>>2]|0; //@line 217 "../../iup_maskmatch.c"
   $126 = (($125) + ($122<<4)|0); //@line 217 "../../iup_maskmatch.c"
   $127 = ((($126)) + 8|0); //@line 217 "../../iup_maskmatch.c"
   $128 = HEAP32[$127>>2]|0; //@line 217 "../../iup_maskmatch.c"
   $129 = $10; //@line 217 "../../iup_maskmatch.c"
   $130 = (_iMaskMatchRecursive($120,$121,$128,$14,$129)|0); //@line 217 "../../iup_maskmatch.c"
   $13 = $130; //@line 217 "../../iup_maskmatch.c"
   $131 = $13; //@line 219 "../../iup_maskmatch.c"
   $5 = $131; //@line 219 "../../iup_maskmatch.c"
   $377 = $5; //@line 332 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   break;
  }
  case 72:  {
   $132 = $9; //@line 228 "../../iup_maskmatch.c"
   HEAP32[$16>>2] = $132; //@line 228 "../../iup_maskmatch.c"
   $133 = ((($16)) + 4|0); //@line 229 "../../iup_maskmatch.c"
   HEAP32[$133>>2] = 1; //@line 229 "../../iup_maskmatch.c"
   $134 = $7; //@line 230 "../../iup_maskmatch.c"
   $135 = (($134) - 1)|0; //@line 230 "../../iup_maskmatch.c"
   $136 = ((($16)) + 12|0); //@line 230 "../../iup_maskmatch.c"
   HEAP32[$136>>2] = $135; //@line 230 "../../iup_maskmatch.c"
   $137 = $8; //@line 231 "../../iup_maskmatch.c"
   $138 = $6; //@line 231 "../../iup_maskmatch.c"
   $139 = ((($138)) + 4|0); //@line 231 "../../iup_maskmatch.c"
   $140 = HEAP32[$139>>2]|0; //@line 231 "../../iup_maskmatch.c"
   $141 = (($140) + ($137<<4)|0); //@line 231 "../../iup_maskmatch.c"
   $142 = HEAP8[$141>>0]|0; //@line 231 "../../iup_maskmatch.c"
   $143 = $142 << 24 >> 24; //@line 231 "../../iup_maskmatch.c"
   $144 = ((($16)) + 8|0); //@line 231 "../../iup_maskmatch.c"
   HEAP16[$144>>1] = $143; //@line 231 "../../iup_maskmatch.c"
   $145 = $6; //@line 233 "../../iup_maskmatch.c"
   $146 = $7; //@line 233 "../../iup_maskmatch.c"
   $147 = $8; //@line 233 "../../iup_maskmatch.c"
   $148 = $6; //@line 233 "../../iup_maskmatch.c"
   $149 = ((($148)) + 4|0); //@line 233 "../../iup_maskmatch.c"
   $150 = HEAP32[$149>>2]|0; //@line 233 "../../iup_maskmatch.c"
   $151 = (($150) + ($147<<4)|0); //@line 233 "../../iup_maskmatch.c"
   $152 = ((($151)) + 8|0); //@line 233 "../../iup_maskmatch.c"
   $153 = HEAP32[$152>>2]|0; //@line 233 "../../iup_maskmatch.c"
   $154 = $10; //@line 233 "../../iup_maskmatch.c"
   $155 = (_iMaskMatchRecursive($145,$146,$153,$16,$154)|0); //@line 233 "../../iup_maskmatch.c"
   $15 = $155; //@line 233 "../../iup_maskmatch.c"
   $156 = $15; //@line 235 "../../iup_maskmatch.c"
   $5 = $156; //@line 235 "../../iup_maskmatch.c"
   $377 = $5; //@line 332 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   break;
  }
  case 5:  {
   $18 = 0; //@line 240 "../../iup_maskmatch.c"
   $157 = $8; //@line 242 "../../iup_maskmatch.c"
   $158 = $6; //@line 242 "../../iup_maskmatch.c"
   $159 = ((($158)) + 4|0); //@line 242 "../../iup_maskmatch.c"
   $160 = HEAP32[$159>>2]|0; //@line 242 "../../iup_maskmatch.c"
   $161 = (($160) + ($157<<4)|0); //@line 242 "../../iup_maskmatch.c"
   $162 = ((($161)) + 8|0); //@line 242 "../../iup_maskmatch.c"
   $163 = HEAP32[$162>>2]|0; //@line 242 "../../iup_maskmatch.c"
   $17 = $163; //@line 242 "../../iup_maskmatch.c"
   $164 = $8; //@line 243 "../../iup_maskmatch.c"
   $165 = $6; //@line 243 "../../iup_maskmatch.c"
   $166 = ((($165)) + 4|0); //@line 243 "../../iup_maskmatch.c"
   $167 = HEAP32[$166>>2]|0; //@line 243 "../../iup_maskmatch.c"
   $168 = (($167) + ($164<<4)|0); //@line 243 "../../iup_maskmatch.c"
   $169 = ((($168)) + 12|0); //@line 243 "../../iup_maskmatch.c"
   $170 = HEAP32[$169>>2]|0; //@line 243 "../../iup_maskmatch.c"
   $19 = $170; //@line 243 "../../iup_maskmatch.c"
   $171 = $8; //@line 244 "../../iup_maskmatch.c"
   $172 = (($171) + 1)|0; //@line 244 "../../iup_maskmatch.c"
   $8 = $172; //@line 244 "../../iup_maskmatch.c"
   while(1) {
    $173 = $8; //@line 246 "../../iup_maskmatch.c"
    $174 = $6; //@line 246 "../../iup_maskmatch.c"
    $175 = ((($174)) + 4|0); //@line 246 "../../iup_maskmatch.c"
    $176 = HEAP32[$175>>2]|0; //@line 246 "../../iup_maskmatch.c"
    $177 = (($176) + ($173<<4)|0); //@line 246 "../../iup_maskmatch.c"
    $178 = ((($177)) + 4|0); //@line 246 "../../iup_maskmatch.c"
    $179 = HEAP32[$178>>2]|0; //@line 246 "../../iup_maskmatch.c"
    $180 = ($179|0)!=(1); //@line 246 "../../iup_maskmatch.c"
    if (!($180)) {
     break;
    }
    $181 = $8; //@line 248 "../../iup_maskmatch.c"
    $182 = $6; //@line 248 "../../iup_maskmatch.c"
    $183 = ((($182)) + 4|0); //@line 248 "../../iup_maskmatch.c"
    $184 = HEAP32[$183>>2]|0; //@line 248 "../../iup_maskmatch.c"
    $185 = (($184) + ($181<<4)|0); //@line 248 "../../iup_maskmatch.c"
    $186 = ((($185)) + 4|0); //@line 248 "../../iup_maskmatch.c"
    $187 = HEAP32[$186>>2]|0; //@line 248 "../../iup_maskmatch.c"
    $188 = ($187|0)==(50); //@line 248 "../../iup_maskmatch.c"
    if ($188) {
     $189 = $7; //@line 250 "../../iup_maskmatch.c"
     $190 = $6; //@line 250 "../../iup_maskmatch.c"
     $191 = HEAP32[$190>>2]|0; //@line 250 "../../iup_maskmatch.c"
     $192 = (($191) + ($189)|0); //@line 250 "../../iup_maskmatch.c"
     $193 = HEAP8[$192>>0]|0; //@line 250 "../../iup_maskmatch.c"
     $194 = $193 << 24 >> 24; //@line 250 "../../iup_maskmatch.c"
     $195 = $8; //@line 250 "../../iup_maskmatch.c"
     $196 = $6; //@line 250 "../../iup_maskmatch.c"
     $197 = ((($196)) + 4|0); //@line 250 "../../iup_maskmatch.c"
     $198 = HEAP32[$197>>2]|0; //@line 250 "../../iup_maskmatch.c"
     $199 = (($198) + ($195<<4)|0); //@line 250 "../../iup_maskmatch.c"
     $200 = HEAP8[$199>>0]|0; //@line 250 "../../iup_maskmatch.c"
     $201 = $200 << 24 >> 24; //@line 250 "../../iup_maskmatch.c"
     $202 = ($194|0)>=($201|0); //@line 250 "../../iup_maskmatch.c"
     if ($202) {
      $203 = $7; //@line 251 "../../iup_maskmatch.c"
      $204 = $6; //@line 251 "../../iup_maskmatch.c"
      $205 = HEAP32[$204>>2]|0; //@line 251 "../../iup_maskmatch.c"
      $206 = (($205) + ($203)|0); //@line 251 "../../iup_maskmatch.c"
      $207 = HEAP8[$206>>0]|0; //@line 251 "../../iup_maskmatch.c"
      $208 = $207 << 24 >> 24; //@line 251 "../../iup_maskmatch.c"
      $209 = $8; //@line 251 "../../iup_maskmatch.c"
      $210 = $6; //@line 251 "../../iup_maskmatch.c"
      $211 = ((($210)) + 4|0); //@line 251 "../../iup_maskmatch.c"
      $212 = HEAP32[$211>>2]|0; //@line 251 "../../iup_maskmatch.c"
      $213 = (($212) + ($209<<4)|0); //@line 251 "../../iup_maskmatch.c"
      $214 = ((($213)) + 8|0); //@line 251 "../../iup_maskmatch.c"
      $215 = HEAP32[$214>>2]|0; //@line 251 "../../iup_maskmatch.c"
      $216 = ($208|0)<=($215|0); //@line 251 "../../iup_maskmatch.c"
      if ($216) {
       label = 22;
       break;
      }
     }
    } else {
     $217 = $8; //@line 258 "../../iup_maskmatch.c"
     $218 = $6; //@line 258 "../../iup_maskmatch.c"
     $219 = ((($218)) + 4|0); //@line 258 "../../iup_maskmatch.c"
     $220 = HEAP32[$219>>2]|0; //@line 258 "../../iup_maskmatch.c"
     $221 = (($220) + ($217<<4)|0); //@line 258 "../../iup_maskmatch.c"
     $222 = ((($221)) + 4|0); //@line 258 "../../iup_maskmatch.c"
     $223 = HEAP32[$222>>2]|0; //@line 258 "../../iup_maskmatch.c"
     $224 = ($223|0)==(51); //@line 258 "../../iup_maskmatch.c"
     if ($224) {
      $225 = $7; //@line 259 "../../iup_maskmatch.c"
      $226 = $6; //@line 259 "../../iup_maskmatch.c"
      $227 = HEAP32[$226>>2]|0; //@line 259 "../../iup_maskmatch.c"
      $228 = (($227) + ($225)|0); //@line 259 "../../iup_maskmatch.c"
      $229 = HEAP8[$228>>0]|0; //@line 259 "../../iup_maskmatch.c"
      $230 = $229 << 24 >> 24; //@line 259 "../../iup_maskmatch.c"
      $231 = $8; //@line 259 "../../iup_maskmatch.c"
      $232 = $6; //@line 259 "../../iup_maskmatch.c"
      $233 = ((($232)) + 4|0); //@line 259 "../../iup_maskmatch.c"
      $234 = HEAP32[$233>>2]|0; //@line 259 "../../iup_maskmatch.c"
      $235 = (($234) + ($231<<4)|0); //@line 259 "../../iup_maskmatch.c"
      $236 = HEAP8[$235>>0]|0; //@line 259 "../../iup_maskmatch.c"
      $237 = $236 << 24 >> 24; //@line 259 "../../iup_maskmatch.c"
      $238 = ($230|0)==($237|0); //@line 259 "../../iup_maskmatch.c"
      if ($238) {
       label = 25;
       break;
      }
     }
    }
    $239 = $8; //@line 264 "../../iup_maskmatch.c"
    $240 = (($239) + 1)|0; //@line 264 "../../iup_maskmatch.c"
    $8 = $240; //@line 264 "../../iup_maskmatch.c"
   }
   if ((label|0) == 22) {
    $18 = 1; //@line 253 "../../iup_maskmatch.c"
   }
   else if ((label|0) == 25) {
    $18 = 1; //@line 261 "../../iup_maskmatch.c"
   }
   $241 = $18; //@line 267 "../../iup_maskmatch.c"
   $242 = $19; //@line 267 "../../iup_maskmatch.c"
   $243 = $241 ^ $242; //@line 267 "../../iup_maskmatch.c"
   $244 = ($243|0)!=(0); //@line 267 "../../iup_maskmatch.c"
   if (!($244)) {
    $5 = -1; //@line 277 "../../iup_maskmatch.c"
    $377 = $5; //@line 332 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   }
   $245 = $7; //@line 269 "../../iup_maskmatch.c"
   $246 = $6; //@line 269 "../../iup_maskmatch.c"
   $247 = HEAP32[$246>>2]|0; //@line 269 "../../iup_maskmatch.c"
   $248 = (($247) + ($245)|0); //@line 269 "../../iup_maskmatch.c"
   $249 = HEAP8[$248>>0]|0; //@line 269 "../../iup_maskmatch.c"
   $250 = $249 << 24 >> 24; //@line 269 "../../iup_maskmatch.c"
   $251 = ($250|0)==(0); //@line 269 "../../iup_maskmatch.c"
   if ($251) {
    $5 = -1; //@line 270 "../../iup_maskmatch.c"
    $377 = $5; //@line 332 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   } else {
    $252 = $7; //@line 271 "../../iup_maskmatch.c"
    $253 = (($252) + 1)|0; //@line 271 "../../iup_maskmatch.c"
    $7 = $253; //@line 271 "../../iup_maskmatch.c"
    $254 = $10; //@line 272 "../../iup_maskmatch.c"
    $255 = (($254) + 1)|0; //@line 272 "../../iup_maskmatch.c"
    $256 = $6; //@line 272 "../../iup_maskmatch.c"
    $257 = ((($256)) + 12|0); //@line 272 "../../iup_maskmatch.c"
    $258 = HEAP32[$257>>2]|0; //@line 272 "../../iup_maskmatch.c"
    $259 = (($258) + ($255<<1)|0); //@line 272 "../../iup_maskmatch.c"
    $260 = $6; //@line 272 "../../iup_maskmatch.c"
    $261 = ((($260)) + 12|0); //@line 272 "../../iup_maskmatch.c"
    HEAP32[$261>>2] = $259; //@line 272 "../../iup_maskmatch.c"
    $10 = 0; //@line 273 "../../iup_maskmatch.c"
    $262 = $6; //@line 274 "../../iup_maskmatch.c"
    $263 = $7; //@line 274 "../../iup_maskmatch.c"
    $264 = $17; //@line 274 "../../iup_maskmatch.c"
    $265 = $9; //@line 274 "../../iup_maskmatch.c"
    $266 = $10; //@line 274 "../../iup_maskmatch.c"
    $267 = (_iMaskMatchRecursive($262,$263,$264,$265,$266)|0); //@line 274 "../../iup_maskmatch.c"
    $5 = $267; //@line 274 "../../iup_maskmatch.c"
    $377 = $5; //@line 332 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   }
   break;
  }
  case 3:  {
   $268 = $7; //@line 281 "../../iup_maskmatch.c"
   $269 = $6; //@line 281 "../../iup_maskmatch.c"
   $270 = HEAP32[$269>>2]|0; //@line 281 "../../iup_maskmatch.c"
   $271 = (($270) + ($268)|0); //@line 281 "../../iup_maskmatch.c"
   $272 = HEAP8[$271>>0]|0; //@line 281 "../../iup_maskmatch.c"
   $273 = $272 << 24 >> 24; //@line 281 "../../iup_maskmatch.c"
   $274 = $8; //@line 281 "../../iup_maskmatch.c"
   $275 = $6; //@line 281 "../../iup_maskmatch.c"
   $276 = ((($275)) + 4|0); //@line 281 "../../iup_maskmatch.c"
   $277 = HEAP32[$276>>2]|0; //@line 281 "../../iup_maskmatch.c"
   $278 = (($277) + ($274<<4)|0); //@line 281 "../../iup_maskmatch.c"
   $279 = HEAP8[$278>>0]|0; //@line 281 "../../iup_maskmatch.c"
   $280 = $279 << 24 >> 24; //@line 281 "../../iup_maskmatch.c"
   $281 = ($273|0)!=($280|0); //@line 281 "../../iup_maskmatch.c"
   if (!($281)) {
    $282 = $7; //@line 283 "../../iup_maskmatch.c"
    $283 = (($282) + 1)|0; //@line 283 "../../iup_maskmatch.c"
    $7 = $283; //@line 283 "../../iup_maskmatch.c"
    $284 = $10; //@line 284 "../../iup_maskmatch.c"
    $285 = (($284) + 1)|0; //@line 284 "../../iup_maskmatch.c"
    $286 = $6; //@line 284 "../../iup_maskmatch.c"
    $287 = ((($286)) + 12|0); //@line 284 "../../iup_maskmatch.c"
    $288 = HEAP32[$287>>2]|0; //@line 284 "../../iup_maskmatch.c"
    $289 = (($288) + ($285<<1)|0); //@line 284 "../../iup_maskmatch.c"
    $290 = $6; //@line 284 "../../iup_maskmatch.c"
    $291 = ((($290)) + 12|0); //@line 284 "../../iup_maskmatch.c"
    HEAP32[$291>>2] = $289; //@line 284 "../../iup_maskmatch.c"
    $10 = 0; //@line 285 "../../iup_maskmatch.c"
    break L1;
   }
   $5 = -1; //@line 282 "../../iup_maskmatch.c"
   $377 = $5; //@line 332 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   break;
  }
  case 2:  {
   $292 = $7; //@line 289 "../../iup_maskmatch.c"
   $293 = $6; //@line 289 "../../iup_maskmatch.c"
   $294 = HEAP32[$293>>2]|0; //@line 289 "../../iup_maskmatch.c"
   $295 = (($294) + ($292)|0); //@line 289 "../../iup_maskmatch.c"
   $296 = HEAP8[$295>>0]|0; //@line 289 "../../iup_maskmatch.c"
   $297 = $296 << 24 >> 24; //@line 289 "../../iup_maskmatch.c"
   $298 = ($297|0)==(0); //@line 289 "../../iup_maskmatch.c"
   if (!($298)) {
    $299 = $7; //@line 289 "../../iup_maskmatch.c"
    $300 = $6; //@line 289 "../../iup_maskmatch.c"
    $301 = HEAP32[$300>>2]|0; //@line 289 "../../iup_maskmatch.c"
    $302 = (($301) + ($299)|0); //@line 289 "../../iup_maskmatch.c"
    $303 = HEAP8[$302>>0]|0; //@line 289 "../../iup_maskmatch.c"
    $304 = $303 << 24 >> 24; //@line 289 "../../iup_maskmatch.c"
    $305 = ($304|0)==(10); //@line 289 "../../iup_maskmatch.c"
    if (!($305)) {
     $306 = $7; //@line 291 "../../iup_maskmatch.c"
     $307 = (($306) + 1)|0; //@line 291 "../../iup_maskmatch.c"
     $7 = $307; //@line 291 "../../iup_maskmatch.c"
     $308 = $10; //@line 292 "../../iup_maskmatch.c"
     $309 = (($308) + 1)|0; //@line 292 "../../iup_maskmatch.c"
     $310 = $6; //@line 292 "../../iup_maskmatch.c"
     $311 = ((($310)) + 12|0); //@line 292 "../../iup_maskmatch.c"
     $312 = HEAP32[$311>>2]|0; //@line 292 "../../iup_maskmatch.c"
     $313 = (($312) + ($309<<1)|0); //@line 292 "../../iup_maskmatch.c"
     $314 = $6; //@line 292 "../../iup_maskmatch.c"
     $315 = ((($314)) + 12|0); //@line 292 "../../iup_maskmatch.c"
     HEAP32[$315>>2] = $313; //@line 292 "../../iup_maskmatch.c"
     $10 = 0; //@line 293 "../../iup_maskmatch.c"
     break L1;
    }
   }
   $5 = -1; //@line 290 "../../iup_maskmatch.c"
   $377 = $5; //@line 332 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   break;
  }
  case 4:  {
   $316 = $8; //@line 300 "../../iup_maskmatch.c"
   $317 = $6; //@line 300 "../../iup_maskmatch.c"
   $318 = ((($317)) + 4|0); //@line 300 "../../iup_maskmatch.c"
   $319 = HEAP32[$318>>2]|0; //@line 300 "../../iup_maskmatch.c"
   $320 = (($319) + ($316<<4)|0); //@line 300 "../../iup_maskmatch.c"
   $321 = HEAP8[$320>>0]|0; //@line 300 "../../iup_maskmatch.c"
   $322 = $321 << 24 >> 24; //@line 300 "../../iup_maskmatch.c"
   $323 = (208 + ($322<<3)|0); //@line 300 "../../iup_maskmatch.c"
   $324 = ((($323)) + 4|0); //@line 300 "../../iup_maskmatch.c"
   $325 = HEAP32[$324>>2]|0; //@line 300 "../../iup_maskmatch.c"
   $326 = $6; //@line 300 "../../iup_maskmatch.c"
   $327 = HEAP32[$326>>2]|0; //@line 300 "../../iup_maskmatch.c"
   $328 = $7; //@line 300 "../../iup_maskmatch.c"
   $329 = (FUNCTION_TABLE_iii[$325 & 1023]($327,$328)|0); //@line 300 "../../iup_maskmatch.c"
   $20 = $329; //@line 300 "../../iup_maskmatch.c"
   $330 = $20; //@line 302 "../../iup_maskmatch.c"
   switch ($330|0) {
   case 2:  {
    break;
   }
   case 0:  {
    $331 = $7; //@line 308 "../../iup_maskmatch.c"
    $332 = (($331) + 1)|0; //@line 308 "../../iup_maskmatch.c"
    $7 = $332; //@line 308 "../../iup_maskmatch.c"
    $333 = $10; //@line 309 "../../iup_maskmatch.c"
    $334 = (($333) + 1)|0; //@line 309 "../../iup_maskmatch.c"
    $335 = $6; //@line 309 "../../iup_maskmatch.c"
    $336 = ((($335)) + 12|0); //@line 309 "../../iup_maskmatch.c"
    $337 = HEAP32[$336>>2]|0; //@line 309 "../../iup_maskmatch.c"
    $338 = (($337) + ($334<<1)|0); //@line 309 "../../iup_maskmatch.c"
    $339 = $6; //@line 309 "../../iup_maskmatch.c"
    $340 = ((($339)) + 12|0); //@line 309 "../../iup_maskmatch.c"
    HEAP32[$340>>2] = $338; //@line 309 "../../iup_maskmatch.c"
    $10 = 0; //@line 310 "../../iup_maskmatch.c"
    break L1;
    break;
   }
   default: {
    break L1;
   }
   }
   $5 = -1; //@line 305 "../../iup_maskmatch.c"
   $377 = $5; //@line 332 "../../iup_maskmatch.c"
   STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   break;
  }
  case 6:  {
   $341 = $7; //@line 319 "../../iup_maskmatch.c"
   $342 = (($341) - 1)|0; //@line 319 "../../iup_maskmatch.c"
   $343 = $6; //@line 319 "../../iup_maskmatch.c"
   $344 = HEAP32[$343>>2]|0; //@line 319 "../../iup_maskmatch.c"
   $345 = (($344) + ($342)|0); //@line 319 "../../iup_maskmatch.c"
   $346 = HEAP8[$345>>0]|0; //@line 319 "../../iup_maskmatch.c"
   $347 = $346 << 24 >> 24; //@line 319 "../../iup_maskmatch.c"
   $348 = ($347|0)==(10); //@line 319 "../../iup_maskmatch.c"
   $349 = $7; //@line 319 "../../iup_maskmatch.c"
   $350 = ($349|0)==(0); //@line 319 "../../iup_maskmatch.c"
   $or$cond = $348 | $350; //@line 319 "../../iup_maskmatch.c"
   if (!($or$cond)) {
    $5 = -1; //@line 320 "../../iup_maskmatch.c"
    $377 = $5; //@line 332 "../../iup_maskmatch.c"
    STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
   }
   break;
  }
  case 7:  {
   $351 = $7; //@line 325 "../../iup_maskmatch.c"
   $352 = $6; //@line 325 "../../iup_maskmatch.c"
   $353 = HEAP32[$352>>2]|0; //@line 325 "../../iup_maskmatch.c"
   $354 = (($353) + ($351)|0); //@line 325 "../../iup_maskmatch.c"
   $355 = HEAP8[$354>>0]|0; //@line 325 "../../iup_maskmatch.c"
   $356 = $355 << 24 >> 24; //@line 325 "../../iup_maskmatch.c"
   $357 = ($356|0)==(10); //@line 325 "../../iup_maskmatch.c"
   if (!($357)) {
    $358 = $7; //@line 325 "../../iup_maskmatch.c"
    $359 = $6; //@line 325 "../../iup_maskmatch.c"
    $360 = HEAP32[$359>>2]|0; //@line 325 "../../iup_maskmatch.c"
    $361 = (($360) + ($358)|0); //@line 325 "../../iup_maskmatch.c"
    $362 = HEAP8[$361>>0]|0; //@line 325 "../../iup_maskmatch.c"
    $363 = $362 << 24 >> 24; //@line 325 "../../iup_maskmatch.c"
    $364 = ($363|0)==(0); //@line 325 "../../iup_maskmatch.c"
    if (!($364)) {
     $5 = -1; //@line 326 "../../iup_maskmatch.c"
     $377 = $5; //@line 332 "../../iup_maskmatch.c"
     STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $365 = $6; //@line 331 "../../iup_maskmatch.c"
 $366 = $7; //@line 331 "../../iup_maskmatch.c"
 $367 = $8; //@line 331 "../../iup_maskmatch.c"
 $368 = $6; //@line 331 "../../iup_maskmatch.c"
 $369 = ((($368)) + 4|0); //@line 331 "../../iup_maskmatch.c"
 $370 = HEAP32[$369>>2]|0; //@line 331 "../../iup_maskmatch.c"
 $371 = (($370) + ($367<<4)|0); //@line 331 "../../iup_maskmatch.c"
 $372 = ((($371)) + 8|0); //@line 331 "../../iup_maskmatch.c"
 $373 = HEAP32[$372>>2]|0; //@line 331 "../../iup_maskmatch.c"
 $374 = $9; //@line 331 "../../iup_maskmatch.c"
 $375 = $10; //@line 331 "../../iup_maskmatch.c"
 $376 = (_iMaskMatchRecursive($365,$366,$373,$374,$375)|0); //@line 331 "../../iup_maskmatch.c"
 $5 = $376; //@line 331 "../../iup_maskmatch.c"
 $377 = $5; //@line 332 "../../iup_maskmatch.c"
 STACKTOP = sp;return ($377|0); //@line 332 "../../iup_maskmatch.c"
}
function _iMaskMatchCaptureResult($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 131 "../../iup_maskmatch.c"
 while(1) {
  $7 = $3; //@line 133 "../../iup_maskmatch.c"
  $8 = ($7|0)!=(0|0); //@line 133 "../../iup_maskmatch.c"
  if (!($8)) {
   break;
  }
  $9 = $3; //@line 135 "../../iup_maskmatch.c"
  $10 = HEAP32[$9>>2]|0; //@line 135 "../../iup_maskmatch.c"
  $5 = $10; //@line 135 "../../iup_maskmatch.c"
  $11 = $4; //@line 137 "../../iup_maskmatch.c"
  $12 = $3; //@line 137 "../../iup_maskmatch.c"
  HEAP32[$12>>2] = $11; //@line 137 "../../iup_maskmatch.c"
  $13 = $3; //@line 138 "../../iup_maskmatch.c"
  $4 = $13; //@line 138 "../../iup_maskmatch.c"
  $14 = $5; //@line 139 "../../iup_maskmatch.c"
  $3 = $14; //@line 139 "../../iup_maskmatch.c"
 }
 $15 = $4; //@line 142 "../../iup_maskmatch.c"
 $3 = $15; //@line 142 "../../iup_maskmatch.c"
 $4 = 0; //@line 143 "../../iup_maskmatch.c"
 while(1) {
  $16 = $3; //@line 145 "../../iup_maskmatch.c"
  $17 = ($16|0)!=(0|0); //@line 145 "../../iup_maskmatch.c"
  if (!($17)) {
   break;
  }
  $18 = $3; //@line 147 "../../iup_maskmatch.c"
  $19 = ((($18)) + 4|0); //@line 147 "../../iup_maskmatch.c"
  $20 = HEAP32[$19>>2]|0; //@line 147 "../../iup_maskmatch.c"
  $21 = ($20|0)==(0); //@line 147 "../../iup_maskmatch.c"
  $22 = $3; //@line 149 "../../iup_maskmatch.c"
  if ($21) {
   $23 = HEAP32[$22>>2]|0; //@line 149 "../../iup_maskmatch.c"
   $6 = $23; //@line 149 "../../iup_maskmatch.c"
   $24 = $4; //@line 151 "../../iup_maskmatch.c"
   $25 = $3; //@line 151 "../../iup_maskmatch.c"
   HEAP32[$25>>2] = $24; //@line 151 "../../iup_maskmatch.c"
   $26 = $3; //@line 152 "../../iup_maskmatch.c"
   $4 = $26; //@line 152 "../../iup_maskmatch.c"
   $27 = $6; //@line 153 "../../iup_maskmatch.c"
   $3 = $27; //@line 153 "../../iup_maskmatch.c"
   continue;
  }
  $28 = ((($22)) + 12|0); //@line 157 "../../iup_maskmatch.c"
  $29 = HEAP32[$28>>2]|0; //@line 157 "../../iup_maskmatch.c"
  $30 = $4; //@line 157 "../../iup_maskmatch.c"
  $31 = ((($30)) + 12|0); //@line 157 "../../iup_maskmatch.c"
  $32 = HEAP32[$31>>2]|0; //@line 157 "../../iup_maskmatch.c"
  $33 = ($29|0)>=($32|0); //@line 157 "../../iup_maskmatch.c"
  if ($33) {
   $34 = $2; //@line 158 "../../iup_maskmatch.c"
   $35 = ((($34)) + 8|0); //@line 158 "../../iup_maskmatch.c"
   $36 = HEAP32[$35>>2]|0; //@line 158 "../../iup_maskmatch.c"
   $37 = $3; //@line 158 "../../iup_maskmatch.c"
   $38 = ((($37)) + 8|0); //@line 158 "../../iup_maskmatch.c"
   $39 = HEAP16[$38>>1]|0; //@line 158 "../../iup_maskmatch.c"
   $40 = $39&255; //@line 158 "../../iup_maskmatch.c"
   $41 = $4; //@line 158 "../../iup_maskmatch.c"
   $42 = ((($41)) + 12|0); //@line 158 "../../iup_maskmatch.c"
   $43 = HEAP32[$42>>2]|0; //@line 158 "../../iup_maskmatch.c"
   $44 = $3; //@line 158 "../../iup_maskmatch.c"
   $45 = ((($44)) + 12|0); //@line 158 "../../iup_maskmatch.c"
   $46 = HEAP32[$45>>2]|0; //@line 158 "../../iup_maskmatch.c"
   $47 = $2; //@line 158 "../../iup_maskmatch.c"
   $48 = HEAP32[$47>>2]|0; //@line 158 "../../iup_maskmatch.c"
   $49 = $2; //@line 158 "../../iup_maskmatch.c"
   $50 = ((($49)) + 16|0); //@line 158 "../../iup_maskmatch.c"
   $51 = HEAP32[$50>>2]|0; //@line 158 "../../iup_maskmatch.c"
   (FUNCTION_TABLE_iiiiii[$36 & 0]($40,$43,$46,$48,$51)|0); //@line 158 "../../iup_maskmatch.c"
  }
  $52 = $4; //@line 160 "../../iup_maskmatch.c"
  $53 = HEAP32[$52>>2]|0; //@line 160 "../../iup_maskmatch.c"
  $4 = $53; //@line 160 "../../iup_maskmatch.c"
  $54 = $3; //@line 161 "../../iup_maskmatch.c"
  $55 = HEAP32[$54>>2]|0; //@line 161 "../../iup_maskmatch.c"
  $3 = $55; //@line 161 "../../iup_maskmatch.c"
 }
 STACKTOP = sp;return; //@line 164 "../../iup_maskmatch.c"
}
function _iMaskNewStack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 346 "../../iup_maskmatch.c"
 $5 = ((($4)) + 4|0); //@line 346 "../../iup_maskmatch.c"
 HEAP16[$5>>1] = 0; //@line 346 "../../iup_maskmatch.c"
 $6 = $3; //@line 347 "../../iup_maskmatch.c"
 $7 = $2; //@line 347 "../../iup_maskmatch.c"
 HEAP32[$7>>2] = $6; //@line 347 "../../iup_maskmatch.c"
 STACKTOP = sp;return; //@line 348 "../../iup_maskmatch.c"
}
function _iMaskPushStack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 352 "../../iup_maskmatch.c"
 $5 = $4&65535; //@line 352 "../../iup_maskmatch.c"
 $6 = $2; //@line 352 "../../iup_maskmatch.c"
 $7 = ((($6)) + 4|0); //@line 352 "../../iup_maskmatch.c"
 $8 = HEAP16[$7>>1]|0; //@line 352 "../../iup_maskmatch.c"
 $9 = (($8) + 1)<<16>>16; //@line 352 "../../iup_maskmatch.c"
 HEAP16[$7>>1] = $9; //@line 352 "../../iup_maskmatch.c"
 $10 = $8 << 16 >> 16; //@line 352 "../../iup_maskmatch.c"
 $11 = $2; //@line 352 "../../iup_maskmatch.c"
 $12 = HEAP32[$11>>2]|0; //@line 352 "../../iup_maskmatch.c"
 $13 = (($12) + ($10<<1)|0); //@line 352 "../../iup_maskmatch.c"
 HEAP16[$13>>1] = $5; //@line 352 "../../iup_maskmatch.c"
 STACKTOP = sp;return; //@line 353 "../../iup_maskmatch.c"
}
function _iMaskInStack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = 0; //@line 337 "../../iup_maskmatch.c"
 while(1) {
  $6 = $5; //@line 337 "../../iup_maskmatch.c"
  $7 = $3; //@line 337 "../../iup_maskmatch.c"
  $8 = ((($7)) + 4|0); //@line 337 "../../iup_maskmatch.c"
  $9 = HEAP16[$8>>1]|0; //@line 337 "../../iup_maskmatch.c"
  $10 = $9 << 16 >> 16; //@line 337 "../../iup_maskmatch.c"
  $11 = ($6|0)<($10|0); //@line 337 "../../iup_maskmatch.c"
  if (!($11)) {
   label = 6;
   break;
  }
  $12 = $5; //@line 338 "../../iup_maskmatch.c"
  $13 = $3; //@line 338 "../../iup_maskmatch.c"
  $14 = HEAP32[$13>>2]|0; //@line 338 "../../iup_maskmatch.c"
  $15 = (($14) + ($12<<1)|0); //@line 338 "../../iup_maskmatch.c"
  $16 = HEAP16[$15>>1]|0; //@line 338 "../../iup_maskmatch.c"
  $17 = $16 << 16 >> 16; //@line 338 "../../iup_maskmatch.c"
  $18 = $4; //@line 338 "../../iup_maskmatch.c"
  $19 = ($17|0)==($18|0); //@line 338 "../../iup_maskmatch.c"
  if ($19) {
   label = 4;
   break;
  }
  $20 = $5; //@line 337 "../../iup_maskmatch.c"
  $21 = (($20) + 1)|0; //@line 337 "../../iup_maskmatch.c"
  $5 = $21; //@line 337 "../../iup_maskmatch.c"
 }
 if ((label|0) == 4) {
  $2 = 1; //@line 339 "../../iup_maskmatch.c"
  $22 = $2; //@line 342 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($22|0); //@line 342 "../../iup_maskmatch.c"
 }
 else if ((label|0) == 6) {
  $2 = 0; //@line 341 "../../iup_maskmatch.c"
  $22 = $2; //@line 342 "../../iup_maskmatch.c"
  STACKTOP = sp;return ($22|0); //@line 342 "../../iup_maskmatch.c"
 }
 return (0)|0;
}
function _iMaskMoveStack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 357 "../../iup_maskmatch.c"
 $6 = HEAP32[$5>>2]|0; //@line 357 "../../iup_maskmatch.c"
 $4 = $6; //@line 357 "../../iup_maskmatch.c"
 $7 = $3; //@line 358 "../../iup_maskmatch.c"
 $8 = HEAP32[$7>>2]|0; //@line 358 "../../iup_maskmatch.c"
 $9 = $2; //@line 358 "../../iup_maskmatch.c"
 HEAP32[$9>>2] = $8; //@line 358 "../../iup_maskmatch.c"
 $10 = $4; //@line 359 "../../iup_maskmatch.c"
 $11 = $3; //@line 359 "../../iup_maskmatch.c"
 HEAP32[$11>>2] = $10; //@line 359 "../../iup_maskmatch.c"
 $12 = $3; //@line 361 "../../iup_maskmatch.c"
 $13 = ((($12)) + 4|0); //@line 361 "../../iup_maskmatch.c"
 $14 = HEAP16[$13>>1]|0; //@line 361 "../../iup_maskmatch.c"
 $15 = $2; //@line 361 "../../iup_maskmatch.c"
 $16 = ((($15)) + 4|0); //@line 361 "../../iup_maskmatch.c"
 HEAP16[$16>>1] = $14; //@line 361 "../../iup_maskmatch.c"
 $17 = $3; //@line 362 "../../iup_maskmatch.c"
 $18 = ((($17)) + 4|0); //@line 362 "../../iup_maskmatch.c"
 HEAP16[$18>>1] = 0; //@line 362 "../../iup_maskmatch.c"
 STACKTOP = sp;return; //@line 363 "../../iup_maskmatch.c"
}
function _iupMaskParse($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$reg2mem19$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $cond21 = 0, $cond22 = 0, $cond23 = 0, $cond24 = 0, $cond25 = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;
 $2 = sp;
 $3 = ((($2)) + 4|0); //@line 89 "../../iup_maskparse.c"
 HEAP32[$3>>2] = 1; //@line 89 "../../iup_maskparse.c"
 $4 = ((($2)) + 8|0); //@line 90 "../../iup_maskparse.c"
 HEAP32[$4>>2] = 0; //@line 90 "../../iup_maskparse.c"
 $5 = ((($2)) + 12|0); //@line 91 "../../iup_maskparse.c"
 HEAP32[$5>>2] = 0; //@line 91 "../../iup_maskparse.c"
 $6 = ((($2)) + 80|0); //@line 92 "../../iup_maskparse.c"
 HEAP16[$6>>1] = 0; //@line 92 "../../iup_maskparse.c"
 $7 = ((($2)) + 82|0); //@line 93 "../../iup_maskparse.c"
 HEAP8[$7>>0] = 0; //@line 93 "../../iup_maskparse.c"
 HEAP32[$2>>2] = $0; //@line 94 "../../iup_maskparse.c"
 __THREW__ = 0;
 $8 = (invoke_ii(340,480)|0); //@line 96 "../../iup_maskparse.c"
 $9 = __THREW__; __THREW__ = 0;
 if ((($9|0) != 0) & ((threwValue|0) != 0)) { $10 = _testSetjmp(HEAP32[$9>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($10|0) == 0) { _longjmp($9|0, threwValue|0); } tempRet0 = (threwValue); } else { $10 = -1; };
 $11 = tempRet0;
 $cond = ($10|0)==(1);
 do {
  if ($cond) {
   $$reg2mem19$0 = $11;
  } else {
   $12 = ((($2)) + 16|0); //@line 96 "../../iup_maskparse.c"
   HEAP32[$12>>2] = $8; //@line 96 "../../iup_maskparse.c"
   $13 = ($8|0)==(0|0); //@line 96 "../../iup_maskparse.c"
   if ($13) {
    $$0 = -2;
    _free(_setjmpTable|0);
    STACKTOP = sp;return ($$0|0); //@line 125 "../../iup_maskparse.c"
   } else {
    $14 = ((($2)) + 16|0); //@line 99 "../../iup_maskparse.c"
    $15 = HEAP32[$14>>2]|0; //@line 99 "../../iup_maskparse.c"
    _memset(($15|0),0,480)|0; //@line 99 "../../iup_maskparse.c"
    $16 = ((($2)) + 12|0); //@line 100 "../../iup_maskparse.c"
    HEAP32[$16>>2] = 30; //@line 100 "../../iup_maskparse.c"
    $17 = ((($2)) + 16|0); //@line 105 "../../iup_maskparse.c"
    $18 = HEAP32[$17>>2]|0; //@line 105 "../../iup_maskparse.c"
    HEAP8[$18>>0] = 101; //@line 105 "../../iup_maskparse.c"
    $19 = ((($2)) + 84|0); //@line 107 "../../iup_maskparse.c"
    _setjmpTable = _saveSetjmp($19,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = tempRet0;
    __THREW__ = 0;
    $20 = __THREW__; __THREW__ = 0;
    if ((($20|0) != 0) & ((threwValue|0) != 0)) { $21 = _testSetjmp(HEAP32[$20>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($21|0) == 0) { _longjmp($20|0, threwValue|0); } tempRet0 = (threwValue); } else { $21 = -1; };
    $22 = tempRet0;
    $cond21 = ($21|0)==(1);
    if ($cond21) {
     $$reg2mem19$0 = $22;
     break;
    }
    $$reg2mem19$0 = 0;
    break;
   }
  }
 } while(0);
 while(1) {
  $23 = ($$reg2mem19$0|0)==(0); //@line 107 "../../iup_maskparse.c"
  if (!($23)) {
   $44 = ((($2)) + 16|0); //@line 112 "../../iup_maskparse.c"
   $45 = HEAP32[$44>>2]|0; //@line 112 "../../iup_maskparse.c"
   __THREW__ = 0;
   invoke_vi(343,($45|0)); //@line 112 "../../iup_maskparse.c"
   $46 = __THREW__; __THREW__ = 0;
   if ((($46|0) != 0) & ((threwValue|0) != 0)) { $47 = _testSetjmp(HEAP32[$46>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($47|0) == 0) { _longjmp($46|0, threwValue|0); } tempRet0 = (threwValue); } else { $47 = -1; };
   $48 = tempRet0;
   $cond22 = ($47|0)==(1);
   if ($cond22) {
    $$reg2mem19$0 = $48;
    continue;
   } else {
    label = 12;
    break;
   }
  }
  __THREW__ = 0;
  $24 = (invoke_ii(341,($2|0))|0); //@line 108 "../../iup_maskparse.c"
  $25 = __THREW__; __THREW__ = 0;
  if ((($25|0) != 0) & ((threwValue|0) != 0)) { $26 = _testSetjmp(HEAP32[$25>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($26|0) == 0) { _longjmp($25|0, threwValue|0); } tempRet0 = (threwValue); } else { $26 = -1; };
  $27 = tempRet0;
  $cond23 = ($26|0)==(1);
  if ($cond23) {
   $$reg2mem19$0 = $27;
   continue;
  }
  $28 = ((($2)) + 16|0); //@line 119 "../../iup_maskparse.c"
  $29 = HEAP32[$28>>2]|0; //@line 119 "../../iup_maskparse.c"
  $30 = HEAP8[$29>>0]|0; //@line 119 "../../iup_maskparse.c"
  $31 = ((($2)) + 4|0); //@line 119 "../../iup_maskparse.c"
  $32 = HEAP32[$31>>2]|0; //@line 119 "../../iup_maskparse.c"
  $33 = (($32) + 1)|0; //@line 119 "../../iup_maskparse.c"
  __THREW__ = 0;
  invoke_viiiiii(342,($2|0),0,($30|0),1,($24|0),($33|0)); //@line 119 "../../iup_maskparse.c"
  $34 = __THREW__; __THREW__ = 0;
  if ((($34|0) != 0) & ((threwValue|0) != 0)) { $35 = _testSetjmp(HEAP32[$34>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($35|0) == 0) { _longjmp($34|0, threwValue|0); } tempRet0 = (threwValue); } else { $35 = -1; };
  $36 = tempRet0;
  $cond24 = ($35|0)==(1);
  if ($cond24) {
   $$reg2mem19$0 = $36;
   continue;
  }
  $37 = ((($2)) + 4|0); //@line 120 "../../iup_maskparse.c"
  $38 = HEAP32[$37>>2]|0; //@line 120 "../../iup_maskparse.c"
  __THREW__ = 0;
  invoke_viiiiii(342,($2|0),($38|0),0,1,0,0); //@line 120 "../../iup_maskparse.c"
  $39 = __THREW__; __THREW__ = 0;
  if ((($39|0) != 0) & ((threwValue|0) != 0)) { $40 = _testSetjmp(HEAP32[$39>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($40|0) == 0) { _longjmp($39|0, threwValue|0); } tempRet0 = (threwValue); } else { $40 = -1; };
  $41 = tempRet0;
  $cond25 = ($40|0)==(1);
  if ($cond25) {
   $$reg2mem19$0 = $41;
  } else {
   label = 10;
   break;
  }
 }
 if ((label|0) == 10) {
  $42 = ((($2)) + 16|0); //@line 122 "../../iup_maskparse.c"
  $43 = HEAP32[$42>>2]|0; //@line 122 "../../iup_maskparse.c"
  HEAP32[$1>>2] = $43; //@line 122 "../../iup_maskparse.c"
  $$0 = 0;
  _free(_setjmpTable|0);
  STACKTOP = sp;return ($$0|0); //@line 125 "../../iup_maskparse.c"
 }
 else if ((label|0) == 12) {
  $$0 = -3;
  _free(_setjmpTable|0);
  STACKTOP = sp;return ($$0|0); //@line 125 "../../iup_maskparse.c"
 }
 return (0)|0;
}
function _iMaskParseExpression($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $7 = $1; //@line 130 "../../iup_maskparse.c"
 $8 = ((($7)) + 4|0); //@line 130 "../../iup_maskparse.c"
 $9 = HEAP32[$8>>2]|0; //@line 130 "../../iup_maskparse.c"
 $10 = (($9) - 1)|0; //@line 130 "../../iup_maskparse.c"
 $4 = $10; //@line 130 "../../iup_maskparse.c"
 $11 = $1; //@line 132 "../../iup_maskparse.c"
 $12 = (_iMaskParseTerm($11)|0); //@line 132 "../../iup_maskparse.c"
 $3 = $12; //@line 132 "../../iup_maskparse.c"
 $13 = $3; //@line 133 "../../iup_maskparse.c"
 $2 = $13; //@line 133 "../../iup_maskparse.c"
 $14 = $1; //@line 135 "../../iup_maskparse.c"
 $15 = ((($14)) + 8|0); //@line 135 "../../iup_maskparse.c"
 $16 = HEAP32[$15>>2]|0; //@line 135 "../../iup_maskparse.c"
 $17 = $1; //@line 135 "../../iup_maskparse.c"
 $18 = HEAP32[$17>>2]|0; //@line 135 "../../iup_maskparse.c"
 $19 = (($18) + ($16)|0); //@line 135 "../../iup_maskparse.c"
 $20 = HEAP8[$19>>0]|0; //@line 135 "../../iup_maskparse.c"
 $21 = $20 << 24 >> 24; //@line 135 "../../iup_maskparse.c"
 $22 = HEAP8[14635]|0; //@line 135 "../../iup_maskparse.c"
 $23 = $22 << 24 >> 24; //@line 135 "../../iup_maskparse.c"
 $24 = ($21|0)==($23|0); //@line 135 "../../iup_maskparse.c"
 if (!($24)) {
  $125 = $2; //@line 171 "../../iup_maskparse.c"
  STACKTOP = sp;return ($125|0); //@line 171 "../../iup_maskparse.c"
 }
 $25 = $1; //@line 137 "../../iup_maskparse.c"
 $26 = ((($25)) + 4|0); //@line 137 "../../iup_maskparse.c"
 $27 = HEAP32[$26>>2]|0; //@line 137 "../../iup_maskparse.c"
 $5 = $27; //@line 137 "../../iup_maskparse.c"
 $28 = $5; //@line 140 "../../iup_maskparse.c"
 $2 = $28; //@line 140 "../../iup_maskparse.c"
 $29 = $1; //@line 142 "../../iup_maskparse.c"
 $30 = ((($29)) + 8|0); //@line 142 "../../iup_maskparse.c"
 $31 = HEAP32[$30>>2]|0; //@line 142 "../../iup_maskparse.c"
 $32 = (($31) + 1)|0; //@line 142 "../../iup_maskparse.c"
 HEAP32[$30>>2] = $32; //@line 142 "../../iup_maskparse.c"
 $33 = $1; //@line 143 "../../iup_maskparse.c"
 _iMaskParseNewState($33); //@line 143 "../../iup_maskparse.c"
 $34 = $1; //@line 145 "../../iup_maskparse.c"
 $35 = (_iMaskParseExpression($34)|0); //@line 145 "../../iup_maskparse.c"
 $6 = $35; //@line 145 "../../iup_maskparse.c"
 $36 = $4; //@line 150 "../../iup_maskparse.c"
 $37 = $1; //@line 150 "../../iup_maskparse.c"
 $38 = ((($37)) + 16|0); //@line 150 "../../iup_maskparse.c"
 $39 = HEAP32[$38>>2]|0; //@line 150 "../../iup_maskparse.c"
 $40 = (($39) + ($36<<4)|0); //@line 150 "../../iup_maskparse.c"
 $41 = ((($40)) + 8|0); //@line 150 "../../iup_maskparse.c"
 $42 = HEAP32[$41>>2]|0; //@line 150 "../../iup_maskparse.c"
 $43 = $3; //@line 150 "../../iup_maskparse.c"
 $44 = ($42|0)==($43|0); //@line 150 "../../iup_maskparse.c"
 if ($44) {
  $45 = $5; //@line 151 "../../iup_maskparse.c"
  $46 = $4; //@line 151 "../../iup_maskparse.c"
  $47 = $1; //@line 151 "../../iup_maskparse.c"
  $48 = ((($47)) + 16|0); //@line 151 "../../iup_maskparse.c"
  $49 = HEAP32[$48>>2]|0; //@line 151 "../../iup_maskparse.c"
  $50 = (($49) + ($46<<4)|0); //@line 151 "../../iup_maskparse.c"
  $51 = ((($50)) + 8|0); //@line 151 "../../iup_maskparse.c"
  HEAP32[$51>>2] = $45; //@line 151 "../../iup_maskparse.c"
 }
 $52 = $4; //@line 153 "../../iup_maskparse.c"
 $53 = $1; //@line 153 "../../iup_maskparse.c"
 $54 = ((($53)) + 16|0); //@line 153 "../../iup_maskparse.c"
 $55 = HEAP32[$54>>2]|0; //@line 153 "../../iup_maskparse.c"
 $56 = (($55) + ($52<<4)|0); //@line 153 "../../iup_maskparse.c"
 $57 = ((($56)) + 12|0); //@line 153 "../../iup_maskparse.c"
 $58 = HEAP32[$57>>2]|0; //@line 153 "../../iup_maskparse.c"
 $59 = $3; //@line 153 "../../iup_maskparse.c"
 $60 = ($58|0)==($59|0); //@line 153 "../../iup_maskparse.c"
 if ($60) {
  $61 = $5; //@line 154 "../../iup_maskparse.c"
  $62 = $4; //@line 154 "../../iup_maskparse.c"
  $63 = $1; //@line 154 "../../iup_maskparse.c"
  $64 = ((($63)) + 16|0); //@line 154 "../../iup_maskparse.c"
  $65 = HEAP32[$64>>2]|0; //@line 154 "../../iup_maskparse.c"
  $66 = (($65) + ($62<<4)|0); //@line 154 "../../iup_maskparse.c"
  $67 = ((($66)) + 12|0); //@line 154 "../../iup_maskparse.c"
  HEAP32[$67>>2] = $61; //@line 154 "../../iup_maskparse.c"
 }
 $68 = $5; //@line 159 "../../iup_maskparse.c"
 $69 = (($68) - 1)|0; //@line 159 "../../iup_maskparse.c"
 $70 = $1; //@line 159 "../../iup_maskparse.c"
 $71 = ((($70)) + 16|0); //@line 159 "../../iup_maskparse.c"
 $72 = HEAP32[$71>>2]|0; //@line 159 "../../iup_maskparse.c"
 $73 = (($72) + ($69<<4)|0); //@line 159 "../../iup_maskparse.c"
 $74 = ((($73)) + 8|0); //@line 159 "../../iup_maskparse.c"
 $75 = HEAP32[$74>>2]|0; //@line 159 "../../iup_maskparse.c"
 $76 = $5; //@line 159 "../../iup_maskparse.c"
 $77 = ($75|0)==($76|0); //@line 159 "../../iup_maskparse.c"
 if ($77) {
  $78 = $1; //@line 160 "../../iup_maskparse.c"
  $79 = ((($78)) + 4|0); //@line 160 "../../iup_maskparse.c"
  $80 = HEAP32[$79>>2]|0; //@line 160 "../../iup_maskparse.c"
  $81 = $5; //@line 160 "../../iup_maskparse.c"
  $82 = (($81) - 1)|0; //@line 160 "../../iup_maskparse.c"
  $83 = $1; //@line 160 "../../iup_maskparse.c"
  $84 = ((($83)) + 16|0); //@line 160 "../../iup_maskparse.c"
  $85 = HEAP32[$84>>2]|0; //@line 160 "../../iup_maskparse.c"
  $86 = (($85) + ($82<<4)|0); //@line 160 "../../iup_maskparse.c"
  $87 = ((($86)) + 8|0); //@line 160 "../../iup_maskparse.c"
  HEAP32[$87>>2] = $80; //@line 160 "../../iup_maskparse.c"
 }
 $88 = $5; //@line 162 "../../iup_maskparse.c"
 $89 = (($88) - 1)|0; //@line 162 "../../iup_maskparse.c"
 $90 = $1; //@line 162 "../../iup_maskparse.c"
 $91 = ((($90)) + 16|0); //@line 162 "../../iup_maskparse.c"
 $92 = HEAP32[$91>>2]|0; //@line 162 "../../iup_maskparse.c"
 $93 = (($92) + ($89<<4)|0); //@line 162 "../../iup_maskparse.c"
 $94 = ((($93)) + 12|0); //@line 162 "../../iup_maskparse.c"
 $95 = HEAP32[$94>>2]|0; //@line 162 "../../iup_maskparse.c"
 $96 = $5; //@line 162 "../../iup_maskparse.c"
 $97 = ($95|0)==($96|0); //@line 162 "../../iup_maskparse.c"
 if ($97) {
  $98 = $1; //@line 163 "../../iup_maskparse.c"
  $99 = ((($98)) + 4|0); //@line 163 "../../iup_maskparse.c"
  $100 = HEAP32[$99>>2]|0; //@line 163 "../../iup_maskparse.c"
  $101 = $5; //@line 163 "../../iup_maskparse.c"
  $102 = (($101) - 1)|0; //@line 163 "../../iup_maskparse.c"
  $103 = $1; //@line 163 "../../iup_maskparse.c"
  $104 = ((($103)) + 16|0); //@line 163 "../../iup_maskparse.c"
  $105 = HEAP32[$104>>2]|0; //@line 163 "../../iup_maskparse.c"
  $106 = (($105) + ($102<<4)|0); //@line 163 "../../iup_maskparse.c"
  $107 = ((($106)) + 12|0); //@line 163 "../../iup_maskparse.c"
  HEAP32[$107>>2] = $100; //@line 163 "../../iup_maskparse.c"
 }
 $108 = $1; //@line 165 "../../iup_maskparse.c"
 $109 = $5; //@line 165 "../../iup_maskparse.c"
 $110 = $3; //@line 165 "../../iup_maskparse.c"
 $111 = $6; //@line 165 "../../iup_maskparse.c"
 _iMaskParseSetState($108,$109,0,1,$110,$111); //@line 165 "../../iup_maskparse.c"
 $112 = $1; //@line 166 "../../iup_maskparse.c"
 $113 = $1; //@line 166 "../../iup_maskparse.c"
 $114 = ((($113)) + 4|0); //@line 166 "../../iup_maskparse.c"
 $115 = HEAP32[$114>>2]|0; //@line 166 "../../iup_maskparse.c"
 $116 = $1; //@line 166 "../../iup_maskparse.c"
 $117 = ((($116)) + 4|0); //@line 166 "../../iup_maskparse.c"
 $118 = HEAP32[$117>>2]|0; //@line 166 "../../iup_maskparse.c"
 $119 = (($118) + 1)|0; //@line 166 "../../iup_maskparse.c"
 $120 = $1; //@line 167 "../../iup_maskparse.c"
 $121 = ((($120)) + 4|0); //@line 167 "../../iup_maskparse.c"
 $122 = HEAP32[$121>>2]|0; //@line 167 "../../iup_maskparse.c"
 $123 = (($122) + 1)|0; //@line 167 "../../iup_maskparse.c"
 _iMaskParseSetState($112,$115,0,1,$119,$123); //@line 166 "../../iup_maskparse.c"
 $124 = $1; //@line 169 "../../iup_maskparse.c"
 _iMaskParseNewState($124); //@line 169 "../../iup_maskparse.c"
 $125 = $2; //@line 171 "../../iup_maskparse.c"
 STACKTOP = sp;return ($125|0); //@line 171 "../../iup_maskparse.c"
}
function _iMaskParseSetState($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $8; //@line 545 "../../iup_maskparse.c"
 $13 = $7; //@line 545 "../../iup_maskparse.c"
 $14 = $6; //@line 545 "../../iup_maskparse.c"
 $15 = ((($14)) + 16|0); //@line 545 "../../iup_maskparse.c"
 $16 = HEAP32[$15>>2]|0; //@line 545 "../../iup_maskparse.c"
 $17 = (($16) + ($13<<4)|0); //@line 545 "../../iup_maskparse.c"
 HEAP8[$17>>0] = $12; //@line 545 "../../iup_maskparse.c"
 $18 = $9; //@line 546 "../../iup_maskparse.c"
 $19 = $18 << 24 >> 24; //@line 546 "../../iup_maskparse.c"
 $20 = $7; //@line 546 "../../iup_maskparse.c"
 $21 = $6; //@line 546 "../../iup_maskparse.c"
 $22 = ((($21)) + 16|0); //@line 546 "../../iup_maskparse.c"
 $23 = HEAP32[$22>>2]|0; //@line 546 "../../iup_maskparse.c"
 $24 = (($23) + ($20<<4)|0); //@line 546 "../../iup_maskparse.c"
 $25 = ((($24)) + 4|0); //@line 546 "../../iup_maskparse.c"
 HEAP32[$25>>2] = $19; //@line 546 "../../iup_maskparse.c"
 $26 = $10; //@line 547 "../../iup_maskparse.c"
 $27 = $7; //@line 547 "../../iup_maskparse.c"
 $28 = $6; //@line 547 "../../iup_maskparse.c"
 $29 = ((($28)) + 16|0); //@line 547 "../../iup_maskparse.c"
 $30 = HEAP32[$29>>2]|0; //@line 547 "../../iup_maskparse.c"
 $31 = (($30) + ($27<<4)|0); //@line 547 "../../iup_maskparse.c"
 $32 = ((($31)) + 8|0); //@line 547 "../../iup_maskparse.c"
 HEAP32[$32>>2] = $26; //@line 547 "../../iup_maskparse.c"
 $33 = $11; //@line 548 "../../iup_maskparse.c"
 $34 = $7; //@line 548 "../../iup_maskparse.c"
 $35 = $6; //@line 548 "../../iup_maskparse.c"
 $36 = ((($35)) + 16|0); //@line 548 "../../iup_maskparse.c"
 $37 = HEAP32[$36>>2]|0; //@line 548 "../../iup_maskparse.c"
 $38 = (($37) + ($34<<4)|0); //@line 548 "../../iup_maskparse.c"
 $39 = ((($38)) + 12|0); //@line 548 "../../iup_maskparse.c"
 HEAP32[$39>>2] = $33; //@line 548 "../../iup_maskparse.c"
 STACKTOP = sp;return; //@line 549 "../../iup_maskparse.c"
}
function _iMaskParseTerm($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 178 "../../iup_maskparse.c"
 $4 = (_iMaskParseFactor($3)|0); //@line 178 "../../iup_maskparse.c"
 $2 = $4; //@line 178 "../../iup_maskparse.c"
 $5 = $1; //@line 180 "../../iup_maskparse.c"
 $6 = ((($5)) + 8|0); //@line 180 "../../iup_maskparse.c"
 $7 = HEAP32[$6>>2]|0; //@line 180 "../../iup_maskparse.c"
 $8 = $1; //@line 180 "../../iup_maskparse.c"
 $9 = HEAP32[$8>>2]|0; //@line 180 "../../iup_maskparse.c"
 $10 = (($9) + ($7)|0); //@line 180 "../../iup_maskparse.c"
 $11 = HEAP8[$10>>0]|0; //@line 180 "../../iup_maskparse.c"
 $12 = $11 << 24 >> 24; //@line 180 "../../iup_maskparse.c"
 $13 = 14638; //@line 180 "../../iup_maskparse.c"
 $14 = HEAP8[$13>>0]|0; //@line 180 "../../iup_maskparse.c"
 $15 = $14 << 24 >> 24; //@line 180 "../../iup_maskparse.c"
 $16 = ($12|0)==($15|0); //@line 180 "../../iup_maskparse.c"
 do {
  if ($16) {
   label = 15;
  } else {
   $17 = $1; //@line 181 "../../iup_maskparse.c"
   $18 = ((($17)) + 8|0); //@line 181 "../../iup_maskparse.c"
   $19 = HEAP32[$18>>2]|0; //@line 181 "../../iup_maskparse.c"
   $20 = $1; //@line 181 "../../iup_maskparse.c"
   $21 = HEAP32[$20>>2]|0; //@line 181 "../../iup_maskparse.c"
   $22 = (($21) + ($19)|0); //@line 181 "../../iup_maskparse.c"
   $23 = HEAP8[$22>>0]|0; //@line 181 "../../iup_maskparse.c"
   $24 = $23 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
   $25 = ($24|0)!=(0); //@line 181 "../../iup_maskparse.c"
   if ($25) {
    $26 = $1; //@line 181 "../../iup_maskparse.c"
    $27 = ((($26)) + 8|0); //@line 181 "../../iup_maskparse.c"
    $28 = HEAP32[$27>>2]|0; //@line 181 "../../iup_maskparse.c"
    $29 = $1; //@line 181 "../../iup_maskparse.c"
    $30 = HEAP32[$29>>2]|0; //@line 181 "../../iup_maskparse.c"
    $31 = (($30) + ($28)|0); //@line 181 "../../iup_maskparse.c"
    $32 = HEAP8[$31>>0]|0; //@line 181 "../../iup_maskparse.c"
    $33 = $32 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
    $34 = HEAP8[14635]|0; //@line 181 "../../iup_maskparse.c"
    $35 = $34 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
    $36 = ($33|0)!=($35|0); //@line 181 "../../iup_maskparse.c"
    if ($36) {
     $37 = $1; //@line 181 "../../iup_maskparse.c"
     $38 = ((($37)) + 8|0); //@line 181 "../../iup_maskparse.c"
     $39 = HEAP32[$38>>2]|0; //@line 181 "../../iup_maskparse.c"
     $40 = $1; //@line 181 "../../iup_maskparse.c"
     $41 = HEAP32[$40>>2]|0; //@line 181 "../../iup_maskparse.c"
     $42 = (($41) + ($39)|0); //@line 181 "../../iup_maskparse.c"
     $43 = HEAP8[$42>>0]|0; //@line 181 "../../iup_maskparse.c"
     $44 = $43 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
     $45 = 14638; //@line 181 "../../iup_maskparse.c"
     $46 = HEAP8[$45>>0]|0; //@line 181 "../../iup_maskparse.c"
     $47 = $46 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
     $48 = ($44|0)!=($47|0); //@line 181 "../../iup_maskparse.c"
     if ($48) {
      $49 = $1; //@line 181 "../../iup_maskparse.c"
      $50 = ((($49)) + 8|0); //@line 181 "../../iup_maskparse.c"
      $51 = HEAP32[$50>>2]|0; //@line 181 "../../iup_maskparse.c"
      $52 = $1; //@line 181 "../../iup_maskparse.c"
      $53 = HEAP32[$52>>2]|0; //@line 181 "../../iup_maskparse.c"
      $54 = (($53) + ($51)|0); //@line 181 "../../iup_maskparse.c"
      $55 = HEAP8[$54>>0]|0; //@line 181 "../../iup_maskparse.c"
      $56 = $55 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
      $57 = 14639; //@line 181 "../../iup_maskparse.c"
      $58 = HEAP8[$57>>0]|0; //@line 181 "../../iup_maskparse.c"
      $59 = $58 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
      $60 = ($56|0)!=($59|0); //@line 181 "../../iup_maskparse.c"
      if ($60) {
       $61 = $1; //@line 181 "../../iup_maskparse.c"
       $62 = ((($61)) + 8|0); //@line 181 "../../iup_maskparse.c"
       $63 = HEAP32[$62>>2]|0; //@line 181 "../../iup_maskparse.c"
       $64 = $1; //@line 181 "../../iup_maskparse.c"
       $65 = HEAP32[$64>>2]|0; //@line 181 "../../iup_maskparse.c"
       $66 = (($65) + ($63)|0); //@line 181 "../../iup_maskparse.c"
       $67 = HEAP8[$66>>0]|0; //@line 181 "../../iup_maskparse.c"
       $68 = $67 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
       $69 = 14636; //@line 181 "../../iup_maskparse.c"
       $70 = HEAP8[$69>>0]|0; //@line 181 "../../iup_maskparse.c"
       $71 = $70 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
       $72 = ($68|0)!=($71|0); //@line 181 "../../iup_maskparse.c"
       if ($72) {
        $73 = $1; //@line 181 "../../iup_maskparse.c"
        $74 = ((($73)) + 8|0); //@line 181 "../../iup_maskparse.c"
        $75 = HEAP32[$74>>2]|0; //@line 181 "../../iup_maskparse.c"
        $76 = $1; //@line 181 "../../iup_maskparse.c"
        $77 = HEAP32[$76>>2]|0; //@line 181 "../../iup_maskparse.c"
        $78 = (($77) + ($75)|0); //@line 181 "../../iup_maskparse.c"
        $79 = HEAP8[$78>>0]|0; //@line 181 "../../iup_maskparse.c"
        $80 = $79 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
        $81 = 14640; //@line 181 "../../iup_maskparse.c"
        $82 = HEAP8[$81>>0]|0; //@line 181 "../../iup_maskparse.c"
        $83 = $82 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
        $84 = ($80|0)!=($83|0); //@line 181 "../../iup_maskparse.c"
        if ($84) {
         $85 = $1; //@line 181 "../../iup_maskparse.c"
         $86 = ((($85)) + 8|0); //@line 181 "../../iup_maskparse.c"
         $87 = HEAP32[$86>>2]|0; //@line 181 "../../iup_maskparse.c"
         $88 = $1; //@line 181 "../../iup_maskparse.c"
         $89 = HEAP32[$88>>2]|0; //@line 181 "../../iup_maskparse.c"
         $90 = (($89) + ($87)|0); //@line 181 "../../iup_maskparse.c"
         $91 = HEAP8[$90>>0]|0; //@line 181 "../../iup_maskparse.c"
         $92 = $91 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
         $93 = 14641; //@line 181 "../../iup_maskparse.c"
         $94 = HEAP8[$93>>0]|0; //@line 181 "../../iup_maskparse.c"
         $95 = $94 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
         $96 = ($92|0)!=($95|0); //@line 181 "../../iup_maskparse.c"
         if ($96) {
          $97 = $1; //@line 181 "../../iup_maskparse.c"
          $98 = ((($97)) + 8|0); //@line 181 "../../iup_maskparse.c"
          $99 = HEAP32[$98>>2]|0; //@line 181 "../../iup_maskparse.c"
          $100 = $1; //@line 181 "../../iup_maskparse.c"
          $101 = HEAP32[$100>>2]|0; //@line 181 "../../iup_maskparse.c"
          $102 = (($101) + ($99)|0); //@line 181 "../../iup_maskparse.c"
          $103 = HEAP8[$102>>0]|0; //@line 181 "../../iup_maskparse.c"
          $104 = $103 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
          $105 = 14649; //@line 181 "../../iup_maskparse.c"
          $106 = HEAP8[$105>>0]|0; //@line 181 "../../iup_maskparse.c"
          $107 = $106 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
          $108 = ($104|0)!=($107|0); //@line 181 "../../iup_maskparse.c"
          if ($108) {
           $109 = $1; //@line 181 "../../iup_maskparse.c"
           $110 = ((($109)) + 8|0); //@line 181 "../../iup_maskparse.c"
           $111 = HEAP32[$110>>2]|0; //@line 181 "../../iup_maskparse.c"
           $112 = $1; //@line 181 "../../iup_maskparse.c"
           $113 = HEAP32[$112>>2]|0; //@line 181 "../../iup_maskparse.c"
           $114 = (($113) + ($111)|0); //@line 181 "../../iup_maskparse.c"
           $115 = HEAP8[$114>>0]|0; //@line 181 "../../iup_maskparse.c"
           $116 = $115 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
           $117 = 14650; //@line 181 "../../iup_maskparse.c"
           $118 = HEAP8[$117>>0]|0; //@line 181 "../../iup_maskparse.c"
           $119 = $118 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
           $120 = ($116|0)!=($119|0); //@line 181 "../../iup_maskparse.c"
           if ($120) {
            $121 = $1; //@line 181 "../../iup_maskparse.c"
            $122 = ((($121)) + 8|0); //@line 181 "../../iup_maskparse.c"
            $123 = HEAP32[$122>>2]|0; //@line 181 "../../iup_maskparse.c"
            $124 = $1; //@line 181 "../../iup_maskparse.c"
            $125 = HEAP32[$124>>2]|0; //@line 181 "../../iup_maskparse.c"
            $126 = (($125) + ($123)|0); //@line 181 "../../iup_maskparse.c"
            $127 = HEAP8[$126>>0]|0; //@line 181 "../../iup_maskparse.c"
            $128 = $127 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
            $129 = 14637; //@line 181 "../../iup_maskparse.c"
            $130 = HEAP8[$129>>0]|0; //@line 181 "../../iup_maskparse.c"
            $131 = $130 << 24 >> 24; //@line 181 "../../iup_maskparse.c"
            $132 = ($128|0)!=($131|0); //@line 181 "../../iup_maskparse.c"
            if ($132) {
             label = 15;
             break;
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
   $133 = $1; //@line 182 "../../iup_maskparse.c"
   $134 = ((($133)) + 8|0); //@line 182 "../../iup_maskparse.c"
   $135 = HEAP32[$134>>2]|0; //@line 182 "../../iup_maskparse.c"
   $136 = $1; //@line 182 "../../iup_maskparse.c"
   $137 = HEAP32[$136>>2]|0; //@line 182 "../../iup_maskparse.c"
   $138 = (($137) + ($135)|0); //@line 182 "../../iup_maskparse.c"
   $139 = HEAP8[$138>>0]|0; //@line 182 "../../iup_maskparse.c"
   $140 = $139 << 24 >> 24; //@line 182 "../../iup_maskparse.c"
   $141 = 14640; //@line 182 "../../iup_maskparse.c"
   $142 = HEAP8[$141>>0]|0; //@line 182 "../../iup_maskparse.c"
   $143 = $142 << 24 >> 24; //@line 182 "../../iup_maskparse.c"
   $144 = ($140|0)==($143|0); //@line 182 "../../iup_maskparse.c"
   if ($144) {
    label = 15;
   } else {
    $145 = $1; //@line 183 "../../iup_maskparse.c"
    $146 = ((($145)) + 8|0); //@line 183 "../../iup_maskparse.c"
    $147 = HEAP32[$146>>2]|0; //@line 183 "../../iup_maskparse.c"
    $148 = $1; //@line 183 "../../iup_maskparse.c"
    $149 = HEAP32[$148>>2]|0; //@line 183 "../../iup_maskparse.c"
    $150 = (($149) + ($147)|0); //@line 183 "../../iup_maskparse.c"
    $151 = HEAP8[$150>>0]|0; //@line 183 "../../iup_maskparse.c"
    $152 = $151 << 24 >> 24; //@line 183 "../../iup_maskparse.c"
    $153 = 14649; //@line 183 "../../iup_maskparse.c"
    $154 = HEAP8[$153>>0]|0; //@line 183 "../../iup_maskparse.c"
    $155 = $154 << 24 >> 24; //@line 183 "../../iup_maskparse.c"
    $156 = ($152|0)==($155|0); //@line 183 "../../iup_maskparse.c"
    if ($156) {
     label = 15;
    } else {
     $157 = $1; //@line 184 "../../iup_maskparse.c"
     $158 = ((($157)) + 8|0); //@line 184 "../../iup_maskparse.c"
     $159 = HEAP32[$158>>2]|0; //@line 184 "../../iup_maskparse.c"
     $160 = $1; //@line 184 "../../iup_maskparse.c"
     $161 = HEAP32[$160>>2]|0; //@line 184 "../../iup_maskparse.c"
     $162 = (($161) + ($159)|0); //@line 184 "../../iup_maskparse.c"
     $163 = HEAP8[$162>>0]|0; //@line 184 "../../iup_maskparse.c"
     $164 = $163 << 24 >> 24; //@line 184 "../../iup_maskparse.c"
     $165 = 14651; //@line 184 "../../iup_maskparse.c"
     $166 = HEAP8[$165>>0]|0; //@line 184 "../../iup_maskparse.c"
     $167 = $166 << 24 >> 24; //@line 184 "../../iup_maskparse.c"
     $168 = ($164|0)==($167|0); //@line 184 "../../iup_maskparse.c"
     if ($168) {
      label = 15;
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 15) {
  $169 = $1; //@line 185 "../../iup_maskparse.c"
  (_iMaskParseTerm($169)|0); //@line 185 "../../iup_maskparse.c"
 }
 $170 = $1; //@line 187 "../../iup_maskparse.c"
 $171 = ((($170)) + 8|0); //@line 187 "../../iup_maskparse.c"
 $172 = HEAP32[$171>>2]|0; //@line 187 "../../iup_maskparse.c"
 $173 = $1; //@line 187 "../../iup_maskparse.c"
 $174 = HEAP32[$173>>2]|0; //@line 187 "../../iup_maskparse.c"
 $175 = (($174) + ($172)|0); //@line 187 "../../iup_maskparse.c"
 $176 = HEAP8[$175>>0]|0; //@line 187 "../../iup_maskparse.c"
 $177 = $176 << 24 >> 24; //@line 187 "../../iup_maskparse.c"
 $178 = HEAP8[14635]|0; //@line 187 "../../iup_maskparse.c"
 $179 = $178 << 24 >> 24; //@line 187 "../../iup_maskparse.c"
 $180 = ($177|0)==($179|0); //@line 187 "../../iup_maskparse.c"
 if ($180) {
  $215 = $2; //@line 193 "../../iup_maskparse.c"
  STACKTOP = sp;return ($215|0); //@line 193 "../../iup_maskparse.c"
 }
 $181 = $1; //@line 188 "../../iup_maskparse.c"
 $182 = ((($181)) + 8|0); //@line 188 "../../iup_maskparse.c"
 $183 = HEAP32[$182>>2]|0; //@line 188 "../../iup_maskparse.c"
 $184 = $1; //@line 188 "../../iup_maskparse.c"
 $185 = HEAP32[$184>>2]|0; //@line 188 "../../iup_maskparse.c"
 $186 = (($185) + ($183)|0); //@line 188 "../../iup_maskparse.c"
 $187 = HEAP8[$186>>0]|0; //@line 188 "../../iup_maskparse.c"
 $188 = $187 << 24 >> 24; //@line 188 "../../iup_maskparse.c"
 $189 = 14639; //@line 188 "../../iup_maskparse.c"
 $190 = HEAP8[$189>>0]|0; //@line 188 "../../iup_maskparse.c"
 $191 = $190 << 24 >> 24; //@line 188 "../../iup_maskparse.c"
 $192 = ($188|0)==($191|0); //@line 188 "../../iup_maskparse.c"
 if ($192) {
  $215 = $2; //@line 193 "../../iup_maskparse.c"
  STACKTOP = sp;return ($215|0); //@line 193 "../../iup_maskparse.c"
 }
 $193 = $1; //@line 189 "../../iup_maskparse.c"
 $194 = ((($193)) + 8|0); //@line 189 "../../iup_maskparse.c"
 $195 = HEAP32[$194>>2]|0; //@line 189 "../../iup_maskparse.c"
 $196 = $1; //@line 189 "../../iup_maskparse.c"
 $197 = HEAP32[$196>>2]|0; //@line 189 "../../iup_maskparse.c"
 $198 = (($197) + ($195)|0); //@line 189 "../../iup_maskparse.c"
 $199 = HEAP8[$198>>0]|0; //@line 189 "../../iup_maskparse.c"
 $200 = $199 << 24 >> 24; //@line 189 "../../iup_maskparse.c"
 $201 = ($200|0)==(0); //@line 189 "../../iup_maskparse.c"
 if ($201) {
  $215 = $2; //@line 193 "../../iup_maskparse.c"
  STACKTOP = sp;return ($215|0); //@line 193 "../../iup_maskparse.c"
 }
 $202 = $1; //@line 190 "../../iup_maskparse.c"
 $203 = ((($202)) + 8|0); //@line 190 "../../iup_maskparse.c"
 $204 = HEAP32[$203>>2]|0; //@line 190 "../../iup_maskparse.c"
 $205 = $1; //@line 190 "../../iup_maskparse.c"
 $206 = HEAP32[$205>>2]|0; //@line 190 "../../iup_maskparse.c"
 $207 = (($206) + ($204)|0); //@line 190 "../../iup_maskparse.c"
 $208 = HEAP8[$207>>0]|0; //@line 190 "../../iup_maskparse.c"
 $209 = $208 << 24 >> 24; //@line 190 "../../iup_maskparse.c"
 $210 = 14650; //@line 190 "../../iup_maskparse.c"
 $211 = HEAP8[$210>>0]|0; //@line 190 "../../iup_maskparse.c"
 $212 = $211 << 24 >> 24; //@line 190 "../../iup_maskparse.c"
 $213 = ($209|0)==($212|0); //@line 190 "../../iup_maskparse.c"
 if ($213) {
  $215 = $2; //@line 193 "../../iup_maskparse.c"
  STACKTOP = sp;return ($215|0); //@line 193 "../../iup_maskparse.c"
 }
 $214 = $1; //@line 191 "../../iup_maskparse.c"
 _iMaskParseError($214); //@line 191 "../../iup_maskparse.c"
 $215 = $2; //@line 193 "../../iup_maskparse.c"
 STACKTOP = sp;return ($215|0); //@line 193 "../../iup_maskparse.c"
}
function _iMaskParseNewState($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 532 "../../iup_maskparse.c"
 $4 = ((($3)) + 4|0); //@line 532 "../../iup_maskparse.c"
 $5 = HEAP32[$4>>2]|0; //@line 532 "../../iup_maskparse.c"
 $6 = $1; //@line 532 "../../iup_maskparse.c"
 $7 = ((($6)) + 12|0); //@line 532 "../../iup_maskparse.c"
 $8 = HEAP32[$7>>2]|0; //@line 532 "../../iup_maskparse.c"
 $9 = (($8) - 1)|0; //@line 532 "../../iup_maskparse.c"
 $10 = ($5|0)>=($9|0); //@line 532 "../../iup_maskparse.c"
 if (!($10)) {
  $32 = $1; //@line 540 "../../iup_maskparse.c"
  $33 = ((($32)) + 4|0); //@line 540 "../../iup_maskparse.c"
  $34 = HEAP32[$33>>2]|0; //@line 540 "../../iup_maskparse.c"
  $35 = (($34) + 1)|0; //@line 540 "../../iup_maskparse.c"
  HEAP32[$33>>2] = $35; //@line 540 "../../iup_maskparse.c"
  STACKTOP = sp;return; //@line 541 "../../iup_maskparse.c"
 }
 $11 = $1; //@line 534 "../../iup_maskparse.c"
 $12 = ((($11)) + 16|0); //@line 534 "../../iup_maskparse.c"
 $13 = HEAP32[$12>>2]|0; //@line 534 "../../iup_maskparse.c"
 $14 = $1; //@line 534 "../../iup_maskparse.c"
 $15 = ((($14)) + 12|0); //@line 534 "../../iup_maskparse.c"
 $16 = HEAP32[$15>>2]|0; //@line 534 "../../iup_maskparse.c"
 $17 = (($16) + 30)|0; //@line 534 "../../iup_maskparse.c"
 $18 = $17<<4; //@line 534 "../../iup_maskparse.c"
 $19 = (_realloc($13,$18)|0); //@line 534 "../../iup_maskparse.c"
 $2 = $19; //@line 534 "../../iup_maskparse.c"
 $20 = $2; //@line 535 "../../iup_maskparse.c"
 $21 = $1; //@line 535 "../../iup_maskparse.c"
 $22 = ((($21)) + 12|0); //@line 535 "../../iup_maskparse.c"
 $23 = HEAP32[$22>>2]|0; //@line 535 "../../iup_maskparse.c"
 $24 = (($20) + ($23<<4)|0); //@line 535 "../../iup_maskparse.c"
 _memset(($24|0),0,480)|0; //@line 535 "../../iup_maskparse.c"
 $25 = $2; //@line 536 "../../iup_maskparse.c"
 $26 = $1; //@line 536 "../../iup_maskparse.c"
 $27 = ((($26)) + 16|0); //@line 536 "../../iup_maskparse.c"
 HEAP32[$27>>2] = $25; //@line 536 "../../iup_maskparse.c"
 $28 = $1; //@line 537 "../../iup_maskparse.c"
 $29 = ((($28)) + 12|0); //@line 537 "../../iup_maskparse.c"
 $30 = HEAP32[$29>>2]|0; //@line 537 "../../iup_maskparse.c"
 $31 = (($30) + 30)|0; //@line 537 "../../iup_maskparse.c"
 HEAP32[$29>>2] = $31; //@line 537 "../../iup_maskparse.c"
 $32 = $1; //@line 540 "../../iup_maskparse.c"
 $33 = ((($32)) + 4|0); //@line 540 "../../iup_maskparse.c"
 $34 = HEAP32[$33>>2]|0; //@line 540 "../../iup_maskparse.c"
 $35 = (($34) + 1)|0; //@line 540 "../../iup_maskparse.c"
 HEAP32[$33>>2] = $35; //@line 540 "../../iup_maskparse.c"
 STACKTOP = sp;return; //@line 541 "../../iup_maskparse.c"
}
function _iMaskParseFactor($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0;
 var $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0;
 var $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0;
 var $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0;
 var $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0;
 var $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0;
 var $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0;
 var $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0;
 var $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0;
 var $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0;
 var $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0;
 var $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0;
 var $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0;
 var $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0;
 var $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0;
 var $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0;
 var $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0;
 var $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0;
 var $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0;
 var $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0;
 var $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0;
 var $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0;
 var $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0;
 var $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0;
 var $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0;
 var $997 = 0, $998 = 0, $999 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $10 = sp + 20|0;
 $1 = $0;
 $4 = 0; //@line 198 "../../iup_maskparse.c"
 $11 = $1; //@line 200 "../../iup_maskparse.c"
 $12 = ((($11)) + 4|0); //@line 200 "../../iup_maskparse.c"
 $13 = HEAP32[$12>>2]|0; //@line 200 "../../iup_maskparse.c"
 $3 = $13; //@line 200 "../../iup_maskparse.c"
 $14 = $1; //@line 202 "../../iup_maskparse.c"
 $15 = ((($14)) + 8|0); //@line 202 "../../iup_maskparse.c"
 $16 = HEAP32[$15>>2]|0; //@line 202 "../../iup_maskparse.c"
 $17 = $1; //@line 202 "../../iup_maskparse.c"
 $18 = HEAP32[$17>>2]|0; //@line 202 "../../iup_maskparse.c"
 $19 = (($18) + ($16)|0); //@line 202 "../../iup_maskparse.c"
 $20 = HEAP8[$19>>0]|0; //@line 202 "../../iup_maskparse.c"
 $21 = $20 << 24 >> 24; //@line 202 "../../iup_maskparse.c"
 $22 = 14638; //@line 202 "../../iup_maskparse.c"
 $23 = HEAP8[$22>>0]|0; //@line 202 "../../iup_maskparse.c"
 $24 = $23 << 24 >> 24; //@line 202 "../../iup_maskparse.c"
 $25 = ($21|0)==($24|0); //@line 202 "../../iup_maskparse.c"
 $26 = $1; //@line 204 "../../iup_maskparse.c"
 $27 = ((($26)) + 8|0); //@line 204 "../../iup_maskparse.c"
 $28 = HEAP32[$27>>2]|0; //@line 204 "../../iup_maskparse.c"
 do {
  if ($25) {
   $29 = (($28) + 1)|0; //@line 204 "../../iup_maskparse.c"
   HEAP32[$27>>2] = $29; //@line 204 "../../iup_maskparse.c"
   $30 = $1; //@line 205 "../../iup_maskparse.c"
   $31 = (_iMaskParseExpression($30)|0); //@line 205 "../../iup_maskparse.c"
   $4 = $31; //@line 205 "../../iup_maskparse.c"
   $32 = $1; //@line 207 "../../iup_maskparse.c"
   $33 = ((($32)) + 8|0); //@line 207 "../../iup_maskparse.c"
   $34 = HEAP32[$33>>2]|0; //@line 207 "../../iup_maskparse.c"
   $35 = $1; //@line 207 "../../iup_maskparse.c"
   $36 = HEAP32[$35>>2]|0; //@line 207 "../../iup_maskparse.c"
   $37 = (($36) + ($34)|0); //@line 207 "../../iup_maskparse.c"
   $38 = HEAP8[$37>>0]|0; //@line 207 "../../iup_maskparse.c"
   $39 = $38 << 24 >> 24; //@line 207 "../../iup_maskparse.c"
   $40 = 14639; //@line 207 "../../iup_maskparse.c"
   $41 = HEAP8[$40>>0]|0; //@line 207 "../../iup_maskparse.c"
   $42 = $41 << 24 >> 24; //@line 207 "../../iup_maskparse.c"
   $43 = ($39|0)==($42|0); //@line 207 "../../iup_maskparse.c"
   $44 = $1; //@line 208 "../../iup_maskparse.c"
   if ($43) {
    $45 = ((($44)) + 8|0); //@line 208 "../../iup_maskparse.c"
    $46 = HEAP32[$45>>2]|0; //@line 208 "../../iup_maskparse.c"
    $47 = (($46) + 1)|0; //@line 208 "../../iup_maskparse.c"
    HEAP32[$45>>2] = $47; //@line 208 "../../iup_maskparse.c"
    break;
   } else {
    _iMaskParseError($44); //@line 210 "../../iup_maskparse.c"
    break;
   }
  } else {
   $48 = $1; //@line 213 "../../iup_maskparse.c"
   $49 = HEAP32[$48>>2]|0; //@line 213 "../../iup_maskparse.c"
   $50 = (($49) + ($28)|0); //@line 213 "../../iup_maskparse.c"
   $51 = HEAP8[$50>>0]|0; //@line 213 "../../iup_maskparse.c"
   $52 = $51 << 24 >> 24; //@line 213 "../../iup_maskparse.c"
   $53 = 14649; //@line 213 "../../iup_maskparse.c"
   $54 = HEAP8[$53>>0]|0; //@line 213 "../../iup_maskparse.c"
   $55 = $54 << 24 >> 24; //@line 213 "../../iup_maskparse.c"
   $56 = ($52|0)==($55|0); //@line 213 "../../iup_maskparse.c"
   $57 = $1; //@line 215 "../../iup_maskparse.c"
   if ($56) {
    $58 = ((($57)) + 16|0); //@line 215 "../../iup_maskparse.c"
    $59 = HEAP32[$58>>2]|0; //@line 215 "../../iup_maskparse.c"
    HEAP8[$59>>0] = 100; //@line 215 "../../iup_maskparse.c"
    $60 = $1; //@line 216 "../../iup_maskparse.c"
    $61 = $1; //@line 216 "../../iup_maskparse.c"
    $62 = ((($61)) + 4|0); //@line 216 "../../iup_maskparse.c"
    $63 = HEAP32[$62>>2]|0; //@line 216 "../../iup_maskparse.c"
    $64 = $1; //@line 216 "../../iup_maskparse.c"
    $65 = ((($64)) + 82|0); //@line 216 "../../iup_maskparse.c"
    $66 = HEAP8[$65>>0]|0; //@line 216 "../../iup_maskparse.c"
    $67 = $1; //@line 217 "../../iup_maskparse.c"
    $68 = ((($67)) + 4|0); //@line 217 "../../iup_maskparse.c"
    $69 = HEAP32[$68>>2]|0; //@line 217 "../../iup_maskparse.c"
    $70 = (($69) + 1)|0; //@line 217 "../../iup_maskparse.c"
    $71 = $1; //@line 217 "../../iup_maskparse.c"
    $72 = ((($71)) + 4|0); //@line 217 "../../iup_maskparse.c"
    $73 = HEAP32[$72>>2]|0; //@line 217 "../../iup_maskparse.c"
    $74 = (($73) + 1)|0; //@line 217 "../../iup_maskparse.c"
    _iMaskParseSetState($60,$63,$66,71,$70,$74); //@line 216 "../../iup_maskparse.c"
    $75 = $1; //@line 218 "../../iup_maskparse.c"
    $76 = ((($75)) + 4|0); //@line 218 "../../iup_maskparse.c"
    $77 = HEAP32[$76>>2]|0; //@line 218 "../../iup_maskparse.c"
    $4 = $77; //@line 218 "../../iup_maskparse.c"
    $78 = $1; //@line 219 "../../iup_maskparse.c"
    _iMaskParseNewState($78); //@line 219 "../../iup_maskparse.c"
    $79 = $1; //@line 220 "../../iup_maskparse.c"
    $80 = ((($79)) + 82|0); //@line 220 "../../iup_maskparse.c"
    $81 = HEAP8[$80>>0]|0; //@line 220 "../../iup_maskparse.c"
    $82 = (($81) + 1)<<24>>24; //@line 220 "../../iup_maskparse.c"
    HEAP8[$80>>0] = $82; //@line 220 "../../iup_maskparse.c"
    $83 = $81 << 24 >> 24; //@line 220 "../../iup_maskparse.c"
    $84 = $1; //@line 220 "../../iup_maskparse.c"
    $85 = ((($84)) + 80|0); //@line 220 "../../iup_maskparse.c"
    $86 = HEAP16[$85>>1]|0; //@line 220 "../../iup_maskparse.c"
    $87 = (($86) + 1)<<16>>16; //@line 220 "../../iup_maskparse.c"
    HEAP16[$85>>1] = $87; //@line 220 "../../iup_maskparse.c"
    $88 = $87 << 16 >> 16; //@line 220 "../../iup_maskparse.c"
    $89 = $1; //@line 220 "../../iup_maskparse.c"
    $90 = ((($89)) + 20|0); //@line 220 "../../iup_maskparse.c"
    $91 = (($90) + ($88<<1)|0); //@line 220 "../../iup_maskparse.c"
    HEAP16[$91>>1] = $83; //@line 220 "../../iup_maskparse.c"
    $92 = $1; //@line 221 "../../iup_maskparse.c"
    $93 = ((($92)) + 8|0); //@line 221 "../../iup_maskparse.c"
    $94 = HEAP32[$93>>2]|0; //@line 221 "../../iup_maskparse.c"
    $95 = (($94) + 1)|0; //@line 221 "../../iup_maskparse.c"
    HEAP32[$93>>2] = $95; //@line 221 "../../iup_maskparse.c"
    $96 = $1; //@line 223 "../../iup_maskparse.c"
    (_iMaskParseExpression($96)|0); //@line 223 "../../iup_maskparse.c"
    $97 = $1; //@line 225 "../../iup_maskparse.c"
    $98 = ((($97)) + 8|0); //@line 225 "../../iup_maskparse.c"
    $99 = HEAP32[$98>>2]|0; //@line 225 "../../iup_maskparse.c"
    $100 = $1; //@line 225 "../../iup_maskparse.c"
    $101 = HEAP32[$100>>2]|0; //@line 225 "../../iup_maskparse.c"
    $102 = (($101) + ($99)|0); //@line 225 "../../iup_maskparse.c"
    $103 = HEAP8[$102>>0]|0; //@line 225 "../../iup_maskparse.c"
    $104 = $103 << 24 >> 24; //@line 225 "../../iup_maskparse.c"
    $105 = 14650; //@line 225 "../../iup_maskparse.c"
    $106 = HEAP8[$105>>0]|0; //@line 225 "../../iup_maskparse.c"
    $107 = $106 << 24 >> 24; //@line 225 "../../iup_maskparse.c"
    $108 = ($104|0)==($107|0); //@line 225 "../../iup_maskparse.c"
    $109 = $1; //@line 227 "../../iup_maskparse.c"
    if ($108) {
     $110 = $1; //@line 227 "../../iup_maskparse.c"
     $111 = ((($110)) + 4|0); //@line 227 "../../iup_maskparse.c"
     $112 = HEAP32[$111>>2]|0; //@line 227 "../../iup_maskparse.c"
     $113 = $1; //@line 227 "../../iup_maskparse.c"
     $114 = ((($113)) + 80|0); //@line 227 "../../iup_maskparse.c"
     $115 = HEAP16[$114>>1]|0; //@line 227 "../../iup_maskparse.c"
     $116 = (($115) + -1)<<16>>16; //@line 227 "../../iup_maskparse.c"
     HEAP16[$114>>1] = $116; //@line 227 "../../iup_maskparse.c"
     $117 = $115 << 16 >> 16; //@line 227 "../../iup_maskparse.c"
     $118 = $1; //@line 227 "../../iup_maskparse.c"
     $119 = ((($118)) + 20|0); //@line 227 "../../iup_maskparse.c"
     $120 = (($119) + ($117<<1)|0); //@line 227 "../../iup_maskparse.c"
     $121 = HEAP16[$120>>1]|0; //@line 227 "../../iup_maskparse.c"
     $122 = $121&255; //@line 227 "../../iup_maskparse.c"
     $123 = $1; //@line 228 "../../iup_maskparse.c"
     $124 = ((($123)) + 4|0); //@line 228 "../../iup_maskparse.c"
     $125 = HEAP32[$124>>2]|0; //@line 228 "../../iup_maskparse.c"
     $126 = (($125) + 1)|0; //@line 228 "../../iup_maskparse.c"
     $127 = $1; //@line 228 "../../iup_maskparse.c"
     $128 = ((($127)) + 4|0); //@line 228 "../../iup_maskparse.c"
     $129 = HEAP32[$128>>2]|0; //@line 228 "../../iup_maskparse.c"
     $130 = (($129) + 1)|0; //@line 228 "../../iup_maskparse.c"
     _iMaskParseSetState($109,$112,$122,72,$126,$130); //@line 227 "../../iup_maskparse.c"
     $131 = $1; //@line 230 "../../iup_maskparse.c"
     _iMaskParseNewState($131); //@line 230 "../../iup_maskparse.c"
     $132 = $1; //@line 231 "../../iup_maskparse.c"
     $133 = ((($132)) + 8|0); //@line 231 "../../iup_maskparse.c"
     $134 = HEAP32[$133>>2]|0; //@line 231 "../../iup_maskparse.c"
     $135 = (($134) + 1)|0; //@line 231 "../../iup_maskparse.c"
     HEAP32[$133>>2] = $135; //@line 231 "../../iup_maskparse.c"
     break;
    } else {
     _iMaskParseError($109); //@line 234 "../../iup_maskparse.c"
     break;
    }
   }
   $136 = ((($57)) + 8|0); //@line 238 "../../iup_maskparse.c"
   $137 = HEAP32[$136>>2]|0; //@line 238 "../../iup_maskparse.c"
   $138 = $1; //@line 238 "../../iup_maskparse.c"
   $139 = HEAP32[$138>>2]|0; //@line 238 "../../iup_maskparse.c"
   $140 = (($139) + ($137)|0); //@line 238 "../../iup_maskparse.c"
   $141 = HEAP8[$140>>0]|0; //@line 238 "../../iup_maskparse.c"
   $142 = $141 << 24 >> 24; //@line 238 "../../iup_maskparse.c"
   $143 = 14645; //@line 238 "../../iup_maskparse.c"
   $144 = HEAP8[$143>>0]|0; //@line 238 "../../iup_maskparse.c"
   $145 = $144 << 24 >> 24; //@line 238 "../../iup_maskparse.c"
   $146 = ($142|0)==($145|0); //@line 238 "../../iup_maskparse.c"
   $147 = $1; //@line 240 "../../iup_maskparse.c"
   if ($146) {
    $148 = $1; //@line 240 "../../iup_maskparse.c"
    $149 = ((($148)) + 4|0); //@line 240 "../../iup_maskparse.c"
    $150 = HEAP32[$149>>2]|0; //@line 240 "../../iup_maskparse.c"
    $151 = $1; //@line 240 "../../iup_maskparse.c"
    $152 = ((($151)) + 4|0); //@line 240 "../../iup_maskparse.c"
    $153 = HEAP32[$152>>2]|0; //@line 240 "../../iup_maskparse.c"
    $154 = (($153) + 1)|0; //@line 240 "../../iup_maskparse.c"
    $155 = $1; //@line 240 "../../iup_maskparse.c"
    $156 = ((($155)) + 4|0); //@line 240 "../../iup_maskparse.c"
    $157 = HEAP32[$156>>2]|0; //@line 240 "../../iup_maskparse.c"
    $158 = (($157) + 1)|0; //@line 240 "../../iup_maskparse.c"
    _iMaskParseSetState($147,$150,1,2,$154,$158); //@line 240 "../../iup_maskparse.c"
    $159 = $1; //@line 241 "../../iup_maskparse.c"
    $160 = ((($159)) + 4|0); //@line 241 "../../iup_maskparse.c"
    $161 = HEAP32[$160>>2]|0; //@line 241 "../../iup_maskparse.c"
    $4 = $161; //@line 241 "../../iup_maskparse.c"
    $162 = $1; //@line 242 "../../iup_maskparse.c"
    $163 = ((($162)) + 8|0); //@line 242 "../../iup_maskparse.c"
    $164 = HEAP32[$163>>2]|0; //@line 242 "../../iup_maskparse.c"
    $165 = (($164) + 1)|0; //@line 242 "../../iup_maskparse.c"
    HEAP32[$163>>2] = $165; //@line 242 "../../iup_maskparse.c"
    $166 = $1; //@line 243 "../../iup_maskparse.c"
    _iMaskParseNewState($166); //@line 243 "../../iup_maskparse.c"
    break;
   }
   $167 = ((($147)) + 8|0); //@line 246 "../../iup_maskparse.c"
   $168 = HEAP32[$167>>2]|0; //@line 246 "../../iup_maskparse.c"
   $169 = $1; //@line 246 "../../iup_maskparse.c"
   $170 = HEAP32[$169>>2]|0; //@line 246 "../../iup_maskparse.c"
   $171 = (($170) + ($168)|0); //@line 246 "../../iup_maskparse.c"
   $172 = HEAP8[$171>>0]|0; //@line 246 "../../iup_maskparse.c"
   $173 = $172 << 24 >> 24; //@line 246 "../../iup_maskparse.c"
   $174 = 14651; //@line 246 "../../iup_maskparse.c"
   $175 = HEAP8[$174>>0]|0; //@line 246 "../../iup_maskparse.c"
   $176 = $175 << 24 >> 24; //@line 246 "../../iup_maskparse.c"
   $177 = ($173|0)==($176|0); //@line 246 "../../iup_maskparse.c"
   $178 = $1; //@line 249 "../../iup_maskparse.c"
   if ($177) {
    $179 = ((($178)) + 4|0); //@line 249 "../../iup_maskparse.c"
    $180 = HEAP32[$179>>2]|0; //@line 249 "../../iup_maskparse.c"
    $4 = $180; //@line 249 "../../iup_maskparse.c"
    $181 = $1; //@line 250 "../../iup_maskparse.c"
    $182 = ((($181)) + 8|0); //@line 250 "../../iup_maskparse.c"
    $183 = HEAP32[$182>>2]|0; //@line 250 "../../iup_maskparse.c"
    $184 = (($183) + 1)|0; //@line 250 "../../iup_maskparse.c"
    HEAP32[$182>>2] = $184; //@line 250 "../../iup_maskparse.c"
    $185 = $1; //@line 251 "../../iup_maskparse.c"
    _iMaskParseNewState($185); //@line 251 "../../iup_maskparse.c"
    $186 = $1; //@line 252 "../../iup_maskparse.c"
    $187 = (_iMaskParseFactor($186)|0); //@line 252 "../../iup_maskparse.c"
    $5 = $187; //@line 252 "../../iup_maskparse.c"
    $188 = $1; //@line 253 "../../iup_maskparse.c"
    $189 = $4; //@line 253 "../../iup_maskparse.c"
    $190 = $5; //@line 253 "../../iup_maskparse.c"
    $191 = $1; //@line 253 "../../iup_maskparse.c"
    $192 = ((($191)) + 4|0); //@line 253 "../../iup_maskparse.c"
    $193 = HEAP32[$192>>2]|0; //@line 253 "../../iup_maskparse.c"
    _iMaskParseSetState($188,$189,1,81,$190,$193); //@line 253 "../../iup_maskparse.c"
    $194 = $1; //@line 254 "../../iup_maskparse.c"
    $195 = $1; //@line 254 "../../iup_maskparse.c"
    $196 = ((($195)) + 4|0); //@line 254 "../../iup_maskparse.c"
    $197 = HEAP32[$196>>2]|0; //@line 254 "../../iup_maskparse.c"
    $198 = $1; //@line 254 "../../iup_maskparse.c"
    $199 = ((($198)) + 4|0); //@line 254 "../../iup_maskparse.c"
    $200 = HEAP32[$199>>2]|0; //@line 254 "../../iup_maskparse.c"
    $201 = (($200) + 1)|0; //@line 254 "../../iup_maskparse.c"
    $202 = $1; //@line 254 "../../iup_maskparse.c"
    $203 = ((($202)) + 4|0); //@line 254 "../../iup_maskparse.c"
    $204 = HEAP32[$203>>2]|0; //@line 254 "../../iup_maskparse.c"
    $205 = (($204) + 1)|0; //@line 254 "../../iup_maskparse.c"
    _iMaskParseSetState($194,$197,1,82,$201,$205); //@line 254 "../../iup_maskparse.c"
    $206 = $1; //@line 255 "../../iup_maskparse.c"
    _iMaskParseNewState($206); //@line 255 "../../iup_maskparse.c"
    break;
   }
   $207 = ((($178)) + 8|0); //@line 258 "../../iup_maskparse.c"
   $208 = HEAP32[$207>>2]|0; //@line 258 "../../iup_maskparse.c"
   $209 = $1; //@line 258 "../../iup_maskparse.c"
   $210 = HEAP32[$209>>2]|0; //@line 258 "../../iup_maskparse.c"
   $211 = (($210) + ($208)|0); //@line 258 "../../iup_maskparse.c"
   $212 = HEAP8[$211>>0]|0; //@line 258 "../../iup_maskparse.c"
   $213 = $212 << 24 >> 24; //@line 258 "../../iup_maskparse.c"
   $214 = 14647; //@line 258 "../../iup_maskparse.c"
   $215 = HEAP8[$214>>0]|0; //@line 258 "../../iup_maskparse.c"
   $216 = $215 << 24 >> 24; //@line 258 "../../iup_maskparse.c"
   $217 = ($213|0)==($216|0); //@line 258 "../../iup_maskparse.c"
   $218 = $1; //@line 260 "../../iup_maskparse.c"
   if ($217) {
    $219 = $1; //@line 260 "../../iup_maskparse.c"
    $220 = ((($219)) + 4|0); //@line 260 "../../iup_maskparse.c"
    $221 = HEAP32[$220>>2]|0; //@line 260 "../../iup_maskparse.c"
    $222 = $1; //@line 260 "../../iup_maskparse.c"
    $223 = ((($222)) + 4|0); //@line 260 "../../iup_maskparse.c"
    $224 = HEAP32[$223>>2]|0; //@line 260 "../../iup_maskparse.c"
    $225 = (($224) + 1)|0; //@line 260 "../../iup_maskparse.c"
    $226 = $1; //@line 261 "../../iup_maskparse.c"
    $227 = ((($226)) + 4|0); //@line 261 "../../iup_maskparse.c"
    $228 = HEAP32[$227>>2]|0; //@line 261 "../../iup_maskparse.c"
    $229 = (($228) + 1)|0; //@line 261 "../../iup_maskparse.c"
    _iMaskParseSetState($218,$221,1,6,$225,$229); //@line 260 "../../iup_maskparse.c"
    $230 = $1; //@line 262 "../../iup_maskparse.c"
    $231 = ((($230)) + 4|0); //@line 262 "../../iup_maskparse.c"
    $232 = HEAP32[$231>>2]|0; //@line 262 "../../iup_maskparse.c"
    $4 = $232; //@line 262 "../../iup_maskparse.c"
    $233 = $1; //@line 263 "../../iup_maskparse.c"
    $234 = ((($233)) + 8|0); //@line 263 "../../iup_maskparse.c"
    $235 = HEAP32[$234>>2]|0; //@line 263 "../../iup_maskparse.c"
    $236 = (($235) + 1)|0; //@line 263 "../../iup_maskparse.c"
    HEAP32[$234>>2] = $236; //@line 263 "../../iup_maskparse.c"
    $237 = $1; //@line 264 "../../iup_maskparse.c"
    _iMaskParseNewState($237); //@line 264 "../../iup_maskparse.c"
    break;
   }
   $238 = ((($218)) + 8|0); //@line 266 "../../iup_maskparse.c"
   $239 = HEAP32[$238>>2]|0; //@line 266 "../../iup_maskparse.c"
   $240 = $1; //@line 266 "../../iup_maskparse.c"
   $241 = HEAP32[$240>>2]|0; //@line 266 "../../iup_maskparse.c"
   $242 = (($241) + ($239)|0); //@line 266 "../../iup_maskparse.c"
   $243 = HEAP8[$242>>0]|0; //@line 266 "../../iup_maskparse.c"
   $244 = $243 << 24 >> 24; //@line 266 "../../iup_maskparse.c"
   $245 = 14648; //@line 266 "../../iup_maskparse.c"
   $246 = HEAP8[$245>>0]|0; //@line 266 "../../iup_maskparse.c"
   $247 = $246 << 24 >> 24; //@line 266 "../../iup_maskparse.c"
   $248 = ($244|0)==($247|0); //@line 266 "../../iup_maskparse.c"
   $249 = $1; //@line 268 "../../iup_maskparse.c"
   if ($248) {
    $250 = $1; //@line 268 "../../iup_maskparse.c"
    $251 = ((($250)) + 4|0); //@line 268 "../../iup_maskparse.c"
    $252 = HEAP32[$251>>2]|0; //@line 268 "../../iup_maskparse.c"
    $253 = $1; //@line 268 "../../iup_maskparse.c"
    $254 = ((($253)) + 4|0); //@line 268 "../../iup_maskparse.c"
    $255 = HEAP32[$254>>2]|0; //@line 268 "../../iup_maskparse.c"
    $256 = (($255) + 1)|0; //@line 268 "../../iup_maskparse.c"
    $257 = $1; //@line 269 "../../iup_maskparse.c"
    $258 = ((($257)) + 4|0); //@line 269 "../../iup_maskparse.c"
    $259 = HEAP32[$258>>2]|0; //@line 269 "../../iup_maskparse.c"
    $260 = (($259) + 1)|0; //@line 269 "../../iup_maskparse.c"
    _iMaskParseSetState($249,$252,1,7,$256,$260); //@line 268 "../../iup_maskparse.c"
    $261 = $1; //@line 270 "../../iup_maskparse.c"
    $262 = ((($261)) + 4|0); //@line 270 "../../iup_maskparse.c"
    $263 = HEAP32[$262>>2]|0; //@line 270 "../../iup_maskparse.c"
    $4 = $263; //@line 270 "../../iup_maskparse.c"
    $264 = $1; //@line 271 "../../iup_maskparse.c"
    $265 = ((($264)) + 8|0); //@line 271 "../../iup_maskparse.c"
    $266 = HEAP32[$265>>2]|0; //@line 271 "../../iup_maskparse.c"
    $267 = (($266) + 1)|0; //@line 271 "../../iup_maskparse.c"
    HEAP32[$265>>2] = $267; //@line 271 "../../iup_maskparse.c"
    $268 = $1; //@line 272 "../../iup_maskparse.c"
    _iMaskParseNewState($268); //@line 272 "../../iup_maskparse.c"
    break;
   }
   $269 = ((($249)) + 8|0); //@line 275 "../../iup_maskparse.c"
   $270 = HEAP32[$269>>2]|0; //@line 275 "../../iup_maskparse.c"
   $271 = $1; //@line 275 "../../iup_maskparse.c"
   $272 = HEAP32[$271>>2]|0; //@line 275 "../../iup_maskparse.c"
   $273 = (($272) + ($270)|0); //@line 275 "../../iup_maskparse.c"
   $274 = HEAP8[$273>>0]|0; //@line 275 "../../iup_maskparse.c"
   $275 = $274 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
   $276 = ($275|0)!=(0); //@line 275 "../../iup_maskparse.c"
   if ($276) {
    $277 = $1; //@line 275 "../../iup_maskparse.c"
    $278 = ((($277)) + 8|0); //@line 275 "../../iup_maskparse.c"
    $279 = HEAP32[$278>>2]|0; //@line 275 "../../iup_maskparse.c"
    $280 = $1; //@line 275 "../../iup_maskparse.c"
    $281 = HEAP32[$280>>2]|0; //@line 275 "../../iup_maskparse.c"
    $282 = (($281) + ($279)|0); //@line 275 "../../iup_maskparse.c"
    $283 = HEAP8[$282>>0]|0; //@line 275 "../../iup_maskparse.c"
    $284 = $283 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
    $285 = HEAP8[14635]|0; //@line 275 "../../iup_maskparse.c"
    $286 = $285 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
    $287 = ($284|0)!=($286|0); //@line 275 "../../iup_maskparse.c"
    if ($287) {
     $288 = $1; //@line 275 "../../iup_maskparse.c"
     $289 = ((($288)) + 8|0); //@line 275 "../../iup_maskparse.c"
     $290 = HEAP32[$289>>2]|0; //@line 275 "../../iup_maskparse.c"
     $291 = $1; //@line 275 "../../iup_maskparse.c"
     $292 = HEAP32[$291>>2]|0; //@line 275 "../../iup_maskparse.c"
     $293 = (($292) + ($290)|0); //@line 275 "../../iup_maskparse.c"
     $294 = HEAP8[$293>>0]|0; //@line 275 "../../iup_maskparse.c"
     $295 = $294 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
     $296 = 14638; //@line 275 "../../iup_maskparse.c"
     $297 = HEAP8[$296>>0]|0; //@line 275 "../../iup_maskparse.c"
     $298 = $297 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
     $299 = ($295|0)!=($298|0); //@line 275 "../../iup_maskparse.c"
     if ($299) {
      $300 = $1; //@line 275 "../../iup_maskparse.c"
      $301 = ((($300)) + 8|0); //@line 275 "../../iup_maskparse.c"
      $302 = HEAP32[$301>>2]|0; //@line 275 "../../iup_maskparse.c"
      $303 = $1; //@line 275 "../../iup_maskparse.c"
      $304 = HEAP32[$303>>2]|0; //@line 275 "../../iup_maskparse.c"
      $305 = (($304) + ($302)|0); //@line 275 "../../iup_maskparse.c"
      $306 = HEAP8[$305>>0]|0; //@line 275 "../../iup_maskparse.c"
      $307 = $306 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
      $308 = 14639; //@line 275 "../../iup_maskparse.c"
      $309 = HEAP8[$308>>0]|0; //@line 275 "../../iup_maskparse.c"
      $310 = $309 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
      $311 = ($307|0)!=($310|0); //@line 275 "../../iup_maskparse.c"
      if ($311) {
       $312 = $1; //@line 275 "../../iup_maskparse.c"
       $313 = ((($312)) + 8|0); //@line 275 "../../iup_maskparse.c"
       $314 = HEAP32[$313>>2]|0; //@line 275 "../../iup_maskparse.c"
       $315 = $1; //@line 275 "../../iup_maskparse.c"
       $316 = HEAP32[$315>>2]|0; //@line 275 "../../iup_maskparse.c"
       $317 = (($316) + ($314)|0); //@line 275 "../../iup_maskparse.c"
       $318 = HEAP8[$317>>0]|0; //@line 275 "../../iup_maskparse.c"
       $319 = $318 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
       $320 = 14636; //@line 275 "../../iup_maskparse.c"
       $321 = HEAP8[$320>>0]|0; //@line 275 "../../iup_maskparse.c"
       $322 = $321 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
       $323 = ($319|0)!=($322|0); //@line 275 "../../iup_maskparse.c"
       if ($323) {
        $324 = $1; //@line 275 "../../iup_maskparse.c"
        $325 = ((($324)) + 8|0); //@line 275 "../../iup_maskparse.c"
        $326 = HEAP32[$325>>2]|0; //@line 275 "../../iup_maskparse.c"
        $327 = $1; //@line 275 "../../iup_maskparse.c"
        $328 = HEAP32[$327>>2]|0; //@line 275 "../../iup_maskparse.c"
        $329 = (($328) + ($326)|0); //@line 275 "../../iup_maskparse.c"
        $330 = HEAP8[$329>>0]|0; //@line 275 "../../iup_maskparse.c"
        $331 = $330 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
        $332 = 14640; //@line 275 "../../iup_maskparse.c"
        $333 = HEAP8[$332>>0]|0; //@line 275 "../../iup_maskparse.c"
        $334 = $333 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
        $335 = ($331|0)!=($334|0); //@line 275 "../../iup_maskparse.c"
        if ($335) {
         $336 = $1; //@line 275 "../../iup_maskparse.c"
         $337 = ((($336)) + 8|0); //@line 275 "../../iup_maskparse.c"
         $338 = HEAP32[$337>>2]|0; //@line 275 "../../iup_maskparse.c"
         $339 = $1; //@line 275 "../../iup_maskparse.c"
         $340 = HEAP32[$339>>2]|0; //@line 275 "../../iup_maskparse.c"
         $341 = (($340) + ($338)|0); //@line 275 "../../iup_maskparse.c"
         $342 = HEAP8[$341>>0]|0; //@line 275 "../../iup_maskparse.c"
         $343 = $342 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
         $344 = 14641; //@line 275 "../../iup_maskparse.c"
         $345 = HEAP8[$344>>0]|0; //@line 275 "../../iup_maskparse.c"
         $346 = $345 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
         $347 = ($343|0)!=($346|0); //@line 275 "../../iup_maskparse.c"
         if ($347) {
          $348 = $1; //@line 275 "../../iup_maskparse.c"
          $349 = ((($348)) + 8|0); //@line 275 "../../iup_maskparse.c"
          $350 = HEAP32[$349>>2]|0; //@line 275 "../../iup_maskparse.c"
          $351 = $1; //@line 275 "../../iup_maskparse.c"
          $352 = HEAP32[$351>>2]|0; //@line 275 "../../iup_maskparse.c"
          $353 = (($352) + ($350)|0); //@line 275 "../../iup_maskparse.c"
          $354 = HEAP8[$353>>0]|0; //@line 275 "../../iup_maskparse.c"
          $355 = $354 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
          $356 = 14649; //@line 275 "../../iup_maskparse.c"
          $357 = HEAP8[$356>>0]|0; //@line 275 "../../iup_maskparse.c"
          $358 = $357 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
          $359 = ($355|0)!=($358|0); //@line 275 "../../iup_maskparse.c"
          if ($359) {
           $360 = $1; //@line 275 "../../iup_maskparse.c"
           $361 = ((($360)) + 8|0); //@line 275 "../../iup_maskparse.c"
           $362 = HEAP32[$361>>2]|0; //@line 275 "../../iup_maskparse.c"
           $363 = $1; //@line 275 "../../iup_maskparse.c"
           $364 = HEAP32[$363>>2]|0; //@line 275 "../../iup_maskparse.c"
           $365 = (($364) + ($362)|0); //@line 275 "../../iup_maskparse.c"
           $366 = HEAP8[$365>>0]|0; //@line 275 "../../iup_maskparse.c"
           $367 = $366 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
           $368 = 14650; //@line 275 "../../iup_maskparse.c"
           $369 = HEAP8[$368>>0]|0; //@line 275 "../../iup_maskparse.c"
           $370 = $369 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
           $371 = ($367|0)!=($370|0); //@line 275 "../../iup_maskparse.c"
           if ($371) {
            $372 = $1; //@line 275 "../../iup_maskparse.c"
            $373 = ((($372)) + 8|0); //@line 275 "../../iup_maskparse.c"
            $374 = HEAP32[$373>>2]|0; //@line 275 "../../iup_maskparse.c"
            $375 = $1; //@line 275 "../../iup_maskparse.c"
            $376 = HEAP32[$375>>2]|0; //@line 275 "../../iup_maskparse.c"
            $377 = (($376) + ($374)|0); //@line 275 "../../iup_maskparse.c"
            $378 = HEAP8[$377>>0]|0; //@line 275 "../../iup_maskparse.c"
            $379 = $378 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
            $380 = 14637; //@line 275 "../../iup_maskparse.c"
            $381 = HEAP8[$380>>0]|0; //@line 275 "../../iup_maskparse.c"
            $382 = $381 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
            $383 = ($379|0)!=($382|0); //@line 275 "../../iup_maskparse.c"
            if ($383) {
             $384 = $1; //@line 275 "../../iup_maskparse.c"
             $385 = ((($384)) + 8|0); //@line 275 "../../iup_maskparse.c"
             $386 = HEAP32[$385>>2]|0; //@line 275 "../../iup_maskparse.c"
             $387 = $1; //@line 275 "../../iup_maskparse.c"
             $388 = HEAP32[$387>>2]|0; //@line 275 "../../iup_maskparse.c"
             $389 = (($388) + ($386)|0); //@line 275 "../../iup_maskparse.c"
             $390 = HEAP8[$389>>0]|0; //@line 275 "../../iup_maskparse.c"
             $391 = $390 << 24 >> 24; //@line 275 "../../iup_maskparse.c"
             $392 = 14644; //@line 276 "../../iup_maskparse.c"
             $393 = HEAP8[$392>>0]|0; //@line 276 "../../iup_maskparse.c"
             $394 = $393 << 24 >> 24; //@line 276 "../../iup_maskparse.c"
             $395 = ($391|0)!=($394|0); //@line 276 "../../iup_maskparse.c"
             if ($395) {
              $396 = $1; //@line 276 "../../iup_maskparse.c"
              $397 = ((($396)) + 8|0); //@line 276 "../../iup_maskparse.c"
              $398 = HEAP32[$397>>2]|0; //@line 276 "../../iup_maskparse.c"
              $399 = $1; //@line 276 "../../iup_maskparse.c"
              $400 = HEAP32[$399>>2]|0; //@line 276 "../../iup_maskparse.c"
              $401 = (($400) + ($398)|0); //@line 276 "../../iup_maskparse.c"
              $402 = HEAP8[$401>>0]|0; //@line 276 "../../iup_maskparse.c"
              $403 = $402 << 24 >> 24; //@line 276 "../../iup_maskparse.c"
              $404 = 14645; //@line 276 "../../iup_maskparse.c"
              $405 = HEAP8[$404>>0]|0; //@line 276 "../../iup_maskparse.c"
              $406 = $405 << 24 >> 24; //@line 276 "../../iup_maskparse.c"
              $407 = ($403|0)!=($406|0); //@line 276 "../../iup_maskparse.c"
              if ($407) {
               $408 = $1; //@line 278 "../../iup_maskparse.c"
               $409 = $1; //@line 278 "../../iup_maskparse.c"
               $410 = ((($409)) + 4|0); //@line 278 "../../iup_maskparse.c"
               $411 = HEAP32[$410>>2]|0; //@line 278 "../../iup_maskparse.c"
               $412 = $1; //@line 278 "../../iup_maskparse.c"
               $413 = ((($412)) + 8|0); //@line 278 "../../iup_maskparse.c"
               $414 = HEAP32[$413>>2]|0; //@line 278 "../../iup_maskparse.c"
               $415 = $1; //@line 278 "../../iup_maskparse.c"
               $416 = HEAP32[$415>>2]|0; //@line 278 "../../iup_maskparse.c"
               $417 = (($416) + ($414)|0); //@line 278 "../../iup_maskparse.c"
               $418 = HEAP8[$417>>0]|0; //@line 278 "../../iup_maskparse.c"
               $419 = $1; //@line 279 "../../iup_maskparse.c"
               $420 = ((($419)) + 4|0); //@line 279 "../../iup_maskparse.c"
               $421 = HEAP32[$420>>2]|0; //@line 279 "../../iup_maskparse.c"
               $422 = (($421) + 1)|0; //@line 279 "../../iup_maskparse.c"
               $423 = $1; //@line 279 "../../iup_maskparse.c"
               $424 = ((($423)) + 4|0); //@line 279 "../../iup_maskparse.c"
               $425 = HEAP32[$424>>2]|0; //@line 279 "../../iup_maskparse.c"
               $426 = (($425) + 1)|0; //@line 279 "../../iup_maskparse.c"
               _iMaskParseSetState($408,$411,$418,3,$422,$426); //@line 278 "../../iup_maskparse.c"
               $427 = $1; //@line 280 "../../iup_maskparse.c"
               $428 = ((($427)) + 4|0); //@line 280 "../../iup_maskparse.c"
               $429 = HEAP32[$428>>2]|0; //@line 280 "../../iup_maskparse.c"
               $4 = $429; //@line 280 "../../iup_maskparse.c"
               $430 = $1; //@line 281 "../../iup_maskparse.c"
               $431 = ((($430)) + 8|0); //@line 281 "../../iup_maskparse.c"
               $432 = HEAP32[$431>>2]|0; //@line 281 "../../iup_maskparse.c"
               $433 = (($432) + 1)|0; //@line 281 "../../iup_maskparse.c"
               HEAP32[$431>>2] = $433; //@line 281 "../../iup_maskparse.c"
               $434 = $1; //@line 282 "../../iup_maskparse.c"
               _iMaskParseNewState($434); //@line 282 "../../iup_maskparse.c"
               break;
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
   $435 = $1; //@line 285 "../../iup_maskparse.c"
   $436 = ((($435)) + 8|0); //@line 285 "../../iup_maskparse.c"
   $437 = HEAP32[$436>>2]|0; //@line 285 "../../iup_maskparse.c"
   $438 = $1; //@line 285 "../../iup_maskparse.c"
   $439 = HEAP32[$438>>2]|0; //@line 285 "../../iup_maskparse.c"
   $440 = (($439) + ($437)|0); //@line 285 "../../iup_maskparse.c"
   $441 = HEAP8[$440>>0]|0; //@line 285 "../../iup_maskparse.c"
   $442 = $441 << 24 >> 24; //@line 285 "../../iup_maskparse.c"
   $443 = 14640; //@line 285 "../../iup_maskparse.c"
   $444 = HEAP8[$443>>0]|0; //@line 285 "../../iup_maskparse.c"
   $445 = $444 << 24 >> 24; //@line 285 "../../iup_maskparse.c"
   $446 = ($442|0)==($445|0); //@line 285 "../../iup_maskparse.c"
   $447 = $1; //@line 287 "../../iup_maskparse.c"
   $448 = ((($447)) + 8|0); //@line 287 "../../iup_maskparse.c"
   $449 = HEAP32[$448>>2]|0; //@line 287 "../../iup_maskparse.c"
   if (!($446)) {
    $752 = $1; //@line 400 "../../iup_maskparse.c"
    $753 = HEAP32[$752>>2]|0; //@line 400 "../../iup_maskparse.c"
    $754 = (($753) + ($449)|0); //@line 400 "../../iup_maskparse.c"
    $755 = HEAP8[$754>>0]|0; //@line 400 "../../iup_maskparse.c"
    $756 = $755 << 24 >> 24; //@line 400 "../../iup_maskparse.c"
    $757 = 14644; //@line 400 "../../iup_maskparse.c"
    $758 = HEAP8[$757>>0]|0; //@line 400 "../../iup_maskparse.c"
    $759 = $758 << 24 >> 24; //@line 400 "../../iup_maskparse.c"
    $760 = ($756|0)==($759|0); //@line 400 "../../iup_maskparse.c"
    if (!($760)) {
     $889 = $1; //@line 467 "../../iup_maskparse.c"
     _iMaskParseError($889); //@line 467 "../../iup_maskparse.c"
     break;
    }
    $8 = 0; //@line 402 "../../iup_maskparse.c"
    $761 = (_iupMaskMatchGetFuncs()|0); //@line 403 "../../iup_maskparse.c"
    $9 = $761; //@line 403 "../../iup_maskparse.c"
    $762 = $1; //@line 405 "../../iup_maskparse.c"
    $763 = ((($762)) + 8|0); //@line 405 "../../iup_maskparse.c"
    $764 = HEAP32[$763>>2]|0; //@line 405 "../../iup_maskparse.c"
    $765 = (($764) + 1)|0; //@line 405 "../../iup_maskparse.c"
    HEAP32[$763>>2] = $765; //@line 405 "../../iup_maskparse.c"
    while(1) {
     $766 = $8; //@line 407 "../../iup_maskparse.c"
     $767 = $9; //@line 407 "../../iup_maskparse.c"
     $768 = (($767) + ($766<<3)|0); //@line 407 "../../iup_maskparse.c"
     $769 = HEAP8[$768>>0]|0; //@line 407 "../../iup_maskparse.c"
     $770 = $769 << 24 >> 24; //@line 407 "../../iup_maskparse.c"
     $771 = ($770|0)!=(0); //@line 407 "../../iup_maskparse.c"
     if ($771) {
      $772 = $8; //@line 408 "../../iup_maskparse.c"
      $773 = $9; //@line 408 "../../iup_maskparse.c"
      $774 = (($773) + ($772<<3)|0); //@line 408 "../../iup_maskparse.c"
      $775 = HEAP8[$774>>0]|0; //@line 408 "../../iup_maskparse.c"
      $776 = $775 << 24 >> 24; //@line 408 "../../iup_maskparse.c"
      $777 = $1; //@line 408 "../../iup_maskparse.c"
      $778 = ((($777)) + 8|0); //@line 408 "../../iup_maskparse.c"
      $779 = HEAP32[$778>>2]|0; //@line 408 "../../iup_maskparse.c"
      $780 = $1; //@line 408 "../../iup_maskparse.c"
      $781 = HEAP32[$780>>2]|0; //@line 408 "../../iup_maskparse.c"
      $782 = (($781) + ($779)|0); //@line 408 "../../iup_maskparse.c"
      $783 = HEAP8[$782>>0]|0; //@line 408 "../../iup_maskparse.c"
      $784 = $783 << 24 >> 24; //@line 408 "../../iup_maskparse.c"
      $785 = ($776|0)!=($784|0); //@line 408 "../../iup_maskparse.c"
      $1123 = $785;
     } else {
      $1123 = 0;
     }
     $786 = $8; //@line 409 "../../iup_maskparse.c"
     if (!($1123)) {
      break;
     }
     $787 = (($786) + 1)|0; //@line 409 "../../iup_maskparse.c"
     $8 = $787; //@line 409 "../../iup_maskparse.c"
    }
    $788 = $9; //@line 411 "../../iup_maskparse.c"
    $789 = (($788) + ($786<<3)|0); //@line 411 "../../iup_maskparse.c"
    $790 = HEAP8[$789>>0]|0; //@line 411 "../../iup_maskparse.c"
    $791 = $790 << 24 >> 24; //@line 411 "../../iup_maskparse.c"
    $792 = ($791|0)==(0); //@line 411 "../../iup_maskparse.c"
    $793 = $1; //@line 415 "../../iup_maskparse.c"
    if ($792) {
     $794 = ((($793)) + 8|0); //@line 415 "../../iup_maskparse.c"
     $795 = HEAP32[$794>>2]|0; //@line 415 "../../iup_maskparse.c"
     $796 = $1; //@line 415 "../../iup_maskparse.c"
     $797 = HEAP32[$796>>2]|0; //@line 415 "../../iup_maskparse.c"
     $798 = (($797) + ($795)|0); //@line 415 "../../iup_maskparse.c"
     $799 = HEAP8[$798>>0]|0; //@line 415 "../../iup_maskparse.c"
     $800 = $799 << 24 >> 24; //@line 415 "../../iup_maskparse.c"
     L53: do {
      switch ($800|0) {
      case 110:  {
       HEAP32[$10>>2] = 10; //@line 418 "../../iup_maskparse.c"
       break;
      }
      case 116:  {
       HEAP32[$10>>2] = 9; //@line 422 "../../iup_maskparse.c"
       break;
      }
      case 101:  {
       HEAP32[$10>>2] = 27; //@line 426 "../../iup_maskparse.c"
       break;
      }
      case 120:  {
       $801 = $1; //@line 430 "../../iup_maskparse.c"
       $802 = ((($801)) + 8|0); //@line 430 "../../iup_maskparse.c"
       $803 = HEAP32[$802>>2]|0; //@line 430 "../../iup_maskparse.c"
       $804 = (($803) + 1)|0; //@line 430 "../../iup_maskparse.c"
       HEAP32[$802>>2] = $804; //@line 430 "../../iup_maskparse.c"
       $805 = $1; //@line 431 "../../iup_maskparse.c"
       $806 = ((($805)) + 8|0); //@line 431 "../../iup_maskparse.c"
       $807 = HEAP32[$806>>2]|0; //@line 431 "../../iup_maskparse.c"
       $808 = $1; //@line 431 "../../iup_maskparse.c"
       $809 = HEAP32[$808>>2]|0; //@line 431 "../../iup_maskparse.c"
       $810 = (($809) + ($807)|0); //@line 431 "../../iup_maskparse.c"
       HEAP32[$vararg_buffer>>2] = $10; //@line 431 "../../iup_maskparse.c"
       (_sscanf($810,14653,$vararg_buffer)|0); //@line 431 "../../iup_maskparse.c"
       $811 = $1; //@line 432 "../../iup_maskparse.c"
       $812 = ((($811)) + 8|0); //@line 432 "../../iup_maskparse.c"
       $813 = HEAP32[$812>>2]|0; //@line 432 "../../iup_maskparse.c"
       $814 = (($813) + 1)|0; //@line 432 "../../iup_maskparse.c"
       HEAP32[$812>>2] = $814; //@line 432 "../../iup_maskparse.c"
       break;
      }
      case 111:  {
       $815 = $1; //@line 436 "../../iup_maskparse.c"
       $816 = ((($815)) + 8|0); //@line 436 "../../iup_maskparse.c"
       $817 = HEAP32[$816>>2]|0; //@line 436 "../../iup_maskparse.c"
       $818 = (($817) + 1)|0; //@line 436 "../../iup_maskparse.c"
       HEAP32[$816>>2] = $818; //@line 436 "../../iup_maskparse.c"
       $819 = $1; //@line 437 "../../iup_maskparse.c"
       $820 = ((($819)) + 8|0); //@line 437 "../../iup_maskparse.c"
       $821 = HEAP32[$820>>2]|0; //@line 437 "../../iup_maskparse.c"
       $822 = $1; //@line 437 "../../iup_maskparse.c"
       $823 = HEAP32[$822>>2]|0; //@line 437 "../../iup_maskparse.c"
       $824 = (($823) + ($821)|0); //@line 437 "../../iup_maskparse.c"
       HEAP32[$vararg_buffer1>>2] = $10; //@line 437 "../../iup_maskparse.c"
       (_sscanf($824,14657,$vararg_buffer1)|0); //@line 437 "../../iup_maskparse.c"
       $825 = $1; //@line 438 "../../iup_maskparse.c"
       $826 = ((($825)) + 8|0); //@line 438 "../../iup_maskparse.c"
       $827 = HEAP32[$826>>2]|0; //@line 438 "../../iup_maskparse.c"
       $828 = (($827) + 2)|0; //@line 438 "../../iup_maskparse.c"
       HEAP32[$826>>2] = $828; //@line 438 "../../iup_maskparse.c"
       break;
      }
      default: {
       $829 = $1; //@line 442 "../../iup_maskparse.c"
       $830 = ((($829)) + 8|0); //@line 442 "../../iup_maskparse.c"
       $831 = HEAP32[$830>>2]|0; //@line 442 "../../iup_maskparse.c"
       $832 = $1; //@line 442 "../../iup_maskparse.c"
       $833 = HEAP32[$832>>2]|0; //@line 442 "../../iup_maskparse.c"
       $834 = (($833) + ($831)|0); //@line 442 "../../iup_maskparse.c"
       $835 = HEAP8[$834>>0]|0; //@line 442 "../../iup_maskparse.c"
       $836 = $835 << 24 >> 24; //@line 442 "../../iup_maskparse.c"
       $837 = (_isdigit($836)|0); //@line 442 "../../iup_maskparse.c"
       $838 = ($837|0)!=(0); //@line 442 "../../iup_maskparse.c"
       $839 = $1; //@line 444 "../../iup_maskparse.c"
       $840 = ((($839)) + 8|0); //@line 444 "../../iup_maskparse.c"
       $841 = HEAP32[$840>>2]|0; //@line 444 "../../iup_maskparse.c"
       $842 = $1; //@line 444 "../../iup_maskparse.c"
       $843 = HEAP32[$842>>2]|0; //@line 444 "../../iup_maskparse.c"
       $844 = (($843) + ($841)|0); //@line 444 "../../iup_maskparse.c"
       if (!($838)) {
        $852 = HEAP8[$844>>0]|0; //@line 452 "../../iup_maskparse.c"
        $853 = $852 << 24 >> 24; //@line 452 "../../iup_maskparse.c"
        HEAP32[$10>>2] = $853; //@line 452 "../../iup_maskparse.c"
        break L53;
       }
       HEAP32[$vararg_buffer4>>2] = $10; //@line 444 "../../iup_maskparse.c"
       (_sscanf($844,14661,$vararg_buffer4)|0); //@line 444 "../../iup_maskparse.c"
       $845 = HEAP32[$10>>2]|0; //@line 445 "../../iup_maskparse.c"
       $846 = ($845|0)>(255); //@line 445 "../../iup_maskparse.c"
       if ($846) {
        $847 = $1; //@line 447 "../../iup_maskparse.c"
        _iMaskParseError($847); //@line 447 "../../iup_maskparse.c"
       }
       $848 = $1; //@line 449 "../../iup_maskparse.c"
       $849 = ((($848)) + 8|0); //@line 449 "../../iup_maskparse.c"
       $850 = HEAP32[$849>>2]|0; //@line 449 "../../iup_maskparse.c"
       $851 = (($850) + 2)|0; //@line 449 "../../iup_maskparse.c"
       HEAP32[$849>>2] = $851; //@line 449 "../../iup_maskparse.c"
      }
      }
     } while(0);
     $854 = $1; //@line 454 "../../iup_maskparse.c"
     $855 = $1; //@line 454 "../../iup_maskparse.c"
     $856 = ((($855)) + 4|0); //@line 454 "../../iup_maskparse.c"
     $857 = HEAP32[$856>>2]|0; //@line 454 "../../iup_maskparse.c"
     $858 = HEAP32[$10>>2]|0; //@line 454 "../../iup_maskparse.c"
     $859 = $858&255; //@line 454 "../../iup_maskparse.c"
     $860 = $1; //@line 454 "../../iup_maskparse.c"
     $861 = ((($860)) + 4|0); //@line 454 "../../iup_maskparse.c"
     $862 = HEAP32[$861>>2]|0; //@line 454 "../../iup_maskparse.c"
     $863 = (($862) + 1)|0; //@line 454 "../../iup_maskparse.c"
     $864 = $1; //@line 454 "../../iup_maskparse.c"
     $865 = ((($864)) + 4|0); //@line 454 "../../iup_maskparse.c"
     $866 = HEAP32[$865>>2]|0; //@line 454 "../../iup_maskparse.c"
     $867 = (($866) + 1)|0; //@line 454 "../../iup_maskparse.c"
     _iMaskParseSetState($854,$857,$859,3,$863,$867); //@line 454 "../../iup_maskparse.c"
    } else {
     $868 = $1; //@line 459 "../../iup_maskparse.c"
     $869 = ((($868)) + 4|0); //@line 459 "../../iup_maskparse.c"
     $870 = HEAP32[$869>>2]|0; //@line 459 "../../iup_maskparse.c"
     $871 = $8; //@line 459 "../../iup_maskparse.c"
     $872 = $871&255; //@line 459 "../../iup_maskparse.c"
     $873 = $1; //@line 459 "../../iup_maskparse.c"
     $874 = ((($873)) + 4|0); //@line 459 "../../iup_maskparse.c"
     $875 = HEAP32[$874>>2]|0; //@line 459 "../../iup_maskparse.c"
     $876 = (($875) + 1)|0; //@line 459 "../../iup_maskparse.c"
     $877 = $1; //@line 459 "../../iup_maskparse.c"
     $878 = ((($877)) + 4|0); //@line 459 "../../iup_maskparse.c"
     $879 = HEAP32[$878>>2]|0; //@line 459 "../../iup_maskparse.c"
     $880 = (($879) + 1)|0; //@line 459 "../../iup_maskparse.c"
     _iMaskParseSetState($793,$870,$872,4,$876,$880); //@line 459 "../../iup_maskparse.c"
    }
    $881 = $1; //@line 462 "../../iup_maskparse.c"
    $882 = ((($881)) + 4|0); //@line 462 "../../iup_maskparse.c"
    $883 = HEAP32[$882>>2]|0; //@line 462 "../../iup_maskparse.c"
    $4 = $883; //@line 462 "../../iup_maskparse.c"
    $884 = $1; //@line 463 "../../iup_maskparse.c"
    $885 = ((($884)) + 8|0); //@line 463 "../../iup_maskparse.c"
    $886 = HEAP32[$885>>2]|0; //@line 463 "../../iup_maskparse.c"
    $887 = (($886) + 1)|0; //@line 463 "../../iup_maskparse.c"
    HEAP32[$885>>2] = $887; //@line 463 "../../iup_maskparse.c"
    $888 = $1; //@line 464 "../../iup_maskparse.c"
    _iMaskParseNewState($888); //@line 464 "../../iup_maskparse.c"
    break;
   }
   $450 = (($449) + 1)|0; //@line 287 "../../iup_maskparse.c"
   HEAP32[$448>>2] = $450; //@line 287 "../../iup_maskparse.c"
   $451 = $1; //@line 288 "../../iup_maskparse.c"
   $452 = $1; //@line 288 "../../iup_maskparse.c"
   $453 = ((($452)) + 4|0); //@line 288 "../../iup_maskparse.c"
   $454 = HEAP32[$453>>2]|0; //@line 288 "../../iup_maskparse.c"
   _iMaskParseSetState($451,$454,0,5,0,0); //@line 288 "../../iup_maskparse.c"
   $455 = $1; //@line 290 "../../iup_maskparse.c"
   $456 = ((($455)) + 8|0); //@line 290 "../../iup_maskparse.c"
   $457 = HEAP32[$456>>2]|0; //@line 290 "../../iup_maskparse.c"
   $458 = $1; //@line 290 "../../iup_maskparse.c"
   $459 = HEAP32[$458>>2]|0; //@line 290 "../../iup_maskparse.c"
   $460 = (($459) + ($457)|0); //@line 290 "../../iup_maskparse.c"
   $461 = HEAP8[$460>>0]|0; //@line 290 "../../iup_maskparse.c"
   $462 = $461 << 24 >> 24; //@line 290 "../../iup_maskparse.c"
   $463 = 14643; //@line 290 "../../iup_maskparse.c"
   $464 = HEAP8[$463>>0]|0; //@line 290 "../../iup_maskparse.c"
   $465 = $464 << 24 >> 24; //@line 290 "../../iup_maskparse.c"
   $466 = ($462|0)==($465|0); //@line 290 "../../iup_maskparse.c"
   if ($466) {
    $467 = $1; //@line 292 "../../iup_maskparse.c"
    $468 = ((($467)) + 4|0); //@line 292 "../../iup_maskparse.c"
    $469 = HEAP32[$468>>2]|0; //@line 292 "../../iup_maskparse.c"
    $470 = $1; //@line 292 "../../iup_maskparse.c"
    $471 = ((($470)) + 16|0); //@line 292 "../../iup_maskparse.c"
    $472 = HEAP32[$471>>2]|0; //@line 292 "../../iup_maskparse.c"
    $473 = (($472) + ($469<<4)|0); //@line 292 "../../iup_maskparse.c"
    $474 = ((($473)) + 12|0); //@line 292 "../../iup_maskparse.c"
    HEAP32[$474>>2] = 1; //@line 292 "../../iup_maskparse.c"
    $475 = $1; //@line 293 "../../iup_maskparse.c"
    $476 = ((($475)) + 8|0); //@line 293 "../../iup_maskparse.c"
    $477 = HEAP32[$476>>2]|0; //@line 293 "../../iup_maskparse.c"
    $478 = (($477) + 1)|0; //@line 293 "../../iup_maskparse.c"
    HEAP32[$476>>2] = $478; //@line 293 "../../iup_maskparse.c"
   }
   $479 = $1; //@line 296 "../../iup_maskparse.c"
   $480 = ((($479)) + 4|0); //@line 296 "../../iup_maskparse.c"
   $481 = HEAP32[$480>>2]|0; //@line 296 "../../iup_maskparse.c"
   $4 = $481; //@line 296 "../../iup_maskparse.c"
   $482 = $1; //@line 297 "../../iup_maskparse.c"
   _iMaskParseNewState($482); //@line 297 "../../iup_maskparse.c"
   $483 = $1; //@line 299 "../../iup_maskparse.c"
   $484 = ((($483)) + 8|0); //@line 299 "../../iup_maskparse.c"
   $485 = HEAP32[$484>>2]|0; //@line 299 "../../iup_maskparse.c"
   $486 = $1; //@line 299 "../../iup_maskparse.c"
   $487 = HEAP32[$486>>2]|0; //@line 299 "../../iup_maskparse.c"
   $488 = (($487) + ($485)|0); //@line 299 "../../iup_maskparse.c"
   $489 = HEAP8[$488>>0]|0; //@line 299 "../../iup_maskparse.c"
   $490 = $489 << 24 >> 24; //@line 299 "../../iup_maskparse.c"
   $491 = 14642; //@line 299 "../../iup_maskparse.c"
   $492 = HEAP8[$491>>0]|0; //@line 299 "../../iup_maskparse.c"
   $493 = $492 << 24 >> 24; //@line 299 "../../iup_maskparse.c"
   $494 = ($490|0)==($493|0); //@line 299 "../../iup_maskparse.c"
   if ($494) {
    $495 = $1; //@line 300 "../../iup_maskparse.c"
    _iMaskParseError($495); //@line 300 "../../iup_maskparse.c"
   }
   while(1) {
    $496 = $1; //@line 302 "../../iup_maskparse.c"
    $497 = ((($496)) + 8|0); //@line 302 "../../iup_maskparse.c"
    $498 = HEAP32[$497>>2]|0; //@line 302 "../../iup_maskparse.c"
    $499 = $1; //@line 302 "../../iup_maskparse.c"
    $500 = HEAP32[$499>>2]|0; //@line 302 "../../iup_maskparse.c"
    $501 = (($500) + ($498)|0); //@line 302 "../../iup_maskparse.c"
    $502 = HEAP8[$501>>0]|0; //@line 302 "../../iup_maskparse.c"
    $503 = $502 << 24 >> 24; //@line 302 "../../iup_maskparse.c"
    $504 = 14641; //@line 302 "../../iup_maskparse.c"
    $505 = HEAP8[$504>>0]|0; //@line 302 "../../iup_maskparse.c"
    $506 = $505 << 24 >> 24; //@line 302 "../../iup_maskparse.c"
    $507 = ($503|0)!=($506|0); //@line 302 "../../iup_maskparse.c"
    if ($507) {
     $508 = $1; //@line 302 "../../iup_maskparse.c"
     $509 = ((($508)) + 8|0); //@line 302 "../../iup_maskparse.c"
     $510 = HEAP32[$509>>2]|0; //@line 302 "../../iup_maskparse.c"
     $511 = $1; //@line 302 "../../iup_maskparse.c"
     $512 = HEAP32[$511>>2]|0; //@line 302 "../../iup_maskparse.c"
     $513 = (($512) + ($510)|0); //@line 302 "../../iup_maskparse.c"
     $514 = HEAP8[$513>>0]|0; //@line 302 "../../iup_maskparse.c"
     $515 = $514 << 24 >> 24; //@line 302 "../../iup_maskparse.c"
     $516 = ($515|0)!=(10); //@line 302 "../../iup_maskparse.c"
     if ($516) {
      $517 = $1; //@line 303 "../../iup_maskparse.c"
      $518 = ((($517)) + 8|0); //@line 303 "../../iup_maskparse.c"
      $519 = HEAP32[$518>>2]|0; //@line 303 "../../iup_maskparse.c"
      $520 = $1; //@line 303 "../../iup_maskparse.c"
      $521 = HEAP32[$520>>2]|0; //@line 303 "../../iup_maskparse.c"
      $522 = (($521) + ($519)|0); //@line 303 "../../iup_maskparse.c"
      $523 = HEAP8[$522>>0]|0; //@line 303 "../../iup_maskparse.c"
      $524 = $523 << 24 >> 24; //@line 303 "../../iup_maskparse.c"
      $525 = ($524|0)!=(0); //@line 303 "../../iup_maskparse.c"
      $1122 = $525;
     } else {
      $1122 = 0;
     }
    } else {
     $1122 = 0;
    }
    $526 = $1; //@line 305 "../../iup_maskparse.c"
    $527 = ((($526)) + 8|0); //@line 305 "../../iup_maskparse.c"
    $528 = HEAP32[$527>>2]|0; //@line 305 "../../iup_maskparse.c"
    $529 = $1; //@line 305 "../../iup_maskparse.c"
    $530 = HEAP32[$529>>2]|0; //@line 305 "../../iup_maskparse.c"
    $531 = (($530) + ($528)|0); //@line 305 "../../iup_maskparse.c"
    $532 = HEAP8[$531>>0]|0; //@line 305 "../../iup_maskparse.c"
    $533 = $532 << 24 >> 24; //@line 305 "../../iup_maskparse.c"
    if (!($1122)) {
     break;
    }
    $534 = 14644; //@line 305 "../../iup_maskparse.c"
    $535 = HEAP8[$534>>0]|0; //@line 305 "../../iup_maskparse.c"
    $536 = $535 << 24 >> 24; //@line 305 "../../iup_maskparse.c"
    $537 = ($533|0)==($536|0); //@line 305 "../../iup_maskparse.c"
    $538 = $1; //@line 309 "../../iup_maskparse.c"
    $539 = ((($538)) + 8|0); //@line 309 "../../iup_maskparse.c"
    $540 = HEAP32[$539>>2]|0; //@line 309 "../../iup_maskparse.c"
    if ($537) {
     $541 = (($540) + 1)|0; //@line 309 "../../iup_maskparse.c"
     HEAP32[$539>>2] = $541; //@line 309 "../../iup_maskparse.c"
     $542 = $1; //@line 310 "../../iup_maskparse.c"
     $543 = ((($542)) + 8|0); //@line 310 "../../iup_maskparse.c"
     $544 = HEAP32[$543>>2]|0; //@line 310 "../../iup_maskparse.c"
     $545 = $1; //@line 310 "../../iup_maskparse.c"
     $546 = HEAP32[$545>>2]|0; //@line 310 "../../iup_maskparse.c"
     $547 = (($546) + ($544)|0); //@line 310 "../../iup_maskparse.c"
     $548 = HEAP8[$547>>0]|0; //@line 310 "../../iup_maskparse.c"
     $549 = $548 << 24 >> 24; //@line 310 "../../iup_maskparse.c"
     switch ($549|0) {
     case 110:  {
      $6 = 10; //@line 313 "../../iup_maskparse.c"
      break;
     }
     case 116:  {
      $6 = 9; //@line 317 "../../iup_maskparse.c"
      break;
     }
     case 101:  {
      $6 = 27; //@line 321 "../../iup_maskparse.c"
      break;
     }
     default: {
      $550 = $1; //@line 325 "../../iup_maskparse.c"
      $551 = ((($550)) + 8|0); //@line 325 "../../iup_maskparse.c"
      $552 = HEAP32[$551>>2]|0; //@line 325 "../../iup_maskparse.c"
      $553 = $1; //@line 325 "../../iup_maskparse.c"
      $554 = HEAP32[$553>>2]|0; //@line 325 "../../iup_maskparse.c"
      $555 = (($554) + ($552)|0); //@line 325 "../../iup_maskparse.c"
      $556 = HEAP8[$555>>0]|0; //@line 325 "../../iup_maskparse.c"
      $6 = $556; //@line 325 "../../iup_maskparse.c"
     }
     }
     $557 = $1; //@line 327 "../../iup_maskparse.c"
     $558 = $1; //@line 327 "../../iup_maskparse.c"
     $559 = ((($558)) + 4|0); //@line 327 "../../iup_maskparse.c"
     $560 = HEAP32[$559>>2]|0; //@line 327 "../../iup_maskparse.c"
     $561 = $6; //@line 327 "../../iup_maskparse.c"
     _iMaskParseSetState($557,$560,$561,51,0,0); //@line 327 "../../iup_maskparse.c"
     $562 = $1; //@line 328 "../../iup_maskparse.c"
     $563 = ((($562)) + 8|0); //@line 328 "../../iup_maskparse.c"
     $564 = HEAP32[$563>>2]|0; //@line 328 "../../iup_maskparse.c"
     $565 = (($564) + 1)|0; //@line 328 "../../iup_maskparse.c"
     HEAP32[$563>>2] = $565; //@line 328 "../../iup_maskparse.c"
     $566 = $1; //@line 329 "../../iup_maskparse.c"
     _iMaskParseNewState($566); //@line 329 "../../iup_maskparse.c"
     continue;
    }
    $567 = $1; //@line 331 "../../iup_maskparse.c"
    $568 = HEAP32[$567>>2]|0; //@line 331 "../../iup_maskparse.c"
    $569 = (($568) + ($540)|0); //@line 331 "../../iup_maskparse.c"
    $570 = HEAP8[$569>>0]|0; //@line 331 "../../iup_maskparse.c"
    $571 = $570 << 24 >> 24; //@line 331 "../../iup_maskparse.c"
    $572 = 14642; //@line 331 "../../iup_maskparse.c"
    $573 = HEAP8[$572>>0]|0; //@line 331 "../../iup_maskparse.c"
    $574 = $573 << 24 >> 24; //@line 331 "../../iup_maskparse.c"
    $575 = ($571|0)==($574|0); //@line 331 "../../iup_maskparse.c"
    if (!($575)) {
     $647 = $1; //@line 368 "../../iup_maskparse.c"
     $648 = ((($647)) + 8|0); //@line 368 "../../iup_maskparse.c"
     $649 = HEAP32[$648>>2]|0; //@line 368 "../../iup_maskparse.c"
     $650 = $1; //@line 368 "../../iup_maskparse.c"
     $651 = HEAP32[$650>>2]|0; //@line 368 "../../iup_maskparse.c"
     $652 = (($651) + ($649)|0); //@line 368 "../../iup_maskparse.c"
     $653 = HEAP8[$652>>0]|0; //@line 368 "../../iup_maskparse.c"
     $654 = $653 << 24 >> 24; //@line 368 "../../iup_maskparse.c"
     $655 = 14647; //@line 368 "../../iup_maskparse.c"
     $656 = HEAP8[$655>>0]|0; //@line 368 "../../iup_maskparse.c"
     $657 = $656 << 24 >> 24; //@line 368 "../../iup_maskparse.c"
     $658 = ($654|0)==($657|0); //@line 368 "../../iup_maskparse.c"
     $659 = $1; //@line 370 "../../iup_maskparse.c"
     if ($658) {
      $660 = $1; //@line 370 "../../iup_maskparse.c"
      $661 = ((($660)) + 4|0); //@line 370 "../../iup_maskparse.c"
      $662 = HEAP32[$661>>2]|0; //@line 370 "../../iup_maskparse.c"
      $663 = $1; //@line 370 "../../iup_maskparse.c"
      $664 = ((($663)) + 4|0); //@line 370 "../../iup_maskparse.c"
      $665 = HEAP32[$664>>2]|0; //@line 370 "../../iup_maskparse.c"
      $666 = (($665) + 1)|0; //@line 370 "../../iup_maskparse.c"
      $667 = $1; //@line 370 "../../iup_maskparse.c"
      $668 = ((($667)) + 4|0); //@line 370 "../../iup_maskparse.c"
      $669 = HEAP32[$668>>2]|0; //@line 370 "../../iup_maskparse.c"
      $670 = (($669) + 1)|0; //@line 370 "../../iup_maskparse.c"
      _iMaskParseSetState($659,$662,1,6,$666,$670); //@line 370 "../../iup_maskparse.c"
      $671 = $1; //@line 371 "../../iup_maskparse.c"
      $672 = ((($671)) + 4|0); //@line 371 "../../iup_maskparse.c"
      $673 = HEAP32[$672>>2]|0; //@line 371 "../../iup_maskparse.c"
      $4 = $673; //@line 371 "../../iup_maskparse.c"
      $674 = $1; //@line 372 "../../iup_maskparse.c"
      $675 = ((($674)) + 8|0); //@line 372 "../../iup_maskparse.c"
      $676 = HEAP32[$675>>2]|0; //@line 372 "../../iup_maskparse.c"
      $677 = (($676) + 1)|0; //@line 372 "../../iup_maskparse.c"
      HEAP32[$675>>2] = $677; //@line 372 "../../iup_maskparse.c"
      $678 = $1; //@line 373 "../../iup_maskparse.c"
      _iMaskParseNewState($678); //@line 373 "../../iup_maskparse.c"
      continue;
     }
     $679 = ((($659)) + 8|0); //@line 375 "../../iup_maskparse.c"
     $680 = HEAP32[$679>>2]|0; //@line 375 "../../iup_maskparse.c"
     $681 = $1; //@line 375 "../../iup_maskparse.c"
     $682 = HEAP32[$681>>2]|0; //@line 375 "../../iup_maskparse.c"
     $683 = (($682) + ($680)|0); //@line 375 "../../iup_maskparse.c"
     $684 = HEAP8[$683>>0]|0; //@line 375 "../../iup_maskparse.c"
     $685 = $684 << 24 >> 24; //@line 375 "../../iup_maskparse.c"
     $686 = 14648; //@line 375 "../../iup_maskparse.c"
     $687 = HEAP8[$686>>0]|0; //@line 375 "../../iup_maskparse.c"
     $688 = $687 << 24 >> 24; //@line 375 "../../iup_maskparse.c"
     $689 = ($685|0)==($688|0); //@line 375 "../../iup_maskparse.c"
     $690 = $1; //@line 377 "../../iup_maskparse.c"
     $691 = $1; //@line 377 "../../iup_maskparse.c"
     $692 = ((($691)) + 4|0); //@line 377 "../../iup_maskparse.c"
     $693 = HEAP32[$692>>2]|0; //@line 377 "../../iup_maskparse.c"
     $694 = $1; //@line 377 "../../iup_maskparse.c"
     if ($689) {
      $695 = ((($694)) + 4|0); //@line 377 "../../iup_maskparse.c"
      $696 = HEAP32[$695>>2]|0; //@line 377 "../../iup_maskparse.c"
      $697 = (($696) + 1)|0; //@line 377 "../../iup_maskparse.c"
      $698 = $1; //@line 377 "../../iup_maskparse.c"
      $699 = ((($698)) + 4|0); //@line 377 "../../iup_maskparse.c"
      $700 = HEAP32[$699>>2]|0; //@line 377 "../../iup_maskparse.c"
      $701 = (($700) + 1)|0; //@line 377 "../../iup_maskparse.c"
      _iMaskParseSetState($690,$693,1,7,$697,$701); //@line 377 "../../iup_maskparse.c"
      $702 = $1; //@line 378 "../../iup_maskparse.c"
      $703 = ((($702)) + 4|0); //@line 378 "../../iup_maskparse.c"
      $704 = HEAP32[$703>>2]|0; //@line 378 "../../iup_maskparse.c"
      $4 = $704; //@line 378 "../../iup_maskparse.c"
      $705 = $1; //@line 379 "../../iup_maskparse.c"
      $706 = ((($705)) + 8|0); //@line 379 "../../iup_maskparse.c"
      $707 = HEAP32[$706>>2]|0; //@line 379 "../../iup_maskparse.c"
      $708 = (($707) + 1)|0; //@line 379 "../../iup_maskparse.c"
      HEAP32[$706>>2] = $708; //@line 379 "../../iup_maskparse.c"
      $709 = $1; //@line 380 "../../iup_maskparse.c"
      _iMaskParseNewState($709); //@line 380 "../../iup_maskparse.c"
      continue;
     } else {
      $710 = ((($694)) + 8|0); //@line 385 "../../iup_maskparse.c"
      $711 = HEAP32[$710>>2]|0; //@line 385 "../../iup_maskparse.c"
      $712 = $1; //@line 385 "../../iup_maskparse.c"
      $713 = HEAP32[$712>>2]|0; //@line 385 "../../iup_maskparse.c"
      $714 = (($713) + ($711)|0); //@line 385 "../../iup_maskparse.c"
      $715 = HEAP8[$714>>0]|0; //@line 385 "../../iup_maskparse.c"
      _iMaskParseSetState($690,$693,$715,51,0,0); //@line 385 "../../iup_maskparse.c"
      $716 = $1; //@line 386 "../../iup_maskparse.c"
      $717 = ((($716)) + 8|0); //@line 386 "../../iup_maskparse.c"
      $718 = HEAP32[$717>>2]|0; //@line 386 "../../iup_maskparse.c"
      $719 = (($718) + 1)|0; //@line 386 "../../iup_maskparse.c"
      HEAP32[$717>>2] = $719; //@line 386 "../../iup_maskparse.c"
      $720 = $1; //@line 387 "../../iup_maskparse.c"
      _iMaskParseNewState($720); //@line 387 "../../iup_maskparse.c"
      continue;
     }
    }
    $7 = 0; //@line 333 "../../iup_maskparse.c"
    $576 = $1; //@line 335 "../../iup_maskparse.c"
    $577 = ((($576)) + 8|0); //@line 335 "../../iup_maskparse.c"
    $578 = HEAP32[$577>>2]|0; //@line 335 "../../iup_maskparse.c"
    $579 = (($578) + 1)|0; //@line 335 "../../iup_maskparse.c"
    HEAP32[$577>>2] = $579; //@line 335 "../../iup_maskparse.c"
    $580 = $1; //@line 337 "../../iup_maskparse.c"
    $581 = ((($580)) + 8|0); //@line 337 "../../iup_maskparse.c"
    $582 = HEAP32[$581>>2]|0; //@line 337 "../../iup_maskparse.c"
    $583 = $1; //@line 337 "../../iup_maskparse.c"
    $584 = HEAP32[$583>>2]|0; //@line 337 "../../iup_maskparse.c"
    $585 = (($584) + ($582)|0); //@line 337 "../../iup_maskparse.c"
    $586 = HEAP8[$585>>0]|0; //@line 337 "../../iup_maskparse.c"
    $587 = $586 << 24 >> 24; //@line 337 "../../iup_maskparse.c"
    $588 = 14644; //@line 337 "../../iup_maskparse.c"
    $589 = HEAP8[$588>>0]|0; //@line 337 "../../iup_maskparse.c"
    $590 = $589 << 24 >> 24; //@line 337 "../../iup_maskparse.c"
    $591 = ($587|0)==($590|0); //@line 337 "../../iup_maskparse.c"
    $592 = $1; //@line 339 "../../iup_maskparse.c"
    $593 = ((($592)) + 8|0); //@line 339 "../../iup_maskparse.c"
    $594 = HEAP32[$593>>2]|0; //@line 339 "../../iup_maskparse.c"
    L100: do {
     if ($591) {
      $595 = (($594) + 1)|0; //@line 339 "../../iup_maskparse.c"
      HEAP32[$593>>2] = $595; //@line 339 "../../iup_maskparse.c"
      $596 = $1; //@line 340 "../../iup_maskparse.c"
      $597 = ((($596)) + 8|0); //@line 340 "../../iup_maskparse.c"
      $598 = HEAP32[$597>>2]|0; //@line 340 "../../iup_maskparse.c"
      $599 = $1; //@line 340 "../../iup_maskparse.c"
      $600 = HEAP32[$599>>2]|0; //@line 340 "../../iup_maskparse.c"
      $601 = (($600) + ($598)|0); //@line 340 "../../iup_maskparse.c"
      $602 = HEAP8[$601>>0]|0; //@line 340 "../../iup_maskparse.c"
      $603 = $602 << 24 >> 24; //@line 340 "../../iup_maskparse.c"
      switch ($603|0) {
      case 110:  {
       $7 = 10; //@line 343 "../../iup_maskparse.c"
       break L100;
       break;
      }
      case 116:  {
       $7 = 9; //@line 347 "../../iup_maskparse.c"
       break L100;
       break;
      }
      case 101:  {
       $7 = 27; //@line 351 "../../iup_maskparse.c"
       break L100;
       break;
      }
      default: {
       $604 = $1; //@line 355 "../../iup_maskparse.c"
       $605 = ((($604)) + 8|0); //@line 355 "../../iup_maskparse.c"
       $606 = HEAP32[$605>>2]|0; //@line 355 "../../iup_maskparse.c"
       $607 = $1; //@line 355 "../../iup_maskparse.c"
       $608 = HEAP32[$607>>2]|0; //@line 355 "../../iup_maskparse.c"
       $609 = (($608) + ($606)|0); //@line 355 "../../iup_maskparse.c"
       $610 = HEAP8[$609>>0]|0; //@line 355 "../../iup_maskparse.c"
       $7 = $610; //@line 355 "../../iup_maskparse.c"
       break L100;
      }
      }
     } else {
      $611 = $1; //@line 358 "../../iup_maskparse.c"
      $612 = HEAP32[$611>>2]|0; //@line 358 "../../iup_maskparse.c"
      $613 = (($612) + ($594)|0); //@line 358 "../../iup_maskparse.c"
      $614 = HEAP8[$613>>0]|0; //@line 358 "../../iup_maskparse.c"
      $615 = $614 << 24 >> 24; //@line 358 "../../iup_maskparse.c"
      $616 = 14641; //@line 358 "../../iup_maskparse.c"
      $617 = HEAP8[$616>>0]|0; //@line 358 "../../iup_maskparse.c"
      $618 = $617 << 24 >> 24; //@line 358 "../../iup_maskparse.c"
      $619 = ($615|0)!=($618|0); //@line 358 "../../iup_maskparse.c"
      $620 = $1; //@line 359 "../../iup_maskparse.c"
      if ($619) {
       $621 = ((($620)) + 8|0); //@line 359 "../../iup_maskparse.c"
       $622 = HEAP32[$621>>2]|0; //@line 359 "../../iup_maskparse.c"
       $623 = $1; //@line 359 "../../iup_maskparse.c"
       $624 = HEAP32[$623>>2]|0; //@line 359 "../../iup_maskparse.c"
       $625 = (($624) + ($622)|0); //@line 359 "../../iup_maskparse.c"
       $626 = HEAP8[$625>>0]|0; //@line 359 "../../iup_maskparse.c"
       $7 = $626; //@line 359 "../../iup_maskparse.c"
       break;
      } else {
       _iMaskParseError($620); //@line 362 "../../iup_maskparse.c"
       break;
      }
     }
    } while(0);
    $627 = $1; //@line 364 "../../iup_maskparse.c"
    $628 = $1; //@line 364 "../../iup_maskparse.c"
    $629 = ((($628)) + 4|0); //@line 364 "../../iup_maskparse.c"
    $630 = HEAP32[$629>>2]|0; //@line 364 "../../iup_maskparse.c"
    $631 = (($630) - 1)|0; //@line 364 "../../iup_maskparse.c"
    $632 = $1; //@line 364 "../../iup_maskparse.c"
    $633 = ((($632)) + 4|0); //@line 364 "../../iup_maskparse.c"
    $634 = HEAP32[$633>>2]|0; //@line 364 "../../iup_maskparse.c"
    $635 = (($634) - 1)|0; //@line 364 "../../iup_maskparse.c"
    $636 = $1; //@line 364 "../../iup_maskparse.c"
    $637 = ((($636)) + 16|0); //@line 364 "../../iup_maskparse.c"
    $638 = HEAP32[$637>>2]|0; //@line 364 "../../iup_maskparse.c"
    $639 = (($638) + ($635<<4)|0); //@line 364 "../../iup_maskparse.c"
    $640 = HEAP8[$639>>0]|0; //@line 364 "../../iup_maskparse.c"
    $641 = $7; //@line 365 "../../iup_maskparse.c"
    $642 = $641 << 24 >> 24; //@line 365 "../../iup_maskparse.c"
    _iMaskParseSetState($627,$631,$640,50,$642,0); //@line 364 "../../iup_maskparse.c"
    $643 = $1; //@line 366 "../../iup_maskparse.c"
    $644 = ((($643)) + 8|0); //@line 366 "../../iup_maskparse.c"
    $645 = HEAP32[$644>>2]|0; //@line 366 "../../iup_maskparse.c"
    $646 = (($645) + 1)|0; //@line 366 "../../iup_maskparse.c"
    HEAP32[$644>>2] = $646; //@line 366 "../../iup_maskparse.c"
   }
   $721 = 14641; //@line 391 "../../iup_maskparse.c"
   $722 = HEAP8[$721>>0]|0; //@line 391 "../../iup_maskparse.c"
   $723 = $722 << 24 >> 24; //@line 391 "../../iup_maskparse.c"
   $724 = ($533|0)!=($723|0); //@line 391 "../../iup_maskparse.c"
   if ($724) {
    $725 = $1; //@line 392 "../../iup_maskparse.c"
    _iMaskParseError($725); //@line 392 "../../iup_maskparse.c"
   }
   $726 = $1; //@line 393 "../../iup_maskparse.c"
   $727 = $1; //@line 393 "../../iup_maskparse.c"
   $728 = ((($727)) + 4|0); //@line 393 "../../iup_maskparse.c"
   $729 = HEAP32[$728>>2]|0; //@line 393 "../../iup_maskparse.c"
   $730 = $1; //@line 393 "../../iup_maskparse.c"
   $731 = ((($730)) + 4|0); //@line 393 "../../iup_maskparse.c"
   $732 = HEAP32[$731>>2]|0; //@line 393 "../../iup_maskparse.c"
   $733 = (($732) + 1)|0; //@line 393 "../../iup_maskparse.c"
   $734 = $1; //@line 393 "../../iup_maskparse.c"
   $735 = ((($734)) + 4|0); //@line 393 "../../iup_maskparse.c"
   $736 = HEAP32[$735>>2]|0; //@line 393 "../../iup_maskparse.c"
   $737 = (($736) + 1)|0; //@line 393 "../../iup_maskparse.c"
   _iMaskParseSetState($726,$729,0,1,$733,$737); //@line 393 "../../iup_maskparse.c"
   $738 = $1; //@line 394 "../../iup_maskparse.c"
   $739 = ((($738)) + 4|0); //@line 394 "../../iup_maskparse.c"
   $740 = HEAP32[$739>>2]|0; //@line 394 "../../iup_maskparse.c"
   $741 = $4; //@line 394 "../../iup_maskparse.c"
   $742 = $1; //@line 394 "../../iup_maskparse.c"
   $743 = ((($742)) + 16|0); //@line 394 "../../iup_maskparse.c"
   $744 = HEAP32[$743>>2]|0; //@line 394 "../../iup_maskparse.c"
   $745 = (($744) + ($741<<4)|0); //@line 394 "../../iup_maskparse.c"
   $746 = ((($745)) + 8|0); //@line 394 "../../iup_maskparse.c"
   HEAP32[$746>>2] = $740; //@line 394 "../../iup_maskparse.c"
   $747 = $1; //@line 395 "../../iup_maskparse.c"
   $748 = ((($747)) + 8|0); //@line 395 "../../iup_maskparse.c"
   $749 = HEAP32[$748>>2]|0; //@line 395 "../../iup_maskparse.c"
   $750 = (($749) + 1)|0; //@line 395 "../../iup_maskparse.c"
   HEAP32[$748>>2] = $750; //@line 395 "../../iup_maskparse.c"
   $751 = $1; //@line 396 "../../iup_maskparse.c"
   _iMaskParseNewState($751); //@line 396 "../../iup_maskparse.c"
  }
 } while(0);
 $890 = $1; //@line 469 "../../iup_maskparse.c"
 $891 = ((($890)) + 8|0); //@line 469 "../../iup_maskparse.c"
 $892 = HEAP32[$891>>2]|0; //@line 469 "../../iup_maskparse.c"
 $893 = $1; //@line 469 "../../iup_maskparse.c"
 $894 = HEAP32[$893>>2]|0; //@line 469 "../../iup_maskparse.c"
 $895 = (($894) + ($892)|0); //@line 469 "../../iup_maskparse.c"
 $896 = HEAP8[$895>>0]|0; //@line 469 "../../iup_maskparse.c"
 $897 = $896 << 24 >> 24; //@line 469 "../../iup_maskparse.c"
 $898 = 14636; //@line 469 "../../iup_maskparse.c"
 $899 = HEAP8[$898>>0]|0; //@line 469 "../../iup_maskparse.c"
 $900 = $899 << 24 >> 24; //@line 469 "../../iup_maskparse.c"
 $901 = ($897|0)==($900|0); //@line 469 "../../iup_maskparse.c"
 $902 = $1; //@line 471 "../../iup_maskparse.c"
 if ($901) {
  $903 = $1; //@line 471 "../../iup_maskparse.c"
  $904 = ((($903)) + 4|0); //@line 471 "../../iup_maskparse.c"
  $905 = HEAP32[$904>>2]|0; //@line 471 "../../iup_maskparse.c"
  $906 = $1; //@line 471 "../../iup_maskparse.c"
  $907 = ((($906)) + 4|0); //@line 471 "../../iup_maskparse.c"
  $908 = HEAP32[$907>>2]|0; //@line 471 "../../iup_maskparse.c"
  $909 = (($908) + 1)|0; //@line 471 "../../iup_maskparse.c"
  $910 = $4; //@line 471 "../../iup_maskparse.c"
  _iMaskParseSetState($902,$905,0,1,$909,$910); //@line 471 "../../iup_maskparse.c"
  $911 = $1; //@line 472 "../../iup_maskparse.c"
  $912 = ((($911)) + 4|0); //@line 472 "../../iup_maskparse.c"
  $913 = HEAP32[$912>>2]|0; //@line 472 "../../iup_maskparse.c"
  $2 = $913; //@line 472 "../../iup_maskparse.c"
  $914 = $3; //@line 474 "../../iup_maskparse.c"
  $915 = (($914) - 1)|0; //@line 474 "../../iup_maskparse.c"
  $916 = $1; //@line 474 "../../iup_maskparse.c"
  $917 = ((($916)) + 16|0); //@line 474 "../../iup_maskparse.c"
  $918 = HEAP32[$917>>2]|0; //@line 474 "../../iup_maskparse.c"
  $919 = (($918) + ($915<<4)|0); //@line 474 "../../iup_maskparse.c"
  $920 = ((($919)) + 8|0); //@line 474 "../../iup_maskparse.c"
  $921 = HEAP32[$920>>2]|0; //@line 474 "../../iup_maskparse.c"
  $922 = $3; //@line 474 "../../iup_maskparse.c"
  $923 = ($921|0)==($922|0); //@line 474 "../../iup_maskparse.c"
  if ($923) {
   $924 = $1; //@line 475 "../../iup_maskparse.c"
   $925 = ((($924)) + 4|0); //@line 475 "../../iup_maskparse.c"
   $926 = HEAP32[$925>>2]|0; //@line 475 "../../iup_maskparse.c"
   $927 = $3; //@line 475 "../../iup_maskparse.c"
   $928 = (($927) - 1)|0; //@line 475 "../../iup_maskparse.c"
   $929 = $1; //@line 475 "../../iup_maskparse.c"
   $930 = ((($929)) + 16|0); //@line 475 "../../iup_maskparse.c"
   $931 = HEAP32[$930>>2]|0; //@line 475 "../../iup_maskparse.c"
   $932 = (($931) + ($928<<4)|0); //@line 475 "../../iup_maskparse.c"
   $933 = ((($932)) + 8|0); //@line 475 "../../iup_maskparse.c"
   HEAP32[$933>>2] = $926; //@line 475 "../../iup_maskparse.c"
  }
  $934 = $3; //@line 477 "../../iup_maskparse.c"
  $935 = (($934) - 1)|0; //@line 477 "../../iup_maskparse.c"
  $936 = $1; //@line 477 "../../iup_maskparse.c"
  $937 = ((($936)) + 16|0); //@line 477 "../../iup_maskparse.c"
  $938 = HEAP32[$937>>2]|0; //@line 477 "../../iup_maskparse.c"
  $939 = (($938) + ($935<<4)|0); //@line 477 "../../iup_maskparse.c"
  $940 = ((($939)) + 12|0); //@line 477 "../../iup_maskparse.c"
  $941 = HEAP32[$940>>2]|0; //@line 477 "../../iup_maskparse.c"
  $942 = $3; //@line 477 "../../iup_maskparse.c"
  $943 = ($941|0)==($942|0); //@line 477 "../../iup_maskparse.c"
  if ($943) {
   $944 = $1; //@line 478 "../../iup_maskparse.c"
   $945 = ((($944)) + 4|0); //@line 478 "../../iup_maskparse.c"
   $946 = HEAP32[$945>>2]|0; //@line 478 "../../iup_maskparse.c"
   $947 = $3; //@line 478 "../../iup_maskparse.c"
   $948 = (($947) - 1)|0; //@line 478 "../../iup_maskparse.c"
   $949 = $1; //@line 478 "../../iup_maskparse.c"
   $950 = ((($949)) + 16|0); //@line 478 "../../iup_maskparse.c"
   $951 = HEAP32[$950>>2]|0; //@line 478 "../../iup_maskparse.c"
   $952 = (($951) + ($948<<4)|0); //@line 478 "../../iup_maskparse.c"
   $953 = ((($952)) + 12|0); //@line 478 "../../iup_maskparse.c"
   HEAP32[$953>>2] = $946; //@line 478 "../../iup_maskparse.c"
  }
  $954 = $1; //@line 480 "../../iup_maskparse.c"
  $955 = ((($954)) + 8|0); //@line 480 "../../iup_maskparse.c"
  $956 = HEAP32[$955>>2]|0; //@line 480 "../../iup_maskparse.c"
  $957 = (($956) + 1)|0; //@line 480 "../../iup_maskparse.c"
  HEAP32[$955>>2] = $957; //@line 480 "../../iup_maskparse.c"
  $958 = $1; //@line 481 "../../iup_maskparse.c"
  _iMaskParseNewState($958); //@line 481 "../../iup_maskparse.c"
  $1121 = $2; //@line 521 "../../iup_maskparse.c"
  STACKTOP = sp;return ($1121|0); //@line 521 "../../iup_maskparse.c"
 }
 $959 = ((($902)) + 8|0); //@line 484 "../../iup_maskparse.c"
 $960 = HEAP32[$959>>2]|0; //@line 484 "../../iup_maskparse.c"
 $961 = $1; //@line 484 "../../iup_maskparse.c"
 $962 = HEAP32[$961>>2]|0; //@line 484 "../../iup_maskparse.c"
 $963 = (($962) + ($960)|0); //@line 484 "../../iup_maskparse.c"
 $964 = HEAP8[$963>>0]|0; //@line 484 "../../iup_maskparse.c"
 $965 = $964 << 24 >> 24; //@line 484 "../../iup_maskparse.c"
 $966 = 14646; //@line 484 "../../iup_maskparse.c"
 $967 = HEAP8[$966>>0]|0; //@line 484 "../../iup_maskparse.c"
 $968 = $967 << 24 >> 24; //@line 484 "../../iup_maskparse.c"
 $969 = ($965|0)==($968|0); //@line 484 "../../iup_maskparse.c"
 $970 = $1; //@line 486 "../../iup_maskparse.c"
 if (!($969)) {
  $1094 = ((($970)) + 8|0); //@line 508 "../../iup_maskparse.c"
  $1095 = HEAP32[$1094>>2]|0; //@line 508 "../../iup_maskparse.c"
  $1096 = $1; //@line 508 "../../iup_maskparse.c"
  $1097 = HEAP32[$1096>>2]|0; //@line 508 "../../iup_maskparse.c"
  $1098 = (($1097) + ($1095)|0); //@line 508 "../../iup_maskparse.c"
  $1099 = HEAP8[$1098>>0]|0; //@line 508 "../../iup_maskparse.c"
  $1100 = $1099 << 24 >> 24; //@line 508 "../../iup_maskparse.c"
  $1101 = 14637; //@line 508 "../../iup_maskparse.c"
  $1102 = HEAP8[$1101>>0]|0; //@line 508 "../../iup_maskparse.c"
  $1103 = $1102 << 24 >> 24; //@line 508 "../../iup_maskparse.c"
  $1104 = ($1100|0)==($1103|0); //@line 508 "../../iup_maskparse.c"
  if ($1104) {
   $1105 = $1; //@line 510 "../../iup_maskparse.c"
   $1106 = $1; //@line 510 "../../iup_maskparse.c"
   $1107 = ((($1106)) + 4|0); //@line 510 "../../iup_maskparse.c"
   $1108 = HEAP32[$1107>>2]|0; //@line 510 "../../iup_maskparse.c"
   $1109 = $1; //@line 510 "../../iup_maskparse.c"
   $1110 = ((($1109)) + 4|0); //@line 510 "../../iup_maskparse.c"
   $1111 = HEAP32[$1110>>2]|0; //@line 510 "../../iup_maskparse.c"
   $1112 = (($1111) + 1)|0; //@line 510 "../../iup_maskparse.c"
   $1113 = $4; //@line 510 "../../iup_maskparse.c"
   _iMaskParseSetState($1105,$1108,0,1,$1112,$1113); //@line 510 "../../iup_maskparse.c"
   $1114 = $4; //@line 511 "../../iup_maskparse.c"
   $2 = $1114; //@line 511 "../../iup_maskparse.c"
   $1115 = $1; //@line 513 "../../iup_maskparse.c"
   $1116 = ((($1115)) + 8|0); //@line 513 "../../iup_maskparse.c"
   $1117 = HEAP32[$1116>>2]|0; //@line 513 "../../iup_maskparse.c"
   $1118 = (($1117) + 1)|0; //@line 513 "../../iup_maskparse.c"
   HEAP32[$1116>>2] = $1118; //@line 513 "../../iup_maskparse.c"
   $1119 = $1; //@line 515 "../../iup_maskparse.c"
   _iMaskParseNewState($1119); //@line 515 "../../iup_maskparse.c"
   $1121 = $2; //@line 521 "../../iup_maskparse.c"
   STACKTOP = sp;return ($1121|0); //@line 521 "../../iup_maskparse.c"
  } else {
   $1120 = $4; //@line 519 "../../iup_maskparse.c"
   $2 = $1120; //@line 519 "../../iup_maskparse.c"
   $1121 = $2; //@line 521 "../../iup_maskparse.c"
   STACKTOP = sp;return ($1121|0); //@line 521 "../../iup_maskparse.c"
  }
 }
 $971 = $1; //@line 486 "../../iup_maskparse.c"
 $972 = ((($971)) + 4|0); //@line 486 "../../iup_maskparse.c"
 $973 = HEAP32[$972>>2]|0; //@line 486 "../../iup_maskparse.c"
 $974 = $1; //@line 486 "../../iup_maskparse.c"
 $975 = ((($974)) + 4|0); //@line 486 "../../iup_maskparse.c"
 $976 = HEAP32[$975>>2]|0; //@line 486 "../../iup_maskparse.c"
 $977 = (($976) + 1)|0; //@line 486 "../../iup_maskparse.c"
 $978 = $4; //@line 486 "../../iup_maskparse.c"
 _iMaskParseSetState($970,$973,0,1,$977,$978); //@line 486 "../../iup_maskparse.c"
 $979 = $1; //@line 487 "../../iup_maskparse.c"
 $980 = ((($979)) + 4|0); //@line 487 "../../iup_maskparse.c"
 $981 = HEAP32[$980>>2]|0; //@line 487 "../../iup_maskparse.c"
 $2 = $981; //@line 487 "../../iup_maskparse.c"
 $982 = $3; //@line 489 "../../iup_maskparse.c"
 $983 = (($982) - 1)|0; //@line 489 "../../iup_maskparse.c"
 $984 = $1; //@line 489 "../../iup_maskparse.c"
 $985 = ((($984)) + 16|0); //@line 489 "../../iup_maskparse.c"
 $986 = HEAP32[$985>>2]|0; //@line 489 "../../iup_maskparse.c"
 $987 = (($986) + ($983<<4)|0); //@line 489 "../../iup_maskparse.c"
 $988 = ((($987)) + 8|0); //@line 489 "../../iup_maskparse.c"
 $989 = HEAP32[$988>>2]|0; //@line 489 "../../iup_maskparse.c"
 $990 = $3; //@line 489 "../../iup_maskparse.c"
 $991 = ($989|0)==($990|0); //@line 489 "../../iup_maskparse.c"
 if ($991) {
  $992 = $1; //@line 490 "../../iup_maskparse.c"
  $993 = ((($992)) + 4|0); //@line 490 "../../iup_maskparse.c"
  $994 = HEAP32[$993>>2]|0; //@line 490 "../../iup_maskparse.c"
  $995 = $3; //@line 490 "../../iup_maskparse.c"
  $996 = (($995) - 1)|0; //@line 490 "../../iup_maskparse.c"
  $997 = $1; //@line 490 "../../iup_maskparse.c"
  $998 = ((($997)) + 16|0); //@line 490 "../../iup_maskparse.c"
  $999 = HEAP32[$998>>2]|0; //@line 490 "../../iup_maskparse.c"
  $1000 = (($999) + ($996<<4)|0); //@line 490 "../../iup_maskparse.c"
  $1001 = ((($1000)) + 8|0); //@line 490 "../../iup_maskparse.c"
  HEAP32[$1001>>2] = $994; //@line 490 "../../iup_maskparse.c"
 }
 $1002 = $3; //@line 492 "../../iup_maskparse.c"
 $1003 = (($1002) - 1)|0; //@line 492 "../../iup_maskparse.c"
 $1004 = $1; //@line 492 "../../iup_maskparse.c"
 $1005 = ((($1004)) + 16|0); //@line 492 "../../iup_maskparse.c"
 $1006 = HEAP32[$1005>>2]|0; //@line 492 "../../iup_maskparse.c"
 $1007 = (($1006) + ($1003<<4)|0); //@line 492 "../../iup_maskparse.c"
 $1008 = ((($1007)) + 12|0); //@line 492 "../../iup_maskparse.c"
 $1009 = HEAP32[$1008>>2]|0; //@line 492 "../../iup_maskparse.c"
 $1010 = $3; //@line 492 "../../iup_maskparse.c"
 $1011 = ($1009|0)==($1010|0); //@line 492 "../../iup_maskparse.c"
 if ($1011) {
  $1012 = $1; //@line 493 "../../iup_maskparse.c"
  $1013 = ((($1012)) + 4|0); //@line 493 "../../iup_maskparse.c"
  $1014 = HEAP32[$1013>>2]|0; //@line 493 "../../iup_maskparse.c"
  $1015 = $3; //@line 493 "../../iup_maskparse.c"
  $1016 = (($1015) - 1)|0; //@line 493 "../../iup_maskparse.c"
  $1017 = $1; //@line 493 "../../iup_maskparse.c"
  $1018 = ((($1017)) + 16|0); //@line 493 "../../iup_maskparse.c"
  $1019 = HEAP32[$1018>>2]|0; //@line 493 "../../iup_maskparse.c"
  $1020 = (($1019) + ($1016<<4)|0); //@line 493 "../../iup_maskparse.c"
  $1021 = ((($1020)) + 12|0); //@line 493 "../../iup_maskparse.c"
  HEAP32[$1021>>2] = $1014; //@line 493 "../../iup_maskparse.c"
 }
 $1022 = $1; //@line 495 "../../iup_maskparse.c"
 $1023 = ((($1022)) + 4|0); //@line 495 "../../iup_maskparse.c"
 $1024 = HEAP32[$1023>>2]|0; //@line 495 "../../iup_maskparse.c"
 $1025 = (($1024) - 1)|0; //@line 495 "../../iup_maskparse.c"
 $1026 = $1; //@line 495 "../../iup_maskparse.c"
 $1027 = ((($1026)) + 16|0); //@line 495 "../../iup_maskparse.c"
 $1028 = HEAP32[$1027>>2]|0; //@line 495 "../../iup_maskparse.c"
 $1029 = (($1028) + ($1025<<4)|0); //@line 495 "../../iup_maskparse.c"
 $1030 = ((($1029)) + 8|0); //@line 495 "../../iup_maskparse.c"
 $1031 = HEAP32[$1030>>2]|0; //@line 495 "../../iup_maskparse.c"
 $1032 = $1; //@line 495 "../../iup_maskparse.c"
 $1033 = ((($1032)) + 4|0); //@line 495 "../../iup_maskparse.c"
 $1034 = HEAP32[$1033>>2]|0; //@line 495 "../../iup_maskparse.c"
 $1035 = ($1031|0)==($1034|0); //@line 495 "../../iup_maskparse.c"
 if ($1035) {
  $1036 = $1; //@line 496 "../../iup_maskparse.c"
  $1037 = ((($1036)) + 4|0); //@line 496 "../../iup_maskparse.c"
  $1038 = HEAP32[$1037>>2]|0; //@line 496 "../../iup_maskparse.c"
  $1039 = (($1038) + 1)|0; //@line 496 "../../iup_maskparse.c"
  $1040 = $1; //@line 496 "../../iup_maskparse.c"
  $1041 = ((($1040)) + 4|0); //@line 496 "../../iup_maskparse.c"
  $1042 = HEAP32[$1041>>2]|0; //@line 496 "../../iup_maskparse.c"
  $1043 = (($1042) - 1)|0; //@line 496 "../../iup_maskparse.c"
  $1044 = $1; //@line 496 "../../iup_maskparse.c"
  $1045 = ((($1044)) + 16|0); //@line 496 "../../iup_maskparse.c"
  $1046 = HEAP32[$1045>>2]|0; //@line 496 "../../iup_maskparse.c"
  $1047 = (($1046) + ($1043<<4)|0); //@line 496 "../../iup_maskparse.c"
  $1048 = ((($1047)) + 8|0); //@line 496 "../../iup_maskparse.c"
  HEAP32[$1048>>2] = $1039; //@line 496 "../../iup_maskparse.c"
 }
 $1049 = $1; //@line 498 "../../iup_maskparse.c"
 $1050 = ((($1049)) + 4|0); //@line 498 "../../iup_maskparse.c"
 $1051 = HEAP32[$1050>>2]|0; //@line 498 "../../iup_maskparse.c"
 $1052 = (($1051) - 1)|0; //@line 498 "../../iup_maskparse.c"
 $1053 = $1; //@line 498 "../../iup_maskparse.c"
 $1054 = ((($1053)) + 16|0); //@line 498 "../../iup_maskparse.c"
 $1055 = HEAP32[$1054>>2]|0; //@line 498 "../../iup_maskparse.c"
 $1056 = (($1055) + ($1052<<4)|0); //@line 498 "../../iup_maskparse.c"
 $1057 = ((($1056)) + 12|0); //@line 498 "../../iup_maskparse.c"
 $1058 = HEAP32[$1057>>2]|0; //@line 498 "../../iup_maskparse.c"
 $1059 = $1; //@line 498 "../../iup_maskparse.c"
 $1060 = ((($1059)) + 4|0); //@line 498 "../../iup_maskparse.c"
 $1061 = HEAP32[$1060>>2]|0; //@line 498 "../../iup_maskparse.c"
 $1062 = ($1058|0)==($1061|0); //@line 498 "../../iup_maskparse.c"
 if ($1062) {
  $1063 = $1; //@line 499 "../../iup_maskparse.c"
  $1064 = ((($1063)) + 4|0); //@line 499 "../../iup_maskparse.c"
  $1065 = HEAP32[$1064>>2]|0; //@line 499 "../../iup_maskparse.c"
  $1066 = (($1065) + 1)|0; //@line 499 "../../iup_maskparse.c"
  $1067 = $1; //@line 499 "../../iup_maskparse.c"
  $1068 = ((($1067)) + 4|0); //@line 499 "../../iup_maskparse.c"
  $1069 = HEAP32[$1068>>2]|0; //@line 499 "../../iup_maskparse.c"
  $1070 = (($1069) - 1)|0; //@line 499 "../../iup_maskparse.c"
  $1071 = $1; //@line 499 "../../iup_maskparse.c"
  $1072 = ((($1071)) + 16|0); //@line 499 "../../iup_maskparse.c"
  $1073 = HEAP32[$1072>>2]|0; //@line 499 "../../iup_maskparse.c"
  $1074 = (($1073) + ($1070<<4)|0); //@line 499 "../../iup_maskparse.c"
  $1075 = ((($1074)) + 12|0); //@line 499 "../../iup_maskparse.c"
  HEAP32[$1075>>2] = $1066; //@line 499 "../../iup_maskparse.c"
 }
 $1076 = $1; //@line 501 "../../iup_maskparse.c"
 $1077 = ((($1076)) + 8|0); //@line 501 "../../iup_maskparse.c"
 $1078 = HEAP32[$1077>>2]|0; //@line 501 "../../iup_maskparse.c"
 $1079 = (($1078) + 1)|0; //@line 501 "../../iup_maskparse.c"
 HEAP32[$1077>>2] = $1079; //@line 501 "../../iup_maskparse.c"
 $1080 = $1; //@line 502 "../../iup_maskparse.c"
 _iMaskParseNewState($1080); //@line 502 "../../iup_maskparse.c"
 $1081 = $1; //@line 504 "../../iup_maskparse.c"
 $1082 = $1; //@line 504 "../../iup_maskparse.c"
 $1083 = ((($1082)) + 4|0); //@line 504 "../../iup_maskparse.c"
 $1084 = HEAP32[$1083>>2]|0; //@line 504 "../../iup_maskparse.c"
 $1085 = $1; //@line 504 "../../iup_maskparse.c"
 $1086 = ((($1085)) + 4|0); //@line 504 "../../iup_maskparse.c"
 $1087 = HEAP32[$1086>>2]|0; //@line 504 "../../iup_maskparse.c"
 $1088 = (($1087) + 1)|0; //@line 504 "../../iup_maskparse.c"
 $1089 = $1; //@line 504 "../../iup_maskparse.c"
 $1090 = ((($1089)) + 4|0); //@line 504 "../../iup_maskparse.c"
 $1091 = HEAP32[$1090>>2]|0; //@line 504 "../../iup_maskparse.c"
 $1092 = (($1091) + 1)|0; //@line 504 "../../iup_maskparse.c"
 _iMaskParseSetState($1081,$1084,0,1,$1088,$1092); //@line 504 "../../iup_maskparse.c"
 $1093 = $1; //@line 506 "../../iup_maskparse.c"
 _iMaskParseNewState($1093); //@line 506 "../../iup_maskparse.c"
 $1121 = $2; //@line 521 "../../iup_maskparse.c"
 STACKTOP = sp;return ($1121|0); //@line 521 "../../iup_maskparse.c"
}
function _iMaskParseError($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 526 "../../iup_maskparse.c"
 $3 = ((($2)) + 84|0); //@line 526 "../../iup_maskparse.c"
 _longjmp(($3|0),1); //@line 526 "../../iup_maskparse.c"
 // unreachable; //@line 526 "../../iup_maskparse.c"
}
function _iupMenuPopup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 _iMenuAdjustPos($4,$5); //@line 146 "../../iup_menu.c"
 $6 = $3; //@line 147 "../../iup_menu.c"
 $7 = HEAP32[$4>>2]|0; //@line 147 "../../iup_menu.c"
 $8 = HEAP32[$5>>2]|0; //@line 147 "../../iup_menu.c"
 $9 = (_iupdrvMenuPopup($6,$7,$8)|0); //@line 147 "../../iup_menu.c"
 STACKTOP = sp;return ($9|0); //@line 147 "../../iup_menu.c"
}
function _iMenuAdjustPos($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 HEAP32[$4>>2] = 0; //@line 76 "../../iup_menu.c"
 HEAP32[$5>>2] = 0; //@line 76 "../../iup_menu.c"
 HEAP32[$6>>2] = 0; //@line 77 "../../iup_menu.c"
 HEAP32[$7>>2] = 0; //@line 77 "../../iup_menu.c"
 $8 = $2; //@line 79 "../../iup_menu.c"
 $9 = HEAP32[$8>>2]|0; //@line 79 "../../iup_menu.c"
 $10 = ($9|0)==(65535); //@line 79 "../../iup_menu.c"
 if ($10) {
  label = 7;
 } else {
  $11 = $3; //@line 79 "../../iup_menu.c"
  $12 = HEAP32[$11>>2]|0; //@line 79 "../../iup_menu.c"
  $13 = ($12|0)==(65535); //@line 79 "../../iup_menu.c"
  if ($13) {
   label = 7;
  } else {
   $14 = $2; //@line 80 "../../iup_menu.c"
   $15 = HEAP32[$14>>2]|0; //@line 80 "../../iup_menu.c"
   $16 = ($15|0)==(65533); //@line 80 "../../iup_menu.c"
   if ($16) {
    label = 7;
   } else {
    $17 = $3; //@line 80 "../../iup_menu.c"
    $18 = HEAP32[$17>>2]|0; //@line 80 "../../iup_menu.c"
    $19 = ($18|0)==(65533); //@line 80 "../../iup_menu.c"
    if ($19) {
     label = 7;
    } else {
     $20 = $2; //@line 81 "../../iup_menu.c"
     $21 = HEAP32[$20>>2]|0; //@line 81 "../../iup_menu.c"
     $22 = ($21|0)==(65530); //@line 81 "../../iup_menu.c"
     if ($22) {
      label = 7;
     } else {
      $23 = $3; //@line 81 "../../iup_menu.c"
      $24 = HEAP32[$23>>2]|0; //@line 81 "../../iup_menu.c"
      $25 = ($24|0)==(65530); //@line 81 "../../iup_menu.c"
      if ($25) {
       label = 7;
      }
     }
    }
   }
  }
 }
 if ((label|0) == 7) {
  _iupdrvGetScreenSize($6,$7); //@line 82 "../../iup_menu.c"
 }
 $26 = $2; //@line 84 "../../iup_menu.c"
 $27 = HEAP32[$26>>2]|0; //@line 84 "../../iup_menu.c"
 $28 = ($27|0)==(65532); //@line 84 "../../iup_menu.c"
 if ($28) {
  label = 10;
 } else {
  $29 = $3; //@line 84 "../../iup_menu.c"
  $30 = HEAP32[$29>>2]|0; //@line 84 "../../iup_menu.c"
  $31 = ($30|0)==(65532); //@line 84 "../../iup_menu.c"
  if ($31) {
   label = 10;
  }
 }
 if ((label|0) == 10) {
  _iupdrvGetCursorPos($4,$5); //@line 85 "../../iup_menu.c"
 }
 $32 = $2; //@line 87 "../../iup_menu.c"
 $33 = HEAP32[$32>>2]|0; //@line 87 "../../iup_menu.c"
 switch ($33|0) {
 case 65535:  {
  $34 = HEAP32[$6>>2]|0; //@line 90 "../../iup_menu.c"
  $35 = (($34|0) / 2)&-1; //@line 90 "../../iup_menu.c"
  $36 = $2; //@line 90 "../../iup_menu.c"
  HEAP32[$36>>2] = $35; //@line 90 "../../iup_menu.c"
  break;
 }
 case 65534:  {
  $37 = $2; //@line 93 "../../iup_menu.c"
  HEAP32[$37>>2] = 0; //@line 93 "../../iup_menu.c"
  break;
 }
 case 65533:  {
  $38 = HEAP32[$6>>2]|0; //@line 96 "../../iup_menu.c"
  $39 = $2; //@line 96 "../../iup_menu.c"
  HEAP32[$39>>2] = $38; //@line 96 "../../iup_menu.c"
  break;
 }
 case 65532:  {
  $40 = HEAP32[$4>>2]|0; //@line 99 "../../iup_menu.c"
  $41 = $2; //@line 99 "../../iup_menu.c"
  HEAP32[$41>>2] = $40; //@line 99 "../../iup_menu.c"
  break;
 }
 default: {
 }
 }
 $42 = $3; //@line 103 "../../iup_menu.c"
 $43 = HEAP32[$42>>2]|0; //@line 103 "../../iup_menu.c"
 switch ($43|0) {
 case 65535:  {
  $44 = HEAP32[$7>>2]|0; //@line 106 "../../iup_menu.c"
  $45 = (($44|0) / 2)&-1; //@line 106 "../../iup_menu.c"
  $46 = $3; //@line 106 "../../iup_menu.c"
  HEAP32[$46>>2] = $45; //@line 106 "../../iup_menu.c"
  break;
 }
 case 65534:  {
  $47 = $3; //@line 109 "../../iup_menu.c"
  HEAP32[$47>>2] = 0; //@line 109 "../../iup_menu.c"
  break;
 }
 case 65533:  {
  $48 = HEAP32[$7>>2]|0; //@line 112 "../../iup_menu.c"
  $49 = $3; //@line 112 "../../iup_menu.c"
  HEAP32[$49>>2] = $48; //@line 112 "../../iup_menu.c"
  break;
 }
 case 65532:  {
  $50 = HEAP32[$5>>2]|0; //@line 115 "../../iup_menu.c"
  $51 = $3; //@line 115 "../../iup_menu.c"
  HEAP32[$51>>2] = $50; //@line 115 "../../iup_menu.c"
  break;
 }
 default: {
 }
 }
 $52 = $2; //@line 119 "../../iup_menu.c"
 $53 = $3; //@line 119 "../../iup_menu.c"
 _iupdrvAddScreenOffset($52,$53,1); //@line 119 "../../iup_menu.c"
 STACKTOP = sp;return; //@line 120 "../../iup_menu.c"
}
function _iupSeparatorNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 204 "../../iup_menu.c"
 $0 = $1; //@line 204 "../../iup_menu.c"
 $2 = $0; //@line 206 "../../iup_menu.c"
 HEAP32[$2>>2] = 14665; //@line 206 "../../iup_menu.c"
 $3 = $0; //@line 207 "../../iup_menu.c"
 $4 = ((($3)) + 4|0); //@line 207 "../../iup_menu.c"
 HEAP32[$4>>2] = 0; //@line 207 "../../iup_menu.c"
 $5 = $0; //@line 208 "../../iup_menu.c"
 $6 = ((($5)) + 8|0); //@line 208 "../../iup_menu.c"
 HEAP32[$6>>2] = 5; //@line 208 "../../iup_menu.c"
 $7 = $0; //@line 209 "../../iup_menu.c"
 $8 = ((($7)) + 12|0); //@line 209 "../../iup_menu.c"
 HEAP32[$8>>2] = 0; //@line 209 "../../iup_menu.c"
 $9 = $0; //@line 210 "../../iup_menu.c"
 $10 = ((($9)) + 16|0); //@line 210 "../../iup_menu.c"
 HEAP32[$10>>2] = 0; //@line 210 "../../iup_menu.c"
 $11 = $0; //@line 212 "../../iup_menu.c"
 $12 = ((($11)) + 32|0); //@line 212 "../../iup_menu.c"
 HEAP32[$12>>2] = 344; //@line 212 "../../iup_menu.c"
 $13 = $0; //@line 215 "../../iup_menu.c"
 _iupClassRegisterAttribute($13,17776,64,0,0,0,37); //@line 215 "../../iup_menu.c"
 $14 = $0; //@line 216 "../../iup_menu.c"
 _iupClassRegisterAttribute($14,14675,0,65,0,0,9); //@line 216 "../../iup_menu.c"
 $15 = $0; //@line 218 "../../iup_menu.c"
 _iupdrvSeparatorInitClass($15); //@line 218 "../../iup_menu.c"
 $16 = $0; //@line 220 "../../iup_menu.c"
 STACKTOP = sp;return ($16|0); //@line 220 "../../iup_menu.c"
}
function _iupItemNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 225 "../../iup_menu.c"
 $0 = $1; //@line 225 "../../iup_menu.c"
 $2 = $0; //@line 227 "../../iup_menu.c"
 HEAP32[$2>>2] = 14680; //@line 227 "../../iup_menu.c"
 $3 = $0; //@line 228 "../../iup_menu.c"
 $4 = ((($3)) + 4|0); //@line 228 "../../iup_menu.c"
 HEAP32[$4>>2] = 17796; //@line 228 "../../iup_menu.c"
 $5 = $0; //@line 229 "../../iup_menu.c"
 $6 = ((($5)) + 8|0); //@line 229 "../../iup_menu.c"
 HEAP32[$6>>2] = 5; //@line 229 "../../iup_menu.c"
 $7 = $0; //@line 230 "../../iup_menu.c"
 $8 = ((($7)) + 12|0); //@line 230 "../../iup_menu.c"
 HEAP32[$8>>2] = 0; //@line 230 "../../iup_menu.c"
 $9 = $0; //@line 231 "../../iup_menu.c"
 $10 = ((($9)) + 16|0); //@line 231 "../../iup_menu.c"
 HEAP32[$10>>2] = 1; //@line 231 "../../iup_menu.c"
 $11 = $0; //@line 234 "../../iup_menu.c"
 $12 = ((($11)) + 32|0); //@line 234 "../../iup_menu.c"
 HEAP32[$12>>2] = 345; //@line 234 "../../iup_menu.c"
 $13 = $0; //@line 235 "../../iup_menu.c"
 $14 = ((($13)) + 40|0); //@line 235 "../../iup_menu.c"
 HEAP32[$14>>2] = 346; //@line 235 "../../iup_menu.c"
 $15 = $0; //@line 238 "../../iup_menu.c"
 _iupClassRegisterCallback($15,14685,362470); //@line 238 "../../iup_menu.c"
 $16 = $0; //@line 239 "../../iup_menu.c"
 _iupClassRegisterCallback($16,20479,362470); //@line 239 "../../iup_menu.c"
 $17 = $0; //@line 242 "../../iup_menu.c"
 _iupClassRegisterCallback($17,15572,362470); //@line 242 "../../iup_menu.c"
 $18 = $0; //@line 243 "../../iup_menu.c"
 _iupClassRegisterCallback($18,15563,362470); //@line 243 "../../iup_menu.c"
 $19 = $0; //@line 244 "../../iup_menu.c"
 _iupClassRegisterCallback($19,14698,362470); //@line 244 "../../iup_menu.c"
 $20 = $0; //@line 247 "../../iup_menu.c"
 _iupClassRegisterAttribute($20,17776,64,0,0,0,37); //@line 247 "../../iup_menu.c"
 $21 = $0; //@line 248 "../../iup_menu.c"
 _iupClassRegisterAttribute($21,14675,0,65,0,0,9); //@line 248 "../../iup_menu.c"
 $22 = $0; //@line 250 "../../iup_menu.c"
 _iupClassRegisterAttribute($22,14706,0,0,0,0,9); //@line 250 "../../iup_menu.c"
 $23 = $0; //@line 251 "../../iup_menu.c"
 _iupClassRegisterAttribute($23,20286,0,0,0,0,9); //@line 251 "../../iup_menu.c"
 $24 = $0; //@line 253 "../../iup_menu.c"
 _iupdrvItemInitClass($24); //@line 253 "../../iup_menu.c"
 $25 = $0; //@line 255 "../../iup_menu.c"
 STACKTOP = sp;return ($25|0); //@line 255 "../../iup_menu.c"
}
function _iItemCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 156 "../../iup_menu.c"
 $5 = ($4|0)!=(0|0); //@line 156 "../../iup_menu.c"
 if (!($5)) {
  STACKTOP = sp;return 0; //@line 161 "../../iup_menu.c"
 }
 $6 = $3; //@line 158 "../../iup_menu.c"
 $7 = HEAP32[$6>>2]|0; //@line 158 "../../iup_menu.c"
 $8 = ($7|0)!=(0|0); //@line 158 "../../iup_menu.c"
 if ($8) {
  $9 = $2; //@line 158 "../../iup_menu.c"
  $10 = $3; //@line 158 "../../iup_menu.c"
  $11 = HEAP32[$10>>2]|0; //@line 158 "../../iup_menu.c"
  _iupAttribSetStr($9,20508,$11); //@line 158 "../../iup_menu.c"
 }
 $12 = $3; //@line 159 "../../iup_menu.c"
 $13 = ((($12)) + 4|0); //@line 159 "../../iup_menu.c"
 $14 = HEAP32[$13>>2]|0; //@line 159 "../../iup_menu.c"
 $15 = ($14|0)!=(0|0); //@line 159 "../../iup_menu.c"
 if (!($15)) {
  STACKTOP = sp;return 0; //@line 161 "../../iup_menu.c"
 }
 $16 = $2; //@line 159 "../../iup_menu.c"
 $17 = $3; //@line 159 "../../iup_menu.c"
 $18 = ((($17)) + 4|0); //@line 159 "../../iup_menu.c"
 $19 = HEAP32[$18>>2]|0; //@line 159 "../../iup_menu.c"
 _iupAttribSetStr($16,20479,$19); //@line 159 "../../iup_menu.c"
 STACKTOP = sp;return 0; //@line 161 "../../iup_menu.c"
}
function _iupSubmenuNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 260 "../../iup_menu.c"
 $0 = $1; //@line 260 "../../iup_menu.c"
 $2 = $0; //@line 262 "../../iup_menu.c"
 HEAP32[$2>>2] = 14717; //@line 262 "../../iup_menu.c"
 $3 = $0; //@line 263 "../../iup_menu.c"
 $4 = ((($3)) + 4|0); //@line 263 "../../iup_menu.c"
 HEAP32[$4>>2] = 14725; //@line 263 "../../iup_menu.c"
 $5 = $0; //@line 264 "../../iup_menu.c"
 $6 = ((($5)) + 8|0); //@line 264 "../../iup_menu.c"
 HEAP32[$6>>2] = 5; //@line 264 "../../iup_menu.c"
 $7 = $0; //@line 265 "../../iup_menu.c"
 $8 = ((($7)) + 12|0); //@line 265 "../../iup_menu.c"
 HEAP32[$8>>2] = 2; //@line 265 "../../iup_menu.c"
 $9 = $0; //@line 266 "../../iup_menu.c"
 $10 = ((($9)) + 16|0); //@line 266 "../../iup_menu.c"
 HEAP32[$10>>2] = 1; //@line 266 "../../iup_menu.c"
 $11 = $0; //@line 269 "../../iup_menu.c"
 $12 = ((($11)) + 32|0); //@line 269 "../../iup_menu.c"
 HEAP32[$12>>2] = 347; //@line 269 "../../iup_menu.c"
 $13 = $0; //@line 270 "../../iup_menu.c"
 $14 = ((($13)) + 40|0); //@line 270 "../../iup_menu.c"
 HEAP32[$14>>2] = 348; //@line 270 "../../iup_menu.c"
 $15 = $0; //@line 273 "../../iup_menu.c"
 _iupClassRegisterCallback($15,14685,362470); //@line 273 "../../iup_menu.c"
 $16 = $0; //@line 276 "../../iup_menu.c"
 _iupClassRegisterCallback($16,15572,362470); //@line 276 "../../iup_menu.c"
 $17 = $0; //@line 277 "../../iup_menu.c"
 _iupClassRegisterCallback($17,15563,362470); //@line 277 "../../iup_menu.c"
 $18 = $0; //@line 280 "../../iup_menu.c"
 _iupClassRegisterAttribute($18,17776,64,0,0,0,37); //@line 280 "../../iup_menu.c"
 $19 = $0; //@line 281 "../../iup_menu.c"
 _iupClassRegisterAttribute($19,14675,0,65,0,0,9); //@line 281 "../../iup_menu.c"
 $20 = $0; //@line 283 "../../iup_menu.c"
 _iupClassRegisterAttribute($20,20286,0,0,0,0,9); //@line 283 "../../iup_menu.c"
 $21 = $0; //@line 285 "../../iup_menu.c"
 _iupdrvSubmenuInitClass($21); //@line 285 "../../iup_menu.c"
 $22 = $0; //@line 287 "../../iup_menu.c"
 STACKTOP = sp;return ($22|0); //@line 287 "../../iup_menu.c"
}
function _iSubmenuCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 166 "../../iup_menu.c"
 $6 = ($5|0)!=(0|0); //@line 166 "../../iup_menu.c"
 if (!($6)) {
  STACKTOP = sp;return 0; //@line 176 "../../iup_menu.c"
 }
 $7 = $3; //@line 168 "../../iup_menu.c"
 $8 = HEAP32[$7>>2]|0; //@line 168 "../../iup_menu.c"
 $9 = ($8|0)!=(0|0); //@line 168 "../../iup_menu.c"
 if ($9) {
  $10 = $2; //@line 168 "../../iup_menu.c"
  $11 = $3; //@line 168 "../../iup_menu.c"
  $12 = HEAP32[$11>>2]|0; //@line 168 "../../iup_menu.c"
  _iupAttribSetStr($10,20508,$12); //@line 168 "../../iup_menu.c"
 }
 $13 = $3; //@line 169 "../../iup_menu.c"
 $14 = ((($13)) + 4|0); //@line 169 "../../iup_menu.c"
 $15 = HEAP32[$14>>2]|0; //@line 169 "../../iup_menu.c"
 $16 = ($15|0)!=(0|0); //@line 169 "../../iup_menu.c"
 if (!($16)) {
  STACKTOP = sp;return 0; //@line 176 "../../iup_menu.c"
 }
 $17 = $3; //@line 171 "../../iup_menu.c"
 $18 = ((($17)) + 4|0); //@line 171 "../../iup_menu.c"
 $19 = HEAP32[$18>>2]|0; //@line 171 "../../iup_menu.c"
 $4 = $19; //@line 171 "../../iup_menu.c"
 $20 = $4; //@line 172 "../../iup_menu.c"
 $21 = ((($20)) + 4|0); //@line 172 "../../iup_menu.c"
 $22 = HEAP32[$21>>2]|0; //@line 172 "../../iup_menu.c"
 $23 = ((($22)) + 8|0); //@line 172 "../../iup_menu.c"
 $24 = HEAP32[$23>>2]|0; //@line 172 "../../iup_menu.c"
 $25 = ($24|0)==(5); //@line 172 "../../iup_menu.c"
 if (!($25)) {
  STACKTOP = sp;return 0; //@line 176 "../../iup_menu.c"
 }
 $26 = $2; //@line 173 "../../iup_menu.c"
 $27 = $4; //@line 173 "../../iup_menu.c"
 (_IupAppend($26,$27)|0); //@line 173 "../../iup_menu.c"
 STACKTOP = sp;return 0; //@line 176 "../../iup_menu.c"
}
function _iupMenuNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 292 "../../iup_menu.c"
 $0 = $1; //@line 292 "../../iup_menu.c"
 $2 = $0; //@line 294 "../../iup_menu.c"
 HEAP32[$2>>2] = 14728; //@line 294 "../../iup_menu.c"
 $3 = $0; //@line 295 "../../iup_menu.c"
 $4 = ((($3)) + 4|0); //@line 295 "../../iup_menu.c"
 HEAP32[$4>>2] = 20071; //@line 295 "../../iup_menu.c"
 $5 = $0; //@line 296 "../../iup_menu.c"
 $6 = ((($5)) + 8|0); //@line 296 "../../iup_menu.c"
 HEAP32[$6>>2] = 5; //@line 296 "../../iup_menu.c"
 $7 = $0; //@line 297 "../../iup_menu.c"
 $8 = ((($7)) + 12|0); //@line 297 "../../iup_menu.c"
 HEAP32[$8>>2] = 1; //@line 297 "../../iup_menu.c"
 $9 = $0; //@line 298 "../../iup_menu.c"
 $10 = ((($9)) + 16|0); //@line 298 "../../iup_menu.c"
 HEAP32[$10>>2] = 1; //@line 298 "../../iup_menu.c"
 $11 = $0; //@line 301 "../../iup_menu.c"
 $12 = ((($11)) + 32|0); //@line 301 "../../iup_menu.c"
 HEAP32[$12>>2] = 349; //@line 301 "../../iup_menu.c"
 $13 = $0; //@line 302 "../../iup_menu.c"
 $14 = ((($13)) + 40|0); //@line 302 "../../iup_menu.c"
 HEAP32[$14>>2] = 350; //@line 302 "../../iup_menu.c"
 $15 = $0; //@line 305 "../../iup_menu.c"
 _iupClassRegisterCallback($15,14733,362470); //@line 305 "../../iup_menu.c"
 $16 = $0; //@line 306 "../../iup_menu.c"
 _iupClassRegisterCallback($16,14741,362470); //@line 306 "../../iup_menu.c"
 $17 = $0; //@line 309 "../../iup_menu.c"
 _iupClassRegisterCallback($17,15572,362470); //@line 309 "../../iup_menu.c"
 $18 = $0; //@line 310 "../../iup_menu.c"
 _iupClassRegisterCallback($18,15563,362470); //@line 310 "../../iup_menu.c"
 $19 = $0; //@line 313 "../../iup_menu.c"
 _iupClassRegisterAttribute($19,17776,64,0,0,0,37); //@line 313 "../../iup_menu.c"
 $20 = $0; //@line 314 "../../iup_menu.c"
 _iupClassRegisterAttribute($20,14675,0,65,0,0,9); //@line 314 "../../iup_menu.c"
 $21 = $0; //@line 316 "../../iup_menu.c"
 _iupClassRegisterAttribute($21,17799,0,0,0,0,9); //@line 316 "../../iup_menu.c"
 $22 = $0; //@line 318 "../../iup_menu.c"
 _iupdrvMenuInitClass($22); //@line 318 "../../iup_menu.c"
 $23 = $0; //@line 320 "../../iup_menu.c"
 STACKTOP = sp;return ($23|0); //@line 320 "../../iup_menu.c"
}
function _iMenuCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_calloc(1,4)|0); //@line 181 "../../iup_menu.c"
 $7 = $2; //@line 181 "../../iup_menu.c"
 $8 = ((($7)) + 72|0); //@line 181 "../../iup_menu.c"
 HEAP32[$8>>2] = $6; //@line 181 "../../iup_menu.c"
 $9 = $3; //@line 183 "../../iup_menu.c"
 $10 = ($9|0)!=(0|0); //@line 183 "../../iup_menu.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 195 "../../iup_menu.c"
 }
 $11 = $3; //@line 185 "../../iup_menu.c"
 $4 = $11; //@line 185 "../../iup_menu.c"
 while(1) {
  $12 = $4; //@line 186 "../../iup_menu.c"
  $13 = HEAP32[$12>>2]|0; //@line 186 "../../iup_menu.c"
  $14 = ($13|0)!=(0|0); //@line 186 "../../iup_menu.c"
  if (!($14)) {
   break;
  }
  $15 = $4; //@line 188 "../../iup_menu.c"
  $16 = HEAP32[$15>>2]|0; //@line 188 "../../iup_menu.c"
  $5 = $16; //@line 188 "../../iup_menu.c"
  $17 = $5; //@line 189 "../../iup_menu.c"
  $18 = ((($17)) + 4|0); //@line 189 "../../iup_menu.c"
  $19 = HEAP32[$18>>2]|0; //@line 189 "../../iup_menu.c"
  $20 = ((($19)) + 8|0); //@line 189 "../../iup_menu.c"
  $21 = HEAP32[$20>>2]|0; //@line 189 "../../iup_menu.c"
  $22 = ($21|0)==(5); //@line 189 "../../iup_menu.c"
  if ($22) {
   $23 = $2; //@line 190 "../../iup_menu.c"
   $24 = $5; //@line 190 "../../iup_menu.c"
   (_IupAppend($23,$24)|0); //@line 190 "../../iup_menu.c"
  }
  $25 = $4; //@line 191 "../../iup_menu.c"
  $26 = ((($25)) + 4|0); //@line 191 "../../iup_menu.c"
  $4 = $26; //@line 191 "../../iup_menu.c"
 }
 STACKTOP = sp;return 0; //@line 195 "../../iup_menu.c"
}
function _iupMessageDlgNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(15165)|0); //@line 29 "../../iup_messagedlg.c"
 $2 = (_iupClassNew($1)|0); //@line 29 "../../iup_messagedlg.c"
 $0 = $2; //@line 29 "../../iup_messagedlg.c"
 $3 = $0; //@line 31 "../../iup_messagedlg.c"
 HEAP32[$3>>2] = 14754; //@line 31 "../../iup_messagedlg.c"
 $4 = $0; //@line 32 "../../iup_messagedlg.c"
 $5 = ((($4)) + 8|0); //@line 32 "../../iup_messagedlg.c"
 HEAP32[$5>>2] = 3; //@line 32 "../../iup_messagedlg.c"
 $6 = $0; //@line 33 "../../iup_messagedlg.c"
 $7 = ((($6)) + 16|0); //@line 33 "../../iup_messagedlg.c"
 HEAP32[$7>>2] = 1; //@line 33 "../../iup_messagedlg.c"
 $8 = $0; //@line 35 "../../iup_messagedlg.c"
 $9 = ((($8)) + 32|0); //@line 35 "../../iup_messagedlg.c"
 HEAP32[$9>>2] = 351; //@line 35 "../../iup_messagedlg.c"
 $10 = $0; //@line 38 "../../iup_messagedlg.c"
 $11 = ((($10)) + 24|0); //@line 38 "../../iup_messagedlg.c"
 $12 = HEAP32[$11>>2]|0; //@line 38 "../../iup_messagedlg.c"
 $13 = ((($12)) + 72|0); //@line 38 "../../iup_messagedlg.c"
 HEAP32[$13>>2] = 0; //@line 38 "../../iup_messagedlg.c"
 $14 = $0; //@line 39 "../../iup_messagedlg.c"
 $15 = ((($14)) + 24|0); //@line 39 "../../iup_messagedlg.c"
 $16 = HEAP32[$15>>2]|0; //@line 39 "../../iup_messagedlg.c"
 $17 = ((($16)) + 84|0); //@line 39 "../../iup_messagedlg.c"
 HEAP32[$17>>2] = 0; //@line 39 "../../iup_messagedlg.c"
 $18 = $0; //@line 40 "../../iup_messagedlg.c"
 $19 = ((($18)) + 24|0); //@line 40 "../../iup_messagedlg.c"
 $20 = HEAP32[$19>>2]|0; //@line 40 "../../iup_messagedlg.c"
 $21 = ((($20)) + 44|0); //@line 40 "../../iup_messagedlg.c"
 HEAP32[$21>>2] = 0; //@line 40 "../../iup_messagedlg.c"
 $22 = $0; //@line 41 "../../iup_messagedlg.c"
 $23 = ((($22)) + 24|0); //@line 41 "../../iup_messagedlg.c"
 $24 = HEAP32[$23>>2]|0; //@line 41 "../../iup_messagedlg.c"
 $25 = ((($24)) + 48|0); //@line 41 "../../iup_messagedlg.c"
 HEAP32[$25>>2] = 0; //@line 41 "../../iup_messagedlg.c"
 $26 = $0; //@line 43 "../../iup_messagedlg.c"
 _iupdrvMessageDlgInitClass($26); //@line 43 "../../iup_messagedlg.c"
 $27 = $0; //@line 46 "../../iup_messagedlg.c"
 _iupClassRegisterAttribute($27,14765,0,0,(-1),14776,1); //@line 46 "../../iup_messagedlg.c"
 $28 = $0; //@line 47 "../../iup_messagedlg.c"
 _iupClassRegisterAttribute($28,14784,0,0,(-1),16745,1); //@line 47 "../../iup_messagedlg.c"
 $29 = $0; //@line 48 "../../iup_messagedlg.c"
 _iupClassRegisterAttribute($29,14792,0,0,(-1),19938,1); //@line 48 "../../iup_messagedlg.c"
 $30 = $0; //@line 49 "../../iup_messagedlg.c"
 _iupClassRegisterAttribute($30,14806,0,0,(-1),19938,1); //@line 49 "../../iup_messagedlg.c"
 $31 = $0; //@line 51 "../../iup_messagedlg.c"
 STACKTOP = sp;return ($31|0); //@line 51 "../../iup_messagedlg.c"
}
function _iupNamesInit() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupTableCreate(11)|0); //@line 25 "../../iup_names.c"
 HEAP32[6117] = $0; //@line 25 "../../iup_names.c"
 return; //@line 26 "../../iup_names.c"
}
function _iupRemoveNames($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 97 "../../iup_names.c"
 $4 = (_iupAttribGet($3,14821)|0); //@line 97 "../../iup_names.c"
 $2 = $4; //@line 97 "../../iup_names.c"
 $5 = $2; //@line 98 "../../iup_names.c"
 $6 = ($5|0)!=(0|0); //@line 98 "../../iup_names.c"
 if ($6) {
  $7 = HEAP32[6117]|0; //@line 99 "../../iup_names.c"
  $8 = $2; //@line 99 "../../iup_names.c"
  _iupTableRemove($7,$8); //@line 99 "../../iup_names.c"
 }
 $9 = $1; //@line 102 "../../iup_names.c"
 $10 = (_iupAttribGetHandleName($9)|0); //@line 102 "../../iup_names.c"
 $2 = $10; //@line 102 "../../iup_names.c"
 $11 = $2; //@line 103 "../../iup_names.c"
 $12 = ($11|0)!=(0|0); //@line 103 "../../iup_names.c"
 if (!($12)) {
  $15 = $1; //@line 106 "../../iup_names.c"
  (_iupBaseSetNameAttrib($15,0)|0); //@line 106 "../../iup_names.c"
  STACKTOP = sp;return; //@line 109 "../../iup_names.c"
 }
 $13 = HEAP32[6117]|0; //@line 104 "../../iup_names.c"
 $14 = $2; //@line 104 "../../iup_names.c"
 _iupTableRemove($13,$14); //@line 104 "../../iup_names.c"
 $15 = $1; //@line 106 "../../iup_names.c"
 (_iupBaseSetNameAttrib($15,0)|0); //@line 106 "../../iup_names.c"
 STACKTOP = sp;return; //@line 109 "../../iup_names.c"
}
function _IupGetHandle($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 113 "../../iup_names.c"
 $4 = ($3|0)!=(0|0); //@line 113 "../../iup_names.c"
 if ($4) {
  $5 = HEAP32[6117]|0; //@line 115 "../../iup_names.c"
  $6 = $2; //@line 115 "../../iup_names.c"
  $7 = (_iupTableGet($5,$6)|0); //@line 115 "../../iup_names.c"
  $1 = $7; //@line 115 "../../iup_names.c"
 } else {
  $1 = 0; //@line 114 "../../iup_names.c"
 }
 $8 = $1; //@line 116 "../../iup_names.c"
 STACKTOP = sp;return ($8|0); //@line 116 "../../iup_names.c"
}
function _IupSetHandle($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 123 "../../iup_names.c"
 $7 = ($6|0)!=(0|0); //@line 123 "../../iup_names.c"
 if (!($7)) {
  $2 = 0; //@line 124 "../../iup_names.c"
  $26 = $2; //@line 146 "../../iup_names.c"
  STACKTOP = sp;return ($26|0); //@line 146 "../../iup_names.c"
 }
 $8 = HEAP32[6117]|0; //@line 126 "../../iup_names.c"
 $9 = $3; //@line 126 "../../iup_names.c"
 $10 = (_iupTableGet($8,$9)|0); //@line 126 "../../iup_names.c"
 $5 = $10; //@line 126 "../../iup_names.c"
 $11 = $4; //@line 128 "../../iup_names.c"
 $12 = ($11|0)!=(0|0); //@line 128 "../../iup_names.c"
 $13 = HEAP32[6117]|0; //@line 130 "../../iup_names.c"
 $14 = $3; //@line 130 "../../iup_names.c"
 if ($12) {
  $15 = $4; //@line 130 "../../iup_names.c"
  _iupTableSet($13,$14,$15,0); //@line 130 "../../iup_names.c"
  $16 = $4; //@line 133 "../../iup_names.c"
  $17 = (_iupObjectCheck($16)|0); //@line 133 "../../iup_names.c"
  $18 = ($17|0)!=(0); //@line 133 "../../iup_names.c"
  if ($18) {
   $19 = $4; //@line 134 "../../iup_names.c"
   $20 = $3; //@line 134 "../../iup_names.c"
   _iupAttribSetStr($19,14821,$20); //@line 134 "../../iup_names.c"
  }
 } else {
  _iupTableRemove($13,$14); //@line 138 "../../iup_names.c"
  $21 = $5; //@line 141 "../../iup_names.c"
  $22 = (_iupObjectCheck($21)|0); //@line 141 "../../iup_names.c"
  $23 = ($22|0)!=(0); //@line 141 "../../iup_names.c"
  if ($23) {
   $24 = $5; //@line 142 "../../iup_names.c"
   _iupAttribSet($24,14821,0); //@line 142 "../../iup_names.c"
  }
 }
 $25 = $5; //@line 145 "../../iup_names.c"
 $2 = $25; //@line 145 "../../iup_names.c"
 $26 = $2; //@line 146 "../../iup_names.c"
 STACKTOP = sp;return ($26|0); //@line 146 "../../iup_names.c"
}
function _IupGetName($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 214 "../../iup_names.c"
 $5 = ($4|0)!=(0|0); //@line 214 "../../iup_names.c"
 do {
  if ($5) {
   $6 = $2; //@line 217 "../../iup_names.c"
   $7 = (_iupObjectCheck($6)|0); //@line 217 "../../iup_names.c"
   $8 = ($7|0)!=(0); //@line 217 "../../iup_names.c"
   if ($8) {
    $9 = $2; //@line 220 "../../iup_names.c"
    $10 = (_iupAttribGet($9,14821)|0); //@line 220 "../../iup_names.c"
    $3 = $10; //@line 220 "../../iup_names.c"
    $11 = $3; //@line 221 "../../iup_names.c"
    $12 = ($11|0)!=(0|0); //@line 221 "../../iup_names.c"
    if ($12) {
     $13 = $3; //@line 222 "../../iup_names.c"
     $1 = $13; //@line 222 "../../iup_names.c"
     break;
    }
   }
   $14 = $2; //@line 226 "../../iup_names.c"
   $15 = (_iupAttribGetHandleName($14)|0); //@line 226 "../../iup_names.c"
   $3 = $15; //@line 226 "../../iup_names.c"
   $16 = $3; //@line 227 "../../iup_names.c"
   $17 = ($16|0)!=(0|0); //@line 227 "../../iup_names.c"
   if ($17) {
    $18 = $3; //@line 228 "../../iup_names.c"
    $1 = $18; //@line 228 "../../iup_names.c"
    break;
   }
   $19 = HEAP32[6117]|0; //@line 231 "../../iup_names.c"
   $20 = (_iupTableFirst($19)|0); //@line 231 "../../iup_names.c"
   $3 = $20; //@line 231 "../../iup_names.c"
   while(1) {
    $21 = $3; //@line 232 "../../iup_names.c"
    $22 = ($21|0)!=(0|0); //@line 232 "../../iup_names.c"
    if (!($22)) {
     label = 13;
     break;
    }
    $23 = HEAP32[6117]|0; //@line 234 "../../iup_names.c"
    $24 = (_iupTableGetCurr($23)|0); //@line 234 "../../iup_names.c"
    $25 = $2; //@line 234 "../../iup_names.c"
    $26 = ($24|0)==($25|0); //@line 234 "../../iup_names.c"
    if ($26) {
     label = 11;
     break;
    }
    $28 = HEAP32[6117]|0; //@line 237 "../../iup_names.c"
    $29 = (_iupTableNext($28)|0); //@line 237 "../../iup_names.c"
    $3 = $29; //@line 237 "../../iup_names.c"
   }
   if ((label|0) == 11) {
    $27 = $3; //@line 235 "../../iup_names.c"
    $1 = $27; //@line 235 "../../iup_names.c"
    break;
   }
   else if ((label|0) == 13) {
    $1 = 0; //@line 240 "../../iup_names.c"
    break;
   }
  } else {
   $1 = 0; //@line 215 "../../iup_names.c"
  }
 } while(0);
 $30 = $1; //@line 241 "../../iup_names.c"
 STACKTOP = sp;return ($30|0); //@line 241 "../../iup_names.c"
}
function _iupNormalizeGetNormalizeSize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 29 "../../iup_normalizer.c"
 $4 = ($3|0)!=(0|0); //@line 29 "../../iup_normalizer.c"
 do {
  if ($4) {
   $5 = $2; //@line 31 "../../iup_normalizer.c"
   $6 = (_iupStrEqualNoCase($5,19951)|0); //@line 31 "../../iup_normalizer.c"
   $7 = ($6|0)!=(0); //@line 31 "../../iup_normalizer.c"
   if ($7) {
    $1 = 1; //@line 32 "../../iup_normalizer.c"
    break;
   }
   $8 = $2; //@line 33 "../../iup_normalizer.c"
   $9 = (_iupStrEqualNoCase($8,19983)|0); //@line 33 "../../iup_normalizer.c"
   $10 = ($9|0)!=(0); //@line 33 "../../iup_normalizer.c"
   if ($10) {
    $1 = 2; //@line 34 "../../iup_normalizer.c"
    break;
   }
   $11 = $2; //@line 35 "../../iup_normalizer.c"
   $12 = (_iupStrEqualNoCase($11,14841)|0); //@line 35 "../../iup_normalizer.c"
   $13 = ($12|0)!=(0); //@line 35 "../../iup_normalizer.c"
   if ($13) {
    $1 = 3; //@line 36 "../../iup_normalizer.c"
    break;
   } else {
    $1 = 0; //@line 37 "../../iup_normalizer.c"
    break;
   }
  } else {
   $1 = 0; //@line 30 "../../iup_normalizer.c"
  }
 } while(0);
 $14 = $1; //@line 38 "../../iup_normalizer.c"
 STACKTOP = sp;return ($14|0); //@line 38 "../../iup_normalizer.c"
}
function _iupNormalizeGetNormalizeSizeStr($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $1 = $0;
 ;HEAP32[$2>>2]=HEAP32[288>>2]|0;HEAP32[$2+4>>2]=HEAP32[288+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[288+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[288+12>>2]|0; //@line 42 "../../iup_normalizer.c"
 $3 = $1; //@line 43 "../../iup_normalizer.c"
 $4 = (($2) + ($3<<2)|0); //@line 43 "../../iup_normalizer.c"
 $5 = HEAP32[$4>>2]|0; //@line 43 "../../iup_normalizer.c"
 STACKTOP = sp;return ($5|0); //@line 43 "../../iup_normalizer.c"
}
function _iupNormalizeSizeBoxChild($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 51 "../../iup_normalizer.c"
 $10 = ((($9)) + 64|0); //@line 51 "../../iup_normalizer.c"
 $11 = HEAP32[$10>>2]|0; //@line 51 "../../iup_normalizer.c"
 $8 = $11; //@line 51 "../../iup_normalizer.c"
 while(1) {
  $12 = $8; //@line 51 "../../iup_normalizer.c"
  $13 = ($12|0)!=(0|0); //@line 51 "../../iup_normalizer.c"
  if (!($13)) {
   break;
  }
  $14 = $8; //@line 53 "../../iup_normalizer.c"
  $15 = ((($14)) + 24|0); //@line 53 "../../iup_normalizer.c"
  $16 = HEAP32[$15>>2]|0; //@line 53 "../../iup_normalizer.c"
  $17 = $16 & 1; //@line 53 "../../iup_normalizer.c"
  $18 = ($17|0)!=(0); //@line 53 "../../iup_normalizer.c"
  do {
   if (!($18)) {
    $19 = $8; //@line 54 "../../iup_normalizer.c"
    $20 = ((($19)) + 4|0); //@line 54 "../../iup_normalizer.c"
    $21 = HEAP32[$20>>2]|0; //@line 54 "../../iup_normalizer.c"
    $22 = ((($21)) + 8|0); //@line 54 "../../iup_normalizer.c"
    $23 = HEAP32[$22>>2]|0; //@line 54 "../../iup_normalizer.c"
    $24 = ($23|0)!=(0); //@line 54 "../../iup_normalizer.c"
    if (!($24)) {
     $25 = $8; //@line 55 "../../iup_normalizer.c"
     $26 = (_IupClassMatch($25,14851)|0); //@line 55 "../../iup_normalizer.c"
     $27 = ($26|0)!=(0); //@line 55 "../../iup_normalizer.c"
     if ($27) {
      break;
     }
    }
    $28 = $5; //@line 57 "../../iup_normalizer.c"
    $29 = $28 & 1; //@line 57 "../../iup_normalizer.c"
    $30 = ($29|0)!=(0); //@line 57 "../../iup_normalizer.c"
    if ($30) {
     $31 = $6; //@line 58 "../../iup_normalizer.c"
     $32 = $8; //@line 58 "../../iup_normalizer.c"
     $33 = ((($32)) + 44|0); //@line 58 "../../iup_normalizer.c"
     HEAP32[$33>>2] = $31; //@line 58 "../../iup_normalizer.c"
    }
    $34 = $5; //@line 59 "../../iup_normalizer.c"
    $35 = $34 & 2; //@line 59 "../../iup_normalizer.c"
    $36 = ($35|0)!=(0); //@line 59 "../../iup_normalizer.c"
    if ($36) {
     $37 = $7; //@line 60 "../../iup_normalizer.c"
     $38 = $8; //@line 60 "../../iup_normalizer.c"
     $39 = ((($38)) + 48|0); //@line 60 "../../iup_normalizer.c"
     HEAP32[$39>>2] = $37; //@line 60 "../../iup_normalizer.c"
    }
   }
  } while(0);
  $40 = $8; //@line 51 "../../iup_normalizer.c"
  $41 = ((($40)) + 68|0); //@line 51 "../../iup_normalizer.c"
  $42 = HEAP32[$41>>2]|0; //@line 51 "../../iup_normalizer.c"
  $8 = $42; //@line 51 "../../iup_normalizer.c"
 }
 STACKTOP = sp;return; //@line 63 "../../iup_normalizer.c"
}
function _iupNormalizerNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 153 "../../iup_normalizer.c"
 $0 = $1; //@line 153 "../../iup_normalizer.c"
 $2 = $0; //@line 155 "../../iup_normalizer.c"
 HEAP32[$2>>2] = 14856; //@line 155 "../../iup_normalizer.c"
 $3 = $0; //@line 156 "../../iup_normalizer.c"
 $4 = ((($3)) + 4|0); //@line 156 "../../iup_normalizer.c"
 HEAP32[$4>>2] = 20071; //@line 156 "../../iup_normalizer.c"
 $5 = $0; //@line 157 "../../iup_normalizer.c"
 $6 = ((($5)) + 8|0); //@line 157 "../../iup_normalizer.c"
 HEAP32[$6>>2] = 0; //@line 157 "../../iup_normalizer.c"
 $7 = $0; //@line 158 "../../iup_normalizer.c"
 $8 = ((($7)) + 12|0); //@line 158 "../../iup_normalizer.c"
 HEAP32[$8>>2] = 0; //@line 158 "../../iup_normalizer.c"
 $9 = $0; //@line 159 "../../iup_normalizer.c"
 $10 = ((($9)) + 16|0); //@line 159 "../../iup_normalizer.c"
 HEAP32[$10>>2] = 0; //@line 159 "../../iup_normalizer.c"
 $11 = $0; //@line 162 "../../iup_normalizer.c"
 $12 = ((($11)) + 32|0); //@line 162 "../../iup_normalizer.c"
 HEAP32[$12>>2] = 352; //@line 162 "../../iup_normalizer.c"
 $13 = $0; //@line 163 "../../iup_normalizer.c"
 $14 = ((($13)) + 40|0); //@line 163 "../../iup_normalizer.c"
 HEAP32[$14>>2] = 353; //@line 163 "../../iup_normalizer.c"
 $15 = $0; //@line 164 "../../iup_normalizer.c"
 $16 = ((($15)) + 44|0); //@line 164 "../../iup_normalizer.c"
 HEAP32[$16>>2] = 26; //@line 164 "../../iup_normalizer.c"
 $17 = $0; //@line 165 "../../iup_normalizer.c"
 $18 = ((($17)) + 76|0); //@line 165 "../../iup_normalizer.c"
 HEAP32[$18>>2] = 354; //@line 165 "../../iup_normalizer.c"
 $19 = $0; //@line 166 "../../iup_normalizer.c"
 $20 = ((($19)) + 52|0); //@line 166 "../../iup_normalizer.c"
 HEAP32[$20>>2] = 355; //@line 166 "../../iup_normalizer.c"
 $21 = $0; //@line 168 "../../iup_normalizer.c"
 _iupClassRegisterAttribute($21,14867,0,356,(-1),19951,9); //@line 168 "../../iup_normalizer.c"
 $22 = $0; //@line 169 "../../iup_normalizer.c"
 _iupClassRegisterAttribute($22,14877,0,357,0,0,9); //@line 169 "../../iup_normalizer.c"
 $23 = $0; //@line 170 "../../iup_normalizer.c"
 _iupClassRegisterAttribute($23,14895,0,358,0,0,9); //@line 170 "../../iup_normalizer.c"
 $24 = $0; //@line 172 "../../iup_normalizer.c"
 STACKTOP = sp;return ($24|0); //@line 172 "../../iup_normalizer.c"
}
function _iNormalizerCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = (_calloc(1,4)|0); //@line 126 "../../iup_normalizer.c"
 $8 = $2; //@line 126 "../../iup_normalizer.c"
 $9 = ((($8)) + 72|0); //@line 126 "../../iup_normalizer.c"
 HEAP32[$9>>2] = $7; //@line 126 "../../iup_normalizer.c"
 $10 = (_iupArrayCreate(10,4)|0); //@line 127 "../../iup_normalizer.c"
 $11 = $2; //@line 127 "../../iup_normalizer.c"
 $12 = ((($11)) + 72|0); //@line 127 "../../iup_normalizer.c"
 $13 = HEAP32[$12>>2]|0; //@line 127 "../../iup_normalizer.c"
 HEAP32[$13>>2] = $10; //@line 127 "../../iup_normalizer.c"
 $14 = $3; //@line 129 "../../iup_normalizer.c"
 $15 = ($14|0)!=(0|0); //@line 129 "../../iup_normalizer.c"
 if (!($15)) {
  STACKTOP = sp;return 0; //@line 143 "../../iup_normalizer.c"
 }
 $16 = $3; //@line 131 "../../iup_normalizer.c"
 $4 = $16; //@line 131 "../../iup_normalizer.c"
 $6 = 0; //@line 133 "../../iup_normalizer.c"
 while(1) {
  $17 = $4; //@line 134 "../../iup_normalizer.c"
  $18 = HEAP32[$17>>2]|0; //@line 134 "../../iup_normalizer.c"
  $19 = ($18|0)!=(0|0); //@line 134 "../../iup_normalizer.c"
  if (!($19)) {
   break;
  }
  $20 = $2; //@line 136 "../../iup_normalizer.c"
  $21 = ((($20)) + 72|0); //@line 136 "../../iup_normalizer.c"
  $22 = HEAP32[$21>>2]|0; //@line 136 "../../iup_normalizer.c"
  $23 = HEAP32[$22>>2]|0; //@line 136 "../../iup_normalizer.c"
  $24 = (_iupArrayInc($23)|0); //@line 136 "../../iup_normalizer.c"
  $5 = $24; //@line 136 "../../iup_normalizer.c"
  $25 = $4; //@line 137 "../../iup_normalizer.c"
  $26 = HEAP32[$25>>2]|0; //@line 137 "../../iup_normalizer.c"
  $27 = $6; //@line 137 "../../iup_normalizer.c"
  $28 = $5; //@line 137 "../../iup_normalizer.c"
  $29 = (($28) + ($27<<2)|0); //@line 137 "../../iup_normalizer.c"
  HEAP32[$29>>2] = $26; //@line 137 "../../iup_normalizer.c"
  $30 = $6; //@line 138 "../../iup_normalizer.c"
  $31 = (($30) + 1)|0; //@line 138 "../../iup_normalizer.c"
  $6 = $31; //@line 138 "../../iup_normalizer.c"
  $32 = $4; //@line 139 "../../iup_normalizer.c"
  $33 = ((($32)) + 4|0); //@line 139 "../../iup_normalizer.c"
  $4 = $33; //@line 139 "../../iup_normalizer.c"
 }
 STACKTOP = sp;return 0; //@line 143 "../../iup_normalizer.c"
}
function _iNormalizerComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 121 "../../iup_normalizer.c"
 $9 = $4; //@line 121 "../../iup_normalizer.c"
 $10 = (_iupAttribGetStr($9,14867)|0); //@line 121 "../../iup_normalizer.c"
 (_iNormalizerSetNormalizeAttrib($8,$10)|0); //@line 121 "../../iup_normalizer.c"
 STACKTOP = sp;return; //@line 122 "../../iup_normalizer.c"
}
function _iNormalizerDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 148 "../../iup_normalizer.c"
 $3 = ((($2)) + 72|0); //@line 148 "../../iup_normalizer.c"
 $4 = HEAP32[$3>>2]|0; //@line 148 "../../iup_normalizer.c"
 $5 = HEAP32[$4>>2]|0; //@line 148 "../../iup_normalizer.c"
 _iupArrayDestroy($5); //@line 148 "../../iup_normalizer.c"
 STACKTOP = sp;return; //@line 149 "../../iup_normalizer.c"
}
function _iNormalizerSetNormalizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $3 = $0;
 $4 = $1;
 $9 = 0; //@line 70 "../../iup_normalizer.c"
 $10 = 0; //@line 70 "../../iup_normalizer.c"
 $12 = $4; //@line 71 "../../iup_normalizer.c"
 $13 = (_iupNormalizeGetNormalizeSize($12)|0); //@line 71 "../../iup_normalizer.c"
 $11 = $13; //@line 71 "../../iup_normalizer.c"
 $14 = $11; //@line 72 "../../iup_normalizer.c"
 $15 = ($14|0)!=(0); //@line 72 "../../iup_normalizer.c"
 if (!($15)) {
  $2 = 1; //@line 73 "../../iup_normalizer.c"
  $91 = $2; //@line 100 "../../iup_normalizer.c"
  STACKTOP = sp;return ($91|0); //@line 100 "../../iup_normalizer.c"
 }
 $16 = $3; //@line 75 "../../iup_normalizer.c"
 $17 = ((($16)) + 72|0); //@line 75 "../../iup_normalizer.c"
 $18 = HEAP32[$17>>2]|0; //@line 75 "../../iup_normalizer.c"
 $19 = HEAP32[$18>>2]|0; //@line 75 "../../iup_normalizer.c"
 $20 = (_iupArrayCount($19)|0); //@line 75 "../../iup_normalizer.c"
 $6 = $20; //@line 75 "../../iup_normalizer.c"
 $21 = $3; //@line 76 "../../iup_normalizer.c"
 $22 = ((($21)) + 72|0); //@line 76 "../../iup_normalizer.c"
 $23 = HEAP32[$22>>2]|0; //@line 76 "../../iup_normalizer.c"
 $24 = HEAP32[$23>>2]|0; //@line 76 "../../iup_normalizer.c"
 $25 = (_iupArrayGetData($24)|0); //@line 76 "../../iup_normalizer.c"
 $7 = $25; //@line 76 "../../iup_normalizer.c"
 $5 = 0; //@line 78 "../../iup_normalizer.c"
 while(1) {
  $26 = $5; //@line 78 "../../iup_normalizer.c"
  $27 = $6; //@line 78 "../../iup_normalizer.c"
  $28 = ($26|0)<($27|0); //@line 78 "../../iup_normalizer.c"
  if (!($28)) {
   break;
  }
  $29 = $5; //@line 80 "../../iup_normalizer.c"
  $30 = $7; //@line 80 "../../iup_normalizer.c"
  $31 = (($30) + ($29<<2)|0); //@line 80 "../../iup_normalizer.c"
  $32 = HEAP32[$31>>2]|0; //@line 80 "../../iup_normalizer.c"
  $8 = $32; //@line 80 "../../iup_normalizer.c"
  $33 = $8; //@line 81 "../../iup_normalizer.c"
  _iupBaseComputeNaturalSize($33); //@line 81 "../../iup_normalizer.c"
  $34 = $9; //@line 82 "../../iup_normalizer.c"
  $35 = $8; //@line 82 "../../iup_normalizer.c"
  $36 = ((($35)) + 44|0); //@line 82 "../../iup_normalizer.c"
  $37 = HEAP32[$36>>2]|0; //@line 82 "../../iup_normalizer.c"
  $38 = ($34|0)>($37|0); //@line 82 "../../iup_normalizer.c"
  if ($38) {
   $39 = $9; //@line 82 "../../iup_normalizer.c"
   $43 = $39;
  } else {
   $40 = $8; //@line 82 "../../iup_normalizer.c"
   $41 = ((($40)) + 44|0); //@line 82 "../../iup_normalizer.c"
   $42 = HEAP32[$41>>2]|0; //@line 82 "../../iup_normalizer.c"
   $43 = $42;
  }
  $9 = $43; //@line 82 "../../iup_normalizer.c"
  $44 = $10; //@line 83 "../../iup_normalizer.c"
  $45 = $8; //@line 83 "../../iup_normalizer.c"
  $46 = ((($45)) + 48|0); //@line 83 "../../iup_normalizer.c"
  $47 = HEAP32[$46>>2]|0; //@line 83 "../../iup_normalizer.c"
  $48 = ($44|0)>($47|0); //@line 83 "../../iup_normalizer.c"
  if ($48) {
   $49 = $10; //@line 83 "../../iup_normalizer.c"
   $53 = $49;
  } else {
   $50 = $8; //@line 83 "../../iup_normalizer.c"
   $51 = ((($50)) + 48|0); //@line 83 "../../iup_normalizer.c"
   $52 = HEAP32[$51>>2]|0; //@line 83 "../../iup_normalizer.c"
   $53 = $52;
  }
  $10 = $53; //@line 83 "../../iup_normalizer.c"
  $54 = $5; //@line 78 "../../iup_normalizer.c"
  $55 = (($54) + 1)|0; //@line 78 "../../iup_normalizer.c"
  $5 = $55; //@line 78 "../../iup_normalizer.c"
 }
 $5 = 0; //@line 86 "../../iup_normalizer.c"
 while(1) {
  $56 = $5; //@line 86 "../../iup_normalizer.c"
  $57 = $6; //@line 86 "../../iup_normalizer.c"
  $58 = ($56|0)<($57|0); //@line 86 "../../iup_normalizer.c"
  if (!($58)) {
   break;
  }
  $59 = $5; //@line 88 "../../iup_normalizer.c"
  $60 = $7; //@line 88 "../../iup_normalizer.c"
  $61 = (($60) + ($59<<2)|0); //@line 88 "../../iup_normalizer.c"
  $62 = HEAP32[$61>>2]|0; //@line 88 "../../iup_normalizer.c"
  $8 = $62; //@line 88 "../../iup_normalizer.c"
  $63 = $8; //@line 89 "../../iup_normalizer.c"
  $64 = ((($63)) + 24|0); //@line 89 "../../iup_normalizer.c"
  $65 = HEAP32[$64>>2]|0; //@line 89 "../../iup_normalizer.c"
  $66 = $65 & 1; //@line 89 "../../iup_normalizer.c"
  $67 = ($66|0)!=(0); //@line 89 "../../iup_normalizer.c"
  do {
   if (!($67)) {
    $68 = $8; //@line 90 "../../iup_normalizer.c"
    $69 = ((($68)) + 4|0); //@line 90 "../../iup_normalizer.c"
    $70 = HEAP32[$69>>2]|0; //@line 90 "../../iup_normalizer.c"
    $71 = ((($70)) + 8|0); //@line 90 "../../iup_normalizer.c"
    $72 = HEAP32[$71>>2]|0; //@line 90 "../../iup_normalizer.c"
    $73 = ($72|0)!=(0); //@line 90 "../../iup_normalizer.c"
    if (!($73)) {
     $74 = $8; //@line 91 "../../iup_normalizer.c"
     $75 = (_IupClassMatch($74,14851)|0); //@line 91 "../../iup_normalizer.c"
     $76 = ($75|0)!=(0); //@line 91 "../../iup_normalizer.c"
     if ($76) {
      break;
     }
    }
    $77 = $11; //@line 93 "../../iup_normalizer.c"
    $78 = $77 & 1; //@line 93 "../../iup_normalizer.c"
    $79 = ($78|0)!=(0); //@line 93 "../../iup_normalizer.c"
    if ($79) {
     $80 = $9; //@line 94 "../../iup_normalizer.c"
     $81 = $8; //@line 94 "../../iup_normalizer.c"
     $82 = ((($81)) + 36|0); //@line 94 "../../iup_normalizer.c"
     HEAP32[$82>>2] = $80; //@line 94 "../../iup_normalizer.c"
    }
    $83 = $11; //@line 95 "../../iup_normalizer.c"
    $84 = $83 & 2; //@line 95 "../../iup_normalizer.c"
    $85 = ($84|0)!=(0); //@line 95 "../../iup_normalizer.c"
    if ($85) {
     $86 = $10; //@line 96 "../../iup_normalizer.c"
     $87 = $8; //@line 96 "../../iup_normalizer.c"
     $88 = ((($87)) + 40|0); //@line 96 "../../iup_normalizer.c"
     HEAP32[$88>>2] = $86; //@line 96 "../../iup_normalizer.c"
    }
   }
  } while(0);
  $89 = $5; //@line 86 "../../iup_normalizer.c"
  $90 = (($89) + 1)|0; //@line 86 "../../iup_normalizer.c"
  $5 = $90; //@line 86 "../../iup_normalizer.c"
 }
 $2 = 1; //@line 99 "../../iup_normalizer.c"
 $91 = $2; //@line 100 "../../iup_normalizer.c"
 STACKTOP = sp;return ($91|0); //@line 100 "../../iup_normalizer.c"
}
function _iNormalizerSetAddControlHandleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $3; //@line 104 "../../iup_normalizer.c"
 $4 = $7; //@line 104 "../../iup_normalizer.c"
 $8 = $2; //@line 105 "../../iup_normalizer.c"
 $9 = ((($8)) + 72|0); //@line 105 "../../iup_normalizer.c"
 $10 = HEAP32[$9>>2]|0; //@line 105 "../../iup_normalizer.c"
 $11 = HEAP32[$10>>2]|0; //@line 105 "../../iup_normalizer.c"
 $12 = (_iupArrayInc($11)|0); //@line 105 "../../iup_normalizer.c"
 $5 = $12; //@line 105 "../../iup_normalizer.c"
 $13 = $2; //@line 106 "../../iup_normalizer.c"
 $14 = ((($13)) + 72|0); //@line 106 "../../iup_normalizer.c"
 $15 = HEAP32[$14>>2]|0; //@line 106 "../../iup_normalizer.c"
 $16 = HEAP32[$15>>2]|0; //@line 106 "../../iup_normalizer.c"
 $17 = (_iupArrayCount($16)|0); //@line 106 "../../iup_normalizer.c"
 $6 = $17; //@line 106 "../../iup_normalizer.c"
 $18 = $4; //@line 107 "../../iup_normalizer.c"
 $19 = $6; //@line 107 "../../iup_normalizer.c"
 $20 = (($19) - 1)|0; //@line 107 "../../iup_normalizer.c"
 $21 = $5; //@line 107 "../../iup_normalizer.c"
 $22 = (($21) + ($20<<2)|0); //@line 107 "../../iup_normalizer.c"
 HEAP32[$22>>2] = $18; //@line 107 "../../iup_normalizer.c"
 STACKTOP = sp;return 0; //@line 108 "../../iup_normalizer.c"
}
function _iNormalizerSetAddControlAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 113 "../../iup_normalizer.c"
 $5 = $3; //@line 113 "../../iup_normalizer.c"
 $6 = (_IupGetHandle($5)|0); //@line 113 "../../iup_normalizer.c"
 $7 = (_iNormalizerSetAddControlHandleAttrib($4,$6)|0); //@line 113 "../../iup_normalizer.c"
 STACKTOP = sp;return ($7|0); //@line 113 "../../iup_normalizer.c"
}
function _IupNormalizer($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $1 = $0;
 HEAP32[$4>>2] = $varargs; //@line 186 "../../iup_normalizer.c"
 $5 = $1; //@line 187 "../../iup_normalizer.c"
 $6 = (_iupObjectGetParamList($5,$4)|0); //@line 187 "../../iup_normalizer.c"
 $2 = $6; //@line 187 "../../iup_normalizer.c"
 $7 = $2; //@line 190 "../../iup_normalizer.c"
 $8 = (_IupCreatev(14856,$7)|0); //@line 190 "../../iup_normalizer.c"
 $3 = $8; //@line 190 "../../iup_normalizer.c"
 $9 = $2; //@line 191 "../../iup_normalizer.c"
 _free($9); //@line 191 "../../iup_normalizer.c"
 $10 = $3; //@line 193 "../../iup_normalizer.c"
 STACKTOP = sp;return ($10|0); //@line 193 "../../iup_normalizer.c"
}
function _iupObjectCheck($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 46 "../../iup_object.c"
 $3 = $4; //@line 46 "../../iup_object.c"
 $5 = $2; //@line 48 "../../iup_object.c"
 $6 = ($5|0)!=(0|0); //@line 48 "../../iup_object.c"
 if (!($6)) {
  $1 = 0; //@line 48 "../../iup_object.c"
  $26 = $1; //@line 57 "../../iup_object.c"
  STACKTOP = sp;return ($26|0); //@line 57 "../../iup_object.c"
 }
 $7 = $3; //@line 50 "../../iup_object.c"
 $8 = HEAP8[$7>>0]|0; //@line 50 "../../iup_object.c"
 $9 = $8 << 24 >> 24; //@line 50 "../../iup_object.c"
 $10 = ($9|0)!=(73); //@line 50 "../../iup_object.c"
 if (!($10)) {
  $11 = $3; //@line 51 "../../iup_object.c"
  $12 = ((($11)) + 1|0); //@line 51 "../../iup_object.c"
  $13 = HEAP8[$12>>0]|0; //@line 51 "../../iup_object.c"
  $14 = $13 << 24 >> 24; //@line 51 "../../iup_object.c"
  $15 = ($14|0)!=(85); //@line 51 "../../iup_object.c"
  if (!($15)) {
   $16 = $3; //@line 52 "../../iup_object.c"
   $17 = ((($16)) + 2|0); //@line 52 "../../iup_object.c"
   $18 = HEAP8[$17>>0]|0; //@line 52 "../../iup_object.c"
   $19 = $18 << 24 >> 24; //@line 52 "../../iup_object.c"
   $20 = ($19|0)!=(80); //@line 52 "../../iup_object.c"
   if (!($20)) {
    $21 = $3; //@line 53 "../../iup_object.c"
    $22 = ((($21)) + 3|0); //@line 53 "../../iup_object.c"
    $23 = HEAP8[$22>>0]|0; //@line 53 "../../iup_object.c"
    $24 = $23 << 24 >> 24; //@line 53 "../../iup_object.c"
    $25 = ($24|0)!=(0); //@line 53 "../../iup_object.c"
    if (!($25)) {
     $1 = 1; //@line 56 "../../iup_object.c"
     $26 = $1; //@line 57 "../../iup_object.c"
     STACKTOP = sp;return ($26|0); //@line 57 "../../iup_object.c"
    }
   }
  }
 }
 $1 = 0; //@line 54 "../../iup_object.c"
 $26 = $1; //@line 57 "../../iup_object.c"
 STACKTOP = sp;return ($26|0); //@line 57 "../../iup_object.c"
}
function _iupObjectCreate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = (_iHandleCreate()|0); //@line 62 "../../iup_object.c"
 $5 = $6; //@line 62 "../../iup_object.c"
 $7 = $3; //@line 64 "../../iup_object.c"
 $8 = $5; //@line 64 "../../iup_object.c"
 $9 = ((($8)) + 4|0); //@line 64 "../../iup_object.c"
 HEAP32[$9>>2] = $7; //@line 64 "../../iup_object.c"
 $10 = $5; //@line 67 "../../iup_object.c"
 $11 = $4; //@line 67 "../../iup_object.c"
 $12 = (_iupClassObjectCreate($10,$11)|0); //@line 67 "../../iup_object.c"
 $13 = ($12|0)==(1); //@line 67 "../../iup_object.c"
 $14 = $5; //@line 70 "../../iup_object.c"
 if ($13) {
  _iHandleDestroy($14); //@line 70 "../../iup_object.c"
  $2 = 0; //@line 71 "../../iup_object.c"
  $16 = $2; //@line 78 "../../iup_object.c"
  STACKTOP = sp;return ($16|0); //@line 78 "../../iup_object.c"
 } else {
  _iupClassObjectEnsureDefaultAttributes($14); //@line 75 "../../iup_object.c"
  $15 = $5; //@line 77 "../../iup_object.c"
  $2 = $15; //@line 77 "../../iup_object.c"
  $16 = $2; //@line 78 "../../iup_object.c"
  STACKTOP = sp;return ($16|0); //@line 78 "../../iup_object.c"
 }
 return (0)|0;
}
function _iHandleCreate() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_malloc(76)|0); //@line 22 "../../iup_object.c"
 $0 = $1; //@line 22 "../../iup_object.c"
 $2 = $0; //@line 23 "../../iup_object.c"
 dest=$2; stop=dest+76|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 23 "../../iup_object.c"
 $3 = $0; //@line 25 "../../iup_object.c"
 HEAP8[$3>>0] = 73; //@line 25 "../../iup_object.c"
 $4 = $0; //@line 26 "../../iup_object.c"
 $5 = ((($4)) + 1|0); //@line 26 "../../iup_object.c"
 HEAP8[$5>>0] = 85; //@line 26 "../../iup_object.c"
 $6 = $0; //@line 27 "../../iup_object.c"
 $7 = ((($6)) + 2|0); //@line 27 "../../iup_object.c"
 HEAP8[$7>>0] = 80; //@line 27 "../../iup_object.c"
 $8 = $0; //@line 28 "../../iup_object.c"
 $9 = ((($8)) + 3|0); //@line 28 "../../iup_object.c"
 HEAP8[$9>>0] = 0; //@line 28 "../../iup_object.c"
 $10 = $0; //@line 30 "../../iup_object.c"
 $11 = ((($10)) + 12|0); //@line 30 "../../iup_object.c"
 HEAP32[$11>>2] = -1; //@line 30 "../../iup_object.c"
 $12 = (_iupTableCreate(11)|0); //@line 32 "../../iup_object.c"
 $13 = $0; //@line 32 "../../iup_object.c"
 $14 = ((($13)) + 8|0); //@line 32 "../../iup_object.c"
 HEAP32[$14>>2] = $12; //@line 32 "../../iup_object.c"
 $15 = $0; //@line 34 "../../iup_object.c"
 STACKTOP = sp;return ($15|0); //@line 34 "../../iup_object.c"
}
function _iHandleDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 39 "../../iup_object.c"
 $3 = ((($2)) + 8|0); //@line 39 "../../iup_object.c"
 $4 = HEAP32[$3>>2]|0; //@line 39 "../../iup_object.c"
 _iupTableDestroy($4); //@line 39 "../../iup_object.c"
 $5 = $1; //@line 40 "../../iup_object.c"
 dest=$5; stop=dest+76|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 40 "../../iup_object.c"
 $6 = $1; //@line 41 "../../iup_object.c"
 _free($6); //@line 41 "../../iup_object.c"
 STACKTOP = sp;return; //@line 42 "../../iup_object.c"
}
function _iupObjectGetParamList($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $arglist_current = 0, $arglist_next = 0, $expanded = 0, $expanded1 = 0, $expanded3 = 0, $expanded4 = 0, $expanded5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $2 = $0;
 $3 = $1;
 $4 = 50; //@line 82 "../../iup_object.c"
 $7 = 50; //@line 85 "../../iup_object.c"
 $8 = 0; //@line 85 "../../iup_object.c"
 $11 = (_malloc(200)|0); //@line 87 "../../iup_object.c"
 $5 = $11; //@line 87 "../../iup_object.c"
 $12 = $2; //@line 89 "../../iup_object.c"
 $6 = $12; //@line 89 "../../iup_object.c"
 while(1) {
  $13 = $6; //@line 91 "../../iup_object.c"
  $14 = ($13|0)!=(0|0); //@line 91 "../../iup_object.c"
  if (!($14)) {
   break;
  }
  $15 = $6; //@line 93 "../../iup_object.c"
  $16 = $8; //@line 93 "../../iup_object.c"
  $17 = $5; //@line 93 "../../iup_object.c"
  $18 = (($17) + ($16<<2)|0); //@line 93 "../../iup_object.c"
  HEAP32[$18>>2] = $15; //@line 93 "../../iup_object.c"
  $19 = $8; //@line 94 "../../iup_object.c"
  $20 = (($19) + 1)|0; //@line 94 "../../iup_object.c"
  $8 = $20; //@line 94 "../../iup_object.c"
  $21 = $8; //@line 97 "../../iup_object.c"
  $22 = $7; //@line 97 "../../iup_object.c"
  $23 = ($21|0)>=($22|0); //@line 97 "../../iup_object.c"
  if ($23) {
   $9 = 0; //@line 99 "../../iup_object.c"
   $24 = $7; //@line 101 "../../iup_object.c"
   $25 = (($24) + 50)|0; //@line 101 "../../iup_object.c"
   $7 = $25; //@line 101 "../../iup_object.c"
   $26 = $5; //@line 103 "../../iup_object.c"
   $27 = $7; //@line 103 "../../iup_object.c"
   $28 = $27<<2; //@line 103 "../../iup_object.c"
   $29 = (_realloc($26,$28)|0); //@line 103 "../../iup_object.c"
   $9 = $29; //@line 103 "../../iup_object.c"
   $30 = $9; //@line 105 "../../iup_object.c"
   $5 = $30; //@line 105 "../../iup_object.c"
  }
  $31 = $3; //@line 108 "../../iup_object.c"
  $arglist_current = HEAP32[$31>>2]|0; //@line 108 "../../iup_object.c"
  $32 = $arglist_current; //@line 108 "../../iup_object.c"
  $33 = ((0) + 4|0);
  $expanded1 = $33;
  $expanded = (($expanded1) - 1)|0;
  $34 = (($32) + ($expanded))|0; //@line 108 "../../iup_object.c"
  $35 = ((0) + 4|0);
  $expanded5 = $35;
  $expanded4 = (($expanded5) - 1)|0;
  $expanded3 = $expanded4 ^ -1;
  $36 = $34 & $expanded3; //@line 108 "../../iup_object.c"
  $37 = $36; //@line 108 "../../iup_object.c"
  $38 = HEAP32[$37>>2]|0; //@line 108 "../../iup_object.c"
  $arglist_next = ((($37)) + 4|0); //@line 108 "../../iup_object.c"
  HEAP32[$31>>2] = $arglist_next; //@line 108 "../../iup_object.c"
  $10 = $38; //@line 108 "../../iup_object.c"
  $39 = $10; //@line 108 "../../iup_object.c"
  $6 = $39; //@line 108 "../../iup_object.c"
 }
 $40 = $8; //@line 110 "../../iup_object.c"
 $41 = $5; //@line 110 "../../iup_object.c"
 $42 = (($41) + ($40<<2)|0); //@line 110 "../../iup_object.c"
 HEAP32[$42>>2] = 0; //@line 110 "../../iup_object.c"
 $43 = $5; //@line 112 "../../iup_object.c"
 STACKTOP = sp;return ($43|0); //@line 112 "../../iup_object.c"
}
function _IupCreatev($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 119 "../../iup_object.c"
 $7 = (_iupRegisterFindClass($6)|0); //@line 119 "../../iup_object.c"
 $5 = $7; //@line 119 "../../iup_object.c"
 $8 = $5; //@line 120 "../../iup_object.c"
 $9 = ($8|0)!=(0|0); //@line 120 "../../iup_object.c"
 if ($9) {
  $10 = $5; //@line 121 "../../iup_object.c"
  $11 = $4; //@line 121 "../../iup_object.c"
  $12 = (_iupObjectCreate($10,$11)|0); //@line 121 "../../iup_object.c"
  $2 = $12; //@line 121 "../../iup_object.c"
  $13 = $2; //@line 124 "../../iup_object.c"
  STACKTOP = sp;return ($13|0); //@line 124 "../../iup_object.c"
 } else {
  $2 = 0; //@line 123 "../../iup_object.c"
  $13 = $2; //@line 124 "../../iup_object.c"
  STACKTOP = sp;return ($13|0); //@line 124 "../../iup_object.c"
 }
 return (0)|0;
}
function _IupCreate($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 146 "../../iup_object.c"
 $3 = (_IupCreatev($2,0)|0); //@line 146 "../../iup_object.c"
 STACKTOP = sp;return ($3|0); //@line 146 "../../iup_object.c"
}
function _IupDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 154 "../../iup_object.c"
 $4 = (_iupObjectCheck($3)|0); //@line 154 "../../iup_object.c"
 $5 = ($4|0)!=(0); //@line 154 "../../iup_object.c"
 if (!($5)) {
  STACKTOP = sp;return; //@line 188 "../../iup_object.c"
 }
 $6 = $1; //@line 158 "../../iup_object.c"
 $7 = ((($6)) + 4|0); //@line 158 "../../iup_object.c"
 $8 = HEAP32[$7>>2]|0; //@line 158 "../../iup_object.c"
 $9 = ((($8)) + 8|0); //@line 158 "../../iup_object.c"
 $10 = HEAP32[$9>>2]|0; //@line 158 "../../iup_object.c"
 $11 = ($10|0)==(3); //@line 158 "../../iup_object.c"
 if ($11) {
  $12 = $1; //@line 159 "../../iup_object.c"
  (_IupHide($12)|0); //@line 159 "../../iup_object.c"
 }
 $13 = $1; //@line 161 "../../iup_object.c"
 $14 = (_IupGetCallback($13,14906)|0); //@line 161 "../../iup_object.c"
 $2 = $14; //@line 161 "../../iup_object.c"
 $15 = $2; //@line 162 "../../iup_object.c"
 $16 = ($15|0)!=(0|0); //@line 162 "../../iup_object.c"
 if ($16) {
  $17 = $2; //@line 162 "../../iup_object.c"
  $18 = $1; //@line 162 "../../iup_object.c"
  (FUNCTION_TABLE_ii[$17 & 1023]($18)|0); //@line 162 "../../iup_object.c"
 }
 $19 = $1; //@line 164 "../../iup_object.c"
 $20 = (_IupGetCallback($19,14917)|0); //@line 164 "../../iup_object.c"
 $2 = $20; //@line 164 "../../iup_object.c"
 $21 = $2; //@line 165 "../../iup_object.c"
 $22 = ($21|0)!=(0|0); //@line 165 "../../iup_object.c"
 if ($22) {
  $23 = $2; //@line 165 "../../iup_object.c"
  $24 = $1; //@line 165 "../../iup_object.c"
  (FUNCTION_TABLE_ii[$23 & 1023]($24)|0); //@line 165 "../../iup_object.c"
 }
 while(1) {
  $25 = $1; //@line 170 "../../iup_object.c"
  $26 = ((($25)) + 64|0); //@line 170 "../../iup_object.c"
  $27 = HEAP32[$26>>2]|0; //@line 170 "../../iup_object.c"
  $28 = ($27|0)!=(0|0); //@line 170 "../../iup_object.c"
  $29 = $1; //@line 171 "../../iup_object.c"
  if (!($28)) {
   break;
  }
  $30 = ((($29)) + 64|0); //@line 171 "../../iup_object.c"
  $31 = HEAP32[$30>>2]|0; //@line 171 "../../iup_object.c"
  _IupDestroy($31); //@line 171 "../../iup_object.c"
 }
 _IupDetach($29); //@line 174 "../../iup_object.c"
 $32 = $1; //@line 177 "../../iup_object.c"
 _iupRemoveNames($32); //@line 177 "../../iup_object.c"
 $33 = $1; //@line 180 "../../iup_object.c"
 _iupClassObjectDestroy($33); //@line 180 "../../iup_object.c"
 $34 = $1; //@line 183 "../../iup_object.c"
 $35 = ((($34)) + 72|0); //@line 183 "../../iup_object.c"
 $36 = HEAP32[$35>>2]|0; //@line 183 "../../iup_object.c"
 $37 = ($36|0)!=(0|0); //@line 183 "../../iup_object.c"
 if ($37) {
  $38 = $1; //@line 184 "../../iup_object.c"
  $39 = ((($38)) + 72|0); //@line 184 "../../iup_object.c"
  $40 = HEAP32[$39>>2]|0; //@line 184 "../../iup_object.c"
  _free($40); //@line 184 "../../iup_object.c"
 }
 $41 = $1; //@line 187 "../../iup_object.c"
 _iHandleDestroy($41); //@line 187 "../../iup_object.c"
 STACKTOP = sp;return; //@line 188 "../../iup_object.c"
}
function _IupOpen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = $0;
 $4 = $1;
 $6 = HEAP32[6120]|0; //@line 40 "../../iup_open.c"
 $7 = ($6|0)!=(0); //@line 40 "../../iup_open.c"
 if ($7) {
  $2 = -1; //@line 41 "../../iup_open.c"
  $36 = $2; //@line 95 "../../iup_open.c"
  STACKTOP = sp;return ($36|0); //@line 95 "../../iup_open.c"
 }
 HEAP32[6120] = 1; //@line 42 "../../iup_open.c"
 $8 = $3; //@line 44 "../../iup_open.c"
 $9 = ($8|0)!=(0|0); //@line 44 "../../iup_open.c"
 if ($9) {
  $10 = $3; //@line 44 "../../iup_open.c"
  $11 = HEAP32[$10>>2]|0; //@line 44 "../../iup_open.c"
  $12 = ($11|0)!=(0); //@line 44 "../../iup_open.c"
  $13 = $4; //@line 44 "../../iup_open.c"
  $14 = ($13|0)!=(0|0); //@line 44 "../../iup_open.c"
  $or$cond = $12 & $14; //@line 44 "../../iup_open.c"
  if (!($or$cond)) {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $3 = 24476; //@line 46 "../../iup_open.c"
  $4 = 24472; //@line 47 "../../iup_open.c"
 }
 _iupNamesInit(); //@line 50 "../../iup_open.c"
 _iupFuncInit(); //@line 51 "../../iup_open.c"
 _iupStrMessageInit(); //@line 52 "../../iup_open.c"
 _iupGlobalAttribInit(); //@line 53 "../../iup_open.c"
 _iupRegisterInit(); //@line 54 "../../iup_open.c"
 _iupKeyInit(); //@line 55 "../../iup_open.c"
 _iupImageStockInit(); //@line 56 "../../iup_open.c"
 _IupSetLanguage(14929); //@line 58 "../../iup_open.c"
 $15 = (_IupVersion()|0); //@line 59 "../../iup_open.c"
 _IupSetGlobal(14937,$15); //@line 59 "../../iup_open.c"
 _IupSetGlobal(14945,15092); //@line 60 "../../iup_open.c"
 $16 = $3; //@line 62 "../../iup_open.c"
 $17 = $4; //@line 62 "../../iup_open.c"
 $18 = (_iupdrvOpen($16,$17)|0); //@line 62 "../../iup_open.c"
 $19 = ($18|0)==(0); //@line 62 "../../iup_open.c"
 if (!($19)) {
  $2 = 1; //@line 93 "../../iup_open.c"
  $36 = $2; //@line 95 "../../iup_open.c"
  STACKTOP = sp;return ($36|0); //@line 95 "../../iup_open.c"
 }
 _iupdrvFontInit(); //@line 66 "../../iup_open.c"
 $20 = (_iupdrvGetSystemName()|0); //@line 68 "../../iup_open.c"
 _IupStoreGlobal(14955,$20); //@line 68 "../../iup_open.c"
 $21 = (_iupdrvGetSystemVersion()|0); //@line 69 "../../iup_open.c"
 _IupStoreGlobal(14962,$21); //@line 69 "../../iup_open.c"
 $22 = (_iupdrvGetComputerName()|0); //@line 70 "../../iup_open.c"
 _IupStoreGlobal(14976,$22); //@line 70 "../../iup_open.c"
 $23 = (_iupdrvGetUserName()|0); //@line 71 "../../iup_open.c"
 _IupStoreGlobal(14989,$23); //@line 71 "../../iup_open.c"
 $24 = (_iupdrvGetSystemFont()|0); //@line 72 "../../iup_open.c"
 _IupSetGlobal(14998,$24); //@line 72 "../../iup_open.c"
 _IupSetGlobal(15010,19551); //@line 73 "../../iup_open.c"
 _iupRegisterInternalClasses(); //@line 75 "../../iup_open.c"
 $25 = (_getenv((15027|0))|0); //@line 77 "../../iup_open.c"
 $5 = $25; //@line 77 "../../iup_open.c"
 $26 = $5; //@line 78 "../../iup_open.c"
 $27 = ($26|0)!=(0|0); //@line 78 "../../iup_open.c"
 if ($27) {
  $28 = $5; //@line 78 "../../iup_open.c"
  $29 = (_iupStrBoolean($28)|0); //@line 78 "../../iup_open.c"
  $30 = ($29|0)!=(0); //@line 78 "../../iup_open.c"
  if (!($30)) {
   $31 = (_IupVersion()|0); //@line 79 "../../iup_open.c"
   HEAP32[$vararg_buffer>>2] = $31; //@line 79 "../../iup_open.c"
   $vararg_ptr2 = ((($vararg_buffer)) + 4|0); //@line 79 "../../iup_open.c"
   HEAP32[$vararg_ptr2>>2] = 15092; //@line 79 "../../iup_open.c"
   (_printf(15037,$vararg_buffer)|0); //@line 79 "../../iup_open.c"
  }
 }
 $32 = (_getenv((15048|0))|0); //@line 81 "../../iup_open.c"
 $5 = $32; //@line 81 "../../iup_open.c"
 $33 = $5; //@line 82 "../../iup_open.c"
 $34 = (_iupStrBoolean($33)|0); //@line 82 "../../iup_open.c"
 $35 = ($34|0)!=(0); //@line 82 "../../iup_open.c"
 if ($35) {
  _iupShowVersion(); //@line 83 "../../iup_open.c"
 }
 $2 = 0; //@line 85 "../../iup_open.c"
 $36 = $2; //@line 95 "../../iup_open.c"
 STACKTOP = sp;return ($36|0); //@line 95 "../../iup_open.c"
}
function _iupShowVersion() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $1 = (_IupVersion()|0); //@line 462 "../../iup_predialogs.c"
 $2 = (_IupLabel($1)|0); //@line 462 "../../iup_predialogs.c"
 $3 = (_IupVersionDate()|0); //@line 463 "../../iup_predialogs.c"
 $4 = (_IupLabel($3)|0); //@line 463 "../../iup_predialogs.c"
 $5 = (_IupLabel(15092)|0); //@line 464 "../../iup_predialogs.c"
 HEAP32[$vararg_buffer>>2] = $4; //@line 461 "../../iup_predialogs.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 461 "../../iup_predialogs.c"
 HEAP32[$vararg_ptr1>>2] = $5; //@line 461 "../../iup_predialogs.c"
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 461 "../../iup_predialogs.c"
 HEAP32[$vararg_ptr2>>2] = 0; //@line 461 "../../iup_predialogs.c"
 $6 = (_IupVbox($2,$vararg_buffer)|0); //@line 461 "../../iup_predialogs.c"
 $7 = (_IupFrame($6)|0); //@line 461 "../../iup_predialogs.c"
 $8 = (_IupButton(15060,0)|0); //@line 466 "../../iup_predialogs.c"
 HEAP32[$vararg_buffer3>>2] = $8; //@line 461 "../../iup_predialogs.c"
 $vararg_ptr6 = ((($vararg_buffer3)) + 4|0); //@line 461 "../../iup_predialogs.c"
 HEAP32[$vararg_ptr6>>2] = 0; //@line 461 "../../iup_predialogs.c"
 $9 = (_IupVbox($7,$vararg_buffer3)|0); //@line 461 "../../iup_predialogs.c"
 $10 = (_IupDialog($9)|0); //@line 461 "../../iup_predialogs.c"
 $0 = $10; //@line 461 "../../iup_predialogs.c"
 $11 = $0; //@line 469 "../../iup_predialogs.c"
 _IupSetAttribute($11,20508,15134); //@line 469 "../../iup_predialogs.c"
 $12 = $0; //@line 470 "../../iup_predialogs.c"
 _IupSetAttribute($12,15069,20441); //@line 470 "../../iup_predialogs.c"
 $13 = $0; //@line 471 "../../iup_predialogs.c"
 _IupSetAttribute($13,15081,20441); //@line 471 "../../iup_predialogs.c"
 $14 = $0; //@line 472 "../../iup_predialogs.c"
 _IupSetAttribute($14,20659,20663); //@line 472 "../../iup_predialogs.c"
 $15 = $0; //@line 473 "../../iup_predialogs.c"
 _IupSetAttribute($15,20666,20673); //@line 473 "../../iup_predialogs.c"
 $16 = $0; //@line 475 "../../iup_predialogs.c"
 (_IupPopup($16,65530,65530)|0); //@line 475 "../../iup_predialogs.c"
 $17 = $0; //@line 476 "../../iup_predialogs.c"
 _IupDestroy($17); //@line 476 "../../iup_predialogs.c"
 STACKTOP = sp;return; //@line 477 "../../iup_predialogs.c"
}
function _iProgressBarCropValue($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 27 "../../iup_progressbar.c"
 $3 = ((($2)) + 72|0); //@line 27 "../../iup_progressbar.c"
 $4 = HEAP32[$3>>2]|0; //@line 27 "../../iup_progressbar.c"
 $5 = ((($4)) + 8|0); //@line 27 "../../iup_progressbar.c"
 $6 = +HEAPF64[$5>>3]; //@line 27 "../../iup_progressbar.c"
 $7 = $1; //@line 27 "../../iup_progressbar.c"
 $8 = ((($7)) + 72|0); //@line 27 "../../iup_progressbar.c"
 $9 = HEAP32[$8>>2]|0; //@line 27 "../../iup_progressbar.c"
 $10 = ((($9)) + 24|0); //@line 27 "../../iup_progressbar.c"
 $11 = +HEAPF64[$10>>3]; //@line 27 "../../iup_progressbar.c"
 $12 = $6 > $11; //@line 27 "../../iup_progressbar.c"
 $13 = $1; //@line 28 "../../iup_progressbar.c"
 $14 = ((($13)) + 72|0); //@line 28 "../../iup_progressbar.c"
 $15 = HEAP32[$14>>2]|0; //@line 28 "../../iup_progressbar.c"
 if ($12) {
  $16 = ((($15)) + 24|0); //@line 28 "../../iup_progressbar.c"
  $17 = +HEAPF64[$16>>3]; //@line 28 "../../iup_progressbar.c"
  $18 = $1; //@line 28 "../../iup_progressbar.c"
  $19 = ((($18)) + 72|0); //@line 28 "../../iup_progressbar.c"
  $20 = HEAP32[$19>>2]|0; //@line 28 "../../iup_progressbar.c"
  $21 = ((($20)) + 8|0); //@line 28 "../../iup_progressbar.c"
  HEAPF64[$21>>3] = $17; //@line 28 "../../iup_progressbar.c"
  STACKTOP = sp;return; //@line 31 "../../iup_progressbar.c"
 }
 $22 = ((($15)) + 8|0); //@line 29 "../../iup_progressbar.c"
 $23 = +HEAPF64[$22>>3]; //@line 29 "../../iup_progressbar.c"
 $24 = $1; //@line 29 "../../iup_progressbar.c"
 $25 = ((($24)) + 72|0); //@line 29 "../../iup_progressbar.c"
 $26 = HEAP32[$25>>2]|0; //@line 29 "../../iup_progressbar.c"
 $27 = ((($26)) + 16|0); //@line 29 "../../iup_progressbar.c"
 $28 = +HEAPF64[$27>>3]; //@line 29 "../../iup_progressbar.c"
 $29 = $23 < $28; //@line 29 "../../iup_progressbar.c"
 if (!($29)) {
  STACKTOP = sp;return; //@line 31 "../../iup_progressbar.c"
 }
 $30 = $1; //@line 30 "../../iup_progressbar.c"
 $31 = ((($30)) + 72|0); //@line 30 "../../iup_progressbar.c"
 $32 = HEAP32[$31>>2]|0; //@line 30 "../../iup_progressbar.c"
 $33 = ((($32)) + 16|0); //@line 30 "../../iup_progressbar.c"
 $34 = +HEAPF64[$33>>3]; //@line 30 "../../iup_progressbar.c"
 $35 = $1; //@line 30 "../../iup_progressbar.c"
 $36 = ((($35)) + 72|0); //@line 30 "../../iup_progressbar.c"
 $37 = HEAP32[$36>>2]|0; //@line 30 "../../iup_progressbar.c"
 $38 = ((($37)) + 8|0); //@line 30 "../../iup_progressbar.c"
 HEAPF64[$38>>3] = $34; //@line 30 "../../iup_progressbar.c"
 STACKTOP = sp;return; //@line 31 "../../iup_progressbar.c"
}
function _iupProgressBarNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 91 "../../iup_progressbar.c"
 $0 = $1; //@line 91 "../../iup_progressbar.c"
 $2 = $0; //@line 93 "../../iup_progressbar.c"
 HEAP32[$2>>2] = 15146; //@line 93 "../../iup_progressbar.c"
 $3 = $0; //@line 94 "../../iup_progressbar.c"
 $4 = ((($3)) + 4|0); //@line 94 "../../iup_progressbar.c"
 HEAP32[$4>>2] = 0; //@line 94 "../../iup_progressbar.c"
 $5 = $0; //@line 95 "../../iup_progressbar.c"
 $6 = ((($5)) + 8|0); //@line 95 "../../iup_progressbar.c"
 HEAP32[$6>>2] = 1; //@line 95 "../../iup_progressbar.c"
 $7 = $0; //@line 96 "../../iup_progressbar.c"
 $8 = ((($7)) + 12|0); //@line 96 "../../iup_progressbar.c"
 HEAP32[$8>>2] = 0; //@line 96 "../../iup_progressbar.c"
 $9 = $0; //@line 97 "../../iup_progressbar.c"
 $10 = ((($9)) + 16|0); //@line 97 "../../iup_progressbar.c"
 HEAP32[$10>>2] = 0; //@line 97 "../../iup_progressbar.c"
 $11 = $0; //@line 100 "../../iup_progressbar.c"
 $12 = ((($11)) + 32|0); //@line 100 "../../iup_progressbar.c"
 HEAP32[$12>>2] = 359; //@line 100 "../../iup_progressbar.c"
 $13 = $0; //@line 101 "../../iup_progressbar.c"
 $14 = ((($13)) + 40|0); //@line 101 "../../iup_progressbar.c"
 HEAP32[$14>>2] = 360; //@line 101 "../../iup_progressbar.c"
 $15 = $0; //@line 102 "../../iup_progressbar.c"
 $16 = ((($15)) + 52|0); //@line 102 "../../iup_progressbar.c"
 HEAP32[$16>>2] = 361; //@line 102 "../../iup_progressbar.c"
 $17 = $0; //@line 104 "../../iup_progressbar.c"
 $18 = ((($17)) + 72|0); //@line 104 "../../iup_progressbar.c"
 HEAP32[$18>>2] = 47; //@line 104 "../../iup_progressbar.c"
 $19 = $0; //@line 105 "../../iup_progressbar.c"
 $20 = ((($19)) + 48|0); //@line 105 "../../iup_progressbar.c"
 HEAP32[$20>>2] = 48; //@line 105 "../../iup_progressbar.c"
 $21 = $0; //@line 108 "../../iup_progressbar.c"
 _iupClassRegisterCallback($21,15572,362470); //@line 108 "../../iup_progressbar.c"
 $22 = $0; //@line 109 "../../iup_progressbar.c"
 _iupClassRegisterCallback($22,15563,362470); //@line 109 "../../iup_progressbar.c"
 $23 = $0; //@line 112 "../../iup_progressbar.c"
 _iupBaseRegisterCommonAttrib($23); //@line 112 "../../iup_progressbar.c"
 $24 = $0; //@line 115 "../../iup_progressbar.c"
 _iupBaseRegisterVisualAttrib($24); //@line 115 "../../iup_progressbar.c"
 $25 = $0; //@line 118 "../../iup_progressbar.c"
 _iupClassRegisterAttribute($25,19940,362,363,(-1),19944,9); //@line 118 "../../iup_progressbar.c"
 $26 = $0; //@line 119 "../../iup_progressbar.c"
 _iupClassRegisterAttribute($26,19934,364,365,(-1),19938,9); //@line 119 "../../iup_progressbar.c"
 $27 = $0; //@line 121 "../../iup_progressbar.c"
 _iupClassRegisterAttribute($27,19962,0,0,(-1),19951,8); //@line 121 "../../iup_progressbar.c"
 $28 = $0; //@line 123 "../../iup_progressbar.c"
 _iupdrvProgressBarInitClass($28); //@line 123 "../../iup_progressbar.c"
 $29 = $0; //@line 125 "../../iup_progressbar.c"
 STACKTOP = sp;return ($29|0); //@line 125 "../../iup_progressbar.c"
}
function _iProgressBarCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = (_calloc(1,40)|0); //@line 71 "../../iup_progressbar.c"
 $5 = $2; //@line 71 "../../iup_progressbar.c"
 $6 = ((($5)) + 72|0); //@line 71 "../../iup_progressbar.c"
 HEAP32[$6>>2] = $4; //@line 71 "../../iup_progressbar.c"
 $7 = $2; //@line 74 "../../iup_progressbar.c"
 $8 = ((($7)) + 72|0); //@line 74 "../../iup_progressbar.c"
 $9 = HEAP32[$8>>2]|0; //@line 74 "../../iup_progressbar.c"
 $10 = ((($9)) + 24|0); //@line 74 "../../iup_progressbar.c"
 HEAPF64[$10>>3] = 1.0; //@line 74 "../../iup_progressbar.c"
 $11 = $2; //@line 75 "../../iup_progressbar.c"
 $12 = ((($11)) + 72|0); //@line 75 "../../iup_progressbar.c"
 $13 = HEAP32[$12>>2]|0; //@line 75 "../../iup_progressbar.c"
 HEAP32[$13>>2] = 0; //@line 75 "../../iup_progressbar.c"
 $14 = $2; //@line 78 "../../iup_progressbar.c"
 _IupSetAttribute($14,20008,15158); //@line 78 "../../iup_progressbar.c"
 STACKTOP = sp;return 0; //@line 80 "../../iup_progressbar.c"
}
function _iProgressBarDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 85 "../../iup_progressbar.c"
 $3 = ((($2)) + 72|0); //@line 85 "../../iup_progressbar.c"
 $4 = HEAP32[$3>>2]|0; //@line 85 "../../iup_progressbar.c"
 $5 = ((($4)) + 32|0); //@line 85 "../../iup_progressbar.c"
 $6 = HEAP32[$5>>2]|0; //@line 85 "../../iup_progressbar.c"
 $7 = ($6|0)!=(0|0); //@line 85 "../../iup_progressbar.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 87 "../../iup_progressbar.c"
 }
 $8 = $1; //@line 86 "../../iup_progressbar.c"
 $9 = ((($8)) + 72|0); //@line 86 "../../iup_progressbar.c"
 $10 = HEAP32[$9>>2]|0; //@line 86 "../../iup_progressbar.c"
 $11 = ((($10)) + 32|0); //@line 86 "../../iup_progressbar.c"
 $12 = HEAP32[$11>>2]|0; //@line 86 "../../iup_progressbar.c"
 _IupDestroy($12); //@line 86 "../../iup_progressbar.c"
 STACKTOP = sp;return; //@line 87 "../../iup_progressbar.c"
}
function _iProgressBarGetMinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 52 "../../iup_progressbar.c"
 $3 = ((($2)) + 72|0); //@line 52 "../../iup_progressbar.c"
 $4 = HEAP32[$3>>2]|0; //@line 52 "../../iup_progressbar.c"
 $5 = ((($4)) + 16|0); //@line 52 "../../iup_progressbar.c"
 $6 = +HEAPF64[$5>>3]; //@line 52 "../../iup_progressbar.c"
 $7 = (_iupStrReturnDouble($6)|0); //@line 52 "../../iup_progressbar.c"
 STACKTOP = sp;return ($7|0); //@line 52 "../../iup_progressbar.c"
}
function _iProgressBarSetMinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 45 "../../iup_progressbar.c"
 $5 = $2; //@line 45 "../../iup_progressbar.c"
 $6 = ((($5)) + 72|0); //@line 45 "../../iup_progressbar.c"
 $7 = HEAP32[$6>>2]|0; //@line 45 "../../iup_progressbar.c"
 $8 = ((($7)) + 16|0); //@line 45 "../../iup_progressbar.c"
 $9 = (_iupStrToDouble($4,$8)|0); //@line 45 "../../iup_progressbar.c"
 $10 = ($9|0)!=(0); //@line 45 "../../iup_progressbar.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 47 "../../iup_progressbar.c"
 }
 $11 = $2; //@line 46 "../../iup_progressbar.c"
 _iProgressBarCropValue($11); //@line 46 "../../iup_progressbar.c"
 STACKTOP = sp;return 0; //@line 47 "../../iup_progressbar.c"
}
function _iProgressBarGetMaxAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 64 "../../iup_progressbar.c"
 $3 = ((($2)) + 72|0); //@line 64 "../../iup_progressbar.c"
 $4 = HEAP32[$3>>2]|0; //@line 64 "../../iup_progressbar.c"
 $5 = ((($4)) + 24|0); //@line 64 "../../iup_progressbar.c"
 $6 = +HEAPF64[$5>>3]; //@line 64 "../../iup_progressbar.c"
 $7 = (_iupStrReturnDouble($6)|0); //@line 64 "../../iup_progressbar.c"
 STACKTOP = sp;return ($7|0); //@line 64 "../../iup_progressbar.c"
}
function _iProgressBarSetMaxAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 57 "../../iup_progressbar.c"
 $5 = $2; //@line 57 "../../iup_progressbar.c"
 $6 = ((($5)) + 72|0); //@line 57 "../../iup_progressbar.c"
 $7 = HEAP32[$6>>2]|0; //@line 57 "../../iup_progressbar.c"
 $8 = ((($7)) + 24|0); //@line 57 "../../iup_progressbar.c"
 $9 = (_iupStrToDouble($4,$8)|0); //@line 57 "../../iup_progressbar.c"
 $10 = ($9|0)!=(0); //@line 57 "../../iup_progressbar.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 59 "../../iup_progressbar.c"
 }
 $11 = $2; //@line 58 "../../iup_progressbar.c"
 _iProgressBarCropValue($11); //@line 58 "../../iup_progressbar.c"
 STACKTOP = sp;return 0; //@line 59 "../../iup_progressbar.c"
}
function _IupProgressBar() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_IupCreate(15146)|0); //@line 130 "../../iup_progressbar.c"
 return ($0|0); //@line 130 "../../iup_progressbar.c"
}
function _iupProgressDlgNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(15165)|0); //@line 272 "../../iup_progressdlg.c"
 $2 = (_iupClassNew($1)|0); //@line 272 "../../iup_progressdlg.c"
 $0 = $2; //@line 272 "../../iup_progressdlg.c"
 $3 = $0; //@line 274 "../../iup_progressdlg.c"
 $4 = ((($3)) + 32|0); //@line 274 "../../iup_progressdlg.c"
 HEAP32[$4>>2] = 366; //@line 274 "../../iup_progressdlg.c"
 $5 = $0; //@line 275 "../../iup_progressdlg.c"
 $6 = ((($5)) + 40|0); //@line 275 "../../iup_progressdlg.c"
 HEAP32[$6>>2] = 367; //@line 275 "../../iup_progressdlg.c"
 $7 = $0; //@line 276 "../../iup_progressdlg.c"
 $8 = ((($7)) + 52|0); //@line 276 "../../iup_progressdlg.c"
 HEAP32[$8>>2] = 368; //@line 276 "../../iup_progressdlg.c"
 $9 = $0; //@line 278 "../../iup_progressdlg.c"
 HEAP32[$9>>2] = 15172; //@line 278 "../../iup_progressdlg.c"
 $10 = $0; //@line 279 "../../iup_progressdlg.c"
 $11 = ((($10)) + 8|0); //@line 279 "../../iup_progressdlg.c"
 HEAP32[$11>>2] = 3; //@line 279 "../../iup_progressdlg.c"
 $12 = $0; //@line 280 "../../iup_progressdlg.c"
 $13 = ((($12)) + 16|0); //@line 280 "../../iup_progressdlg.c"
 HEAP32[$13>>2] = 1; //@line 280 "../../iup_progressdlg.c"
 $14 = $0; //@line 281 "../../iup_progressdlg.c"
 $15 = ((($14)) + 12|0); //@line 281 "../../iup_progressdlg.c"
 HEAP32[$15>>2] = 0; //@line 281 "../../iup_progressdlg.c"
 $16 = $0; //@line 283 "../../iup_progressdlg.c"
 _iupClassRegisterCallback($16,15184,362470); //@line 283 "../../iup_progressdlg.c"
 $17 = $0; //@line 285 "../../iup_progressdlg.c"
 _iupClassRegisterAttribute($17,15194,369,370,0,0,9); //@line 285 "../../iup_progressdlg.c"
 $18 = $0; //@line 286 "../../iup_progressdlg.c"
 _iupClassRegisterAttribute($18,18119,371,372,0,0,9); //@line 286 "../../iup_progressdlg.c"
 $19 = $0; //@line 287 "../../iup_progressdlg.c"
 _iupClassRegisterAttribute($19,15205,0,373,0,0,73); //@line 287 "../../iup_progressdlg.c"
 $20 = $0; //@line 288 "../../iup_progressdlg.c"
 _iupClassRegisterAttribute($20,15209,374,375,0,0,9); //@line 288 "../../iup_progressdlg.c"
 $21 = $0; //@line 290 "../../iup_progressdlg.c"
 _iupClassRegisterAttribute($21,15217,376,377,0,0,9); //@line 290 "../../iup_progressdlg.c"
 $22 = $0; //@line 291 "../../iup_progressdlg.c"
 _iupClassRegisterAttribute($22,15223,378,379,0,0,9); //@line 291 "../../iup_progressdlg.c"
 $23 = $0; //@line 293 "../../iup_progressdlg.c"
 STACKTOP = sp;return ($23|0); //@line 293 "../../iup_progressdlg.c"
}
function _iProgressDlgCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = $0;
 $3 = $1;
 $10 = (_malloc(28)|0); //@line 225 "../../iup_progressdlg.c"
 $9 = $10; //@line 225 "../../iup_progressdlg.c"
 $11 = $9; //@line 226 "../../iup_progressdlg.c"
 ;HEAP32[$11>>2]=0|0;HEAP32[$11+4>>2]=0|0;HEAP32[$11+8>>2]=0|0;HEAP32[$11+12>>2]=0|0;HEAP32[$11+16>>2]=0|0;HEAP32[$11+20>>2]=0|0;HEAP32[$11+24>>2]=0|0; //@line 226 "../../iup_progressdlg.c"
 $12 = $2; //@line 227 "../../iup_progressdlg.c"
 $13 = $9; //@line 227 "../../iup_progressdlg.c"
 _iupAttribSet($12,15235,$13); //@line 227 "../../iup_progressdlg.c"
 $14 = (_IupLabel(362470)|0); //@line 229 "../../iup_progressdlg.c"
 $4 = $14; //@line 229 "../../iup_progressdlg.c"
 $15 = $4; //@line 230 "../../iup_progressdlg.c"
 _IupSetAttribute($15,20073,20441); //@line 230 "../../iup_progressdlg.c"
 $16 = (_IupProgressBar()|0); //@line 232 "../../iup_progressdlg.c"
 $5 = $16; //@line 232 "../../iup_progressdlg.c"
 $17 = $5; //@line 233 "../../iup_progressdlg.c"
 _IupSetAttribute($17,20008,15292); //@line 233 "../../iup_progressdlg.c"
 $18 = $5; //@line 234 "../../iup_progressdlg.c"
 _IupSetAttribute($18,20073,19951); //@line 234 "../../iup_progressdlg.c"
 $19 = $5; //@line 235 "../../iup_progressdlg.c"
 _IupSetAttribute($19,19934,15299); //@line 235 "../../iup_progressdlg.c"
 $20 = (_IupProgressBar()|0); //@line 237 "../../iup_progressdlg.c"
 $6 = $20; //@line 237 "../../iup_progressdlg.c"
 $21 = $6; //@line 238 "../../iup_progressdlg.c"
 _IupSetAttribute($21,20008,15292); //@line 238 "../../iup_progressdlg.c"
 $22 = $6; //@line 239 "../../iup_progressdlg.c"
 _IupSetAttribute($22,20073,19951); //@line 239 "../../iup_progressdlg.c"
 $23 = $6; //@line 240 "../../iup_progressdlg.c"
 _IupSetAttribute($23,15279,16114); //@line 240 "../../iup_progressdlg.c"
 $24 = $6; //@line 241 "../../iup_progressdlg.c"
 _IupSetAttribute($24,20132,17810); //@line 241 "../../iup_progressdlg.c"
 $25 = (_IupButton(15303,0)|0); //@line 243 "../../iup_progressdlg.c"
 $7 = $25; //@line 243 "../../iup_progressdlg.c"
 $26 = $7; //@line 244 "../../iup_progressdlg.c"
 _IupSetAttribute($26,15316,15324); //@line 244 "../../iup_progressdlg.c"
 $27 = $7; //@line 245 "../../iup_progressdlg.c"
 (_IupSetCallback($27,20479,380)|0); //@line 245 "../../iup_progressdlg.c"
 $28 = $2; //@line 246 "../../iup_progressdlg.c"
 $29 = $7; //@line 246 "../../iup_progressdlg.c"
 _IupSetAttributeHandle($28,15328,$29); //@line 246 "../../iup_progressdlg.c"
 $30 = $4; //@line 248 "../../iup_progressdlg.c"
 $31 = $5; //@line 248 "../../iup_progressdlg.c"
 $32 = $6; //@line 248 "../../iup_progressdlg.c"
 HEAP32[$vararg_buffer>>2] = $32; //@line 248 "../../iup_progressdlg.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 248 "../../iup_progressdlg.c"
 HEAP32[$vararg_ptr1>>2] = 0; //@line 248 "../../iup_progressdlg.c"
 $33 = (_IupZbox($31,$vararg_buffer)|0); //@line 248 "../../iup_progressdlg.c"
 $34 = $7; //@line 248 "../../iup_progressdlg.c"
 HEAP32[$vararg_buffer2>>2] = $33; //@line 248 "../../iup_progressdlg.c"
 $vararg_ptr5 = ((($vararg_buffer2)) + 4|0); //@line 248 "../../iup_progressdlg.c"
 HEAP32[$vararg_ptr5>>2] = $34; //@line 248 "../../iup_progressdlg.c"
 $vararg_ptr6 = ((($vararg_buffer2)) + 8|0); //@line 248 "../../iup_progressdlg.c"
 HEAP32[$vararg_ptr6>>2] = 0; //@line 248 "../../iup_progressdlg.c"
 $35 = (_IupVbox($30,$vararg_buffer2)|0); //@line 248 "../../iup_progressdlg.c"
 $8 = $35; //@line 248 "../../iup_progressdlg.c"
 $36 = $8; //@line 249 "../../iup_progressdlg.c"
 _IupSetAttribute($36,20666,15339); //@line 249 "../../iup_progressdlg.c"
 $37 = $8; //@line 250 "../../iup_progressdlg.c"
 _IupSetAttribute($37,20659,15339); //@line 250 "../../iup_progressdlg.c"
 $38 = $8; //@line 251 "../../iup_progressdlg.c"
 _IupSetAttribute($38,20679,20689); //@line 251 "../../iup_progressdlg.c"
 $39 = $2; //@line 254 "../../iup_progressdlg.c"
 $40 = $8; //@line 254 "../../iup_progressdlg.c"
 _iupChildTreeAppend($39,$40); //@line 254 "../../iup_progressdlg.c"
 $41 = $2; //@line 255 "../../iup_progressdlg.c"
 _IupSetAttribute($41,15343,20140); //@line 255 "../../iup_progressdlg.c"
 $42 = $2; //@line 256 "../../iup_progressdlg.c"
 _IupSetAttribute($42,15350,20140); //@line 256 "../../iup_progressdlg.c"
 $43 = $2; //@line 257 "../../iup_progressdlg.c"
 _IupSetAttribute($43,15357,20140); //@line 257 "../../iup_progressdlg.c"
 $44 = $2; //@line 258 "../../iup_progressdlg.c"
 _IupSetAttribute($44,15364,20140); //@line 258 "../../iup_progressdlg.c"
 $45 = $5; //@line 260 "../../iup_progressdlg.c"
 $46 = $9; //@line 260 "../../iup_progressdlg.c"
 HEAP32[$46>>2] = $45; //@line 260 "../../iup_progressdlg.c"
 $47 = $4; //@line 261 "../../iup_progressdlg.c"
 $48 = $9; //@line 261 "../../iup_progressdlg.c"
 $49 = ((($48)) + 4|0); //@line 261 "../../iup_progressdlg.c"
 HEAP32[$49>>2] = $47; //@line 261 "../../iup_progressdlg.c"
 $50 = $9; //@line 263 "../../iup_progressdlg.c"
 $51 = ((($50)) + 20|0); //@line 263 "../../iup_progressdlg.c"
 HEAP32[$51>>2] = 1; //@line 263 "../../iup_progressdlg.c"
 $52 = (_clock()|0); //@line 264 "../../iup_progressdlg.c"
 $53 = $9; //@line 264 "../../iup_progressdlg.c"
 $54 = ((($53)) + 24|0); //@line 264 "../../iup_progressdlg.c"
 HEAP32[$54>>2] = $52; //@line 264 "../../iup_progressdlg.c"
 STACKTOP = sp;return 0; //@line 267 "../../iup_progressdlg.c"
}
function _iProgressDlgDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 218 "../../iup_progressdlg.c"
 $4 = (_iupAttribGet($3,15235)|0); //@line 218 "../../iup_progressdlg.c"
 $2 = $4; //@line 218 "../../iup_progressdlg.c"
 $5 = $2; //@line 219 "../../iup_progressdlg.c"
 _free($5); //@line 219 "../../iup_progressdlg.c"
 STACKTOP = sp;return; //@line 220 "../../iup_progressdlg.c"
}
function _iProgressDlgGetTotalCountAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 81 "../../iup_progressdlg.c"
 $4 = (_iupAttribGet($3,15235)|0); //@line 81 "../../iup_progressdlg.c"
 $2 = $4; //@line 81 "../../iup_progressdlg.c"
 $5 = $2; //@line 82 "../../iup_progressdlg.c"
 $6 = ((($5)) + 20|0); //@line 82 "../../iup_progressdlg.c"
 $7 = HEAP32[$6>>2]|0; //@line 82 "../../iup_progressdlg.c"
 $8 = (_iupStrReturnInt($7)|0); //@line 82 "../../iup_progressdlg.c"
 STACKTOP = sp;return ($8|0); //@line 82 "../../iup_progressdlg.c"
}
function _iProgressDlgSetTotalCountAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 73 "../../iup_progressdlg.c"
 $6 = (_iupAttribGet($5,15235)|0); //@line 73 "../../iup_progressdlg.c"
 $4 = $6; //@line 73 "../../iup_progressdlg.c"
 $7 = $3; //@line 74 "../../iup_progressdlg.c"
 $8 = $4; //@line 74 "../../iup_progressdlg.c"
 $9 = ((($8)) + 20|0); //@line 74 "../../iup_progressdlg.c"
 (_iupStrToInt($7,$9)|0); //@line 74 "../../iup_progressdlg.c"
 $10 = $4; //@line 75 "../../iup_progressdlg.c"
 $11 = ((($10)) + 20|0); //@line 75 "../../iup_progressdlg.c"
 $12 = HEAP32[$11>>2]|0; //@line 75 "../../iup_progressdlg.c"
 $13 = ($12|0)<=(0); //@line 75 "../../iup_progressdlg.c"
 if (!($13)) {
  STACKTOP = sp;return 0; //@line 76 "../../iup_progressdlg.c"
 }
 $14 = $4; //@line 75 "../../iup_progressdlg.c"
 $15 = ((($14)) + 20|0); //@line 75 "../../iup_progressdlg.c"
 HEAP32[$15>>2] = 1; //@line 75 "../../iup_progressdlg.c"
 STACKTOP = sp;return 0; //@line 76 "../../iup_progressdlg.c"
}
function _iProgressDlgGetCountAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 95 "../../iup_progressdlg.c"
 $4 = (_iupAttribGet($3,15235)|0); //@line 95 "../../iup_progressdlg.c"
 $2 = $4; //@line 95 "../../iup_progressdlg.c"
 $5 = $2; //@line 96 "../../iup_progressdlg.c"
 $6 = ((($5)) + 16|0); //@line 96 "../../iup_progressdlg.c"
 $7 = HEAP32[$6>>2]|0; //@line 96 "../../iup_progressdlg.c"
 $8 = (_iupStrReturnInt($7)|0); //@line 96 "../../iup_progressdlg.c"
 STACKTOP = sp;return ($8|0); //@line 96 "../../iup_progressdlg.c"
}
function _iProgressDlgSetCountAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 87 "../../iup_progressdlg.c"
 $6 = (_iupAttribGet($5,15235)|0); //@line 87 "../../iup_progressdlg.c"
 $4 = $6; //@line 87 "../../iup_progressdlg.c"
 $7 = $3; //@line 88 "../../iup_progressdlg.c"
 $8 = $4; //@line 88 "../../iup_progressdlg.c"
 $9 = ((($8)) + 16|0); //@line 88 "../../iup_progressdlg.c"
 $10 = (_iupStrToInt($7,$9)|0); //@line 88 "../../iup_progressdlg.c"
 $11 = ($10|0)!=(0); //@line 88 "../../iup_progressdlg.c"
 if (!($11)) {
  STACKTOP = sp;return 0; //@line 90 "../../iup_progressdlg.c"
 }
 $12 = $4; //@line 88 "../../iup_progressdlg.c"
 $13 = ((($12)) + 16|0); //@line 88 "../../iup_progressdlg.c"
 $14 = HEAP32[$13>>2]|0; //@line 88 "../../iup_progressdlg.c"
 $15 = ($14|0)>=(0); //@line 88 "../../iup_progressdlg.c"
 if (!($15)) {
  STACKTOP = sp;return 0; //@line 90 "../../iup_progressdlg.c"
 }
 $16 = $4; //@line 88 "../../iup_progressdlg.c"
 $17 = ((($16)) + 16|0); //@line 88 "../../iup_progressdlg.c"
 $18 = HEAP32[$17>>2]|0; //@line 88 "../../iup_progressdlg.c"
 $19 = $4; //@line 88 "../../iup_progressdlg.c"
 $20 = ((($19)) + 20|0); //@line 88 "../../iup_progressdlg.c"
 $21 = HEAP32[$20>>2]|0; //@line 88 "../../iup_progressdlg.c"
 $22 = ($18|0)<=($21|0); //@line 88 "../../iup_progressdlg.c"
 if (!($22)) {
  STACKTOP = sp;return 0; //@line 90 "../../iup_progressdlg.c"
 }
 $23 = $4; //@line 89 "../../iup_progressdlg.c"
 $24 = $4; //@line 89 "../../iup_progressdlg.c"
 $25 = ((($24)) + 16|0); //@line 89 "../../iup_progressdlg.c"
 $26 = HEAP32[$25>>2]|0; //@line 89 "../../iup_progressdlg.c"
 $27 = ($26*100)|0; //@line 89 "../../iup_progressdlg.c"
 $28 = $4; //@line 89 "../../iup_progressdlg.c"
 $29 = ((($28)) + 20|0); //@line 89 "../../iup_progressdlg.c"
 $30 = HEAP32[$29>>2]|0; //@line 89 "../../iup_progressdlg.c"
 $31 = (($27|0) / ($30|0))&-1; //@line 89 "../../iup_progressdlg.c"
 _iProgressDlgSetPercent($23,$31); //@line 89 "../../iup_progressdlg.c"
 STACKTOP = sp;return 0; //@line 90 "../../iup_progressdlg.c"
}
function _iProgressDlgSetIncAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 101 "../../iup_progressdlg.c"
 $7 = (_iupAttribGet($6,15235)|0); //@line 101 "../../iup_progressdlg.c"
 $4 = $7; //@line 101 "../../iup_progressdlg.c"
 HEAP32[$5>>2] = 1; //@line 102 "../../iup_progressdlg.c"
 $8 = $3; //@line 103 "../../iup_progressdlg.c"
 (_iupStrToInt($8,$5)|0); //@line 103 "../../iup_progressdlg.c"
 $9 = HEAP32[$5>>2]|0; //@line 104 "../../iup_progressdlg.c"
 $10 = $4; //@line 104 "../../iup_progressdlg.c"
 $11 = ((($10)) + 16|0); //@line 104 "../../iup_progressdlg.c"
 $12 = HEAP32[$11>>2]|0; //@line 104 "../../iup_progressdlg.c"
 $13 = (($12) + ($9))|0; //@line 104 "../../iup_progressdlg.c"
 HEAP32[$11>>2] = $13; //@line 104 "../../iup_progressdlg.c"
 $14 = $4; //@line 105 "../../iup_progressdlg.c"
 $15 = ((($14)) + 16|0); //@line 105 "../../iup_progressdlg.c"
 $16 = HEAP32[$15>>2]|0; //@line 105 "../../iup_progressdlg.c"
 $17 = ($16|0)<(0); //@line 105 "../../iup_progressdlg.c"
 if ($17) {
  $18 = $4; //@line 105 "../../iup_progressdlg.c"
  $19 = ((($18)) + 16|0); //@line 105 "../../iup_progressdlg.c"
  HEAP32[$19>>2] = 0; //@line 105 "../../iup_progressdlg.c"
 }
 $20 = $4; //@line 106 "../../iup_progressdlg.c"
 $21 = ((($20)) + 16|0); //@line 106 "../../iup_progressdlg.c"
 $22 = HEAP32[$21>>2]|0; //@line 106 "../../iup_progressdlg.c"
 $23 = $4; //@line 106 "../../iup_progressdlg.c"
 $24 = ((($23)) + 20|0); //@line 106 "../../iup_progressdlg.c"
 $25 = HEAP32[$24>>2]|0; //@line 106 "../../iup_progressdlg.c"
 $26 = ($22|0)>($25|0); //@line 106 "../../iup_progressdlg.c"
 if ($26) {
  $27 = $4; //@line 106 "../../iup_progressdlg.c"
  $28 = ((($27)) + 20|0); //@line 106 "../../iup_progressdlg.c"
  $29 = HEAP32[$28>>2]|0; //@line 106 "../../iup_progressdlg.c"
  $30 = $4; //@line 106 "../../iup_progressdlg.c"
  $31 = ((($30)) + 16|0); //@line 106 "../../iup_progressdlg.c"
  HEAP32[$31>>2] = $29; //@line 106 "../../iup_progressdlg.c"
 }
 $32 = $4; //@line 107 "../../iup_progressdlg.c"
 $33 = $4; //@line 107 "../../iup_progressdlg.c"
 $34 = ((($33)) + 16|0); //@line 107 "../../iup_progressdlg.c"
 $35 = HEAP32[$34>>2]|0; //@line 107 "../../iup_progressdlg.c"
 $36 = ($35*100)|0; //@line 107 "../../iup_progressdlg.c"
 $37 = $4; //@line 107 "../../iup_progressdlg.c"
 $38 = ((($37)) + 20|0); //@line 107 "../../iup_progressdlg.c"
 $39 = HEAP32[$38>>2]|0; //@line 107 "../../iup_progressdlg.c"
 $40 = (($36|0) / ($39|0))&-1; //@line 107 "../../iup_progressdlg.c"
 _iProgressDlgSetPercent($32,$40); //@line 107 "../../iup_progressdlg.c"
 STACKTOP = sp;return 0; //@line 108 "../../iup_progressdlg.c"
}
function _iProgressDlgGetPercentAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 179 "../../iup_progressdlg.c"
 $4 = (_iupAttribGet($3,15235)|0); //@line 179 "../../iup_progressdlg.c"
 $2 = $4; //@line 179 "../../iup_progressdlg.c"
 $5 = $2; //@line 180 "../../iup_progressdlg.c"
 $6 = ((($5)) + 12|0); //@line 180 "../../iup_progressdlg.c"
 $7 = HEAP32[$6>>2]|0; //@line 180 "../../iup_progressdlg.c"
 $8 = (_iupStrReturnInt($7)|0); //@line 180 "../../iup_progressdlg.c"
 STACKTOP = sp;return ($8|0); //@line 180 "../../iup_progressdlg.c"
}
function _iProgressDlgSetPercentAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 170 "../../iup_progressdlg.c"
 $7 = (_iupAttribGet($6,15235)|0); //@line 170 "../../iup_progressdlg.c"
 $4 = $7; //@line 170 "../../iup_progressdlg.c"
 $8 = $3; //@line 172 "../../iup_progressdlg.c"
 $9 = (_iupStrToInt($8,$5)|0); //@line 172 "../../iup_progressdlg.c"
 $10 = ($9|0)!=(0); //@line 172 "../../iup_progressdlg.c"
 $11 = HEAP32[$5>>2]|0; //@line 172 "../../iup_progressdlg.c"
 $12 = ($11|0)>=(0); //@line 172 "../../iup_progressdlg.c"
 $or$cond = $10 & $12; //@line 172 "../../iup_progressdlg.c"
 $13 = HEAP32[$5>>2]|0; //@line 172 "../../iup_progressdlg.c"
 $14 = ($13|0)<=(100); //@line 172 "../../iup_progressdlg.c"
 $or$cond3 = $or$cond & $14; //@line 172 "../../iup_progressdlg.c"
 if (!($or$cond3)) {
  STACKTOP = sp;return 0; //@line 174 "../../iup_progressdlg.c"
 }
 $15 = $4; //@line 173 "../../iup_progressdlg.c"
 $16 = HEAP32[$5>>2]|0; //@line 173 "../../iup_progressdlg.c"
 _iProgressDlgSetPercent($15,$16); //@line 173 "../../iup_progressdlg.c"
 STACKTOP = sp;return 0; //@line 174 "../../iup_progressdlg.c"
}
function _iProgressDlgGetStateAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 113 "../../iup_progressdlg.c"
 $5 = (_iupAttribGet($4,15235)|0); //@line 113 "../../iup_progressdlg.c"
 $3 = $5; //@line 113 "../../iup_progressdlg.c"
 $6 = $3; //@line 114 "../../iup_progressdlg.c"
 $7 = ((($6)) + 8|0); //@line 114 "../../iup_progressdlg.c"
 $8 = HEAP32[$7>>2]|0; //@line 114 "../../iup_progressdlg.c"
 $9 = ($8|0)==(-1); //@line 114 "../../iup_progressdlg.c"
 do {
  if ($9) {
   $1 = 15250; //@line 115 "../../iup_progressdlg.c"
  } else {
   $10 = $3; //@line 116 "../../iup_progressdlg.c"
   $11 = ((($10)) + 8|0); //@line 116 "../../iup_progressdlg.c"
   $12 = HEAP32[$11>>2]|0; //@line 116 "../../iup_progressdlg.c"
   $13 = ($12|0)==(1); //@line 116 "../../iup_progressdlg.c"
   if ($13) {
    $1 = 15258; //@line 117 "../../iup_progressdlg.c"
    break;
   }
   $14 = $3; //@line 118 "../../iup_progressdlg.c"
   $15 = ((($14)) + 8|0); //@line 118 "../../iup_progressdlg.c"
   $16 = HEAP32[$15>>2]|0; //@line 118 "../../iup_progressdlg.c"
   $17 = ($16|0)==(2); //@line 118 "../../iup_progressdlg.c"
   if ($17) {
    $1 = 15269; //@line 119 "../../iup_progressdlg.c"
    break;
   } else {
    $1 = 15287; //@line 121 "../../iup_progressdlg.c"
    break;
   }
  }
 } while(0);
 $18 = $1; //@line 122 "../../iup_progressdlg.c"
 STACKTOP = sp;return ($18|0); //@line 122 "../../iup_progressdlg.c"
}
function _iProgressDlgSetStateAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $8 = $2; //@line 136 "../../iup_progressdlg.c"
 $9 = (_iupAttribGet($8,15235)|0); //@line 136 "../../iup_progressdlg.c"
 $4 = $9; //@line 136 "../../iup_progressdlg.c"
 $10 = $3; //@line 138 "../../iup_progressdlg.c"
 $11 = (_iupStrEqualNoCase($10,15250)|0); //@line 138 "../../iup_progressdlg.c"
 $12 = ($11|0)!=(0); //@line 138 "../../iup_progressdlg.c"
 if ($12) {
  $13 = $4; //@line 140 "../../iup_progressdlg.c"
  _iProgressDlgStopMarquee($13); //@line 140 "../../iup_progressdlg.c"
  $14 = $4; //@line 141 "../../iup_progressdlg.c"
  $15 = ((($14)) + 8|0); //@line 141 "../../iup_progressdlg.c"
  HEAP32[$15>>2] = -1; //@line 141 "../../iup_progressdlg.c"
  STACKTOP = sp;return 0; //@line 165 "../../iup_progressdlg.c"
 }
 $16 = $3; //@line 143 "../../iup_progressdlg.c"
 $17 = (_iupStrEqualNoCase($16,15258)|0); //@line 143 "../../iup_progressdlg.c"
 $18 = ($17|0)!=(0); //@line 143 "../../iup_progressdlg.c"
 if ($18) {
  $19 = $4; //@line 145 "../../iup_progressdlg.c"
  $20 = HEAP32[$19>>2]|0; //@line 145 "../../iup_progressdlg.c"
  $21 = (_IupGetParent($20)|0); //@line 145 "../../iup_progressdlg.c"
  $5 = $21; //@line 145 "../../iup_progressdlg.c"
  $22 = $5; //@line 146 "../../iup_progressdlg.c"
  _IupSetAttribute($22,20110,19944); //@line 146 "../../iup_progressdlg.c"
  $23 = $4; //@line 147 "../../iup_progressdlg.c"
  $24 = ((($23)) + 8|0); //@line 147 "../../iup_progressdlg.c"
  HEAP32[$24>>2] = 1; //@line 147 "../../iup_progressdlg.c"
  STACKTOP = sp;return 0; //@line 165 "../../iup_progressdlg.c"
 }
 $25 = $3; //@line 149 "../../iup_progressdlg.c"
 $26 = (_iupStrEqualNoCase($25,15269)|0); //@line 149 "../../iup_progressdlg.c"
 $27 = ($26|0)!=(0); //@line 149 "../../iup_progressdlg.c"
 $28 = $4; //@line 151 "../../iup_progressdlg.c"
 if ($27) {
  $29 = HEAP32[$28>>2]|0; //@line 151 "../../iup_progressdlg.c"
  $30 = (_IupGetParent($29)|0); //@line 151 "../../iup_progressdlg.c"
  $6 = $30; //@line 151 "../../iup_progressdlg.c"
  $31 = $4; //@line 152 "../../iup_progressdlg.c"
  $32 = HEAP32[$31>>2]|0; //@line 152 "../../iup_progressdlg.c"
  $33 = (_IupGetBrother($32)|0); //@line 152 "../../iup_progressdlg.c"
  $7 = $33; //@line 152 "../../iup_progressdlg.c"
  $34 = $6; //@line 153 "../../iup_progressdlg.c"
  _IupSetAttribute($34,20110,19938); //@line 153 "../../iup_progressdlg.c"
  $35 = $7; //@line 154 "../../iup_progressdlg.c"
  _IupSetAttribute($35,15279,16114); //@line 154 "../../iup_progressdlg.c"
  $36 = $4; //@line 155 "../../iup_progressdlg.c"
  $37 = ((($36)) + 8|0); //@line 155 "../../iup_progressdlg.c"
  HEAP32[$37>>2] = 2; //@line 155 "../../iup_progressdlg.c"
  STACKTOP = sp;return 0; //@line 165 "../../iup_progressdlg.c"
 } else {
  $38 = ((($28)) + 8|0); //@line 159 "../../iup_progressdlg.c"
  HEAP32[$38>>2] = 0; //@line 159 "../../iup_progressdlg.c"
  $39 = $4; //@line 160 "../../iup_progressdlg.c"
  $40 = ((($39)) + 12|0); //@line 160 "../../iup_progressdlg.c"
  HEAP32[$40>>2] = 0; //@line 160 "../../iup_progressdlg.c"
  $41 = $4; //@line 161 "../../iup_progressdlg.c"
  $42 = ((($41)) + 16|0); //@line 161 "../../iup_progressdlg.c"
  HEAP32[$42>>2] = 0; //@line 161 "../../iup_progressdlg.c"
  $43 = $4; //@line 162 "../../iup_progressdlg.c"
  $44 = HEAP32[$43>>2]|0; //@line 162 "../../iup_progressdlg.c"
  _IupSetAttribute($44,20104,19944); //@line 162 "../../iup_progressdlg.c"
  $45 = $4; //@line 163 "../../iup_progressdlg.c"
  _iProgressDlgStopMarquee($45); //@line 163 "../../iup_progressdlg.c"
  STACKTOP = sp;return 0; //@line 165 "../../iup_progressdlg.c"
 }
 return (0)|0;
}
function _iProgressDlgGetDescriptionAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 193 "../../iup_progressdlg.c"
 $4 = (_iupAttribGet($3,15235)|0); //@line 193 "../../iup_progressdlg.c"
 $2 = $4; //@line 193 "../../iup_progressdlg.c"
 $5 = $2; //@line 194 "../../iup_progressdlg.c"
 $6 = ((($5)) + 4|0); //@line 194 "../../iup_progressdlg.c"
 $7 = HEAP32[$6>>2]|0; //@line 194 "../../iup_progressdlg.c"
 $8 = (_IupGetAttribute($7,20508)|0); //@line 194 "../../iup_progressdlg.c"
 STACKTOP = sp;return ($8|0); //@line 194 "../../iup_progressdlg.c"
}
function _iProgressDlgSetDescriptionAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 185 "../../iup_progressdlg.c"
 $6 = (_iupAttribGet($5,15235)|0); //@line 185 "../../iup_progressdlg.c"
 $4 = $6; //@line 185 "../../iup_progressdlg.c"
 $7 = $4; //@line 186 "../../iup_progressdlg.c"
 $8 = ((($7)) + 4|0); //@line 186 "../../iup_progressdlg.c"
 $9 = HEAP32[$8>>2]|0; //@line 186 "../../iup_progressdlg.c"
 $10 = $3; //@line 186 "../../iup_progressdlg.c"
 _IupStoreAttribute($9,20508,$10); //@line 186 "../../iup_progressdlg.c"
 _IupFlush(); //@line 187 "../../iup_progressdlg.c"
 STACKTOP = sp;return 0; //@line 188 "../../iup_progressdlg.c"
}
function _iProgressDlgStopMarquee($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 126 "../../iup_progressdlg.c"
 $5 = HEAP32[$4>>2]|0; //@line 126 "../../iup_progressdlg.c"
 $6 = (_IupGetParent($5)|0); //@line 126 "../../iup_progressdlg.c"
 $2 = $6; //@line 126 "../../iup_progressdlg.c"
 $7 = $2; //@line 127 "../../iup_progressdlg.c"
 $8 = (_IupGetInt($7,20110)|0); //@line 127 "../../iup_progressdlg.c"
 $9 = ($8|0)==(1); //@line 127 "../../iup_progressdlg.c"
 if (!($9)) {
  STACKTOP = sp;return; //@line 132 "../../iup_progressdlg.c"
 }
 $10 = $1; //@line 129 "../../iup_progressdlg.c"
 $11 = HEAP32[$10>>2]|0; //@line 129 "../../iup_progressdlg.c"
 $12 = (_IupGetBrother($11)|0); //@line 129 "../../iup_progressdlg.c"
 $3 = $12; //@line 129 "../../iup_progressdlg.c"
 $13 = $3; //@line 130 "../../iup_progressdlg.c"
 _IupSetAttribute($13,15279,17810); //@line 130 "../../iup_progressdlg.c"
 STACKTOP = sp;return; //@line 132 "../../iup_progressdlg.c"
}
function _iProgressDlgSetPercent($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 43 "../../iup_progressdlg.c"
 $6 = ((($5)) + 8|0); //@line 43 "../../iup_progressdlg.c"
 $7 = HEAP32[$6>>2]|0; //@line 43 "../../iup_progressdlg.c"
 $8 = ($7|0)==(0); //@line 43 "../../iup_progressdlg.c"
 if ($8) {
  $9 = $2; //@line 44 "../../iup_progressdlg.c"
  $10 = ((($9)) + 8|0); //@line 44 "../../iup_progressdlg.c"
  HEAP32[$10>>2] = 1; //@line 44 "../../iup_progressdlg.c"
 }
 $11 = $2; //@line 46 "../../iup_progressdlg.c"
 $12 = ((($11)) + 8|0); //@line 46 "../../iup_progressdlg.c"
 $13 = HEAP32[$12>>2]|0; //@line 46 "../../iup_progressdlg.c"
 $14 = ($13|0)!=(1); //@line 46 "../../iup_progressdlg.c"
 if ($14) {
  STACKTOP = sp;return; //@line 65 "../../iup_progressdlg.c"
 }
 $15 = (_clock()|0); //@line 50 "../../iup_progressdlg.c"
 $4 = $15; //@line 50 "../../iup_progressdlg.c"
 $16 = $4; //@line 51 "../../iup_progressdlg.c"
 $17 = $2; //@line 51 "../../iup_progressdlg.c"
 $18 = ((($17)) + 24|0); //@line 51 "../../iup_progressdlg.c"
 $19 = HEAP32[$18>>2]|0; //@line 51 "../../iup_progressdlg.c"
 $20 = (($19) + 250)|0; //@line 51 "../../iup_progressdlg.c"
 $21 = ($16|0)>($20|0); //@line 51 "../../iup_progressdlg.c"
 if ($21) {
  $22 = $3; //@line 54 "../../iup_progressdlg.c"
  $23 = $2; //@line 54 "../../iup_progressdlg.c"
  $24 = ((($23)) + 12|0); //@line 54 "../../iup_progressdlg.c"
  $25 = HEAP32[$24>>2]|0; //@line 54 "../../iup_progressdlg.c"
  $26 = ($22|0)!=($25|0); //@line 54 "../../iup_progressdlg.c"
  if ($26) {
   $27 = $2; //@line 56 "../../iup_progressdlg.c"
   $28 = HEAP32[$27>>2]|0; //@line 56 "../../iup_progressdlg.c"
   $29 = $3; //@line 56 "../../iup_progressdlg.c"
   _IupSetInt($28,20104,$29); //@line 56 "../../iup_progressdlg.c"
   _IupFlush(); //@line 57 "../../iup_progressdlg.c"
   $30 = (_clock()|0); //@line 58 "../../iup_progressdlg.c"
   $31 = $2; //@line 58 "../../iup_progressdlg.c"
   $32 = ((($31)) + 24|0); //@line 58 "../../iup_progressdlg.c"
   HEAP32[$32>>2] = $30; //@line 58 "../../iup_progressdlg.c"
  }
 }
 $33 = $3; //@line 62 "../../iup_progressdlg.c"
 $34 = $2; //@line 62 "../../iup_progressdlg.c"
 $35 = ((($34)) + 12|0); //@line 62 "../../iup_progressdlg.c"
 HEAP32[$35>>2] = $33; //@line 62 "../../iup_progressdlg.c"
 (_IupLoopStep()|0); //@line 64 "../../iup_progressdlg.c"
 STACKTOP = sp;return; //@line 65 "../../iup_progressdlg.c"
}
function _iProgressDlgCancel_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 203 "../../iup_progressdlg.c"
 $5 = (_IupGetDialog($4)|0); //@line 203 "../../iup_progressdlg.c"
 $2 = $5; //@line 203 "../../iup_progressdlg.c"
 $6 = $2; //@line 204 "../../iup_progressdlg.c"
 $7 = (_IupGetCallback($6,15184)|0); //@line 204 "../../iup_progressdlg.c"
 $3 = $7; //@line 204 "../../iup_progressdlg.c"
 $8 = $3; //@line 206 "../../iup_progressdlg.c"
 $9 = ($8|0)!=(0|0); //@line 206 "../../iup_progressdlg.c"
 if ($9) {
  $10 = $3; //@line 206 "../../iup_progressdlg.c"
  $11 = $2; //@line 206 "../../iup_progressdlg.c"
  $12 = (FUNCTION_TABLE_ii[$10 & 1023]($11)|0); //@line 206 "../../iup_progressdlg.c"
  $13 = ($12|0)!=(-4); //@line 206 "../../iup_progressdlg.c"
  if (!($13)) {
   STACKTOP = sp;return -2; //@line 209 "../../iup_progressdlg.c"
  }
 }
 $14 = $2; //@line 207 "../../iup_progressdlg.c"
 (_iProgressDlgSetStateAttrib($14,15250)|0); //@line 207 "../../iup_progressdlg.c"
 STACKTOP = sp;return -2; //@line 209 "../../iup_progressdlg.c"
}
function _iupRadioFindToggleParent($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 25 "../../iup_radio.c"
 $3 = $4; //@line 25 "../../iup_radio.c"
 while(1) {
  $5 = $3; //@line 25 "../../iup_radio.c"
  $6 = ((($5)) + 60|0); //@line 25 "../../iup_radio.c"
  $7 = HEAP32[$6>>2]|0; //@line 25 "../../iup_radio.c"
  $8 = ($7|0)!=(0|0); //@line 25 "../../iup_radio.c"
  if (!($8)) {
   label = 7;
   break;
  }
  $9 = $3; //@line 27 "../../iup_radio.c"
  $10 = ((($9)) + 4|0); //@line 27 "../../iup_radio.c"
  $11 = HEAP32[$10>>2]|0; //@line 27 "../../iup_radio.c"
  $12 = ((($11)) + 8|0); //@line 27 "../../iup_radio.c"
  $13 = HEAP32[$12>>2]|0; //@line 27 "../../iup_radio.c"
  $14 = ($13|0)==(0); //@line 27 "../../iup_radio.c"
  if ($14) {
   $15 = $3; //@line 28 "../../iup_radio.c"
   $16 = (_IupClassMatch($15,15372)|0); //@line 28 "../../iup_radio.c"
   $17 = ($16|0)!=(0); //@line 28 "../../iup_radio.c"
   if ($17) {
    label = 5;
    break;
   }
  }
  $19 = $3; //@line 25 "../../iup_radio.c"
  $20 = ((($19)) + 60|0); //@line 25 "../../iup_radio.c"
  $21 = HEAP32[$20>>2]|0; //@line 25 "../../iup_radio.c"
  $3 = $21; //@line 25 "../../iup_radio.c"
 }
 if ((label|0) == 5) {
  $18 = $3; //@line 29 "../../iup_radio.c"
  $1 = $18; //@line 29 "../../iup_radio.c"
  $22 = $1; //@line 33 "../../iup_radio.c"
  STACKTOP = sp;return ($22|0); //@line 33 "../../iup_radio.c"
 }
 else if ((label|0) == 7) {
  $1 = 0; //@line 32 "../../iup_radio.c"
  $22 = $1; //@line 33 "../../iup_radio.c"
  STACKTOP = sp;return ($22|0); //@line 33 "../../iup_radio.c"
 }
 return (0)|0;
}
function _iupRadioNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 177 "../../iup_radio.c"
 $0 = $1; //@line 177 "../../iup_radio.c"
 $2 = $0; //@line 179 "../../iup_radio.c"
 HEAP32[$2>>2] = 15372; //@line 179 "../../iup_radio.c"
 $3 = $0; //@line 180 "../../iup_radio.c"
 $4 = ((($3)) + 4|0); //@line 180 "../../iup_radio.c"
 HEAP32[$4>>2] = 15852; //@line 180 "../../iup_radio.c"
 $5 = $0; //@line 181 "../../iup_radio.c"
 $6 = ((($5)) + 8|0); //@line 181 "../../iup_radio.c"
 HEAP32[$6>>2] = 0; //@line 181 "../../iup_radio.c"
 $7 = $0; //@line 182 "../../iup_radio.c"
 $8 = ((($7)) + 12|0); //@line 182 "../../iup_radio.c"
 HEAP32[$8>>2] = 2; //@line 182 "../../iup_radio.c"
 $9 = $0; //@line 183 "../../iup_radio.c"
 $10 = ((($9)) + 16|0); //@line 183 "../../iup_radio.c"
 HEAP32[$10>>2] = 0; //@line 183 "../../iup_radio.c"
 $11 = $0; //@line 186 "../../iup_radio.c"
 $12 = ((($11)) + 32|0); //@line 186 "../../iup_radio.c"
 HEAP32[$12>>2] = 381; //@line 186 "../../iup_radio.c"
 $13 = $0; //@line 187 "../../iup_radio.c"
 $14 = ((($13)) + 40|0); //@line 187 "../../iup_radio.c"
 HEAP32[$14>>2] = 382; //@line 187 "../../iup_radio.c"
 $15 = $0; //@line 188 "../../iup_radio.c"
 $16 = ((($15)) + 44|0); //@line 188 "../../iup_radio.c"
 HEAP32[$16>>2] = 26; //@line 188 "../../iup_radio.c"
 $17 = $0; //@line 189 "../../iup_radio.c"
 $18 = ((($17)) + 76|0); //@line 189 "../../iup_radio.c"
 HEAP32[$18>>2] = 383; //@line 189 "../../iup_radio.c"
 $19 = $0; //@line 190 "../../iup_radio.c"
 $20 = ((($19)) + 80|0); //@line 190 "../../iup_radio.c"
 HEAP32[$20>>2] = 384; //@line 190 "../../iup_radio.c"
 $21 = $0; //@line 191 "../../iup_radio.c"
 $22 = ((($21)) + 84|0); //@line 191 "../../iup_radio.c"
 HEAP32[$22>>2] = 385; //@line 191 "../../iup_radio.c"
 $23 = $0; //@line 194 "../../iup_radio.c"
 _iupBaseRegisterCommonAttrib($23); //@line 194 "../../iup_radio.c"
 $24 = $0; //@line 197 "../../iup_radio.c"
 _iupClassRegisterAttribute($24,20073,20,0,(-1),20441,9); //@line 197 "../../iup_radio.c"
 $25 = $0; //@line 198 "../../iup_radio.c"
 _iupClassRegisterAttribute($25,20080,63,0,0,0,41); //@line 198 "../../iup_radio.c"
 $26 = $0; //@line 199 "../../iup_radio.c"
 _iupClassRegisterAttribute($26,20091,28,0,0,0,41); //@line 199 "../../iup_radio.c"
 $27 = $0; //@line 202 "../../iup_radio.c"
 _iupClassRegisterAttribute($27,20104,386,387,0,0,2057); //@line 202 "../../iup_radio.c"
 $28 = $0; //@line 203 "../../iup_radio.c"
 _iupClassRegisterAttribute($28,20119,388,389,0,0,4109); //@line 203 "../../iup_radio.c"
 $29 = $0; //@line 205 "../../iup_radio.c"
 STACKTOP = sp;return ($29|0); //@line 205 "../../iup_radio.c"
}
function _iRadioCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 128 "../../iup_radio.c"
 $6 = ($5|0)!=(0|0); //@line 128 "../../iup_radio.c"
 if (!($6)) {
  STACKTOP = sp;return 0; //@line 134 "../../iup_radio.c"
 }
 $7 = $3; //@line 130 "../../iup_radio.c"
 $4 = $7; //@line 130 "../../iup_radio.c"
 $8 = $4; //@line 131 "../../iup_radio.c"
 $9 = HEAP32[$8>>2]|0; //@line 131 "../../iup_radio.c"
 $10 = ($9|0)!=(0|0); //@line 131 "../../iup_radio.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 134 "../../iup_radio.c"
 }
 $11 = $2; //@line 132 "../../iup_radio.c"
 $12 = $4; //@line 132 "../../iup_radio.c"
 $13 = HEAP32[$12>>2]|0; //@line 132 "../../iup_radio.c"
 (_IupAppend($11,$13)|0); //@line 132 "../../iup_radio.c"
 STACKTOP = sp;return 0; //@line 134 "../../iup_radio.c"
}
function _iRadioComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 139 "../../iup_radio.c"
 $10 = ((($9)) + 64|0); //@line 139 "../../iup_radio.c"
 $11 = HEAP32[$10>>2]|0; //@line 139 "../../iup_radio.c"
 $8 = $11; //@line 139 "../../iup_radio.c"
 $12 = $8; //@line 140 "../../iup_radio.c"
 $13 = ($12|0)!=(0|0); //@line 140 "../../iup_radio.c"
 if (!($13)) {
  STACKTOP = sp;return; //@line 149 "../../iup_radio.c"
 }
 $14 = $8; //@line 143 "../../iup_radio.c"
 _iupBaseComputeNaturalSize($14); //@line 143 "../../iup_radio.c"
 $15 = $8; //@line 145 "../../iup_radio.c"
 $16 = ((($15)) + 20|0); //@line 145 "../../iup_radio.c"
 $17 = HEAP32[$16>>2]|0; //@line 145 "../../iup_radio.c"
 $18 = $7; //@line 145 "../../iup_radio.c"
 HEAP32[$18>>2] = $17; //@line 145 "../../iup_radio.c"
 $19 = $8; //@line 146 "../../iup_radio.c"
 $20 = ((($19)) + 44|0); //@line 146 "../../iup_radio.c"
 $21 = HEAP32[$20>>2]|0; //@line 146 "../../iup_radio.c"
 $22 = $5; //@line 146 "../../iup_radio.c"
 HEAP32[$22>>2] = $21; //@line 146 "../../iup_radio.c"
 $23 = $8; //@line 147 "../../iup_radio.c"
 $24 = ((($23)) + 48|0); //@line 147 "../../iup_radio.c"
 $25 = HEAP32[$24>>2]|0; //@line 147 "../../iup_radio.c"
 $26 = $6; //@line 147 "../../iup_radio.c"
 HEAP32[$26>>2] = $25; //@line 147 "../../iup_radio.c"
 STACKTOP = sp;return; //@line 149 "../../iup_radio.c"
}
function _iRadioSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 153 "../../iup_radio.c"
 $5 = ((($4)) + 64|0); //@line 153 "../../iup_radio.c"
 $6 = HEAP32[$5>>2]|0; //@line 153 "../../iup_radio.c"
 $7 = ($6|0)!=(0|0); //@line 153 "../../iup_radio.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 155 "../../iup_radio.c"
 }
 $8 = $2; //@line 154 "../../iup_radio.c"
 $9 = ((($8)) + 64|0); //@line 154 "../../iup_radio.c"
 $10 = HEAP32[$9>>2]|0; //@line 154 "../../iup_radio.c"
 $11 = $2; //@line 154 "../../iup_radio.c"
 $12 = ((($11)) + 52|0); //@line 154 "../../iup_radio.c"
 $13 = HEAP32[$12>>2]|0; //@line 154 "../../iup_radio.c"
 $14 = $2; //@line 154 "../../iup_radio.c"
 $15 = ((($14)) + 56|0); //@line 154 "../../iup_radio.c"
 $16 = HEAP32[$15>>2]|0; //@line 154 "../../iup_radio.c"
 $17 = $3; //@line 154 "../../iup_radio.c"
 _iupBaseSetCurrentSize($10,$13,$16,$17); //@line 154 "../../iup_radio.c"
 STACKTOP = sp;return; //@line 155 "../../iup_radio.c"
}
function _iRadioSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 159 "../../iup_radio.c"
 $7 = ((($6)) + 64|0); //@line 159 "../../iup_radio.c"
 $8 = HEAP32[$7>>2]|0; //@line 159 "../../iup_radio.c"
 $9 = ($8|0)!=(0|0); //@line 159 "../../iup_radio.c"
 if (!($9)) {
  STACKTOP = sp;return; //@line 161 "../../iup_radio.c"
 }
 $10 = $3; //@line 160 "../../iup_radio.c"
 $11 = ((($10)) + 64|0); //@line 160 "../../iup_radio.c"
 $12 = HEAP32[$11>>2]|0; //@line 160 "../../iup_radio.c"
 $13 = $4; //@line 160 "../../iup_radio.c"
 $14 = $5; //@line 160 "../../iup_radio.c"
 _iupBaseSetPosition($12,$13,$14); //@line 160 "../../iup_radio.c"
 STACKTOP = sp;return; //@line 161 "../../iup_radio.c"
}
function _iRadioGetValueAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 119 "../../iup_radio.c"
 $4 = (_iRadioGetValueHandleAttrib($3)|0); //@line 119 "../../iup_radio.c"
 $2 = $4; //@line 119 "../../iup_radio.c"
 $5 = $2; //@line 120 "../../iup_radio.c"
 $6 = (_IupGetName($5)|0); //@line 120 "../../iup_radio.c"
 STACKTOP = sp;return ($6|0); //@line 120 "../../iup_radio.c"
}
function _iRadioSetValueAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 106 "../../iup_radio.c"
 $7 = ($6|0)!=(0|0); //@line 106 "../../iup_radio.c"
 do {
  if ($7) {
   $8 = $4; //@line 109 "../../iup_radio.c"
   $9 = (_IupGetHandle($8)|0); //@line 109 "../../iup_radio.c"
   $5 = $9; //@line 109 "../../iup_radio.c"
   $10 = $5; //@line 110 "../../iup_radio.c"
   $11 = ($10|0)!=(0|0); //@line 110 "../../iup_radio.c"
   if ($11) {
    $12 = $3; //@line 113 "../../iup_radio.c"
    $13 = $5; //@line 113 "../../iup_radio.c"
    (_iRadioSetValueHandleAttrib($12,$13)|0); //@line 113 "../../iup_radio.c"
    $2 = 0; //@line 114 "../../iup_radio.c"
    break;
   } else {
    $2 = 0; //@line 111 "../../iup_radio.c"
    break;
   }
  } else {
   $2 = 0; //@line 107 "../../iup_radio.c"
  }
 } while(0);
 $14 = $2; //@line 115 "../../iup_radio.c"
 STACKTOP = sp;return ($14|0); //@line 115 "../../iup_radio.c"
}
function _iRadioGetValueHandleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 99 "../../iup_radio.c"
 $3 = ((($2)) + 64|0); //@line 99 "../../iup_radio.c"
 $4 = HEAP32[$3>>2]|0; //@line 99 "../../iup_radio.c"
 $5 = (_iRadioGetToggleChildOn($4)|0); //@line 99 "../../iup_radio.c"
 STACKTOP = sp;return ($5|0); //@line 99 "../../iup_radio.c"
}
function _iRadioSetValueHandleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 84 "../../iup_radio.c"
 $5 = $6; //@line 84 "../../iup_radio.c"
 $7 = $5; //@line 85 "../../iup_radio.c"
 $8 = (_iupObjectCheck($7)|0); //@line 85 "../../iup_radio.c"
 $9 = ($8|0)!=(0); //@line 85 "../../iup_radio.c"
 if (!($9)) {
  $2 = 0; //@line 86 "../../iup_radio.c"
  $20 = $2; //@line 95 "../../iup_radio.c"
  STACKTOP = sp;return ($20|0); //@line 95 "../../iup_radio.c"
 }
 $10 = $5; //@line 88 "../../iup_radio.c"
 $11 = (_iRadioChildIsToggle($10)|0); //@line 88 "../../iup_radio.c"
 $12 = ($11|0)!=(0); //@line 88 "../../iup_radio.c"
 if (!($12)) {
  $2 = 0; //@line 89 "../../iup_radio.c"
  $20 = $2; //@line 95 "../../iup_radio.c"
  STACKTOP = sp;return ($20|0); //@line 95 "../../iup_radio.c"
 }
 $13 = $3; //@line 91 "../../iup_radio.c"
 $14 = ((($13)) + 64|0); //@line 91 "../../iup_radio.c"
 $15 = HEAP32[$14>>2]|0; //@line 91 "../../iup_radio.c"
 $16 = $5; //@line 91 "../../iup_radio.c"
 $17 = (_iRadioFindToggleChild($15,$16)|0); //@line 91 "../../iup_radio.c"
 $18 = ($17|0)!=(0); //@line 91 "../../iup_radio.c"
 if ($18) {
  $19 = $5; //@line 92 "../../iup_radio.c"
  _IupSetAttribute($19,20104,16028); //@line 92 "../../iup_radio.c"
 }
 $2 = 0; //@line 94 "../../iup_radio.c"
 $20 = $2; //@line 95 "../../iup_radio.c"
 STACKTOP = sp;return ($20|0); //@line 95 "../../iup_radio.c"
}
function _iRadioChildIsToggle($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 53 "../../iup_radio.c"
 $4 = (_IupClassMatch($3,17789)|0); //@line 53 "../../iup_radio.c"
 $5 = ($4|0)!=(0); //@line 53 "../../iup_radio.c"
 do {
  if (!($5)) {
   $6 = $2; //@line 54 "../../iup_radio.c"
   $7 = (_IupClassMatch($6,15378)|0); //@line 54 "../../iup_radio.c"
   $8 = ($7|0)!=(0); //@line 54 "../../iup_radio.c"
   if (!($8)) {
    $9 = $2; //@line 55 "../../iup_radio.c"
    $10 = (_IupClassMatch($9,15387)|0); //@line 55 "../../iup_radio.c"
    $11 = ($10|0)!=(0); //@line 55 "../../iup_radio.c"
    if ($11) {
     $12 = $2; //@line 55 "../../iup_radio.c"
     $13 = (_iupAttribGetBoolean($12,15398)|0); //@line 55 "../../iup_radio.c"
     $14 = ($13|0)!=(0); //@line 55 "../../iup_radio.c"
     if ($14) {
      break;
     }
    }
    $1 = 0; //@line 58 "../../iup_radio.c"
    $15 = $1; //@line 59 "../../iup_radio.c"
    STACKTOP = sp;return ($15|0); //@line 59 "../../iup_radio.c"
   }
  }
 } while(0);
 $1 = 1; //@line 56 "../../iup_radio.c"
 $15 = $1; //@line 59 "../../iup_radio.c"
 STACKTOP = sp;return ($15|0); //@line 59 "../../iup_radio.c"
}
function _iRadioFindToggleChild($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 39 "../../iup_radio.c"
 $7 = $4; //@line 39 "../../iup_radio.c"
 $8 = ($6|0)==($7|0); //@line 39 "../../iup_radio.c"
 if ($8) {
  $2 = 1; //@line 40 "../../iup_radio.c"
  $21 = $2; //@line 49 "../../iup_radio.c"
  STACKTOP = sp;return ($21|0); //@line 49 "../../iup_radio.c"
 }
 $9 = $3; //@line 42 "../../iup_radio.c"
 $10 = ((($9)) + 64|0); //@line 42 "../../iup_radio.c"
 $11 = HEAP32[$10>>2]|0; //@line 42 "../../iup_radio.c"
 $5 = $11; //@line 42 "../../iup_radio.c"
 while(1) {
  $12 = $5; //@line 42 "../../iup_radio.c"
  $13 = ($12|0)!=(0|0); //@line 42 "../../iup_radio.c"
  if (!($13)) {
   label = 8;
   break;
  }
  $14 = $5; //@line 44 "../../iup_radio.c"
  $15 = $4; //@line 44 "../../iup_radio.c"
  $16 = (_iRadioFindToggleChild($14,$15)|0); //@line 44 "../../iup_radio.c"
  $17 = ($16|0)!=(0); //@line 44 "../../iup_radio.c"
  if ($17) {
   label = 6;
   break;
  }
  $18 = $5; //@line 42 "../../iup_radio.c"
  $19 = ((($18)) + 68|0); //@line 42 "../../iup_radio.c"
  $20 = HEAP32[$19>>2]|0; //@line 42 "../../iup_radio.c"
  $5 = $20; //@line 42 "../../iup_radio.c"
 }
 if ((label|0) == 6) {
  $2 = 1; //@line 45 "../../iup_radio.c"
  $21 = $2; //@line 49 "../../iup_radio.c"
  STACKTOP = sp;return ($21|0); //@line 49 "../../iup_radio.c"
 }
 else if ((label|0) == 8) {
  $2 = 0; //@line 48 "../../iup_radio.c"
  $21 = $2; //@line 49 "../../iup_radio.c"
  STACKTOP = sp;return ($21|0); //@line 49 "../../iup_radio.c"
 }
 return (0)|0;
}
function _iRadioGetToggleChildOn($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 66 "../../iup_radio.c"
 $6 = (_iRadioChildIsToggle($5)|0); //@line 66 "../../iup_radio.c"
 $7 = ($6|0)!=(0); //@line 66 "../../iup_radio.c"
 if ($7) {
  $8 = $2; //@line 66 "../../iup_radio.c"
  $9 = (_IupGetInt($8,20104)|0); //@line 66 "../../iup_radio.c"
  $10 = ($9|0)!=(0); //@line 66 "../../iup_radio.c"
  if ($10) {
   $11 = $2; //@line 67 "../../iup_radio.c"
   $1 = $11; //@line 67 "../../iup_radio.c"
   $25 = $1; //@line 77 "../../iup_radio.c"
   STACKTOP = sp;return ($25|0); //@line 77 "../../iup_radio.c"
  }
 }
 $12 = $2; //@line 69 "../../iup_radio.c"
 $13 = ((($12)) + 64|0); //@line 69 "../../iup_radio.c"
 $14 = HEAP32[$13>>2]|0; //@line 69 "../../iup_radio.c"
 $3 = $14; //@line 69 "../../iup_radio.c"
 while(1) {
  $15 = $3; //@line 69 "../../iup_radio.c"
  $16 = ($15|0)!=(0|0); //@line 69 "../../iup_radio.c"
  if (!($16)) {
   label = 9;
   break;
  }
  $17 = $3; //@line 71 "../../iup_radio.c"
  $18 = (_iRadioGetToggleChildOn($17)|0); //@line 71 "../../iup_radio.c"
  $4 = $18; //@line 71 "../../iup_radio.c"
  $19 = $4; //@line 72 "../../iup_radio.c"
  $20 = ($19|0)!=(0|0); //@line 72 "../../iup_radio.c"
  if ($20) {
   label = 7;
   break;
  }
  $22 = $3; //@line 69 "../../iup_radio.c"
  $23 = ((($22)) + 68|0); //@line 69 "../../iup_radio.c"
  $24 = HEAP32[$23>>2]|0; //@line 69 "../../iup_radio.c"
  $3 = $24; //@line 69 "../../iup_radio.c"
 }
 if ((label|0) == 7) {
  $21 = $4; //@line 73 "../../iup_radio.c"
  $1 = $21; //@line 73 "../../iup_radio.c"
  $25 = $1; //@line 77 "../../iup_radio.c"
  STACKTOP = sp;return ($25|0); //@line 77 "../../iup_radio.c"
 }
 else if ((label|0) == 9) {
  $1 = 0; //@line 76 "../../iup_radio.c"
  $25 = $1; //@line 77 "../../iup_radio.c"
  STACKTOP = sp;return ($25|0); //@line 77 "../../iup_radio.c"
 }
 return (0)|0;
}
function _iupRegisterInit() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupTableCreate(11)|0); //@line 24 "../../iup_register.c"
 HEAP32[6121] = $0; //@line 24 "../../iup_register.c"
 return; //@line 25 "../../iup_register.c"
}
function _iupRegisterFindClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = HEAP32[6121]|0; //@line 64 "../../iup_register.c"
 $3 = $1; //@line 64 "../../iup_register.c"
 $4 = (_iupTableGet($2,$3)|0); //@line 64 "../../iup_register.c"
 STACKTOP = sp;return ($4|0); //@line 64 "../../iup_register.c"
}
function _iupRegisterClass($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = HEAP32[6121]|0; //@line 69 "../../iup_register.c"
 $4 = $1; //@line 69 "../../iup_register.c"
 $5 = HEAP32[$4>>2]|0; //@line 69 "../../iup_register.c"
 $6 = (_iupTableGet($3,$5)|0); //@line 69 "../../iup_register.c"
 $2 = $6; //@line 69 "../../iup_register.c"
 $7 = $2; //@line 70 "../../iup_register.c"
 $8 = ($7|0)!=(0|0); //@line 70 "../../iup_register.c"
 if ($8) {
  $9 = $2; //@line 71 "../../iup_register.c"
  _iupClassRelease($9); //@line 71 "../../iup_register.c"
 }
 $10 = HEAP32[6121]|0; //@line 73 "../../iup_register.c"
 $11 = $1; //@line 73 "../../iup_register.c"
 $12 = HEAP32[$11>>2]|0; //@line 73 "../../iup_register.c"
 $13 = $1; //@line 73 "../../iup_register.c"
 _iupTableSet($10,$12,$13,0); //@line 73 "../../iup_register.c"
 STACKTOP = sp;return; //@line 74 "../../iup_register.c"
}
function _iupRegisterInternalClasses() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupDialogNewClass()|0); //@line 81 "../../iup_register.c"
 _iupRegisterClass($0); //@line 81 "../../iup_register.c"
 $1 = (_iupMessageDlgNewClass()|0); //@line 82 "../../iup_register.c"
 _iupRegisterClass($1); //@line 82 "../../iup_register.c"
 $2 = (_iupColorDlgNewClass()|0); //@line 83 "../../iup_register.c"
 _iupRegisterClass($2); //@line 83 "../../iup_register.c"
 $3 = (_iupFontDlgNewClass()|0); //@line 84 "../../iup_register.c"
 _iupRegisterClass($3); //@line 84 "../../iup_register.c"
 $4 = (_iupFileDlgNewClass()|0); //@line 85 "../../iup_register.c"
 _iupRegisterClass($4); //@line 85 "../../iup_register.c"
 $5 = (_iupProgressDlgNewClass()|0); //@line 86 "../../iup_register.c"
 _iupRegisterClass($5); //@line 86 "../../iup_register.c"
 $6 = (_iupTimerNewClass()|0); //@line 88 "../../iup_register.c"
 _iupRegisterClass($6); //@line 88 "../../iup_register.c"
 $7 = (_iupImageNewClass()|0); //@line 89 "../../iup_register.c"
 _iupRegisterClass($7); //@line 89 "../../iup_register.c"
 $8 = (_iupImageRGBNewClass()|0); //@line 90 "../../iup_register.c"
 _iupRegisterClass($8); //@line 90 "../../iup_register.c"
 $9 = (_iupImageRGBANewClass()|0); //@line 91 "../../iup_register.c"
 _iupRegisterClass($9); //@line 91 "../../iup_register.c"
 $10 = (_iupUserNewClass()|0); //@line 92 "../../iup_register.c"
 _iupRegisterClass($10); //@line 92 "../../iup_register.c"
 $11 = (_iupClipboardNewClass()|0); //@line 93 "../../iup_register.c"
 _iupRegisterClass($11); //@line 93 "../../iup_register.c"
 $12 = (_iupRadioNewClass()|0); //@line 95 "../../iup_register.c"
 _iupRegisterClass($12); //@line 95 "../../iup_register.c"
 $13 = (_iupFillNewClass()|0); //@line 96 "../../iup_register.c"
 _iupRegisterClass($13); //@line 96 "../../iup_register.c"
 $14 = (_iupHboxNewClass()|0); //@line 97 "../../iup_register.c"
 _iupRegisterClass($14); //@line 97 "../../iup_register.c"
 $15 = (_iupVboxNewClass()|0); //@line 98 "../../iup_register.c"
 _iupRegisterClass($15); //@line 98 "../../iup_register.c"
 $16 = (_iupZboxNewClass()|0); //@line 99 "../../iup_register.c"
 _iupRegisterClass($16); //@line 99 "../../iup_register.c"
 $17 = (_iupCboxNewClass()|0); //@line 100 "../../iup_register.c"
 _iupRegisterClass($17); //@line 100 "../../iup_register.c"
 $18 = (_iupSboxNewClass()|0); //@line 101 "../../iup_register.c"
 _iupRegisterClass($18); //@line 101 "../../iup_register.c"
 $19 = (_iupNormalizerNewClass()|0); //@line 102 "../../iup_register.c"
 _iupRegisterClass($19); //@line 102 "../../iup_register.c"
 $20 = (_iupSplitNewClass()|0); //@line 103 "../../iup_register.c"
 _iupRegisterClass($20); //@line 103 "../../iup_register.c"
 $21 = (_iupExpanderNewClass()|0); //@line 104 "../../iup_register.c"
 _iupRegisterClass($21); //@line 104 "../../iup_register.c"
 $22 = (_iupDetachBoxNewClass()|0); //@line 105 "../../iup_register.c"
 _iupRegisterClass($22); //@line 105 "../../iup_register.c"
 $23 = (_iupMenuNewClass()|0); //@line 107 "../../iup_register.c"
 _iupRegisterClass($23); //@line 107 "../../iup_register.c"
 $24 = (_iupItemNewClass()|0); //@line 108 "../../iup_register.c"
 _iupRegisterClass($24); //@line 108 "../../iup_register.c"
 $25 = (_iupSeparatorNewClass()|0); //@line 109 "../../iup_register.c"
 _iupRegisterClass($25); //@line 109 "../../iup_register.c"
 $26 = (_iupSubmenuNewClass()|0); //@line 110 "../../iup_register.c"
 _iupRegisterClass($26); //@line 110 "../../iup_register.c"
 $27 = (_iupLabelNewClass()|0); //@line 112 "../../iup_register.c"
 _iupRegisterClass($27); //@line 112 "../../iup_register.c"
 $28 = (_iupButtonNewClass()|0); //@line 113 "../../iup_register.c"
 _iupRegisterClass($28); //@line 113 "../../iup_register.c"
 $29 = (_iupToggleNewClass()|0); //@line 114 "../../iup_register.c"
 _iupRegisterClass($29); //@line 114 "../../iup_register.c"
 $30 = (_iupCanvasNewClass()|0); //@line 115 "../../iup_register.c"
 _iupRegisterClass($30); //@line 115 "../../iup_register.c"
 $31 = (_iupFrameNewClass()|0); //@line 116 "../../iup_register.c"
 _iupRegisterClass($31); //@line 116 "../../iup_register.c"
 $32 = (_iupTextNewClass()|0); //@line 117 "../../iup_register.c"
 _iupRegisterClass($32); //@line 117 "../../iup_register.c"
 $33 = (_iupMultilineNewClass()|0); //@line 118 "../../iup_register.c"
 _iupRegisterClass($33); //@line 118 "../../iup_register.c"
 $34 = (_iupListNewClass()|0); //@line 119 "../../iup_register.c"
 _iupRegisterClass($34); //@line 119 "../../iup_register.c"
 $35 = (_iupFlatButtonNewClass()|0); //@line 120 "../../iup_register.c"
 _iupRegisterClass($35); //@line 120 "../../iup_register.c"
 $36 = (_iupProgressBarNewClass()|0); //@line 122 "../../iup_register.c"
 _iupRegisterClass($36); //@line 122 "../../iup_register.c"
 $37 = (_iupValNewClass()|0); //@line 123 "../../iup_register.c"
 _iupRegisterClass($37); //@line 123 "../../iup_register.c"
 $38 = (_iupTabsNewClass()|0); //@line 124 "../../iup_register.c"
 _iupRegisterClass($38); //@line 124 "../../iup_register.c"
 $39 = (_iupSpinNewClass()|0); //@line 125 "../../iup_register.c"
 _iupRegisterClass($39); //@line 125 "../../iup_register.c"
 $40 = (_iupSpinboxNewClass()|0); //@line 126 "../../iup_register.c"
 _iupRegisterClass($40); //@line 126 "../../iup_register.c"
 $41 = (_iupTreeNewClass()|0); //@line 127 "../../iup_register.c"
 _iupRegisterClass($41); //@line 127 "../../iup_register.c"
 $42 = (_iupScrollBoxNewClass()|0); //@line 128 "../../iup_register.c"
 _iupRegisterClass($42); //@line 128 "../../iup_register.c"
 $43 = (_iupBackgroundBoxNewClass()|0); //@line 129 "../../iup_register.c"
 _iupRegisterClass($43); //@line 129 "../../iup_register.c"
 $44 = (_iupLinkNewClass()|0); //@line 130 "../../iup_register.c"
 _iupRegisterClass($44); //@line 130 "../../iup_register.c"
 $45 = (_iupGridBoxNewClass()|0); //@line 131 "../../iup_register.c"
 _iupRegisterClass($45); //@line 131 "../../iup_register.c"
 return; //@line 132 "../../iup_register.c"
}
function _iupSboxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 368 "../../iup_sbox.c"
 $0 = $1; //@line 368 "../../iup_sbox.c"
 $2 = $0; //@line 370 "../../iup_sbox.c"
 HEAP32[$2>>2] = 15405; //@line 370 "../../iup_sbox.c"
 $3 = $0; //@line 371 "../../iup_sbox.c"
 $4 = ((($3)) + 4|0); //@line 371 "../../iup_sbox.c"
 HEAP32[$4>>2] = 15852; //@line 371 "../../iup_sbox.c"
 $5 = $0; //@line 372 "../../iup_sbox.c"
 $6 = ((($5)) + 8|0); //@line 372 "../../iup_sbox.c"
 HEAP32[$6>>2] = 0; //@line 372 "../../iup_sbox.c"
 $7 = $0; //@line 373 "../../iup_sbox.c"
 $8 = ((($7)) + 12|0); //@line 373 "../../iup_sbox.c"
 HEAP32[$8>>2] = 3; //@line 373 "../../iup_sbox.c"
 $9 = $0; //@line 374 "../../iup_sbox.c"
 $10 = ((($9)) + 16|0); //@line 374 "../../iup_sbox.c"
 HEAP32[$10>>2] = 0; //@line 374 "../../iup_sbox.c"
 $11 = $0; //@line 377 "../../iup_sbox.c"
 $12 = ((($11)) + 32|0); //@line 377 "../../iup_sbox.c"
 HEAP32[$12>>2] = 390; //@line 377 "../../iup_sbox.c"
 $13 = $0; //@line 378 "../../iup_sbox.c"
 $14 = ((($13)) + 40|0); //@line 378 "../../iup_sbox.c"
 HEAP32[$14>>2] = 391; //@line 378 "../../iup_sbox.c"
 $15 = $0; //@line 379 "../../iup_sbox.c"
 $16 = ((($15)) + 44|0); //@line 379 "../../iup_sbox.c"
 HEAP32[$16>>2] = 26; //@line 379 "../../iup_sbox.c"
 $17 = $0; //@line 381 "../../iup_sbox.c"
 $18 = ((($17)) + 76|0); //@line 381 "../../iup_sbox.c"
 HEAP32[$18>>2] = 392; //@line 381 "../../iup_sbox.c"
 $19 = $0; //@line 382 "../../iup_sbox.c"
 $20 = ((($19)) + 80|0); //@line 382 "../../iup_sbox.c"
 HEAP32[$20>>2] = 393; //@line 382 "../../iup_sbox.c"
 $21 = $0; //@line 383 "../../iup_sbox.c"
 $22 = ((($21)) + 84|0); //@line 383 "../../iup_sbox.c"
 HEAP32[$22>>2] = 394; //@line 383 "../../iup_sbox.c"
 $23 = $0; //@line 386 "../../iup_sbox.c"
 _iupBaseRegisterCommonAttrib($23); //@line 386 "../../iup_sbox.c"
 $24 = $0; //@line 389 "../../iup_sbox.c"
 _iupClassRegisterAttribute($24,20080,395,0,0,0,41); //@line 389 "../../iup_sbox.c"
 $25 = $0; //@line 390 "../../iup_sbox.c"
 _iupClassRegisterAttribute($25,20091,28,0,0,0,41); //@line 390 "../../iup_sbox.c"
 $26 = $0; //@line 391 "../../iup_sbox.c"
 _iupClassRegisterAttribute($26,20073,20,0,(-1),20441,9); //@line 391 "../../iup_sbox.c"
 $27 = $0; //@line 394 "../../iup_sbox.c"
 _iupClassRegisterAttribute($27,15863,0,396,(-1),19539,9); //@line 394 "../../iup_sbox.c"
 $28 = $0; //@line 395 "../../iup_sbox.c"
 _iupClassRegisterAttribute($28,15881,0,397,(-1),20054,9); //@line 395 "../../iup_sbox.c"
 $29 = $0; //@line 397 "../../iup_sbox.c"
 STACKTOP = sp;return ($29|0); //@line 397 "../../iup_sbox.c"
}
function _iSboxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_calloc(1,32)|0); //@line 337 "../../iup_sbox.c"
 $7 = $2; //@line 337 "../../iup_sbox.c"
 $8 = ((($7)) + 72|0); //@line 337 "../../iup_sbox.c"
 HEAP32[$8>>2] = $6; //@line 337 "../../iup_sbox.c"
 $9 = $2; //@line 339 "../../iup_sbox.c"
 $10 = ((($9)) + 72|0); //@line 339 "../../iup_sbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 339 "../../iup_sbox.c"
 $12 = ((($11)) + 28|0); //@line 339 "../../iup_sbox.c"
 HEAP32[$12>>2] = 3; //@line 339 "../../iup_sbox.c"
 $13 = $2; //@line 340 "../../iup_sbox.c"
 $14 = ((($13)) + 72|0); //@line 340 "../../iup_sbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 340 "../../iup_sbox.c"
 $16 = ((($15)) + 4|0); //@line 340 "../../iup_sbox.c"
 HEAP32[$16>>2] = -1; //@line 340 "../../iup_sbox.c"
 $17 = $2; //@line 341 "../../iup_sbox.c"
 $18 = ((($17)) + 72|0); //@line 341 "../../iup_sbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 341 "../../iup_sbox.c"
 HEAP32[$19>>2] = -1; //@line 341 "../../iup_sbox.c"
 $20 = (_IupCanvas(0)|0); //@line 343 "../../iup_sbox.c"
 $4 = $20; //@line 343 "../../iup_sbox.c"
 $21 = $4; //@line 344 "../../iup_sbox.c"
 $22 = ((($21)) + 24|0); //@line 344 "../../iup_sbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 344 "../../iup_sbox.c"
 $24 = $23 | 16; //@line 344 "../../iup_sbox.c"
 HEAP32[$22>>2] = $24; //@line 344 "../../iup_sbox.c"
 $25 = $2; //@line 345 "../../iup_sbox.c"
 $26 = $4; //@line 345 "../../iup_sbox.c"
 _iupChildTreeAppend($25,$26); //@line 345 "../../iup_sbox.c"
 $27 = $4; //@line 347 "../../iup_sbox.c"
 _IupSetAttribute($27,17637,20441); //@line 347 "../../iup_sbox.c"
 $28 = $4; //@line 348 "../../iup_sbox.c"
 _IupSetAttribute($28,20073,20140); //@line 348 "../../iup_sbox.c"
 $29 = $4; //@line 349 "../../iup_sbox.c"
 _IupSetAttribute($29,20290,19539); //@line 349 "../../iup_sbox.c"
 $30 = $4; //@line 352 "../../iup_sbox.c"
 (_IupSetCallback($30,20522,398)|0); //@line 352 "../../iup_sbox.c"
 $31 = $4; //@line 353 "../../iup_sbox.c"
 (_IupSetCallback($31,16004,399)|0); //@line 353 "../../iup_sbox.c"
 $32 = $4; //@line 354 "../../iup_sbox.c"
 (_IupSetCallback($32,18039,400)|0); //@line 354 "../../iup_sbox.c"
 $33 = $3; //@line 356 "../../iup_sbox.c"
 $34 = ($33|0)!=(0|0); //@line 356 "../../iup_sbox.c"
 if (!($34)) {
  STACKTOP = sp;return 0; //@line 363 "../../iup_sbox.c"
 }
 $35 = $3; //@line 358 "../../iup_sbox.c"
 $5 = $35; //@line 358 "../../iup_sbox.c"
 $36 = $5; //@line 359 "../../iup_sbox.c"
 $37 = HEAP32[$36>>2]|0; //@line 359 "../../iup_sbox.c"
 $38 = ($37|0)!=(0|0); //@line 359 "../../iup_sbox.c"
 if (!($38)) {
  STACKTOP = sp;return 0; //@line 363 "../../iup_sbox.c"
 }
 $39 = $2; //@line 360 "../../iup_sbox.c"
 $40 = $5; //@line 360 "../../iup_sbox.c"
 $41 = HEAP32[$40>>2]|0; //@line 360 "../../iup_sbox.c"
 (_IupAppend($39,$41)|0); //@line 360 "../../iup_sbox.c"
 STACKTOP = sp;return 0; //@line 363 "../../iup_sbox.c"
}
function _iSboxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $12 = $4; //@line 228 "../../iup_sbox.c"
 $13 = ((($12)) + 44|0); //@line 228 "../../iup_sbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 228 "../../iup_sbox.c"
 $8 = $14; //@line 228 "../../iup_sbox.c"
 $15 = $4; //@line 229 "../../iup_sbox.c"
 $16 = ((($15)) + 48|0); //@line 229 "../../iup_sbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 229 "../../iup_sbox.c"
 $9 = $17; //@line 229 "../../iup_sbox.c"
 $18 = $4; //@line 232 "../../iup_sbox.c"
 $19 = ((($18)) + 72|0); //@line 232 "../../iup_sbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 232 "../../iup_sbox.c"
 $21 = ((($20)) + 28|0); //@line 232 "../../iup_sbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 232 "../../iup_sbox.c"
 $23 = ($22|0)==(3); //@line 232 "../../iup_sbox.c"
 if ($23) {
  label = 3;
 } else {
  $24 = $4; //@line 232 "../../iup_sbox.c"
  $25 = ((($24)) + 72|0); //@line 232 "../../iup_sbox.c"
  $26 = HEAP32[$25>>2]|0; //@line 232 "../../iup_sbox.c"
  $27 = ((($26)) + 28|0); //@line 232 "../../iup_sbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 232 "../../iup_sbox.c"
  $29 = ($28|0)==(2); //@line 232 "../../iup_sbox.c"
  if ($29) {
   label = 3;
  } else {
   $34 = $4; //@line 235 "../../iup_sbox.c"
   $35 = ((($34)) + 20|0); //@line 235 "../../iup_sbox.c"
   $36 = HEAP32[$35>>2]|0; //@line 235 "../../iup_sbox.c"
   $37 = $36 & -4; //@line 235 "../../iup_sbox.c"
   HEAP32[$35>>2] = $37; //@line 235 "../../iup_sbox.c"
  }
 }
 if ((label|0) == 3) {
  $30 = $4; //@line 233 "../../iup_sbox.c"
  $31 = ((($30)) + 20|0); //@line 233 "../../iup_sbox.c"
  $32 = HEAP32[$31>>2]|0; //@line 233 "../../iup_sbox.c"
  $33 = $32 & -13; //@line 233 "../../iup_sbox.c"
  HEAP32[$31>>2] = $33; //@line 233 "../../iup_sbox.c"
 }
 $38 = $4; //@line 241 "../../iup_sbox.c"
 $39 = ((($38)) + 64|0); //@line 241 "../../iup_sbox.c"
 $40 = HEAP32[$39>>2]|0; //@line 241 "../../iup_sbox.c"
 $41 = ((($40)) + 68|0); //@line 241 "../../iup_sbox.c"
 $42 = HEAP32[$41>>2]|0; //@line 241 "../../iup_sbox.c"
 $43 = ($42|0)!=(0|0); //@line 241 "../../iup_sbox.c"
 if ($43) {
  $44 = $4; //@line 243 "../../iup_sbox.c"
  $45 = ((($44)) + 64|0); //@line 243 "../../iup_sbox.c"
  $46 = HEAP32[$45>>2]|0; //@line 243 "../../iup_sbox.c"
  $47 = ((($46)) + 68|0); //@line 243 "../../iup_sbox.c"
  $48 = HEAP32[$47>>2]|0; //@line 243 "../../iup_sbox.c"
  $10 = $48; //@line 243 "../../iup_sbox.c"
  $49 = $10; //@line 246 "../../iup_sbox.c"
  _iupBaseComputeNaturalSize($49); //@line 246 "../../iup_sbox.c"
  $50 = $10; //@line 248 "../../iup_sbox.c"
  $51 = ((($50)) + 20|0); //@line 248 "../../iup_sbox.c"
  $52 = HEAP32[$51>>2]|0; //@line 248 "../../iup_sbox.c"
  $53 = $7; //@line 248 "../../iup_sbox.c"
  HEAP32[$53>>2] = $52; //@line 248 "../../iup_sbox.c"
  $54 = $8; //@line 251 "../../iup_sbox.c"
  $55 = $10; //@line 251 "../../iup_sbox.c"
  $56 = ((($55)) + 44|0); //@line 251 "../../iup_sbox.c"
  $57 = HEAP32[$56>>2]|0; //@line 251 "../../iup_sbox.c"
  $58 = $4; //@line 251 "../../iup_sbox.c"
  $59 = (_iSboxGetXborder($58)|0); //@line 251 "../../iup_sbox.c"
  $60 = (($57) + ($59))|0; //@line 251 "../../iup_sbox.c"
  $61 = ($54|0)>($60|0); //@line 251 "../../iup_sbox.c"
  if ($61) {
   $62 = $8; //@line 251 "../../iup_sbox.c"
   $69 = $62;
  } else {
   $63 = $10; //@line 251 "../../iup_sbox.c"
   $64 = ((($63)) + 44|0); //@line 251 "../../iup_sbox.c"
   $65 = HEAP32[$64>>2]|0; //@line 251 "../../iup_sbox.c"
   $66 = $4; //@line 251 "../../iup_sbox.c"
   $67 = (_iSboxGetXborder($66)|0); //@line 251 "../../iup_sbox.c"
   $68 = (($65) + ($67))|0; //@line 251 "../../iup_sbox.c"
   $69 = $68;
  }
  $8 = $69; //@line 251 "../../iup_sbox.c"
  $70 = $9; //@line 252 "../../iup_sbox.c"
  $71 = $10; //@line 252 "../../iup_sbox.c"
  $72 = ((($71)) + 48|0); //@line 252 "../../iup_sbox.c"
  $73 = HEAP32[$72>>2]|0; //@line 252 "../../iup_sbox.c"
  $74 = $4; //@line 252 "../../iup_sbox.c"
  $75 = (_iSboxGetYborder($74)|0); //@line 252 "../../iup_sbox.c"
  $76 = (($73) + ($75))|0; //@line 252 "../../iup_sbox.c"
  $77 = ($70|0)>($76|0); //@line 252 "../../iup_sbox.c"
  if ($77) {
   $78 = $9; //@line 252 "../../iup_sbox.c"
   $85 = $78;
  } else {
   $79 = $10; //@line 252 "../../iup_sbox.c"
   $80 = ((($79)) + 48|0); //@line 252 "../../iup_sbox.c"
   $81 = HEAP32[$80>>2]|0; //@line 252 "../../iup_sbox.c"
   $82 = $4; //@line 252 "../../iup_sbox.c"
   $83 = (_iSboxGetYborder($82)|0); //@line 252 "../../iup_sbox.c"
   $84 = (($81) + ($83))|0; //@line 252 "../../iup_sbox.c"
   $85 = $84;
  }
  $9 = $85; //@line 252 "../../iup_sbox.c"
 }
 $86 = $4; //@line 258 "../../iup_sbox.c"
 $87 = ((($86)) + 72|0); //@line 258 "../../iup_sbox.c"
 $88 = HEAP32[$87>>2]|0; //@line 258 "../../iup_sbox.c"
 $89 = ((($88)) + 28|0); //@line 258 "../../iup_sbox.c"
 $90 = HEAP32[$89>>2]|0; //@line 258 "../../iup_sbox.c"
 $91 = ($90|0)==(3); //@line 258 "../../iup_sbox.c"
 if ($91) {
  label = 15;
 } else {
  $92 = $4; //@line 258 "../../iup_sbox.c"
  $93 = ((($92)) + 72|0); //@line 258 "../../iup_sbox.c"
  $94 = HEAP32[$93>>2]|0; //@line 258 "../../iup_sbox.c"
  $95 = ((($94)) + 28|0); //@line 258 "../../iup_sbox.c"
  $96 = HEAP32[$95>>2]|0; //@line 258 "../../iup_sbox.c"
  $97 = ($96|0)==(2); //@line 258 "../../iup_sbox.c"
  if ($97) {
   label = 15;
  } else {
   $118 = $8; //@line 265 "../../iup_sbox.c"
   $119 = $4; //@line 265 "../../iup_sbox.c"
   $120 = ((($119)) + 72|0); //@line 265 "../../iup_sbox.c"
   $121 = HEAP32[$120>>2]|0; //@line 265 "../../iup_sbox.c"
   HEAP32[$121>>2] = $118; //@line 265 "../../iup_sbox.c"
   $122 = $9; //@line 266 "../../iup_sbox.c"
   $123 = $4; //@line 266 "../../iup_sbox.c"
   $124 = ((($123)) + 72|0); //@line 266 "../../iup_sbox.c"
   $125 = HEAP32[$124>>2]|0; //@line 266 "../../iup_sbox.c"
   $126 = ((($125)) + 4|0); //@line 266 "../../iup_sbox.c"
   $127 = HEAP32[$126>>2]|0; //@line 266 "../../iup_sbox.c"
   $128 = ($122|0)>($127|0); //@line 266 "../../iup_sbox.c"
   if ($128) {
    $129 = $9; //@line 266 "../../iup_sbox.c"
    $139 = $129;
   } else {
    $130 = $4; //@line 266 "../../iup_sbox.c"
    $131 = ((($130)) + 72|0); //@line 266 "../../iup_sbox.c"
    $132 = HEAP32[$131>>2]|0; //@line 266 "../../iup_sbox.c"
    $133 = ((($132)) + 4|0); //@line 266 "../../iup_sbox.c"
    $134 = HEAP32[$133>>2]|0; //@line 266 "../../iup_sbox.c"
    $139 = $134;
   }
   $135 = $4; //@line 266 "../../iup_sbox.c"
   $136 = ((($135)) + 72|0); //@line 266 "../../iup_sbox.c"
   $137 = HEAP32[$136>>2]|0; //@line 266 "../../iup_sbox.c"
   $138 = ((($137)) + 4|0); //@line 266 "../../iup_sbox.c"
   HEAP32[$138>>2] = $139; //@line 266 "../../iup_sbox.c"
  }
 }
 if ((label|0) == 15) {
  $98 = $8; //@line 260 "../../iup_sbox.c"
  $99 = $4; //@line 260 "../../iup_sbox.c"
  $100 = ((($99)) + 72|0); //@line 260 "../../iup_sbox.c"
  $101 = HEAP32[$100>>2]|0; //@line 260 "../../iup_sbox.c"
  $102 = HEAP32[$101>>2]|0; //@line 260 "../../iup_sbox.c"
  $103 = ($98|0)>($102|0); //@line 260 "../../iup_sbox.c"
  if ($103) {
   $104 = $8; //@line 260 "../../iup_sbox.c"
   $112 = $104;
  } else {
   $105 = $4; //@line 260 "../../iup_sbox.c"
   $106 = ((($105)) + 72|0); //@line 260 "../../iup_sbox.c"
   $107 = HEAP32[$106>>2]|0; //@line 260 "../../iup_sbox.c"
   $108 = HEAP32[$107>>2]|0; //@line 260 "../../iup_sbox.c"
   $112 = $108;
  }
  $109 = $4; //@line 260 "../../iup_sbox.c"
  $110 = ((($109)) + 72|0); //@line 260 "../../iup_sbox.c"
  $111 = HEAP32[$110>>2]|0; //@line 260 "../../iup_sbox.c"
  HEAP32[$111>>2] = $112; //@line 260 "../../iup_sbox.c"
  $113 = $9; //@line 261 "../../iup_sbox.c"
  $114 = $4; //@line 261 "../../iup_sbox.c"
  $115 = ((($114)) + 72|0); //@line 261 "../../iup_sbox.c"
  $116 = HEAP32[$115>>2]|0; //@line 261 "../../iup_sbox.c"
  $117 = ((($116)) + 4|0); //@line 261 "../../iup_sbox.c"
  HEAP32[$117>>2] = $113; //@line 261 "../../iup_sbox.c"
 }
 $140 = $4; //@line 270 "../../iup_sbox.c"
 $141 = ((($140)) + 64|0); //@line 270 "../../iup_sbox.c"
 $142 = HEAP32[$141>>2]|0; //@line 270 "../../iup_sbox.c"
 $143 = ((($142)) + 68|0); //@line 270 "../../iup_sbox.c"
 $144 = HEAP32[$143>>2]|0; //@line 270 "../../iup_sbox.c"
 $145 = ($144|0)!=(0|0); //@line 270 "../../iup_sbox.c"
 if (!($145)) {
  $170 = $4; //@line 277 "../../iup_sbox.c"
  $171 = ((($170)) + 72|0); //@line 277 "../../iup_sbox.c"
  $172 = HEAP32[$171>>2]|0; //@line 277 "../../iup_sbox.c"
  $173 = HEAP32[$172>>2]|0; //@line 277 "../../iup_sbox.c"
  $174 = $5; //@line 277 "../../iup_sbox.c"
  HEAP32[$174>>2] = $173; //@line 277 "../../iup_sbox.c"
  $175 = $4; //@line 278 "../../iup_sbox.c"
  $176 = ((($175)) + 72|0); //@line 278 "../../iup_sbox.c"
  $177 = HEAP32[$176>>2]|0; //@line 278 "../../iup_sbox.c"
  $178 = ((($177)) + 4|0); //@line 278 "../../iup_sbox.c"
  $179 = HEAP32[$178>>2]|0; //@line 278 "../../iup_sbox.c"
  $180 = $6; //@line 278 "../../iup_sbox.c"
  HEAP32[$180>>2] = $179; //@line 278 "../../iup_sbox.c"
  STACKTOP = sp;return; //@line 279 "../../iup_sbox.c"
 }
 $146 = $4; //@line 272 "../../iup_sbox.c"
 $147 = ((($146)) + 64|0); //@line 272 "../../iup_sbox.c"
 $148 = HEAP32[$147>>2]|0; //@line 272 "../../iup_sbox.c"
 $149 = ((($148)) + 68|0); //@line 272 "../../iup_sbox.c"
 $150 = HEAP32[$149>>2]|0; //@line 272 "../../iup_sbox.c"
 $11 = $150; //@line 272 "../../iup_sbox.c"
 $151 = $4; //@line 273 "../../iup_sbox.c"
 $152 = ((($151)) + 72|0); //@line 273 "../../iup_sbox.c"
 $153 = HEAP32[$152>>2]|0; //@line 273 "../../iup_sbox.c"
 $154 = HEAP32[$153>>2]|0; //@line 273 "../../iup_sbox.c"
 $155 = $4; //@line 273 "../../iup_sbox.c"
 $156 = (_iSboxGetXborder($155)|0); //@line 273 "../../iup_sbox.c"
 $157 = (($154) - ($156))|0; //@line 273 "../../iup_sbox.c"
 $158 = $11; //@line 273 "../../iup_sbox.c"
 $159 = ((($158)) + 44|0); //@line 273 "../../iup_sbox.c"
 HEAP32[$159>>2] = $157; //@line 273 "../../iup_sbox.c"
 $160 = $4; //@line 274 "../../iup_sbox.c"
 $161 = ((($160)) + 72|0); //@line 274 "../../iup_sbox.c"
 $162 = HEAP32[$161>>2]|0; //@line 274 "../../iup_sbox.c"
 $163 = ((($162)) + 4|0); //@line 274 "../../iup_sbox.c"
 $164 = HEAP32[$163>>2]|0; //@line 274 "../../iup_sbox.c"
 $165 = $4; //@line 274 "../../iup_sbox.c"
 $166 = (_iSboxGetYborder($165)|0); //@line 274 "../../iup_sbox.c"
 $167 = (($164) - ($166))|0; //@line 274 "../../iup_sbox.c"
 $168 = $11; //@line 274 "../../iup_sbox.c"
 $169 = ((($168)) + 48|0); //@line 274 "../../iup_sbox.c"
 HEAP32[$169>>2] = $167; //@line 274 "../../iup_sbox.c"
 $170 = $4; //@line 277 "../../iup_sbox.c"
 $171 = ((($170)) + 72|0); //@line 277 "../../iup_sbox.c"
 $172 = HEAP32[$171>>2]|0; //@line 277 "../../iup_sbox.c"
 $173 = HEAP32[$172>>2]|0; //@line 277 "../../iup_sbox.c"
 $174 = $5; //@line 277 "../../iup_sbox.c"
 HEAP32[$174>>2] = $173; //@line 277 "../../iup_sbox.c"
 $175 = $4; //@line 278 "../../iup_sbox.c"
 $176 = ((($175)) + 72|0); //@line 278 "../../iup_sbox.c"
 $177 = HEAP32[$176>>2]|0; //@line 278 "../../iup_sbox.c"
 $178 = ((($177)) + 4|0); //@line 278 "../../iup_sbox.c"
 $179 = HEAP32[$178>>2]|0; //@line 278 "../../iup_sbox.c"
 $180 = $6; //@line 278 "../../iup_sbox.c"
 HEAP32[$180>>2] = $179; //@line 278 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 279 "../../iup_sbox.c"
}
function _iSboxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 284 "../../iup_sbox.c"
 $7 = ((($6)) + 72|0); //@line 284 "../../iup_sbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 284 "../../iup_sbox.c"
 $9 = ((($8)) + 28|0); //@line 284 "../../iup_sbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 284 "../../iup_sbox.c"
 $11 = ($10|0)==(0); //@line 284 "../../iup_sbox.c"
 if ($11) {
  label = 3;
 } else {
  $12 = $2; //@line 284 "../../iup_sbox.c"
  $13 = ((($12)) + 72|0); //@line 284 "../../iup_sbox.c"
  $14 = HEAP32[$13>>2]|0; //@line 284 "../../iup_sbox.c"
  $15 = ((($14)) + 28|0); //@line 284 "../../iup_sbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 284 "../../iup_sbox.c"
  $17 = ($16|0)==(1); //@line 284 "../../iup_sbox.c"
  if ($17) {
   label = 3;
  } else {
   $29 = $2; //@line 291 "../../iup_sbox.c"
   $30 = ((($29)) + 64|0); //@line 291 "../../iup_sbox.c"
   $31 = HEAP32[$30>>2]|0; //@line 291 "../../iup_sbox.c"
   $32 = ((($31)) + 52|0); //@line 291 "../../iup_sbox.c"
   HEAP32[$32>>2] = 5; //@line 291 "../../iup_sbox.c"
   $33 = $2; //@line 292 "../../iup_sbox.c"
   $34 = ((($33)) + 56|0); //@line 292 "../../iup_sbox.c"
   $35 = HEAP32[$34>>2]|0; //@line 292 "../../iup_sbox.c"
   $36 = $2; //@line 292 "../../iup_sbox.c"
   $37 = ((($36)) + 64|0); //@line 292 "../../iup_sbox.c"
   $38 = HEAP32[$37>>2]|0; //@line 292 "../../iup_sbox.c"
   $39 = ((($38)) + 56|0); //@line 292 "../../iup_sbox.c"
   HEAP32[$39>>2] = $35; //@line 292 "../../iup_sbox.c"
  }
 }
 if ((label|0) == 3) {
  $18 = $2; //@line 286 "../../iup_sbox.c"
  $19 = ((($18)) + 52|0); //@line 286 "../../iup_sbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 286 "../../iup_sbox.c"
  $21 = $2; //@line 286 "../../iup_sbox.c"
  $22 = ((($21)) + 64|0); //@line 286 "../../iup_sbox.c"
  $23 = HEAP32[$22>>2]|0; //@line 286 "../../iup_sbox.c"
  $24 = ((($23)) + 52|0); //@line 286 "../../iup_sbox.c"
  HEAP32[$24>>2] = $20; //@line 286 "../../iup_sbox.c"
  $25 = $2; //@line 287 "../../iup_sbox.c"
  $26 = ((($25)) + 64|0); //@line 287 "../../iup_sbox.c"
  $27 = HEAP32[$26>>2]|0; //@line 287 "../../iup_sbox.c"
  $28 = ((($27)) + 56|0); //@line 287 "../../iup_sbox.c"
  HEAP32[$28>>2] = 5; //@line 287 "../../iup_sbox.c"
 }
 $40 = $2; //@line 296 "../../iup_sbox.c"
 $41 = ((($40)) + 64|0); //@line 296 "../../iup_sbox.c"
 $42 = HEAP32[$41>>2]|0; //@line 296 "../../iup_sbox.c"
 $43 = ((($42)) + 68|0); //@line 296 "../../iup_sbox.c"
 $44 = HEAP32[$43>>2]|0; //@line 296 "../../iup_sbox.c"
 $45 = ($44|0)!=(0|0); //@line 296 "../../iup_sbox.c"
 if (!($45)) {
  STACKTOP = sp;return; //@line 305 "../../iup_sbox.c"
 }
 $46 = $2; //@line 298 "../../iup_sbox.c"
 $47 = ((($46)) + 52|0); //@line 298 "../../iup_sbox.c"
 $48 = HEAP32[$47>>2]|0; //@line 298 "../../iup_sbox.c"
 $49 = $2; //@line 298 "../../iup_sbox.c"
 $50 = (_iSboxGetXborder($49)|0); //@line 298 "../../iup_sbox.c"
 $51 = (($48) - ($50))|0; //@line 298 "../../iup_sbox.c"
 $4 = $51; //@line 298 "../../iup_sbox.c"
 $52 = $2; //@line 299 "../../iup_sbox.c"
 $53 = ((($52)) + 56|0); //@line 299 "../../iup_sbox.c"
 $54 = HEAP32[$53>>2]|0; //@line 299 "../../iup_sbox.c"
 $55 = $2; //@line 299 "../../iup_sbox.c"
 $56 = (_iSboxGetYborder($55)|0); //@line 299 "../../iup_sbox.c"
 $57 = (($54) - ($56))|0; //@line 299 "../../iup_sbox.c"
 $5 = $57; //@line 299 "../../iup_sbox.c"
 $58 = $4; //@line 300 "../../iup_sbox.c"
 $59 = ($58|0)<(0); //@line 300 "../../iup_sbox.c"
 if ($59) {
  $4 = 0; //@line 300 "../../iup_sbox.c"
 }
 $60 = $5; //@line 301 "../../iup_sbox.c"
 $61 = ($60|0)<(0); //@line 301 "../../iup_sbox.c"
 if ($61) {
  $5 = 0; //@line 301 "../../iup_sbox.c"
 }
 $62 = $2; //@line 303 "../../iup_sbox.c"
 $63 = ((($62)) + 64|0); //@line 303 "../../iup_sbox.c"
 $64 = HEAP32[$63>>2]|0; //@line 303 "../../iup_sbox.c"
 $65 = ((($64)) + 68|0); //@line 303 "../../iup_sbox.c"
 $66 = HEAP32[$65>>2]|0; //@line 303 "../../iup_sbox.c"
 $67 = $4; //@line 303 "../../iup_sbox.c"
 $68 = $5; //@line 303 "../../iup_sbox.c"
 $69 = $3; //@line 303 "../../iup_sbox.c"
 _iupBaseSetCurrentSize($66,$67,$68,$69); //@line 303 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 305 "../../iup_sbox.c"
}
function _iSboxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 $6 = 0; //@line 309 "../../iup_sbox.c"
 $7 = 0; //@line 309 "../../iup_sbox.c"
 $8 = $3; //@line 312 "../../iup_sbox.c"
 $9 = ((($8)) + 72|0); //@line 312 "../../iup_sbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 312 "../../iup_sbox.c"
 $11 = ((($10)) + 28|0); //@line 312 "../../iup_sbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 312 "../../iup_sbox.c"
 $13 = ($12|0)==(3); //@line 312 "../../iup_sbox.c"
 if ($13) {
  $14 = $3; //@line 314 "../../iup_sbox.c"
  $15 = ((($14)) + 72|0); //@line 314 "../../iup_sbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 314 "../../iup_sbox.c"
  $17 = HEAP32[$16>>2]|0; //@line 314 "../../iup_sbox.c"
  $18 = (($17) - 5)|0; //@line 314 "../../iup_sbox.c"
  $6 = $18; //@line 314 "../../iup_sbox.c"
  $19 = $6; //@line 315 "../../iup_sbox.c"
  $20 = ($19|0)<(0); //@line 315 "../../iup_sbox.c"
  $$ = $20 ? 0 : $18; //@line 315 "../../iup_sbox.c"
  $6 = $$; //@line 315 "../../iup_sbox.c"
 }
 $21 = $3; //@line 317 "../../iup_sbox.c"
 $22 = ((($21)) + 72|0); //@line 317 "../../iup_sbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 317 "../../iup_sbox.c"
 $24 = ((($23)) + 28|0); //@line 317 "../../iup_sbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 317 "../../iup_sbox.c"
 $26 = ($25|0)==(1); //@line 317 "../../iup_sbox.c"
 if ($26) {
  $27 = $3; //@line 319 "../../iup_sbox.c"
  $28 = ((($27)) + 72|0); //@line 319 "../../iup_sbox.c"
  $29 = HEAP32[$28>>2]|0; //@line 319 "../../iup_sbox.c"
  $30 = ((($29)) + 4|0); //@line 319 "../../iup_sbox.c"
  $31 = HEAP32[$30>>2]|0; //@line 319 "../../iup_sbox.c"
  $32 = (($31) - 5)|0; //@line 319 "../../iup_sbox.c"
  $7 = $32; //@line 319 "../../iup_sbox.c"
  $33 = $7; //@line 320 "../../iup_sbox.c"
  $34 = ($33|0)<(0); //@line 320 "../../iup_sbox.c"
  $$1 = $34 ? 0 : $32; //@line 320 "../../iup_sbox.c"
  $7 = $$1; //@line 320 "../../iup_sbox.c"
 }
 $35 = $3; //@line 323 "../../iup_sbox.c"
 $36 = ((($35)) + 64|0); //@line 323 "../../iup_sbox.c"
 $37 = HEAP32[$36>>2]|0; //@line 323 "../../iup_sbox.c"
 $38 = HEAP32[$4>>2]|0; //@line 323 "../../iup_sbox.c"
 $39 = $6; //@line 323 "../../iup_sbox.c"
 $40 = (($38) + ($39))|0; //@line 323 "../../iup_sbox.c"
 $41 = HEAP32[$5>>2]|0; //@line 323 "../../iup_sbox.c"
 $42 = $7; //@line 323 "../../iup_sbox.c"
 $43 = (($41) + ($42))|0; //@line 323 "../../iup_sbox.c"
 _iupBaseSetPosition($37,$40,$43); //@line 323 "../../iup_sbox.c"
 $44 = $3; //@line 326 "../../iup_sbox.c"
 $45 = ((($44)) + 64|0); //@line 326 "../../iup_sbox.c"
 $46 = HEAP32[$45>>2]|0; //@line 326 "../../iup_sbox.c"
 $47 = ((($46)) + 68|0); //@line 326 "../../iup_sbox.c"
 $48 = HEAP32[$47>>2]|0; //@line 326 "../../iup_sbox.c"
 $49 = ($48|0)!=(0|0); //@line 326 "../../iup_sbox.c"
 if (!($49)) {
  STACKTOP = sp;return; //@line 331 "../../iup_sbox.c"
 }
 $50 = $3; //@line 328 "../../iup_sbox.c"
 _iSboxAddDecorOffset($50,$4,$5); //@line 328 "../../iup_sbox.c"
 $51 = $3; //@line 329 "../../iup_sbox.c"
 $52 = ((($51)) + 64|0); //@line 329 "../../iup_sbox.c"
 $53 = HEAP32[$52>>2]|0; //@line 329 "../../iup_sbox.c"
 $54 = ((($53)) + 68|0); //@line 329 "../../iup_sbox.c"
 $55 = HEAP32[$54>>2]|0; //@line 329 "../../iup_sbox.c"
 $56 = HEAP32[$4>>2]|0; //@line 329 "../../iup_sbox.c"
 $57 = HEAP32[$5>>2]|0; //@line 329 "../../iup_sbox.c"
 _iupBaseSetPosition($55,$56,$57); //@line 329 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 331 "../../iup_sbox.c"
}
function _iSboxGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 185 "../../iup_sbox.c"
 $5 = ((($4)) + 52|0); //@line 185 "../../iup_sbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 185 "../../iup_sbox.c"
 $7 = $1; //@line 185 "../../iup_sbox.c"
 $8 = (_iSboxGetXborder($7)|0); //@line 185 "../../iup_sbox.c"
 $9 = (($6) - ($8))|0; //@line 185 "../../iup_sbox.c"
 $2 = $9; //@line 185 "../../iup_sbox.c"
 $10 = $1; //@line 186 "../../iup_sbox.c"
 $11 = ((($10)) + 56|0); //@line 186 "../../iup_sbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 186 "../../iup_sbox.c"
 $13 = $1; //@line 186 "../../iup_sbox.c"
 $14 = (_iSboxGetYborder($13)|0); //@line 186 "../../iup_sbox.c"
 $15 = (($12) - ($14))|0; //@line 186 "../../iup_sbox.c"
 $3 = $15; //@line 186 "../../iup_sbox.c"
 $16 = $2; //@line 187 "../../iup_sbox.c"
 $17 = ($16|0)<(0); //@line 187 "../../iup_sbox.c"
 if ($17) {
  $2 = 0; //@line 187 "../../iup_sbox.c"
 }
 $18 = $3; //@line 188 "../../iup_sbox.c"
 $19 = ($18|0)<(0); //@line 188 "../../iup_sbox.c"
 if (!($19)) {
  $20 = $2; //@line 189 "../../iup_sbox.c"
  $21 = $3; //@line 189 "../../iup_sbox.c"
  $22 = (_iupStrReturnIntInt($20,$21,120)|0); //@line 189 "../../iup_sbox.c"
  STACKTOP = sp;return ($22|0); //@line 189 "../../iup_sbox.c"
 }
 $3 = 0; //@line 188 "../../iup_sbox.c"
 $20 = $2; //@line 189 "../../iup_sbox.c"
 $21 = $3; //@line 189 "../../iup_sbox.c"
 $22 = (_iupStrReturnIntInt($20,$21,120)|0); //@line 189 "../../iup_sbox.c"
 STACKTOP = sp;return ($22|0); //@line 189 "../../iup_sbox.c"
}
function _iSboxSetColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 194 "../../iup_sbox.c"
 $5 = ((($4)) + 64|0); //@line 194 "../../iup_sbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 194 "../../iup_sbox.c"
 $7 = $3; //@line 194 "../../iup_sbox.c"
 _IupSetAttribute($6,20290,$7); //@line 194 "../../iup_sbox.c"
 STACKTOP = sp;return 0; //@line 195 "../../iup_sbox.c"
}
function _iSboxSetDirectionAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 200 "../../iup_sbox.c"
 $6 = ((($5)) + 16|0); //@line 200 "../../iup_sbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 200 "../../iup_sbox.c"
 $8 = ($7|0)!=(0|0); //@line 200 "../../iup_sbox.c"
 if ($8) {
  $2 = 0; //@line 201 "../../iup_sbox.c"
  $48 = $2; //@line 218 "../../iup_sbox.c"
  STACKTOP = sp;return ($48|0); //@line 218 "../../iup_sbox.c"
 }
 $9 = $4; //@line 203 "../../iup_sbox.c"
 $10 = (_iupStrEqualNoCase($9,20037)|0); //@line 203 "../../iup_sbox.c"
 $11 = ($10|0)!=(0); //@line 203 "../../iup_sbox.c"
 do {
  if ($11) {
   $12 = $3; //@line 204 "../../iup_sbox.c"
   $13 = ((($12)) + 72|0); //@line 204 "../../iup_sbox.c"
   $14 = HEAP32[$13>>2]|0; //@line 204 "../../iup_sbox.c"
   $15 = ((($14)) + 28|0); //@line 204 "../../iup_sbox.c"
   HEAP32[$15>>2] = 0; //@line 204 "../../iup_sbox.c"
  } else {
   $16 = $4; //@line 205 "../../iup_sbox.c"
   $17 = (_iupStrEqualNoCase($16,20043)|0); //@line 205 "../../iup_sbox.c"
   $18 = ($17|0)!=(0); //@line 205 "../../iup_sbox.c"
   if ($18) {
    $19 = $3; //@line 206 "../../iup_sbox.c"
    $20 = ((($19)) + 72|0); //@line 206 "../../iup_sbox.c"
    $21 = HEAP32[$20>>2]|0; //@line 206 "../../iup_sbox.c"
    $22 = ((($21)) + 28|0); //@line 206 "../../iup_sbox.c"
    HEAP32[$22>>2] = 1; //@line 206 "../../iup_sbox.c"
    break;
   }
   $23 = $4; //@line 207 "../../iup_sbox.c"
   $24 = (_iupStrEqualNoCase($23,20049)|0); //@line 207 "../../iup_sbox.c"
   $25 = ($24|0)!=(0); //@line 207 "../../iup_sbox.c"
   $26 = $3; //@line 208 "../../iup_sbox.c"
   $27 = ((($26)) + 72|0); //@line 208 "../../iup_sbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 208 "../../iup_sbox.c"
   $29 = ((($28)) + 28|0); //@line 208 "../../iup_sbox.c"
   if ($25) {
    HEAP32[$29>>2] = 2; //@line 208 "../../iup_sbox.c"
    break;
   } else {
    HEAP32[$29>>2] = 3; //@line 210 "../../iup_sbox.c"
    break;
   }
  }
 } while(0);
 $30 = $3; //@line 212 "../../iup_sbox.c"
 $31 = ((($30)) + 72|0); //@line 212 "../../iup_sbox.c"
 $32 = HEAP32[$31>>2]|0; //@line 212 "../../iup_sbox.c"
 $33 = ((($32)) + 28|0); //@line 212 "../../iup_sbox.c"
 $34 = HEAP32[$33>>2]|0; //@line 212 "../../iup_sbox.c"
 $35 = ($34|0)==(3); //@line 212 "../../iup_sbox.c"
 if ($35) {
  label = 12;
 } else {
  $36 = $3; //@line 212 "../../iup_sbox.c"
  $37 = ((($36)) + 72|0); //@line 212 "../../iup_sbox.c"
  $38 = HEAP32[$37>>2]|0; //@line 212 "../../iup_sbox.c"
  $39 = ((($38)) + 28|0); //@line 212 "../../iup_sbox.c"
  $40 = HEAP32[$39>>2]|0; //@line 212 "../../iup_sbox.c"
  $41 = ($40|0)==(2); //@line 212 "../../iup_sbox.c"
  if ($41) {
   label = 12;
  } else {
   $45 = $3; //@line 215 "../../iup_sbox.c"
   $46 = ((($45)) + 64|0); //@line 215 "../../iup_sbox.c"
   $47 = HEAP32[$46>>2]|0; //@line 215 "../../iup_sbox.c"
   _IupSetAttribute($47,15959,15420); //@line 215 "../../iup_sbox.c"
  }
 }
 if ((label|0) == 12) {
  $42 = $3; //@line 213 "../../iup_sbox.c"
  $43 = ((($42)) + 64|0); //@line 213 "../../iup_sbox.c"
  $44 = HEAP32[$43>>2]|0; //@line 213 "../../iup_sbox.c"
  _IupSetAttribute($44,15959,15410); //@line 213 "../../iup_sbox.c"
 }
 $2 = 0; //@line 217 "../../iup_sbox.c"
 $48 = $2; //@line 218 "../../iup_sbox.c"
 STACKTOP = sp;return ($48|0); //@line 218 "../../iup_sbox.c"
}
function _iSboxGetXborder($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 50 "../../iup_sbox.c"
 $4 = ((($3)) + 72|0); //@line 50 "../../iup_sbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 50 "../../iup_sbox.c"
 $6 = ((($5)) + 28|0); //@line 50 "../../iup_sbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 50 "../../iup_sbox.c"
 $8 = ($7|0)==(3); //@line 50 "../../iup_sbox.c"
 if (!($8)) {
  $9 = $2; //@line 50 "../../iup_sbox.c"
  $10 = ((($9)) + 72|0); //@line 50 "../../iup_sbox.c"
  $11 = HEAP32[$10>>2]|0; //@line 50 "../../iup_sbox.c"
  $12 = ((($11)) + 28|0); //@line 50 "../../iup_sbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 50 "../../iup_sbox.c"
  $14 = ($13|0)==(2); //@line 50 "../../iup_sbox.c"
  if (!($14)) {
   $1 = 0; //@line 53 "../../iup_sbox.c"
   $15 = $1; //@line 54 "../../iup_sbox.c"
   STACKTOP = sp;return ($15|0); //@line 54 "../../iup_sbox.c"
  }
 }
 $1 = 5; //@line 51 "../../iup_sbox.c"
 $15 = $1; //@line 54 "../../iup_sbox.c"
 STACKTOP = sp;return ($15|0); //@line 54 "../../iup_sbox.c"
}
function _iSboxGetYborder($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 42 "../../iup_sbox.c"
 $4 = ((($3)) + 72|0); //@line 42 "../../iup_sbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 42 "../../iup_sbox.c"
 $6 = ((($5)) + 28|0); //@line 42 "../../iup_sbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 42 "../../iup_sbox.c"
 $8 = ($7|0)==(0); //@line 42 "../../iup_sbox.c"
 if (!($8)) {
  $9 = $2; //@line 42 "../../iup_sbox.c"
  $10 = ((($9)) + 72|0); //@line 42 "../../iup_sbox.c"
  $11 = HEAP32[$10>>2]|0; //@line 42 "../../iup_sbox.c"
  $12 = ((($11)) + 28|0); //@line 42 "../../iup_sbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 42 "../../iup_sbox.c"
  $14 = ($13|0)==(1); //@line 42 "../../iup_sbox.c"
  if (!($14)) {
   $1 = 0; //@line 45 "../../iup_sbox.c"
   $15 = $1; //@line 46 "../../iup_sbox.c"
   STACKTOP = sp;return ($15|0); //@line 46 "../../iup_sbox.c"
  }
 }
 $1 = 5; //@line 43 "../../iup_sbox.c"
 $15 = $1; //@line 46 "../../iup_sbox.c"
 STACKTOP = sp;return ($15|0); //@line 46 "../../iup_sbox.c"
}
function _iSboxAddDecorOffset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 66 "../../iup_sbox.c"
 $7 = ((($6)) + 72|0); //@line 66 "../../iup_sbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 66 "../../iup_sbox.c"
 $9 = ((($8)) + 28|0); //@line 66 "../../iup_sbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 66 "../../iup_sbox.c"
 $11 = ($10|0)==(0); //@line 66 "../../iup_sbox.c"
 if ($11) {
  $12 = $5; //@line 67 "../../iup_sbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 67 "../../iup_sbox.c"
  $14 = (($13) + 5)|0; //@line 67 "../../iup_sbox.c"
  HEAP32[$12>>2] = $14; //@line 67 "../../iup_sbox.c"
 }
 $15 = $3; //@line 70 "../../iup_sbox.c"
 $16 = ((($15)) + 72|0); //@line 70 "../../iup_sbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 70 "../../iup_sbox.c"
 $18 = ((($17)) + 28|0); //@line 70 "../../iup_sbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 70 "../../iup_sbox.c"
 $20 = ($19|0)==(2); //@line 70 "../../iup_sbox.c"
 if (!($20)) {
  STACKTOP = sp;return; //@line 72 "../../iup_sbox.c"
 }
 $21 = $4; //@line 71 "../../iup_sbox.c"
 $22 = HEAP32[$21>>2]|0; //@line 71 "../../iup_sbox.c"
 $23 = (($22) + 5)|0; //@line 71 "../../iup_sbox.c"
 HEAP32[$21>>2] = $23; //@line 71 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 72 "../../iup_sbox.c"
}
function _iSboxButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $14 = $7; //@line 139 "../../iup_sbox.c"
 $15 = ((($14)) + 60|0); //@line 139 "../../iup_sbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 139 "../../iup_sbox.c"
 $13 = $16; //@line 139 "../../iup_sbox.c"
 $17 = $8; //@line 141 "../../iup_sbox.c"
 $18 = ($17|0)!=(49); //@line 141 "../../iup_sbox.c"
 if ($18) {
  $6 = -2; //@line 142 "../../iup_sbox.c"
  $65 = $6; //@line 162 "../../iup_sbox.c"
  STACKTOP = sp;return ($65|0); //@line 162 "../../iup_sbox.c"
 }
 $19 = $13; //@line 144 "../../iup_sbox.c"
 $20 = ((($19)) + 72|0); //@line 144 "../../iup_sbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 144 "../../iup_sbox.c"
 $22 = ((($21)) + 8|0); //@line 144 "../../iup_sbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 144 "../../iup_sbox.c"
 $24 = ($23|0)==(0); //@line 144 "../../iup_sbox.c"
 $25 = $9; //@line 144 "../../iup_sbox.c"
 $26 = ($25|0)!=(0); //@line 144 "../../iup_sbox.c"
 $or$cond = $24 & $26; //@line 144 "../../iup_sbox.c"
 $27 = $13; //@line 146 "../../iup_sbox.c"
 $28 = ((($27)) + 72|0); //@line 146 "../../iup_sbox.c"
 $29 = HEAP32[$28>>2]|0; //@line 146 "../../iup_sbox.c"
 $30 = ((($29)) + 8|0); //@line 146 "../../iup_sbox.c"
 if ($or$cond) {
  HEAP32[$30>>2] = 1; //@line 146 "../../iup_sbox.c"
  $31 = (_IupGetGlobal(20240)|0); //@line 149 "../../iup_sbox.c"
  $32 = $13; //@line 149 "../../iup_sbox.c"
  $33 = ((($32)) + 72|0); //@line 149 "../../iup_sbox.c"
  $34 = HEAP32[$33>>2]|0; //@line 149 "../../iup_sbox.c"
  $35 = ((($34)) + 12|0); //@line 149 "../../iup_sbox.c"
  $36 = $13; //@line 149 "../../iup_sbox.c"
  $37 = ((($36)) + 72|0); //@line 149 "../../iup_sbox.c"
  $38 = HEAP32[$37>>2]|0; //@line 149 "../../iup_sbox.c"
  $39 = ((($38)) + 16|0); //@line 149 "../../iup_sbox.c"
  (_iupStrToIntInt($31,$35,$39,120)|0); //@line 149 "../../iup_sbox.c"
  $40 = $13; //@line 152 "../../iup_sbox.c"
  $41 = ((($40)) + 72|0); //@line 152 "../../iup_sbox.c"
  $42 = HEAP32[$41>>2]|0; //@line 152 "../../iup_sbox.c"
  $43 = HEAP32[$42>>2]|0; //@line 152 "../../iup_sbox.c"
  $44 = $13; //@line 152 "../../iup_sbox.c"
  $45 = ((($44)) + 72|0); //@line 152 "../../iup_sbox.c"
  $46 = HEAP32[$45>>2]|0; //@line 152 "../../iup_sbox.c"
  $47 = ((($46)) + 20|0); //@line 152 "../../iup_sbox.c"
  HEAP32[$47>>2] = $43; //@line 152 "../../iup_sbox.c"
  $48 = $13; //@line 153 "../../iup_sbox.c"
  $49 = ((($48)) + 72|0); //@line 153 "../../iup_sbox.c"
  $50 = HEAP32[$49>>2]|0; //@line 153 "../../iup_sbox.c"
  $51 = ((($50)) + 4|0); //@line 153 "../../iup_sbox.c"
  $52 = HEAP32[$51>>2]|0; //@line 153 "../../iup_sbox.c"
  $53 = $13; //@line 153 "../../iup_sbox.c"
  $54 = ((($53)) + 72|0); //@line 153 "../../iup_sbox.c"
  $55 = HEAP32[$54>>2]|0; //@line 153 "../../iup_sbox.c"
  $56 = ((($55)) + 24|0); //@line 153 "../../iup_sbox.c"
  HEAP32[$56>>2] = $52; //@line 153 "../../iup_sbox.c"
 } else {
  $57 = HEAP32[$30>>2]|0; //@line 155 "../../iup_sbox.c"
  $58 = ($57|0)==(0); //@line 155 "../../iup_sbox.c"
  $59 = $9; //@line 155 "../../iup_sbox.c"
  $60 = ($59|0)!=(0); //@line 155 "../../iup_sbox.c"
  $or$cond3 = $58 | $60; //@line 155 "../../iup_sbox.c"
  if (!($or$cond3)) {
   $61 = $13; //@line 156 "../../iup_sbox.c"
   $62 = ((($61)) + 72|0); //@line 156 "../../iup_sbox.c"
   $63 = HEAP32[$62>>2]|0; //@line 156 "../../iup_sbox.c"
   $64 = ((($63)) + 8|0); //@line 156 "../../iup_sbox.c"
   HEAP32[$64>>2] = 0; //@line 156 "../../iup_sbox.c"
  }
 }
 $6 = -2; //@line 161 "../../iup_sbox.c"
 $65 = $6; //@line 162 "../../iup_sbox.c"
 STACKTOP = sp;return ($65|0); //@line 162 "../../iup_sbox.c"
}
function _iSboxFocus_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 166 "../../iup_sbox.c"
 $7 = ((($6)) + 60|0); //@line 166 "../../iup_sbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 166 "../../iup_sbox.c"
 $5 = $8; //@line 166 "../../iup_sbox.c"
 $9 = $5; //@line 168 "../../iup_sbox.c"
 $10 = ($9|0)==(0|0); //@line 168 "../../iup_sbox.c"
 $11 = $4; //@line 168 "../../iup_sbox.c"
 $12 = ($11|0)!=(0); //@line 168 "../../iup_sbox.c"
 $or$cond = $10 | $12; //@line 168 "../../iup_sbox.c"
 if ($or$cond) {
  $2 = -2; //@line 169 "../../iup_sbox.c"
  $23 = $2; //@line 175 "../../iup_sbox.c"
  STACKTOP = sp;return ($23|0); //@line 175 "../../iup_sbox.c"
 }
 $13 = $5; //@line 171 "../../iup_sbox.c"
 $14 = ((($13)) + 72|0); //@line 171 "../../iup_sbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 171 "../../iup_sbox.c"
 $16 = ((($15)) + 8|0); //@line 171 "../../iup_sbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 171 "../../iup_sbox.c"
 $18 = ($17|0)!=(0); //@line 171 "../../iup_sbox.c"
 if ($18) {
  $19 = $5; //@line 172 "../../iup_sbox.c"
  $20 = ((($19)) + 72|0); //@line 172 "../../iup_sbox.c"
  $21 = HEAP32[$20>>2]|0; //@line 172 "../../iup_sbox.c"
  $22 = ((($21)) + 8|0); //@line 172 "../../iup_sbox.c"
  HEAP32[$22>>2] = 0; //@line 172 "../../iup_sbox.c"
 }
 $2 = -2; //@line 174 "../../iup_sbox.c"
 $23 = $2; //@line 175 "../../iup_sbox.c"
 STACKTOP = sp;return ($23|0); //@line 175 "../../iup_sbox.c"
}
function _iSboxMotion_CB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = $4; //@line 126 "../../iup_sbox.c"
 $10 = ((($9)) + 60|0); //@line 126 "../../iup_sbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 126 "../../iup_sbox.c"
 $8 = $11; //@line 126 "../../iup_sbox.c"
 $12 = $8; //@line 128 "../../iup_sbox.c"
 $13 = ((($12)) + 72|0); //@line 128 "../../iup_sbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 128 "../../iup_sbox.c"
 $15 = ((($14)) + 8|0); //@line 128 "../../iup_sbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 128 "../../iup_sbox.c"
 $17 = ($16|0)!=(0); //@line 128 "../../iup_sbox.c"
 if (!($17)) {
  STACKTOP = sp;return -2; //@line 134 "../../iup_sbox.c"
 }
 $18 = $8; //@line 129 "../../iup_sbox.c"
 _iSboxShakeControls($18); //@line 129 "../../iup_sbox.c"
 STACKTOP = sp;return -2; //@line 134 "../../iup_sbox.c"
}
function _iSboxShakeControls($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 $4 = $1; //@line 98 "../../iup_sbox.c"
 $5 = $1; //@line 98 "../../iup_sbox.c"
 $6 = ((($5)) + 72|0); //@line 98 "../../iup_sbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 98 "../../iup_sbox.c"
 $8 = ((($7)) + 28|0); //@line 98 "../../iup_sbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 98 "../../iup_sbox.c"
 _iSboxGetFinalSize($4,$9,$2,$3); //@line 98 "../../iup_sbox.c"
 $10 = $1; //@line 100 "../../iup_sbox.c"
 $11 = ((($10)) + 72|0); //@line 100 "../../iup_sbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 100 "../../iup_sbox.c"
 $13 = ((($12)) + 28|0); //@line 100 "../../iup_sbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 100 "../../iup_sbox.c"
 $15 = ($14|0)==(2); //@line 100 "../../iup_sbox.c"
 if (!($15)) {
  $16 = $1; //@line 100 "../../iup_sbox.c"
  $17 = ((($16)) + 72|0); //@line 100 "../../iup_sbox.c"
  $18 = HEAP32[$17>>2]|0; //@line 100 "../../iup_sbox.c"
  $19 = ((($18)) + 28|0); //@line 100 "../../iup_sbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 100 "../../iup_sbox.c"
  $21 = ($20|0)==(3); //@line 100 "../../iup_sbox.c"
  if (!($21)) {
   $36 = $1; //@line 108 "../../iup_sbox.c"
   $37 = ((($36)) + 72|0); //@line 108 "../../iup_sbox.c"
   $38 = HEAP32[$37>>2]|0; //@line 108 "../../iup_sbox.c"
   $39 = ((($38)) + 28|0); //@line 108 "../../iup_sbox.c"
   $40 = HEAP32[$39>>2]|0; //@line 108 "../../iup_sbox.c"
   $41 = ($40|0)==(1); //@line 108 "../../iup_sbox.c"
   if (!($41)) {
    $42 = $1; //@line 108 "../../iup_sbox.c"
    $43 = ((($42)) + 72|0); //@line 108 "../../iup_sbox.c"
    $44 = HEAP32[$43>>2]|0; //@line 108 "../../iup_sbox.c"
    $45 = ((($44)) + 28|0); //@line 108 "../../iup_sbox.c"
    $46 = HEAP32[$45>>2]|0; //@line 108 "../../iup_sbox.c"
    $47 = ($46|0)==(0); //@line 108 "../../iup_sbox.c"
    if (!($47)) {
     STACKTOP = sp;return; //@line 116 "../../iup_sbox.c"
    }
   }
   $48 = HEAP32[$3>>2]|0; //@line 110 "../../iup_sbox.c"
   $49 = $1; //@line 110 "../../iup_sbox.c"
   $50 = ((($49)) + 72|0); //@line 110 "../../iup_sbox.c"
   $51 = HEAP32[$50>>2]|0; //@line 110 "../../iup_sbox.c"
   $52 = ((($51)) + 4|0); //@line 110 "../../iup_sbox.c"
   $53 = HEAP32[$52>>2]|0; //@line 110 "../../iup_sbox.c"
   $54 = ($48|0)!=($53|0); //@line 110 "../../iup_sbox.c"
   if (!($54)) {
    STACKTOP = sp;return; //@line 116 "../../iup_sbox.c"
   }
   $55 = $1; //@line 112 "../../iup_sbox.c"
   $56 = $1; //@line 112 "../../iup_sbox.c"
   $57 = ((($56)) + 72|0); //@line 112 "../../iup_sbox.c"
   $58 = HEAP32[$57>>2]|0; //@line 112 "../../iup_sbox.c"
   $59 = HEAP32[$58>>2]|0; //@line 112 "../../iup_sbox.c"
   $60 = HEAP32[$3>>2]|0; //@line 112 "../../iup_sbox.c"
   _iSboxSaveDimension($55,$59,$60); //@line 112 "../../iup_sbox.c"
   $61 = $1; //@line 113 "../../iup_sbox.c"
   _IupRefresh($61); //@line 113 "../../iup_sbox.c"
   STACKTOP = sp;return; //@line 116 "../../iup_sbox.c"
  }
 }
 $22 = HEAP32[$2>>2]|0; //@line 102 "../../iup_sbox.c"
 $23 = $1; //@line 102 "../../iup_sbox.c"
 $24 = ((($23)) + 72|0); //@line 102 "../../iup_sbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 102 "../../iup_sbox.c"
 $26 = HEAP32[$25>>2]|0; //@line 102 "../../iup_sbox.c"
 $27 = ($22|0)!=($26|0); //@line 102 "../../iup_sbox.c"
 if (!($27)) {
  STACKTOP = sp;return; //@line 116 "../../iup_sbox.c"
 }
 $28 = $1; //@line 104 "../../iup_sbox.c"
 $29 = HEAP32[$2>>2]|0; //@line 104 "../../iup_sbox.c"
 $30 = $1; //@line 104 "../../iup_sbox.c"
 $31 = ((($30)) + 72|0); //@line 104 "../../iup_sbox.c"
 $32 = HEAP32[$31>>2]|0; //@line 104 "../../iup_sbox.c"
 $33 = ((($32)) + 4|0); //@line 104 "../../iup_sbox.c"
 $34 = HEAP32[$33>>2]|0; //@line 104 "../../iup_sbox.c"
 _iSboxSaveDimension($28,$29,$34); //@line 104 "../../iup_sbox.c"
 $35 = $1; //@line 105 "../../iup_sbox.c"
 _IupRefresh($35); //@line 105 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 116 "../../iup_sbox.c"
}
function _iSboxGetFinalSize($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 12|0;
 $9 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $12 = (_IupGetGlobal(20240)|0); //@line 79 "../../iup_sbox.c"
 (_iupStrToIntInt($12,$8,$9,120)|0); //@line 79 "../../iup_sbox.c"
 $13 = HEAP32[$8>>2]|0; //@line 81 "../../iup_sbox.c"
 $14 = $4; //@line 81 "../../iup_sbox.c"
 $15 = ((($14)) + 72|0); //@line 81 "../../iup_sbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 81 "../../iup_sbox.c"
 $17 = ((($16)) + 12|0); //@line 81 "../../iup_sbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 81 "../../iup_sbox.c"
 $19 = (($13) - ($18))|0; //@line 81 "../../iup_sbox.c"
 $10 = $19; //@line 81 "../../iup_sbox.c"
 $20 = HEAP32[$9>>2]|0; //@line 82 "../../iup_sbox.c"
 $21 = $4; //@line 82 "../../iup_sbox.c"
 $22 = ((($21)) + 72|0); //@line 82 "../../iup_sbox.c"
 $23 = HEAP32[$22>>2]|0; //@line 82 "../../iup_sbox.c"
 $24 = ((($23)) + 16|0); //@line 82 "../../iup_sbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 82 "../../iup_sbox.c"
 $26 = (($20) - ($25))|0; //@line 82 "../../iup_sbox.c"
 $11 = $26; //@line 82 "../../iup_sbox.c"
 $27 = $5; //@line 84 "../../iup_sbox.c"
 $28 = ($27|0)==(2); //@line 84 "../../iup_sbox.c"
 if ($28) {
  $29 = $10; //@line 85 "../../iup_sbox.c"
  $30 = (0 - ($29))|0; //@line 85 "../../iup_sbox.c"
  $10 = $30; //@line 85 "../../iup_sbox.c"
 }
 $31 = $5; //@line 87 "../../iup_sbox.c"
 $32 = ($31|0)==(0); //@line 87 "../../iup_sbox.c"
 if ($32) {
  $33 = $11; //@line 88 "../../iup_sbox.c"
  $34 = (0 - ($33))|0; //@line 88 "../../iup_sbox.c"
  $11 = $34; //@line 88 "../../iup_sbox.c"
 }
 $35 = $10; //@line 90 "../../iup_sbox.c"
 $36 = $4; //@line 90 "../../iup_sbox.c"
 $37 = ((($36)) + 72|0); //@line 90 "../../iup_sbox.c"
 $38 = HEAP32[$37>>2]|0; //@line 90 "../../iup_sbox.c"
 $39 = ((($38)) + 20|0); //@line 90 "../../iup_sbox.c"
 $40 = HEAP32[$39>>2]|0; //@line 90 "../../iup_sbox.c"
 $41 = (($35) + ($40))|0; //@line 90 "../../iup_sbox.c"
 $42 = $6; //@line 90 "../../iup_sbox.c"
 HEAP32[$42>>2] = $41; //@line 90 "../../iup_sbox.c"
 $43 = $11; //@line 91 "../../iup_sbox.c"
 $44 = $4; //@line 91 "../../iup_sbox.c"
 $45 = ((($44)) + 72|0); //@line 91 "../../iup_sbox.c"
 $46 = HEAP32[$45>>2]|0; //@line 91 "../../iup_sbox.c"
 $47 = ((($46)) + 24|0); //@line 91 "../../iup_sbox.c"
 $48 = HEAP32[$47>>2]|0; //@line 91 "../../iup_sbox.c"
 $49 = (($43) + ($48))|0; //@line 91 "../../iup_sbox.c"
 $50 = $7; //@line 91 "../../iup_sbox.c"
 HEAP32[$50>>2] = $49; //@line 91 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 92 "../../iup_sbox.c"
}
function _iSboxSaveDimension($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 58 "../../iup_sbox.c"
 $7 = $3; //@line 58 "../../iup_sbox.c"
 $8 = ((($7)) + 72|0); //@line 58 "../../iup_sbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 58 "../../iup_sbox.c"
 HEAP32[$9>>2] = $6; //@line 58 "../../iup_sbox.c"
 $10 = $5; //@line 59 "../../iup_sbox.c"
 $11 = $3; //@line 59 "../../iup_sbox.c"
 $12 = ((($11)) + 72|0); //@line 59 "../../iup_sbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 59 "../../iup_sbox.c"
 $14 = ((($13)) + 4|0); //@line 59 "../../iup_sbox.c"
 HEAP32[$14>>2] = $10; //@line 59 "../../iup_sbox.c"
 $15 = $3; //@line 60 "../../iup_sbox.c"
 $16 = $3; //@line 60 "../../iup_sbox.c"
 $17 = ((($16)) + 72|0); //@line 60 "../../iup_sbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 60 "../../iup_sbox.c"
 $19 = $3; //@line 60 "../../iup_sbox.c"
 $20 = ((($19)) + 72|0); //@line 60 "../../iup_sbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 60 "../../iup_sbox.c"
 $22 = ((($21)) + 4|0); //@line 60 "../../iup_sbox.c"
 _iupLayoutApplyMinMaxSize($15,$18,$22); //@line 60 "../../iup_sbox.c"
 STACKTOP = sp;return; //@line 61 "../../iup_sbox.c"
}
function _iupScrollBoxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = (_iupRegisterFindClass(15430)|0); //@line 237 "../../iup_scrollbox.c"
 $3 = (_iupClassNew($2)|0); //@line 237 "../../iup_scrollbox.c"
 $0 = $3; //@line 237 "../../iup_scrollbox.c"
 $4 = $0; //@line 239 "../../iup_scrollbox.c"
 HEAP32[$4>>2] = 15437; //@line 239 "../../iup_scrollbox.c"
 $5 = $0; //@line 240 "../../iup_scrollbox.c"
 $6 = ((($5)) + 4|0); //@line 240 "../../iup_scrollbox.c"
 HEAP32[$6>>2] = 15852; //@line 240 "../../iup_scrollbox.c"
 $7 = $0; //@line 241 "../../iup_scrollbox.c"
 $8 = ((($7)) + 8|0); //@line 241 "../../iup_scrollbox.c"
 HEAP32[$8>>2] = 2; //@line 241 "../../iup_scrollbox.c"
 $9 = $0; //@line 242 "../../iup_scrollbox.c"
 $10 = ((($9)) + 12|0); //@line 242 "../../iup_scrollbox.c"
 HEAP32[$10>>2] = 2; //@line 242 "../../iup_scrollbox.c"
 $11 = $0; //@line 243 "../../iup_scrollbox.c"
 $12 = ((($11)) + 16|0); //@line 243 "../../iup_scrollbox.c"
 HEAP32[$12>>2] = 1; //@line 243 "../../iup_scrollbox.c"
 $13 = $0; //@line 246 "../../iup_scrollbox.c"
 $14 = ((($13)) + 32|0); //@line 246 "../../iup_scrollbox.c"
 HEAP32[$14>>2] = 401; //@line 246 "../../iup_scrollbox.c"
 $15 = $0; //@line 247 "../../iup_scrollbox.c"
 $16 = ((($15)) + 40|0); //@line 247 "../../iup_scrollbox.c"
 HEAP32[$16>>2] = 402; //@line 247 "../../iup_scrollbox.c"
 $17 = $0; //@line 249 "../../iup_scrollbox.c"
 $18 = ((($17)) + 76|0); //@line 249 "../../iup_scrollbox.c"
 HEAP32[$18>>2] = 403; //@line 249 "../../iup_scrollbox.c"
 $19 = $0; //@line 250 "../../iup_scrollbox.c"
 $20 = ((($19)) + 80|0); //@line 250 "../../iup_scrollbox.c"
 HEAP32[$20>>2] = 404; //@line 250 "../../iup_scrollbox.c"
 $21 = $0; //@line 251 "../../iup_scrollbox.c"
 $22 = ((($21)) + 84|0); //@line 251 "../../iup_scrollbox.c"
 HEAP32[$22>>2] = 405; //@line 251 "../../iup_scrollbox.c"
 $23 = $0; //@line 254 "../../iup_scrollbox.c"
 _iupClassRegisterAttribute($23,20073,20,0,(-1),20441,9); //@line 254 "../../iup_scrollbox.c"
 $24 = $0; //@line 255 "../../iup_scrollbox.c"
 _iupClassRegisterAttribute($24,20091,28,0,0,0,41); //@line 255 "../../iup_scrollbox.c"
 HEAP32[$1>>2] = 0; //@line 257 "../../iup_scrollbox.c"
 $25 = $0; //@line 258 "../../iup_scrollbox.c"
 _iupClassRegisterGetAttribute($25,15447,$1,0,0,0,0); //@line 258 "../../iup_scrollbox.c"
 $26 = $0; //@line 259 "../../iup_scrollbox.c"
 $27 = HEAP32[$1>>2]|0; //@line 259 "../../iup_scrollbox.c"
 _iupClassRegisterAttribute($26,20080,$27,0,0,0,33); //@line 259 "../../iup_scrollbox.c"
 $28 = $0; //@line 263 "../../iup_scrollbox.c"
 _iupClassRegisterAttribute($28,17403,0,0,0,0,9); //@line 263 "../../iup_scrollbox.c"
 $29 = $0; //@line 266 "../../iup_scrollbox.c"
 _iupClassRegisterReplaceAttribFunc($29,20290,406,0); //@line 266 "../../iup_scrollbox.c"
 $30 = $0; //@line 267 "../../iup_scrollbox.c"
 _iupClassRegisterReplaceAttribDef($30,20290,20331,0); //@line 267 "../../iup_scrollbox.c"
 $31 = $0; //@line 268 "../../iup_scrollbox.c"
 _iupClassRegisterReplaceAttribDef($31,17637,20140,0); //@line 268 "../../iup_scrollbox.c"
 $32 = $0; //@line 269 "../../iup_scrollbox.c"
 _iupClassRegisterReplaceAttribFlags($32,17637,33); //@line 269 "../../iup_scrollbox.c"
 $33 = $0; //@line 270 "../../iup_scrollbox.c"
 _iupClassRegisterReplaceAttribDef($33,17508,20441,0); //@line 270 "../../iup_scrollbox.c"
 $34 = $0; //@line 272 "../../iup_scrollbox.c"
 STACKTOP = sp;return ($34|0); //@line 272 "../../iup_scrollbox.c"
}
function _iScrollBoxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 220 "../../iup_scrollbox.c"
 (_IupSetCallback($5,15482,407)|0); //@line 220 "../../iup_scrollbox.c"
 $6 = $2; //@line 221 "../../iup_scrollbox.c"
 (_IupSetCallback($6,20522,408)|0); //@line 221 "../../iup_scrollbox.c"
 $7 = $2; //@line 222 "../../iup_scrollbox.c"
 (_IupSetCallback($7,18039,409)|0); //@line 222 "../../iup_scrollbox.c"
 $8 = $2; //@line 224 "../../iup_scrollbox.c"
 _IupSetAttribute($8,15995,20140); //@line 224 "../../iup_scrollbox.c"
 $9 = $3; //@line 226 "../../iup_scrollbox.c"
 $10 = ($9|0)!=(0|0); //@line 226 "../../iup_scrollbox.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 232 "../../iup_scrollbox.c"
 }
 $11 = $3; //@line 228 "../../iup_scrollbox.c"
 $4 = $11; //@line 228 "../../iup_scrollbox.c"
 $12 = $4; //@line 229 "../../iup_scrollbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 229 "../../iup_scrollbox.c"
 $14 = ($13|0)!=(0|0); //@line 229 "../../iup_scrollbox.c"
 if (!($14)) {
  STACKTOP = sp;return 0; //@line 232 "../../iup_scrollbox.c"
 }
 $15 = $2; //@line 229 "../../iup_scrollbox.c"
 $16 = $4; //@line 229 "../../iup_scrollbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 229 "../../iup_scrollbox.c"
 (_IupAppend($15,$17)|0); //@line 229 "../../iup_scrollbox.c"
 STACKTOP = sp;return 0; //@line 232 "../../iup_scrollbox.c"
}
function _iScrollBoxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 100 "../../iup_scrollbox.c"
 $9 = ((($8)) + 64|0); //@line 100 "../../iup_scrollbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 100 "../../iup_scrollbox.c"
 $11 = ($10|0)!=(0|0); //@line 100 "../../iup_scrollbox.c"
 if ($11) {
  $12 = $4; //@line 103 "../../iup_scrollbox.c"
  $13 = ((($12)) + 64|0); //@line 103 "../../iup_scrollbox.c"
  $14 = HEAP32[$13>>2]|0; //@line 103 "../../iup_scrollbox.c"
  _iupBaseComputeNaturalSize($14); //@line 103 "../../iup_scrollbox.c"
 }
 $15 = $4; //@line 112 "../../iup_scrollbox.c"
 $16 = ((($15)) + 20|0); //@line 112 "../../iup_scrollbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 112 "../../iup_scrollbox.c"
 $18 = $7; //@line 112 "../../iup_scrollbox.c"
 HEAP32[$18>>2] = $17; //@line 112 "../../iup_scrollbox.c"
 STACKTOP = sp;return; //@line 113 "../../iup_scrollbox.c"
}
function _iScrollBoxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $9 = $2; //@line 145 "../../iup_scrollbox.c"
 $10 = ((($9)) + 64|0); //@line 145 "../../iup_scrollbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 145 "../../iup_scrollbox.c"
 $4 = $11; //@line 145 "../../iup_scrollbox.c"
 $12 = $4; //@line 147 "../../iup_scrollbox.c"
 $13 = ($12|0)!=(0|0); //@line 147 "../../iup_scrollbox.c"
 if (!($13)) {
  $73 = $2; //@line 190 "../../iup_scrollbox.c"
  _IupSetAttribute($73,15466,19944); //@line 190 "../../iup_scrollbox.c"
  $74 = $2; //@line 191 "../../iup_scrollbox.c"
  _IupSetAttribute($74,15471,19944); //@line 191 "../../iup_scrollbox.c"
  $75 = $2; //@line 192 "../../iup_scrollbox.c"
  _IupSetAttribute($75,15476,19944); //@line 192 "../../iup_scrollbox.c"
  $76 = $2; //@line 193 "../../iup_scrollbox.c"
  _IupSetAttribute($76,15479,19944); //@line 193 "../../iup_scrollbox.c"
  STACKTOP = sp;return; //@line 195 "../../iup_scrollbox.c"
 }
 $7 = 0; //@line 149 "../../iup_scrollbox.c"
 $8 = 0; //@line 149 "../../iup_scrollbox.c"
 $14 = $4; //@line 156 "../../iup_scrollbox.c"
 $15 = ((($14)) + 44|0); //@line 156 "../../iup_scrollbox.c"
 $16 = HEAP32[$15>>2]|0; //@line 156 "../../iup_scrollbox.c"
 $17 = $2; //@line 156 "../../iup_scrollbox.c"
 $18 = ((($17)) + 52|0); //@line 156 "../../iup_scrollbox.c"
 $19 = HEAP32[$18>>2]|0; //@line 156 "../../iup_scrollbox.c"
 $20 = ($16|0)>($19|0); //@line 156 "../../iup_scrollbox.c"
 if ($20) {
  $21 = $4; //@line 158 "../../iup_scrollbox.c"
  $22 = ((($21)) + 44|0); //@line 158 "../../iup_scrollbox.c"
  $23 = HEAP32[$22>>2]|0; //@line 158 "../../iup_scrollbox.c"
  $5 = $23; //@line 158 "../../iup_scrollbox.c"
  $7 = 1; //@line 159 "../../iup_scrollbox.c"
 } else {
  $24 = $2; //@line 162 "../../iup_scrollbox.c"
  $25 = ((($24)) + 52|0); //@line 162 "../../iup_scrollbox.c"
  $26 = HEAP32[$25>>2]|0; //@line 162 "../../iup_scrollbox.c"
  $5 = $26; //@line 162 "../../iup_scrollbox.c"
 }
 $27 = $4; //@line 164 "../../iup_scrollbox.c"
 $28 = ((($27)) + 48|0); //@line 164 "../../iup_scrollbox.c"
 $29 = HEAP32[$28>>2]|0; //@line 164 "../../iup_scrollbox.c"
 $30 = $2; //@line 164 "../../iup_scrollbox.c"
 $31 = ((($30)) + 56|0); //@line 164 "../../iup_scrollbox.c"
 $32 = HEAP32[$31>>2]|0; //@line 164 "../../iup_scrollbox.c"
 $33 = ($29|0)>($32|0); //@line 164 "../../iup_scrollbox.c"
 if ($33) {
  $34 = $4; //@line 166 "../../iup_scrollbox.c"
  $35 = ((($34)) + 48|0); //@line 166 "../../iup_scrollbox.c"
  $36 = HEAP32[$35>>2]|0; //@line 166 "../../iup_scrollbox.c"
  $6 = $36; //@line 166 "../../iup_scrollbox.c"
  $8 = 1; //@line 167 "../../iup_scrollbox.c"
 } else {
  $37 = $2; //@line 170 "../../iup_scrollbox.c"
  $38 = ((($37)) + 56|0); //@line 170 "../../iup_scrollbox.c"
  $39 = HEAP32[$38>>2]|0; //@line 170 "../../iup_scrollbox.c"
  $6 = $39; //@line 170 "../../iup_scrollbox.c"
 }
 $40 = $7; //@line 172 "../../iup_scrollbox.c"
 $41 = ($40|0)==(0); //@line 172 "../../iup_scrollbox.c"
 $42 = $8; //@line 172 "../../iup_scrollbox.c"
 $43 = ($42|0)!=(0); //@line 172 "../../iup_scrollbox.c"
 $or$cond = $41 & $43; //@line 172 "../../iup_scrollbox.c"
 if ($or$cond) {
  $44 = (_iupdrvGetScrollbarSize()|0); //@line 173 "../../iup_scrollbox.c"
  $45 = $5; //@line 173 "../../iup_scrollbox.c"
  $46 = (($45) - ($44))|0; //@line 173 "../../iup_scrollbox.c"
  $5 = $46; //@line 173 "../../iup_scrollbox.c"
 }
 $47 = $7; //@line 175 "../../iup_scrollbox.c"
 $48 = ($47|0)==(0); //@line 175 "../../iup_scrollbox.c"
 $49 = $8; //@line 175 "../../iup_scrollbox.c"
 $50 = ($49|0)!=(0); //@line 175 "../../iup_scrollbox.c"
 $or$cond3 = $48 | $50; //@line 175 "../../iup_scrollbox.c"
 if (!($or$cond3)) {
  $51 = (_iupdrvGetScrollbarSize()|0); //@line 176 "../../iup_scrollbox.c"
  $52 = $6; //@line 176 "../../iup_scrollbox.c"
  $53 = (($52) - ($51))|0; //@line 176 "../../iup_scrollbox.c"
  $6 = $53; //@line 176 "../../iup_scrollbox.c"
 }
 $54 = $4; //@line 179 "../../iup_scrollbox.c"
 $55 = $5; //@line 179 "../../iup_scrollbox.c"
 $56 = $6; //@line 179 "../../iup_scrollbox.c"
 $57 = $3; //@line 179 "../../iup_scrollbox.c"
 _iupBaseSetCurrentSize($54,$55,$56,$57); //@line 179 "../../iup_scrollbox.c"
 $58 = $2; //@line 182 "../../iup_scrollbox.c"
 $59 = $4; //@line 182 "../../iup_scrollbox.c"
 $60 = ((($59)) + 52|0); //@line 182 "../../iup_scrollbox.c"
 $61 = HEAP32[$60>>2]|0; //@line 182 "../../iup_scrollbox.c"
 _IupSetInt($58,15466,$61); //@line 182 "../../iup_scrollbox.c"
 $62 = $2; //@line 183 "../../iup_scrollbox.c"
 $63 = $4; //@line 183 "../../iup_scrollbox.c"
 $64 = ((($63)) + 56|0); //@line 183 "../../iup_scrollbox.c"
 $65 = HEAP32[$64>>2]|0; //@line 183 "../../iup_scrollbox.c"
 _IupSetInt($62,15471,$65); //@line 183 "../../iup_scrollbox.c"
 $66 = $2; //@line 186 "../../iup_scrollbox.c"
 $67 = $4; //@line 186 "../../iup_scrollbox.c"
 $68 = ((($67)) + 52|0); //@line 186 "../../iup_scrollbox.c"
 $69 = HEAP32[$68>>2]|0; //@line 186 "../../iup_scrollbox.c"
 $70 = $4; //@line 186 "../../iup_scrollbox.c"
 $71 = ((($70)) + 56|0); //@line 186 "../../iup_scrollbox.c"
 $72 = HEAP32[$71>>2]|0; //@line 186 "../../iup_scrollbox.c"
 _iScrollBoxUpdateVisibleArea($66,$69,$72); //@line 186 "../../iup_scrollbox.c"
 STACKTOP = sp;return; //@line 195 "../../iup_scrollbox.c"
}
function _iScrollBoxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 $7 = $3; //@line 199 "../../iup_scrollbox.c"
 $8 = ((($7)) + 64|0); //@line 199 "../../iup_scrollbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 199 "../../iup_scrollbox.c"
 $10 = ($9|0)!=(0|0); //@line 199 "../../iup_scrollbox.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 215 "../../iup_scrollbox.c"
 }
 $11 = $3; //@line 201 "../../iup_scrollbox.c"
 $12 = (_iupAttribGet($11,17403)|0); //@line 201 "../../iup_scrollbox.c"
 $6 = $12; //@line 201 "../../iup_scrollbox.c"
 HEAP32[$4>>2] = 0; //@line 204 "../../iup_scrollbox.c"
 HEAP32[$5>>2] = 0; //@line 205 "../../iup_scrollbox.c"
 $13 = $6; //@line 207 "../../iup_scrollbox.c"
 $14 = ($13|0)!=(0|0); //@line 207 "../../iup_scrollbox.c"
 if ($14) {
  $15 = $6; //@line 207 "../../iup_scrollbox.c"
  (_iupStrToIntInt($15,$4,$5,120)|0); //@line 207 "../../iup_scrollbox.c"
 }
 $16 = $3; //@line 209 "../../iup_scrollbox.c"
 $17 = (_IupGetInt($16,15456)|0); //@line 209 "../../iup_scrollbox.c"
 $18 = HEAP32[$4>>2]|0; //@line 209 "../../iup_scrollbox.c"
 $19 = (($18) - ($17))|0; //@line 209 "../../iup_scrollbox.c"
 HEAP32[$4>>2] = $19; //@line 209 "../../iup_scrollbox.c"
 $20 = $3; //@line 210 "../../iup_scrollbox.c"
 $21 = (_IupGetInt($20,15461)|0); //@line 210 "../../iup_scrollbox.c"
 $22 = HEAP32[$5>>2]|0; //@line 210 "../../iup_scrollbox.c"
 $23 = (($22) - ($21))|0; //@line 210 "../../iup_scrollbox.c"
 HEAP32[$5>>2] = $23; //@line 210 "../../iup_scrollbox.c"
 $24 = $3; //@line 213 "../../iup_scrollbox.c"
 $25 = ((($24)) + 64|0); //@line 213 "../../iup_scrollbox.c"
 $26 = HEAP32[$25>>2]|0; //@line 213 "../../iup_scrollbox.c"
 $27 = HEAP32[$4>>2]|0; //@line 213 "../../iup_scrollbox.c"
 $28 = HEAP32[$5>>2]|0; //@line 213 "../../iup_scrollbox.c"
 _iupBaseSetPosition($26,$27,$28); //@line 213 "../../iup_scrollbox.c"
 STACKTOP = sp;return; //@line 215 "../../iup_scrollbox.c"
}
function _iScrollBoxUpdateVisibleArea($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3; //@line 117 "../../iup_scrollbox.c"
 $9 = ((($8)) + 52|0); //@line 117 "../../iup_scrollbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 117 "../../iup_scrollbox.c"
 $6 = $10; //@line 117 "../../iup_scrollbox.c"
 $11 = $3; //@line 118 "../../iup_scrollbox.c"
 $12 = ((($11)) + 56|0); //@line 118 "../../iup_scrollbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 118 "../../iup_scrollbox.c"
 $7 = $13; //@line 118 "../../iup_scrollbox.c"
 $14 = $4; //@line 124 "../../iup_scrollbox.c"
 $15 = $3; //@line 124 "../../iup_scrollbox.c"
 $16 = ((($15)) + 52|0); //@line 124 "../../iup_scrollbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 124 "../../iup_scrollbox.c"
 $18 = ($14|0)>($17|0); //@line 124 "../../iup_scrollbox.c"
 if ($18) {
  $19 = (_iupdrvGetScrollbarSize()|0); //@line 125 "../../iup_scrollbox.c"
  $20 = $7; //@line 125 "../../iup_scrollbox.c"
  $21 = (($20) - ($19))|0; //@line 125 "../../iup_scrollbox.c"
  $7 = $21; //@line 125 "../../iup_scrollbox.c"
 }
 $22 = $5; //@line 127 "../../iup_scrollbox.c"
 $23 = $3; //@line 127 "../../iup_scrollbox.c"
 $24 = ((($23)) + 56|0); //@line 127 "../../iup_scrollbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 127 "../../iup_scrollbox.c"
 $26 = ($22|0)>($25|0); //@line 127 "../../iup_scrollbox.c"
 if ($26) {
  $27 = (_iupdrvGetScrollbarSize()|0); //@line 128 "../../iup_scrollbox.c"
  $28 = $6; //@line 128 "../../iup_scrollbox.c"
  $29 = (($28) - ($27))|0; //@line 128 "../../iup_scrollbox.c"
  $6 = $29; //@line 128 "../../iup_scrollbox.c"
 }
 $30 = $4; //@line 130 "../../iup_scrollbox.c"
 $31 = $3; //@line 130 "../../iup_scrollbox.c"
 $32 = ((($31)) + 52|0); //@line 130 "../../iup_scrollbox.c"
 $33 = HEAP32[$32>>2]|0; //@line 130 "../../iup_scrollbox.c"
 $34 = ($30|0)<=($33|0); //@line 130 "../../iup_scrollbox.c"
 if ($34) {
  $35 = $4; //@line 130 "../../iup_scrollbox.c"
  $36 = $6; //@line 130 "../../iup_scrollbox.c"
  $37 = ($35|0)>($36|0); //@line 130 "../../iup_scrollbox.c"
  if ($37) {
   $38 = (_iupdrvGetScrollbarSize()|0); //@line 131 "../../iup_scrollbox.c"
   $39 = $7; //@line 131 "../../iup_scrollbox.c"
   $40 = (($39) - ($38))|0; //@line 131 "../../iup_scrollbox.c"
   $7 = $40; //@line 131 "../../iup_scrollbox.c"
  }
 }
 $41 = $5; //@line 133 "../../iup_scrollbox.c"
 $42 = $3; //@line 133 "../../iup_scrollbox.c"
 $43 = ((($42)) + 56|0); //@line 133 "../../iup_scrollbox.c"
 $44 = HEAP32[$43>>2]|0; //@line 133 "../../iup_scrollbox.c"
 $45 = ($41|0)<=($44|0); //@line 133 "../../iup_scrollbox.c"
 if ($45) {
  $46 = $5; //@line 133 "../../iup_scrollbox.c"
  $47 = $7; //@line 133 "../../iup_scrollbox.c"
  $48 = ($46|0)>($47|0); //@line 133 "../../iup_scrollbox.c"
  if ($48) {
   $49 = (_iupdrvGetScrollbarSize()|0); //@line 134 "../../iup_scrollbox.c"
   $50 = $6; //@line 134 "../../iup_scrollbox.c"
   $51 = (($50) - ($49))|0; //@line 134 "../../iup_scrollbox.c"
   $6 = $51; //@line 134 "../../iup_scrollbox.c"
  }
 }
 $52 = $6; //@line 136 "../../iup_scrollbox.c"
 $53 = ($52|0)<(0); //@line 136 "../../iup_scrollbox.c"
 if ($53) {
  $6 = 0; //@line 136 "../../iup_scrollbox.c"
 }
 $54 = $7; //@line 137 "../../iup_scrollbox.c"
 $55 = ($54|0)<(0); //@line 137 "../../iup_scrollbox.c"
 if (!($55)) {
  $56 = $3; //@line 139 "../../iup_scrollbox.c"
  $57 = $6; //@line 139 "../../iup_scrollbox.c"
  _IupSetInt($56,15476,$57); //@line 139 "../../iup_scrollbox.c"
  $58 = $3; //@line 140 "../../iup_scrollbox.c"
  $59 = $7; //@line 140 "../../iup_scrollbox.c"
  _IupSetInt($58,15479,$59); //@line 140 "../../iup_scrollbox.c"
  STACKTOP = sp;return; //@line 141 "../../iup_scrollbox.c"
 }
 $7 = 0; //@line 137 "../../iup_scrollbox.c"
 $56 = $3; //@line 139 "../../iup_scrollbox.c"
 $57 = $6; //@line 139 "../../iup_scrollbox.c"
 _IupSetInt($56,15476,$57); //@line 139 "../../iup_scrollbox.c"
 $58 = $3; //@line 140 "../../iup_scrollbox.c"
 $59 = $7; //@line 140 "../../iup_scrollbox.c"
 _IupSetInt($58,15479,$59); //@line 140 "../../iup_scrollbox.c"
 STACKTOP = sp;return; //@line 141 "../../iup_scrollbox.c"
}
function _iScrollBoxScroll_CB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 $3 = +$3;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp + 8|0;
 $9 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $4; //@line 31 "../../iup_scrollbox.c"
 $12 = ((($11)) + 64|0); //@line 31 "../../iup_scrollbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 31 "../../iup_scrollbox.c"
 $14 = ($13|0)!=(0|0); //@line 31 "../../iup_scrollbox.c"
 if (!($14)) {
  STACKTOP = sp;return -2; //@line 55 "../../iup_scrollbox.c"
 }
 $15 = $4; //@line 35 "../../iup_scrollbox.c"
 $16 = (_iupAttribGet($15,17403)|0); //@line 35 "../../iup_scrollbox.c"
 $10 = $16; //@line 35 "../../iup_scrollbox.c"
 HEAP32[$8>>2] = 0; //@line 38 "../../iup_scrollbox.c"
 HEAP32[$9>>2] = 0; //@line 39 "../../iup_scrollbox.c"
 $17 = $10; //@line 41 "../../iup_scrollbox.c"
 $18 = ($17|0)!=(0|0); //@line 41 "../../iup_scrollbox.c"
 if ($18) {
  $19 = $10; //@line 41 "../../iup_scrollbox.c"
  (_iupStrToIntInt($19,$8,$9,120)|0); //@line 41 "../../iup_scrollbox.c"
 }
 $20 = $4; //@line 43 "../../iup_scrollbox.c"
 $21 = (_IupGetInt($20,15476)|0); //@line 43 "../../iup_scrollbox.c"
 $22 = $4; //@line 43 "../../iup_scrollbox.c"
 $23 = (_IupGetInt($22,15466)|0); //@line 43 "../../iup_scrollbox.c"
 $24 = (_iupdrvGetScrollbarSize()|0); //@line 43 "../../iup_scrollbox.c"
 $25 = (($23) - ($24))|0; //@line 43 "../../iup_scrollbox.c"
 $26 = ($21|0)>($25|0); //@line 43 "../../iup_scrollbox.c"
 if ($26) {
  $6 = 0.0; //@line 44 "../../iup_scrollbox.c"
 }
 $27 = $4; //@line 45 "../../iup_scrollbox.c"
 $28 = (_IupGetInt($27,15479)|0); //@line 45 "../../iup_scrollbox.c"
 $29 = $4; //@line 45 "../../iup_scrollbox.c"
 $30 = (_IupGetInt($29,15471)|0); //@line 45 "../../iup_scrollbox.c"
 $31 = (_iupdrvGetScrollbarSize()|0); //@line 45 "../../iup_scrollbox.c"
 $32 = (($30) - ($31))|0; //@line 45 "../../iup_scrollbox.c"
 $33 = ($28|0)>($32|0); //@line 45 "../../iup_scrollbox.c"
 if ($33) {
  $7 = 0.0; //@line 46 "../../iup_scrollbox.c"
 }
 $34 = $6; //@line 48 "../../iup_scrollbox.c"
 $35 = (~~(($34))); //@line 48 "../../iup_scrollbox.c"
 $36 = HEAP32[$8>>2]|0; //@line 48 "../../iup_scrollbox.c"
 $37 = (($36) - ($35))|0; //@line 48 "../../iup_scrollbox.c"
 HEAP32[$8>>2] = $37; //@line 48 "../../iup_scrollbox.c"
 $38 = $7; //@line 49 "../../iup_scrollbox.c"
 $39 = (~~(($38))); //@line 49 "../../iup_scrollbox.c"
 $40 = HEAP32[$9>>2]|0; //@line 49 "../../iup_scrollbox.c"
 $41 = (($40) - ($39))|0; //@line 49 "../../iup_scrollbox.c"
 HEAP32[$9>>2] = $41; //@line 49 "../../iup_scrollbox.c"
 $42 = $4; //@line 51 "../../iup_scrollbox.c"
 $43 = ((($42)) + 64|0); //@line 51 "../../iup_scrollbox.c"
 $44 = HEAP32[$43>>2]|0; //@line 51 "../../iup_scrollbox.c"
 $45 = HEAP32[$8>>2]|0; //@line 51 "../../iup_scrollbox.c"
 $46 = HEAP32[$9>>2]|0; //@line 51 "../../iup_scrollbox.c"
 _iupBaseSetPosition($44,$45,$46); //@line 51 "../../iup_scrollbox.c"
 $47 = $4; //@line 52 "../../iup_scrollbox.c"
 $48 = ((($47)) + 64|0); //@line 52 "../../iup_scrollbox.c"
 $49 = HEAP32[$48>>2]|0; //@line 52 "../../iup_scrollbox.c"
 _iupLayoutUpdate($49); //@line 52 "../../iup_scrollbox.c"
 STACKTOP = sp;return -2; //@line 55 "../../iup_scrollbox.c"
}
function _iScrollBoxButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $12 = $7; //@line 60 "../../iup_scrollbox.c"
 $13 = ($12|0)==(49); //@line 60 "../../iup_scrollbox.c"
 $14 = $8; //@line 60 "../../iup_scrollbox.c"
 $15 = ($14|0)!=(0); //@line 60 "../../iup_scrollbox.c"
 $or$cond = $13 & $15; //@line 60 "../../iup_scrollbox.c"
 if ($or$cond) {
  $16 = $6; //@line 62 "../../iup_scrollbox.c"
  $17 = $9; //@line 62 "../../iup_scrollbox.c"
  _iupAttribSetInt($16,15505,$17); //@line 62 "../../iup_scrollbox.c"
  $18 = $6; //@line 63 "../../iup_scrollbox.c"
  $19 = $10; //@line 63 "../../iup_scrollbox.c"
  _iupAttribSetInt($18,15518,$19); //@line 63 "../../iup_scrollbox.c"
  $20 = $6; //@line 64 "../../iup_scrollbox.c"
  $21 = $6; //@line 64 "../../iup_scrollbox.c"
  $22 = (_IupGetInt($21,15456)|0); //@line 64 "../../iup_scrollbox.c"
  _iupAttribSetInt($20,15531,$22); //@line 64 "../../iup_scrollbox.c"
  $23 = $6; //@line 65 "../../iup_scrollbox.c"
  $24 = $6; //@line 65 "../../iup_scrollbox.c"
  $25 = (_IupGetInt($24,15461)|0); //@line 65 "../../iup_scrollbox.c"
  _iupAttribSetInt($23,15547,$25); //@line 65 "../../iup_scrollbox.c"
  $26 = $6; //@line 66 "../../iup_scrollbox.c"
  _iupAttribSet($26,15492,19938); //@line 66 "../../iup_scrollbox.c"
 }
 $27 = $7; //@line 68 "../../iup_scrollbox.c"
 $28 = ($27|0)!=(49); //@line 68 "../../iup_scrollbox.c"
 $29 = $8; //@line 68 "../../iup_scrollbox.c"
 $30 = ($29|0)!=(0); //@line 68 "../../iup_scrollbox.c"
 $or$cond3 = $28 | $30; //@line 68 "../../iup_scrollbox.c"
 if ($or$cond3) {
  STACKTOP = sp;return -2; //@line 71 "../../iup_scrollbox.c"
 }
 $31 = $6; //@line 69 "../../iup_scrollbox.c"
 _iupAttribSet($31,15492,0); //@line 69 "../../iup_scrollbox.c"
 STACKTOP = sp;return -2; //@line 71 "../../iup_scrollbox.c"
}
function _iScrollBoxMotion_CB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0, $47 = 0, $48 = 0.0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $14 = $7; //@line 76 "../../iup_scrollbox.c"
 $15 = ((($14)) + 2|0); //@line 76 "../../iup_scrollbox.c"
 $16 = HEAP8[$15>>0]|0; //@line 76 "../../iup_scrollbox.c"
 $17 = $16 << 24 >> 24; //@line 76 "../../iup_scrollbox.c"
 $18 = ($17|0)==(49); //@line 76 "../../iup_scrollbox.c"
 if (!($18)) {
  STACKTOP = sp;return -2; //@line 89 "../../iup_scrollbox.c"
 }
 $19 = $4; //@line 77 "../../iup_scrollbox.c"
 $20 = (_iupAttribGet($19,15492)|0); //@line 77 "../../iup_scrollbox.c"
 $21 = ($20|0)!=(0|0); //@line 77 "../../iup_scrollbox.c"
 if (!($21)) {
  STACKTOP = sp;return -2; //@line 89 "../../iup_scrollbox.c"
 }
 $22 = $4; //@line 79 "../../iup_scrollbox.c"
 $23 = (_iupAttribGetInt($22,15505)|0); //@line 79 "../../iup_scrollbox.c"
 $8 = $23; //@line 79 "../../iup_scrollbox.c"
 $24 = $4; //@line 80 "../../iup_scrollbox.c"
 $25 = (_iupAttribGetInt($24,15518)|0); //@line 80 "../../iup_scrollbox.c"
 $9 = $25; //@line 80 "../../iup_scrollbox.c"
 $26 = $5; //@line 81 "../../iup_scrollbox.c"
 $27 = $8; //@line 81 "../../iup_scrollbox.c"
 $28 = (($26) - ($27))|0; //@line 81 "../../iup_scrollbox.c"
 $10 = $28; //@line 81 "../../iup_scrollbox.c"
 $29 = $6; //@line 82 "../../iup_scrollbox.c"
 $30 = $9; //@line 82 "../../iup_scrollbox.c"
 $31 = (($29) - ($30))|0; //@line 82 "../../iup_scrollbox.c"
 $11 = $31; //@line 82 "../../iup_scrollbox.c"
 $32 = $4; //@line 83 "../../iup_scrollbox.c"
 $33 = (_iupAttribGetInt($32,15531)|0); //@line 83 "../../iup_scrollbox.c"
 $12 = $33; //@line 83 "../../iup_scrollbox.c"
 $34 = $4; //@line 84 "../../iup_scrollbox.c"
 $35 = (_iupAttribGetInt($34,15547)|0); //@line 84 "../../iup_scrollbox.c"
 $13 = $35; //@line 84 "../../iup_scrollbox.c"
 $36 = $4; //@line 85 "../../iup_scrollbox.c"
 $37 = $12; //@line 85 "../../iup_scrollbox.c"
 $38 = $10; //@line 85 "../../iup_scrollbox.c"
 $39 = (($37) - ($38))|0; //@line 85 "../../iup_scrollbox.c"
 _IupSetInt($36,15456,$39); //@line 85 "../../iup_scrollbox.c"
 $40 = $4; //@line 86 "../../iup_scrollbox.c"
 $41 = $13; //@line 86 "../../iup_scrollbox.c"
 $42 = $11; //@line 86 "../../iup_scrollbox.c"
 $43 = (($41) - ($42))|0; //@line 86 "../../iup_scrollbox.c"
 _IupSetInt($40,15461,$43); //@line 86 "../../iup_scrollbox.c"
 $44 = $4; //@line 87 "../../iup_scrollbox.c"
 $45 = $4; //@line 87 "../../iup_scrollbox.c"
 $46 = (+_IupGetFloat($45,15456)); //@line 87 "../../iup_scrollbox.c"
 $47 = $4; //@line 87 "../../iup_scrollbox.c"
 $48 = (+_IupGetFloat($47,15461)); //@line 87 "../../iup_scrollbox.c"
 (_iScrollBoxScroll_CB($44,0,$46,$48)|0); //@line 87 "../../iup_scrollbox.c"
 STACKTOP = sp;return -2; //@line 89 "../../iup_scrollbox.c"
}
function _IupUnmap($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 27 "../../iup_show.c"
 $5 = (_iupObjectCheck($4)|0); //@line 27 "../../iup_show.c"
 $6 = ($5|0)!=(0); //@line 27 "../../iup_show.c"
 if (!($6)) {
  STACKTOP = sp;return; //@line 54 "../../iup_show.c"
 }
 $7 = $1; //@line 31 "../../iup_show.c"
 $8 = ((($7)) + 16|0); //@line 31 "../../iup_show.c"
 $9 = HEAP32[$8>>2]|0; //@line 31 "../../iup_show.c"
 $10 = ($9|0)!=(0|0); //@line 31 "../../iup_show.c"
 if (!($10)) {
  STACKTOP = sp;return; //@line 54 "../../iup_show.c"
 }
 $11 = $1; //@line 36 "../../iup_show.c"
 $12 = ((($11)) + 64|0); //@line 36 "../../iup_show.c"
 $13 = HEAP32[$12>>2]|0; //@line 36 "../../iup_show.c"
 $2 = $13; //@line 36 "../../iup_show.c"
 while(1) {
  $14 = $2; //@line 37 "../../iup_show.c"
  $15 = ($14|0)!=(0|0); //@line 37 "../../iup_show.c"
  if (!($15)) {
   break;
  }
  $16 = $2; //@line 39 "../../iup_show.c"
  _IupUnmap($16); //@line 39 "../../iup_show.c"
  $17 = $2; //@line 40 "../../iup_show.c"
  $18 = ((($17)) + 68|0); //@line 40 "../../iup_show.c"
  $19 = HEAP32[$18>>2]|0; //@line 40 "../../iup_show.c"
  $2 = $19; //@line 40 "../../iup_show.c"
 }
 $20 = $1; //@line 45 "../../iup_show.c"
 $21 = ((($20)) + 4|0); //@line 45 "../../iup_show.c"
 $22 = HEAP32[$21>>2]|0; //@line 45 "../../iup_show.c"
 $23 = ((($22)) + 8|0); //@line 45 "../../iup_show.c"
 $24 = HEAP32[$23>>2]|0; //@line 45 "../../iup_show.c"
 $25 = ($24|0)!=(0); //@line 45 "../../iup_show.c"
 if ($25) {
  $26 = $1; //@line 47 "../../iup_show.c"
  $27 = (_IupGetCallback($26,15563)|0); //@line 47 "../../iup_show.c"
  $3 = $27; //@line 47 "../../iup_show.c"
  $28 = $3; //@line 48 "../../iup_show.c"
  $29 = ($28|0)!=(0|0); //@line 48 "../../iup_show.c"
  if ($29) {
   $30 = $3; //@line 48 "../../iup_show.c"
   $31 = $1; //@line 48 "../../iup_show.c"
   (FUNCTION_TABLE_ii[$30 & 1023]($31)|0); //@line 48 "../../iup_show.c"
  }
 }
 $32 = $1; //@line 52 "../../iup_show.c"
 _iupClassObjectUnMap($32); //@line 52 "../../iup_show.c"
 $33 = $1; //@line 53 "../../iup_show.c"
 $34 = ((($33)) + 16|0); //@line 53 "../../iup_show.c"
 HEAP32[$34>>2] = 0; //@line 53 "../../iup_show.c"
 STACKTOP = sp;return; //@line 54 "../../iup_show.c"
}
function _IupMap($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 59 "../../iup_show.c"
 $6 = (_iupObjectCheck($5)|0); //@line 59 "../../iup_show.c"
 $7 = ($6|0)!=(0); //@line 59 "../../iup_show.c"
 if (!($7)) {
  $1 = -1; //@line 60 "../../iup_show.c"
  $90 = $1; //@line 139 "../../iup_show.c"
  STACKTOP = sp;return ($90|0); //@line 139 "../../iup_show.c"
 }
 $8 = $2; //@line 63 "../../iup_show.c"
 $9 = ((($8)) + 16|0); //@line 63 "../../iup_show.c"
 $10 = HEAP32[$9>>2]|0; //@line 63 "../../iup_show.c"
 $11 = ($10|0)!=(0|0); //@line 63 "../../iup_show.c"
 $12 = $2; //@line 68 "../../iup_show.c"
 if ($11) {
  $13 = ((($12)) + 4|0); //@line 68 "../../iup_show.c"
  $14 = HEAP32[$13>>2]|0; //@line 68 "../../iup_show.c"
  $15 = ((($14)) + 8|0); //@line 68 "../../iup_show.c"
  $16 = HEAP32[$15>>2]|0; //@line 68 "../../iup_show.c"
  $17 = ($16|0)==(3); //@line 68 "../../iup_show.c"
  if ($17) {
   $18 = $2; //@line 71 "../../iup_show.c"
   _iupLayoutCompute($18); //@line 71 "../../iup_show.c"
   $19 = $2; //@line 73 "../../iup_show.c"
   _iupLayoutUpdate($19); //@line 73 "../../iup_show.c"
  }
  $1 = 0; //@line 77 "../../iup_show.c"
  $90 = $1; //@line 139 "../../iup_show.c"
  STACKTOP = sp;return ($90|0); //@line 139 "../../iup_show.c"
 }
 $20 = ((($12)) + 60|0); //@line 81 "../../iup_show.c"
 $21 = HEAP32[$20>>2]|0; //@line 81 "../../iup_show.c"
 $22 = ($21|0)!=(0|0); //@line 81 "../../iup_show.c"
 if ($22) {
  $23 = $2; //@line 81 "../../iup_show.c"
  $24 = ((($23)) + 60|0); //@line 81 "../../iup_show.c"
  $25 = HEAP32[$24>>2]|0; //@line 81 "../../iup_show.c"
  $26 = ((($25)) + 16|0); //@line 81 "../../iup_show.c"
  $27 = HEAP32[$26>>2]|0; //@line 81 "../../iup_show.c"
  $28 = ($27|0)!=(0|0); //@line 81 "../../iup_show.c"
  if (!($28)) {
   $1 = 1; //@line 82 "../../iup_show.c"
   $90 = $1; //@line 139 "../../iup_show.c"
   STACKTOP = sp;return ($90|0); //@line 139 "../../iup_show.c"
  }
 }
 $29 = $2; //@line 85 "../../iup_show.c"
 $30 = (_iupClassObjectMap($29)|0); //@line 85 "../../iup_show.c"
 $31 = ($30|0)==(1); //@line 85 "../../iup_show.c"
 if ($31) {
  $1 = 1; //@line 88 "../../iup_show.c"
  $90 = $1; //@line 139 "../../iup_show.c"
  STACKTOP = sp;return ($90|0); //@line 139 "../../iup_show.c"
 }
 $32 = $2; //@line 92 "../../iup_show.c"
 $33 = ((($32)) + 4|0); //@line 92 "../../iup_show.c"
 $34 = HEAP32[$33>>2]|0; //@line 92 "../../iup_show.c"
 $35 = ((($34)) + 8|0); //@line 92 "../../iup_show.c"
 $36 = HEAP32[$35>>2]|0; //@line 92 "../../iup_show.c"
 $37 = ($36|0)!=(0); //@line 92 "../../iup_show.c"
 if ($37) {
  $38 = $2; //@line 93 "../../iup_show.c"
  $39 = ((($38)) + 4|0); //@line 93 "../../iup_show.c"
  $40 = HEAP32[$39>>2]|0; //@line 93 "../../iup_show.c"
  $41 = ((($40)) + 8|0); //@line 93 "../../iup_show.c"
  $42 = HEAP32[$41>>2]|0; //@line 93 "../../iup_show.c"
  $43 = ($42|0)!=(4); //@line 93 "../../iup_show.c"
  if ($43) {
   $44 = $2; //@line 94 "../../iup_show.c"
   $45 = ((($44)) + 4|0); //@line 94 "../../iup_show.c"
   $46 = HEAP32[$45>>2]|0; //@line 94 "../../iup_show.c"
   $47 = ((($46)) + 8|0); //@line 94 "../../iup_show.c"
   $48 = HEAP32[$47>>2]|0; //@line 94 "../../iup_show.c"
   $49 = ($48|0)!=(5); //@line 94 "../../iup_show.c"
   if ($49) {
    $50 = $2; //@line 95 "../../iup_show.c"
    _iupUpdateStandardFontAttrib($50); //@line 95 "../../iup_show.c"
   }
  }
 }
 $51 = $2; //@line 98 "../../iup_show.c"
 _iupClassObjectEnsureDefaultAttributes($51); //@line 98 "../../iup_show.c"
 $52 = $2; //@line 101 "../../iup_show.c"
 _iupAttribUpdate($52); //@line 101 "../../iup_show.c"
 $53 = $2; //@line 104 "../../iup_show.c"
 _iupAttribUpdateFromParent($53); //@line 104 "../../iup_show.c"
 $54 = $2; //@line 107 "../../iup_show.c"
 $55 = ((($54)) + 64|0); //@line 107 "../../iup_show.c"
 $56 = HEAP32[$55>>2]|0; //@line 107 "../../iup_show.c"
 $57 = ($56|0)!=(0|0); //@line 107 "../../iup_show.c"
 do {
  if ($57) {
   $58 = $2; //@line 109 "../../iup_show.c"
   $59 = ((($58)) + 64|0); //@line 109 "../../iup_show.c"
   $60 = HEAP32[$59>>2]|0; //@line 109 "../../iup_show.c"
   $3 = $60; //@line 109 "../../iup_show.c"
   while(1) {
    $61 = $3; //@line 110 "../../iup_show.c"
    $62 = ($61|0)!=(0|0); //@line 110 "../../iup_show.c"
    if (!($62)) {
     label = 22;
     break;
    }
    $63 = $3; //@line 112 "../../iup_show.c"
    $64 = (_IupMap($63)|0); //@line 112 "../../iup_show.c"
    $65 = ($64|0)==(1); //@line 112 "../../iup_show.c"
    if ($65) {
     break;
    }
    $66 = $3; //@line 115 "../../iup_show.c"
    $67 = ((($66)) + 68|0); //@line 115 "../../iup_show.c"
    $68 = HEAP32[$67>>2]|0; //@line 115 "../../iup_show.c"
    $3 = $68; //@line 115 "../../iup_show.c"
   }
   if ((label|0) == 22) {
    $69 = $2; //@line 119 "../../iup_show.c"
    _iupAttribUpdateChildren($69); //@line 119 "../../iup_show.c"
    break;
   }
   $1 = 1; //@line 113 "../../iup_show.c"
   $90 = $1; //@line 139 "../../iup_show.c"
   STACKTOP = sp;return ($90|0); //@line 139 "../../iup_show.c"
  }
 } while(0);
 $70 = $2; //@line 123 "../../iup_show.c"
 $71 = ((($70)) + 4|0); //@line 123 "../../iup_show.c"
 $72 = HEAP32[$71>>2]|0; //@line 123 "../../iup_show.c"
 $73 = ((($72)) + 8|0); //@line 123 "../../iup_show.c"
 $74 = HEAP32[$73>>2]|0; //@line 123 "../../iup_show.c"
 $75 = ($74|0)==(3); //@line 123 "../../iup_show.c"
 if ($75) {
  $76 = $2; //@line 126 "../../iup_show.c"
  _iupLayoutCompute($76); //@line 126 "../../iup_show.c"
  $77 = $2; //@line 128 "../../iup_show.c"
  _iupLayoutUpdate($77); //@line 128 "../../iup_show.c"
 }
 $78 = $2; //@line 132 "../../iup_show.c"
 $79 = ((($78)) + 4|0); //@line 132 "../../iup_show.c"
 $80 = HEAP32[$79>>2]|0; //@line 132 "../../iup_show.c"
 $81 = ((($80)) + 8|0); //@line 132 "../../iup_show.c"
 $82 = HEAP32[$81>>2]|0; //@line 132 "../../iup_show.c"
 $83 = ($82|0)!=(0); //@line 132 "../../iup_show.c"
 if ($83) {
  $84 = $2; //@line 134 "../../iup_show.c"
  $85 = (_IupGetCallback($84,15572)|0); //@line 134 "../../iup_show.c"
  $4 = $85; //@line 134 "../../iup_show.c"
  $86 = $4; //@line 135 "../../iup_show.c"
  $87 = ($86|0)!=(0|0); //@line 135 "../../iup_show.c"
  if ($87) {
   $88 = $4; //@line 135 "../../iup_show.c"
   $89 = $2; //@line 135 "../../iup_show.c"
   (FUNCTION_TABLE_ii[$88 & 1023]($89)|0); //@line 135 "../../iup_show.c"
  }
 }
 $1 = 0; //@line 138 "../../iup_show.c"
 $90 = $1; //@line 139 "../../iup_show.c"
 STACKTOP = sp;return ($90|0); //@line 139 "../../iup_show.c"
}
function _IupPopup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4; //@line 146 "../../iup_show.c"
 $9 = (_iupObjectCheck($8)|0); //@line 146 "../../iup_show.c"
 $10 = ($9|0)!=(0); //@line 146 "../../iup_show.c"
 if (!($10)) {
  $3 = -1; //@line 147 "../../iup_show.c"
  $42 = $3; //@line 172 "../../iup_show.c"
  STACKTOP = sp;return ($42|0); //@line 172 "../../iup_show.c"
 }
 $11 = $4; //@line 149 "../../iup_show.c"
 $12 = ((($11)) + 4|0); //@line 149 "../../iup_show.c"
 $13 = HEAP32[$12>>2]|0; //@line 149 "../../iup_show.c"
 $14 = ((($13)) + 8|0); //@line 149 "../../iup_show.c"
 $15 = HEAP32[$14>>2]|0; //@line 149 "../../iup_show.c"
 $16 = ($15|0)!=(3); //@line 149 "../../iup_show.c"
 if ($16) {
  $17 = $4; //@line 150 "../../iup_show.c"
  $18 = ((($17)) + 4|0); //@line 150 "../../iup_show.c"
  $19 = HEAP32[$18>>2]|0; //@line 150 "../../iup_show.c"
  $20 = ((($19)) + 8|0); //@line 150 "../../iup_show.c"
  $21 = HEAP32[$20>>2]|0; //@line 150 "../../iup_show.c"
  $22 = ($21|0)!=(5); //@line 150 "../../iup_show.c"
  if ($22) {
   $3 = -1; //@line 153 "../../iup_show.c"
   $42 = $3; //@line 172 "../../iup_show.c"
   STACKTOP = sp;return ($42|0); //@line 172 "../../iup_show.c"
  }
 }
 $23 = $4; //@line 156 "../../iup_show.c"
 $24 = (_IupMap($23)|0); //@line 156 "../../iup_show.c"
 $7 = $24; //@line 156 "../../iup_show.c"
 $25 = $7; //@line 157 "../../iup_show.c"
 $26 = ($25|0)==(1); //@line 157 "../../iup_show.c"
 if ($26) {
  $27 = $7; //@line 158 "../../iup_show.c"
  $3 = $27; //@line 158 "../../iup_show.c"
  $42 = $3; //@line 172 "../../iup_show.c"
  STACKTOP = sp;return ($42|0); //@line 172 "../../iup_show.c"
 }
 $28 = $4; //@line 160 "../../iup_show.c"
 $29 = ((($28)) + 4|0); //@line 160 "../../iup_show.c"
 $30 = HEAP32[$29>>2]|0; //@line 160 "../../iup_show.c"
 $31 = ((($30)) + 8|0); //@line 160 "../../iup_show.c"
 $32 = HEAP32[$31>>2]|0; //@line 160 "../../iup_show.c"
 $33 = ($32|0)==(3); //@line 160 "../../iup_show.c"
 $34 = $4; //@line 161 "../../iup_show.c"
 $35 = $5; //@line 161 "../../iup_show.c"
 $36 = $6; //@line 161 "../../iup_show.c"
 if ($33) {
  $37 = (_iupDialogPopup($34,$35,$36)|0); //@line 161 "../../iup_show.c"
  $7 = $37; //@line 161 "../../iup_show.c"
 } else {
  $38 = (_iupMenuPopup($34,$35,$36)|0); //@line 163 "../../iup_show.c"
  $7 = $38; //@line 163 "../../iup_show.c"
 }
 $39 = $7; //@line 165 "../../iup_show.c"
 $40 = ($39|0)!=(0); //@line 165 "../../iup_show.c"
 if ($40) {
  $41 = $7; //@line 168 "../../iup_show.c"
  $3 = $41; //@line 168 "../../iup_show.c"
  $42 = $3; //@line 172 "../../iup_show.c"
  STACKTOP = sp;return ($42|0); //@line 172 "../../iup_show.c"
 } else {
  $3 = 0; //@line 171 "../../iup_show.c"
  $42 = $3; //@line 172 "../../iup_show.c"
  STACKTOP = sp;return ($42|0); //@line 172 "../../iup_show.c"
 }
 return (0)|0;
}
function _IupShowXY($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $8 = $4; //@line 179 "../../iup_show.c"
 $9 = (_iupObjectCheck($8)|0); //@line 179 "../../iup_show.c"
 $10 = ($9|0)!=(0); //@line 179 "../../iup_show.c"
 do {
  if ($10) {
   $11 = $4; //@line 182 "../../iup_show.c"
   $12 = ((($11)) + 4|0); //@line 182 "../../iup_show.c"
   $13 = HEAP32[$12>>2]|0; //@line 182 "../../iup_show.c"
   $14 = ((($13)) + 8|0); //@line 182 "../../iup_show.c"
   $15 = HEAP32[$14>>2]|0; //@line 182 "../../iup_show.c"
   $16 = ($15|0)!=(3); //@line 182 "../../iup_show.c"
   if ($16) {
    $3 = -1; //@line 185 "../../iup_show.c"
    break;
   }
   $17 = $4; //@line 188 "../../iup_show.c"
   $18 = (_IupMap($17)|0); //@line 188 "../../iup_show.c"
   $7 = $18; //@line 188 "../../iup_show.c"
   $19 = $7; //@line 189 "../../iup_show.c"
   $20 = ($19|0)==(1); //@line 189 "../../iup_show.c"
   if ($20) {
    $21 = $7; //@line 190 "../../iup_show.c"
    $3 = $21; //@line 190 "../../iup_show.c"
    break;
   }
   $22 = $4; //@line 192 "../../iup_show.c"
   $23 = $5; //@line 192 "../../iup_show.c"
   $24 = $6; //@line 192 "../../iup_show.c"
   $25 = (_iupDialogShowXY($22,$23,$24)|0); //@line 192 "../../iup_show.c"
   $7 = $25; //@line 192 "../../iup_show.c"
   $26 = $7; //@line 193 "../../iup_show.c"
   $27 = ($26|0)!=(0); //@line 193 "../../iup_show.c"
   if ($27) {
    $28 = $7; //@line 196 "../../iup_show.c"
    $3 = $28; //@line 196 "../../iup_show.c"
    break;
   } else {
    $3 = 0; //@line 199 "../../iup_show.c"
    break;
   }
  } else {
   $3 = -1; //@line 180 "../../iup_show.c"
  }
 } while(0);
 $29 = $3; //@line 200 "../../iup_show.c"
 STACKTOP = sp;return ($29|0); //@line 200 "../../iup_show.c"
}
function _IupShow($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 205 "../../iup_show.c"
 $5 = (_iupObjectCheck($4)|0); //@line 205 "../../iup_show.c"
 $6 = ($5|0)!=(0); //@line 205 "../../iup_show.c"
 do {
  if ($6) {
   $7 = $2; //@line 208 "../../iup_show.c"
   $8 = ((($7)) + 4|0); //@line 208 "../../iup_show.c"
   $9 = HEAP32[$8>>2]|0; //@line 208 "../../iup_show.c"
   $10 = ((($9)) + 8|0); //@line 208 "../../iup_show.c"
   $11 = HEAP32[$10>>2]|0; //@line 208 "../../iup_show.c"
   $12 = ($11|0)!=(3); //@line 208 "../../iup_show.c"
   $13 = $2; //@line 209 "../../iup_show.c"
   if ($12) {
    _IupSetAttribute($13,20132,20441); //@line 209 "../../iup_show.c"
   } else {
    $14 = (_IupMap($13)|0); //@line 212 "../../iup_show.c"
    $3 = $14; //@line 212 "../../iup_show.c"
    $15 = $3; //@line 213 "../../iup_show.c"
    $16 = ($15|0)==(1); //@line 213 "../../iup_show.c"
    if ($16) {
     $17 = $3; //@line 214 "../../iup_show.c"
     $1 = $17; //@line 214 "../../iup_show.c"
     break;
    }
    $18 = $2; //@line 216 "../../iup_show.c"
    $19 = (_iupDialogShowXY($18,65531,65531)|0); //@line 216 "../../iup_show.c"
    $3 = $19; //@line 216 "../../iup_show.c"
    $20 = $3; //@line 217 "../../iup_show.c"
    $21 = ($20|0)!=(0); //@line 217 "../../iup_show.c"
    if ($21) {
     $22 = $3; //@line 220 "../../iup_show.c"
     $1 = $22; //@line 220 "../../iup_show.c"
     break;
    }
   }
   $1 = 0; //@line 224 "../../iup_show.c"
  } else {
   $1 = -1; //@line 206 "../../iup_show.c"
  }
 } while(0);
 $23 = $1; //@line 225 "../../iup_show.c"
 STACKTOP = sp;return ($23|0); //@line 225 "../../iup_show.c"
}
function _IupHide($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 230 "../../iup_show.c"
 $4 = (_iupObjectCheck($3)|0); //@line 230 "../../iup_show.c"
 $5 = ($4|0)!=(0); //@line 230 "../../iup_show.c"
 if (!($5)) {
  $1 = -1; //@line 231 "../../iup_show.c"
  $17 = $1; //@line 239 "../../iup_show.c"
  STACKTOP = sp;return ($17|0); //@line 239 "../../iup_show.c"
 }
 $6 = $2; //@line 233 "../../iup_show.c"
 $7 = ((($6)) + 4|0); //@line 233 "../../iup_show.c"
 $8 = HEAP32[$7>>2]|0; //@line 233 "../../iup_show.c"
 $9 = ((($8)) + 8|0); //@line 233 "../../iup_show.c"
 $10 = HEAP32[$9>>2]|0; //@line 233 "../../iup_show.c"
 $11 = ($10|0)!=(3); //@line 233 "../../iup_show.c"
 $12 = $2; //@line 234 "../../iup_show.c"
 if ($11) {
  _IupSetAttribute($12,20132,20140); //@line 234 "../../iup_show.c"
 } else {
  $13 = ((($12)) + 16|0); //@line 235 "../../iup_show.c"
  $14 = HEAP32[$13>>2]|0; //@line 235 "../../iup_show.c"
  $15 = ($14|0)!=(0|0); //@line 235 "../../iup_show.c"
  if ($15) {
   $16 = $2; //@line 236 "../../iup_show.c"
   _iupDialogHide($16); //@line 236 "../../iup_show.c"
  }
 }
 $1 = 0; //@line 238 "../../iup_show.c"
 $17 = $1; //@line 239 "../../iup_show.c"
 STACKTOP = sp;return ($17|0); //@line 239 "../../iup_show.c"
}
function _iupSpinNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = (_iupRegisterFindClass(19998)|0); //@line 216 "../../iup_spin.c"
 $3 = (_iupClassNew($2)|0); //@line 216 "../../iup_spin.c"
 $0 = $3; //@line 216 "../../iup_spin.c"
 $4 = $0; //@line 218 "../../iup_spin.c"
 HEAP32[$4>>2] = 15579; //@line 218 "../../iup_spin.c"
 $5 = $0; //@line 219 "../../iup_spin.c"
 $6 = ((($5)) + 4|0); //@line 219 "../../iup_spin.c"
 HEAP32[$6>>2] = 0; //@line 219 "../../iup_spin.c"
 $7 = $0; //@line 220 "../../iup_spin.c"
 $8 = ((($7)) + 8|0); //@line 220 "../../iup_spin.c"
 HEAP32[$8>>2] = 0; //@line 220 "../../iup_spin.c"
 $9 = $0; //@line 221 "../../iup_spin.c"
 $10 = ((($9)) + 12|0); //@line 221 "../../iup_spin.c"
 HEAP32[$10>>2] = 0; //@line 221 "../../iup_spin.c"
 $11 = $0; //@line 222 "../../iup_spin.c"
 $12 = ((($11)) + 16|0); //@line 222 "../../iup_spin.c"
 HEAP32[$12>>2] = 0; //@line 222 "../../iup_spin.c"
 $13 = $0; //@line 225 "../../iup_spin.c"
 $14 = ((($13)) + 32|0); //@line 225 "../../iup_spin.c"
 HEAP32[$14>>2] = 410; //@line 225 "../../iup_spin.c"
 $15 = $0; //@line 226 "../../iup_spin.c"
 $16 = ((($15)) + 40|0); //@line 226 "../../iup_spin.c"
 HEAP32[$16>>2] = 411; //@line 226 "../../iup_spin.c"
 $17 = $0; //@line 228 "../../iup_spin.c"
 _iupClassRegisterCallback($17,17500,17949); //@line 228 "../../iup_spin.c"
 $18 = (_IupGetHandle(15584)|0); //@line 230 "../../iup_spin.c"
 $19 = ($18|0)!=(0|0); //@line 230 "../../iup_spin.c"
 if ($19) {
  $20 = (_IupGetHandle(15599)|0); //@line 230 "../../iup_spin.c"
  $21 = ($20|0)!=(0|0); //@line 230 "../../iup_spin.c"
  if ($21) {
   $25 = $0; //@line 239 "../../iup_spin.c"
   STACKTOP = sp;return ($25|0); //@line 239 "../../iup_spin.c"
  }
 }
 $22 = (_IupTimer()|0); //@line 232 "../../iup_spin.c"
 $1 = $22; //@line 232 "../../iup_spin.c"
 $23 = $1; //@line 233 "../../iup_spin.c"
 (_IupSetCallback($23,17766,412)|0); //@line 233 "../../iup_spin.c"
 $24 = $1; //@line 234 "../../iup_spin.c"
 (_IupSetHandle(15616,$24)|0); //@line 234 "../../iup_spin.c"
 _iSpinLoadImages(); //@line 236 "../../iup_spin.c"
 $25 = $0; //@line 239 "../../iup_spin.c"
 STACKTOP = sp;return ($25|0); //@line 239 "../../iup_spin.c"
}
function _iSpinCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_IupButton(0,0)|0); //@line 140 "../../iup_spin.c"
 $4 = $6; //@line 140 "../../iup_spin.c"
 $7 = $4; //@line 142 "../../iup_spin.c"
 _IupSetAttribute($7,20073,20140); //@line 142 "../../iup_spin.c"
 $8 = $4; //@line 143 "../../iup_spin.c"
 _IupSetAttribute($8,20169,15584); //@line 143 "../../iup_spin.c"
 $9 = $4; //@line 144 "../../iup_spin.c"
 _IupSetAttribute($9,15769,19938); //@line 144 "../../iup_spin.c"
 $10 = $4; //@line 145 "../../iup_spin.c"
 _IupSetAttribute($10,15995,20140); //@line 145 "../../iup_spin.c"
 $11 = $4; //@line 147 "../../iup_spin.c"
 (_IupSetCallback($11,20522,413)|0); //@line 147 "../../iup_spin.c"
 $12 = $4; //@line 148 "../../iup_spin.c"
 (_IupSetCallback($12,15816,414)|0); //@line 148 "../../iup_spin.c"
 $13 = $4; //@line 149 "../../iup_spin.c"
 (_IupSetCallback($13,15821,415)|0); //@line 149 "../../iup_spin.c"
 $14 = $4; //@line 150 "../../iup_spin.c"
 (_IupSetCallback($14,15827,416)|0); //@line 150 "../../iup_spin.c"
 $15 = (_IupButton(0,0)|0); //@line 153 "../../iup_spin.c"
 $5 = $15; //@line 153 "../../iup_spin.c"
 $16 = $5; //@line 155 "../../iup_spin.c"
 _IupSetAttribute($16,20073,20140); //@line 155 "../../iup_spin.c"
 $17 = $5; //@line 156 "../../iup_spin.c"
 _IupSetAttribute($17,20169,15599); //@line 156 "../../iup_spin.c"
 $18 = $5; //@line 157 "../../iup_spin.c"
 _IupSetAttribute($18,15769,15833); //@line 157 "../../iup_spin.c"
 $19 = $5; //@line 158 "../../iup_spin.c"
 _IupSetAttribute($19,15995,20140); //@line 158 "../../iup_spin.c"
 $20 = $5; //@line 160 "../../iup_spin.c"
 (_IupSetCallback($20,20522,413)|0); //@line 160 "../../iup_spin.c"
 $21 = $5; //@line 161 "../../iup_spin.c"
 (_IupSetCallback($21,15816,414)|0); //@line 161 "../../iup_spin.c"
 $22 = $5; //@line 162 "../../iup_spin.c"
 (_IupSetCallback($22,15821,415)|0); //@line 162 "../../iup_spin.c"
 $23 = $5; //@line 163 "../../iup_spin.c"
 (_IupSetCallback($23,15827,416)|0); //@line 163 "../../iup_spin.c"
 $24 = $4; //@line 166 "../../iup_spin.c"
 $25 = $2; //@line 166 "../../iup_spin.c"
 $26 = ((($25)) + 64|0); //@line 166 "../../iup_spin.c"
 HEAP32[$26>>2] = $24; //@line 166 "../../iup_spin.c"
 $27 = $2; //@line 167 "../../iup_spin.c"
 $28 = $4; //@line 167 "../../iup_spin.c"
 $29 = ((($28)) + 60|0); //@line 167 "../../iup_spin.c"
 HEAP32[$29>>2] = $27; //@line 167 "../../iup_spin.c"
 $30 = $5; //@line 168 "../../iup_spin.c"
 $31 = $4; //@line 168 "../../iup_spin.c"
 $32 = ((($31)) + 68|0); //@line 168 "../../iup_spin.c"
 HEAP32[$32>>2] = $30; //@line 168 "../../iup_spin.c"
 $33 = $2; //@line 169 "../../iup_spin.c"
 $34 = $5; //@line 169 "../../iup_spin.c"
 $35 = ((($34)) + 60|0); //@line 169 "../../iup_spin.c"
 HEAP32[$35>>2] = $33; //@line 169 "../../iup_spin.c"
 $36 = $2; //@line 172 "../../iup_spin.c"
 _IupSetAttribute($36,20659,19944); //@line 172 "../../iup_spin.c"
 $37 = $2; //@line 173 "../../iup_spin.c"
 _IupSetAttribute($37,20666,15836); //@line 173 "../../iup_spin.c"
 STACKTOP = sp;return 0; //@line 175 "../../iup_spin.c"
}
function _iSpinTimerCB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $7 = $1; //@line 49 "../../iup_spin.c"
 $8 = (_iupAttribGet($7,15737)|0); //@line 49 "../../iup_spin.c"
 $2 = $8; //@line 49 "../../iup_spin.c"
 $9 = $1; //@line 50 "../../iup_spin.c"
 $10 = (_iupAttribGet($9,15753)|0); //@line 50 "../../iup_spin.c"
 $3 = $10; //@line 50 "../../iup_spin.c"
 $11 = $1; //@line 51 "../../iup_spin.c"
 $12 = (_iupAttribGetInt($11,15769)|0); //@line 51 "../../iup_spin.c"
 $4 = $12; //@line 51 "../../iup_spin.c"
 $13 = $1; //@line 52 "../../iup_spin.c"
 $14 = (_iupAttribGetInt($13,15782)|0); //@line 52 "../../iup_spin.c"
 $5 = $14; //@line 52 "../../iup_spin.c"
 $6 = 0; //@line 53 "../../iup_spin.c"
 $15 = $5; //@line 55 "../../iup_spin.c"
 $16 = ($15|0)==(0); //@line 55 "../../iup_spin.c"
 do {
  if ($16) {
   $6 = 15797; //@line 56 "../../iup_spin.c"
  } else {
   $17 = $5; //@line 57 "../../iup_spin.c"
   $18 = ($17|0)==(14); //@line 57 "../../iup_spin.c"
   if ($18) {
    $6 = 15800; //@line 58 "../../iup_spin.c"
    break;
   }
   $19 = $5; //@line 59 "../../iup_spin.c"
   $20 = ($19|0)==(34); //@line 59 "../../iup_spin.c"
   if ($20) {
    $6 = 20663; //@line 60 "../../iup_spin.c"
   }
  }
 } while(0);
 $21 = $6; //@line 62 "../../iup_spin.c"
 $22 = ($21|0)!=(0|0); //@line 62 "../../iup_spin.c"
 if ($22) {
  $23 = $1; //@line 64 "../../iup_spin.c"
  _IupSetAttribute($23,17780,20140); //@line 64 "../../iup_spin.c"
  $24 = $1; //@line 65 "../../iup_spin.c"
  $25 = $6; //@line 65 "../../iup_spin.c"
  _IupSetAttribute($24,17784,$25); //@line 65 "../../iup_spin.c"
  $26 = $1; //@line 66 "../../iup_spin.c"
  _IupSetAttribute($26,17780,20441); //@line 66 "../../iup_spin.c"
 }
 $27 = $1; //@line 69 "../../iup_spin.c"
 $28 = $5; //@line 69 "../../iup_spin.c"
 $29 = (($28) + 1)|0; //@line 69 "../../iup_spin.c"
 _iupAttribSetInt($27,15782,$29); //@line 69 "../../iup_spin.c"
 $30 = $2; //@line 71 "../../iup_spin.c"
 $31 = $3; //@line 71 "../../iup_spin.c"
 $32 = HEAP8[$31>>0]|0; //@line 71 "../../iup_spin.c"
 $33 = $32 << 24 >> 24; //@line 71 "../../iup_spin.c"
 $34 = ($33|0)==(83); //@line 71 "../../iup_spin.c"
 $35 = $34&1; //@line 71 "../../iup_spin.c"
 $36 = $3; //@line 71 "../../iup_spin.c"
 $37 = ((($36)) + 1|0); //@line 71 "../../iup_spin.c"
 $38 = HEAP8[$37>>0]|0; //@line 71 "../../iup_spin.c"
 $39 = $38 << 24 >> 24; //@line 71 "../../iup_spin.c"
 $40 = ($39|0)==(67); //@line 71 "../../iup_spin.c"
 $41 = $40&1; //@line 71 "../../iup_spin.c"
 $42 = $4; //@line 71 "../../iup_spin.c"
 $43 = (_iSpinCallCB($30,$35,$41,$42)|0); //@line 71 "../../iup_spin.c"
 STACKTOP = sp;return ($43|0); //@line 71 "../../iup_spin.c"
}
function _iSpinLoadImages() {
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $1 = sp + 58|0;
 $2 = sp + 4|0;
 dest=$1; src=15629; stop=dest+54|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 184 "../../iup_spin.c"
 dest=$2; src=15683; stop=dest+54|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 194 "../../iup_spin.c"
 $3 = (_IupImage(9,6,$1)|0); //@line 203 "../../iup_spin.c"
 $0 = $3; //@line 203 "../../iup_spin.c"
 $4 = $0; //@line 204 "../../iup_spin.c"
 _IupSetAttribute($4,19944,19637); //@line 204 "../../iup_spin.c"
 $5 = $0; //@line 205 "../../iup_spin.c"
 _IupSetAttribute($5,19938,20290); //@line 205 "../../iup_spin.c"
 $6 = $0; //@line 206 "../../iup_spin.c"
 (_IupSetHandle(15584,$6)|0); //@line 206 "../../iup_spin.c"
 $7 = (_IupImage(9,6,$2)|0); //@line 208 "../../iup_spin.c"
 $0 = $7; //@line 208 "../../iup_spin.c"
 $8 = $0; //@line 209 "../../iup_spin.c"
 _IupSetAttribute($8,19944,19637); //@line 209 "../../iup_spin.c"
 $9 = $0; //@line 210 "../../iup_spin.c"
 _IupSetAttribute($9,19938,20290); //@line 210 "../../iup_spin.c"
 $10 = $0; //@line 211 "../../iup_spin.c"
 (_IupSetHandle(15599,$10)|0); //@line 211 "../../iup_spin.c"
 STACKTOP = sp;return; //@line 212 "../../iup_spin.c"
}
function _iSpinCallCB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $11 = $5; //@line 30 "../../iup_spin.c"
 $12 = ((($11)) + 60|0); //@line 30 "../../iup_spin.c"
 $13 = HEAP32[$12>>2]|0; //@line 30 "../../iup_spin.c"
 $14 = (_iupAttribGet($13,15803)|0); //@line 30 "../../iup_spin.c"
 $10 = $14; //@line 30 "../../iup_spin.c"
 $15 = $10; //@line 31 "../../iup_spin.c"
 $16 = ($15|0)!=(0|0); //@line 31 "../../iup_spin.c"
 if ($16) {
  $17 = $10; //@line 32 "../../iup_spin.c"
  $5 = $17; //@line 32 "../../iup_spin.c"
 } else {
  $18 = $5; //@line 34 "../../iup_spin.c"
  $19 = ((($18)) + 60|0); //@line 34 "../../iup_spin.c"
  $20 = HEAP32[$19>>2]|0; //@line 34 "../../iup_spin.c"
  $5 = $20; //@line 34 "../../iup_spin.c"
 }
 $21 = $5; //@line 36 "../../iup_spin.c"
 $22 = (_IupGetCallback($21,17500)|0); //@line 36 "../../iup_spin.c"
 $9 = $22; //@line 36 "../../iup_spin.c"
 $23 = $9; //@line 37 "../../iup_spin.c"
 $24 = ($23|0)!=(0|0); //@line 37 "../../iup_spin.c"
 if (!($24)) {
  $4 = -2; //@line 44 "../../iup_spin.c"
  $40 = $4; //@line 45 "../../iup_spin.c"
  STACKTOP = sp;return ($40|0); //@line 45 "../../iup_spin.c"
 }
 $25 = $9; //@line 39 "../../iup_spin.c"
 $26 = $5; //@line 39 "../../iup_spin.c"
 $27 = $8; //@line 39 "../../iup_spin.c"
 $28 = $6; //@line 39 "../../iup_spin.c"
 $29 = ($28|0)!=(0); //@line 39 "../../iup_spin.c"
 $30 = $7; //@line 39 "../../iup_spin.c"
 $31 = ($30|0)!=(0); //@line 39 "../../iup_spin.c"
 $or$cond = $29 & $31; //@line 39 "../../iup_spin.c"
 if ($or$cond) {
  $38 = 100;
 } else {
  $32 = $7; //@line 40 "../../iup_spin.c"
  $33 = ($32|0)!=(0); //@line 40 "../../iup_spin.c"
  if ($33) {
   $38 = 10;
  } else {
   $34 = $6; //@line 41 "../../iup_spin.c"
   $35 = ($34|0)!=(0); //@line 41 "../../iup_spin.c"
   $36 = $35 ? 2 : 1; //@line 41 "../../iup_spin.c"
   $38 = $36;
  }
 }
 $37 = Math_imul($27, $38)|0; //@line 39 "../../iup_spin.c"
 $39 = (FUNCTION_TABLE_iii[$25 & 1023]($26,$37)|0); //@line 39 "../../iup_spin.c"
 $4 = $39; //@line 39 "../../iup_spin.c"
 $40 = $4; //@line 45 "../../iup_spin.c"
 STACKTOP = sp;return ($40|0); //@line 45 "../../iup_spin.c"
}
function _iSpinButtonCB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $14 = $9; //@line 119 "../../iup_spin.c"
 $15 = ($14|0)!=(0); //@line 119 "../../iup_spin.c"
 $16 = $8; //@line 119 "../../iup_spin.c"
 $17 = ($16|0)==(49); //@line 119 "../../iup_spin.c"
 $or$cond = $15 & $17; //@line 119 "../../iup_spin.c"
 if ($or$cond) {
  $18 = $12; //@line 119 "../../iup_spin.c"
  $19 = ((($18)) + 5|0); //@line 119 "../../iup_spin.c"
  $20 = HEAP8[$19>>0]|0; //@line 119 "../../iup_spin.c"
  $21 = $20 << 24 >> 24; //@line 119 "../../iup_spin.c"
  $22 = ($21|0)==(68); //@line 119 "../../iup_spin.c"
  if (!($22)) {
   $23 = $7; //@line 121 "../../iup_spin.c"
   $24 = (_iupAttribGetInt($23,15769)|0); //@line 121 "../../iup_spin.c"
   $13 = $24; //@line 121 "../../iup_spin.c"
   $25 = $7; //@line 123 "../../iup_spin.c"
   $26 = $12; //@line 123 "../../iup_spin.c"
   $27 = $7; //@line 123 "../../iup_spin.c"
   $28 = (_iupAttribGet($27,15769)|0); //@line 123 "../../iup_spin.c"
   _iSpinRunTimer($25,$26,$28); //@line 123 "../../iup_spin.c"
   $29 = $7; //@line 125 "../../iup_spin.c"
   $30 = $12; //@line 125 "../../iup_spin.c"
   $31 = HEAP8[$30>>0]|0; //@line 125 "../../iup_spin.c"
   $32 = $31 << 24 >> 24; //@line 125 "../../iup_spin.c"
   $33 = ($32|0)==(83); //@line 125 "../../iup_spin.c"
   $34 = $33&1; //@line 125 "../../iup_spin.c"
   $35 = $12; //@line 125 "../../iup_spin.c"
   $36 = ((($35)) + 1|0); //@line 125 "../../iup_spin.c"
   $37 = HEAP8[$36>>0]|0; //@line 125 "../../iup_spin.c"
   $38 = $37 << 24 >> 24; //@line 125 "../../iup_spin.c"
   $39 = ($38|0)==(67); //@line 125 "../../iup_spin.c"
   $40 = $39&1; //@line 125 "../../iup_spin.c"
   $41 = $13; //@line 125 "../../iup_spin.c"
   $42 = (_iSpinCallCB($29,$34,$40,$41)|0); //@line 125 "../../iup_spin.c"
   $6 = $42; //@line 125 "../../iup_spin.c"
   $47 = $6; //@line 131 "../../iup_spin.c"
   STACKTOP = sp;return ($47|0); //@line 131 "../../iup_spin.c"
  }
 }
 $43 = $9; //@line 127 "../../iup_spin.c"
 $44 = ($43|0)==(0); //@line 127 "../../iup_spin.c"
 $45 = $8; //@line 127 "../../iup_spin.c"
 $46 = ($45|0)==(49); //@line 127 "../../iup_spin.c"
 $or$cond3 = $44 & $46; //@line 127 "../../iup_spin.c"
 if ($or$cond3) {
  _iSpinStopTimer(); //@line 128 "../../iup_spin.c"
 }
 $6 = -2; //@line 130 "../../iup_spin.c"
 $47 = $6; //@line 131 "../../iup_spin.c"
 STACKTOP = sp;return ($47|0); //@line 131 "../../iup_spin.c"
}
function _iSpinK_SP($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 95 "../../iup_spin.c"
 $4 = (_iupAttribGetInt($3,15769)|0); //@line 95 "../../iup_spin.c"
 $2 = $4; //@line 95 "../../iup_spin.c"
 $5 = $1; //@line 97 "../../iup_spin.c"
 $6 = $2; //@line 97 "../../iup_spin.c"
 $7 = (_iSpinCallCB($5,0,0,$6)|0); //@line 97 "../../iup_spin.c"
 STACKTOP = sp;return ($7|0); //@line 97 "../../iup_spin.c"
}
function _iSpinK_sSP($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 102 "../../iup_spin.c"
 $4 = (_iupAttribGetInt($3,15769)|0); //@line 102 "../../iup_spin.c"
 $2 = $4; //@line 102 "../../iup_spin.c"
 $5 = $1; //@line 104 "../../iup_spin.c"
 $6 = $2; //@line 104 "../../iup_spin.c"
 $7 = (_iSpinCallCB($5,1,0,$6)|0); //@line 104 "../../iup_spin.c"
 STACKTOP = sp;return ($7|0); //@line 104 "../../iup_spin.c"
}
function _iSpinK_cSP($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 109 "../../iup_spin.c"
 $4 = (_iupAttribGetInt($3,15769)|0); //@line 109 "../../iup_spin.c"
 $2 = $4; //@line 109 "../../iup_spin.c"
 $5 = $1; //@line 111 "../../iup_spin.c"
 $6 = $2; //@line 111 "../../iup_spin.c"
 $7 = (_iSpinCallCB($5,0,1,$6)|0); //@line 111 "../../iup_spin.c"
 STACKTOP = sp;return ($7|0); //@line 111 "../../iup_spin.c"
}
function _iSpinRunTimer($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = (_IupGetHandle(15616)|0); //@line 76 "../../iup_spin.c"
 $6 = $7; //@line 76 "../../iup_spin.c"
 $8 = $6; //@line 78 "../../iup_spin.c"
 $9 = $3; //@line 78 "../../iup_spin.c"
 _iupAttribSet($8,15737,$9); //@line 78 "../../iup_spin.c"
 $10 = $6; //@line 79 "../../iup_spin.c"
 $11 = $4; //@line 79 "../../iup_spin.c"
 _iupAttribSetStr($10,15753,$11); //@line 79 "../../iup_spin.c"
 $12 = $6; //@line 80 "../../iup_spin.c"
 $13 = $5; //@line 80 "../../iup_spin.c"
 _iupAttribSetStr($12,15769,$13); //@line 80 "../../iup_spin.c"
 $14 = $6; //@line 81 "../../iup_spin.c"
 _iupAttribSet($14,15782,19944); //@line 81 "../../iup_spin.c"
 $15 = $6; //@line 83 "../../iup_spin.c"
 _IupSetAttribute($15,17784,15840); //@line 83 "../../iup_spin.c"
 $16 = $6; //@line 84 "../../iup_spin.c"
 _IupSetAttribute($16,17780,20441); //@line 84 "../../iup_spin.c"
 STACKTOP = sp;return; //@line 85 "../../iup_spin.c"
}
function _iSpinStopTimer() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_IupGetHandle(15616)|0); //@line 89 "../../iup_spin.c"
 $0 = $1; //@line 89 "../../iup_spin.c"
 $2 = $0; //@line 90 "../../iup_spin.c"
 _IupSetAttribute($2,17780,20140); //@line 90 "../../iup_spin.c"
 STACKTOP = sp;return; //@line 91 "../../iup_spin.c"
}
function _IupSpin() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_IupCreate(15579)|0); //@line 244 "../../iup_spin.c"
 return ($0|0); //@line 244 "../../iup_spin.c"
}
function _iupSpinboxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 350 "../../iup_spin.c"
 $0 = $1; //@line 350 "../../iup_spin.c"
 $2 = $0; //@line 352 "../../iup_spin.c"
 HEAP32[$2>>2] = 15844; //@line 352 "../../iup_spin.c"
 $3 = $0; //@line 353 "../../iup_spin.c"
 $4 = ((($3)) + 4|0); //@line 353 "../../iup_spin.c"
 HEAP32[$4>>2] = 15852; //@line 353 "../../iup_spin.c"
 $5 = $0; //@line 354 "../../iup_spin.c"
 $6 = ((($5)) + 8|0); //@line 354 "../../iup_spin.c"
 HEAP32[$6>>2] = 0; //@line 354 "../../iup_spin.c"
 $7 = $0; //@line 355 "../../iup_spin.c"
 $8 = ((($7)) + 12|0); //@line 355 "../../iup_spin.c"
 HEAP32[$8>>2] = 3; //@line 355 "../../iup_spin.c"
 $9 = $0; //@line 356 "../../iup_spin.c"
 $10 = ((($9)) + 16|0); //@line 356 "../../iup_spin.c"
 HEAP32[$10>>2] = 0; //@line 356 "../../iup_spin.c"
 $11 = $0; //@line 359 "../../iup_spin.c"
 $12 = ((($11)) + 32|0); //@line 359 "../../iup_spin.c"
 HEAP32[$12>>2] = 417; //@line 359 "../../iup_spin.c"
 $13 = $0; //@line 360 "../../iup_spin.c"
 $14 = ((($13)) + 40|0); //@line 360 "../../iup_spin.c"
 HEAP32[$14>>2] = 418; //@line 360 "../../iup_spin.c"
 $15 = $0; //@line 361 "../../iup_spin.c"
 $16 = ((($15)) + 76|0); //@line 361 "../../iup_spin.c"
 HEAP32[$16>>2] = 419; //@line 361 "../../iup_spin.c"
 $17 = $0; //@line 362 "../../iup_spin.c"
 $18 = ((($17)) + 80|0); //@line 362 "../../iup_spin.c"
 HEAP32[$18>>2] = 420; //@line 362 "../../iup_spin.c"
 $19 = $0; //@line 363 "../../iup_spin.c"
 $20 = ((($19)) + 84|0); //@line 363 "../../iup_spin.c"
 HEAP32[$20>>2] = 421; //@line 363 "../../iup_spin.c"
 $21 = $0; //@line 364 "../../iup_spin.c"
 $22 = ((($21)) + 44|0); //@line 364 "../../iup_spin.c"
 HEAP32[$22>>2] = 26; //@line 364 "../../iup_spin.c"
 $23 = $0; //@line 366 "../../iup_spin.c"
 _iupClassRegisterCallback($23,17500,17949); //@line 366 "../../iup_spin.c"
 $24 = $0; //@line 369 "../../iup_spin.c"
 _iupBaseRegisterCommonAttrib($24); //@line 369 "../../iup_spin.c"
 $25 = $0; //@line 372 "../../iup_spin.c"
 _iupClassRegisterAttribute($25,20080,422,0,0,0,41); //@line 372 "../../iup_spin.c"
 $26 = $0; //@line 373 "../../iup_spin.c"
 _iupClassRegisterAttribute($26,20091,28,0,0,0,41); //@line 373 "../../iup_spin.c"
 $27 = $0; //@line 374 "../../iup_spin.c"
 _iupClassRegisterAttribute($27,20073,20,0,(-1),20441,9); //@line 374 "../../iup_spin.c"
 $28 = $0; //@line 376 "../../iup_spin.c"
 STACKTOP = sp;return ($28|0); //@line 376 "../../iup_spin.c"
}
function _iSpinboxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_IupSpin()|0); //@line 331 "../../iup_spin.c"
 $4 = $6; //@line 331 "../../iup_spin.c"
 $7 = $4; //@line 332 "../../iup_spin.c"
 $8 = ((($7)) + 24|0); //@line 332 "../../iup_spin.c"
 $9 = HEAP32[$8>>2]|0; //@line 332 "../../iup_spin.c"
 $10 = $9 | 16; //@line 332 "../../iup_spin.c"
 HEAP32[$8>>2] = $10; //@line 332 "../../iup_spin.c"
 $11 = $2; //@line 333 "../../iup_spin.c"
 $12 = $4; //@line 333 "../../iup_spin.c"
 _iupChildTreeAppend($11,$12); //@line 333 "../../iup_spin.c"
 $13 = $4; //@line 335 "../../iup_spin.c"
 $14 = $2; //@line 335 "../../iup_spin.c"
 _iupAttribSet($13,15803,$14); //@line 335 "../../iup_spin.c"
 $15 = $3; //@line 337 "../../iup_spin.c"
 $16 = ($15|0)!=(0|0); //@line 337 "../../iup_spin.c"
 if (!($16)) {
  STACKTOP = sp;return 0; //@line 344 "../../iup_spin.c"
 }
 $17 = $3; //@line 339 "../../iup_spin.c"
 $5 = $17; //@line 339 "../../iup_spin.c"
 $18 = $5; //@line 340 "../../iup_spin.c"
 $19 = HEAP32[$18>>2]|0; //@line 340 "../../iup_spin.c"
 $20 = ($19|0)!=(0|0); //@line 340 "../../iup_spin.c"
 if (!($20)) {
  STACKTOP = sp;return 0; //@line 344 "../../iup_spin.c"
 }
 $21 = $2; //@line 341 "../../iup_spin.c"
 $22 = $5; //@line 341 "../../iup_spin.c"
 $23 = HEAP32[$22>>2]|0; //@line 341 "../../iup_spin.c"
 (_IupAppend($21,$23)|0); //@line 341 "../../iup_spin.c"
 STACKTOP = sp;return 0; //@line 344 "../../iup_spin.c"
}
function _iSpinboxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 264 "../../iup_spin.c"
 $9 = ((($8)) + 64|0); //@line 264 "../../iup_spin.c"
 $10 = HEAP32[$9>>2]|0; //@line 264 "../../iup_spin.c"
 _iupBaseComputeNaturalSize($10); //@line 264 "../../iup_spin.c"
 $11 = $4; //@line 266 "../../iup_spin.c"
 $12 = ((($11)) + 64|0); //@line 266 "../../iup_spin.c"
 $13 = HEAP32[$12>>2]|0; //@line 266 "../../iup_spin.c"
 $14 = ((($13)) + 68|0); //@line 266 "../../iup_spin.c"
 $15 = HEAP32[$14>>2]|0; //@line 266 "../../iup_spin.c"
 $16 = ($15|0)!=(0|0); //@line 266 "../../iup_spin.c"
 $17 = $4; //@line 269 "../../iup_spin.c"
 $18 = ((($17)) + 64|0); //@line 269 "../../iup_spin.c"
 $19 = HEAP32[$18>>2]|0; //@line 269 "../../iup_spin.c"
 if (!($16)) {
  $68 = ((($19)) + 44|0); //@line 278 "../../iup_spin.c"
  $69 = HEAP32[$68>>2]|0; //@line 278 "../../iup_spin.c"
  $70 = $5; //@line 278 "../../iup_spin.c"
  HEAP32[$70>>2] = $69; //@line 278 "../../iup_spin.c"
  $71 = $4; //@line 279 "../../iup_spin.c"
  $72 = ((($71)) + 64|0); //@line 279 "../../iup_spin.c"
  $73 = HEAP32[$72>>2]|0; //@line 279 "../../iup_spin.c"
  $74 = ((($73)) + 48|0); //@line 279 "../../iup_spin.c"
  $75 = HEAP32[$74>>2]|0; //@line 279 "../../iup_spin.c"
  $76 = $6; //@line 279 "../../iup_spin.c"
  HEAP32[$76>>2] = $75; //@line 279 "../../iup_spin.c"
  STACKTOP = sp;return; //@line 281 "../../iup_spin.c"
 }
 $20 = ((($19)) + 68|0); //@line 269 "../../iup_spin.c"
 $21 = HEAP32[$20>>2]|0; //@line 269 "../../iup_spin.c"
 _iupBaseComputeNaturalSize($21); //@line 269 "../../iup_spin.c"
 $22 = $4; //@line 271 "../../iup_spin.c"
 $23 = ((($22)) + 64|0); //@line 271 "../../iup_spin.c"
 $24 = HEAP32[$23>>2]|0; //@line 271 "../../iup_spin.c"
 $25 = ((($24)) + 68|0); //@line 271 "../../iup_spin.c"
 $26 = HEAP32[$25>>2]|0; //@line 271 "../../iup_spin.c"
 $27 = ((($26)) + 20|0); //@line 271 "../../iup_spin.c"
 $28 = HEAP32[$27>>2]|0; //@line 271 "../../iup_spin.c"
 $29 = $7; //@line 271 "../../iup_spin.c"
 HEAP32[$29>>2] = $28; //@line 271 "../../iup_spin.c"
 $30 = $4; //@line 273 "../../iup_spin.c"
 $31 = ((($30)) + 64|0); //@line 273 "../../iup_spin.c"
 $32 = HEAP32[$31>>2]|0; //@line 273 "../../iup_spin.c"
 $33 = ((($32)) + 68|0); //@line 273 "../../iup_spin.c"
 $34 = HEAP32[$33>>2]|0; //@line 273 "../../iup_spin.c"
 $35 = ((($34)) + 44|0); //@line 273 "../../iup_spin.c"
 $36 = HEAP32[$35>>2]|0; //@line 273 "../../iup_spin.c"
 $37 = $4; //@line 273 "../../iup_spin.c"
 $38 = ((($37)) + 64|0); //@line 273 "../../iup_spin.c"
 $39 = HEAP32[$38>>2]|0; //@line 273 "../../iup_spin.c"
 $40 = ((($39)) + 44|0); //@line 273 "../../iup_spin.c"
 $41 = HEAP32[$40>>2]|0; //@line 273 "../../iup_spin.c"
 $42 = (($36) + ($41))|0; //@line 273 "../../iup_spin.c"
 $43 = $5; //@line 273 "../../iup_spin.c"
 HEAP32[$43>>2] = $42; //@line 273 "../../iup_spin.c"
 $44 = $4; //@line 274 "../../iup_spin.c"
 $45 = ((($44)) + 64|0); //@line 274 "../../iup_spin.c"
 $46 = HEAP32[$45>>2]|0; //@line 274 "../../iup_spin.c"
 $47 = ((($46)) + 68|0); //@line 274 "../../iup_spin.c"
 $48 = HEAP32[$47>>2]|0; //@line 274 "../../iup_spin.c"
 $49 = ((($48)) + 48|0); //@line 274 "../../iup_spin.c"
 $50 = HEAP32[$49>>2]|0; //@line 274 "../../iup_spin.c"
 $51 = $4; //@line 274 "../../iup_spin.c"
 $52 = ((($51)) + 64|0); //@line 274 "../../iup_spin.c"
 $53 = HEAP32[$52>>2]|0; //@line 274 "../../iup_spin.c"
 $54 = ((($53)) + 48|0); //@line 274 "../../iup_spin.c"
 $55 = HEAP32[$54>>2]|0; //@line 274 "../../iup_spin.c"
 $56 = ($50|0)>($55|0); //@line 274 "../../iup_spin.c"
 $57 = $4; //@line 274 "../../iup_spin.c"
 $58 = ((($57)) + 64|0); //@line 274 "../../iup_spin.c"
 $59 = HEAP32[$58>>2]|0; //@line 274 "../../iup_spin.c"
 if ($56) {
  $60 = ((($59)) + 68|0); //@line 274 "../../iup_spin.c"
  $61 = HEAP32[$60>>2]|0; //@line 274 "../../iup_spin.c"
  $62 = ((($61)) + 48|0); //@line 274 "../../iup_spin.c"
  $63 = HEAP32[$62>>2]|0; //@line 274 "../../iup_spin.c"
  $67 = $63;
 } else {
  $64 = ((($59)) + 48|0); //@line 274 "../../iup_spin.c"
  $65 = HEAP32[$64>>2]|0; //@line 274 "../../iup_spin.c"
  $67 = $65;
 }
 $66 = $6; //@line 274 "../../iup_spin.c"
 HEAP32[$66>>2] = $67; //@line 274 "../../iup_spin.c"
 STACKTOP = sp;return; //@line 281 "../../iup_spin.c"
}
function _iSpinboxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 286 "../../iup_spin.c"
 $6 = ((($5)) + 64|0); //@line 286 "../../iup_spin.c"
 $7 = HEAP32[$6>>2]|0; //@line 286 "../../iup_spin.c"
 $8 = $2; //@line 286 "../../iup_spin.c"
 $9 = ((($8)) + 64|0); //@line 286 "../../iup_spin.c"
 $10 = HEAP32[$9>>2]|0; //@line 286 "../../iup_spin.c"
 $11 = ((($10)) + 44|0); //@line 286 "../../iup_spin.c"
 $12 = HEAP32[$11>>2]|0; //@line 286 "../../iup_spin.c"
 $13 = $2; //@line 286 "../../iup_spin.c"
 $14 = ((($13)) + 64|0); //@line 286 "../../iup_spin.c"
 $15 = HEAP32[$14>>2]|0; //@line 286 "../../iup_spin.c"
 $16 = ((($15)) + 48|0); //@line 286 "../../iup_spin.c"
 $17 = HEAP32[$16>>2]|0; //@line 286 "../../iup_spin.c"
 $18 = $3; //@line 286 "../../iup_spin.c"
 _iupBaseSetCurrentSize($7,$12,$17,$18); //@line 286 "../../iup_spin.c"
 $19 = $2; //@line 288 "../../iup_spin.c"
 $20 = ((($19)) + 64|0); //@line 288 "../../iup_spin.c"
 $21 = HEAP32[$20>>2]|0; //@line 288 "../../iup_spin.c"
 $22 = ((($21)) + 68|0); //@line 288 "../../iup_spin.c"
 $23 = HEAP32[$22>>2]|0; //@line 288 "../../iup_spin.c"
 $24 = ($23|0)!=(0|0); //@line 288 "../../iup_spin.c"
 if (!($24)) {
  STACKTOP = sp;return; //@line 295 "../../iup_spin.c"
 }
 $25 = $2; //@line 291 "../../iup_spin.c"
 $26 = ((($25)) + 52|0); //@line 291 "../../iup_spin.c"
 $27 = HEAP32[$26>>2]|0; //@line 291 "../../iup_spin.c"
 $28 = $2; //@line 291 "../../iup_spin.c"
 $29 = ((($28)) + 64|0); //@line 291 "../../iup_spin.c"
 $30 = HEAP32[$29>>2]|0; //@line 291 "../../iup_spin.c"
 $31 = ((($30)) + 44|0); //@line 291 "../../iup_spin.c"
 $32 = HEAP32[$31>>2]|0; //@line 291 "../../iup_spin.c"
 $33 = (($27) - ($32))|0; //@line 291 "../../iup_spin.c"
 $4 = $33; //@line 291 "../../iup_spin.c"
 $34 = $4; //@line 292 "../../iup_spin.c"
 $35 = ($34|0)<(0); //@line 292 "../../iup_spin.c"
 $$ = $35 ? 0 : $33; //@line 292 "../../iup_spin.c"
 $4 = $$; //@line 292 "../../iup_spin.c"
 $36 = $2; //@line 293 "../../iup_spin.c"
 $37 = ((($36)) + 64|0); //@line 293 "../../iup_spin.c"
 $38 = HEAP32[$37>>2]|0; //@line 293 "../../iup_spin.c"
 $39 = ((($38)) + 68|0); //@line 293 "../../iup_spin.c"
 $40 = HEAP32[$39>>2]|0; //@line 293 "../../iup_spin.c"
 $41 = $4; //@line 293 "../../iup_spin.c"
 $42 = $2; //@line 293 "../../iup_spin.c"
 $43 = ((($42)) + 56|0); //@line 293 "../../iup_spin.c"
 $44 = HEAP32[$43>>2]|0; //@line 293 "../../iup_spin.c"
 $45 = $3; //@line 293 "../../iup_spin.c"
 _iupBaseSetCurrentSize($40,$41,$44,$45); //@line 293 "../../iup_spin.c"
 STACKTOP = sp;return; //@line 295 "../../iup_spin.c"
}
function _iSpinboxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 299 "../../iup_spin.c"
 $7 = ((($6)) + 64|0); //@line 299 "../../iup_spin.c"
 $8 = HEAP32[$7>>2]|0; //@line 299 "../../iup_spin.c"
 $9 = ((($8)) + 68|0); //@line 299 "../../iup_spin.c"
 $10 = HEAP32[$9>>2]|0; //@line 299 "../../iup_spin.c"
 $11 = ($10|0)!=(0|0); //@line 299 "../../iup_spin.c"
 $12 = $3; //@line 301 "../../iup_spin.c"
 $13 = ((($12)) + 64|0); //@line 301 "../../iup_spin.c"
 $14 = HEAP32[$13>>2]|0; //@line 301 "../../iup_spin.c"
 if (!($11)) {
  $94 = $4; //@line 325 "../../iup_spin.c"
  $95 = $5; //@line 325 "../../iup_spin.c"
  _iupBaseSetPosition($14,$94,$95); //@line 325 "../../iup_spin.c"
  STACKTOP = sp;return; //@line 327 "../../iup_spin.c"
 }
 $15 = ((($14)) + 68|0); //@line 301 "../../iup_spin.c"
 $16 = HEAP32[$15>>2]|0; //@line 301 "../../iup_spin.c"
 $17 = ((($16)) + 56|0); //@line 301 "../../iup_spin.c"
 $18 = HEAP32[$17>>2]|0; //@line 301 "../../iup_spin.c"
 $19 = $3; //@line 301 "../../iup_spin.c"
 $20 = ((($19)) + 64|0); //@line 301 "../../iup_spin.c"
 $21 = HEAP32[$20>>2]|0; //@line 301 "../../iup_spin.c"
 $22 = ((($21)) + 56|0); //@line 301 "../../iup_spin.c"
 $23 = HEAP32[$22>>2]|0; //@line 301 "../../iup_spin.c"
 $24 = ($18|0)<($23|0); //@line 301 "../../iup_spin.c"
 $25 = $3; //@line 304 "../../iup_spin.c"
 $26 = ((($25)) + 64|0); //@line 304 "../../iup_spin.c"
 $27 = HEAP32[$26>>2]|0; //@line 304 "../../iup_spin.c"
 if ($24) {
  $28 = $4; //@line 304 "../../iup_spin.c"
  $29 = $3; //@line 304 "../../iup_spin.c"
  $30 = ((($29)) + 64|0); //@line 304 "../../iup_spin.c"
  $31 = HEAP32[$30>>2]|0; //@line 304 "../../iup_spin.c"
  $32 = ((($31)) + 68|0); //@line 304 "../../iup_spin.c"
  $33 = HEAP32[$32>>2]|0; //@line 304 "../../iup_spin.c"
  $34 = ((($33)) + 52|0); //@line 304 "../../iup_spin.c"
  $35 = HEAP32[$34>>2]|0; //@line 304 "../../iup_spin.c"
  $36 = (($28) + ($35))|0; //@line 304 "../../iup_spin.c"
  $37 = $5; //@line 304 "../../iup_spin.c"
  _iupBaseSetPosition($27,$36,$37); //@line 304 "../../iup_spin.c"
  $38 = $3; //@line 306 "../../iup_spin.c"
  $39 = ((($38)) + 64|0); //@line 306 "../../iup_spin.c"
  $40 = HEAP32[$39>>2]|0; //@line 306 "../../iup_spin.c"
  $41 = ((($40)) + 56|0); //@line 306 "../../iup_spin.c"
  $42 = HEAP32[$41>>2]|0; //@line 306 "../../iup_spin.c"
  $43 = $3; //@line 306 "../../iup_spin.c"
  $44 = ((($43)) + 64|0); //@line 306 "../../iup_spin.c"
  $45 = HEAP32[$44>>2]|0; //@line 306 "../../iup_spin.c"
  $46 = ((($45)) + 68|0); //@line 306 "../../iup_spin.c"
  $47 = HEAP32[$46>>2]|0; //@line 306 "../../iup_spin.c"
  $48 = ((($47)) + 56|0); //@line 306 "../../iup_spin.c"
  $49 = HEAP32[$48>>2]|0; //@line 306 "../../iup_spin.c"
  $50 = (($42) - ($49))|0; //@line 306 "../../iup_spin.c"
  $51 = (($50|0) / 2)&-1; //@line 306 "../../iup_spin.c"
  $52 = $5; //@line 306 "../../iup_spin.c"
  $53 = (($52) + ($51))|0; //@line 306 "../../iup_spin.c"
  $5 = $53; //@line 306 "../../iup_spin.c"
  $54 = $3; //@line 309 "../../iup_spin.c"
  $55 = ((($54)) + 64|0); //@line 309 "../../iup_spin.c"
  $56 = HEAP32[$55>>2]|0; //@line 309 "../../iup_spin.c"
  $57 = ((($56)) + 68|0); //@line 309 "../../iup_spin.c"
  $58 = HEAP32[$57>>2]|0; //@line 309 "../../iup_spin.c"
  $59 = $4; //@line 309 "../../iup_spin.c"
  $60 = $5; //@line 309 "../../iup_spin.c"
  _iupBaseSetPosition($58,$59,$60); //@line 309 "../../iup_spin.c"
  STACKTOP = sp;return; //@line 327 "../../iup_spin.c"
 } else {
  $61 = ((($27)) + 68|0); //@line 314 "../../iup_spin.c"
  $62 = HEAP32[$61>>2]|0; //@line 314 "../../iup_spin.c"
  $63 = $4; //@line 314 "../../iup_spin.c"
  $64 = $5; //@line 314 "../../iup_spin.c"
  _iupBaseSetPosition($62,$63,$64); //@line 314 "../../iup_spin.c"
  $65 = $3; //@line 316 "../../iup_spin.c"
  $66 = ((($65)) + 64|0); //@line 316 "../../iup_spin.c"
  $67 = HEAP32[$66>>2]|0; //@line 316 "../../iup_spin.c"
  $68 = ((($67)) + 68|0); //@line 316 "../../iup_spin.c"
  $69 = HEAP32[$68>>2]|0; //@line 316 "../../iup_spin.c"
  $70 = ((($69)) + 56|0); //@line 316 "../../iup_spin.c"
  $71 = HEAP32[$70>>2]|0; //@line 316 "../../iup_spin.c"
  $72 = $3; //@line 316 "../../iup_spin.c"
  $73 = ((($72)) + 64|0); //@line 316 "../../iup_spin.c"
  $74 = HEAP32[$73>>2]|0; //@line 316 "../../iup_spin.c"
  $75 = ((($74)) + 56|0); //@line 316 "../../iup_spin.c"
  $76 = HEAP32[$75>>2]|0; //@line 316 "../../iup_spin.c"
  $77 = (($71) - ($76))|0; //@line 316 "../../iup_spin.c"
  $78 = (($77|0) / 2)&-1; //@line 316 "../../iup_spin.c"
  $79 = $5; //@line 316 "../../iup_spin.c"
  $80 = (($79) + ($78))|0; //@line 316 "../../iup_spin.c"
  $5 = $80; //@line 316 "../../iup_spin.c"
  $81 = $3; //@line 319 "../../iup_spin.c"
  $82 = ((($81)) + 64|0); //@line 319 "../../iup_spin.c"
  $83 = HEAP32[$82>>2]|0; //@line 319 "../../iup_spin.c"
  $84 = $4; //@line 319 "../../iup_spin.c"
  $85 = $3; //@line 319 "../../iup_spin.c"
  $86 = ((($85)) + 64|0); //@line 319 "../../iup_spin.c"
  $87 = HEAP32[$86>>2]|0; //@line 319 "../../iup_spin.c"
  $88 = ((($87)) + 68|0); //@line 319 "../../iup_spin.c"
  $89 = HEAP32[$88>>2]|0; //@line 319 "../../iup_spin.c"
  $90 = ((($89)) + 52|0); //@line 319 "../../iup_spin.c"
  $91 = HEAP32[$90>>2]|0; //@line 319 "../../iup_spin.c"
  $92 = (($84) + ($91))|0; //@line 319 "../../iup_spin.c"
  $93 = $5; //@line 319 "../../iup_spin.c"
  _iupBaseSetPosition($83,$92,$93); //@line 319 "../../iup_spin.c"
  STACKTOP = sp;return; //@line 327 "../../iup_spin.c"
 }
}
function _iSpinboxGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 253 "../../iup_spin.c"
 $5 = ((($4)) + 52|0); //@line 253 "../../iup_spin.c"
 $6 = HEAP32[$5>>2]|0; //@line 253 "../../iup_spin.c"
 $2 = $6; //@line 253 "../../iup_spin.c"
 $7 = $1; //@line 254 "../../iup_spin.c"
 $8 = ((($7)) + 56|0); //@line 254 "../../iup_spin.c"
 $9 = HEAP32[$8>>2]|0; //@line 254 "../../iup_spin.c"
 $3 = $9; //@line 254 "../../iup_spin.c"
 $10 = $1; //@line 255 "../../iup_spin.c"
 $11 = ((($10)) + 64|0); //@line 255 "../../iup_spin.c"
 $12 = HEAP32[$11>>2]|0; //@line 255 "../../iup_spin.c"
 $13 = ((($12)) + 52|0); //@line 255 "../../iup_spin.c"
 $14 = HEAP32[$13>>2]|0; //@line 255 "../../iup_spin.c"
 $15 = $2; //@line 255 "../../iup_spin.c"
 $16 = (($15) - ($14))|0; //@line 255 "../../iup_spin.c"
 $2 = $16; //@line 255 "../../iup_spin.c"
 $17 = $2; //@line 256 "../../iup_spin.c"
 $18 = ($17|0)<(0); //@line 256 "../../iup_spin.c"
 $$ = $18 ? 0 : $16; //@line 256 "../../iup_spin.c"
 $2 = $$; //@line 256 "../../iup_spin.c"
 $19 = $3; //@line 257 "../../iup_spin.c"
 $20 = ($19|0)<(0); //@line 257 "../../iup_spin.c"
 if (!($20)) {
  $21 = $2; //@line 258 "../../iup_spin.c"
  $22 = $3; //@line 258 "../../iup_spin.c"
  $23 = (_iupStrReturnIntInt($21,$22,120)|0); //@line 258 "../../iup_spin.c"
  STACKTOP = sp;return ($23|0); //@line 258 "../../iup_spin.c"
 }
 $3 = 0; //@line 257 "../../iup_spin.c"
 $21 = $2; //@line 258 "../../iup_spin.c"
 $22 = $3; //@line 258 "../../iup_spin.c"
 $23 = (_iupStrReturnIntInt($21,$22,120)|0); //@line 258 "../../iup_spin.c"
 STACKTOP = sp;return ($23|0); //@line 258 "../../iup_spin.c"
}
function _iupSplitNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 881 "../../iup_split.c"
 $0 = $1; //@line 881 "../../iup_split.c"
 $2 = $0; //@line 883 "../../iup_split.c"
 HEAP32[$2>>2] = 15854; //@line 883 "../../iup_split.c"
 $3 = $0; //@line 884 "../../iup_split.c"
 $4 = ((($3)) + 4|0); //@line 884 "../../iup_split.c"
 HEAP32[$4>>2] = 15860; //@line 884 "../../iup_split.c"
 $5 = $0; //@line 885 "../../iup_split.c"
 $6 = ((($5)) + 8|0); //@line 885 "../../iup_split.c"
 HEAP32[$6>>2] = 0; //@line 885 "../../iup_split.c"
 $7 = $0; //@line 886 "../../iup_split.c"
 $8 = ((($7)) + 12|0); //@line 886 "../../iup_split.c"
 HEAP32[$8>>2] = 4; //@line 886 "../../iup_split.c"
 $9 = $0; //@line 887 "../../iup_split.c"
 $10 = ((($9)) + 16|0); //@line 887 "../../iup_split.c"
 HEAP32[$10>>2] = 0; //@line 887 "../../iup_split.c"
 $11 = $0; //@line 890 "../../iup_split.c"
 $12 = ((($11)) + 32|0); //@line 890 "../../iup_split.c"
 HEAP32[$12>>2] = 423; //@line 890 "../../iup_split.c"
 $13 = $0; //@line 891 "../../iup_split.c"
 $14 = ((($13)) + 40|0); //@line 891 "../../iup_split.c"
 HEAP32[$14>>2] = 424; //@line 891 "../../iup_split.c"
 $15 = $0; //@line 892 "../../iup_split.c"
 $16 = ((($15)) + 44|0); //@line 892 "../../iup_split.c"
 HEAP32[$16>>2] = 26; //@line 892 "../../iup_split.c"
 $17 = $0; //@line 894 "../../iup_split.c"
 $18 = ((($17)) + 76|0); //@line 894 "../../iup_split.c"
 HEAP32[$18>>2] = 425; //@line 894 "../../iup_split.c"
 $19 = $0; //@line 895 "../../iup_split.c"
 $20 = ((($19)) + 80|0); //@line 895 "../../iup_split.c"
 HEAP32[$20>>2] = 426; //@line 895 "../../iup_split.c"
 $21 = $0; //@line 896 "../../iup_split.c"
 $22 = ((($21)) + 84|0); //@line 896 "../../iup_split.c"
 HEAP32[$22>>2] = 427; //@line 896 "../../iup_split.c"
 $23 = $0; //@line 898 "../../iup_split.c"
 _iupClassRegisterCallback($23,19918,362470); //@line 898 "../../iup_split.c"
 $24 = $0; //@line 901 "../../iup_split.c"
 _iupBaseRegisterCommonAttrib($24); //@line 901 "../../iup_split.c"
 $25 = $0; //@line 904 "../../iup_split.c"
 _iupClassRegisterAttribute($25,20073,20,0,(-1),20441,9); //@line 904 "../../iup_split.c"
 $26 = $0; //@line 905 "../../iup_split.c"
 _iupClassRegisterAttribute($26,20080,428,0,0,0,41); //@line 905 "../../iup_split.c"
 $27 = $0; //@line 906 "../../iup_split.c"
 _iupClassRegisterAttribute($27,20091,28,0,0,0,41); //@line 906 "../../iup_split.c"
 $28 = $0; //@line 909 "../../iup_split.c"
 _iupClassRegisterAttribute($28,15863,0,429,(-1),15869,1); //@line 909 "../../iup_split.c"
 $29 = $0; //@line 910 "../../iup_split.c"
 _iupClassRegisterAttribute($29,19962,0,430,(-1),19983,9); //@line 910 "../../iup_split.c"
 $30 = $0; //@line 911 "../../iup_split.c"
 _iupClassRegisterAttribute($30,15881,0,430,(-1),19983,9); //@line 911 "../../iup_split.c"
 $31 = $0; //@line 912 "../../iup_split.c"
 _iupClassRegisterAttribute($31,20104,431,432,(-1),15891,9); //@line 912 "../../iup_split.c"
 $32 = $0; //@line 913 "../../iup_split.c"
 _iupClassRegisterAttribute($32,15895,433,434,(-1),20441,9); //@line 913 "../../iup_split.c"
 $33 = $0; //@line 914 "../../iup_split.c"
 _iupClassRegisterAttribute($33,15906,435,436,(-1),20441,9); //@line 914 "../../iup_split.c"
 $34 = $0; //@line 915 "../../iup_split.c"
 _iupClassRegisterAttribute($34,17518,437,438,(-1),20140,9); //@line 915 "../../iup_split.c"
 $35 = $0; //@line 916 "../../iup_split.c"
 _iupClassRegisterAttribute($35,15915,439,440,(-1),19587,9); //@line 916 "../../iup_split.c"
 $36 = $0; //@line 917 "../../iup_split.c"
 _iupClassRegisterAttribute($36,15923,441,442,(-1),15930,9); //@line 917 "../../iup_split.c"
 $37 = $0; //@line 919 "../../iup_split.c"
 STACKTOP = sp;return ($37|0); //@line 919 "../../iup_split.c"
}
function _iSplitCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = (_calloc(1,48)|0); //@line 843 "../../iup_split.c"
 $7 = $2; //@line 843 "../../iup_split.c"
 $8 = ((($7)) + 72|0); //@line 843 "../../iup_split.c"
 HEAP32[$8>>2] = $6; //@line 843 "../../iup_split.c"
 $9 = $2; //@line 845 "../../iup_split.c"
 $10 = ((($9)) + 72|0); //@line 845 "../../iup_split.c"
 $11 = HEAP32[$10>>2]|0; //@line 845 "../../iup_split.c"
 $12 = ((($11)) + 32|0); //@line 845 "../../iup_split.c"
 HEAP32[$12>>2] = 0; //@line 845 "../../iup_split.c"
 $13 = $2; //@line 846 "../../iup_split.c"
 $14 = ((($13)) + 72|0); //@line 846 "../../iup_split.c"
 $15 = HEAP32[$14>>2]|0; //@line 846 "../../iup_split.c"
 $16 = ((($15)) + 36|0); //@line 846 "../../iup_split.c"
 HEAP32[$16>>2] = -1; //@line 846 "../../iup_split.c"
 $17 = $2; //@line 847 "../../iup_split.c"
 $18 = ((($17)) + 72|0); //@line 847 "../../iup_split.c"
 $19 = HEAP32[$18>>2]|0; //@line 847 "../../iup_split.c"
 $20 = ((($19)) + 16|0); //@line 847 "../../iup_split.c"
 HEAP32[$20>>2] = 1; //@line 847 "../../iup_split.c"
 $21 = $2; //@line 848 "../../iup_split.c"
 $22 = ((($21)) + 72|0); //@line 848 "../../iup_split.c"
 $23 = HEAP32[$22>>2]|0; //@line 848 "../../iup_split.c"
 $24 = ((($23)) + 20|0); //@line 848 "../../iup_split.c"
 HEAP32[$24>>2] = 0; //@line 848 "../../iup_split.c"
 $25 = $2; //@line 849 "../../iup_split.c"
 $26 = ((($25)) + 72|0); //@line 849 "../../iup_split.c"
 $27 = HEAP32[$26>>2]|0; //@line 849 "../../iup_split.c"
 $28 = ((($27)) + 28|0); //@line 849 "../../iup_split.c"
 HEAP32[$28>>2] = 5; //@line 849 "../../iup_split.c"
 $29 = $2; //@line 850 "../../iup_split.c"
 $30 = ((($29)) + 72|0); //@line 850 "../../iup_split.c"
 $31 = HEAP32[$30>>2]|0; //@line 850 "../../iup_split.c"
 $32 = ((($31)) + 24|0); //@line 850 "../../iup_split.c"
 HEAP32[$32>>2] = 1; //@line 850 "../../iup_split.c"
 $33 = $2; //@line 851 "../../iup_split.c"
 $34 = ((($33)) + 72|0); //@line 851 "../../iup_split.c"
 $35 = HEAP32[$34>>2]|0; //@line 851 "../../iup_split.c"
 $36 = ((($35)) + 40|0); //@line 851 "../../iup_split.c"
 HEAP32[$36>>2] = 0; //@line 851 "../../iup_split.c"
 $37 = $2; //@line 852 "../../iup_split.c"
 $38 = ((($37)) + 72|0); //@line 852 "../../iup_split.c"
 $39 = HEAP32[$38>>2]|0; //@line 852 "../../iup_split.c"
 $40 = ((($39)) + 44|0); //@line 852 "../../iup_split.c"
 HEAP32[$40>>2] = 1000; //@line 852 "../../iup_split.c"
 $41 = (_IupCanvas(0)|0); //@line 854 "../../iup_split.c"
 $4 = $41; //@line 854 "../../iup_split.c"
 $42 = $2; //@line 855 "../../iup_split.c"
 $43 = $4; //@line 855 "../../iup_split.c"
 _iupChildTreeAppend($42,$43); //@line 855 "../../iup_split.c"
 $44 = $4; //@line 856 "../../iup_split.c"
 $45 = ((($44)) + 24|0); //@line 856 "../../iup_split.c"
 $46 = HEAP32[$45>>2]|0; //@line 856 "../../iup_split.c"
 $47 = $46 | 16; //@line 856 "../../iup_split.c"
 HEAP32[$45>>2] = $47; //@line 856 "../../iup_split.c"
 $48 = $4; //@line 858 "../../iup_split.c"
 _IupSetAttribute($48,15995,20140); //@line 858 "../../iup_split.c"
 $49 = $4; //@line 859 "../../iup_split.c"
 _IupSetAttribute($49,17637,20140); //@line 859 "../../iup_split.c"
 $50 = $4; //@line 860 "../../iup_split.c"
 _IupSetAttribute($50,20073,20140); //@line 860 "../../iup_split.c"
 $51 = $4; //@line 861 "../../iup_split.c"
 _IupSetAttribute($51,15959,15966); //@line 861 "../../iup_split.c"
 $52 = $4; //@line 864 "../../iup_split.c"
 (_IupSetCallback($52,20522,443)|0); //@line 864 "../../iup_split.c"
 $53 = $4; //@line 865 "../../iup_split.c"
 (_IupSetCallback($53,16004,444)|0); //@line 865 "../../iup_split.c"
 $54 = $4; //@line 866 "../../iup_split.c"
 (_IupSetCallback($54,18039,445)|0); //@line 866 "../../iup_split.c"
 $55 = $4; //@line 867 "../../iup_split.c"
 (_IupSetCallback($55,20479,446)|0); //@line 867 "../../iup_split.c"
 $56 = $3; //@line 869 "../../iup_split.c"
 $57 = ($56|0)!=(0|0); //@line 869 "../../iup_split.c"
 if (!($57)) {
  STACKTOP = sp;return 0; //@line 876 "../../iup_split.c"
 }
 $58 = $3; //@line 871 "../../iup_split.c"
 $5 = $58; //@line 871 "../../iup_split.c"
 $59 = $5; //@line 872 "../../iup_split.c"
 $60 = HEAP32[$59>>2]|0; //@line 872 "../../iup_split.c"
 $61 = ($60|0)!=(0|0); //@line 872 "../../iup_split.c"
 if ($61) {
  $62 = $2; //@line 872 "../../iup_split.c"
  $63 = $5; //@line 872 "../../iup_split.c"
  $64 = HEAP32[$63>>2]|0; //@line 872 "../../iup_split.c"
  (_IupAppend($62,$64)|0); //@line 872 "../../iup_split.c"
 }
 $65 = $5; //@line 873 "../../iup_split.c"
 $66 = ((($65)) + 4|0); //@line 873 "../../iup_split.c"
 $67 = HEAP32[$66>>2]|0; //@line 873 "../../iup_split.c"
 $68 = ($67|0)!=(0|0); //@line 873 "../../iup_split.c"
 if (!($68)) {
  STACKTOP = sp;return 0; //@line 876 "../../iup_split.c"
 }
 $69 = $2; //@line 873 "../../iup_split.c"
 $70 = $5; //@line 873 "../../iup_split.c"
 $71 = ((($70)) + 4|0); //@line 873 "../../iup_split.c"
 $72 = HEAP32[$71>>2]|0; //@line 873 "../../iup_split.c"
 (_IupAppend($69,$72)|0); //@line 873 "../../iup_split.c"
 STACKTOP = sp;return 0; //@line 876 "../../iup_split.c"
}
function _iSplitComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = 0; //@line 640 "../../iup_split.c"
 $9 = 0; //@line 641 "../../iup_split.c"
 $11 = 0; //@line 642 "../../iup_split.c"
 $12 = $4; //@line 643 "../../iup_split.c"
 $13 = ((($12)) + 64|0); //@line 643 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 643 "../../iup_split.c"
 $15 = ((($14)) + 68|0); //@line 643 "../../iup_split.c"
 $16 = HEAP32[$15>>2]|0; //@line 643 "../../iup_split.c"
 $10 = $16; //@line 643 "../../iup_split.c"
 $17 = $10; //@line 644 "../../iup_split.c"
 $18 = ($17|0)!=(0|0); //@line 644 "../../iup_split.c"
 if ($18) {
  $19 = $10; //@line 645 "../../iup_split.c"
  $20 = ((($19)) + 68|0); //@line 645 "../../iup_split.c"
  $21 = HEAP32[$20>>2]|0; //@line 645 "../../iup_split.c"
  $11 = $21; //@line 645 "../../iup_split.c"
 }
 $22 = $4; //@line 648 "../../iup_split.c"
 $23 = ((($22)) + 72|0); //@line 648 "../../iup_split.c"
 $24 = HEAP32[$23>>2]|0; //@line 648 "../../iup_split.c"
 $25 = ((($24)) + 32|0); //@line 648 "../../iup_split.c"
 $26 = HEAP32[$25>>2]|0; //@line 648 "../../iup_split.c"
 $27 = ($26|0)==(0); //@line 648 "../../iup_split.c"
 $28 = $4; //@line 649 "../../iup_split.c"
 $29 = ((($28)) + 72|0); //@line 649 "../../iup_split.c"
 $30 = HEAP32[$29>>2]|0; //@line 649 "../../iup_split.c"
 $31 = ((($30)) + 28|0); //@line 649 "../../iup_split.c"
 $32 = HEAP32[$31>>2]|0; //@line 649 "../../iup_split.c"
 if ($27) {
  $33 = $8; //@line 649 "../../iup_split.c"
  $34 = (($33) + ($32))|0; //@line 649 "../../iup_split.c"
  $8 = $34; //@line 649 "../../iup_split.c"
 } else {
  $35 = $9; //@line 651 "../../iup_split.c"
  $36 = (($35) + ($32))|0; //@line 651 "../../iup_split.c"
  $9 = $36; //@line 651 "../../iup_split.c"
 }
 $37 = $10; //@line 653 "../../iup_split.c"
 $38 = ($37|0)!=(0|0); //@line 653 "../../iup_split.c"
 if ($38) {
  $39 = $10; //@line 656 "../../iup_split.c"
  _iupBaseComputeNaturalSize($39); //@line 656 "../../iup_split.c"
  $40 = $4; //@line 658 "../../iup_split.c"
  $41 = ((($40)) + 72|0); //@line 658 "../../iup_split.c"
  $42 = HEAP32[$41>>2]|0; //@line 658 "../../iup_split.c"
  $43 = ((($42)) + 32|0); //@line 658 "../../iup_split.c"
  $44 = HEAP32[$43>>2]|0; //@line 658 "../../iup_split.c"
  $45 = ($44|0)==(0); //@line 658 "../../iup_split.c"
  if ($45) {
   $46 = $10; //@line 660 "../../iup_split.c"
   $47 = ((($46)) + 44|0); //@line 660 "../../iup_split.c"
   $48 = HEAP32[$47>>2]|0; //@line 660 "../../iup_split.c"
   $49 = $8; //@line 660 "../../iup_split.c"
   $50 = (($49) + ($48))|0; //@line 660 "../../iup_split.c"
   $8 = $50; //@line 660 "../../iup_split.c"
   $51 = $9; //@line 661 "../../iup_split.c"
   $52 = $10; //@line 661 "../../iup_split.c"
   $53 = ((($52)) + 48|0); //@line 661 "../../iup_split.c"
   $54 = HEAP32[$53>>2]|0; //@line 661 "../../iup_split.c"
   $55 = ($51|0)>($54|0); //@line 661 "../../iup_split.c"
   if ($55) {
    $56 = $9; //@line 661 "../../iup_split.c"
    $60 = $56;
   } else {
    $57 = $10; //@line 661 "../../iup_split.c"
    $58 = ((($57)) + 48|0); //@line 661 "../../iup_split.c"
    $59 = HEAP32[$58>>2]|0; //@line 661 "../../iup_split.c"
    $60 = $59;
   }
   $9 = $60; //@line 661 "../../iup_split.c"
  } else {
   $61 = $8; //@line 665 "../../iup_split.c"
   $62 = $10; //@line 665 "../../iup_split.c"
   $63 = ((($62)) + 44|0); //@line 665 "../../iup_split.c"
   $64 = HEAP32[$63>>2]|0; //@line 665 "../../iup_split.c"
   $65 = ($61|0)>($64|0); //@line 665 "../../iup_split.c"
   if ($65) {
    $66 = $8; //@line 665 "../../iup_split.c"
    $70 = $66;
   } else {
    $67 = $10; //@line 665 "../../iup_split.c"
    $68 = ((($67)) + 44|0); //@line 665 "../../iup_split.c"
    $69 = HEAP32[$68>>2]|0; //@line 665 "../../iup_split.c"
    $70 = $69;
   }
   $8 = $70; //@line 665 "../../iup_split.c"
   $71 = $10; //@line 666 "../../iup_split.c"
   $72 = ((($71)) + 48|0); //@line 666 "../../iup_split.c"
   $73 = HEAP32[$72>>2]|0; //@line 666 "../../iup_split.c"
   $74 = $9; //@line 666 "../../iup_split.c"
   $75 = (($74) + ($73))|0; //@line 666 "../../iup_split.c"
   $9 = $75; //@line 666 "../../iup_split.c"
  }
  $76 = $10; //@line 669 "../../iup_split.c"
  $77 = ((($76)) + 20|0); //@line 669 "../../iup_split.c"
  $78 = HEAP32[$77>>2]|0; //@line 669 "../../iup_split.c"
  $79 = $7; //@line 669 "../../iup_split.c"
  $80 = HEAP32[$79>>2]|0; //@line 669 "../../iup_split.c"
  $81 = $80 | $78; //@line 669 "../../iup_split.c"
  HEAP32[$79>>2] = $81; //@line 669 "../../iup_split.c"
 }
 $82 = $11; //@line 672 "../../iup_split.c"
 $83 = ($82|0)!=(0|0); //@line 672 "../../iup_split.c"
 if ($83) {
  $84 = $11; //@line 675 "../../iup_split.c"
  _iupBaseComputeNaturalSize($84); //@line 675 "../../iup_split.c"
  $85 = $4; //@line 677 "../../iup_split.c"
  $86 = ((($85)) + 72|0); //@line 677 "../../iup_split.c"
  $87 = HEAP32[$86>>2]|0; //@line 677 "../../iup_split.c"
  $88 = ((($87)) + 32|0); //@line 677 "../../iup_split.c"
  $89 = HEAP32[$88>>2]|0; //@line 677 "../../iup_split.c"
  $90 = ($89|0)==(0); //@line 677 "../../iup_split.c"
  if ($90) {
   $91 = $11; //@line 679 "../../iup_split.c"
   $92 = ((($91)) + 44|0); //@line 679 "../../iup_split.c"
   $93 = HEAP32[$92>>2]|0; //@line 679 "../../iup_split.c"
   $94 = $8; //@line 679 "../../iup_split.c"
   $95 = (($94) + ($93))|0; //@line 679 "../../iup_split.c"
   $8 = $95; //@line 679 "../../iup_split.c"
   $96 = $9; //@line 680 "../../iup_split.c"
   $97 = $11; //@line 680 "../../iup_split.c"
   $98 = ((($97)) + 48|0); //@line 680 "../../iup_split.c"
   $99 = HEAP32[$98>>2]|0; //@line 680 "../../iup_split.c"
   $100 = ($96|0)>($99|0); //@line 680 "../../iup_split.c"
   if ($100) {
    $101 = $9; //@line 680 "../../iup_split.c"
    $105 = $101;
   } else {
    $102 = $11; //@line 680 "../../iup_split.c"
    $103 = ((($102)) + 48|0); //@line 680 "../../iup_split.c"
    $104 = HEAP32[$103>>2]|0; //@line 680 "../../iup_split.c"
    $105 = $104;
   }
   $9 = $105; //@line 680 "../../iup_split.c"
  } else {
   $106 = $8; //@line 684 "../../iup_split.c"
   $107 = $11; //@line 684 "../../iup_split.c"
   $108 = ((($107)) + 44|0); //@line 684 "../../iup_split.c"
   $109 = HEAP32[$108>>2]|0; //@line 684 "../../iup_split.c"
   $110 = ($106|0)>($109|0); //@line 684 "../../iup_split.c"
   if ($110) {
    $111 = $8; //@line 684 "../../iup_split.c"
    $115 = $111;
   } else {
    $112 = $11; //@line 684 "../../iup_split.c"
    $113 = ((($112)) + 44|0); //@line 684 "../../iup_split.c"
    $114 = HEAP32[$113>>2]|0; //@line 684 "../../iup_split.c"
    $115 = $114;
   }
   $8 = $115; //@line 684 "../../iup_split.c"
   $116 = $11; //@line 685 "../../iup_split.c"
   $117 = ((($116)) + 48|0); //@line 685 "../../iup_split.c"
   $118 = HEAP32[$117>>2]|0; //@line 685 "../../iup_split.c"
   $119 = $9; //@line 685 "../../iup_split.c"
   $120 = (($119) + ($118))|0; //@line 685 "../../iup_split.c"
   $9 = $120; //@line 685 "../../iup_split.c"
  }
  $121 = $11; //@line 688 "../../iup_split.c"
  $122 = ((($121)) + 20|0); //@line 688 "../../iup_split.c"
  $123 = HEAP32[$122>>2]|0; //@line 688 "../../iup_split.c"
  $124 = $7; //@line 688 "../../iup_split.c"
  $125 = HEAP32[$124>>2]|0; //@line 688 "../../iup_split.c"
  $126 = $125 | $123; //@line 688 "../../iup_split.c"
  HEAP32[$124>>2] = $126; //@line 688 "../../iup_split.c"
 }
 $127 = $4; //@line 691 "../../iup_split.c"
 $128 = ((($127)) + 72|0); //@line 691 "../../iup_split.c"
 $129 = HEAP32[$128>>2]|0; //@line 691 "../../iup_split.c"
 $130 = ((($129)) + 36|0); //@line 691 "../../iup_split.c"
 $131 = HEAP32[$130>>2]|0; //@line 691 "../../iup_split.c"
 $132 = ($131|0)==(-1); //@line 691 "../../iup_split.c"
 if (!($132)) {
  $179 = $8; //@line 707 "../../iup_split.c"
  $180 = $5; //@line 707 "../../iup_split.c"
  HEAP32[$180>>2] = $179; //@line 707 "../../iup_split.c"
  $181 = $9; //@line 708 "../../iup_split.c"
  $182 = $6; //@line 708 "../../iup_split.c"
  HEAP32[$182>>2] = $181; //@line 708 "../../iup_split.c"
  STACKTOP = sp;return; //@line 709 "../../iup_split.c"
 }
 $133 = $10; //@line 693 "../../iup_split.c"
 $134 = ($133|0)!=(0|0); //@line 693 "../../iup_split.c"
 $135 = $4; //@line 696 "../../iup_split.c"
 $136 = ((($135)) + 72|0); //@line 696 "../../iup_split.c"
 $137 = HEAP32[$136>>2]|0; //@line 696 "../../iup_split.c"
 do {
  if ($134) {
   $138 = ((($137)) + 32|0); //@line 696 "../../iup_split.c"
   $139 = HEAP32[$138>>2]|0; //@line 696 "../../iup_split.c"
   $140 = ($139|0)==(0); //@line 696 "../../iup_split.c"
   $141 = $10; //@line 697 "../../iup_split.c"
   if ($140) {
    $142 = ((($141)) + 44|0); //@line 697 "../../iup_split.c"
    $143 = HEAP32[$142>>2]|0; //@line 697 "../../iup_split.c"
    $144 = ($143*1000)|0; //@line 697 "../../iup_split.c"
    $145 = $8; //@line 697 "../../iup_split.c"
    $146 = $4; //@line 697 "../../iup_split.c"
    $147 = ((($146)) + 72|0); //@line 697 "../../iup_split.c"
    $148 = HEAP32[$147>>2]|0; //@line 697 "../../iup_split.c"
    $149 = ((($148)) + 28|0); //@line 697 "../../iup_split.c"
    $150 = HEAP32[$149>>2]|0; //@line 697 "../../iup_split.c"
    $151 = (($145) - ($150))|0; //@line 697 "../../iup_split.c"
    $152 = (($144|0) / ($151|0))&-1; //@line 697 "../../iup_split.c"
    $153 = $4; //@line 697 "../../iup_split.c"
    $154 = ((($153)) + 72|0); //@line 697 "../../iup_split.c"
    $155 = HEAP32[$154>>2]|0; //@line 697 "../../iup_split.c"
    $156 = ((($155)) + 36|0); //@line 697 "../../iup_split.c"
    HEAP32[$156>>2] = $152; //@line 697 "../../iup_split.c"
    break;
   } else {
    $157 = ((($141)) + 48|0); //@line 699 "../../iup_split.c"
    $158 = HEAP32[$157>>2]|0; //@line 699 "../../iup_split.c"
    $159 = ($158*1000)|0; //@line 699 "../../iup_split.c"
    $160 = $9; //@line 699 "../../iup_split.c"
    $161 = $4; //@line 699 "../../iup_split.c"
    $162 = ((($161)) + 72|0); //@line 699 "../../iup_split.c"
    $163 = HEAP32[$162>>2]|0; //@line 699 "../../iup_split.c"
    $164 = ((($163)) + 28|0); //@line 699 "../../iup_split.c"
    $165 = HEAP32[$164>>2]|0; //@line 699 "../../iup_split.c"
    $166 = (($160) - ($165))|0; //@line 699 "../../iup_split.c"
    $167 = (($159|0) / ($166|0))&-1; //@line 699 "../../iup_split.c"
    $168 = $4; //@line 699 "../../iup_split.c"
    $169 = ((($168)) + 72|0); //@line 699 "../../iup_split.c"
    $170 = HEAP32[$169>>2]|0; //@line 699 "../../iup_split.c"
    $171 = ((($170)) + 36|0); //@line 699 "../../iup_split.c"
    HEAP32[$171>>2] = $167; //@line 699 "../../iup_split.c"
    break;
   }
  } else {
   $172 = ((($137)) + 40|0); //@line 702 "../../iup_split.c"
   $173 = HEAP32[$172>>2]|0; //@line 702 "../../iup_split.c"
   $174 = $4; //@line 702 "../../iup_split.c"
   $175 = ((($174)) + 72|0); //@line 702 "../../iup_split.c"
   $176 = HEAP32[$175>>2]|0; //@line 702 "../../iup_split.c"
   $177 = ((($176)) + 36|0); //@line 702 "../../iup_split.c"
   HEAP32[$177>>2] = $173; //@line 702 "../../iup_split.c"
  }
 } while(0);
 $178 = $4; //@line 704 "../../iup_split.c"
 _iSplitAdjustVal($178); //@line 704 "../../iup_split.c"
 $179 = $8; //@line 707 "../../iup_split.c"
 $180 = $5; //@line 707 "../../iup_split.c"
 HEAP32[$180>>2] = $179; //@line 707 "../../iup_split.c"
 $181 = $9; //@line 708 "../../iup_split.c"
 $182 = $6; //@line 708 "../../iup_split.c"
 HEAP32[$182>>2] = $181; //@line 708 "../../iup_split.c"
 STACKTOP = sp;return; //@line 709 "../../iup_split.c"
}
function _iSplitSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = sp + 12|0;
 $9 = sp + 4|0;
 $2 = $0;
 $3 = $1;
 $11 = $2; //@line 713 "../../iup_split.c"
 $12 = ((($11)) + 72|0); //@line 713 "../../iup_split.c"
 $13 = HEAP32[$12>>2]|0; //@line 713 "../../iup_split.c"
 $14 = ((($13)) + 36|0); //@line 713 "../../iup_split.c"
 $15 = HEAP32[$14>>2]|0; //@line 713 "../../iup_split.c"
 $4 = $15; //@line 713 "../../iup_split.c"
 $6 = 0; //@line 714 "../../iup_split.c"
 $16 = $2; //@line 715 "../../iup_split.c"
 $17 = ((($16)) + 64|0); //@line 715 "../../iup_split.c"
 $18 = HEAP32[$17>>2]|0; //@line 715 "../../iup_split.c"
 $19 = ((($18)) + 68|0); //@line 715 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 715 "../../iup_split.c"
 $5 = $20; //@line 715 "../../iup_split.c"
 $21 = $5; //@line 716 "../../iup_split.c"
 $22 = ($21|0)!=(0|0); //@line 716 "../../iup_split.c"
 if ($22) {
  $23 = $5; //@line 717 "../../iup_split.c"
  $24 = ((($23)) + 68|0); //@line 717 "../../iup_split.c"
  $25 = HEAP32[$24>>2]|0; //@line 717 "../../iup_split.c"
  $6 = $25; //@line 717 "../../iup_split.c"
 }
 $26 = $2; //@line 719 "../../iup_split.c"
 $27 = ((($26)) + 72|0); //@line 719 "../../iup_split.c"
 $28 = HEAP32[$27>>2]|0; //@line 719 "../../iup_split.c"
 $29 = ((($28)) + 32|0); //@line 719 "../../iup_split.c"
 $30 = HEAP32[$29>>2]|0; //@line 719 "../../iup_split.c"
 $31 = ($30|0)==(0); //@line 719 "../../iup_split.c"
 $32 = $2; //@line 721 "../../iup_split.c"
 if ($31) {
  $33 = (_iSplitGetWidth1($32)|0); //@line 721 "../../iup_split.c"
  HEAP32[$7>>2] = $33; //@line 721 "../../iup_split.c"
  $34 = $2; //@line 722 "../../iup_split.c"
  $35 = (_iSplitAdjustWidth1($34,$7)|0); //@line 722 "../../iup_split.c"
  $36 = ($35|0)!=(0); //@line 722 "../../iup_split.c"
  if ($36) {
   $37 = $2; //@line 723 "../../iup_split.c"
   $38 = HEAP32[$7>>2]|0; //@line 723 "../../iup_split.c"
   $39 = (_iSplitCalcVal($37,$38)|0); //@line 723 "../../iup_split.c"
   $40 = $2; //@line 723 "../../iup_split.c"
   $41 = ((($40)) + 72|0); //@line 723 "../../iup_split.c"
   $42 = HEAP32[$41>>2]|0; //@line 723 "../../iup_split.c"
   $43 = ((($42)) + 36|0); //@line 723 "../../iup_split.c"
   HEAP32[$43>>2] = $39; //@line 723 "../../iup_split.c"
  }
  $44 = $5; //@line 725 "../../iup_split.c"
  $45 = ($44|0)!=(0|0); //@line 725 "../../iup_split.c"
  if ($45) {
   $46 = $5; //@line 727 "../../iup_split.c"
   $47 = HEAP32[$7>>2]|0; //@line 727 "../../iup_split.c"
   $48 = $2; //@line 727 "../../iup_split.c"
   $49 = ((($48)) + 56|0); //@line 727 "../../iup_split.c"
   $50 = HEAP32[$49>>2]|0; //@line 727 "../../iup_split.c"
   $51 = $3; //@line 727 "../../iup_split.c"
   _iupBaseSetCurrentSize($46,$47,$50,$51); //@line 727 "../../iup_split.c"
   $52 = $5; //@line 729 "../../iup_split.c"
   $53 = ((($52)) + 52|0); //@line 729 "../../iup_split.c"
   $54 = HEAP32[$53>>2]|0; //@line 729 "../../iup_split.c"
   $55 = HEAP32[$7>>2]|0; //@line 729 "../../iup_split.c"
   $56 = ($54|0)>($55|0); //@line 729 "../../iup_split.c"
   if ($56) {
    $57 = $5; //@line 732 "../../iup_split.c"
    $58 = ((($57)) + 52|0); //@line 732 "../../iup_split.c"
    $59 = HEAP32[$58>>2]|0; //@line 732 "../../iup_split.c"
    HEAP32[$7>>2] = $59; //@line 732 "../../iup_split.c"
    $60 = $2; //@line 733 "../../iup_split.c"
    $61 = HEAP32[$7>>2]|0; //@line 733 "../../iup_split.c"
    $62 = (_iSplitCalcVal($60,$61)|0); //@line 733 "../../iup_split.c"
    $63 = $2; //@line 733 "../../iup_split.c"
    $64 = ((($63)) + 72|0); //@line 733 "../../iup_split.c"
    $65 = HEAP32[$64>>2]|0; //@line 733 "../../iup_split.c"
    $66 = ((($65)) + 36|0); //@line 733 "../../iup_split.c"
    HEAP32[$66>>2] = $62; //@line 733 "../../iup_split.c"
   }
  }
  $67 = $2; //@line 738 "../../iup_split.c"
  $68 = ((($67)) + 72|0); //@line 738 "../../iup_split.c"
  $69 = HEAP32[$68>>2]|0; //@line 738 "../../iup_split.c"
  $70 = ((($69)) + 28|0); //@line 738 "../../iup_split.c"
  $71 = HEAP32[$70>>2]|0; //@line 738 "../../iup_split.c"
  $72 = $2; //@line 738 "../../iup_split.c"
  $73 = ((($72)) + 64|0); //@line 738 "../../iup_split.c"
  $74 = HEAP32[$73>>2]|0; //@line 738 "../../iup_split.c"
  $75 = ((($74)) + 52|0); //@line 738 "../../iup_split.c"
  HEAP32[$75>>2] = $71; //@line 738 "../../iup_split.c"
  $76 = $2; //@line 739 "../../iup_split.c"
  $77 = ((($76)) + 56|0); //@line 739 "../../iup_split.c"
  $78 = HEAP32[$77>>2]|0; //@line 739 "../../iup_split.c"
  $79 = $2; //@line 739 "../../iup_split.c"
  $80 = ((($79)) + 64|0); //@line 739 "../../iup_split.c"
  $81 = HEAP32[$80>>2]|0; //@line 739 "../../iup_split.c"
  $82 = ((($81)) + 56|0); //@line 739 "../../iup_split.c"
  HEAP32[$82>>2] = $78; //@line 739 "../../iup_split.c"
  $83 = $6; //@line 741 "../../iup_split.c"
  $84 = ($83|0)!=(0|0); //@line 741 "../../iup_split.c"
  if ($84) {
   $85 = $2; //@line 743 "../../iup_split.c"
   $86 = HEAP32[$7>>2]|0; //@line 743 "../../iup_split.c"
   $87 = (_iSplitGetWidth2($85,$86)|0); //@line 743 "../../iup_split.c"
   $8 = $87; //@line 743 "../../iup_split.c"
   $88 = $6; //@line 744 "../../iup_split.c"
   $89 = $8; //@line 744 "../../iup_split.c"
   $90 = $2; //@line 744 "../../iup_split.c"
   $91 = ((($90)) + 56|0); //@line 744 "../../iup_split.c"
   $92 = HEAP32[$91>>2]|0; //@line 744 "../../iup_split.c"
   $93 = $3; //@line 744 "../../iup_split.c"
   _iupBaseSetCurrentSize($88,$89,$92,$93); //@line 744 "../../iup_split.c"
   $94 = $6; //@line 746 "../../iup_split.c"
   $95 = ((($94)) + 52|0); //@line 746 "../../iup_split.c"
   $96 = HEAP32[$95>>2]|0; //@line 746 "../../iup_split.c"
   $97 = $8; //@line 746 "../../iup_split.c"
   $98 = ($96|0)>($97|0); //@line 746 "../../iup_split.c"
   if ($98) {
    $99 = $6; //@line 749 "../../iup_split.c"
    $100 = ((($99)) + 52|0); //@line 749 "../../iup_split.c"
    $101 = HEAP32[$100>>2]|0; //@line 749 "../../iup_split.c"
    $8 = $101; //@line 749 "../../iup_split.c"
    $102 = $2; //@line 750 "../../iup_split.c"
    $103 = ((($102)) + 52|0); //@line 750 "../../iup_split.c"
    $104 = HEAP32[$103>>2]|0; //@line 750 "../../iup_split.c"
    $105 = $2; //@line 750 "../../iup_split.c"
    $106 = ((($105)) + 72|0); //@line 750 "../../iup_split.c"
    $107 = HEAP32[$106>>2]|0; //@line 750 "../../iup_split.c"
    $108 = ((($107)) + 28|0); //@line 750 "../../iup_split.c"
    $109 = HEAP32[$108>>2]|0; //@line 750 "../../iup_split.c"
    $110 = (($104) - ($109))|0; //@line 750 "../../iup_split.c"
    $111 = $8; //@line 750 "../../iup_split.c"
    $112 = (($110) - ($111))|0; //@line 750 "../../iup_split.c"
    HEAP32[$7>>2] = $112; //@line 750 "../../iup_split.c"
    $113 = $2; //@line 751 "../../iup_split.c"
    $114 = HEAP32[$7>>2]|0; //@line 751 "../../iup_split.c"
    $115 = (_iSplitCalcVal($113,$114)|0); //@line 751 "../../iup_split.c"
    $116 = $2; //@line 751 "../../iup_split.c"
    $117 = ((($116)) + 72|0); //@line 751 "../../iup_split.c"
    $118 = HEAP32[$117>>2]|0; //@line 751 "../../iup_split.c"
    $119 = ((($118)) + 36|0); //@line 751 "../../iup_split.c"
    HEAP32[$119>>2] = $115; //@line 751 "../../iup_split.c"
    $120 = $5; //@line 752 "../../iup_split.c"
    $121 = ($120|0)!=(0|0); //@line 752 "../../iup_split.c"
    if ($121) {
     $122 = $5; //@line 753 "../../iup_split.c"
     $123 = HEAP32[$7>>2]|0; //@line 753 "../../iup_split.c"
     $124 = $2; //@line 753 "../../iup_split.c"
     $125 = ((($124)) + 56|0); //@line 753 "../../iup_split.c"
     $126 = HEAP32[$125>>2]|0; //@line 753 "../../iup_split.c"
     $127 = $3; //@line 753 "../../iup_split.c"
     _iupBaseSetCurrentSize($122,$123,$126,$127); //@line 753 "../../iup_split.c"
    }
   }
  }
 } else {
  $128 = (_iSplitGetHeight1($32)|0); //@line 759 "../../iup_split.c"
  HEAP32[$9>>2] = $128; //@line 759 "../../iup_split.c"
  $129 = $2; //@line 760 "../../iup_split.c"
  $130 = (_iSplitAdjustHeight1($129,$9)|0); //@line 760 "../../iup_split.c"
  $131 = ($130|0)!=(0); //@line 760 "../../iup_split.c"
  if ($131) {
   $132 = $2; //@line 761 "../../iup_split.c"
   $133 = HEAP32[$9>>2]|0; //@line 761 "../../iup_split.c"
   $134 = (_iSplitCalcVal($132,$133)|0); //@line 761 "../../iup_split.c"
   $135 = $2; //@line 761 "../../iup_split.c"
   $136 = ((($135)) + 72|0); //@line 761 "../../iup_split.c"
   $137 = HEAP32[$136>>2]|0; //@line 761 "../../iup_split.c"
   $138 = ((($137)) + 36|0); //@line 761 "../../iup_split.c"
   HEAP32[$138>>2] = $134; //@line 761 "../../iup_split.c"
  }
  $139 = $5; //@line 763 "../../iup_split.c"
  $140 = ($139|0)!=(0|0); //@line 763 "../../iup_split.c"
  if ($140) {
   $141 = $5; //@line 765 "../../iup_split.c"
   $142 = $2; //@line 765 "../../iup_split.c"
   $143 = ((($142)) + 52|0); //@line 765 "../../iup_split.c"
   $144 = HEAP32[$143>>2]|0; //@line 765 "../../iup_split.c"
   $145 = HEAP32[$9>>2]|0; //@line 765 "../../iup_split.c"
   $146 = $3; //@line 765 "../../iup_split.c"
   _iupBaseSetCurrentSize($141,$144,$145,$146); //@line 765 "../../iup_split.c"
   $147 = $5; //@line 767 "../../iup_split.c"
   $148 = ((($147)) + 56|0); //@line 767 "../../iup_split.c"
   $149 = HEAP32[$148>>2]|0; //@line 767 "../../iup_split.c"
   $150 = HEAP32[$9>>2]|0; //@line 767 "../../iup_split.c"
   $151 = ($149|0)>($150|0); //@line 767 "../../iup_split.c"
   if ($151) {
    $152 = $5; //@line 770 "../../iup_split.c"
    $153 = ((($152)) + 56|0); //@line 770 "../../iup_split.c"
    $154 = HEAP32[$153>>2]|0; //@line 770 "../../iup_split.c"
    HEAP32[$9>>2] = $154; //@line 770 "../../iup_split.c"
    $155 = $2; //@line 771 "../../iup_split.c"
    $156 = HEAP32[$9>>2]|0; //@line 771 "../../iup_split.c"
    $157 = (_iSplitCalcVal($155,$156)|0); //@line 771 "../../iup_split.c"
    $158 = $2; //@line 771 "../../iup_split.c"
    $159 = ((($158)) + 72|0); //@line 771 "../../iup_split.c"
    $160 = HEAP32[$159>>2]|0; //@line 771 "../../iup_split.c"
    $161 = ((($160)) + 36|0); //@line 771 "../../iup_split.c"
    HEAP32[$161>>2] = $157; //@line 771 "../../iup_split.c"
   }
  }
  $162 = $2; //@line 776 "../../iup_split.c"
  $163 = ((($162)) + 52|0); //@line 776 "../../iup_split.c"
  $164 = HEAP32[$163>>2]|0; //@line 776 "../../iup_split.c"
  $165 = $2; //@line 776 "../../iup_split.c"
  $166 = ((($165)) + 64|0); //@line 776 "../../iup_split.c"
  $167 = HEAP32[$166>>2]|0; //@line 776 "../../iup_split.c"
  $168 = ((($167)) + 52|0); //@line 776 "../../iup_split.c"
  HEAP32[$168>>2] = $164; //@line 776 "../../iup_split.c"
  $169 = $2; //@line 777 "../../iup_split.c"
  $170 = ((($169)) + 72|0); //@line 777 "../../iup_split.c"
  $171 = HEAP32[$170>>2]|0; //@line 777 "../../iup_split.c"
  $172 = ((($171)) + 28|0); //@line 777 "../../iup_split.c"
  $173 = HEAP32[$172>>2]|0; //@line 777 "../../iup_split.c"
  $174 = $2; //@line 777 "../../iup_split.c"
  $175 = ((($174)) + 64|0); //@line 777 "../../iup_split.c"
  $176 = HEAP32[$175>>2]|0; //@line 777 "../../iup_split.c"
  $177 = ((($176)) + 56|0); //@line 777 "../../iup_split.c"
  HEAP32[$177>>2] = $173; //@line 777 "../../iup_split.c"
  $178 = $6; //@line 779 "../../iup_split.c"
  $179 = ($178|0)!=(0|0); //@line 779 "../../iup_split.c"
  if ($179) {
   $180 = $2; //@line 781 "../../iup_split.c"
   $181 = HEAP32[$9>>2]|0; //@line 781 "../../iup_split.c"
   $182 = (_iSplitGetHeight2($180,$181)|0); //@line 781 "../../iup_split.c"
   $10 = $182; //@line 781 "../../iup_split.c"
   $183 = $6; //@line 782 "../../iup_split.c"
   $184 = $2; //@line 782 "../../iup_split.c"
   $185 = ((($184)) + 52|0); //@line 782 "../../iup_split.c"
   $186 = HEAP32[$185>>2]|0; //@line 782 "../../iup_split.c"
   $187 = $10; //@line 782 "../../iup_split.c"
   $188 = $3; //@line 782 "../../iup_split.c"
   _iupBaseSetCurrentSize($183,$186,$187,$188); //@line 782 "../../iup_split.c"
   $189 = $6; //@line 784 "../../iup_split.c"
   $190 = ((($189)) + 56|0); //@line 784 "../../iup_split.c"
   $191 = HEAP32[$190>>2]|0; //@line 784 "../../iup_split.c"
   $192 = $10; //@line 784 "../../iup_split.c"
   $193 = ($191|0)>($192|0); //@line 784 "../../iup_split.c"
   if ($193) {
    $194 = $6; //@line 787 "../../iup_split.c"
    $195 = ((($194)) + 56|0); //@line 787 "../../iup_split.c"
    $196 = HEAP32[$195>>2]|0; //@line 787 "../../iup_split.c"
    $10 = $196; //@line 787 "../../iup_split.c"
    $197 = $2; //@line 788 "../../iup_split.c"
    $198 = ((($197)) + 56|0); //@line 788 "../../iup_split.c"
    $199 = HEAP32[$198>>2]|0; //@line 788 "../../iup_split.c"
    $200 = $2; //@line 788 "../../iup_split.c"
    $201 = ((($200)) + 72|0); //@line 788 "../../iup_split.c"
    $202 = HEAP32[$201>>2]|0; //@line 788 "../../iup_split.c"
    $203 = ((($202)) + 28|0); //@line 788 "../../iup_split.c"
    $204 = HEAP32[$203>>2]|0; //@line 788 "../../iup_split.c"
    $205 = (($199) - ($204))|0; //@line 788 "../../iup_split.c"
    $206 = $10; //@line 788 "../../iup_split.c"
    $207 = (($205) - ($206))|0; //@line 788 "../../iup_split.c"
    HEAP32[$9>>2] = $207; //@line 788 "../../iup_split.c"
    $208 = $2; //@line 789 "../../iup_split.c"
    $209 = HEAP32[$9>>2]|0; //@line 789 "../../iup_split.c"
    $210 = (_iSplitCalcVal($208,$209)|0); //@line 789 "../../iup_split.c"
    $211 = $2; //@line 789 "../../iup_split.c"
    $212 = ((($211)) + 72|0); //@line 789 "../../iup_split.c"
    $213 = HEAP32[$212>>2]|0; //@line 789 "../../iup_split.c"
    $214 = ((($213)) + 36|0); //@line 789 "../../iup_split.c"
    HEAP32[$214>>2] = $210; //@line 789 "../../iup_split.c"
    $215 = $5; //@line 790 "../../iup_split.c"
    $216 = ($215|0)!=(0|0); //@line 790 "../../iup_split.c"
    if ($216) {
     $217 = $5; //@line 791 "../../iup_split.c"
     $218 = $2; //@line 791 "../../iup_split.c"
     $219 = ((($218)) + 52|0); //@line 791 "../../iup_split.c"
     $220 = HEAP32[$219>>2]|0; //@line 791 "../../iup_split.c"
     $221 = HEAP32[$9>>2]|0; //@line 791 "../../iup_split.c"
     $222 = $3; //@line 791 "../../iup_split.c"
     _iupBaseSetCurrentSize($217,$220,$221,$222); //@line 791 "../../iup_split.c"
    }
   }
  }
 }
 $223 = $4; //@line 796 "../../iup_split.c"
 $224 = $2; //@line 796 "../../iup_split.c"
 $225 = ((($224)) + 72|0); //@line 796 "../../iup_split.c"
 $226 = HEAP32[$225>>2]|0; //@line 796 "../../iup_split.c"
 $227 = ((($226)) + 36|0); //@line 796 "../../iup_split.c"
 $228 = HEAP32[$227>>2]|0; //@line 796 "../../iup_split.c"
 $229 = ($223|0)!=($228|0); //@line 796 "../../iup_split.c"
 if (!($229)) {
  STACKTOP = sp;return; //@line 798 "../../iup_split.c"
 }
 $230 = $2; //@line 797 "../../iup_split.c"
 _iupBaseCallValueChangedCb($230); //@line 797 "../../iup_split.c"
 STACKTOP = sp;return; //@line 798 "../../iup_split.c"
}
function _iSplitSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = 0; //@line 802 "../../iup_split.c"
 $8 = $3; //@line 803 "../../iup_split.c"
 $9 = ((($8)) + 64|0); //@line 803 "../../iup_split.c"
 $10 = HEAP32[$9>>2]|0; //@line 803 "../../iup_split.c"
 $11 = ((($10)) + 68|0); //@line 803 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 803 "../../iup_split.c"
 $6 = $12; //@line 803 "../../iup_split.c"
 $13 = $6; //@line 804 "../../iup_split.c"
 $14 = ($13|0)!=(0|0); //@line 804 "../../iup_split.c"
 if ($14) {
  $15 = $6; //@line 805 "../../iup_split.c"
  $16 = ((($15)) + 68|0); //@line 805 "../../iup_split.c"
  $17 = HEAP32[$16>>2]|0; //@line 805 "../../iup_split.c"
  $7 = $17; //@line 805 "../../iup_split.c"
 }
 $18 = $3; //@line 807 "../../iup_split.c"
 $19 = ((($18)) + 72|0); //@line 807 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 807 "../../iup_split.c"
 $21 = ((($20)) + 32|0); //@line 807 "../../iup_split.c"
 $22 = HEAP32[$21>>2]|0; //@line 807 "../../iup_split.c"
 $23 = ($22|0)==(0); //@line 807 "../../iup_split.c"
 $24 = $6; //@line 809 "../../iup_split.c"
 $25 = ($24|0)!=(0|0); //@line 809 "../../iup_split.c"
 if ($23) {
  if ($25) {
   $26 = $6; //@line 810 "../../iup_split.c"
   $27 = $4; //@line 810 "../../iup_split.c"
   $28 = $5; //@line 810 "../../iup_split.c"
   _iupBaseSetPosition($26,$27,$28); //@line 810 "../../iup_split.c"
  }
  $29 = $3; //@line 813 "../../iup_split.c"
  $30 = (_iSplitGetWidth1($29)|0); //@line 813 "../../iup_split.c"
  $31 = $4; //@line 813 "../../iup_split.c"
  $32 = (($31) + ($30))|0; //@line 813 "../../iup_split.c"
  $4 = $32; //@line 813 "../../iup_split.c"
  $33 = $3; //@line 814 "../../iup_split.c"
  $34 = ((($33)) + 64|0); //@line 814 "../../iup_split.c"
  $35 = HEAP32[$34>>2]|0; //@line 814 "../../iup_split.c"
  $36 = $4; //@line 814 "../../iup_split.c"
  $37 = $5; //@line 814 "../../iup_split.c"
  _iupBaseSetPosition($35,$36,$37); //@line 814 "../../iup_split.c"
  $38 = $7; //@line 816 "../../iup_split.c"
  $39 = ($38|0)!=(0|0); //@line 816 "../../iup_split.c"
  if (!($39)) {
   STACKTOP = sp;return; //@line 837 "../../iup_split.c"
  }
  $40 = $3; //@line 818 "../../iup_split.c"
  $41 = ((($40)) + 72|0); //@line 818 "../../iup_split.c"
  $42 = HEAP32[$41>>2]|0; //@line 818 "../../iup_split.c"
  $43 = ((($42)) + 28|0); //@line 818 "../../iup_split.c"
  $44 = HEAP32[$43>>2]|0; //@line 818 "../../iup_split.c"
  $45 = $4; //@line 818 "../../iup_split.c"
  $46 = (($45) + ($44))|0; //@line 818 "../../iup_split.c"
  $4 = $46; //@line 818 "../../iup_split.c"
  $47 = $7; //@line 819 "../../iup_split.c"
  $48 = $4; //@line 819 "../../iup_split.c"
  $49 = $5; //@line 819 "../../iup_split.c"
  _iupBaseSetPosition($47,$48,$49); //@line 819 "../../iup_split.c"
  STACKTOP = sp;return; //@line 837 "../../iup_split.c"
 } else {
  if ($25) {
   $50 = $6; //@line 825 "../../iup_split.c"
   $51 = $4; //@line 825 "../../iup_split.c"
   $52 = $5; //@line 825 "../../iup_split.c"
   _iupBaseSetPosition($50,$51,$52); //@line 825 "../../iup_split.c"
  }
  $53 = $3; //@line 828 "../../iup_split.c"
  $54 = (_iSplitGetHeight1($53)|0); //@line 828 "../../iup_split.c"
  $55 = $5; //@line 828 "../../iup_split.c"
  $56 = (($55) + ($54))|0; //@line 828 "../../iup_split.c"
  $5 = $56; //@line 828 "../../iup_split.c"
  $57 = $3; //@line 829 "../../iup_split.c"
  $58 = ((($57)) + 64|0); //@line 829 "../../iup_split.c"
  $59 = HEAP32[$58>>2]|0; //@line 829 "../../iup_split.c"
  $60 = $4; //@line 829 "../../iup_split.c"
  $61 = $5; //@line 829 "../../iup_split.c"
  _iupBaseSetPosition($59,$60,$61); //@line 829 "../../iup_split.c"
  $62 = $7; //@line 831 "../../iup_split.c"
  $63 = ($62|0)!=(0|0); //@line 831 "../../iup_split.c"
  if (!($63)) {
   STACKTOP = sp;return; //@line 837 "../../iup_split.c"
  }
  $64 = $3; //@line 833 "../../iup_split.c"
  $65 = ((($64)) + 72|0); //@line 833 "../../iup_split.c"
  $66 = HEAP32[$65>>2]|0; //@line 833 "../../iup_split.c"
  $67 = ((($66)) + 28|0); //@line 833 "../../iup_split.c"
  $68 = HEAP32[$67>>2]|0; //@line 833 "../../iup_split.c"
  $69 = $5; //@line 833 "../../iup_split.c"
  $70 = (($69) + ($68))|0; //@line 833 "../../iup_split.c"
  $5 = $70; //@line 833 "../../iup_split.c"
  $71 = $7; //@line 834 "../../iup_split.c"
  $72 = $4; //@line 834 "../../iup_split.c"
  $73 = $5; //@line 834 "../../iup_split.c"
  _iupBaseSetPosition($71,$72,$73); //@line 834 "../../iup_split.c"
  STACKTOP = sp;return; //@line 837 "../../iup_split.c"
 }
}
function _iSplitGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 444 "../../iup_split.c"
 $5 = ((($4)) + 52|0); //@line 444 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 444 "../../iup_split.c"
 $2 = $6; //@line 444 "../../iup_split.c"
 $7 = $1; //@line 445 "../../iup_split.c"
 $8 = ((($7)) + 56|0); //@line 445 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 445 "../../iup_split.c"
 $3 = $9; //@line 445 "../../iup_split.c"
 $10 = $1; //@line 447 "../../iup_split.c"
 $11 = ((($10)) + 72|0); //@line 447 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 447 "../../iup_split.c"
 $13 = ((($12)) + 32|0); //@line 447 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 447 "../../iup_split.c"
 $15 = ($14|0)==(0); //@line 447 "../../iup_split.c"
 $16 = $1; //@line 448 "../../iup_split.c"
 $17 = ((($16)) + 72|0); //@line 448 "../../iup_split.c"
 $18 = HEAP32[$17>>2]|0; //@line 448 "../../iup_split.c"
 $19 = ((($18)) + 28|0); //@line 448 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 448 "../../iup_split.c"
 if ($15) {
  $21 = $2; //@line 448 "../../iup_split.c"
  $22 = (($21) - ($20))|0; //@line 448 "../../iup_split.c"
  $2 = $22; //@line 448 "../../iup_split.c"
 } else {
  $23 = $3; //@line 450 "../../iup_split.c"
  $24 = (($23) - ($20))|0; //@line 450 "../../iup_split.c"
  $3 = $24; //@line 450 "../../iup_split.c"
 }
 $25 = $2; //@line 452 "../../iup_split.c"
 $26 = ($25|0)<(0); //@line 452 "../../iup_split.c"
 if ($26) {
  $2 = 0; //@line 452 "../../iup_split.c"
 }
 $27 = $3; //@line 453 "../../iup_split.c"
 $28 = ($27|0)<(0); //@line 453 "../../iup_split.c"
 if (!($28)) {
  $29 = $2; //@line 454 "../../iup_split.c"
  $30 = $3; //@line 454 "../../iup_split.c"
  $31 = (_iupStrReturnIntInt($29,$30,120)|0); //@line 454 "../../iup_split.c"
  STACKTOP = sp;return ($31|0); //@line 454 "../../iup_split.c"
 }
 $3 = 0; //@line 453 "../../iup_split.c"
 $29 = $2; //@line 454 "../../iup_split.c"
 $30 = $3; //@line 454 "../../iup_split.c"
 $31 = (_iupStrReturnIntInt($29,$30,120)|0); //@line 454 "../../iup_split.c"
 STACKTOP = sp;return ($31|0); //@line 454 "../../iup_split.c"
}
function _iSplitSetColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 460 "../../iup_split.c"
 _IupUpdate($4); //@line 460 "../../iup_split.c"
 STACKTOP = sp;return 1; //@line 461 "../../iup_split.c"
}
function _iSplitSetOrientationAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 466 "../../iup_split.c"
 $6 = ((($5)) + 16|0); //@line 466 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 466 "../../iup_split.c"
 $8 = ($7|0)!=(0|0); //@line 466 "../../iup_split.c"
 if ($8) {
  $2 = 0; //@line 467 "../../iup_split.c"
  $25 = $2; //@line 480 "../../iup_split.c"
  STACKTOP = sp;return ($25|0); //@line 480 "../../iup_split.c"
 }
 $9 = $4; //@line 469 "../../iup_split.c"
 $10 = (_iupStrEqualNoCase($9,19951)|0); //@line 469 "../../iup_split.c"
 $11 = ($10|0)!=(0); //@line 469 "../../iup_split.c"
 $12 = $3; //@line 470 "../../iup_split.c"
 $13 = ((($12)) + 72|0); //@line 470 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 470 "../../iup_split.c"
 $15 = ((($14)) + 32|0); //@line 470 "../../iup_split.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 470 "../../iup_split.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 472 "../../iup_split.c"
 }
 $16 = $3; //@line 474 "../../iup_split.c"
 $17 = ((($16)) + 72|0); //@line 474 "../../iup_split.c"
 $18 = HEAP32[$17>>2]|0; //@line 474 "../../iup_split.c"
 $19 = ((($18)) + 32|0); //@line 474 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 474 "../../iup_split.c"
 $21 = ($20|0)==(0); //@line 474 "../../iup_split.c"
 $22 = $3; //@line 475 "../../iup_split.c"
 $23 = ((($22)) + 64|0); //@line 475 "../../iup_split.c"
 $24 = HEAP32[$23>>2]|0; //@line 475 "../../iup_split.c"
 if ($21) {
  _IupSetAttribute($24,15959,15966); //@line 475 "../../iup_split.c"
 } else {
  _IupSetAttribute($24,15959,15980); //@line 477 "../../iup_split.c"
 }
 $2 = 0; //@line 479 "../../iup_split.c"
 $25 = $2; //@line 480 "../../iup_split.c"
 STACKTOP = sp;return ($25|0); //@line 480 "../../iup_split.c"
}
function _iSplitGetValueAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 509 "../../iup_split.c"
 $3 = ((($2)) + 72|0); //@line 509 "../../iup_split.c"
 $4 = HEAP32[$3>>2]|0; //@line 509 "../../iup_split.c"
 $5 = ((($4)) + 36|0); //@line 509 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 509 "../../iup_split.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 509 "../../iup_split.c"
 STACKTOP = sp;return ($7|0); //@line 509 "../../iup_split.c"
}
function _iSplitSetValueAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 484 "../../iup_split.c"
 $6 = ($5|0)!=(0|0); //@line 484 "../../iup_split.c"
 if (!($6)) {
  $7 = $2; //@line 486 "../../iup_split.c"
  $8 = ((($7)) + 72|0); //@line 486 "../../iup_split.c"
  $9 = HEAP32[$8>>2]|0; //@line 486 "../../iup_split.c"
  $10 = ((($9)) + 36|0); //@line 486 "../../iup_split.c"
  HEAP32[$10>>2] = -1; //@line 486 "../../iup_split.c"
  $11 = $2; //@line 488 "../../iup_split.c"
  $12 = ((($11)) + 16|0); //@line 488 "../../iup_split.c"
  $13 = HEAP32[$12>>2]|0; //@line 488 "../../iup_split.c"
  $14 = ($13|0)!=(0|0); //@line 488 "../../iup_split.c"
  if (!($14)) {
   STACKTOP = sp;return 0; //@line 504 "../../iup_split.c"
  }
  $15 = $2; //@line 489 "../../iup_split.c"
  _IupRefreshChildren($15); //@line 489 "../../iup_split.c"
  STACKTOP = sp;return 0; //@line 504 "../../iup_split.c"
 }
 $16 = $3; //@line 494 "../../iup_split.c"
 $17 = (_iupStrToInt($16,$4)|0); //@line 494 "../../iup_split.c"
 $18 = ($17|0)!=(0); //@line 494 "../../iup_split.c"
 if (!($18)) {
  STACKTOP = sp;return 0; //@line 504 "../../iup_split.c"
 }
 $19 = HEAP32[$4>>2]|0; //@line 496 "../../iup_split.c"
 $20 = $2; //@line 496 "../../iup_split.c"
 $21 = ((($20)) + 72|0); //@line 496 "../../iup_split.c"
 $22 = HEAP32[$21>>2]|0; //@line 496 "../../iup_split.c"
 $23 = ((($22)) + 36|0); //@line 496 "../../iup_split.c"
 HEAP32[$23>>2] = $19; //@line 496 "../../iup_split.c"
 $24 = $2; //@line 497 "../../iup_split.c"
 _iSplitAdjustVal($24); //@line 497 "../../iup_split.c"
 $25 = $2; //@line 499 "../../iup_split.c"
 $26 = ((($25)) + 16|0); //@line 499 "../../iup_split.c"
 $27 = HEAP32[$26>>2]|0; //@line 499 "../../iup_split.c"
 $28 = ($27|0)!=(0|0); //@line 499 "../../iup_split.c"
 if (!($28)) {
  STACKTOP = sp;return 0; //@line 504 "../../iup_split.c"
 }
 $29 = $2; //@line 500 "../../iup_split.c"
 _IupRefreshChildren($29); //@line 500 "../../iup_split.c"
 STACKTOP = sp;return 0; //@line 504 "../../iup_split.c"
}
function _iSplitGetLayoutDragAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 569 "../../iup_split.c"
 $3 = ((($2)) + 72|0); //@line 569 "../../iup_split.c"
 $4 = HEAP32[$3>>2]|0; //@line 569 "../../iup_split.c"
 $5 = ((($4)) + 16|0); //@line 569 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 569 "../../iup_split.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 569 "../../iup_split.c"
 STACKTOP = sp;return ($7|0); //@line 569 "../../iup_split.c"
}
function _iSplitSetLayoutDragAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 559 "../../iup_split.c"
 $5 = (_iupStrBoolean($4)|0); //@line 559 "../../iup_split.c"
 $6 = ($5|0)!=(0); //@line 559 "../../iup_split.c"
 $7 = $2; //@line 560 "../../iup_split.c"
 $8 = ((($7)) + 72|0); //@line 560 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 560 "../../iup_split.c"
 $10 = ((($9)) + 16|0); //@line 560 "../../iup_split.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 560 "../../iup_split.c"
  STACKTOP = sp;return 0; //@line 564 "../../iup_split.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 562 "../../iup_split.c"
  STACKTOP = sp;return 0; //@line 564 "../../iup_split.c"
 }
 return (0)|0;
}
function _iSplitGetShowGripAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 594 "../../iup_split.c"
 $4 = ((($3)) + 72|0); //@line 594 "../../iup_split.c"
 $5 = HEAP32[$4>>2]|0; //@line 594 "../../iup_split.c"
 $6 = ((($5)) + 24|0); //@line 594 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 594 "../../iup_split.c"
 $8 = ($7|0)==(2); //@line 594 "../../iup_split.c"
 if ($8) {
  $1 = 15953; //@line 595 "../../iup_split.c"
  $15 = $1; //@line 598 "../../iup_split.c"
  STACKTOP = sp;return ($15|0); //@line 598 "../../iup_split.c"
 } else {
  $9 = $2; //@line 597 "../../iup_split.c"
  $10 = ((($9)) + 72|0); //@line 597 "../../iup_split.c"
  $11 = HEAP32[$10>>2]|0; //@line 597 "../../iup_split.c"
  $12 = ((($11)) + 24|0); //@line 597 "../../iup_split.c"
  $13 = HEAP32[$12>>2]|0; //@line 597 "../../iup_split.c"
  $14 = (_iupStrReturnBoolean($13)|0); //@line 597 "../../iup_split.c"
  $1 = $14; //@line 597 "../../iup_split.c"
  $15 = $1; //@line 598 "../../iup_split.c"
  STACKTOP = sp;return ($15|0); //@line 598 "../../iup_split.c"
 }
 return (0)|0;
}
function _iSplitSetShowGripAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 574 "../../iup_split.c"
 $5 = (_iupStrBoolean($4)|0); //@line 574 "../../iup_split.c"
 $6 = ($5|0)!=(0); //@line 574 "../../iup_split.c"
 if ($6) {
  $7 = $2; //@line 575 "../../iup_split.c"
  $8 = ((($7)) + 72|0); //@line 575 "../../iup_split.c"
  $9 = HEAP32[$8>>2]|0; //@line 575 "../../iup_split.c"
  $10 = ((($9)) + 24|0); //@line 575 "../../iup_split.c"
  HEAP32[$10>>2] = 1; //@line 575 "../../iup_split.c"
  STACKTOP = sp;return 0; //@line 589 "../../iup_split.c"
 }
 $11 = $3; //@line 578 "../../iup_split.c"
 $12 = (_iupStrEqualNoCase($11,15953)|0); //@line 578 "../../iup_split.c"
 $13 = ($12|0)!=(0); //@line 578 "../../iup_split.c"
 $14 = $2; //@line 579 "../../iup_split.c"
 $15 = ((($14)) + 72|0); //@line 579 "../../iup_split.c"
 $16 = HEAP32[$15>>2]|0; //@line 579 "../../iup_split.c"
 $17 = ((($16)) + 24|0); //@line 579 "../../iup_split.c"
 if ($13) {
  HEAP32[$17>>2] = 2; //@line 579 "../../iup_split.c"
  STACKTOP = sp;return 0; //@line 589 "../../iup_split.c"
 }
 HEAP32[$17>>2] = 0; //@line 582 "../../iup_split.c"
 $18 = $2; //@line 584 "../../iup_split.c"
 $19 = ((($18)) + 72|0); //@line 584 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 584 "../../iup_split.c"
 $21 = ((($20)) + 28|0); //@line 584 "../../iup_split.c"
 $22 = HEAP32[$21>>2]|0; //@line 584 "../../iup_split.c"
 $23 = ($22|0)==(5); //@line 584 "../../iup_split.c"
 if (!($23)) {
  STACKTOP = sp;return 0; //@line 589 "../../iup_split.c"
 }
 $24 = $2; //@line 585 "../../iup_split.c"
 (_iSplitSetBarSizeAttrib($24,19562)|0); //@line 585 "../../iup_split.c"
 STACKTOP = sp;return 0; //@line 589 "../../iup_split.c"
}
function _iSplitGetAutoHideAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 629 "../../iup_split.c"
 $3 = ((($2)) + 72|0); //@line 629 "../../iup_split.c"
 $4 = HEAP32[$3>>2]|0; //@line 629 "../../iup_split.c"
 $5 = ((($4)) + 20|0); //@line 629 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 629 "../../iup_split.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 629 "../../iup_split.c"
 STACKTOP = sp;return ($7|0); //@line 629 "../../iup_split.c"
}
function _iSplitSetAutoHideAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 602 "../../iup_split.c"
 $7 = (_iupStrBoolean($6)|0); //@line 602 "../../iup_split.c"
 $8 = ($7|0)!=(0); //@line 602 "../../iup_split.c"
 $9 = $2; //@line 603 "../../iup_split.c"
 if ($8) {
  $10 = ((($9)) + 72|0); //@line 603 "../../iup_split.c"
  $11 = HEAP32[$10>>2]|0; //@line 603 "../../iup_split.c"
  $12 = ((($11)) + 20|0); //@line 603 "../../iup_split.c"
  HEAP32[$12>>2] = 1; //@line 603 "../../iup_split.c"
 } else {
  $13 = ((($9)) + 64|0); //@line 606 "../../iup_split.c"
  $14 = HEAP32[$13>>2]|0; //@line 606 "../../iup_split.c"
  $15 = ((($14)) + 68|0); //@line 606 "../../iup_split.c"
  $16 = HEAP32[$15>>2]|0; //@line 606 "../../iup_split.c"
  $4 = $16; //@line 606 "../../iup_split.c"
  $17 = $4; //@line 607 "../../iup_split.c"
  $18 = ($17|0)!=(0|0); //@line 607 "../../iup_split.c"
  if ($18) {
   $19 = $4; //@line 609 "../../iup_split.c"
   $20 = ((($19)) + 68|0); //@line 609 "../../iup_split.c"
   $21 = HEAP32[$20>>2]|0; //@line 609 "../../iup_split.c"
   $5 = $21; //@line 609 "../../iup_split.c"
   $22 = $4; //@line 610 "../../iup_split.c"
   _iSplitAutoHideChild($22,1); //@line 610 "../../iup_split.c"
   $23 = $5; //@line 611 "../../iup_split.c"
   $24 = ($23|0)!=(0|0); //@line 611 "../../iup_split.c"
   if ($24) {
    $25 = $5; //@line 612 "../../iup_split.c"
    _iSplitAutoHideChild($25,1); //@line 612 "../../iup_split.c"
   }
  }
  $26 = $2; //@line 615 "../../iup_split.c"
  $27 = ((($26)) + 72|0); //@line 615 "../../iup_split.c"
  $28 = HEAP32[$27>>2]|0; //@line 615 "../../iup_split.c"
  $29 = ((($28)) + 20|0); //@line 615 "../../iup_split.c"
  HEAP32[$29>>2] = 0; //@line 615 "../../iup_split.c"
 }
 $30 = $2; //@line 618 "../../iup_split.c"
 $31 = ((($30)) + 72|0); //@line 618 "../../iup_split.c"
 $32 = HEAP32[$31>>2]|0; //@line 618 "../../iup_split.c"
 $33 = ((($32)) + 36|0); //@line 618 "../../iup_split.c"
 $34 = HEAP32[$33>>2]|0; //@line 618 "../../iup_split.c"
 $35 = ($34|0)!=(-1); //@line 618 "../../iup_split.c"
 if ($35) {
  $36 = $2; //@line 619 "../../iup_split.c"
  _iSplitAdjustVal($36); //@line 619 "../../iup_split.c"
 }
 $37 = $2; //@line 621 "../../iup_split.c"
 $38 = ((($37)) + 16|0); //@line 621 "../../iup_split.c"
 $39 = HEAP32[$38>>2]|0; //@line 621 "../../iup_split.c"
 $40 = ($39|0)!=(0|0); //@line 621 "../../iup_split.c"
 if (!($40)) {
  STACKTOP = sp;return 0; //@line 624 "../../iup_split.c"
 }
 $41 = $2; //@line 622 "../../iup_split.c"
 _IupRefreshChildren($41); //@line 622 "../../iup_split.c"
 STACKTOP = sp;return 0; //@line 624 "../../iup_split.c"
}
function _iSplitGetBarSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 527 "../../iup_split.c"
 $3 = ((($2)) + 72|0); //@line 527 "../../iup_split.c"
 $4 = HEAP32[$3>>2]|0; //@line 527 "../../iup_split.c"
 $5 = ((($4)) + 28|0); //@line 527 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 527 "../../iup_split.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 527 "../../iup_split.c"
 STACKTOP = sp;return ($7|0); //@line 527 "../../iup_split.c"
}
function _iSplitSetBarSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 514 "../../iup_split.c"
 $5 = $2; //@line 514 "../../iup_split.c"
 $6 = ((($5)) + 72|0); //@line 514 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 514 "../../iup_split.c"
 $8 = ((($7)) + 28|0); //@line 514 "../../iup_split.c"
 $9 = (_iupStrToInt($4,$8)|0); //@line 514 "../../iup_split.c"
 $10 = ($9|0)!=(0); //@line 514 "../../iup_split.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 522 "../../iup_split.c"
 }
 $11 = $2; //@line 516 "../../iup_split.c"
 $12 = ((($11)) + 72|0); //@line 516 "../../iup_split.c"
 $13 = HEAP32[$12>>2]|0; //@line 516 "../../iup_split.c"
 $14 = ((($13)) + 36|0); //@line 516 "../../iup_split.c"
 $15 = HEAP32[$14>>2]|0; //@line 516 "../../iup_split.c"
 $16 = ($15|0)!=(-1); //@line 516 "../../iup_split.c"
 if ($16) {
  $17 = $2; //@line 517 "../../iup_split.c"
  _iSplitAdjustVal($17); //@line 517 "../../iup_split.c"
 }
 $18 = $2; //@line 519 "../../iup_split.c"
 $19 = ((($18)) + 16|0); //@line 519 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 519 "../../iup_split.c"
 $21 = ($20|0)!=(0|0); //@line 519 "../../iup_split.c"
 if (!($21)) {
  STACKTOP = sp;return 0; //@line 522 "../../iup_split.c"
 }
 $22 = $2; //@line 520 "../../iup_split.c"
 _IupRefreshChildren($22); //@line 520 "../../iup_split.c"
 STACKTOP = sp;return 0; //@line 522 "../../iup_split.c"
}
function _iSplitGetMinMaxAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 554 "../../iup_split.c"
 $3 = ((($2)) + 72|0); //@line 554 "../../iup_split.c"
 $4 = HEAP32[$3>>2]|0; //@line 554 "../../iup_split.c"
 $5 = ((($4)) + 40|0); //@line 554 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 554 "../../iup_split.c"
 $7 = $1; //@line 554 "../../iup_split.c"
 $8 = ((($7)) + 72|0); //@line 554 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 554 "../../iup_split.c"
 $10 = ((($9)) + 44|0); //@line 554 "../../iup_split.c"
 $11 = HEAP32[$10>>2]|0; //@line 554 "../../iup_split.c"
 $12 = (_iupStrReturnIntInt($6,$11,58)|0); //@line 554 "../../iup_split.c"
 STACKTOP = sp;return ($12|0); //@line 554 "../../iup_split.c"
}
function _iSplitSetMinMaxAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $3; //@line 532 "../../iup_split.c"
 $6 = $2; //@line 532 "../../iup_split.c"
 $7 = ((($6)) + 72|0); //@line 532 "../../iup_split.c"
 $8 = HEAP32[$7>>2]|0; //@line 532 "../../iup_split.c"
 $9 = ((($8)) + 40|0); //@line 532 "../../iup_split.c"
 $10 = $2; //@line 532 "../../iup_split.c"
 $11 = ((($10)) + 72|0); //@line 532 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 532 "../../iup_split.c"
 $13 = ((($12)) + 44|0); //@line 532 "../../iup_split.c"
 $14 = (_iupStrToIntInt($5,$9,$13,58)|0); //@line 532 "../../iup_split.c"
 $15 = ($14|0)!=(0); //@line 532 "../../iup_split.c"
 if (!($15)) {
  STACKTOP = sp;return 0; //@line 549 "../../iup_split.c"
 }
 $16 = $2; //@line 534 "../../iup_split.c"
 $17 = ((($16)) + 72|0); //@line 534 "../../iup_split.c"
 $18 = HEAP32[$17>>2]|0; //@line 534 "../../iup_split.c"
 $19 = ((($18)) + 40|0); //@line 534 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 534 "../../iup_split.c"
 $21 = $2; //@line 534 "../../iup_split.c"
 $22 = ((($21)) + 72|0); //@line 534 "../../iup_split.c"
 $23 = HEAP32[$22>>2]|0; //@line 534 "../../iup_split.c"
 $24 = ((($23)) + 44|0); //@line 534 "../../iup_split.c"
 $25 = HEAP32[$24>>2]|0; //@line 534 "../../iup_split.c"
 $26 = ($20|0)>($25|0); //@line 534 "../../iup_split.c"
 if ($26) {
  $27 = $2; //@line 536 "../../iup_split.c"
  $28 = ((($27)) + 72|0); //@line 536 "../../iup_split.c"
  $29 = HEAP32[$28>>2]|0; //@line 536 "../../iup_split.c"
  $30 = ((($29)) + 40|0); //@line 536 "../../iup_split.c"
  $31 = HEAP32[$30>>2]|0; //@line 536 "../../iup_split.c"
  $4 = $31; //@line 536 "../../iup_split.c"
  $32 = $2; //@line 537 "../../iup_split.c"
  $33 = ((($32)) + 72|0); //@line 537 "../../iup_split.c"
  $34 = HEAP32[$33>>2]|0; //@line 537 "../../iup_split.c"
  $35 = ((($34)) + 44|0); //@line 537 "../../iup_split.c"
  $36 = HEAP32[$35>>2]|0; //@line 537 "../../iup_split.c"
  $37 = $2; //@line 537 "../../iup_split.c"
  $38 = ((($37)) + 72|0); //@line 537 "../../iup_split.c"
  $39 = HEAP32[$38>>2]|0; //@line 537 "../../iup_split.c"
  $40 = ((($39)) + 40|0); //@line 537 "../../iup_split.c"
  HEAP32[$40>>2] = $36; //@line 537 "../../iup_split.c"
  $41 = $4; //@line 538 "../../iup_split.c"
  $42 = $2; //@line 538 "../../iup_split.c"
  $43 = ((($42)) + 72|0); //@line 538 "../../iup_split.c"
  $44 = HEAP32[$43>>2]|0; //@line 538 "../../iup_split.c"
  $45 = ((($44)) + 44|0); //@line 538 "../../iup_split.c"
  HEAP32[$45>>2] = $41; //@line 538 "../../iup_split.c"
 }
 $46 = $2; //@line 540 "../../iup_split.c"
 $47 = ((($46)) + 72|0); //@line 540 "../../iup_split.c"
 $48 = HEAP32[$47>>2]|0; //@line 540 "../../iup_split.c"
 $49 = ((($48)) + 40|0); //@line 540 "../../iup_split.c"
 $50 = HEAP32[$49>>2]|0; //@line 540 "../../iup_split.c"
 $51 = ($50|0)<(0); //@line 540 "../../iup_split.c"
 if ($51) {
  $52 = $2; //@line 540 "../../iup_split.c"
  $53 = ((($52)) + 72|0); //@line 540 "../../iup_split.c"
  $54 = HEAP32[$53>>2]|0; //@line 540 "../../iup_split.c"
  $55 = ((($54)) + 40|0); //@line 540 "../../iup_split.c"
  HEAP32[$55>>2] = 0; //@line 540 "../../iup_split.c"
 }
 $56 = $2; //@line 541 "../../iup_split.c"
 $57 = ((($56)) + 72|0); //@line 541 "../../iup_split.c"
 $58 = HEAP32[$57>>2]|0; //@line 541 "../../iup_split.c"
 $59 = ((($58)) + 44|0); //@line 541 "../../iup_split.c"
 $60 = HEAP32[$59>>2]|0; //@line 541 "../../iup_split.c"
 $61 = ($60|0)>(1000); //@line 541 "../../iup_split.c"
 if ($61) {
  $62 = $2; //@line 541 "../../iup_split.c"
  $63 = ((($62)) + 72|0); //@line 541 "../../iup_split.c"
  $64 = HEAP32[$63>>2]|0; //@line 541 "../../iup_split.c"
  $65 = ((($64)) + 44|0); //@line 541 "../../iup_split.c"
  HEAP32[$65>>2] = 1000; //@line 541 "../../iup_split.c"
 }
 $66 = $2; //@line 543 "../../iup_split.c"
 $67 = ((($66)) + 72|0); //@line 543 "../../iup_split.c"
 $68 = HEAP32[$67>>2]|0; //@line 543 "../../iup_split.c"
 $69 = ((($68)) + 36|0); //@line 543 "../../iup_split.c"
 $70 = HEAP32[$69>>2]|0; //@line 543 "../../iup_split.c"
 $71 = ($70|0)!=(-1); //@line 543 "../../iup_split.c"
 if ($71) {
  $72 = $2; //@line 544 "../../iup_split.c"
  _iSplitAdjustVal($72); //@line 544 "../../iup_split.c"
 }
 $73 = $2; //@line 546 "../../iup_split.c"
 $74 = ((($73)) + 16|0); //@line 546 "../../iup_split.c"
 $75 = HEAP32[$74>>2]|0; //@line 546 "../../iup_split.c"
 $76 = ($75|0)!=(0|0); //@line 546 "../../iup_split.c"
 if (!($76)) {
  STACKTOP = sp;return 0; //@line 549 "../../iup_split.c"
 }
 $77 = $2; //@line 547 "../../iup_split.c"
 _IupRefreshChildren($77); //@line 547 "../../iup_split.c"
 STACKTOP = sp;return 0; //@line 549 "../../iup_split.c"
}
function _iSplitAdjustVal($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 139 "../../iup_split.c"
 $3 = ((($2)) + 72|0); //@line 139 "../../iup_split.c"
 $4 = HEAP32[$3>>2]|0; //@line 139 "../../iup_split.c"
 $5 = ((($4)) + 36|0); //@line 139 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 139 "../../iup_split.c"
 $7 = $1; //@line 139 "../../iup_split.c"
 $8 = ((($7)) + 72|0); //@line 139 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 139 "../../iup_split.c"
 $10 = ((($9)) + 40|0); //@line 139 "../../iup_split.c"
 $11 = HEAP32[$10>>2]|0; //@line 139 "../../iup_split.c"
 $12 = ($6|0)<($11|0); //@line 139 "../../iup_split.c"
 if ($12) {
  $13 = $1; //@line 140 "../../iup_split.c"
  $14 = ((($13)) + 72|0); //@line 140 "../../iup_split.c"
  $15 = HEAP32[$14>>2]|0; //@line 140 "../../iup_split.c"
  $16 = ((($15)) + 40|0); //@line 140 "../../iup_split.c"
  $17 = HEAP32[$16>>2]|0; //@line 140 "../../iup_split.c"
  $18 = $1; //@line 140 "../../iup_split.c"
  $19 = ((($18)) + 72|0); //@line 140 "../../iup_split.c"
  $20 = HEAP32[$19>>2]|0; //@line 140 "../../iup_split.c"
  $21 = ((($20)) + 36|0); //@line 140 "../../iup_split.c"
  HEAP32[$21>>2] = $17; //@line 140 "../../iup_split.c"
 }
 $22 = $1; //@line 141 "../../iup_split.c"
 $23 = ((($22)) + 72|0); //@line 141 "../../iup_split.c"
 $24 = HEAP32[$23>>2]|0; //@line 141 "../../iup_split.c"
 $25 = ((($24)) + 36|0); //@line 141 "../../iup_split.c"
 $26 = HEAP32[$25>>2]|0; //@line 141 "../../iup_split.c"
 $27 = $1; //@line 141 "../../iup_split.c"
 $28 = ((($27)) + 72|0); //@line 141 "../../iup_split.c"
 $29 = HEAP32[$28>>2]|0; //@line 141 "../../iup_split.c"
 $30 = ((($29)) + 44|0); //@line 141 "../../iup_split.c"
 $31 = HEAP32[$30>>2]|0; //@line 141 "../../iup_split.c"
 $32 = ($26|0)>($31|0); //@line 141 "../../iup_split.c"
 if ($32) {
  $33 = $1; //@line 142 "../../iup_split.c"
  $34 = ((($33)) + 72|0); //@line 142 "../../iup_split.c"
  $35 = HEAP32[$34>>2]|0; //@line 142 "../../iup_split.c"
  $36 = ((($35)) + 44|0); //@line 142 "../../iup_split.c"
  $37 = HEAP32[$36>>2]|0; //@line 142 "../../iup_split.c"
  $38 = $1; //@line 142 "../../iup_split.c"
  $39 = ((($38)) + 72|0); //@line 142 "../../iup_split.c"
  $40 = HEAP32[$39>>2]|0; //@line 142 "../../iup_split.c"
  $41 = ((($40)) + 36|0); //@line 142 "../../iup_split.c"
  HEAP32[$41>>2] = $37; //@line 142 "../../iup_split.c"
 }
 $42 = $1; //@line 144 "../../iup_split.c"
 $43 = ((($42)) + 72|0); //@line 144 "../../iup_split.c"
 $44 = HEAP32[$43>>2]|0; //@line 144 "../../iup_split.c"
 $45 = ((($44)) + 20|0); //@line 144 "../../iup_split.c"
 $46 = HEAP32[$45>>2]|0; //@line 144 "../../iup_split.c"
 $47 = ($46|0)!=(0); //@line 144 "../../iup_split.c"
 if (!($47)) {
  STACKTOP = sp;return; //@line 146 "../../iup_split.c"
 }
 $48 = $1; //@line 145 "../../iup_split.c"
 _iSplitAutoHide($48); //@line 145 "../../iup_split.c"
 STACKTOP = sp;return; //@line 146 "../../iup_split.c"
}
function _iSplitAutoHide($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 65 "../../iup_split.c"
 $6 = ((($5)) + 64|0); //@line 65 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 65 "../../iup_split.c"
 $8 = ((($7)) + 68|0); //@line 65 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 65 "../../iup_split.c"
 $2 = $9; //@line 65 "../../iup_split.c"
 $10 = $2; //@line 66 "../../iup_split.c"
 $11 = ($10|0)!=(0|0); //@line 66 "../../iup_split.c"
 if (!($11)) {
  STACKTOP = sp;return; //@line 91 "../../iup_split.c"
 }
 $12 = $2; //@line 69 "../../iup_split.c"
 $13 = ((($12)) + 68|0); //@line 69 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 69 "../../iup_split.c"
 $4 = $14; //@line 69 "../../iup_split.c"
 $15 = $1; //@line 71 "../../iup_split.c"
 $16 = ((($15)) + 72|0); //@line 71 "../../iup_split.c"
 $17 = HEAP32[$16>>2]|0; //@line 71 "../../iup_split.c"
 $18 = ((($17)) + 32|0); //@line 71 "../../iup_split.c"
 $19 = HEAP32[$18>>2]|0; //@line 71 "../../iup_split.c"
 $20 = ($19|0)==(0); //@line 71 "../../iup_split.c"
 $21 = $1; //@line 73 "../../iup_split.c"
 do {
  if ($20) {
   $22 = ((($21)) + 52|0); //@line 73 "../../iup_split.c"
   $23 = HEAP32[$22>>2]|0; //@line 73 "../../iup_split.c"
   $24 = $1; //@line 73 "../../iup_split.c"
   $25 = ((($24)) + 72|0); //@line 73 "../../iup_split.c"
   $26 = HEAP32[$25>>2]|0; //@line 73 "../../iup_split.c"
   $27 = ((($26)) + 28|0); //@line 73 "../../iup_split.c"
   $28 = HEAP32[$27>>2]|0; //@line 73 "../../iup_split.c"
   $29 = ($23|0)<=($28|0); //@line 73 "../../iup_split.c"
   if ($29) {
    STACKTOP = sp;return; //@line 91 "../../iup_split.c"
   } else {
    $30 = $1; //@line 76 "../../iup_split.c"
    $31 = ((($30)) + 72|0); //@line 76 "../../iup_split.c"
    $32 = HEAP32[$31>>2]|0; //@line 76 "../../iup_split.c"
    $33 = ((($32)) + 28|0); //@line 76 "../../iup_split.c"
    $34 = HEAP32[$33>>2]|0; //@line 76 "../../iup_split.c"
    $35 = ($34*1000)|0; //@line 76 "../../iup_split.c"
    $36 = $1; //@line 76 "../../iup_split.c"
    $37 = ((($36)) + 52|0); //@line 76 "../../iup_split.c"
    $38 = HEAP32[$37>>2]|0; //@line 76 "../../iup_split.c"
    $39 = (($35|0) / ($38|0))&-1; //@line 76 "../../iup_split.c"
    $3 = $39; //@line 76 "../../iup_split.c"
    break;
   }
  } else {
   $40 = ((($21)) + 56|0); //@line 80 "../../iup_split.c"
   $41 = HEAP32[$40>>2]|0; //@line 80 "../../iup_split.c"
   $42 = $1; //@line 80 "../../iup_split.c"
   $43 = ((($42)) + 72|0); //@line 80 "../../iup_split.c"
   $44 = HEAP32[$43>>2]|0; //@line 80 "../../iup_split.c"
   $45 = ((($44)) + 28|0); //@line 80 "../../iup_split.c"
   $46 = HEAP32[$45>>2]|0; //@line 80 "../../iup_split.c"
   $47 = ($41|0)<=($46|0); //@line 80 "../../iup_split.c"
   if ($47) {
    STACKTOP = sp;return; //@line 91 "../../iup_split.c"
   } else {
    $48 = $1; //@line 83 "../../iup_split.c"
    $49 = ((($48)) + 72|0); //@line 83 "../../iup_split.c"
    $50 = HEAP32[$49>>2]|0; //@line 83 "../../iup_split.c"
    $51 = ((($50)) + 28|0); //@line 83 "../../iup_split.c"
    $52 = HEAP32[$51>>2]|0; //@line 83 "../../iup_split.c"
    $53 = ($52*1000)|0; //@line 83 "../../iup_split.c"
    $54 = $1; //@line 83 "../../iup_split.c"
    $55 = ((($54)) + 56|0); //@line 83 "../../iup_split.c"
    $56 = HEAP32[$55>>2]|0; //@line 83 "../../iup_split.c"
    $57 = (($53|0) / ($56|0))&-1; //@line 83 "../../iup_split.c"
    $3 = $57; //@line 83 "../../iup_split.c"
    break;
   }
  }
 } while(0);
 $58 = $2; //@line 86 "../../iup_split.c"
 $59 = $1; //@line 86 "../../iup_split.c"
 $60 = ((($59)) + 72|0); //@line 86 "../../iup_split.c"
 $61 = HEAP32[$60>>2]|0; //@line 86 "../../iup_split.c"
 $62 = ((($61)) + 36|0); //@line 86 "../../iup_split.c"
 $63 = HEAP32[$62>>2]|0; //@line 86 "../../iup_split.c"
 $64 = $3; //@line 86 "../../iup_split.c"
 $65 = ($63|0)<($64|0); //@line 86 "../../iup_split.c"
 $66 = $65 ? 0 : 1; //@line 86 "../../iup_split.c"
 _iSplitAutoHideChild($58,$66); //@line 86 "../../iup_split.c"
 $67 = $4; //@line 88 "../../iup_split.c"
 $68 = ($67|0)!=(0|0); //@line 88 "../../iup_split.c"
 if (!($68)) {
  STACKTOP = sp;return; //@line 91 "../../iup_split.c"
 }
 $69 = $4; //@line 89 "../../iup_split.c"
 $70 = $1; //@line 89 "../../iup_split.c"
 $71 = ((($70)) + 72|0); //@line 89 "../../iup_split.c"
 $72 = HEAP32[$71>>2]|0; //@line 89 "../../iup_split.c"
 $73 = ((($72)) + 36|0); //@line 89 "../../iup_split.c"
 $74 = HEAP32[$73>>2]|0; //@line 89 "../../iup_split.c"
 $75 = $3; //@line 89 "../../iup_split.c"
 $76 = (1000 - ($75))|0; //@line 89 "../../iup_split.c"
 $77 = ($74|0)>($76|0); //@line 89 "../../iup_split.c"
 $78 = $77 ? 0 : 1; //@line 89 "../../iup_split.c"
 _iSplitAutoHideChild($69,$78); //@line 89 "../../iup_split.c"
 STACKTOP = sp;return; //@line 91 "../../iup_split.c"
}
function _iSplitAutoHideChild($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 45 "../../iup_split.c"
 $5 = ($4|0)==(0); //@line 45 "../../iup_split.c"
 $6 = $2; //@line 47 "../../iup_split.c"
 $7 = (_IupGetInt($6,20132)|0); //@line 47 "../../iup_split.c"
 $8 = ($7|0)!=(0); //@line 47 "../../iup_split.c"
 if ($5) {
  if ($8) {
   $9 = $2; //@line 49 "../../iup_split.c"
   _IupSetAttribute($9,15937,15946); //@line 49 "../../iup_split.c"
   $10 = $2; //@line 50 "../../iup_split.c"
   _IupSetAttribute($10,20132,20140); //@line 50 "../../iup_split.c"
  }
 } else {
  if (!($8)) {
   $11 = $2; //@line 57 "../../iup_split.c"
   _IupSetAttribute($11,15937,20140); //@line 57 "../../iup_split.c"
   $12 = $2; //@line 58 "../../iup_split.c"
   _IupSetAttribute($12,20132,20441); //@line 58 "../../iup_split.c"
  }
 }
 STACKTOP = sp;return; //@line 61 "../../iup_split.c"
}
function _iSplitGetWidth1($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 97 "../../iup_split.c"
 $4 = ((($3)) + 52|0); //@line 97 "../../iup_split.c"
 $5 = HEAP32[$4>>2]|0; //@line 97 "../../iup_split.c"
 $6 = $1; //@line 97 "../../iup_split.c"
 $7 = ((($6)) + 72|0); //@line 97 "../../iup_split.c"
 $8 = HEAP32[$7>>2]|0; //@line 97 "../../iup_split.c"
 $9 = ((($8)) + 28|0); //@line 97 "../../iup_split.c"
 $10 = HEAP32[$9>>2]|0; //@line 97 "../../iup_split.c"
 $11 = (($5) - ($10))|0; //@line 97 "../../iup_split.c"
 $12 = $1; //@line 97 "../../iup_split.c"
 $13 = ((($12)) + 72|0); //@line 97 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 97 "../../iup_split.c"
 $15 = ((($14)) + 36|0); //@line 97 "../../iup_split.c"
 $16 = HEAP32[$15>>2]|0; //@line 97 "../../iup_split.c"
 $17 = Math_imul($11, $16)|0; //@line 97 "../../iup_split.c"
 $18 = (+($17|0)); //@line 97 "../../iup_split.c"
 $19 = $18 / 1000.0; //@line 97 "../../iup_split.c"
 $20 = $19 + 0.5; //@line 97 "../../iup_split.c"
 $21 = (~~(($20))); //@line 97 "../../iup_split.c"
 $2 = $21; //@line 97 "../../iup_split.c"
 $22 = $2; //@line 98 "../../iup_split.c"
 $23 = ($22|0)<(0); //@line 98 "../../iup_split.c"
 $$ = $23 ? 0 : $21; //@line 98 "../../iup_split.c"
 $2 = $$; //@line 98 "../../iup_split.c"
 $24 = $2; //@line 99 "../../iup_split.c"
 STACKTOP = sp;return ($24|0); //@line 99 "../../iup_split.c"
}
function _iSplitGetHeight1($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0.0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 115 "../../iup_split.c"
 $4 = ((($3)) + 56|0); //@line 115 "../../iup_split.c"
 $5 = HEAP32[$4>>2]|0; //@line 115 "../../iup_split.c"
 $6 = $1; //@line 115 "../../iup_split.c"
 $7 = ((($6)) + 72|0); //@line 115 "../../iup_split.c"
 $8 = HEAP32[$7>>2]|0; //@line 115 "../../iup_split.c"
 $9 = ((($8)) + 28|0); //@line 115 "../../iup_split.c"
 $10 = HEAP32[$9>>2]|0; //@line 115 "../../iup_split.c"
 $11 = (($5) - ($10))|0; //@line 115 "../../iup_split.c"
 $12 = $1; //@line 115 "../../iup_split.c"
 $13 = ((($12)) + 72|0); //@line 115 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 115 "../../iup_split.c"
 $15 = ((($14)) + 36|0); //@line 115 "../../iup_split.c"
 $16 = HEAP32[$15>>2]|0; //@line 115 "../../iup_split.c"
 $17 = Math_imul($11, $16)|0; //@line 115 "../../iup_split.c"
 $18 = (+($17|0)); //@line 115 "../../iup_split.c"
 $19 = $18 / 1000.0; //@line 115 "../../iup_split.c"
 $20 = $19 + 0.5; //@line 115 "../../iup_split.c"
 $21 = (~~(($20))); //@line 115 "../../iup_split.c"
 $2 = $21; //@line 115 "../../iup_split.c"
 $22 = $2; //@line 116 "../../iup_split.c"
 $23 = ($22|0)<(0); //@line 116 "../../iup_split.c"
 $$ = $23 ? 0 : $21; //@line 116 "../../iup_split.c"
 $2 = $$; //@line 116 "../../iup_split.c"
 $24 = $2; //@line 117 "../../iup_split.c"
 STACKTOP = sp;return ($24|0); //@line 117 "../../iup_split.c"
}
function _iSplitAdjustWidth1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $9 = sp;
 $3 = $0;
 $4 = $1;
 $10 = $3; //@line 150 "../../iup_split.c"
 $11 = ((($10)) + 64|0); //@line 150 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 150 "../../iup_split.c"
 $13 = ((($12)) + 68|0); //@line 150 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 150 "../../iup_split.c"
 $5 = $14; //@line 150 "../../iup_split.c"
 $15 = $5; //@line 151 "../../iup_split.c"
 $16 = ($15|0)!=(0|0); //@line 151 "../../iup_split.c"
 if ($16) {
  $17 = $5; //@line 153 "../../iup_split.c"
  $18 = ((($17)) + 68|0); //@line 153 "../../iup_split.c"
  $19 = HEAP32[$18>>2]|0; //@line 153 "../../iup_split.c"
  $6 = $19; //@line 153 "../../iup_split.c"
  $20 = $4; //@line 155 "../../iup_split.c"
  $21 = HEAP32[$20>>2]|0; //@line 155 "../../iup_split.c"
  HEAP32[$7>>2] = $21; //@line 155 "../../iup_split.c"
  $22 = $5; //@line 156 "../../iup_split.c"
  _iupLayoutApplyMinMaxSize($22,$7,0); //@line 156 "../../iup_split.c"
  $23 = HEAP32[$7>>2]|0; //@line 157 "../../iup_split.c"
  $24 = $4; //@line 157 "../../iup_split.c"
  $25 = HEAP32[$24>>2]|0; //@line 157 "../../iup_split.c"
  $26 = ($23|0)>($25|0); //@line 157 "../../iup_split.c"
  if ($26) {
   $27 = HEAP32[$7>>2]|0; //@line 159 "../../iup_split.c"
   $28 = $4; //@line 159 "../../iup_split.c"
   HEAP32[$28>>2] = $27; //@line 159 "../../iup_split.c"
   $2 = 1; //@line 160 "../../iup_split.c"
   $53 = $2; //@line 177 "../../iup_split.c"
   STACKTOP = sp;return ($53|0); //@line 177 "../../iup_split.c"
  }
  $29 = $6; //@line 163 "../../iup_split.c"
  $30 = ($29|0)!=(0|0); //@line 163 "../../iup_split.c"
  if ($30) {
   $31 = $3; //@line 165 "../../iup_split.c"
   $32 = $4; //@line 165 "../../iup_split.c"
   $33 = HEAP32[$32>>2]|0; //@line 165 "../../iup_split.c"
   $34 = (_iSplitGetWidth2($31,$33)|0); //@line 165 "../../iup_split.c"
   $8 = $34; //@line 165 "../../iup_split.c"
   $35 = $8; //@line 166 "../../iup_split.c"
   HEAP32[$9>>2] = $35; //@line 166 "../../iup_split.c"
   $36 = $6; //@line 167 "../../iup_split.c"
   _iupLayoutApplyMinMaxSize($36,$9,0); //@line 167 "../../iup_split.c"
   $37 = HEAP32[$9>>2]|0; //@line 168 "../../iup_split.c"
   $38 = $8; //@line 168 "../../iup_split.c"
   $39 = ($37|0)>($38|0); //@line 168 "../../iup_split.c"
   if ($39) {
    $40 = HEAP32[$9>>2]|0; //@line 170 "../../iup_split.c"
    $8 = $40; //@line 170 "../../iup_split.c"
    $41 = $3; //@line 171 "../../iup_split.c"
    $42 = ((($41)) + 52|0); //@line 171 "../../iup_split.c"
    $43 = HEAP32[$42>>2]|0; //@line 171 "../../iup_split.c"
    $44 = $3; //@line 171 "../../iup_split.c"
    $45 = ((($44)) + 72|0); //@line 171 "../../iup_split.c"
    $46 = HEAP32[$45>>2]|0; //@line 171 "../../iup_split.c"
    $47 = ((($46)) + 28|0); //@line 171 "../../iup_split.c"
    $48 = HEAP32[$47>>2]|0; //@line 171 "../../iup_split.c"
    $49 = (($43) - ($48))|0; //@line 171 "../../iup_split.c"
    $50 = $8; //@line 171 "../../iup_split.c"
    $51 = (($49) - ($50))|0; //@line 171 "../../iup_split.c"
    $52 = $4; //@line 171 "../../iup_split.c"
    HEAP32[$52>>2] = $51; //@line 171 "../../iup_split.c"
    $2 = 1; //@line 172 "../../iup_split.c"
    $53 = $2; //@line 177 "../../iup_split.c"
    STACKTOP = sp;return ($53|0); //@line 177 "../../iup_split.c"
   }
  }
 }
 $2 = 0; //@line 176 "../../iup_split.c"
 $53 = $2; //@line 177 "../../iup_split.c"
 STACKTOP = sp;return ($53|0); //@line 177 "../../iup_split.c"
}
function _iSplitCalcVal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 131 "../../iup_split.c"
 $6 = ((($5)) + 72|0); //@line 131 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 131 "../../iup_split.c"
 $8 = ((($7)) + 32|0); //@line 131 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 131 "../../iup_split.c"
 $10 = ($9|0)==(0); //@line 131 "../../iup_split.c"
 $11 = $4; //@line 132 "../../iup_split.c"
 $12 = ($11*1000)|0; //@line 132 "../../iup_split.c"
 $13 = $3; //@line 132 "../../iup_split.c"
 if ($10) {
  $14 = ((($13)) + 52|0); //@line 132 "../../iup_split.c"
  $15 = HEAP32[$14>>2]|0; //@line 132 "../../iup_split.c"
  $16 = $3; //@line 132 "../../iup_split.c"
  $17 = ((($16)) + 72|0); //@line 132 "../../iup_split.c"
  $18 = HEAP32[$17>>2]|0; //@line 132 "../../iup_split.c"
  $19 = ((($18)) + 28|0); //@line 132 "../../iup_split.c"
  $20 = HEAP32[$19>>2]|0; //@line 132 "../../iup_split.c"
  $21 = (($15) - ($20))|0; //@line 132 "../../iup_split.c"
  $22 = (($12|0) / ($21|0))&-1; //@line 132 "../../iup_split.c"
  $2 = $22; //@line 132 "../../iup_split.c"
  $32 = $2; //@line 135 "../../iup_split.c"
  STACKTOP = sp;return ($32|0); //@line 135 "../../iup_split.c"
 } else {
  $23 = ((($13)) + 56|0); //@line 134 "../../iup_split.c"
  $24 = HEAP32[$23>>2]|0; //@line 134 "../../iup_split.c"
  $25 = $3; //@line 134 "../../iup_split.c"
  $26 = ((($25)) + 72|0); //@line 134 "../../iup_split.c"
  $27 = HEAP32[$26>>2]|0; //@line 134 "../../iup_split.c"
  $28 = ((($27)) + 28|0); //@line 134 "../../iup_split.c"
  $29 = HEAP32[$28>>2]|0; //@line 134 "../../iup_split.c"
  $30 = (($24) - ($29))|0; //@line 134 "../../iup_split.c"
  $31 = (($12|0) / ($30|0))&-1; //@line 134 "../../iup_split.c"
  $2 = $31; //@line 134 "../../iup_split.c"
  $32 = $2; //@line 135 "../../iup_split.c"
  STACKTOP = sp;return ($32|0); //@line 135 "../../iup_split.c"
 }
 return (0)|0;
}
function _iSplitGetWidth2($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 106 "../../iup_split.c"
 $6 = ((($5)) + 52|0); //@line 106 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 106 "../../iup_split.c"
 $8 = $2; //@line 106 "../../iup_split.c"
 $9 = ((($8)) + 72|0); //@line 106 "../../iup_split.c"
 $10 = HEAP32[$9>>2]|0; //@line 106 "../../iup_split.c"
 $11 = ((($10)) + 28|0); //@line 106 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 106 "../../iup_split.c"
 $13 = (($7) - ($12))|0; //@line 106 "../../iup_split.c"
 $14 = $3; //@line 106 "../../iup_split.c"
 $15 = (($13) - ($14))|0; //@line 106 "../../iup_split.c"
 $4 = $15; //@line 106 "../../iup_split.c"
 $16 = $4; //@line 107 "../../iup_split.c"
 $17 = ($16|0)<(0); //@line 107 "../../iup_split.c"
 $$ = $17 ? 0 : $15; //@line 107 "../../iup_split.c"
 $4 = $$; //@line 107 "../../iup_split.c"
 $18 = $4; //@line 108 "../../iup_split.c"
 STACKTOP = sp;return ($18|0); //@line 108 "../../iup_split.c"
}
function _iSplitAdjustHeight1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 8|0;
 $9 = sp;
 $3 = $0;
 $4 = $1;
 $10 = $3; //@line 181 "../../iup_split.c"
 $11 = ((($10)) + 64|0); //@line 181 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 181 "../../iup_split.c"
 $13 = ((($12)) + 68|0); //@line 181 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 181 "../../iup_split.c"
 $5 = $14; //@line 181 "../../iup_split.c"
 $15 = $5; //@line 182 "../../iup_split.c"
 $16 = ($15|0)!=(0|0); //@line 182 "../../iup_split.c"
 if ($16) {
  $17 = $5; //@line 184 "../../iup_split.c"
  $18 = ((($17)) + 68|0); //@line 184 "../../iup_split.c"
  $19 = HEAP32[$18>>2]|0; //@line 184 "../../iup_split.c"
  $6 = $19; //@line 184 "../../iup_split.c"
  $20 = $4; //@line 186 "../../iup_split.c"
  $21 = HEAP32[$20>>2]|0; //@line 186 "../../iup_split.c"
  HEAP32[$7>>2] = $21; //@line 186 "../../iup_split.c"
  $22 = $5; //@line 187 "../../iup_split.c"
  _iupLayoutApplyMinMaxSize($22,0,$7); //@line 187 "../../iup_split.c"
  $23 = HEAP32[$7>>2]|0; //@line 188 "../../iup_split.c"
  $24 = $4; //@line 188 "../../iup_split.c"
  $25 = HEAP32[$24>>2]|0; //@line 188 "../../iup_split.c"
  $26 = ($23|0)>($25|0); //@line 188 "../../iup_split.c"
  if ($26) {
   $27 = HEAP32[$7>>2]|0; //@line 190 "../../iup_split.c"
   $28 = $4; //@line 190 "../../iup_split.c"
   HEAP32[$28>>2] = $27; //@line 190 "../../iup_split.c"
   $2 = 1; //@line 191 "../../iup_split.c"
   $53 = $2; //@line 208 "../../iup_split.c"
   STACKTOP = sp;return ($53|0); //@line 208 "../../iup_split.c"
  }
  $29 = $6; //@line 194 "../../iup_split.c"
  $30 = ($29|0)!=(0|0); //@line 194 "../../iup_split.c"
  if ($30) {
   $31 = $3; //@line 196 "../../iup_split.c"
   $32 = $4; //@line 196 "../../iup_split.c"
   $33 = HEAP32[$32>>2]|0; //@line 196 "../../iup_split.c"
   $34 = (_iSplitGetHeight2($31,$33)|0); //@line 196 "../../iup_split.c"
   $8 = $34; //@line 196 "../../iup_split.c"
   $35 = $8; //@line 197 "../../iup_split.c"
   HEAP32[$9>>2] = $35; //@line 197 "../../iup_split.c"
   $36 = $6; //@line 198 "../../iup_split.c"
   _iupLayoutApplyMinMaxSize($36,0,$9); //@line 198 "../../iup_split.c"
   $37 = HEAP32[$9>>2]|0; //@line 199 "../../iup_split.c"
   $38 = $8; //@line 199 "../../iup_split.c"
   $39 = ($37|0)>($38|0); //@line 199 "../../iup_split.c"
   if ($39) {
    $40 = HEAP32[$9>>2]|0; //@line 201 "../../iup_split.c"
    $8 = $40; //@line 201 "../../iup_split.c"
    $41 = $3; //@line 202 "../../iup_split.c"
    $42 = ((($41)) + 56|0); //@line 202 "../../iup_split.c"
    $43 = HEAP32[$42>>2]|0; //@line 202 "../../iup_split.c"
    $44 = $3; //@line 202 "../../iup_split.c"
    $45 = ((($44)) + 72|0); //@line 202 "../../iup_split.c"
    $46 = HEAP32[$45>>2]|0; //@line 202 "../../iup_split.c"
    $47 = ((($46)) + 28|0); //@line 202 "../../iup_split.c"
    $48 = HEAP32[$47>>2]|0; //@line 202 "../../iup_split.c"
    $49 = (($43) - ($48))|0; //@line 202 "../../iup_split.c"
    $50 = $8; //@line 202 "../../iup_split.c"
    $51 = (($49) - ($50))|0; //@line 202 "../../iup_split.c"
    $52 = $4; //@line 202 "../../iup_split.c"
    HEAP32[$52>>2] = $51; //@line 202 "../../iup_split.c"
    $2 = 1; //@line 203 "../../iup_split.c"
    $53 = $2; //@line 208 "../../iup_split.c"
    STACKTOP = sp;return ($53|0); //@line 208 "../../iup_split.c"
   }
  }
 }
 $2 = 0; //@line 207 "../../iup_split.c"
 $53 = $2; //@line 208 "../../iup_split.c"
 STACKTOP = sp;return ($53|0); //@line 208 "../../iup_split.c"
}
function _iSplitGetHeight2($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 124 "../../iup_split.c"
 $6 = ((($5)) + 56|0); //@line 124 "../../iup_split.c"
 $7 = HEAP32[$6>>2]|0; //@line 124 "../../iup_split.c"
 $8 = $2; //@line 124 "../../iup_split.c"
 $9 = ((($8)) + 72|0); //@line 124 "../../iup_split.c"
 $10 = HEAP32[$9>>2]|0; //@line 124 "../../iup_split.c"
 $11 = ((($10)) + 28|0); //@line 124 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 124 "../../iup_split.c"
 $13 = (($7) - ($12))|0; //@line 124 "../../iup_split.c"
 $14 = $3; //@line 124 "../../iup_split.c"
 $15 = (($13) - ($14))|0; //@line 124 "../../iup_split.c"
 $4 = $15; //@line 124 "../../iup_split.c"
 $16 = $4; //@line 125 "../../iup_split.c"
 $17 = ($16|0)<(0); //@line 125 "../../iup_split.c"
 $$ = $17 ? 0 : $15; //@line 125 "../../iup_split.c"
 $4 = $$; //@line 125 "../../iup_split.c"
 $18 = $4; //@line 126 "../../iup_split.c"
 STACKTOP = sp;return ($18|0); //@line 126 "../../iup_split.c"
}
function _iSplitButton_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $14 = sp + 4|0;
 $15 = sp;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $16 = $7; //@line 382 "../../iup_split.c"
 $17 = ((($16)) + 60|0); //@line 382 "../../iup_split.c"
 $18 = HEAP32[$17>>2]|0; //@line 382 "../../iup_split.c"
 $13 = $18; //@line 382 "../../iup_split.c"
 $19 = $8; //@line 384 "../../iup_split.c"
 $20 = ($19|0)!=(49); //@line 384 "../../iup_split.c"
 if ($20) {
  $6 = -2; //@line 385 "../../iup_split.c"
  $97 = $6; //@line 421 "../../iup_split.c"
  STACKTOP = sp;return ($97|0); //@line 421 "../../iup_split.c"
 }
 $21 = $13; //@line 387 "../../iup_split.c"
 $22 = ((($21)) + 72|0); //@line 387 "../../iup_split.c"
 $23 = HEAP32[$22>>2]|0; //@line 387 "../../iup_split.c"
 $24 = HEAP32[$23>>2]|0; //@line 387 "../../iup_split.c"
 $25 = ($24|0)==(0); //@line 387 "../../iup_split.c"
 $26 = $9; //@line 387 "../../iup_split.c"
 $27 = ($26|0)!=(0); //@line 387 "../../iup_split.c"
 $or$cond = $25 & $27; //@line 387 "../../iup_split.c"
 $28 = $13; //@line 391 "../../iup_split.c"
 $29 = ((($28)) + 72|0); //@line 391 "../../iup_split.c"
 $30 = HEAP32[$29>>2]|0; //@line 391 "../../iup_split.c"
 do {
  if ($or$cond) {
   HEAP32[$30>>2] = 1; //@line 391 "../../iup_split.c"
   $31 = (_IupGetGlobal(20240)|0); //@line 393 "../../iup_split.c"
   (_iupStrToIntInt($31,$14,$15,120)|0); //@line 393 "../../iup_split.c"
   $32 = $13; //@line 396 "../../iup_split.c"
   $33 = ((($32)) + 72|0); //@line 396 "../../iup_split.c"
   $34 = HEAP32[$33>>2]|0; //@line 396 "../../iup_split.c"
   $35 = ((($34)) + 32|0); //@line 396 "../../iup_split.c"
   $36 = HEAP32[$35>>2]|0; //@line 396 "../../iup_split.c"
   $37 = ($36|0)==(0); //@line 396 "../../iup_split.c"
   $38 = $13; //@line 398 "../../iup_split.c"
   $39 = ((($38)) + 64|0); //@line 398 "../../iup_split.c"
   $40 = HEAP32[$39>>2]|0; //@line 398 "../../iup_split.c"
   if ($37) {
    $41 = ((($40)) + 28|0); //@line 398 "../../iup_split.c"
    $42 = HEAP32[$41>>2]|0; //@line 398 "../../iup_split.c"
    $43 = $13; //@line 398 "../../iup_split.c"
    $44 = ((($43)) + 72|0); //@line 398 "../../iup_split.c"
    $45 = HEAP32[$44>>2]|0; //@line 398 "../../iup_split.c"
    $46 = ((($45)) + 8|0); //@line 398 "../../iup_split.c"
    HEAP32[$46>>2] = $42; //@line 398 "../../iup_split.c"
    $47 = HEAP32[$14>>2]|0; //@line 399 "../../iup_split.c"
    $48 = $13; //@line 399 "../../iup_split.c"
    $49 = ((($48)) + 72|0); //@line 399 "../../iup_split.c"
    $50 = HEAP32[$49>>2]|0; //@line 399 "../../iup_split.c"
    $51 = ((($50)) + 4|0); //@line 399 "../../iup_split.c"
    HEAP32[$51>>2] = $47; //@line 399 "../../iup_split.c"
    $52 = $13; //@line 400 "../../iup_split.c"
    $53 = ((($52)) + 64|0); //@line 400 "../../iup_split.c"
    $54 = HEAP32[$53>>2]|0; //@line 400 "../../iup_split.c"
    $55 = ((($54)) + 28|0); //@line 400 "../../iup_split.c"
    $56 = HEAP32[$55>>2]|0; //@line 400 "../../iup_split.c"
    $57 = $13; //@line 400 "../../iup_split.c"
    $58 = ((($57)) + 28|0); //@line 400 "../../iup_split.c"
    $59 = HEAP32[$58>>2]|0; //@line 400 "../../iup_split.c"
    $60 = (($56) - ($59))|0; //@line 400 "../../iup_split.c"
    $61 = $13; //@line 400 "../../iup_split.c"
    $62 = ((($61)) + 72|0); //@line 400 "../../iup_split.c"
    $63 = HEAP32[$62>>2]|0; //@line 400 "../../iup_split.c"
    $64 = ((($63)) + 12|0); //@line 400 "../../iup_split.c"
    HEAP32[$64>>2] = $60; //@line 400 "../../iup_split.c"
    break;
   } else {
    $65 = ((($40)) + 32|0); //@line 404 "../../iup_split.c"
    $66 = HEAP32[$65>>2]|0; //@line 404 "../../iup_split.c"
    $67 = $13; //@line 404 "../../iup_split.c"
    $68 = ((($67)) + 72|0); //@line 404 "../../iup_split.c"
    $69 = HEAP32[$68>>2]|0; //@line 404 "../../iup_split.c"
    $70 = ((($69)) + 8|0); //@line 404 "../../iup_split.c"
    HEAP32[$70>>2] = $66; //@line 404 "../../iup_split.c"
    $71 = HEAP32[$15>>2]|0; //@line 405 "../../iup_split.c"
    $72 = $13; //@line 405 "../../iup_split.c"
    $73 = ((($72)) + 72|0); //@line 405 "../../iup_split.c"
    $74 = HEAP32[$73>>2]|0; //@line 405 "../../iup_split.c"
    $75 = ((($74)) + 4|0); //@line 405 "../../iup_split.c"
    HEAP32[$75>>2] = $71; //@line 405 "../../iup_split.c"
    $76 = $13; //@line 406 "../../iup_split.c"
    $77 = ((($76)) + 64|0); //@line 406 "../../iup_split.c"
    $78 = HEAP32[$77>>2]|0; //@line 406 "../../iup_split.c"
    $79 = ((($78)) + 32|0); //@line 406 "../../iup_split.c"
    $80 = HEAP32[$79>>2]|0; //@line 406 "../../iup_split.c"
    $81 = $13; //@line 406 "../../iup_split.c"
    $82 = ((($81)) + 32|0); //@line 406 "../../iup_split.c"
    $83 = HEAP32[$82>>2]|0; //@line 406 "../../iup_split.c"
    $84 = (($80) - ($83))|0; //@line 406 "../../iup_split.c"
    $85 = $13; //@line 406 "../../iup_split.c"
    $86 = ((($85)) + 72|0); //@line 406 "../../iup_split.c"
    $87 = HEAP32[$86>>2]|0; //@line 406 "../../iup_split.c"
    $88 = ((($87)) + 12|0); //@line 406 "../../iup_split.c"
    HEAP32[$88>>2] = $84; //@line 406 "../../iup_split.c"
    break;
   }
  } else {
   $89 = HEAP32[$30>>2]|0; //@line 409 "../../iup_split.c"
   $90 = ($89|0)==(0); //@line 409 "../../iup_split.c"
   $91 = $9; //@line 409 "../../iup_split.c"
   $92 = ($91|0)!=(0); //@line 409 "../../iup_split.c"
   $or$cond3 = $90 | $92; //@line 409 "../../iup_split.c"
   if (!($or$cond3)) {
    $93 = $13; //@line 411 "../../iup_split.c"
    $94 = ((($93)) + 72|0); //@line 411 "../../iup_split.c"
    $95 = HEAP32[$94>>2]|0; //@line 411 "../../iup_split.c"
    HEAP32[$95>>2] = 0; //@line 411 "../../iup_split.c"
    $96 = $13; //@line 414 "../../iup_split.c"
    _IupRefreshChildren($96); //@line 414 "../../iup_split.c"
   }
  }
 } while(0);
 $6 = -2; //@line 420 "../../iup_split.c"
 $97 = $6; //@line 421 "../../iup_split.c"
 STACKTOP = sp;return ($97|0); //@line 421 "../../iup_split.c"
}
function _iSplitFocus_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 425 "../../iup_split.c"
 $7 = ((($6)) + 60|0); //@line 425 "../../iup_split.c"
 $8 = HEAP32[$7>>2]|0; //@line 425 "../../iup_split.c"
 $5 = $8; //@line 425 "../../iup_split.c"
 $9 = $5; //@line 427 "../../iup_split.c"
 $10 = ($9|0)==(0|0); //@line 427 "../../iup_split.c"
 $11 = $4; //@line 427 "../../iup_split.c"
 $12 = ($11|0)!=(0); //@line 427 "../../iup_split.c"
 $or$cond = $10 | $12; //@line 427 "../../iup_split.c"
 if ($or$cond) {
  $2 = -2; //@line 428 "../../iup_split.c"
  $21 = $2; //@line 434 "../../iup_split.c"
  STACKTOP = sp;return ($21|0); //@line 434 "../../iup_split.c"
 }
 $13 = $5; //@line 430 "../../iup_split.c"
 $14 = ((($13)) + 72|0); //@line 430 "../../iup_split.c"
 $15 = HEAP32[$14>>2]|0; //@line 430 "../../iup_split.c"
 $16 = HEAP32[$15>>2]|0; //@line 430 "../../iup_split.c"
 $17 = ($16|0)!=(0); //@line 430 "../../iup_split.c"
 if ($17) {
  $18 = $5; //@line 431 "../../iup_split.c"
  $19 = ((($18)) + 72|0); //@line 431 "../../iup_split.c"
  $20 = HEAP32[$19>>2]|0; //@line 431 "../../iup_split.c"
  HEAP32[$20>>2] = 0; //@line 431 "../../iup_split.c"
 }
 $2 = -2; //@line 433 "../../iup_split.c"
 $21 = $2; //@line 434 "../../iup_split.c"
 STACKTOP = sp;return ($21|0); //@line 434 "../../iup_split.c"
}
function _iSplitMotion_CB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = sp + 12|0;
 $11 = sp + 8|0;
 $12 = sp + 4|0;
 $13 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $14 = $4; //@line 334 "../../iup_split.c"
 $15 = ((($14)) + 60|0); //@line 334 "../../iup_split.c"
 $16 = HEAP32[$15>>2]|0; //@line 334 "../../iup_split.c"
 $8 = $16; //@line 334 "../../iup_split.c"
 $17 = $8; //@line 336 "../../iup_split.c"
 $18 = ((($17)) + 72|0); //@line 336 "../../iup_split.c"
 $19 = HEAP32[$18>>2]|0; //@line 336 "../../iup_split.c"
 $20 = HEAP32[$19>>2]|0; //@line 336 "../../iup_split.c"
 $21 = ($20|0)!=(0); //@line 336 "../../iup_split.c"
 if (!($21)) {
  STACKTOP = sp;return -2; //@line 377 "../../iup_split.c"
 }
 $22 = $7; //@line 338 "../../iup_split.c"
 $23 = ((($22)) + 2|0); //@line 338 "../../iup_split.c"
 $24 = HEAP8[$23>>0]|0; //@line 338 "../../iup_split.c"
 $25 = $24 << 24 >> 24; //@line 338 "../../iup_split.c"
 $26 = ($25|0)==(49); //@line 338 "../../iup_split.c"
 $27 = $8; //@line 340 "../../iup_split.c"
 $28 = ((($27)) + 72|0); //@line 340 "../../iup_split.c"
 $29 = HEAP32[$28>>2]|0; //@line 340 "../../iup_split.c"
 if (!($26)) {
  HEAP32[$29>>2] = 0; //@line 372 "../../iup_split.c"
  STACKTOP = sp;return -2; //@line 377 "../../iup_split.c"
 }
 $30 = ((($29)) + 36|0); //@line 340 "../../iup_split.c"
 $31 = HEAP32[$30>>2]|0; //@line 340 "../../iup_split.c"
 $9 = $31; //@line 340 "../../iup_split.c"
 $32 = (_IupGetGlobal(20240)|0); //@line 343 "../../iup_split.c"
 (_iupStrToIntInt($32,$10,$11,120)|0); //@line 343 "../../iup_split.c"
 $33 = $8; //@line 345 "../../iup_split.c"
 $34 = ((($33)) + 72|0); //@line 345 "../../iup_split.c"
 $35 = HEAP32[$34>>2]|0; //@line 345 "../../iup_split.c"
 $36 = ((($35)) + 32|0); //@line 345 "../../iup_split.c"
 $37 = HEAP32[$36>>2]|0; //@line 345 "../../iup_split.c"
 $38 = ($37|0)==(0); //@line 345 "../../iup_split.c"
 $39 = $8; //@line 347 "../../iup_split.c"
 $40 = ((($39)) + 72|0); //@line 347 "../../iup_split.c"
 $41 = HEAP32[$40>>2]|0; //@line 347 "../../iup_split.c"
 $42 = ((($41)) + 12|0); //@line 347 "../../iup_split.c"
 $43 = HEAP32[$42>>2]|0; //@line 347 "../../iup_split.c"
 if ($38) {
  $44 = HEAP32[$10>>2]|0; //@line 347 "../../iup_split.c"
  $45 = $8; //@line 347 "../../iup_split.c"
  $46 = ((($45)) + 72|0); //@line 347 "../../iup_split.c"
  $47 = HEAP32[$46>>2]|0; //@line 347 "../../iup_split.c"
  $48 = ((($47)) + 4|0); //@line 347 "../../iup_split.c"
  $49 = HEAP32[$48>>2]|0; //@line 347 "../../iup_split.c"
  $50 = (($44) - ($49))|0; //@line 347 "../../iup_split.c"
  $51 = (($43) + ($50))|0; //@line 347 "../../iup_split.c"
  HEAP32[$12>>2] = $51; //@line 347 "../../iup_split.c"
  $52 = $8; //@line 348 "../../iup_split.c"
  (_iSplitAdjustWidth1($52,$12)|0); //@line 348 "../../iup_split.c"
  $53 = $8; //@line 349 "../../iup_split.c"
  $54 = HEAP32[$12>>2]|0; //@line 349 "../../iup_split.c"
  $55 = (_iSplitCalcVal($53,$54)|0); //@line 349 "../../iup_split.c"
  $56 = $8; //@line 349 "../../iup_split.c"
  $57 = ((($56)) + 72|0); //@line 349 "../../iup_split.c"
  $58 = HEAP32[$57>>2]|0; //@line 349 "../../iup_split.c"
  $59 = ((($58)) + 36|0); //@line 349 "../../iup_split.c"
  HEAP32[$59>>2] = $55; //@line 349 "../../iup_split.c"
 } else {
  $60 = HEAP32[$11>>2]|0; //@line 353 "../../iup_split.c"
  $61 = $8; //@line 353 "../../iup_split.c"
  $62 = ((($61)) + 72|0); //@line 353 "../../iup_split.c"
  $63 = HEAP32[$62>>2]|0; //@line 353 "../../iup_split.c"
  $64 = ((($63)) + 4|0); //@line 353 "../../iup_split.c"
  $65 = HEAP32[$64>>2]|0; //@line 353 "../../iup_split.c"
  $66 = (($60) - ($65))|0; //@line 353 "../../iup_split.c"
  $67 = (($43) + ($66))|0; //@line 353 "../../iup_split.c"
  HEAP32[$13>>2] = $67; //@line 353 "../../iup_split.c"
  $68 = $8; //@line 354 "../../iup_split.c"
  (_iSplitAdjustHeight1($68,$13)|0); //@line 354 "../../iup_split.c"
  $69 = $8; //@line 355 "../../iup_split.c"
  $70 = HEAP32[$13>>2]|0; //@line 355 "../../iup_split.c"
  $71 = (_iSplitCalcVal($69,$70)|0); //@line 355 "../../iup_split.c"
  $72 = $8; //@line 355 "../../iup_split.c"
  $73 = ((($72)) + 72|0); //@line 355 "../../iup_split.c"
  $74 = HEAP32[$73>>2]|0; //@line 355 "../../iup_split.c"
  $75 = ((($74)) + 36|0); //@line 355 "../../iup_split.c"
  HEAP32[$75>>2] = $71; //@line 355 "../../iup_split.c"
 }
 $76 = $8; //@line 358 "../../iup_split.c"
 _iSplitAdjustVal($76); //@line 358 "../../iup_split.c"
 $77 = $9; //@line 360 "../../iup_split.c"
 $78 = $8; //@line 360 "../../iup_split.c"
 $79 = ((($78)) + 72|0); //@line 360 "../../iup_split.c"
 $80 = HEAP32[$79>>2]|0; //@line 360 "../../iup_split.c"
 $81 = ((($80)) + 36|0); //@line 360 "../../iup_split.c"
 $82 = HEAP32[$81>>2]|0; //@line 360 "../../iup_split.c"
 $83 = ($77|0)!=($82|0); //@line 360 "../../iup_split.c"
 if ($83) {
  $84 = $8; //@line 361 "../../iup_split.c"
  _iupBaseCallValueChangedCb($84); //@line 361 "../../iup_split.c"
 }
 $85 = $8; //@line 363 "../../iup_split.c"
 $86 = ((($85)) + 72|0); //@line 363 "../../iup_split.c"
 $87 = HEAP32[$86>>2]|0; //@line 363 "../../iup_split.c"
 $88 = ((($87)) + 16|0); //@line 363 "../../iup_split.c"
 $89 = HEAP32[$88>>2]|0; //@line 363 "../../iup_split.c"
 $90 = ($89|0)!=(0); //@line 363 "../../iup_split.c"
 $91 = $8; //@line 365 "../../iup_split.c"
 if ($90) {
  _IupRefreshChildren($91); //@line 365 "../../iup_split.c"
  _IupFlush(); //@line 366 "../../iup_split.c"
  STACKTOP = sp;return -2; //@line 377 "../../iup_split.c"
 } else {
  _iSplitSetBarPosition($91); //@line 369 "../../iup_split.c"
  STACKTOP = sp;return -2; //@line 377 "../../iup_split.c"
 }
 return (0)|0;
}
function _iSplitAction_CB($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $4 = sp + 32|0;
 $5 = sp + 28|0;
 $8 = sp + 56|0;
 $9 = sp + 55|0;
 $10 = sp + 54|0;
 $17 = sp + 50|0;
 $18 = sp + 49|0;
 $19 = sp + 48|0;
 $20 = sp + 4|0;
 $21 = sp;
 $1 = $0;
 $22 = $1; //@line 243 "../../iup_split.c"
 $23 = ((($22)) + 60|0); //@line 243 "../../iup_split.c"
 $24 = HEAP32[$23>>2]|0; //@line 243 "../../iup_split.c"
 $2 = $24; //@line 243 "../../iup_split.c"
 $25 = $1; //@line 244 "../../iup_split.c"
 $26 = (_iupDrawCreateCanvas($25)|0); //@line 244 "../../iup_split.c"
 $3 = $26; //@line 244 "../../iup_split.c"
 $27 = $3; //@line 246 "../../iup_split.c"
 _iupDrawParentBackground($27); //@line 246 "../../iup_split.c"
 $28 = $2; //@line 248 "../../iup_split.c"
 $29 = ((($28)) + 72|0); //@line 248 "../../iup_split.c"
 $30 = HEAP32[$29>>2]|0; //@line 248 "../../iup_split.c"
 $31 = ((($30)) + 24|0); //@line 248 "../../iup_split.c"
 $32 = HEAP32[$31>>2]|0; //@line 248 "../../iup_split.c"
 $33 = ($32|0)!=(0); //@line 248 "../../iup_split.c"
 if (!($33)) {
  $167 = $2; //@line 313 "../../iup_split.c"
  $168 = (_iupAttribGet($167,15863)|0); //@line 313 "../../iup_split.c"
  $16 = $168; //@line 313 "../../iup_split.c"
  $169 = $16; //@line 314 "../../iup_split.c"
  $170 = ($169|0)!=(0|0); //@line 314 "../../iup_split.c"
  if (!($170)) {
   $182 = $3; //@line 325 "../../iup_split.c"
   _iupDrawFlush($182); //@line 325 "../../iup_split.c"
   $183 = $3; //@line 327 "../../iup_split.c"
   _iupDrawKillCanvas($183); //@line 327 "../../iup_split.c"
   STACKTOP = sp;return -2; //@line 329 "../../iup_split.c"
  }
  HEAP8[$17>>0] = -96; //@line 316 "../../iup_split.c"
  HEAP8[$18>>0] = -96; //@line 316 "../../iup_split.c"
  HEAP8[$19>>0] = -96; //@line 316 "../../iup_split.c"
  $171 = $3; //@line 318 "../../iup_split.c"
  _iupDrawGetSize($171,$20,$21); //@line 318 "../../iup_split.c"
  $172 = $2; //@line 320 "../../iup_split.c"
  $173 = (_iupAttribGetStr($172,15863)|0); //@line 320 "../../iup_split.c"
  (_iupStrToRGB($173,$17,$18,$19)|0); //@line 320 "../../iup_split.c"
  $174 = $3; //@line 321 "../../iup_split.c"
  $175 = HEAP32[$20>>2]|0; //@line 321 "../../iup_split.c"
  $176 = (($175) - 1)|0; //@line 321 "../../iup_split.c"
  $177 = HEAP32[$21>>2]|0; //@line 321 "../../iup_split.c"
  $178 = (($177) - 1)|0; //@line 321 "../../iup_split.c"
  $179 = HEAP8[$17>>0]|0; //@line 321 "../../iup_split.c"
  $180 = HEAP8[$18>>0]|0; //@line 321 "../../iup_split.c"
  $181 = HEAP8[$19>>0]|0; //@line 321 "../../iup_split.c"
  _iupDrawRectangle($174,0,0,$176,$178,$179,$180,$181,0); //@line 321 "../../iup_split.c"
  $182 = $3; //@line 325 "../../iup_split.c"
  _iupDrawFlush($182); //@line 325 "../../iup_split.c"
  $183 = $3; //@line 327 "../../iup_split.c"
  _iupDrawKillCanvas($183); //@line 327 "../../iup_split.c"
  STACKTOP = sp;return -2; //@line 329 "../../iup_split.c"
 }
 HEAP8[$8>>0] = -96; //@line 251 "../../iup_split.c"
 HEAP8[$9>>0] = -96; //@line 251 "../../iup_split.c"
 HEAP8[$10>>0] = -96; //@line 251 "../../iup_split.c"
 $34 = $3; //@line 252 "../../iup_split.c"
 _iupDrawGetSize($34,$4,$5); //@line 252 "../../iup_split.c"
 $35 = $2; //@line 254 "../../iup_split.c"
 $36 = (_iupAttribGetStr($35,15863)|0); //@line 254 "../../iup_split.c"
 (_iupStrToRGB($36,$8,$9,$10)|0); //@line 254 "../../iup_split.c"
 $37 = $2; //@line 256 "../../iup_split.c"
 $38 = ((($37)) + 72|0); //@line 256 "../../iup_split.c"
 $39 = HEAP32[$38>>2]|0; //@line 256 "../../iup_split.c"
 $40 = ((($39)) + 24|0); //@line 256 "../../iup_split.c"
 $41 = HEAP32[$40>>2]|0; //@line 256 "../../iup_split.c"
 $42 = ($41|0)==(1); //@line 256 "../../iup_split.c"
 if (!($42)) {
  $115 = $2; //@line 295 "../../iup_split.c"
  $116 = ((($115)) + 72|0); //@line 295 "../../iup_split.c"
  $117 = HEAP32[$116>>2]|0; //@line 295 "../../iup_split.c"
  $118 = ((($117)) + 32|0); //@line 295 "../../iup_split.c"
  $119 = HEAP32[$118>>2]|0; //@line 295 "../../iup_split.c"
  $120 = ($119|0)==(0); //@line 295 "../../iup_split.c"
  $121 = $2; //@line 297 "../../iup_split.c"
  $122 = ((($121)) + 72|0); //@line 297 "../../iup_split.c"
  $123 = HEAP32[$122>>2]|0; //@line 297 "../../iup_split.c"
  $124 = ((($123)) + 28|0); //@line 297 "../../iup_split.c"
  $125 = HEAP32[$124>>2]|0; //@line 297 "../../iup_split.c"
  $126 = (($125|0) / 2)&-1; //@line 297 "../../iup_split.c"
  if ($120) {
   $6 = $126; //@line 297 "../../iup_split.c"
   $127 = $3; //@line 299 "../../iup_split.c"
   $128 = $6; //@line 299 "../../iup_split.c"
   $129 = (($128) - 1)|0; //@line 299 "../../iup_split.c"
   $130 = $6; //@line 299 "../../iup_split.c"
   $131 = (($130) - 1)|0; //@line 299 "../../iup_split.c"
   $132 = HEAP32[$5>>2]|0; //@line 299 "../../iup_split.c"
   $133 = (($132) - 1)|0; //@line 299 "../../iup_split.c"
   $134 = HEAP8[$8>>0]|0; //@line 299 "../../iup_split.c"
   $135 = HEAP8[$9>>0]|0; //@line 299 "../../iup_split.c"
   $136 = HEAP8[$10>>0]|0; //@line 299 "../../iup_split.c"
   _iupDrawLine($127,$129,0,$131,$133,$134,$135,$136,1); //@line 299 "../../iup_split.c"
   $137 = $3; //@line 300 "../../iup_split.c"
   $138 = $6; //@line 300 "../../iup_split.c"
   $139 = (($138) + 1)|0; //@line 300 "../../iup_split.c"
   $140 = $6; //@line 300 "../../iup_split.c"
   $141 = (($140) + 1)|0; //@line 300 "../../iup_split.c"
   $142 = HEAP32[$5>>2]|0; //@line 300 "../../iup_split.c"
   $143 = (($142) - 1)|0; //@line 300 "../../iup_split.c"
   $144 = HEAP8[$8>>0]|0; //@line 300 "../../iup_split.c"
   $145 = HEAP8[$9>>0]|0; //@line 300 "../../iup_split.c"
   $146 = HEAP8[$10>>0]|0; //@line 300 "../../iup_split.c"
   _iupDrawLine($137,$139,0,$141,$143,$144,$145,$146,1); //@line 300 "../../iup_split.c"
   $182 = $3; //@line 325 "../../iup_split.c"
   _iupDrawFlush($182); //@line 325 "../../iup_split.c"
   $183 = $3; //@line 327 "../../iup_split.c"
   _iupDrawKillCanvas($183); //@line 327 "../../iup_split.c"
   STACKTOP = sp;return -2; //@line 329 "../../iup_split.c"
  } else {
   $7 = $126; //@line 304 "../../iup_split.c"
   $147 = $3; //@line 306 "../../iup_split.c"
   $148 = $7; //@line 306 "../../iup_split.c"
   $149 = (($148) - 1)|0; //@line 306 "../../iup_split.c"
   $150 = HEAP32[$4>>2]|0; //@line 306 "../../iup_split.c"
   $151 = (($150) - 1)|0; //@line 306 "../../iup_split.c"
   $152 = $7; //@line 306 "../../iup_split.c"
   $153 = (($152) - 1)|0; //@line 306 "../../iup_split.c"
   $154 = HEAP8[$8>>0]|0; //@line 306 "../../iup_split.c"
   $155 = HEAP8[$9>>0]|0; //@line 306 "../../iup_split.c"
   $156 = HEAP8[$10>>0]|0; //@line 306 "../../iup_split.c"
   _iupDrawLine($147,0,$149,$151,$153,$154,$155,$156,1); //@line 306 "../../iup_split.c"
   $157 = $3; //@line 307 "../../iup_split.c"
   $158 = $7; //@line 307 "../../iup_split.c"
   $159 = (($158) + 1)|0; //@line 307 "../../iup_split.c"
   $160 = HEAP32[$4>>2]|0; //@line 307 "../../iup_split.c"
   $161 = (($160) - 1)|0; //@line 307 "../../iup_split.c"
   $162 = $7; //@line 307 "../../iup_split.c"
   $163 = (($162) + 1)|0; //@line 307 "../../iup_split.c"
   $164 = HEAP8[$8>>0]|0; //@line 307 "../../iup_split.c"
   $165 = HEAP8[$9>>0]|0; //@line 307 "../../iup_split.c"
   $166 = HEAP8[$10>>0]|0; //@line 307 "../../iup_split.c"
   _iupDrawLine($157,0,$159,$161,$163,$164,$165,$166,1); //@line 307 "../../iup_split.c"
   $182 = $3; //@line 325 "../../iup_split.c"
   _iupDrawFlush($182); //@line 325 "../../iup_split.c"
   $183 = $3; //@line 327 "../../iup_split.c"
   _iupDrawKillCanvas($183); //@line 327 "../../iup_split.c"
   STACKTOP = sp;return -2; //@line 329 "../../iup_split.c"
  }
 }
 $43 = HEAP8[$8>>0]|0; //@line 261 "../../iup_split.c"
 $44 = $43&255; //@line 261 "../../iup_split.c"
 $45 = HEAP8[$9>>0]|0; //@line 261 "../../iup_split.c"
 $46 = $45&255; //@line 261 "../../iup_split.c"
 $47 = (($44) + ($46))|0; //@line 261 "../../iup_split.c"
 $48 = HEAP8[$10>>0]|0; //@line 261 "../../iup_split.c"
 $49 = $48&255; //@line 261 "../../iup_split.c"
 $50 = (($47) + ($49))|0; //@line 261 "../../iup_split.c"
 $51 = ($50|0)>(570); //@line 261 "../../iup_split.c"
 if ($51) {
  $13 = 100; //@line 263 "../../iup_split.c"
  $14 = 100; //@line 263 "../../iup_split.c"
  $15 = 100; //@line 263 "../../iup_split.c"
 } else {
  $13 = -1; //@line 267 "../../iup_split.c"
  $14 = -1; //@line 267 "../../iup_split.c"
  $15 = -1; //@line 267 "../../iup_split.c"
 }
 $52 = $2; //@line 270 "../../iup_split.c"
 $53 = ((($52)) + 72|0); //@line 270 "../../iup_split.c"
 $54 = HEAP32[$53>>2]|0; //@line 270 "../../iup_split.c"
 $55 = ((($54)) + 32|0); //@line 270 "../../iup_split.c"
 $56 = HEAP32[$55>>2]|0; //@line 270 "../../iup_split.c"
 $57 = ($56|0)==(0); //@line 270 "../../iup_split.c"
 if ($57) {
  $58 = $2; //@line 272 "../../iup_split.c"
  $59 = ((($58)) + 72|0); //@line 272 "../../iup_split.c"
  $60 = HEAP32[$59>>2]|0; //@line 272 "../../iup_split.c"
  $61 = ((($60)) + 28|0); //@line 272 "../../iup_split.c"
  $62 = HEAP32[$61>>2]|0; //@line 272 "../../iup_split.c"
  $63 = (($62|0) / 2)&-1; //@line 272 "../../iup_split.c"
  $64 = (($63) - 1)|0; //@line 272 "../../iup_split.c"
  $6 = $64; //@line 272 "../../iup_split.c"
  $7 = 2; //@line 273 "../../iup_split.c"
  $65 = HEAP32[$5>>2]|0; //@line 274 "../../iup_split.c"
  $66 = (($65) - 2)|0; //@line 274 "../../iup_split.c"
  $67 = (($66|0) / 5)&-1; //@line 274 "../../iup_split.c"
  $12 = $67; //@line 274 "../../iup_split.c"
 } else {
  $6 = 2; //@line 278 "../../iup_split.c"
  $68 = $2; //@line 279 "../../iup_split.c"
  $69 = ((($68)) + 72|0); //@line 279 "../../iup_split.c"
  $70 = HEAP32[$69>>2]|0; //@line 279 "../../iup_split.c"
  $71 = ((($70)) + 28|0); //@line 279 "../../iup_split.c"
  $72 = HEAP32[$71>>2]|0; //@line 279 "../../iup_split.c"
  $73 = (($72|0) / 2)&-1; //@line 279 "../../iup_split.c"
  $74 = (($73) - 1)|0; //@line 279 "../../iup_split.c"
  $7 = $74; //@line 279 "../../iup_split.c"
  $75 = HEAP32[$4>>2]|0; //@line 280 "../../iup_split.c"
  $76 = (($75) - 2)|0; //@line 280 "../../iup_split.c"
  $77 = (($76|0) / 5)&-1; //@line 280 "../../iup_split.c"
  $12 = $77; //@line 280 "../../iup_split.c"
 }
 $11 = 0; //@line 283 "../../iup_split.c"
 while(1) {
  $78 = $11; //@line 283 "../../iup_split.c"
  $79 = $12; //@line 283 "../../iup_split.c"
  $80 = ($78|0)<($79|0); //@line 283 "../../iup_split.c"
  if (!($80)) {
   break;
  }
  $81 = $3; //@line 285 "../../iup_split.c"
  $82 = $6; //@line 285 "../../iup_split.c"
  $83 = (($82) + 1)|0; //@line 285 "../../iup_split.c"
  $84 = $7; //@line 285 "../../iup_split.c"
  $85 = (($84) + 1)|0; //@line 285 "../../iup_split.c"
  $86 = $6; //@line 285 "../../iup_split.c"
  $87 = (($86) + 2)|0; //@line 285 "../../iup_split.c"
  $88 = $7; //@line 285 "../../iup_split.c"
  $89 = (($88) + 2)|0; //@line 285 "../../iup_split.c"
  $90 = $13; //@line 285 "../../iup_split.c"
  $91 = $14; //@line 285 "../../iup_split.c"
  $92 = $15; //@line 285 "../../iup_split.c"
  _iupDrawRectangle($81,$83,$85,$87,$89,$90,$91,$92,0); //@line 285 "../../iup_split.c"
  $93 = $3; //@line 286 "../../iup_split.c"
  $94 = $6; //@line 286 "../../iup_split.c"
  $95 = $7; //@line 286 "../../iup_split.c"
  $96 = $6; //@line 286 "../../iup_split.c"
  $97 = (($96) + 1)|0; //@line 286 "../../iup_split.c"
  $98 = $7; //@line 286 "../../iup_split.c"
  $99 = (($98) + 1)|0; //@line 286 "../../iup_split.c"
  $100 = HEAP8[$8>>0]|0; //@line 286 "../../iup_split.c"
  $101 = HEAP8[$9>>0]|0; //@line 286 "../../iup_split.c"
  $102 = HEAP8[$10>>0]|0; //@line 286 "../../iup_split.c"
  _iupDrawRectangle($93,$94,$95,$97,$99,$100,$101,$102,0); //@line 286 "../../iup_split.c"
  $103 = $2; //@line 287 "../../iup_split.c"
  $104 = ((($103)) + 72|0); //@line 287 "../../iup_split.c"
  $105 = HEAP32[$104>>2]|0; //@line 287 "../../iup_split.c"
  $106 = ((($105)) + 32|0); //@line 287 "../../iup_split.c"
  $107 = HEAP32[$106>>2]|0; //@line 287 "../../iup_split.c"
  $108 = ($107|0)==(0); //@line 287 "../../iup_split.c"
  if ($108) {
   $109 = $7; //@line 288 "../../iup_split.c"
   $110 = (($109) + 5)|0; //@line 288 "../../iup_split.c"
   $7 = $110; //@line 288 "../../iup_split.c"
  } else {
   $111 = $6; //@line 290 "../../iup_split.c"
   $112 = (($111) + 5)|0; //@line 290 "../../iup_split.c"
   $6 = $112; //@line 290 "../../iup_split.c"
  }
  $113 = $11; //@line 283 "../../iup_split.c"
  $114 = (($113) + 1)|0; //@line 283 "../../iup_split.c"
  $11 = $114; //@line 283 "../../iup_split.c"
 }
 $182 = $3; //@line 325 "../../iup_split.c"
 _iupDrawFlush($182); //@line 325 "../../iup_split.c"
 $183 = $3; //@line 327 "../../iup_split.c"
 _iupDrawKillCanvas($183); //@line 327 "../../iup_split.c"
 STACKTOP = sp;return -2; //@line 329 "../../iup_split.c"
}
function _iSplitSetBarPosition($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 214 "../../iup_split.c"
 $5 = ((($4)) + 28|0); //@line 214 "../../iup_split.c"
 $6 = HEAP32[$5>>2]|0; //@line 214 "../../iup_split.c"
 $2 = $6; //@line 214 "../../iup_split.c"
 $7 = $1; //@line 215 "../../iup_split.c"
 $8 = ((($7)) + 32|0); //@line 215 "../../iup_split.c"
 $9 = HEAP32[$8>>2]|0; //@line 215 "../../iup_split.c"
 $3 = $9; //@line 215 "../../iup_split.c"
 $10 = $1; //@line 217 "../../iup_split.c"
 $11 = ((($10)) + 72|0); //@line 217 "../../iup_split.c"
 $12 = HEAP32[$11>>2]|0; //@line 217 "../../iup_split.c"
 $13 = ((($12)) + 32|0); //@line 217 "../../iup_split.c"
 $14 = HEAP32[$13>>2]|0; //@line 217 "../../iup_split.c"
 $15 = ($14|0)==(0); //@line 217 "../../iup_split.c"
 $16 = $1; //@line 220 "../../iup_split.c"
 if ($15) {
  $17 = (_iSplitGetWidth1($16)|0); //@line 220 "../../iup_split.c"
  $18 = $2; //@line 220 "../../iup_split.c"
  $19 = (($18) + ($17))|0; //@line 220 "../../iup_split.c"
  $2 = $19; //@line 220 "../../iup_split.c"
  $20 = $1; //@line 221 "../../iup_split.c"
  $21 = ((($20)) + 64|0); //@line 221 "../../iup_split.c"
  $22 = HEAP32[$21>>2]|0; //@line 221 "../../iup_split.c"
  $23 = $2; //@line 221 "../../iup_split.c"
  $24 = $3; //@line 221 "../../iup_split.c"
  _iupBaseSetPosition($22,$23,$24); //@line 221 "../../iup_split.c"
 } else {
  $25 = (_iSplitGetHeight1($16)|0); //@line 226 "../../iup_split.c"
  $26 = $3; //@line 226 "../../iup_split.c"
  $27 = (($26) + ($25))|0; //@line 226 "../../iup_split.c"
  $3 = $27; //@line 226 "../../iup_split.c"
  $28 = $1; //@line 227 "../../iup_split.c"
  $29 = ((($28)) + 64|0); //@line 227 "../../iup_split.c"
  $30 = HEAP32[$29>>2]|0; //@line 227 "../../iup_split.c"
  $31 = $2; //@line 227 "../../iup_split.c"
  $32 = $3; //@line 227 "../../iup_split.c"
  _iupBaseSetPosition($30,$31,$32); //@line 227 "../../iup_split.c"
 }
 $33 = $1; //@line 230 "../../iup_split.c"
 $34 = ((($33)) + 64|0); //@line 230 "../../iup_split.c"
 $35 = HEAP32[$34>>2]|0; //@line 230 "../../iup_split.c"
 _IupSetAttribute($35,16013,16020); //@line 230 "../../iup_split.c"
 $36 = $1; //@line 231 "../../iup_split.c"
 $37 = ((($36)) + 64|0); //@line 231 "../../iup_split.c"
 $38 = HEAP32[$37>>2]|0; //@line 231 "../../iup_split.c"
 _iupClassObjectLayoutUpdate($38); //@line 231 "../../iup_split.c"
 STACKTOP = sp;return; //@line 232 "../../iup_split.c"
}
function _iupStrEqual($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 50 "../../iup_str.c"
 $6 = $4; //@line 50 "../../iup_str.c"
 $7 = ($5|0)==($6|0); //@line 50 "../../iup_str.c"
 if ($7) {
  $2 = 1; //@line 50 "../../iup_str.c"
  $38 = $2; //@line 54 "../../iup_str.c"
  STACKTOP = sp;return ($38|0); //@line 54 "../../iup_str.c"
 }
 $8 = $3; //@line 50 "../../iup_str.c"
 $9 = ($8|0)!=(0|0); //@line 50 "../../iup_str.c"
 $10 = $4; //@line 50 "../../iup_str.c"
 $11 = ($10|0)!=(0|0); //@line 50 "../../iup_str.c"
 $or$cond = $9 & $11; //@line 50 "../../iup_str.c"
 if (!($or$cond)) {
  $2 = 0; //@line 50 "../../iup_str.c"
  $38 = $2; //@line 54 "../../iup_str.c"
  STACKTOP = sp;return ($38|0); //@line 54 "../../iup_str.c"
 }
 while(1) {
  $12 = $3; //@line 50 "../../iup_str.c"
  $13 = HEAP8[$12>>0]|0; //@line 50 "../../iup_str.c"
  $14 = $13 << 24 >> 24; //@line 50 "../../iup_str.c"
  $15 = ($14|0)!=(0); //@line 50 "../../iup_str.c"
  if ($15) {
   $16 = $4; //@line 50 "../../iup_str.c"
   $17 = HEAP8[$16>>0]|0; //@line 50 "../../iup_str.c"
   $18 = $17 << 24 >> 24; //@line 50 "../../iup_str.c"
   $19 = ($18|0)!=(0); //@line 50 "../../iup_str.c"
   if ($19) {
    $20 = $3; //@line 50 "../../iup_str.c"
    $21 = HEAP8[$20>>0]|0; //@line 50 "../../iup_str.c"
    $22 = $21 << 24 >> 24; //@line 50 "../../iup_str.c"
    $23 = $4; //@line 50 "../../iup_str.c"
    $24 = HEAP8[$23>>0]|0; //@line 50 "../../iup_str.c"
    $25 = $24 << 24 >> 24; //@line 50 "../../iup_str.c"
    $26 = ($22|0)==($25|0); //@line 50 "../../iup_str.c"
    $39 = $26;
   } else {
    $39 = 0;
   }
  } else {
   $39 = 0;
  }
  $27 = $3; //@line 50 "../../iup_str.c"
  if (!($39)) {
   break;
  }
  $28 = $3; //@line 50 "../../iup_str.c"
  $29 = ((($28)) + 1|0); //@line 50 "../../iup_str.c"
  $3 = $29; //@line 50 "../../iup_str.c"
  $30 = $4; //@line 50 "../../iup_str.c"
  $31 = ((($30)) + 1|0); //@line 50 "../../iup_str.c"
  $4 = $31; //@line 50 "../../iup_str.c"
 }
 $32 = HEAP8[$27>>0]|0; //@line 50 "../../iup_str.c"
 $33 = $32 << 24 >> 24; //@line 50 "../../iup_str.c"
 $34 = $4; //@line 50 "../../iup_str.c"
 $35 = HEAP8[$34>>0]|0; //@line 50 "../../iup_str.c"
 $36 = $35 << 24 >> 24; //@line 50 "../../iup_str.c"
 $37 = ($33|0)==($36|0); //@line 50 "../../iup_str.c"
 if ($37) {
  $2 = 1; //@line 50 "../../iup_str.c"
  $38 = $2; //@line 54 "../../iup_str.c"
  STACKTOP = sp;return ($38|0); //@line 54 "../../iup_str.c"
 } else {
  $2 = 0; //@line 53 "../../iup_str.c"
  $38 = $2; //@line 54 "../../iup_str.c"
  STACKTOP = sp;return ($38|0); //@line 54 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrEqualPartial($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 60 "../../iup_str.c"
 $6 = $4; //@line 60 "../../iup_str.c"
 $7 = ($5|0)==($6|0); //@line 60 "../../iup_str.c"
 if ($7) {
  $2 = 1; //@line 60 "../../iup_str.c"
  $42 = $2; //@line 66 "../../iup_str.c"
  STACKTOP = sp;return ($42|0); //@line 66 "../../iup_str.c"
 }
 $8 = $3; //@line 60 "../../iup_str.c"
 $9 = ($8|0)!=(0|0); //@line 60 "../../iup_str.c"
 $10 = $4; //@line 60 "../../iup_str.c"
 $11 = ($10|0)!=(0|0); //@line 60 "../../iup_str.c"
 $or$cond = $9 & $11; //@line 60 "../../iup_str.c"
 if (!($or$cond)) {
  $2 = 0; //@line 60 "../../iup_str.c"
  $42 = $2; //@line 66 "../../iup_str.c"
  STACKTOP = sp;return ($42|0); //@line 66 "../../iup_str.c"
 }
 while(1) {
  $12 = $3; //@line 60 "../../iup_str.c"
  $13 = HEAP8[$12>>0]|0; //@line 60 "../../iup_str.c"
  $14 = $13 << 24 >> 24; //@line 60 "../../iup_str.c"
  $15 = ($14|0)!=(0); //@line 60 "../../iup_str.c"
  if ($15) {
   $16 = $4; //@line 60 "../../iup_str.c"
   $17 = HEAP8[$16>>0]|0; //@line 60 "../../iup_str.c"
   $18 = $17 << 24 >> 24; //@line 60 "../../iup_str.c"
   $19 = ($18|0)!=(0); //@line 60 "../../iup_str.c"
   if ($19) {
    $20 = $3; //@line 60 "../../iup_str.c"
    $21 = HEAP8[$20>>0]|0; //@line 60 "../../iup_str.c"
    $22 = $21 << 24 >> 24; //@line 60 "../../iup_str.c"
    $23 = $4; //@line 60 "../../iup_str.c"
    $24 = HEAP8[$23>>0]|0; //@line 60 "../../iup_str.c"
    $25 = $24 << 24 >> 24; //@line 60 "../../iup_str.c"
    $26 = ($22|0)==($25|0); //@line 60 "../../iup_str.c"
    $43 = $26;
   } else {
    $43 = 0;
   }
  } else {
   $43 = 0;
  }
  $27 = $3; //@line 60 "../../iup_str.c"
  if (!($43)) {
   break;
  }
  $28 = $3; //@line 60 "../../iup_str.c"
  $29 = ((($28)) + 1|0); //@line 60 "../../iup_str.c"
  $3 = $29; //@line 60 "../../iup_str.c"
  $30 = $4; //@line 60 "../../iup_str.c"
  $31 = ((($30)) + 1|0); //@line 60 "../../iup_str.c"
  $4 = $31; //@line 60 "../../iup_str.c"
 }
 $32 = HEAP8[$27>>0]|0; //@line 60 "../../iup_str.c"
 $33 = $32 << 24 >> 24; //@line 60 "../../iup_str.c"
 $34 = $4; //@line 60 "../../iup_str.c"
 $35 = HEAP8[$34>>0]|0; //@line 60 "../../iup_str.c"
 $36 = $35 << 24 >> 24; //@line 60 "../../iup_str.c"
 $37 = ($33|0)==($36|0); //@line 60 "../../iup_str.c"
 if ($37) {
  $2 = 1; //@line 60 "../../iup_str.c"
  $42 = $2; //@line 66 "../../iup_str.c"
  STACKTOP = sp;return ($42|0); //@line 66 "../../iup_str.c"
 }
 $38 = $4; //@line 63 "../../iup_str.c"
 $39 = HEAP8[$38>>0]|0; //@line 63 "../../iup_str.c"
 $40 = $39 << 24 >> 24; //@line 63 "../../iup_str.c"
 $41 = ($40|0)==(0); //@line 63 "../../iup_str.c"
 if ($41) {
  $2 = 1; //@line 64 "../../iup_str.c"
  $42 = $2; //@line 66 "../../iup_str.c"
  STACKTOP = sp;return ($42|0); //@line 66 "../../iup_str.c"
 } else {
  $2 = 0; //@line 65 "../../iup_str.c"
  $42 = $2; //@line 66 "../../iup_str.c"
  STACKTOP = sp;return ($42|0); //@line 66 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrEqualNoCase($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 72 "../../iup_str.c"
 $6 = $4; //@line 72 "../../iup_str.c"
 $7 = ($5|0)==($6|0); //@line 72 "../../iup_str.c"
 if ($7) {
  $2 = 1; //@line 72 "../../iup_str.c"
  $66 = $2; //@line 76 "../../iup_str.c"
  STACKTOP = sp;return ($66|0); //@line 76 "../../iup_str.c"
 }
 $8 = $3; //@line 72 "../../iup_str.c"
 $9 = ($8|0)!=(0|0); //@line 72 "../../iup_str.c"
 $10 = $4; //@line 72 "../../iup_str.c"
 $11 = ($10|0)!=(0|0); //@line 72 "../../iup_str.c"
 $or$cond = $9 & $11; //@line 72 "../../iup_str.c"
 if (!($or$cond)) {
  $2 = 0; //@line 72 "../../iup_str.c"
  $66 = $2; //@line 76 "../../iup_str.c"
  STACKTOP = sp;return ($66|0); //@line 76 "../../iup_str.c"
 }
 while(1) {
  $12 = $3; //@line 72 "../../iup_str.c"
  $13 = HEAP8[$12>>0]|0; //@line 72 "../../iup_str.c"
  $14 = $13 << 24 >> 24; //@line 72 "../../iup_str.c"
  $15 = ($14|0)!=(0); //@line 72 "../../iup_str.c"
  if ($15) {
   $16 = $4; //@line 72 "../../iup_str.c"
   $17 = HEAP8[$16>>0]|0; //@line 72 "../../iup_str.c"
   $18 = $17 << 24 >> 24; //@line 72 "../../iup_str.c"
   $19 = ($18|0)!=(0); //@line 72 "../../iup_str.c"
   if ($19) {
    $20 = $3; //@line 72 "../../iup_str.c"
    $21 = HEAP8[$20>>0]|0; //@line 72 "../../iup_str.c"
    $22 = $21 << 24 >> 24; //@line 72 "../../iup_str.c"
    $23 = ($22|0)>=(65); //@line 72 "../../iup_str.c"
    if ($23) {
     $24 = $3; //@line 72 "../../iup_str.c"
     $25 = HEAP8[$24>>0]|0; //@line 72 "../../iup_str.c"
     $26 = $25 << 24 >> 24; //@line 72 "../../iup_str.c"
     $27 = ($26|0)<=(90); //@line 72 "../../iup_str.c"
     if ($27) {
      $28 = $3; //@line 72 "../../iup_str.c"
      $29 = HEAP8[$28>>0]|0; //@line 72 "../../iup_str.c"
      $30 = $29 << 24 >> 24; //@line 72 "../../iup_str.c"
      $31 = (($30) - 65)|0; //@line 72 "../../iup_str.c"
      $32 = (($31) + 97)|0; //@line 72 "../../iup_str.c"
      $52 = $32;
     } else {
      label = 10;
     }
    } else {
     label = 10;
    }
    if ((label|0) == 10) {
     label = 0;
     $33 = $3; //@line 72 "../../iup_str.c"
     $34 = HEAP8[$33>>0]|0; //@line 72 "../../iup_str.c"
     $35 = $34 << 24 >> 24; //@line 72 "../../iup_str.c"
     $52 = $35;
    }
    $36 = $4; //@line 72 "../../iup_str.c"
    $37 = HEAP8[$36>>0]|0; //@line 72 "../../iup_str.c"
    $38 = $37 << 24 >> 24; //@line 72 "../../iup_str.c"
    $39 = ($38|0)>=(65); //@line 72 "../../iup_str.c"
    if ($39) {
     $40 = $4; //@line 72 "../../iup_str.c"
     $41 = HEAP8[$40>>0]|0; //@line 72 "../../iup_str.c"
     $42 = $41 << 24 >> 24; //@line 72 "../../iup_str.c"
     $43 = ($42|0)<=(90); //@line 72 "../../iup_str.c"
     if ($43) {
      $44 = $4; //@line 72 "../../iup_str.c"
      $45 = HEAP8[$44>>0]|0; //@line 72 "../../iup_str.c"
      $46 = $45 << 24 >> 24; //@line 72 "../../iup_str.c"
      $47 = (($46) - 65)|0; //@line 72 "../../iup_str.c"
      $48 = (($47) + 97)|0; //@line 72 "../../iup_str.c"
      $54 = $48;
     } else {
      label = 14;
     }
    } else {
     label = 14;
    }
    if ((label|0) == 14) {
     label = 0;
     $49 = $4; //@line 72 "../../iup_str.c"
     $50 = HEAP8[$49>>0]|0; //@line 72 "../../iup_str.c"
     $51 = $50 << 24 >> 24; //@line 72 "../../iup_str.c"
     $54 = $51;
    }
    $53 = ($52|0)==($54|0); //@line 72 "../../iup_str.c"
    $67 = $53;
   } else {
    $67 = 0;
   }
  } else {
   $67 = 0;
  }
  $55 = $3; //@line 72 "../../iup_str.c"
  if (!($67)) {
   break;
  }
  $56 = $3; //@line 72 "../../iup_str.c"
  $57 = ((($56)) + 1|0); //@line 72 "../../iup_str.c"
  $3 = $57; //@line 72 "../../iup_str.c"
  $58 = $4; //@line 72 "../../iup_str.c"
  $59 = ((($58)) + 1|0); //@line 72 "../../iup_str.c"
  $4 = $59; //@line 72 "../../iup_str.c"
 }
 $60 = HEAP8[$55>>0]|0; //@line 72 "../../iup_str.c"
 $61 = $60 << 24 >> 24; //@line 72 "../../iup_str.c"
 $62 = $4; //@line 72 "../../iup_str.c"
 $63 = HEAP8[$62>>0]|0; //@line 72 "../../iup_str.c"
 $64 = $63 << 24 >> 24; //@line 72 "../../iup_str.c"
 $65 = ($61|0)==($64|0); //@line 72 "../../iup_str.c"
 if ($65) {
  $2 = 1; //@line 72 "../../iup_str.c"
  $66 = $2; //@line 76 "../../iup_str.c"
  STACKTOP = sp;return ($66|0); //@line 76 "../../iup_str.c"
 } else {
  $2 = 0; //@line 75 "../../iup_str.c"
  $66 = $2; //@line 76 "../../iup_str.c"
  STACKTOP = sp;return ($66|0); //@line 76 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrBoolean($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 111 "../../iup_str.c"
 $4 = ($3|0)!=(0|0); //@line 111 "../../iup_str.c"
 do {
  if ($4) {
   $5 = $2; //@line 111 "../../iup_str.c"
   $6 = HEAP8[$5>>0]|0; //@line 111 "../../iup_str.c"
   $7 = $6 << 24 >> 24; //@line 111 "../../iup_str.c"
   $8 = ($7|0)==(0); //@line 111 "../../iup_str.c"
   if ($8) {
    label = 3;
   } else {
    $9 = $2; //@line 112 "../../iup_str.c"
    $10 = HEAP8[$9>>0]|0; //@line 112 "../../iup_str.c"
    $11 = $10 << 24 >> 24; //@line 112 "../../iup_str.c"
    $12 = ($11|0)==(49); //@line 112 "../../iup_str.c"
    if ($12) {
     $13 = $2; //@line 112 "../../iup_str.c"
     $14 = ((($13)) + 1|0); //@line 112 "../../iup_str.c"
     $15 = HEAP8[$14>>0]|0; //@line 112 "../../iup_str.c"
     $16 = $15 << 24 >> 24; //@line 112 "../../iup_str.c"
     $17 = ($16|0)==(0); //@line 112 "../../iup_str.c"
     if ($17) {
      $1 = 1; //@line 112 "../../iup_str.c"
      break;
     }
    }
    $18 = $2; //@line 113 "../../iup_str.c"
    $19 = (_iupStrEqualNoCase($18,20441)|0); //@line 113 "../../iup_str.c"
    $20 = ($19|0)!=(0); //@line 113 "../../iup_str.c"
    if ($20) {
     $1 = 1; //@line 113 "../../iup_str.c"
     break;
    }
    $21 = $2; //@line 114 "../../iup_str.c"
    $22 = (_iupStrEqualNoCase($21,16028)|0); //@line 114 "../../iup_str.c"
    $23 = ($22|0)!=(0); //@line 114 "../../iup_str.c"
    if ($23) {
     $1 = 1; //@line 114 "../../iup_str.c"
     break;
    } else {
     $1 = 0; //@line 115 "../../iup_str.c"
     break;
    }
   }
  } else {
   label = 3;
  }
 } while(0);
 if ((label|0) == 3) {
  $1 = 0; //@line 111 "../../iup_str.c"
 }
 $24 = $1; //@line 116 "../../iup_str.c"
 STACKTOP = sp;return ($24|0); //@line 116 "../../iup_str.c"
}
function _iupStrDup($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 148 "../../iup_str.c"
 $6 = ($5|0)!=(0|0); //@line 148 "../../iup_str.c"
 if (!($6)) {
  $1 = 0; //@line 155 "../../iup_str.c"
  $18 = $1; //@line 156 "../../iup_str.c"
  STACKTOP = sp;return ($18|0); //@line 156 "../../iup_str.c"
 }
 $7 = $2; //@line 150 "../../iup_str.c"
 $8 = (_strlen($7)|0); //@line 150 "../../iup_str.c"
 $9 = (($8) + 1)|0; //@line 150 "../../iup_str.c"
 $3 = $9; //@line 150 "../../iup_str.c"
 $10 = $3; //@line 151 "../../iup_str.c"
 $11 = (_malloc($10)|0); //@line 151 "../../iup_str.c"
 $4 = $11; //@line 151 "../../iup_str.c"
 $12 = $4; //@line 152 "../../iup_str.c"
 $13 = ($12|0)!=(0|0); //@line 152 "../../iup_str.c"
 if ($13) {
  $14 = $4; //@line 152 "../../iup_str.c"
  $15 = $2; //@line 152 "../../iup_str.c"
  $16 = $3; //@line 152 "../../iup_str.c"
  _memcpy(($14|0),($15|0),($16|0))|0; //@line 152 "../../iup_str.c"
 }
 $17 = $4; //@line 153 "../../iup_str.c"
 $1 = $17; //@line 153 "../../iup_str.c"
 $18 = $1; //@line 156 "../../iup_str.c"
 STACKTOP = sp;return ($18|0); //@line 156 "../../iup_str.c"
}
function _iupStrGetLargeMem($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = HEAP32[78]|0; //@line 314 "../../iup_str.c"
 $5 = ($4|0)==(-1); //@line 314 "../../iup_str.c"
 L1: do {
  if ($5) {
   dest=33560; stop=dest+40|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0)); //@line 318 "../../iup_str.c"
   HEAP32[78] = 0; //@line 319 "../../iup_str.c"
   $3 = 0; //@line 322 "../../iup_str.c"
   while(1) {
    $6 = $3; //@line 322 "../../iup_str.c"
    $7 = ($6|0)<(10); //@line 322 "../../iup_str.c"
    if (!($7)) {
     break L1;
    }
    $8 = $3; //@line 323 "../../iup_str.c"
    $9 = (33560 + (($8*32767)|0)|0); //@line 323 "../../iup_str.c"
    _memset(($9|0),0,32767)|0; //@line 323 "../../iup_str.c"
    $10 = $3; //@line 322 "../../iup_str.c"
    $11 = (($10) + 1)|0; //@line 322 "../../iup_str.c"
    $3 = $11; //@line 322 "../../iup_str.c"
   }
  }
 } while(0);
 $12 = HEAP32[78]|0; //@line 327 "../../iup_str.c"
 $13 = (33560 + (($12*32767)|0)|0); //@line 327 "../../iup_str.c"
 $2 = $13; //@line 327 "../../iup_str.c"
 $14 = $2; //@line 328 "../../iup_str.c"
 HEAP8[$14>>0] = 0; //@line 328 "../../iup_str.c"
 $15 = HEAP32[78]|0; //@line 330 "../../iup_str.c"
 $16 = (($15) + 1)|0; //@line 330 "../../iup_str.c"
 HEAP32[78] = $16; //@line 330 "../../iup_str.c"
 $17 = HEAP32[78]|0; //@line 331 "../../iup_str.c"
 $18 = ($17|0)==(10); //@line 331 "../../iup_str.c"
 $$ = $18 ? 0 : $16; //@line 331 "../../iup_str.c"
 HEAP32[78] = $$; //@line 332 "../../iup_str.c"
 $19 = $1; //@line 334 "../../iup_str.c"
 $20 = ($19|0)!=(0|0); //@line 334 "../../iup_str.c"
 if (!($20)) {
  $22 = $2; //@line 335 "../../iup_str.c"
  STACKTOP = sp;return ($22|0); //@line 335 "../../iup_str.c"
 }
 $21 = $1; //@line 334 "../../iup_str.c"
 HEAP32[$21>>2] = 32767; //@line 334 "../../iup_str.c"
 $22 = $2; //@line 335 "../../iup_str.c"
 STACKTOP = sp;return ($22|0); //@line 335 "../../iup_str.c"
}
function _iupStrGetMemory($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 377 "../../iup_str.c"
 $6 = ($5|0)==(-1); //@line 377 "../../iup_str.c"
 if ($6) {
  HEAP32[77] = -1; //@line 379 "../../iup_str.c"
  $3 = 0; //@line 380 "../../iup_str.c"
  while(1) {
   $7 = $3; //@line 380 "../../iup_str.c"
   $8 = ($7|0)<(50); //@line 380 "../../iup_str.c"
   if (!($8)) {
    break;
   }
   $9 = $3; //@line 382 "../../iup_str.c"
   $10 = (24688 + ($9<<2)|0); //@line 382 "../../iup_str.c"
   $11 = HEAP32[$10>>2]|0; //@line 382 "../../iup_str.c"
   $12 = ($11|0)!=(0|0); //@line 382 "../../iup_str.c"
   if ($12) {
    $13 = $3; //@line 384 "../../iup_str.c"
    $14 = (24688 + ($13<<2)|0); //@line 384 "../../iup_str.c"
    $15 = HEAP32[$14>>2]|0; //@line 384 "../../iup_str.c"
    _free($15); //@line 384 "../../iup_str.c"
    $16 = $3; //@line 385 "../../iup_str.c"
    $17 = (24688 + ($16<<2)|0); //@line 385 "../../iup_str.c"
    HEAP32[$17>>2] = 0; //@line 385 "../../iup_str.c"
   }
   $18 = $3; //@line 387 "../../iup_str.c"
   $19 = (24488 + ($18<<2)|0); //@line 387 "../../iup_str.c"
   HEAP32[$19>>2] = 0; //@line 387 "../../iup_str.c"
   $20 = $3; //@line 380 "../../iup_str.c"
   $21 = (($20) + 1)|0; //@line 380 "../../iup_str.c"
   $3 = $21; //@line 380 "../../iup_str.c"
  }
  $1 = 0; //@line 389 "../../iup_str.c"
  $71 = $1; //@line 426 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 426 "../../iup_str.c"
 }
 $22 = HEAP32[77]|0; //@line 396 "../../iup_str.c"
 $23 = ($22|0)==(-1); //@line 396 "../../iup_str.c"
 if ($23) {
  _memset((24688|0),0,200)|0; //@line 398 "../../iup_str.c"
  _memset((24488|0),0,200)|0; //@line 399 "../../iup_str.c"
  HEAP32[77] = 0; //@line 400 "../../iup_str.c"
 }
 $24 = HEAP32[77]|0; //@line 404 "../../iup_str.c"
 $25 = (24688 + ($24<<2)|0); //@line 404 "../../iup_str.c"
 $26 = HEAP32[$25>>2]|0; //@line 404 "../../iup_str.c"
 $27 = ($26|0)!=(0|0); //@line 404 "../../iup_str.c"
 if ($27) {
  $38 = HEAP32[77]|0; //@line 409 "../../iup_str.c"
  $39 = (24488 + ($38<<2)|0); //@line 409 "../../iup_str.c"
  $40 = HEAP32[$39>>2]|0; //@line 409 "../../iup_str.c"
  $41 = $2; //@line 409 "../../iup_str.c"
  $42 = (($41) + 1)|0; //@line 409 "../../iup_str.c"
  $43 = ($40|0)<($42|0); //@line 409 "../../iup_str.c"
  if ($43) {
   $44 = $2; //@line 411 "../../iup_str.c"
   $45 = (($44) + 1)|0; //@line 411 "../../iup_str.c"
   $46 = HEAP32[77]|0; //@line 411 "../../iup_str.c"
   $47 = (24488 + ($46<<2)|0); //@line 411 "../../iup_str.c"
   HEAP32[$47>>2] = $45; //@line 411 "../../iup_str.c"
   $48 = HEAP32[77]|0; //@line 412 "../../iup_str.c"
   $49 = (24688 + ($48<<2)|0); //@line 412 "../../iup_str.c"
   $50 = HEAP32[$49>>2]|0; //@line 412 "../../iup_str.c"
   $51 = HEAP32[77]|0; //@line 412 "../../iup_str.c"
   $52 = (24488 + ($51<<2)|0); //@line 412 "../../iup_str.c"
   $53 = HEAP32[$52>>2]|0; //@line 412 "../../iup_str.c"
   $54 = (_realloc($50,$53)|0); //@line 412 "../../iup_str.c"
   $55 = HEAP32[77]|0; //@line 412 "../../iup_str.c"
   $56 = (24688 + ($55<<2)|0); //@line 412 "../../iup_str.c"
   HEAP32[$56>>2] = $54; //@line 412 "../../iup_str.c"
  }
 } else {
  $28 = $2; //@line 406 "../../iup_str.c"
  $29 = (($28) + 1)|0; //@line 406 "../../iup_str.c"
  $30 = HEAP32[77]|0; //@line 406 "../../iup_str.c"
  $31 = (24488 + ($30<<2)|0); //@line 406 "../../iup_str.c"
  HEAP32[$31>>2] = $29; //@line 406 "../../iup_str.c"
  $32 = HEAP32[77]|0; //@line 407 "../../iup_str.c"
  $33 = (24488 + ($32<<2)|0); //@line 407 "../../iup_str.c"
  $34 = HEAP32[$33>>2]|0; //@line 407 "../../iup_str.c"
  $35 = (_malloc($34)|0); //@line 407 "../../iup_str.c"
  $36 = HEAP32[77]|0; //@line 407 "../../iup_str.c"
  $37 = (24688 + ($36<<2)|0); //@line 407 "../../iup_str.c"
  HEAP32[$37>>2] = $35; //@line 407 "../../iup_str.c"
 }
 $57 = HEAP32[77]|0; //@line 416 "../../iup_str.c"
 $58 = (24688 + ($57<<2)|0); //@line 416 "../../iup_str.c"
 $59 = HEAP32[$58>>2]|0; //@line 416 "../../iup_str.c"
 $60 = HEAP32[77]|0; //@line 416 "../../iup_str.c"
 $61 = (24488 + ($60<<2)|0); //@line 416 "../../iup_str.c"
 $62 = HEAP32[$61>>2]|0; //@line 416 "../../iup_str.c"
 _memset(($59|0),0,($62|0))|0; //@line 416 "../../iup_str.c"
 $63 = HEAP32[77]|0; //@line 417 "../../iup_str.c"
 $64 = (24688 + ($63<<2)|0); //@line 417 "../../iup_str.c"
 $65 = HEAP32[$64>>2]|0; //@line 417 "../../iup_str.c"
 $4 = $65; //@line 417 "../../iup_str.c"
 $66 = HEAP32[77]|0; //@line 419 "../../iup_str.c"
 $67 = (($66) + 1)|0; //@line 419 "../../iup_str.c"
 HEAP32[77] = $67; //@line 419 "../../iup_str.c"
 $68 = HEAP32[77]|0; //@line 420 "../../iup_str.c"
 $69 = ($68|0)==(50); //@line 420 "../../iup_str.c"
 $$ = $69 ? 0 : $67; //@line 420 "../../iup_str.c"
 HEAP32[77] = $$; //@line 421 "../../iup_str.c"
 $70 = $4; //@line 423 "../../iup_str.c"
 $1 = $70; //@line 423 "../../iup_str.c"
 $71 = $1; //@line 426 "../../iup_str.c"
 STACKTOP = sp;return ($71|0); //@line 426 "../../iup_str.c"
}
function _iupStrReturnStrf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp;
 $1 = $0;
 $4 = (_iupStrGetMemory(1024)|0); //@line 430 "../../iup_str.c"
 $2 = $4; //@line 430 "../../iup_str.c"
 HEAP32[$3>>2] = $varargs; //@line 432 "../../iup_str.c"
 $5 = $2; //@line 433 "../../iup_str.c"
 $6 = $1; //@line 433 "../../iup_str.c"
 (_vsnprintf($5,1024,$6,$3)|0); //@line 433 "../../iup_str.c"
 $7 = $2; //@line 435 "../../iup_str.c"
 STACKTOP = sp;return ($7|0); //@line 435 "../../iup_str.c"
}
function _iupStrReturnStr($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 440 "../../iup_str.c"
 $6 = ($5|0)!=(0|0); //@line 440 "../../iup_str.c"
 if ($6) {
  $7 = $2; //@line 442 "../../iup_str.c"
  $8 = (_strlen($7)|0); //@line 442 "../../iup_str.c"
  $9 = (($8) + 1)|0; //@line 442 "../../iup_str.c"
  $3 = $9; //@line 442 "../../iup_str.c"
  $10 = $3; //@line 443 "../../iup_str.c"
  $11 = (_iupStrGetMemory($10)|0); //@line 443 "../../iup_str.c"
  $4 = $11; //@line 443 "../../iup_str.c"
  $12 = $4; //@line 444 "../../iup_str.c"
  $13 = $2; //@line 444 "../../iup_str.c"
  $14 = $3; //@line 444 "../../iup_str.c"
  _memcpy(($12|0),($13|0),($14|0))|0; //@line 444 "../../iup_str.c"
  $15 = $4; //@line 445 "../../iup_str.c"
  $1 = $15; //@line 445 "../../iup_str.c"
  $16 = $1; //@line 449 "../../iup_str.c"
  STACKTOP = sp;return ($16|0); //@line 449 "../../iup_str.c"
 } else {
  $1 = 0; //@line 448 "../../iup_str.c"
  $16 = $1; //@line 449 "../../iup_str.c"
  STACKTOP = sp;return ($16|0); //@line 449 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrReturnBoolean($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 453 "../../iup_str.c"
 $4 = ($3|0)!=(0); //@line 453 "../../iup_str.c"
 if ($4) {
  $1 = 20441; //@line 454 "../../iup_str.c"
 } else {
  $1 = 20140; //@line 456 "../../iup_str.c"
 }
 $5 = $1; //@line 457 "../../iup_str.c"
 STACKTOP = sp;return ($5|0); //@line 457 "../../iup_str.c"
}
function _iupStrReturnChecked($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 461 "../../iup_str.c"
 $4 = ($3|0)==(-1); //@line 461 "../../iup_str.c"
 do {
  if ($4) {
   $1 = 16031; //@line 462 "../../iup_str.c"
  } else {
   $5 = $2; //@line 463 "../../iup_str.c"
   $6 = ($5|0)!=(0); //@line 463 "../../iup_str.c"
   if ($6) {
    $1 = 16028; //@line 464 "../../iup_str.c"
    break;
   } else {
    $1 = 16024; //@line 466 "../../iup_str.c"
    break;
   }
  }
 } while(0);
 $7 = $1; //@line 467 "../../iup_str.c"
 STACKTOP = sp;return ($7|0); //@line 467 "../../iup_str.c"
}
function _iupStrReturnInt($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = $0;
 $3 = (_iupStrGetSmallMem()|0); //@line 471 "../../iup_str.c"
 $2 = $3; //@line 471 "../../iup_str.c"
 $4 = $2; //@line 472 "../../iup_str.c"
 $5 = $1; //@line 472 "../../iup_str.c"
 HEAP32[$vararg_buffer>>2] = $5; //@line 472 "../../iup_str.c"
 (_sprintf($4,16038,$vararg_buffer)|0); //@line 472 "../../iup_str.c"
 $6 = $2; //@line 473 "../../iup_str.c"
 STACKTOP = sp;return ($6|0); //@line 473 "../../iup_str.c"
}
function _iupStrGetSmallMem() {
 var $$ = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = HEAP32[76]|0; //@line 349 "../../iup_str.c"
 $2 = ($1|0)==(-1); //@line 349 "../../iup_str.c"
 if ($2) {
  _memset((25560|0),0,400)|0; //@line 351 "../../iup_str.c"
  HEAP32[76] = 0; //@line 352 "../../iup_str.c"
 }
 $3 = HEAP32[76]|0; //@line 356 "../../iup_str.c"
 $4 = (25560 + (($3*80)|0)|0); //@line 356 "../../iup_str.c"
 dest=$4; stop=dest+80|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0)); //@line 356 "../../iup_str.c"
 $5 = HEAP32[76]|0; //@line 357 "../../iup_str.c"
 $6 = (25560 + (($5*80)|0)|0); //@line 357 "../../iup_str.c"
 $0 = $6; //@line 357 "../../iup_str.c"
 $7 = HEAP32[76]|0; //@line 359 "../../iup_str.c"
 $8 = (($7) + 1)|0; //@line 359 "../../iup_str.c"
 HEAP32[76] = $8; //@line 359 "../../iup_str.c"
 $9 = HEAP32[76]|0; //@line 360 "../../iup_str.c"
 $10 = ($9|0)==(100); //@line 360 "../../iup_str.c"
 $$ = $10 ? 0 : $8; //@line 360 "../../iup_str.c"
 HEAP32[76] = $$; //@line 361 "../../iup_str.c"
 $11 = $0; //@line 363 "../../iup_str.c"
 STACKTOP = sp;return ($11|0); //@line 363 "../../iup_str.c"
}
function _iupStrReturnFloat($0) {
 $0 = +$0;
 var $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = $0;
 $3 = (_iupStrGetSmallMem()|0); //@line 478 "../../iup_str.c"
 $2 = $3; //@line 478 "../../iup_str.c"
 $4 = $2; //@line 479 "../../iup_str.c"
 $5 = $1; //@line 479 "../../iup_str.c"
 $6 = $5; //@line 479 "../../iup_str.c"
 HEAPF64[$vararg_buffer>>3] = $6; //@line 479 "../../iup_str.c"
 (_sprintf($4,16041,$vararg_buffer)|0); //@line 479 "../../iup_str.c"
 $7 = $2; //@line 480 "../../iup_str.c"
 STACKTOP = sp;return ($7|0); //@line 480 "../../iup_str.c"
}
function _iupStrReturnDouble($0) {
 $0 = +$0;
 var $1 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp + 8|0;
 $1 = $0;
 $3 = (_iupStrGetSmallMem()|0); //@line 485 "../../iup_str.c"
 $2 = $3; //@line 485 "../../iup_str.c"
 $4 = $2; //@line 486 "../../iup_str.c"
 $5 = $1; //@line 486 "../../iup_str.c"
 HEAPF64[$vararg_buffer>>3] = $5; //@line 486 "../../iup_str.c"
 (_sprintf($4,16046,$vararg_buffer)|0); //@line 486 "../../iup_str.c"
 $6 = $2; //@line 487 "../../iup_str.c"
 STACKTOP = sp;return ($6|0); //@line 487 "../../iup_str.c"
}
function _iupStrReturnIntInt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = (_iupStrGetSmallMem()|0); //@line 525 "../../iup_str.c"
 $6 = $7; //@line 525 "../../iup_str.c"
 $8 = $6; //@line 526 "../../iup_str.c"
 $9 = $3; //@line 526 "../../iup_str.c"
 $10 = $5; //@line 526 "../../iup_str.c"
 $11 = $10 << 24 >> 24; //@line 526 "../../iup_str.c"
 $12 = $4; //@line 526 "../../iup_str.c"
 HEAP32[$vararg_buffer>>2] = $9; //@line 526 "../../iup_str.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 526 "../../iup_str.c"
 HEAP32[$vararg_ptr1>>2] = $11; //@line 526 "../../iup_str.c"
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 526 "../../iup_str.c"
 HEAP32[$vararg_ptr2>>2] = $12; //@line 526 "../../iup_str.c"
 (_sprintf($8,16052,$vararg_buffer)|0); //@line 526 "../../iup_str.c"
 $13 = $6; //@line 527 "../../iup_str.c"
 STACKTOP = sp;return ($13|0); //@line 527 "../../iup_str.c"
}
function _iupStrToInt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 596 "../../iup_str.c"
 $6 = ($5|0)!=(0|0); //@line 596 "../../iup_str.c"
 do {
  if ($6) {
   $7 = $3; //@line 597 "../../iup_str.c"
   $8 = $4; //@line 597 "../../iup_str.c"
   HEAP32[$vararg_buffer>>2] = $8; //@line 597 "../../iup_str.c"
   $9 = (_sscanf($7,16038,$vararg_buffer)|0); //@line 597 "../../iup_str.c"
   $10 = ($9|0)!=(1); //@line 597 "../../iup_str.c"
   if ($10) {
    $2 = 0; //@line 597 "../../iup_str.c"
    break;
   } else {
    $2 = 1; //@line 598 "../../iup_str.c"
    break;
   }
  } else {
   $2 = 0; //@line 596 "../../iup_str.c"
  }
 } while(0);
 $11 = $2; //@line 599 "../../iup_str.c"
 STACKTOP = sp;return ($11|0); //@line 599 "../../iup_str.c"
}
function _iupStrToRGB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $vararg_buffer = 0;
 var $vararg_buffer6 = 0, $vararg_ptr10 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer = sp;
 $9 = sp + 36|0;
 $10 = sp + 32|0;
 $11 = sp + 28|0;
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 HEAP32[$9>>2] = 0; //@line 552 "../../iup_str.c"
 HEAP32[$10>>2] = 0; //@line 552 "../../iup_str.c"
 HEAP32[$11>>2] = 0; //@line 552 "../../iup_str.c"
 $12 = $5; //@line 553 "../../iup_str.c"
 $13 = ($12|0)!=(0|0); //@line 553 "../../iup_str.c"
 if (!($13)) {
  $4 = 0; //@line 553 "../../iup_str.c"
  $40 = $4; //@line 568 "../../iup_str.c"
  STACKTOP = sp;return ($40|0); //@line 568 "../../iup_str.c"
 }
 $14 = $5; //@line 554 "../../iup_str.c"
 $15 = HEAP8[$14>>0]|0; //@line 554 "../../iup_str.c"
 $16 = $15 << 24 >> 24; //@line 554 "../../iup_str.c"
 $17 = ($16|0)==(35); //@line 554 "../../iup_str.c"
 $18 = $5; //@line 556 "../../iup_str.c"
 if ($17) {
  $19 = ((($18)) + 1|0); //@line 556 "../../iup_str.c"
  $5 = $19; //@line 556 "../../iup_str.c"
  $20 = $5; //@line 557 "../../iup_str.c"
  HEAP32[$vararg_buffer>>2] = $9; //@line 557 "../../iup_str.c"
  $vararg_ptr4 = ((($vararg_buffer)) + 4|0); //@line 557 "../../iup_str.c"
  HEAP32[$vararg_ptr4>>2] = $10; //@line 557 "../../iup_str.c"
  $vararg_ptr5 = ((($vararg_buffer)) + 8|0); //@line 557 "../../iup_str.c"
  HEAP32[$vararg_ptr5>>2] = $11; //@line 557 "../../iup_str.c"
  $21 = (_sscanf($20,16059,$vararg_buffer)|0); //@line 557 "../../iup_str.c"
  $22 = ($21|0)!=(3); //@line 557 "../../iup_str.c"
  if ($22) {
   $4 = 0; //@line 557 "../../iup_str.c"
   $40 = $4; //@line 568 "../../iup_str.c"
   STACKTOP = sp;return ($40|0); //@line 568 "../../iup_str.c"
  }
 } else {
  HEAP32[$vararg_buffer6>>2] = $9; //@line 561 "../../iup_str.c"
  $vararg_ptr9 = ((($vararg_buffer6)) + 4|0); //@line 561 "../../iup_str.c"
  HEAP32[$vararg_ptr9>>2] = $10; //@line 561 "../../iup_str.c"
  $vararg_ptr10 = ((($vararg_buffer6)) + 8|0); //@line 561 "../../iup_str.c"
  HEAP32[$vararg_ptr10>>2] = $11; //@line 561 "../../iup_str.c"
  $23 = (_sscanf($18,16069,$vararg_buffer6)|0); //@line 561 "../../iup_str.c"
  $24 = ($23|0)!=(3); //@line 561 "../../iup_str.c"
  if ($24) {
   $4 = 0; //@line 561 "../../iup_str.c"
   $40 = $4; //@line 568 "../../iup_str.c"
   STACKTOP = sp;return ($40|0); //@line 568 "../../iup_str.c"
  }
 }
 $25 = HEAP32[$9>>2]|0; //@line 563 "../../iup_str.c"
 $26 = ($25>>>0)>(255); //@line 563 "../../iup_str.c"
 $27 = HEAP32[$10>>2]|0; //@line 563 "../../iup_str.c"
 $28 = ($27>>>0)>(255); //@line 563 "../../iup_str.c"
 $or$cond = $26 | $28; //@line 563 "../../iup_str.c"
 $29 = HEAP32[$11>>2]|0; //@line 563 "../../iup_str.c"
 $30 = ($29>>>0)>(255); //@line 563 "../../iup_str.c"
 $or$cond3 = $or$cond | $30; //@line 563 "../../iup_str.c"
 if ($or$cond3) {
  $4 = 0; //@line 563 "../../iup_str.c"
  $40 = $4; //@line 568 "../../iup_str.c"
  STACKTOP = sp;return ($40|0); //@line 568 "../../iup_str.c"
 } else {
  $31 = HEAP32[$9>>2]|0; //@line 564 "../../iup_str.c"
  $32 = $31&255; //@line 564 "../../iup_str.c"
  $33 = $6; //@line 564 "../../iup_str.c"
  HEAP8[$33>>0] = $32; //@line 564 "../../iup_str.c"
  $34 = HEAP32[$10>>2]|0; //@line 565 "../../iup_str.c"
  $35 = $34&255; //@line 565 "../../iup_str.c"
  $36 = $7; //@line 565 "../../iup_str.c"
  HEAP8[$36>>0] = $35; //@line 565 "../../iup_str.c"
  $37 = HEAP32[$11>>2]|0; //@line 566 "../../iup_str.c"
  $38 = $37&255; //@line 566 "../../iup_str.c"
  $39 = $8; //@line 566 "../../iup_str.c"
  HEAP8[$39>>0] = $38; //@line 566 "../../iup_str.c"
  $4 = 1; //@line 567 "../../iup_str.c"
  $40 = $4; //@line 568 "../../iup_str.c"
  STACKTOP = sp;return ($40|0); //@line 568 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrToIntInt($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = sp + 56|0;
 HEAP32[$5>>2] = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $12 = HEAP32[$5>>2]|0; //@line 603 "../../iup_str.c"
 $13 = ($12|0)!=(0|0); //@line 603 "../../iup_str.c"
 if (!($13)) {
  $4 = 0; //@line 603 "../../iup_str.c"
  $71 = $4; //@line 636 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
 }
 $14 = HEAP32[$5>>2]|0; //@line 605 "../../iup_str.c"
 $15 = HEAP8[$14>>0]|0; //@line 605 "../../iup_str.c"
 $16 = $15 << 24 >> 24; //@line 605 "../../iup_str.c"
 $17 = ($16|0)>=(65); //@line 605 "../../iup_str.c"
 if ($17) {
  $18 = HEAP32[$5>>2]|0; //@line 605 "../../iup_str.c"
  $19 = HEAP8[$18>>0]|0; //@line 605 "../../iup_str.c"
  $20 = $19 << 24 >> 24; //@line 605 "../../iup_str.c"
  $21 = ($20|0)<=(90); //@line 605 "../../iup_str.c"
  if ($21) {
   $22 = HEAP32[$5>>2]|0; //@line 605 "../../iup_str.c"
   $23 = HEAP8[$22>>0]|0; //@line 605 "../../iup_str.c"
   $24 = $23 << 24 >> 24; //@line 605 "../../iup_str.c"
   $25 = (($24) - 65)|0; //@line 605 "../../iup_str.c"
   $26 = (($25) + 97)|0; //@line 605 "../../iup_str.c"
   $32 = $26;
  } else {
   label = 6;
  }
 } else {
  label = 6;
 }
 if ((label|0) == 6) {
  $27 = HEAP32[$5>>2]|0; //@line 605 "../../iup_str.c"
  $28 = HEAP8[$27>>0]|0; //@line 605 "../../iup_str.c"
  $29 = $28 << 24 >> 24; //@line 605 "../../iup_str.c"
  $32 = $29;
 }
 $30 = $8; //@line 605 "../../iup_str.c"
 $31 = $30 << 24 >> 24; //@line 605 "../../iup_str.c"
 $33 = ($32|0)==($31|0); //@line 605 "../../iup_str.c"
 if ($33) {
  $34 = HEAP32[$5>>2]|0; //@line 607 "../../iup_str.c"
  $35 = ((($34)) + 1|0); //@line 607 "../../iup_str.c"
  HEAP32[$5>>2] = $35; //@line 607 "../../iup_str.c"
  $36 = HEAP32[$5>>2]|0; //@line 608 "../../iup_str.c"
  $37 = $7; //@line 608 "../../iup_str.c"
  HEAP32[$vararg_buffer>>2] = $37; //@line 608 "../../iup_str.c"
  $38 = (_sscanf($36,16038,$vararg_buffer)|0); //@line 608 "../../iup_str.c"
  $39 = ($38|0)!=(1); //@line 608 "../../iup_str.c"
  if ($39) {
   $4 = 0; //@line 608 "../../iup_str.c"
   $71 = $4; //@line 636 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
  } else {
   $4 = 1; //@line 609 "../../iup_str.c"
   $71 = $4; //@line 636 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
  }
 }
 $40 = $8; //@line 613 "../../iup_str.c"
 $41 = (_iStrDupUntilNoCase($5,$40)|0); //@line 613 "../../iup_str.c"
 $9 = $41; //@line 613 "../../iup_str.c"
 $42 = $9; //@line 615 "../../iup_str.c"
 $43 = ($42|0)!=(0|0); //@line 615 "../../iup_str.c"
 $44 = HEAP32[$5>>2]|0; //@line 620 "../../iup_str.c"
 if (!($43)) {
  $45 = $6; //@line 617 "../../iup_str.c"
  HEAP32[$vararg_buffer1>>2] = $45; //@line 617 "../../iup_str.c"
  $46 = (_sscanf($44,16038,$vararg_buffer1)|0); //@line 617 "../../iup_str.c"
  $47 = ($46|0)!=(1); //@line 617 "../../iup_str.c"
  if ($47) {
   $4 = 0; //@line 617 "../../iup_str.c"
   $71 = $4; //@line 636 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
  } else {
   $4 = 1; //@line 618 "../../iup_str.c"
   $71 = $4; //@line 636 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
  }
 }
 $48 = HEAP8[$44>>0]|0; //@line 620 "../../iup_str.c"
 $49 = $48 << 24 >> 24; //@line 620 "../../iup_str.c"
 $50 = ($49|0)==(0); //@line 620 "../../iup_str.c"
 if ($50) {
  $51 = $9; //@line 622 "../../iup_str.c"
  $52 = $6; //@line 622 "../../iup_str.c"
  HEAP32[$vararg_buffer4>>2] = $52; //@line 622 "../../iup_str.c"
  $53 = (_sscanf($51,16038,$vararg_buffer4)|0); //@line 622 "../../iup_str.c"
  $10 = $53; //@line 622 "../../iup_str.c"
  $54 = $9; //@line 623 "../../iup_str.c"
  _free($54); //@line 623 "../../iup_str.c"
  $55 = $10; //@line 624 "../../iup_str.c"
  $56 = ($55|0)!=(1); //@line 624 "../../iup_str.c"
  if ($56) {
   $4 = 0; //@line 624 "../../iup_str.c"
   $71 = $4; //@line 636 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
  } else {
   $4 = 1; //@line 625 "../../iup_str.c"
   $71 = $4; //@line 636 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
  }
 }
 $11 = 0; //@line 629 "../../iup_str.c"
 $57 = $9; //@line 630 "../../iup_str.c"
 $58 = $6; //@line 630 "../../iup_str.c"
 HEAP32[$vararg_buffer7>>2] = $58; //@line 630 "../../iup_str.c"
 $59 = (_sscanf($57,16038,$vararg_buffer7)|0); //@line 630 "../../iup_str.c"
 $60 = ($59|0)==(1); //@line 630 "../../iup_str.c"
 if ($60) {
  $61 = $11; //@line 630 "../../iup_str.c"
  $62 = (($61) + 1)|0; //@line 630 "../../iup_str.c"
  $11 = $62; //@line 630 "../../iup_str.c"
 }
 $63 = HEAP32[$5>>2]|0; //@line 631 "../../iup_str.c"
 $64 = $7; //@line 631 "../../iup_str.c"
 HEAP32[$vararg_buffer10>>2] = $64; //@line 631 "../../iup_str.c"
 $65 = (_sscanf($63,16038,$vararg_buffer10)|0); //@line 631 "../../iup_str.c"
 $66 = ($65|0)==(1); //@line 631 "../../iup_str.c"
 if ($66) {
  $67 = $11; //@line 631 "../../iup_str.c"
  $68 = (($67) + 1)|0; //@line 631 "../../iup_str.c"
  $11 = $68; //@line 631 "../../iup_str.c"
 }
 $69 = $9; //@line 632 "../../iup_str.c"
 _free($69); //@line 632 "../../iup_str.c"
 $70 = $11; //@line 633 "../../iup_str.c"
 $4 = $70; //@line 633 "../../iup_str.c"
 $71 = $4; //@line 636 "../../iup_str.c"
 STACKTOP = sp;return ($71|0); //@line 636 "../../iup_str.c"
}
function _iStrDupUntilNoCase($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $9 = $3; //@line 277 "../../iup_str.c"
 $10 = ($9|0)!=(0|0); //@line 277 "../../iup_str.c"
 if ($10) {
  $11 = $3; //@line 277 "../../iup_str.c"
  $12 = HEAP32[$11>>2]|0; //@line 277 "../../iup_str.c"
  $13 = ($12|0)==(0|0); //@line 277 "../../iup_str.c"
  if (!($13)) {
   $14 = $3; //@line 280 "../../iup_str.c"
   $15 = HEAP32[$14>>2]|0; //@line 280 "../../iup_str.c"
   $16 = $4; //@line 280 "../../iup_str.c"
   $17 = $16 << 24 >> 24; //@line 280 "../../iup_str.c"
   $18 = (_strchr($15,$17)|0); //@line 280 "../../iup_str.c"
   $5 = $18; //@line 280 "../../iup_str.c"
   $19 = $5; //@line 281 "../../iup_str.c"
   $20 = ($19|0)!=(0|0); //@line 281 "../../iup_str.c"
   if (!($20)) {
    $21 = $4; //@line 281 "../../iup_str.c"
    $22 = $21 << 24 >> 24; //@line 281 "../../iup_str.c"
    $23 = ($22|0)>=(97); //@line 281 "../../iup_str.c"
    if ($23) {
     $24 = $4; //@line 281 "../../iup_str.c"
     $25 = $24 << 24 >> 24; //@line 281 "../../iup_str.c"
     $26 = ($25|0)<=(122); //@line 281 "../../iup_str.c"
     if ($26) {
      $27 = $4; //@line 281 "../../iup_str.c"
      $28 = $27 << 24 >> 24; //@line 281 "../../iup_str.c"
      $29 = (($28) - 97)|0; //@line 281 "../../iup_str.c"
      $30 = (($29) + 65)|0; //@line 281 "../../iup_str.c"
      $35 = $30;
     } else {
      label = 8;
     }
    } else {
     label = 8;
    }
    if ((label|0) == 8) {
     $31 = $4; //@line 281 "../../iup_str.c"
     $32 = $31 << 24 >> 24; //@line 281 "../../iup_str.c"
     $35 = $32;
    }
    $33 = $4; //@line 281 "../../iup_str.c"
    $34 = $33 << 24 >> 24; //@line 281 "../../iup_str.c"
    $36 = ($35|0)!=($34|0); //@line 281 "../../iup_str.c"
    if ($36) {
     $37 = $3; //@line 282 "../../iup_str.c"
     $38 = HEAP32[$37>>2]|0; //@line 282 "../../iup_str.c"
     $39 = $4; //@line 282 "../../iup_str.c"
     $40 = $39 << 24 >> 24; //@line 282 "../../iup_str.c"
     $41 = ($40|0)>=(97); //@line 282 "../../iup_str.c"
     if ($41) {
      $42 = $4; //@line 282 "../../iup_str.c"
      $43 = $42 << 24 >> 24; //@line 282 "../../iup_str.c"
      $44 = ($43|0)<=(122); //@line 282 "../../iup_str.c"
      if ($44) {
       $45 = $4; //@line 282 "../../iup_str.c"
       $46 = $45 << 24 >> 24; //@line 282 "../../iup_str.c"
       $47 = (($46) - 97)|0; //@line 282 "../../iup_str.c"
       $48 = (($47) + 65)|0; //@line 282 "../../iup_str.c"
       $51 = $48;
      } else {
       label = 13;
      }
     } else {
      label = 13;
     }
     if ((label|0) == 13) {
      $49 = $4; //@line 282 "../../iup_str.c"
      $50 = $49 << 24 >> 24; //@line 282 "../../iup_str.c"
      $51 = $50;
     }
     $52 = (_strchr($38,$51)|0); //@line 282 "../../iup_str.c"
     $5 = $52; //@line 282 "../../iup_str.c"
    }
   }
   $53 = $5; //@line 285 "../../iup_str.c"
   $54 = ($53|0)!=(0|0); //@line 285 "../../iup_str.c"
   if (!($54)) {
    $2 = 0; //@line 286 "../../iup_str.c"
    $86 = $2; //@line 303 "../../iup_str.c"
    STACKTOP = sp;return ($86|0); //@line 303 "../../iup_str.c"
   }
   $55 = $5; //@line 290 "../../iup_str.c"
   $56 = $3; //@line 290 "../../iup_str.c"
   $57 = HEAP32[$56>>2]|0; //@line 290 "../../iup_str.c"
   $58 = $55; //@line 290 "../../iup_str.c"
   $59 = $57; //@line 290 "../../iup_str.c"
   $60 = (($58) - ($59))|0; //@line 290 "../../iup_str.c"
   $8 = $60; //@line 290 "../../iup_str.c"
   $61 = $8; //@line 292 "../../iup_str.c"
   $62 = (($61) + 1)|0; //@line 292 "../../iup_str.c"
   $63 = (_malloc($62)|0); //@line 292 "../../iup_str.c"
   $6 = $63; //@line 292 "../../iup_str.c"
   $64 = $6; //@line 293 "../../iup_str.c"
   $65 = ($64|0)!=(0|0); //@line 293 "../../iup_str.c"
   if (!($65)) {
    $2 = 0; //@line 293 "../../iup_str.c"
    $86 = $2; //@line 303 "../../iup_str.c"
    STACKTOP = sp;return ($86|0); //@line 303 "../../iup_str.c"
   }
   $7 = 0; //@line 295 "../../iup_str.c"
   while(1) {
    $66 = $7; //@line 295 "../../iup_str.c"
    $67 = $8; //@line 295 "../../iup_str.c"
    $68 = ($66|0)<($67|0); //@line 295 "../../iup_str.c"
    if (!($68)) {
     break;
    }
    $69 = $7; //@line 296 "../../iup_str.c"
    $70 = $3; //@line 296 "../../iup_str.c"
    $71 = HEAP32[$70>>2]|0; //@line 296 "../../iup_str.c"
    $72 = (($71) + ($69)|0); //@line 296 "../../iup_str.c"
    $73 = HEAP8[$72>>0]|0; //@line 296 "../../iup_str.c"
    $74 = $7; //@line 296 "../../iup_str.c"
    $75 = $6; //@line 296 "../../iup_str.c"
    $76 = (($75) + ($74)|0); //@line 296 "../../iup_str.c"
    HEAP8[$76>>0] = $73; //@line 296 "../../iup_str.c"
    $77 = $7; //@line 295 "../../iup_str.c"
    $78 = (($77) + 1)|0; //@line 295 "../../iup_str.c"
    $7 = $78; //@line 295 "../../iup_str.c"
   }
   $79 = $8; //@line 298 "../../iup_str.c"
   $80 = $6; //@line 298 "../../iup_str.c"
   $81 = (($80) + ($79)|0); //@line 298 "../../iup_str.c"
   HEAP8[$81>>0] = 0; //@line 298 "../../iup_str.c"
   $82 = $5; //@line 300 "../../iup_str.c"
   $83 = ((($82)) + 1|0); //@line 300 "../../iup_str.c"
   $84 = $3; //@line 300 "../../iup_str.c"
   HEAP32[$84>>2] = $83; //@line 300 "../../iup_str.c"
   $85 = $6; //@line 301 "../../iup_str.c"
   $2 = $85; //@line 301 "../../iup_str.c"
   $86 = $2; //@line 303 "../../iup_str.c"
   STACKTOP = sp;return ($86|0); //@line 303 "../../iup_str.c"
  }
 }
 $2 = 0; //@line 278 "../../iup_str.c"
 $86 = $2; //@line 303 "../../iup_str.c"
 STACKTOP = sp;return ($86|0); //@line 303 "../../iup_str.c"
}
function _iupStrToFloat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 647 "../../iup_str.c"
 $6 = ($5|0)!=(0|0); //@line 647 "../../iup_str.c"
 do {
  if ($6) {
   $7 = $3; //@line 648 "../../iup_str.c"
   $8 = $4; //@line 648 "../../iup_str.c"
   HEAP32[$vararg_buffer>>2] = $8; //@line 648 "../../iup_str.c"
   $9 = (_sscanf($7,16078,$vararg_buffer)|0); //@line 648 "../../iup_str.c"
   $10 = ($9|0)!=(1); //@line 648 "../../iup_str.c"
   if ($10) {
    $2 = 0; //@line 648 "../../iup_str.c"
    break;
   } else {
    $2 = 1; //@line 649 "../../iup_str.c"
    break;
   }
  } else {
   $2 = 0; //@line 647 "../../iup_str.c"
  }
 } while(0);
 $11 = $2; //@line 650 "../../iup_str.c"
 STACKTOP = sp;return ($11|0); //@line 650 "../../iup_str.c"
}
function _iupStrToDouble($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 654 "../../iup_str.c"
 $6 = ($5|0)!=(0|0); //@line 654 "../../iup_str.c"
 do {
  if ($6) {
   $7 = $3; //@line 655 "../../iup_str.c"
   $8 = $4; //@line 655 "../../iup_str.c"
   HEAP32[$vararg_buffer>>2] = $8; //@line 655 "../../iup_str.c"
   $9 = (_sscanf($7,16081,$vararg_buffer)|0); //@line 655 "../../iup_str.c"
   $10 = ($9|0)!=(1); //@line 655 "../../iup_str.c"
   if ($10) {
    $2 = 0; //@line 655 "../../iup_str.c"
    break;
   } else {
    $2 = 1; //@line 656 "../../iup_str.c"
    break;
   }
  } else {
   $2 = 0; //@line 654 "../../iup_str.c"
  }
 } while(0);
 $11 = $2; //@line 657 "../../iup_str.c"
 STACKTOP = sp;return ($11|0); //@line 657 "../../iup_str.c"
}
function _iupStrToFloatFloat($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer10 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = sp + 56|0;
 HEAP32[$5>>2] = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $12 = HEAP32[$5>>2]|0; //@line 668 "../../iup_str.c"
 $13 = ($12|0)!=(0|0); //@line 668 "../../iup_str.c"
 if (!($13)) {
  $4 = 0; //@line 668 "../../iup_str.c"
  $71 = $4; //@line 701 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
 }
 $14 = HEAP32[$5>>2]|0; //@line 670 "../../iup_str.c"
 $15 = HEAP8[$14>>0]|0; //@line 670 "../../iup_str.c"
 $16 = $15 << 24 >> 24; //@line 670 "../../iup_str.c"
 $17 = ($16|0)>=(65); //@line 670 "../../iup_str.c"
 if ($17) {
  $18 = HEAP32[$5>>2]|0; //@line 670 "../../iup_str.c"
  $19 = HEAP8[$18>>0]|0; //@line 670 "../../iup_str.c"
  $20 = $19 << 24 >> 24; //@line 670 "../../iup_str.c"
  $21 = ($20|0)<=(90); //@line 670 "../../iup_str.c"
  if ($21) {
   $22 = HEAP32[$5>>2]|0; //@line 670 "../../iup_str.c"
   $23 = HEAP8[$22>>0]|0; //@line 670 "../../iup_str.c"
   $24 = $23 << 24 >> 24; //@line 670 "../../iup_str.c"
   $25 = (($24) - 65)|0; //@line 670 "../../iup_str.c"
   $26 = (($25) + 97)|0; //@line 670 "../../iup_str.c"
   $32 = $26;
  } else {
   label = 6;
  }
 } else {
  label = 6;
 }
 if ((label|0) == 6) {
  $27 = HEAP32[$5>>2]|0; //@line 670 "../../iup_str.c"
  $28 = HEAP8[$27>>0]|0; //@line 670 "../../iup_str.c"
  $29 = $28 << 24 >> 24; //@line 670 "../../iup_str.c"
  $32 = $29;
 }
 $30 = $8; //@line 670 "../../iup_str.c"
 $31 = $30 << 24 >> 24; //@line 670 "../../iup_str.c"
 $33 = ($32|0)==($31|0); //@line 670 "../../iup_str.c"
 if ($33) {
  $34 = HEAP32[$5>>2]|0; //@line 672 "../../iup_str.c"
  $35 = ((($34)) + 1|0); //@line 672 "../../iup_str.c"
  HEAP32[$5>>2] = $35; //@line 672 "../../iup_str.c"
  $36 = HEAP32[$5>>2]|0; //@line 673 "../../iup_str.c"
  $37 = $7; //@line 673 "../../iup_str.c"
  HEAP32[$vararg_buffer>>2] = $37; //@line 673 "../../iup_str.c"
  $38 = (_sscanf($36,16078,$vararg_buffer)|0); //@line 673 "../../iup_str.c"
  $39 = ($38|0)!=(1); //@line 673 "../../iup_str.c"
  if ($39) {
   $4 = 0; //@line 673 "../../iup_str.c"
   $71 = $4; //@line 701 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
  } else {
   $4 = 1; //@line 674 "../../iup_str.c"
   $71 = $4; //@line 701 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
  }
 }
 $40 = $8; //@line 678 "../../iup_str.c"
 $41 = (_iStrDupUntilNoCase($5,$40)|0); //@line 678 "../../iup_str.c"
 $9 = $41; //@line 678 "../../iup_str.c"
 $42 = $9; //@line 680 "../../iup_str.c"
 $43 = ($42|0)!=(0|0); //@line 680 "../../iup_str.c"
 $44 = HEAP32[$5>>2]|0; //@line 685 "../../iup_str.c"
 if (!($43)) {
  $45 = $6; //@line 682 "../../iup_str.c"
  HEAP32[$vararg_buffer1>>2] = $45; //@line 682 "../../iup_str.c"
  $46 = (_sscanf($44,16078,$vararg_buffer1)|0); //@line 682 "../../iup_str.c"
  $47 = ($46|0)!=(1); //@line 682 "../../iup_str.c"
  if ($47) {
   $4 = 0; //@line 682 "../../iup_str.c"
   $71 = $4; //@line 701 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
  } else {
   $4 = 1; //@line 683 "../../iup_str.c"
   $71 = $4; //@line 701 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
  }
 }
 $48 = HEAP8[$44>>0]|0; //@line 685 "../../iup_str.c"
 $49 = $48 << 24 >> 24; //@line 685 "../../iup_str.c"
 $50 = ($49|0)==(0); //@line 685 "../../iup_str.c"
 if ($50) {
  $51 = $9; //@line 687 "../../iup_str.c"
  $52 = $6; //@line 687 "../../iup_str.c"
  HEAP32[$vararg_buffer4>>2] = $52; //@line 687 "../../iup_str.c"
  $53 = (_sscanf($51,16078,$vararg_buffer4)|0); //@line 687 "../../iup_str.c"
  $10 = $53; //@line 687 "../../iup_str.c"
  $54 = $9; //@line 688 "../../iup_str.c"
  _free($54); //@line 688 "../../iup_str.c"
  $55 = $10; //@line 689 "../../iup_str.c"
  $56 = ($55|0)!=(1); //@line 689 "../../iup_str.c"
  if ($56) {
   $4 = 0; //@line 689 "../../iup_str.c"
   $71 = $4; //@line 701 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
  } else {
   $4 = 1; //@line 690 "../../iup_str.c"
   $71 = $4; //@line 701 "../../iup_str.c"
   STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
  }
 }
 $11 = 0; //@line 694 "../../iup_str.c"
 $57 = $9; //@line 695 "../../iup_str.c"
 $58 = $6; //@line 695 "../../iup_str.c"
 HEAP32[$vararg_buffer7>>2] = $58; //@line 695 "../../iup_str.c"
 $59 = (_sscanf($57,16078,$vararg_buffer7)|0); //@line 695 "../../iup_str.c"
 $60 = ($59|0)==(1); //@line 695 "../../iup_str.c"
 if ($60) {
  $61 = $11; //@line 695 "../../iup_str.c"
  $62 = (($61) + 1)|0; //@line 695 "../../iup_str.c"
  $11 = $62; //@line 695 "../../iup_str.c"
 }
 $63 = HEAP32[$5>>2]|0; //@line 696 "../../iup_str.c"
 $64 = $7; //@line 696 "../../iup_str.c"
 HEAP32[$vararg_buffer10>>2] = $64; //@line 696 "../../iup_str.c"
 $65 = (_sscanf($63,16078,$vararg_buffer10)|0); //@line 696 "../../iup_str.c"
 $66 = ($65|0)==(1); //@line 696 "../../iup_str.c"
 if ($66) {
  $67 = $11; //@line 696 "../../iup_str.c"
  $68 = (($67) + 1)|0; //@line 696 "../../iup_str.c"
  $11 = $68; //@line 696 "../../iup_str.c"
 }
 $69 = $9; //@line 697 "../../iup_str.c"
 _free($69); //@line 697 "../../iup_str.c"
 $70 = $11; //@line 698 "../../iup_str.c"
 $4 = $70; //@line 698 "../../iup_str.c"
 $71 = $4; //@line 701 "../../iup_str.c"
 STACKTOP = sp;return ($71|0); //@line 701 "../../iup_str.c"
}
function _iupStrToStrStr($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 12|0;
 HEAP32[$5>>2] = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $10 = HEAP32[$5>>2]|0; //@line 742 "../../iup_str.c"
 $11 = ($10|0)!=(0|0); //@line 742 "../../iup_str.c"
 if (!($11)) {
  $4 = 0; //@line 743 "../../iup_str.c"
  $55 = $4; //@line 777 "../../iup_str.c"
  STACKTOP = sp;return ($55|0); //@line 777 "../../iup_str.c"
 }
 $12 = HEAP32[$5>>2]|0; //@line 745 "../../iup_str.c"
 $13 = HEAP8[$12>>0]|0; //@line 745 "../../iup_str.c"
 $14 = $13 << 24 >> 24; //@line 745 "../../iup_str.c"
 $15 = ($14|0)>=(65); //@line 745 "../../iup_str.c"
 if ($15) {
  $16 = HEAP32[$5>>2]|0; //@line 745 "../../iup_str.c"
  $17 = HEAP8[$16>>0]|0; //@line 745 "../../iup_str.c"
  $18 = $17 << 24 >> 24; //@line 745 "../../iup_str.c"
  $19 = ($18|0)<=(90); //@line 745 "../../iup_str.c"
  if ($19) {
   $20 = HEAP32[$5>>2]|0; //@line 745 "../../iup_str.c"
   $21 = HEAP8[$20>>0]|0; //@line 745 "../../iup_str.c"
   $22 = $21 << 24 >> 24; //@line 745 "../../iup_str.c"
   $23 = (($22) - 65)|0; //@line 745 "../../iup_str.c"
   $24 = (($23) + 97)|0; //@line 745 "../../iup_str.c"
   $30 = $24;
  } else {
   label = 6;
  }
 } else {
  label = 6;
 }
 if ((label|0) == 6) {
  $25 = HEAP32[$5>>2]|0; //@line 745 "../../iup_str.c"
  $26 = HEAP8[$25>>0]|0; //@line 745 "../../iup_str.c"
  $27 = $26 << 24 >> 24; //@line 745 "../../iup_str.c"
  $30 = $27;
 }
 $28 = $8; //@line 745 "../../iup_str.c"
 $29 = $28 << 24 >> 24; //@line 745 "../../iup_str.c"
 $31 = ($30|0)==($29|0); //@line 745 "../../iup_str.c"
 if ($31) {
  $32 = HEAP32[$5>>2]|0; //@line 747 "../../iup_str.c"
  $33 = ((($32)) + 1|0); //@line 747 "../../iup_str.c"
  HEAP32[$5>>2] = $33; //@line 747 "../../iup_str.c"
  $34 = $6; //@line 748 "../../iup_str.c"
  HEAP8[$34>>0] = 0; //@line 748 "../../iup_str.c"
  $35 = $7; //@line 749 "../../iup_str.c"
  $36 = HEAP32[$5>>2]|0; //@line 749 "../../iup_str.c"
  (_strcpy($35,$36)|0); //@line 749 "../../iup_str.c"
  $4 = 1; //@line 750 "../../iup_str.c"
  $55 = $4; //@line 777 "../../iup_str.c"
  STACKTOP = sp;return ($55|0); //@line 777 "../../iup_str.c"
 }
 $37 = $8; //@line 754 "../../iup_str.c"
 $38 = (_iStrDupUntilNoCase($5,$37)|0); //@line 754 "../../iup_str.c"
 $9 = $38; //@line 754 "../../iup_str.c"
 $39 = $9; //@line 756 "../../iup_str.c"
 $40 = ($39|0)!=(0|0); //@line 756 "../../iup_str.c"
 if (!($40)) {
  $41 = $6; //@line 758 "../../iup_str.c"
  $42 = HEAP32[$5>>2]|0; //@line 758 "../../iup_str.c"
  (_strcpy($41,$42)|0); //@line 758 "../../iup_str.c"
  $43 = $7; //@line 759 "../../iup_str.c"
  HEAP8[$43>>0] = 0; //@line 759 "../../iup_str.c"
  $4 = 1; //@line 760 "../../iup_str.c"
  $55 = $4; //@line 777 "../../iup_str.c"
  STACKTOP = sp;return ($55|0); //@line 777 "../../iup_str.c"
 }
 $44 = HEAP32[$5>>2]|0; //@line 762 "../../iup_str.c"
 $45 = HEAP8[$44>>0]|0; //@line 762 "../../iup_str.c"
 $46 = $45 << 24 >> 24; //@line 762 "../../iup_str.c"
 $47 = ($46|0)==(0); //@line 762 "../../iup_str.c"
 $48 = $6; //@line 764 "../../iup_str.c"
 $49 = $9; //@line 764 "../../iup_str.c"
 (_strcpy($48,$49)|0); //@line 764 "../../iup_str.c"
 if ($47) {
  $50 = $9; //@line 765 "../../iup_str.c"
  _free($50); //@line 765 "../../iup_str.c"
  $51 = $7; //@line 766 "../../iup_str.c"
  HEAP8[$51>>0] = 0; //@line 766 "../../iup_str.c"
  $4 = 1; //@line 767 "../../iup_str.c"
  $55 = $4; //@line 777 "../../iup_str.c"
  STACKTOP = sp;return ($55|0); //@line 777 "../../iup_str.c"
 } else {
  $52 = $7; //@line 772 "../../iup_str.c"
  $53 = HEAP32[$5>>2]|0; //@line 772 "../../iup_str.c"
  (_strcpy($52,$53)|0); //@line 772 "../../iup_str.c"
  $54 = $9; //@line 773 "../../iup_str.c"
  _free($54); //@line 773 "../../iup_str.c"
  $4 = 2; //@line 774 "../../iup_str.c"
  $55 = $4; //@line 777 "../../iup_str.c"
  STACKTOP = sp;return ($55|0); //@line 777 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrProcessMnemonic($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = 0; //@line 1089 "../../iup_str.c"
 $8 = 0; //@line 1089 "../../iup_str.c"
 $11 = $4; //@line 1090 "../../iup_str.c"
 $10 = $11; //@line 1090 "../../iup_str.c"
 $12 = $4; //@line 1092 "../../iup_str.c"
 $13 = ($12|0)!=(0|0); //@line 1092 "../../iup_str.c"
 if (!($13)) {
  $3 = 0; //@line 1093 "../../iup_str.c"
  $71 = $3; //@line 1137 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 1137 "../../iup_str.c"
 }
 $14 = $4; //@line 1095 "../../iup_str.c"
 $15 = (_strchr($14,38)|0); //@line 1095 "../../iup_str.c"
 $16 = ($15|0)!=(0|0); //@line 1095 "../../iup_str.c"
 $17 = $4; //@line 1098 "../../iup_str.c"
 if (!($16)) {
  $3 = $17; //@line 1096 "../../iup_str.c"
  $71 = $3; //@line 1137 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 1137 "../../iup_str.c"
 }
 $18 = (_strlen($17)|0); //@line 1098 "../../iup_str.c"
 $19 = (($18) + 1)|0; //@line 1098 "../../iup_str.c"
 $20 = (_malloc($19)|0); //@line 1098 "../../iup_str.c"
 $9 = $20; //@line 1098 "../../iup_str.c"
 while(1) {
  $21 = $4; //@line 1099 "../../iup_str.c"
  $22 = HEAP8[$21>>0]|0; //@line 1099 "../../iup_str.c"
  $23 = ($22<<24>>24)!=(0); //@line 1099 "../../iup_str.c"
  if (!($23)) {
   break;
  }
  $24 = $4; //@line 1101 "../../iup_str.c"
  $25 = HEAP8[$24>>0]|0; //@line 1101 "../../iup_str.c"
  $26 = $25 << 24 >> 24; //@line 1101 "../../iup_str.c"
  $27 = ($26|0)==(38); //@line 1101 "../../iup_str.c"
  $28 = $4; //@line 1103 "../../iup_str.c"
  do {
   if ($27) {
    $29 = ((($28)) + 1|0); //@line 1103 "../../iup_str.c"
    $30 = HEAP8[$29>>0]|0; //@line 1103 "../../iup_str.c"
    $31 = $30 << 24 >> 24; //@line 1103 "../../iup_str.c"
    $32 = ($31|0)==(38); //@line 1103 "../../iup_str.c"
    if ($32) {
     $8 = -1; //@line 1105 "../../iup_str.c"
     $33 = $4; //@line 1107 "../../iup_str.c"
     $34 = ((($33)) + 1|0); //@line 1107 "../../iup_str.c"
     $4 = $34; //@line 1107 "../../iup_str.c"
     $35 = $4; //@line 1108 "../../iup_str.c"
     $36 = HEAP8[$35>>0]|0; //@line 1108 "../../iup_str.c"
     $37 = $7; //@line 1108 "../../iup_str.c"
     $38 = (($37) + 1)|0; //@line 1108 "../../iup_str.c"
     $7 = $38; //@line 1108 "../../iup_str.c"
     $39 = $9; //@line 1108 "../../iup_str.c"
     $40 = (($39) + ($37)|0); //@line 1108 "../../iup_str.c"
     HEAP8[$40>>0] = $36; //@line 1108 "../../iup_str.c"
     break;
    }
    $41 = $8; //@line 1110 "../../iup_str.c"
    $42 = ($41|0)!=(1); //@line 1110 "../../iup_str.c"
    if ($42) {
     $8 = 1; //@line 1112 "../../iup_str.c"
     $43 = $6; //@line 1114 "../../iup_str.c"
     $44 = ($43|0)==(1); //@line 1114 "../../iup_str.c"
     if ($44) {
      $45 = $5; //@line 1115 "../../iup_str.c"
      $46 = HEAP8[$45>>0]|0; //@line 1115 "../../iup_str.c"
      $47 = $7; //@line 1115 "../../iup_str.c"
      $48 = (($47) + 1)|0; //@line 1115 "../../iup_str.c"
      $7 = $48; //@line 1115 "../../iup_str.c"
      $49 = $9; //@line 1115 "../../iup_str.c"
      $50 = (($49) + ($47)|0); //@line 1115 "../../iup_str.c"
      HEAP8[$50>>0] = $46; //@line 1115 "../../iup_str.c"
      break;
     }
     $51 = $6; //@line 1116 "../../iup_str.c"
     $52 = ($51|0)==(-1); //@line 1116 "../../iup_str.c"
     if ($52) {
      $53 = $4; //@line 1117 "../../iup_str.c"
      $54 = ((($53)) + 1|0); //@line 1117 "../../iup_str.c"
      $55 = HEAP8[$54>>0]|0; //@line 1117 "../../iup_str.c"
      $56 = $5; //@line 1117 "../../iup_str.c"
      HEAP8[$56>>0] = $55; //@line 1117 "../../iup_str.c"
     }
    }
   } else {
    $57 = HEAP8[$28>>0]|0; //@line 1123 "../../iup_str.c"
    $58 = $7; //@line 1123 "../../iup_str.c"
    $59 = (($58) + 1)|0; //@line 1123 "../../iup_str.c"
    $7 = $59; //@line 1123 "../../iup_str.c"
    $60 = $9; //@line 1123 "../../iup_str.c"
    $61 = (($60) + ($58)|0); //@line 1123 "../../iup_str.c"
    HEAP8[$61>>0] = $57; //@line 1123 "../../iup_str.c"
   }
  } while(0);
  $62 = $4; //@line 1126 "../../iup_str.c"
  $63 = ((($62)) + 1|0); //@line 1126 "../../iup_str.c"
  $4 = $63; //@line 1126 "../../iup_str.c"
 }
 $64 = $7; //@line 1128 "../../iup_str.c"
 $65 = $9; //@line 1128 "../../iup_str.c"
 $66 = (($65) + ($64)|0); //@line 1128 "../../iup_str.c"
 HEAP8[$66>>0] = 0; //@line 1128 "../../iup_str.c"
 $67 = $8; //@line 1130 "../../iup_str.c"
 $68 = ($67|0)==(0); //@line 1130 "../../iup_str.c"
 $69 = $9; //@line 1132 "../../iup_str.c"
 if ($68) {
  _free($69); //@line 1132 "../../iup_str.c"
  $70 = $10; //@line 1133 "../../iup_str.c"
  $3 = $70; //@line 1133 "../../iup_str.c"
  $71 = $3; //@line 1137 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 1137 "../../iup_str.c"
 } else {
  $3 = $69; //@line 1136 "../../iup_str.c"
  $71 = $3; //@line 1137 "../../iup_str.c"
  STACKTOP = sp;return ($71|0); //@line 1137 "../../iup_str.c"
 }
 return (0)|0;
}
function _iupStrMessageInit() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_iupTableCreate(11)|0); //@line 29 "../../iup_strmessage.c"
 HEAP32[6223] = $0; //@line 29 "../../iup_strmessage.c"
 _iStrMessageRegisterInternal(0,0); //@line 31 "../../iup_strmessage.c"
 return; //@line 32 "../../iup_strmessage.c"
}
function _iStrMessageRegisterInternal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 316; //@line 150 "../../iup_strmessage.c"
 while(1) {
  $5 = $4; //@line 151 "../../iup_strmessage.c"
  $6 = HEAP32[$5>>2]|0; //@line 151 "../../iup_strmessage.c"
  $7 = ($6|0)!=(0|0); //@line 151 "../../iup_strmessage.c"
  if (!($7)) {
   break;
  }
  $8 = $3; //@line 153 "../../iup_strmessage.c"
  $9 = ($8|0)!=(0); //@line 153 "../../iup_strmessage.c"
  if ($9) {
   $10 = $2; //@line 153 "../../iup_strmessage.c"
   $11 = $4; //@line 153 "../../iup_strmessage.c"
   $12 = ((($11)) + 4|0); //@line 153 "../../iup_strmessage.c"
   $13 = (($12) + ($10<<2)|0); //@line 153 "../../iup_strmessage.c"
   $14 = HEAP32[$13>>2]|0; //@line 153 "../../iup_strmessage.c"
   $15 = ($14|0)!=(0|0); //@line 153 "../../iup_strmessage.c"
   if ($15) {
    label = 6;
   } else {
    $16 = $4; //@line 154 "../../iup_strmessage.c"
    $17 = HEAP32[$16>>2]|0; //@line 154 "../../iup_strmessage.c"
    $18 = $2; //@line 154 "../../iup_strmessage.c"
    $19 = (($18) - 1)|0; //@line 154 "../../iup_strmessage.c"
    $20 = $4; //@line 154 "../../iup_strmessage.c"
    $21 = ((($20)) + 4|0); //@line 154 "../../iup_strmessage.c"
    $22 = (($21) + ($19<<2)|0); //@line 154 "../../iup_strmessage.c"
    $23 = HEAP32[$22>>2]|0; //@line 154 "../../iup_strmessage.c"
    _IupSetLanguageString($17,$23); //@line 154 "../../iup_strmessage.c"
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $24 = $4; //@line 156 "../../iup_strmessage.c"
   $25 = HEAP32[$24>>2]|0; //@line 156 "../../iup_strmessage.c"
   $26 = $2; //@line 156 "../../iup_strmessage.c"
   $27 = $4; //@line 156 "../../iup_strmessage.c"
   $28 = ((($27)) + 4|0); //@line 156 "../../iup_strmessage.c"
   $29 = (($28) + ($26<<2)|0); //@line 156 "../../iup_strmessage.c"
   $30 = HEAP32[$29>>2]|0; //@line 156 "../../iup_strmessage.c"
   _IupSetLanguageString($25,$30); //@line 156 "../../iup_strmessage.c"
  }
  $31 = $4; //@line 157 "../../iup_strmessage.c"
  $32 = ((($31)) + 20|0); //@line 157 "../../iup_strmessage.c"
  $4 = $32; //@line 157 "../../iup_strmessage.c"
 }
 $33 = $2; //@line 159 "../../iup_strmessage.c"
 HEAP32[6222] = $33; //@line 159 "../../iup_strmessage.c"
 STACKTOP = sp;return; //@line 160 "../../iup_strmessage.c"
}
function _IupSetLanguageString($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[6223]|0; //@line 52 "../../iup_strmessage.c"
 $5 = $2; //@line 52 "../../iup_strmessage.c"
 $6 = $3; //@line 52 "../../iup_strmessage.c"
 _iupTableSet($4,$5,$6,0); //@line 52 "../../iup_strmessage.c"
 STACKTOP = sp;return; //@line 53 "../../iup_strmessage.c"
}
function _IupGetLanguageString($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 43 "../../iup_strmessage.c"
 $5 = ($4|0)!=(0|0); //@line 43 "../../iup_strmessage.c"
 do {
  if ($5) {
   $6 = HEAP32[6223]|0; //@line 44 "../../iup_strmessage.c"
   $7 = $2; //@line 44 "../../iup_strmessage.c"
   $8 = (_iupTableGet($6,$7)|0); //@line 44 "../../iup_strmessage.c"
   $3 = $8; //@line 44 "../../iup_strmessage.c"
   $9 = $3; //@line 45 "../../iup_strmessage.c"
   $10 = ($9|0)!=(0|0); //@line 45 "../../iup_strmessage.c"
   if ($10) {
    $12 = $3; //@line 47 "../../iup_strmessage.c"
    $1 = $12; //@line 47 "../../iup_strmessage.c"
    break;
   } else {
    $11 = $2; //@line 46 "../../iup_strmessage.c"
    $1 = $11; //@line 46 "../../iup_strmessage.c"
    break;
   }
  } else {
   $1 = 0; //@line 43 "../../iup_strmessage.c"
  }
 } while(0);
 $13 = $1; //@line 48 "../../iup_strmessage.c"
 STACKTOP = sp;return ($13|0); //@line 48 "../../iup_strmessage.c"
}
function _IupSetLanguage($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 85 "../../iup_strmessage.c"
 _IupStoreGlobal(20231,$2); //@line 85 "../../iup_strmessage.c"
 STACKTOP = sp;return; //@line 86 "../../iup_strmessage.c"
}
function _iupStrMessageUpdateLanguage($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0; //@line 164 "../../iup_strmessage.c"
 $4 = (_IupGetInt(0,17327)|0); //@line 165 "../../iup_strmessage.c"
 $3 = $4; //@line 165 "../../iup_strmessage.c"
 $5 = $1; //@line 166 "../../iup_strmessage.c"
 $6 = (_iupStrEqualNoCase($5,17336)|0); //@line 166 "../../iup_strmessage.c"
 $7 = ($6|0)!=(0); //@line 166 "../../iup_strmessage.c"
 do {
  if ($7) {
   $8 = $3; //@line 168 "../../iup_strmessage.c"
   $9 = ($8|0)!=(0); //@line 168 "../../iup_strmessage.c"
   if ($9) {
    $2 = 2; //@line 169 "../../iup_strmessage.c"
    break;
   } else {
    $2 = 1; //@line 171 "../../iup_strmessage.c"
    break;
   }
  }
 } while(0);
 $10 = $2; //@line 173 "../../iup_strmessage.c"
 $11 = HEAP32[6222]|0; //@line 173 "../../iup_strmessage.c"
 $12 = ($10|0)!=($11|0); //@line 173 "../../iup_strmessage.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 175 "../../iup_strmessage.c"
 }
 $13 = $2; //@line 174 "../../iup_strmessage.c"
 $14 = $3; //@line 174 "../../iup_strmessage.c"
 _iStrMessageRegisterInternal($13,$14); //@line 174 "../../iup_strmessage.c"
 STACKTOP = sp;return; //@line 175 "../../iup_strmessage.c"
}
function _iupTableCreate($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 117 "../../iup_table.c"
 $3 = (_iupTableCreateSized($2,1)|0); //@line 117 "../../iup_table.c"
 STACKTOP = sp;return ($3|0); //@line 117 "../../iup_table.c"
}
function _iupTableCreateSized($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = (_malloc(28)|0); //@line 123 "../../iup_table.c"
 $5 = $6; //@line 123 "../../iup_table.c"
 $7 = $5; //@line 125 "../../iup_table.c"
 $8 = ($7|0)!=(0|0); //@line 125 "../../iup_table.c"
 if (!($8)) {
  $2 = 0; //@line 126 "../../iup_table.c"
  $45 = $2; //@line 150 "../../iup_table.c"
  STACKTOP = sp;return ($45|0); //@line 150 "../../iup_table.c"
 }
 $9 = $4; //@line 128 "../../iup_table.c"
 $10 = ($9>>>0)>(8); //@line 128 "../../iup_table.c"
 if ($10) {
  $4 = 8; //@line 129 "../../iup_table.c"
 }
 $11 = $4; //@line 131 "../../iup_table.c"
 $12 = (976 + ($11<<2)|0); //@line 131 "../../iup_table.c"
 $13 = HEAP32[$12>>2]|0; //@line 131 "../../iup_table.c"
 $14 = $5; //@line 131 "../../iup_table.c"
 HEAP32[$14>>2] = $13; //@line 131 "../../iup_table.c"
 $15 = $4; //@line 132 "../../iup_table.c"
 $16 = $5; //@line 132 "../../iup_table.c"
 $17 = ((($16)) + 8|0); //@line 132 "../../iup_table.c"
 HEAP32[$17>>2] = $15; //@line 132 "../../iup_table.c"
 $18 = $5; //@line 133 "../../iup_table.c"
 $19 = ((($18)) + 4|0); //@line 133 "../../iup_table.c"
 HEAP32[$19>>2] = 0; //@line 133 "../../iup_table.c"
 $20 = $3; //@line 134 "../../iup_table.c"
 $21 = $5; //@line 134 "../../iup_table.c"
 $22 = ((($21)) + 12|0); //@line 134 "../../iup_table.c"
 HEAP32[$22>>2] = $20; //@line 134 "../../iup_table.c"
 $23 = $5; //@line 136 "../../iup_table.c"
 $24 = HEAP32[$23>>2]|0; //@line 136 "../../iup_table.c"
 $25 = ($24*12)|0; //@line 136 "../../iup_table.c"
 $26 = (_malloc($25)|0); //@line 136 "../../iup_table.c"
 $27 = $5; //@line 136 "../../iup_table.c"
 $28 = ((($27)) + 16|0); //@line 136 "../../iup_table.c"
 HEAP32[$28>>2] = $26; //@line 136 "../../iup_table.c"
 $29 = $5; //@line 138 "../../iup_table.c"
 $30 = ((($29)) + 16|0); //@line 138 "../../iup_table.c"
 $31 = HEAP32[$30>>2]|0; //@line 138 "../../iup_table.c"
 $32 = ($31|0)!=(0|0); //@line 138 "../../iup_table.c"
 $33 = $5; //@line 144 "../../iup_table.c"
 if ($32) {
  $34 = ((($33)) + 16|0); //@line 144 "../../iup_table.c"
  $35 = HEAP32[$34>>2]|0; //@line 144 "../../iup_table.c"
  $36 = $5; //@line 144 "../../iup_table.c"
  $37 = HEAP32[$36>>2]|0; //@line 144 "../../iup_table.c"
  $38 = ($37*12)|0; //@line 144 "../../iup_table.c"
  _memset(($35|0),0,($38|0))|0; //@line 144 "../../iup_table.c"
  $39 = $5; //@line 146 "../../iup_table.c"
  $40 = ((($39)) + 20|0); //@line 146 "../../iup_table.c"
  HEAP32[$40>>2] = -1; //@line 146 "../../iup_table.c"
  $41 = $5; //@line 147 "../../iup_table.c"
  $42 = ((($41)) + 20|0); //@line 147 "../../iup_table.c"
  $43 = ((($42)) + 4|0); //@line 147 "../../iup_table.c"
  HEAP32[$43>>2] = -1; //@line 147 "../../iup_table.c"
  $44 = $5; //@line 149 "../../iup_table.c"
  $2 = $44; //@line 149 "../../iup_table.c"
  $45 = $2; //@line 150 "../../iup_table.c"
  STACKTOP = sp;return ($45|0); //@line 150 "../../iup_table.c"
 } else {
  _free($33); //@line 140 "../../iup_table.c"
  $2 = 0; //@line 141 "../../iup_table.c"
  $45 = $2; //@line 150 "../../iup_table.c"
  STACKTOP = sp;return ($45|0); //@line 150 "../../iup_table.c"
 }
 return (0)|0;
}
function _iupTableClear($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 156 "../../iup_table.c"
 $5 = ($4|0)!=(0|0); //@line 156 "../../iup_table.c"
 if (!($5)) {
  STACKTOP = sp;return; //@line 175 "../../iup_table.c"
 }
 $2 = 0; //@line 159 "../../iup_table.c"
 while(1) {
  $6 = $2; //@line 159 "../../iup_table.c"
  $7 = $1; //@line 159 "../../iup_table.c"
  $8 = HEAP32[$7>>2]|0; //@line 159 "../../iup_table.c"
  $9 = ($6>>>0)<($8>>>0); //@line 159 "../../iup_table.c"
  if (!($9)) {
   break;
  }
  $10 = $2; //@line 161 "../../iup_table.c"
  $11 = $1; //@line 161 "../../iup_table.c"
  $12 = ((($11)) + 16|0); //@line 161 "../../iup_table.c"
  $13 = HEAP32[$12>>2]|0; //@line 161 "../../iup_table.c"
  $14 = (($13) + (($10*12)|0)|0); //@line 161 "../../iup_table.c"
  $3 = $14; //@line 161 "../../iup_table.c"
  $15 = $3; //@line 162 "../../iup_table.c"
  $16 = ((($15)) + 8|0); //@line 162 "../../iup_table.c"
  $17 = HEAP32[$16>>2]|0; //@line 162 "../../iup_table.c"
  $18 = ($17|0)!=(0|0); //@line 162 "../../iup_table.c"
  if ($18) {
   $19 = $1; //@line 164 "../../iup_table.c"
   $20 = ((($19)) + 12|0); //@line 164 "../../iup_table.c"
   $21 = HEAP32[$20>>2]|0; //@line 164 "../../iup_table.c"
   $22 = $3; //@line 164 "../../iup_table.c"
   $23 = HEAP32[$22>>2]|0; //@line 164 "../../iup_table.c"
   $24 = $3; //@line 164 "../../iup_table.c"
   $25 = ((($24)) + 8|0); //@line 164 "../../iup_table.c"
   $26 = HEAP32[$25>>2]|0; //@line 164 "../../iup_table.c"
   _iTableFreeItemArray($21,$23,$26); //@line 164 "../../iup_table.c"
   $27 = $3; //@line 165 "../../iup_table.c"
   $28 = ((($27)) + 8|0); //@line 165 "../../iup_table.c"
   HEAP32[$28>>2] = 0; //@line 165 "../../iup_table.c"
  }
  $29 = $2; //@line 159 "../../iup_table.c"
  $30 = (($29) + 1)|0; //@line 159 "../../iup_table.c"
  $2 = $30; //@line 159 "../../iup_table.c"
 }
 $31 = $1; //@line 169 "../../iup_table.c"
 $32 = ((($31)) + 4|0); //@line 169 "../../iup_table.c"
 HEAP32[$32>>2] = 0; //@line 169 "../../iup_table.c"
 $33 = $1; //@line 171 "../../iup_table.c"
 $34 = ((($33)) + 16|0); //@line 171 "../../iup_table.c"
 $35 = HEAP32[$34>>2]|0; //@line 171 "../../iup_table.c"
 $36 = $1; //@line 171 "../../iup_table.c"
 $37 = HEAP32[$36>>2]|0; //@line 171 "../../iup_table.c"
 $38 = ($37*12)|0; //@line 171 "../../iup_table.c"
 _memset(($35|0),0,($38|0))|0; //@line 171 "../../iup_table.c"
 $39 = $1; //@line 173 "../../iup_table.c"
 $40 = ((($39)) + 20|0); //@line 173 "../../iup_table.c"
 HEAP32[$40>>2] = -1; //@line 173 "../../iup_table.c"
 $41 = $1; //@line 174 "../../iup_table.c"
 $42 = ((($41)) + 20|0); //@line 174 "../../iup_table.c"
 $43 = ((($42)) + 4|0); //@line 174 "../../iup_table.c"
 HEAP32[$43>>2] = -1; //@line 174 "../../iup_table.c"
 STACKTOP = sp;return; //@line 175 "../../iup_table.c"
}
function _iTableFreeItemArray($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $5; //@line 555 "../../iup_table.c"
 $8 = ($7|0)!=(0|0); //@line 555 "../../iup_table.c"
 if (!($8)) {
  STACKTOP = sp;return; //@line 577 "../../iup_table.c"
 }
 $9 = $3; //@line 558 "../../iup_table.c"
 $10 = ($9|0)==(11); //@line 558 "../../iup_table.c"
 L4: do {
  if ($10) {
   $6 = 0; //@line 560 "../../iup_table.c"
   while(1) {
    $11 = $6; //@line 560 "../../iup_table.c"
    $12 = $4; //@line 560 "../../iup_table.c"
    $13 = ($11>>>0)<($12>>>0); //@line 560 "../../iup_table.c"
    if (!($13)) {
     break L4;
    }
    $14 = $6; //@line 562 "../../iup_table.c"
    $15 = $5; //@line 562 "../../iup_table.c"
    $16 = (($15) + ($14<<4)|0); //@line 562 "../../iup_table.c"
    $17 = ((($16)) + 4|0); //@line 562 "../../iup_table.c"
    $18 = ((($17)) + 4|0); //@line 562 "../../iup_table.c"
    $19 = HEAP32[$18>>2]|0; //@line 562 "../../iup_table.c"
    _free($19); //@line 562 "../../iup_table.c"
    $20 = $6; //@line 563 "../../iup_table.c"
    $21 = $5; //@line 563 "../../iup_table.c"
    $22 = (($21) + ($20<<4)|0); //@line 563 "../../iup_table.c"
    $23 = ((($22)) + 4|0); //@line 563 "../../iup_table.c"
    $24 = ((($23)) + 4|0); //@line 563 "../../iup_table.c"
    HEAP32[$24>>2] = 0; //@line 563 "../../iup_table.c"
    $25 = $6; //@line 560 "../../iup_table.c"
    $26 = (($25) + 1)|0; //@line 560 "../../iup_table.c"
    $6 = $26; //@line 560 "../../iup_table.c"
   }
  }
 } while(0);
 $6 = 0; //@line 567 "../../iup_table.c"
 while(1) {
  $27 = $6; //@line 567 "../../iup_table.c"
  $28 = $4; //@line 567 "../../iup_table.c"
  $29 = ($27>>>0)<($28>>>0); //@line 567 "../../iup_table.c"
  if (!($29)) {
   break;
  }
  $30 = $6; //@line 569 "../../iup_table.c"
  $31 = $5; //@line 569 "../../iup_table.c"
  $32 = (($31) + ($30<<4)|0); //@line 569 "../../iup_table.c"
  $33 = HEAP32[$32>>2]|0; //@line 569 "../../iup_table.c"
  $34 = ($33|0)==(1); //@line 569 "../../iup_table.c"
  if ($34) {
   $35 = $6; //@line 571 "../../iup_table.c"
   $36 = $5; //@line 571 "../../iup_table.c"
   $37 = (($36) + ($35<<4)|0); //@line 571 "../../iup_table.c"
   $38 = ((($37)) + 12|0); //@line 571 "../../iup_table.c"
   $39 = HEAP32[$38>>2]|0; //@line 571 "../../iup_table.c"
   _free($39); //@line 571 "../../iup_table.c"
   $40 = $6; //@line 572 "../../iup_table.c"
   $41 = $5; //@line 572 "../../iup_table.c"
   $42 = (($41) + ($40<<4)|0); //@line 572 "../../iup_table.c"
   $43 = ((($42)) + 12|0); //@line 572 "../../iup_table.c"
   HEAP32[$43>>2] = 0; //@line 572 "../../iup_table.c"
  }
  $44 = $6; //@line 567 "../../iup_table.c"
  $45 = (($44) + 1)|0; //@line 567 "../../iup_table.c"
  $6 = $45; //@line 567 "../../iup_table.c"
 }
 $46 = $5; //@line 576 "../../iup_table.c"
 _free($46); //@line 576 "../../iup_table.c"
 STACKTOP = sp;return; //@line 577 "../../iup_table.c"
}
function _iupTableDestroy($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 179 "../../iup_table.c"
 $3 = ($2|0)!=(0|0); //@line 179 "../../iup_table.c"
 if (!($3)) {
  STACKTOP = sp;return; //@line 195 "../../iup_table.c"
 }
 $4 = $1; //@line 186 "../../iup_table.c"
 _iupTableClear($4); //@line 186 "../../iup_table.c"
 $5 = $1; //@line 188 "../../iup_table.c"
 $6 = ((($5)) + 16|0); //@line 188 "../../iup_table.c"
 $7 = HEAP32[$6>>2]|0; //@line 188 "../../iup_table.c"
 $8 = ($7|0)!=(0|0); //@line 188 "../../iup_table.c"
 if ($8) {
  $9 = $1; //@line 190 "../../iup_table.c"
  $10 = ((($9)) + 16|0); //@line 190 "../../iup_table.c"
  $11 = HEAP32[$10>>2]|0; //@line 190 "../../iup_table.c"
  _free($11); //@line 190 "../../iup_table.c"
  $12 = $1; //@line 191 "../../iup_table.c"
  $13 = ((($12)) + 16|0); //@line 191 "../../iup_table.c"
  HEAP32[$13>>2] = 0; //@line 191 "../../iup_table.c"
 }
 $14 = $1; //@line 194 "../../iup_table.c"
 _free($14); //@line 194 "../../iup_table.c"
 STACKTOP = sp;return; //@line 195 "../../iup_table.c"
}
function _iupTableCount($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 200 "../../iup_table.c"
 $4 = ($3|0)!=(0|0); //@line 200 "../../iup_table.c"
 if ($4) {
  $5 = $2; //@line 202 "../../iup_table.c"
  $6 = ((($5)) + 4|0); //@line 202 "../../iup_table.c"
  $7 = HEAP32[$6>>2]|0; //@line 202 "../../iup_table.c"
  $1 = $7; //@line 202 "../../iup_table.c"
 } else {
  $1 = 0; //@line 201 "../../iup_table.c"
 }
 $8 = $1; //@line 203 "../../iup_table.c"
 STACKTOP = sp;return ($8|0); //@line 203 "../../iup_table.c"
}
function _iupTableSetFunc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $3; //@line 207 "../../iup_table.c"
 $7 = $4; //@line 207 "../../iup_table.c"
 $8 = $5; //@line 207 "../../iup_table.c"
 _iupTableSet($6,$7,$8,2); //@line 207 "../../iup_table.c"
 STACKTOP = sp;return; //@line 208 "../../iup_table.c"
}
function _iupTableSet($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 24|0;
 $10 = sp + 16|0;
 $11 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $15 = $4; //@line 221 "../../iup_table.c"
 $16 = ($15|0)!=(0|0); //@line 221 "../../iup_table.c"
 $17 = $5; //@line 221 "../../iup_table.c"
 $18 = ($17|0)!=(0|0); //@line 221 "../../iup_table.c"
 $or$cond = $16 & $18; //@line 221 "../../iup_table.c"
 $19 = $6; //@line 221 "../../iup_table.c"
 $20 = ($19|0)!=(0|0); //@line 221 "../../iup_table.c"
 $or$cond3 = $or$cond & $20; //@line 221 "../../iup_table.c"
 if (!($or$cond3)) {
  STACKTOP = sp;return; //@line 285 "../../iup_table.c"
 }
 $21 = $4; //@line 224 "../../iup_table.c"
 $22 = $5; //@line 224 "../../iup_table.c"
 $23 = (_iTableFindItem($21,$22,$11,$8,$10)|0); //@line 224 "../../iup_table.c"
 $9 = $23; //@line 224 "../../iup_table.c"
 $24 = $9; //@line 231 "../../iup_table.c"
 $25 = ($24|0)!=(0); //@line 231 "../../iup_table.c"
 if (!($25)) {
  $26 = $4; //@line 236 "../../iup_table.c"
  $27 = (_iTableResize($26)|0); //@line 236 "../../iup_table.c"
  $28 = ($27|0)!=(0); //@line 236 "../../iup_table.c"
  if ($28) {
   $29 = $4; //@line 240 "../../iup_table.c"
   $30 = $5; //@line 240 "../../iup_table.c"
   (_iTableFindItem($29,$30,$11,$8,$10)|0); //@line 240 "../../iup_table.c"
  }
  $31 = HEAP32[$11>>2]|0; //@line 243 "../../iup_table.c"
  _iTableUpdateArraySize($31); //@line 243 "../../iup_table.c"
  $32 = $7; //@line 246 "../../iup_table.c"
  $33 = ($32|0)==(1); //@line 246 "../../iup_table.c"
  $34 = $6; //@line 247 "../../iup_table.c"
  if ($33) {
   $35 = (_iupStrDup($34)|0); //@line 247 "../../iup_table.c"
   $13 = $35; //@line 247 "../../iup_table.c"
  } else {
   $13 = $34; //@line 249 "../../iup_table.c"
  }
  $36 = HEAP32[$11>>2]|0; //@line 251 "../../iup_table.c"
  $37 = HEAP32[$36>>2]|0; //@line 251 "../../iup_table.c"
  $38 = HEAP32[$11>>2]|0; //@line 251 "../../iup_table.c"
  $39 = ((($38)) + 8|0); //@line 251 "../../iup_table.c"
  $40 = HEAP32[$39>>2]|0; //@line 251 "../../iup_table.c"
  $41 = (($40) + ($37<<4)|0); //@line 251 "../../iup_table.c"
  $12 = $41; //@line 251 "../../iup_table.c"
  $42 = $7; //@line 253 "../../iup_table.c"
  $43 = $12; //@line 253 "../../iup_table.c"
  HEAP32[$43>>2] = $42; //@line 253 "../../iup_table.c"
  $44 = HEAP32[$10>>2]|0; //@line 254 "../../iup_table.c"
  $45 = $12; //@line 254 "../../iup_table.c"
  $46 = ((($45)) + 4|0); //@line 254 "../../iup_table.c"
  HEAP32[$46>>2] = $44; //@line 254 "../../iup_table.c"
  $47 = $4; //@line 255 "../../iup_table.c"
  $48 = ((($47)) + 12|0); //@line 255 "../../iup_table.c"
  $49 = HEAP32[$48>>2]|0; //@line 255 "../../iup_table.c"
  $50 = ($49|0)==(11); //@line 255 "../../iup_table.c"
  $51 = $5; //@line 255 "../../iup_table.c"
  if ($50) {
   $52 = (_iupStrDup($51)|0); //@line 255 "../../iup_table.c"
   $56 = $52;
  } else {
   $56 = $51;
  }
  $53 = $12; //@line 255 "../../iup_table.c"
  $54 = ((($53)) + 4|0); //@line 255 "../../iup_table.c"
  $55 = ((($54)) + 4|0); //@line 255 "../../iup_table.c"
  HEAP32[$55>>2] = $56; //@line 255 "../../iup_table.c"
  $57 = $13; //@line 256 "../../iup_table.c"
  $58 = $12; //@line 256 "../../iup_table.c"
  $59 = ((($58)) + 12|0); //@line 256 "../../iup_table.c"
  HEAP32[$59>>2] = $57; //@line 256 "../../iup_table.c"
  $60 = HEAP32[$11>>2]|0; //@line 258 "../../iup_table.c"
  $61 = HEAP32[$60>>2]|0; //@line 258 "../../iup_table.c"
  $62 = (($61) + 1)|0; //@line 258 "../../iup_table.c"
  HEAP32[$60>>2] = $62; //@line 258 "../../iup_table.c"
  $63 = $4; //@line 259 "../../iup_table.c"
  $64 = ((($63)) + 4|0); //@line 259 "../../iup_table.c"
  $65 = HEAP32[$64>>2]|0; //@line 259 "../../iup_table.c"
  $66 = (($65) + 1)|0; //@line 259 "../../iup_table.c"
  HEAP32[$64>>2] = $66; //@line 259 "../../iup_table.c"
  STACKTOP = sp;return; //@line 285 "../../iup_table.c"
 }
 $67 = HEAP32[$8>>2]|0; //@line 265 "../../iup_table.c"
 $68 = HEAP32[$11>>2]|0; //@line 265 "../../iup_table.c"
 $69 = ((($68)) + 8|0); //@line 265 "../../iup_table.c"
 $70 = HEAP32[$69>>2]|0; //@line 265 "../../iup_table.c"
 $71 = (($70) + ($67<<4)|0); //@line 265 "../../iup_table.c"
 $12 = $71; //@line 265 "../../iup_table.c"
 $72 = $7; //@line 267 "../../iup_table.c"
 $73 = ($72|0)==(1); //@line 267 "../../iup_table.c"
 if ($73) {
  $74 = $12; //@line 267 "../../iup_table.c"
  $75 = HEAP32[$74>>2]|0; //@line 267 "../../iup_table.c"
  $76 = ($75|0)==(1); //@line 267 "../../iup_table.c"
  if ($76) {
   $77 = $12; //@line 270 "../../iup_table.c"
   $78 = ((($77)) + 12|0); //@line 270 "../../iup_table.c"
   $79 = HEAP32[$78>>2]|0; //@line 270 "../../iup_table.c"
   $80 = $6; //@line 270 "../../iup_table.c"
   $81 = (_iupStrEqual($79,$80)|0); //@line 270 "../../iup_table.c"
   $82 = ($81|0)!=(0); //@line 270 "../../iup_table.c"
   if ($82) {
    STACKTOP = sp;return; //@line 285 "../../iup_table.c"
   }
  }
 }
 $83 = $7; //@line 274 "../../iup_table.c"
 $84 = ($83|0)==(1); //@line 274 "../../iup_table.c"
 $85 = $6; //@line 275 "../../iup_table.c"
 if ($84) {
  $86 = (_iupStrDup($85)|0); //@line 275 "../../iup_table.c"
  $14 = $86; //@line 275 "../../iup_table.c"
 } else {
  $14 = $85; //@line 277 "../../iup_table.c"
 }
 $87 = $12; //@line 279 "../../iup_table.c"
 $88 = HEAP32[$87>>2]|0; //@line 279 "../../iup_table.c"
 $89 = ($88|0)==(1); //@line 279 "../../iup_table.c"
 if ($89) {
  $90 = $12; //@line 280 "../../iup_table.c"
  $91 = ((($90)) + 12|0); //@line 280 "../../iup_table.c"
  $92 = HEAP32[$91>>2]|0; //@line 280 "../../iup_table.c"
  _free($92); //@line 280 "../../iup_table.c"
 }
 $93 = $14; //@line 282 "../../iup_table.c"
 $94 = $12; //@line 282 "../../iup_table.c"
 $95 = ((($94)) + 12|0); //@line 282 "../../iup_table.c"
 HEAP32[$95>>2] = $93; //@line 282 "../../iup_table.c"
 $96 = $7; //@line 283 "../../iup_table.c"
 $97 = $12; //@line 283 "../../iup_table.c"
 HEAP32[$97>>2] = $96; //@line 283 "../../iup_table.c"
 STACKTOP = sp;return; //@line 285 "../../iup_table.c"
}
function _iTableFindItem($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $15 = $6; //@line 637 "../../iup_table.c"
 $16 = $7; //@line 637 "../../iup_table.c"
 $17 = $10; //@line 637 "../../iup_table.c"
 $18 = (_iTableGetEntryIndex($15,$16,$17)|0); //@line 637 "../../iup_table.c"
 $11 = $18; //@line 637 "../../iup_table.c"
 $19 = $11; //@line 639 "../../iup_table.c"
 $20 = $6; //@line 639 "../../iup_table.c"
 $21 = ((($20)) + 16|0); //@line 639 "../../iup_table.c"
 $22 = HEAP32[$21>>2]|0; //@line 639 "../../iup_table.c"
 $23 = (($22) + (($19*12)|0)|0); //@line 639 "../../iup_table.c"
 $24 = $8; //@line 639 "../../iup_table.c"
 HEAP32[$24>>2] = $23; //@line 639 "../../iup_table.c"
 $25 = $8; //@line 641 "../../iup_table.c"
 $26 = HEAP32[$25>>2]|0; //@line 641 "../../iup_table.c"
 $27 = ((($26)) + 8|0); //@line 641 "../../iup_table.c"
 $28 = HEAP32[$27>>2]|0; //@line 641 "../../iup_table.c"
 $14 = $28; //@line 641 "../../iup_table.c"
 $13 = 0; //@line 642 "../../iup_table.c"
 while(1) {
  $29 = $13; //@line 642 "../../iup_table.c"
  $30 = $8; //@line 642 "../../iup_table.c"
  $31 = HEAP32[$30>>2]|0; //@line 642 "../../iup_table.c"
  $32 = HEAP32[$31>>2]|0; //@line 642 "../../iup_table.c"
  $33 = ($29>>>0)<($32>>>0); //@line 642 "../../iup_table.c"
  if (!($33)) {
   label = 9;
   break;
  }
  $34 = $6; //@line 644 "../../iup_table.c"
  $35 = ((($34)) + 12|0); //@line 644 "../../iup_table.c"
  $36 = HEAP32[$35>>2]|0; //@line 644 "../../iup_table.c"
  $37 = ($36|0)==(11); //@line 644 "../../iup_table.c"
  $38 = $14; //@line 645 "../../iup_table.c"
  $39 = ((($38)) + 4|0); //@line 645 "../../iup_table.c"
  if ($37) {
   $40 = HEAP32[$39>>2]|0; //@line 645 "../../iup_table.c"
   $41 = $10; //@line 645 "../../iup_table.c"
   $42 = HEAP32[$41>>2]|0; //@line 645 "../../iup_table.c"
   $43 = ($40|0)==($42|0); //@line 645 "../../iup_table.c"
   $44 = $43&1; //@line 645 "../../iup_table.c"
   $12 = $44; //@line 645 "../../iup_table.c"
  } else {
   $45 = ((($39)) + 4|0); //@line 648 "../../iup_table.c"
   $46 = HEAP32[$45>>2]|0; //@line 648 "../../iup_table.c"
   $47 = $7; //@line 648 "../../iup_table.c"
   $48 = ($46|0)==($47|0); //@line 648 "../../iup_table.c"
   $49 = $48&1; //@line 648 "../../iup_table.c"
   $12 = $49; //@line 648 "../../iup_table.c"
  }
  $50 = $12; //@line 650 "../../iup_table.c"
  $51 = ($50|0)!=(0); //@line 650 "../../iup_table.c"
  $52 = $13; //@line 652 "../../iup_table.c"
  if ($51) {
   label = 7;
   break;
  }
  $54 = (($52) + 1)|0; //@line 642 "../../iup_table.c"
  $13 = $54; //@line 642 "../../iup_table.c"
  $55 = $14; //@line 642 "../../iup_table.c"
  $56 = ((($55)) + 16|0); //@line 642 "../../iup_table.c"
  $14 = $56; //@line 642 "../../iup_table.c"
 }
 if ((label|0) == 7) {
  $53 = $9; //@line 652 "../../iup_table.c"
  HEAP32[$53>>2] = $52; //@line 652 "../../iup_table.c"
  $5 = 1; //@line 653 "../../iup_table.c"
  $59 = $5; //@line 661 "../../iup_table.c"
  STACKTOP = sp;return ($59|0); //@line 661 "../../iup_table.c"
 }
 else if ((label|0) == 9) {
  $57 = $13; //@line 659 "../../iup_table.c"
  $58 = $9; //@line 659 "../../iup_table.c"
  HEAP32[$58>>2] = $57; //@line 659 "../../iup_table.c"
  $5 = 0; //@line 660 "../../iup_table.c"
  $59 = $5; //@line 661 "../../iup_table.c"
  STACKTOP = sp;return ($59|0); //@line 661 "../../iup_table.c"
 }
 return (0)|0;
}
function _iTableResize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $9 = $2; //@line 716 "../../iup_table.c"
 $10 = ((($9)) + 4|0); //@line 716 "../../iup_table.c"
 $11 = HEAP32[$10>>2]|0; //@line 716 "../../iup_table.c"
 $12 = ($11|0)==(0); //@line 716 "../../iup_table.c"
 if (!($12)) {
  $13 = $2; //@line 717 "../../iup_table.c"
  $14 = ((($13)) + 8|0); //@line 717 "../../iup_table.c"
  $15 = HEAP32[$14>>2]|0; //@line 717 "../../iup_table.c"
  $16 = ($15>>>0)>=(8); //@line 717 "../../iup_table.c"
  if (!($16)) {
   $17 = $2; //@line 718 "../../iup_table.c"
   $18 = HEAP32[$17>>2]|0; //@line 718 "../../iup_table.c"
   $19 = $2; //@line 718 "../../iup_table.c"
   $20 = ((($19)) + 4|0); //@line 718 "../../iup_table.c"
   $21 = HEAP32[$20>>2]|0; //@line 718 "../../iup_table.c"
   $22 = (($18>>>0) / ($21>>>0))&-1; //@line 718 "../../iup_table.c"
   $23 = ($22>>>0)>=(2); //@line 718 "../../iup_table.c"
   if (!($23)) {
    $24 = $2; //@line 724 "../../iup_table.c"
    $25 = ((($24)) + 8|0); //@line 724 "../../iup_table.c"
    $26 = HEAP32[$25>>2]|0; //@line 724 "../../iup_table.c"
    $27 = (($26) + 1)|0; //@line 724 "../../iup_table.c"
    $3 = $27; //@line 724 "../../iup_table.c"
    $28 = $2; //@line 725 "../../iup_table.c"
    $29 = ((($28)) + 12|0); //@line 725 "../../iup_table.c"
    $30 = HEAP32[$29>>2]|0; //@line 725 "../../iup_table.c"
    $31 = $3; //@line 725 "../../iup_table.c"
    $32 = (_iupTableCreateSized($30,$31)|0); //@line 725 "../../iup_table.c"
    $6 = $32; //@line 725 "../../iup_table.c"
    $4 = 0; //@line 727 "../../iup_table.c"
    while(1) {
     $33 = $4; //@line 727 "../../iup_table.c"
     $34 = $2; //@line 727 "../../iup_table.c"
     $35 = HEAP32[$34>>2]|0; //@line 727 "../../iup_table.c"
     $36 = ($33>>>0)<($35>>>0); //@line 727 "../../iup_table.c"
     if (!($36)) {
      break;
     }
     $37 = $4; //@line 729 "../../iup_table.c"
     $38 = $2; //@line 729 "../../iup_table.c"
     $39 = ((($38)) + 16|0); //@line 729 "../../iup_table.c"
     $40 = HEAP32[$39>>2]|0; //@line 729 "../../iup_table.c"
     $41 = (($40) + (($37*12)|0)|0); //@line 729 "../../iup_table.c"
     $7 = $41; //@line 729 "../../iup_table.c"
     $42 = $7; //@line 731 "../../iup_table.c"
     $43 = ((($42)) + 8|0); //@line 731 "../../iup_table.c"
     $44 = HEAP32[$43>>2]|0; //@line 731 "../../iup_table.c"
     $45 = ($44|0)!=(0|0); //@line 731 "../../iup_table.c"
     if ($45) {
      $46 = $7; //@line 733 "../../iup_table.c"
      $47 = ((($46)) + 8|0); //@line 733 "../../iup_table.c"
      $48 = HEAP32[$47>>2]|0; //@line 733 "../../iup_table.c"
      $8 = $48; //@line 733 "../../iup_table.c"
      $5 = 0; //@line 735 "../../iup_table.c"
      while(1) {
       $49 = $5; //@line 735 "../../iup_table.c"
       $50 = $7; //@line 735 "../../iup_table.c"
       $51 = HEAP32[$50>>2]|0; //@line 735 "../../iup_table.c"
       $52 = ($49>>>0)<($51>>>0); //@line 735 "../../iup_table.c"
       if (!($52)) {
        break;
       }
       $53 = $6; //@line 737 "../../iup_table.c"
       $54 = $8; //@line 737 "../../iup_table.c"
       $55 = ((($54)) + 4|0); //@line 737 "../../iup_table.c"
       $56 = $8; //@line 737 "../../iup_table.c"
       $57 = ((($56)) + 12|0); //@line 737 "../../iup_table.c"
       $58 = HEAP32[$57>>2]|0; //@line 737 "../../iup_table.c"
       $59 = $8; //@line 737 "../../iup_table.c"
       $60 = HEAP32[$59>>2]|0; //@line 737 "../../iup_table.c"
       _iTableAdd($53,$55,$58,$60); //@line 737 "../../iup_table.c"
       $61 = $5; //@line 735 "../../iup_table.c"
       $62 = (($61) + 1)|0; //@line 735 "../../iup_table.c"
       $5 = $62; //@line 735 "../../iup_table.c"
       $63 = $8; //@line 735 "../../iup_table.c"
       $64 = ((($63)) + 16|0); //@line 735 "../../iup_table.c"
       $8 = $64; //@line 735 "../../iup_table.c"
      }
      $65 = $7; //@line 740 "../../iup_table.c"
      $66 = ((($65)) + 8|0); //@line 740 "../../iup_table.c"
      $67 = HEAP32[$66>>2]|0; //@line 740 "../../iup_table.c"
      _free($67); //@line 740 "../../iup_table.c"
      $68 = $7; //@line 741 "../../iup_table.c"
      $69 = ((($68)) + 8|0); //@line 741 "../../iup_table.c"
      HEAP32[$69>>2] = 0; //@line 741 "../../iup_table.c"
     }
     $70 = $4; //@line 727 "../../iup_table.c"
     $71 = (($70) + 1)|0; //@line 727 "../../iup_table.c"
     $4 = $71; //@line 727 "../../iup_table.c"
    }
    $72 = $2; //@line 745 "../../iup_table.c"
    $73 = ((($72)) + 16|0); //@line 745 "../../iup_table.c"
    $74 = HEAP32[$73>>2]|0; //@line 745 "../../iup_table.c"
    _free($74); //@line 745 "../../iup_table.c"
    $75 = $6; //@line 747 "../../iup_table.c"
    $76 = HEAP32[$75>>2]|0; //@line 747 "../../iup_table.c"
    $77 = $2; //@line 747 "../../iup_table.c"
    HEAP32[$77>>2] = $76; //@line 747 "../../iup_table.c"
    $78 = $6; //@line 748 "../../iup_table.c"
    $79 = ((($78)) + 8|0); //@line 748 "../../iup_table.c"
    $80 = HEAP32[$79>>2]|0; //@line 748 "../../iup_table.c"
    $81 = $2; //@line 748 "../../iup_table.c"
    $82 = ((($81)) + 8|0); //@line 748 "../../iup_table.c"
    HEAP32[$82>>2] = $80; //@line 748 "../../iup_table.c"
    $83 = $6; //@line 749 "../../iup_table.c"
    $84 = ((($83)) + 4|0); //@line 749 "../../iup_table.c"
    $85 = HEAP32[$84>>2]|0; //@line 749 "../../iup_table.c"
    $86 = $2; //@line 749 "../../iup_table.c"
    $87 = ((($86)) + 4|0); //@line 749 "../../iup_table.c"
    HEAP32[$87>>2] = $85; //@line 749 "../../iup_table.c"
    $88 = $6; //@line 750 "../../iup_table.c"
    $89 = ((($88)) + 16|0); //@line 750 "../../iup_table.c"
    $90 = HEAP32[$89>>2]|0; //@line 750 "../../iup_table.c"
    $91 = $2; //@line 750 "../../iup_table.c"
    $92 = ((($91)) + 16|0); //@line 750 "../../iup_table.c"
    HEAP32[$92>>2] = $90; //@line 750 "../../iup_table.c"
    $93 = $6; //@line 752 "../../iup_table.c"
    _free($93); //@line 752 "../../iup_table.c"
    $1 = 1; //@line 754 "../../iup_table.c"
    $94 = $1; //@line 755 "../../iup_table.c"
    STACKTOP = sp;return ($94|0); //@line 755 "../../iup_table.c"
   }
  }
 }
 $1 = 0; //@line 719 "../../iup_table.c"
 $94 = $1; //@line 755 "../../iup_table.c"
 STACKTOP = sp;return ($94|0); //@line 755 "../../iup_table.c"
}
function _iTableUpdateArraySize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 665 "../../iup_table.c"
 $4 = HEAP32[$3>>2]|0; //@line 665 "../../iup_table.c"
 $5 = $1; //@line 665 "../../iup_table.c"
 $6 = ((($5)) + 4|0); //@line 665 "../../iup_table.c"
 $7 = HEAP32[$6>>2]|0; //@line 665 "../../iup_table.c"
 $8 = ($4>>>0)>=($7>>>0); //@line 665 "../../iup_table.c"
 if (!($8)) {
  STACKTOP = sp;return; //@line 681 "../../iup_table.c"
 }
 $9 = $1; //@line 670 "../../iup_table.c"
 $10 = ((($9)) + 4|0); //@line 670 "../../iup_table.c"
 $11 = HEAP32[$10>>2]|0; //@line 670 "../../iup_table.c"
 $12 = (($11) + 5)|0; //@line 670 "../../iup_table.c"
 $2 = $12; //@line 670 "../../iup_table.c"
 $13 = $1; //@line 672 "../../iup_table.c"
 $14 = ((($13)) + 8|0); //@line 672 "../../iup_table.c"
 $15 = HEAP32[$14>>2]|0; //@line 672 "../../iup_table.c"
 $16 = $2; //@line 672 "../../iup_table.c"
 $17 = $16<<4; //@line 672 "../../iup_table.c"
 $18 = (_realloc($15,$17)|0); //@line 672 "../../iup_table.c"
 $19 = $1; //@line 672 "../../iup_table.c"
 $20 = ((($19)) + 8|0); //@line 672 "../../iup_table.c"
 HEAP32[$20>>2] = $18; //@line 672 "../../iup_table.c"
 $21 = $1; //@line 674 "../../iup_table.c"
 $22 = ((($21)) + 8|0); //@line 674 "../../iup_table.c"
 $23 = HEAP32[$22>>2]|0; //@line 674 "../../iup_table.c"
 $24 = ($23|0)!=(0|0); //@line 674 "../../iup_table.c"
 if (!($24)) {
  STACKTOP = sp;return; //@line 681 "../../iup_table.c"
 }
 $25 = $1; //@line 677 "../../iup_table.c"
 $26 = ((($25)) + 8|0); //@line 677 "../../iup_table.c"
 $27 = HEAP32[$26>>2]|0; //@line 677 "../../iup_table.c"
 $28 = $1; //@line 677 "../../iup_table.c"
 $29 = ((($28)) + 4|0); //@line 677 "../../iup_table.c"
 $30 = HEAP32[$29>>2]|0; //@line 677 "../../iup_table.c"
 $31 = (($27) + ($30<<4)|0); //@line 677 "../../iup_table.c"
 dest=$31; stop=dest+80|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0)); //@line 677 "../../iup_table.c"
 $32 = $2; //@line 679 "../../iup_table.c"
 $33 = $1; //@line 679 "../../iup_table.c"
 $34 = ((($33)) + 4|0); //@line 679 "../../iup_table.c"
 HEAP32[$34>>2] = $32; //@line 679 "../../iup_table.c"
 STACKTOP = sp;return; //@line 681 "../../iup_table.c"
}
function _iTableAdd($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $9 = sp + 8|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $12 = $4; //@line 690 "../../iup_table.c"
 $13 = $5; //@line 690 "../../iup_table.c"
 $14 = ((($13)) + 4|0); //@line 690 "../../iup_table.c"
 $15 = HEAP32[$14>>2]|0; //@line 690 "../../iup_table.c"
 $16 = (_iTableGetEntryIndex($12,$15,$9)|0); //@line 690 "../../iup_table.c"
 $8 = $16; //@line 690 "../../iup_table.c"
 $17 = $8; //@line 692 "../../iup_table.c"
 $18 = $4; //@line 692 "../../iup_table.c"
 $19 = ((($18)) + 16|0); //@line 692 "../../iup_table.c"
 $20 = HEAP32[$19>>2]|0; //@line 692 "../../iup_table.c"
 $21 = (($20) + (($17*12)|0)|0); //@line 692 "../../iup_table.c"
 $10 = $21; //@line 692 "../../iup_table.c"
 $22 = $10; //@line 693 "../../iup_table.c"
 _iTableUpdateArraySize($22); //@line 693 "../../iup_table.c"
 $23 = $10; //@line 696 "../../iup_table.c"
 $24 = HEAP32[$23>>2]|0; //@line 696 "../../iup_table.c"
 $25 = $10; //@line 696 "../../iup_table.c"
 $26 = ((($25)) + 8|0); //@line 696 "../../iup_table.c"
 $27 = HEAP32[$26>>2]|0; //@line 696 "../../iup_table.c"
 $28 = (($27) + ($24<<4)|0); //@line 696 "../../iup_table.c"
 $11 = $28; //@line 696 "../../iup_table.c"
 $29 = $7; //@line 697 "../../iup_table.c"
 $30 = $11; //@line 697 "../../iup_table.c"
 HEAP32[$30>>2] = $29; //@line 697 "../../iup_table.c"
 $31 = HEAP32[$9>>2]|0; //@line 698 "../../iup_table.c"
 $32 = $11; //@line 698 "../../iup_table.c"
 $33 = ((($32)) + 4|0); //@line 698 "../../iup_table.c"
 HEAP32[$33>>2] = $31; //@line 698 "../../iup_table.c"
 $34 = $5; //@line 699 "../../iup_table.c"
 $35 = ((($34)) + 4|0); //@line 699 "../../iup_table.c"
 $36 = HEAP32[$35>>2]|0; //@line 699 "../../iup_table.c"
 $37 = $11; //@line 699 "../../iup_table.c"
 $38 = ((($37)) + 4|0); //@line 699 "../../iup_table.c"
 $39 = ((($38)) + 4|0); //@line 699 "../../iup_table.c"
 HEAP32[$39>>2] = $36; //@line 699 "../../iup_table.c"
 $40 = $6; //@line 700 "../../iup_table.c"
 $41 = $11; //@line 700 "../../iup_table.c"
 $42 = ((($41)) + 12|0); //@line 700 "../../iup_table.c"
 HEAP32[$42>>2] = $40; //@line 700 "../../iup_table.c"
 $43 = $10; //@line 702 "../../iup_table.c"
 $44 = HEAP32[$43>>2]|0; //@line 702 "../../iup_table.c"
 $45 = (($44) + 1)|0; //@line 702 "../../iup_table.c"
 HEAP32[$43>>2] = $45; //@line 702 "../../iup_table.c"
 $46 = $4; //@line 703 "../../iup_table.c"
 $47 = ((($46)) + 4|0); //@line 703 "../../iup_table.c"
 $48 = HEAP32[$47>>2]|0; //@line 703 "../../iup_table.c"
 $49 = (($48) + 1)|0; //@line 703 "../../iup_table.c"
 HEAP32[$47>>2] = $49; //@line 703 "../../iup_table.c"
 STACKTOP = sp;return; //@line 704 "../../iup_table.c"
}
function _iTableGetEntryIndex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 582 "../../iup_table.c"
 $8 = ((($7)) + 12|0); //@line 582 "../../iup_table.c"
 $9 = HEAP32[$8>>2]|0; //@line 582 "../../iup_table.c"
 $10 = ($9|0)==(11); //@line 582 "../../iup_table.c"
 if ($10) {
  $6 = 0; //@line 584 "../../iup_table.c"
  while(1) {
   $11 = $4; //@line 592 "../../iup_table.c"
   $12 = HEAP8[$11>>0]|0; //@line 592 "../../iup_table.c"
   $13 = ($12<<24>>24)!=(0); //@line 592 "../../iup_table.c"
   $14 = $6; //@line 594 "../../iup_table.c"
   if (!($13)) {
    break;
   }
   $15 = ($14*31)|0; //@line 594 "../../iup_table.c"
   $6 = $15; //@line 594 "../../iup_table.c"
   $16 = $4; //@line 595 "../../iup_table.c"
   $17 = HEAP8[$16>>0]|0; //@line 595 "../../iup_table.c"
   $18 = $17 << 24 >> 24; //@line 595 "../../iup_table.c"
   $19 = $6; //@line 595 "../../iup_table.c"
   $20 = (($19) + ($18))|0; //@line 595 "../../iup_table.c"
   $6 = $20; //@line 595 "../../iup_table.c"
   $21 = $4; //@line 596 "../../iup_table.c"
   $22 = ((($21)) + 1|0); //@line 596 "../../iup_table.c"
   $4 = $22; //@line 596 "../../iup_table.c"
  }
  $23 = $5; //@line 599 "../../iup_table.c"
  HEAP32[$23>>2] = $14; //@line 599 "../../iup_table.c"
 } else {
  $24 = $4; //@line 604 "../../iup_table.c"
  $25 = $24; //@line 604 "../../iup_table.c"
  $26 = $5; //@line 604 "../../iup_table.c"
  HEAP32[$26>>2] = $25; //@line 604 "../../iup_table.c"
 }
 $27 = $5; //@line 607 "../../iup_table.c"
 $28 = HEAP32[$27>>2]|0; //@line 607 "../../iup_table.c"
 $29 = $3; //@line 607 "../../iup_table.c"
 $30 = HEAP32[$29>>2]|0; //@line 607 "../../iup_table.c"
 $31 = (($28>>>0) % ($30>>>0))&-1; //@line 607 "../../iup_table.c"
 STACKTOP = sp;return ($31|0); //@line 607 "../../iup_table.c"
}
function _iupTableRemove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $2; //@line 326 "../../iup_table.c"
 $9 = ($8|0)!=(0|0); //@line 326 "../../iup_table.c"
 $10 = $3; //@line 326 "../../iup_table.c"
 $11 = ($10|0)!=(0|0); //@line 326 "../../iup_table.c"
 $or$cond = $9 & $11; //@line 326 "../../iup_table.c"
 if (!($or$cond)) {
  STACKTOP = sp;return; //@line 332 "../../iup_table.c"
 }
 $12 = $2; //@line 329 "../../iup_table.c"
 $13 = $3; //@line 329 "../../iup_table.c"
 $14 = (_iTableFindItem($12,$13,$7,$5,$6)|0); //@line 329 "../../iup_table.c"
 $4 = $14; //@line 329 "../../iup_table.c"
 $15 = $4; //@line 330 "../../iup_table.c"
 $16 = ($15|0)!=(0); //@line 330 "../../iup_table.c"
 if (!($16)) {
  STACKTOP = sp;return; //@line 332 "../../iup_table.c"
 }
 $17 = $2; //@line 331 "../../iup_table.c"
 $18 = HEAP32[$7>>2]|0; //@line 331 "../../iup_table.c"
 $19 = HEAP32[$5>>2]|0; //@line 331 "../../iup_table.c"
 _iTableRemoveItem($17,$18,$19); //@line 331 "../../iup_table.c"
 STACKTOP = sp;return; //@line 332 "../../iup_table.c"
}
function _iTableRemoveItem($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $5; //@line 292 "../../iup_table.c"
 $9 = $4; //@line 292 "../../iup_table.c"
 $10 = ((($9)) + 8|0); //@line 292 "../../iup_table.c"
 $11 = HEAP32[$10>>2]|0; //@line 292 "../../iup_table.c"
 $12 = (($11) + ($8<<4)|0); //@line 292 "../../iup_table.c"
 $6 = $12; //@line 292 "../../iup_table.c"
 $13 = $3; //@line 294 "../../iup_table.c"
 $14 = ((($13)) + 12|0); //@line 294 "../../iup_table.c"
 $15 = HEAP32[$14>>2]|0; //@line 294 "../../iup_table.c"
 $16 = ($15|0)==(11); //@line 294 "../../iup_table.c"
 if ($16) {
  $17 = $6; //@line 296 "../../iup_table.c"
  $18 = ((($17)) + 4|0); //@line 296 "../../iup_table.c"
  $19 = ((($18)) + 4|0); //@line 296 "../../iup_table.c"
  $20 = HEAP32[$19>>2]|0; //@line 296 "../../iup_table.c"
  _free($20); //@line 296 "../../iup_table.c"
  $21 = $6; //@line 297 "../../iup_table.c"
  $22 = ((($21)) + 4|0); //@line 297 "../../iup_table.c"
  $23 = ((($22)) + 4|0); //@line 297 "../../iup_table.c"
  HEAP32[$23>>2] = 0; //@line 297 "../../iup_table.c"
 }
 $24 = $6; //@line 300 "../../iup_table.c"
 $25 = HEAP32[$24>>2]|0; //@line 300 "../../iup_table.c"
 $26 = ($25|0)==(1); //@line 300 "../../iup_table.c"
 if ($26) {
  $27 = $6; //@line 302 "../../iup_table.c"
  $28 = ((($27)) + 12|0); //@line 302 "../../iup_table.c"
  $29 = HEAP32[$28>>2]|0; //@line 302 "../../iup_table.c"
  _free($29); //@line 302 "../../iup_table.c"
  $30 = $6; //@line 303 "../../iup_table.c"
  $31 = ((($30)) + 12|0); //@line 303 "../../iup_table.c"
  HEAP32[$31>>2] = 0; //@line 303 "../../iup_table.c"
 }
 $32 = $5; //@line 307 "../../iup_table.c"
 $7 = $32; //@line 307 "../../iup_table.c"
 while(1) {
  $33 = $7; //@line 307 "../../iup_table.c"
  $34 = $4; //@line 307 "../../iup_table.c"
  $35 = HEAP32[$34>>2]|0; //@line 307 "../../iup_table.c"
  $36 = (($35) - 1)|0; //@line 307 "../../iup_table.c"
  $37 = ($33>>>0)<($36>>>0); //@line 307 "../../iup_table.c"
  if (!($37)) {
   break;
  }
  $38 = $7; //@line 308 "../../iup_table.c"
  $39 = $4; //@line 308 "../../iup_table.c"
  $40 = ((($39)) + 8|0); //@line 308 "../../iup_table.c"
  $41 = HEAP32[$40>>2]|0; //@line 308 "../../iup_table.c"
  $42 = (($41) + ($38<<4)|0); //@line 308 "../../iup_table.c"
  $43 = $7; //@line 308 "../../iup_table.c"
  $44 = (($43) + 1)|0; //@line 308 "../../iup_table.c"
  $45 = $4; //@line 308 "../../iup_table.c"
  $46 = ((($45)) + 8|0); //@line 308 "../../iup_table.c"
  $47 = HEAP32[$46>>2]|0; //@line 308 "../../iup_table.c"
  $48 = (($47) + ($44<<4)|0); //@line 308 "../../iup_table.c"
  ;HEAP32[$42>>2]=HEAP32[$48>>2]|0;HEAP32[$42+4>>2]=HEAP32[$48+4>>2]|0;HEAP32[$42+8>>2]=HEAP32[$48+8>>2]|0;HEAP32[$42+12>>2]=HEAP32[$48+12>>2]|0; //@line 308 "../../iup_table.c"
  $49 = $7; //@line 307 "../../iup_table.c"
  $50 = (($49) + 1)|0; //@line 307 "../../iup_table.c"
  $7 = $50; //@line 307 "../../iup_table.c"
 }
 $51 = $4; //@line 311 "../../iup_table.c"
 $52 = ((($51)) + 8|0); //@line 311 "../../iup_table.c"
 $53 = HEAP32[$52>>2]|0; //@line 311 "../../iup_table.c"
 $54 = $4; //@line 311 "../../iup_table.c"
 $55 = HEAP32[$54>>2]|0; //@line 311 "../../iup_table.c"
 $56 = (($53) + ($55<<4)|0); //@line 311 "../../iup_table.c"
 $57 = ((($56)) + -16|0); //@line 311 "../../iup_table.c"
 ;HEAP32[$57>>2]=0|0;HEAP32[$57+4>>2]=0|0;HEAP32[$57+8>>2]=0|0;HEAP32[$57+12>>2]=0|0; //@line 311 "../../iup_table.c"
 $58 = $4; //@line 313 "../../iup_table.c"
 $59 = HEAP32[$58>>2]|0; //@line 313 "../../iup_table.c"
 $60 = (($59) + -1)|0; //@line 313 "../../iup_table.c"
 HEAP32[$58>>2] = $60; //@line 313 "../../iup_table.c"
 $61 = $3; //@line 314 "../../iup_table.c"
 $62 = ((($61)) + 4|0); //@line 314 "../../iup_table.c"
 $63 = HEAP32[$62>>2]|0; //@line 314 "../../iup_table.c"
 $64 = (($63) + -1)|0; //@line 314 "../../iup_table.c"
 HEAP32[$62>>2] = $64; //@line 314 "../../iup_table.c"
 STACKTOP = sp;return; //@line 315 "../../iup_table.c"
}
function _iupTableGet($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 12|0;
 $7 = sp + 8|0;
 $8 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $9 = 0; //@line 340 "../../iup_table.c"
 $10 = $3; //@line 344 "../../iup_table.c"
 $11 = ($10|0)!=(0|0); //@line 344 "../../iup_table.c"
 $12 = $4; //@line 344 "../../iup_table.c"
 $13 = ($12|0)!=(0|0); //@line 344 "../../iup_table.c"
 $or$cond = $11 & $13; //@line 344 "../../iup_table.c"
 if (!($or$cond)) {
  $2 = 0; //@line 345 "../../iup_table.c"
  $27 = $2; //@line 352 "../../iup_table.c"
  STACKTOP = sp;return ($27|0); //@line 352 "../../iup_table.c"
 }
 $14 = $3; //@line 347 "../../iup_table.c"
 $15 = $4; //@line 347 "../../iup_table.c"
 $16 = (_iTableFindItem($14,$15,$8,$6,$7)|0); //@line 347 "../../iup_table.c"
 $5 = $16; //@line 347 "../../iup_table.c"
 $17 = $5; //@line 348 "../../iup_table.c"
 $18 = ($17|0)!=(0); //@line 348 "../../iup_table.c"
 if ($18) {
  $19 = HEAP32[$6>>2]|0; //@line 349 "../../iup_table.c"
  $20 = HEAP32[$8>>2]|0; //@line 349 "../../iup_table.c"
  $21 = ((($20)) + 8|0); //@line 349 "../../iup_table.c"
  $22 = HEAP32[$21>>2]|0; //@line 349 "../../iup_table.c"
  $23 = (($22) + ($19<<4)|0); //@line 349 "../../iup_table.c"
  $24 = ((($23)) + 12|0); //@line 349 "../../iup_table.c"
  $25 = HEAP32[$24>>2]|0; //@line 349 "../../iup_table.c"
  $9 = $25; //@line 349 "../../iup_table.c"
 }
 $26 = $9; //@line 351 "../../iup_table.c"
 $2 = $26; //@line 351 "../../iup_table.c"
 $27 = $2; //@line 352 "../../iup_table.c"
 STACKTOP = sp;return ($27|0); //@line 352 "../../iup_table.c"
}
function _iupTableGetFunc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 HEAP32[$7>>2] = 0; //@line 356 "../../iup_table.c"
 $8 = $4; //@line 357 "../../iup_table.c"
 $9 = $5; //@line 357 "../../iup_table.c"
 $10 = (_iupTableGetTyped($8,$9,$7)|0); //@line 357 "../../iup_table.c"
 $11 = $6; //@line 357 "../../iup_table.c"
 HEAP32[$11>>2] = $10; //@line 357 "../../iup_table.c"
 $12 = HEAP32[$7>>2]|0; //@line 358 "../../iup_table.c"
 $13 = ($12|0)==(2); //@line 358 "../../iup_table.c"
 if ($13) {
  $14 = $6; //@line 359 "../../iup_table.c"
  $15 = HEAP32[$14>>2]|0; //@line 359 "../../iup_table.c"
  $3 = $15; //@line 359 "../../iup_table.c"
  $16 = $3; //@line 362 "../../iup_table.c"
  STACKTOP = sp;return ($16|0); //@line 362 "../../iup_table.c"
 } else {
  $3 = 0; //@line 361 "../../iup_table.c"
  $16 = $3; //@line 362 "../../iup_table.c"
  STACKTOP = sp;return ($16|0); //@line 362 "../../iup_table.c"
 }
 return (0)|0;
}
function _iupTableGetTyped($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 12|0;
 $9 = sp + 8|0;
 $10 = sp + 4|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $11 = 0; //@line 370 "../../iup_table.c"
 $12 = $4; //@line 374 "../../iup_table.c"
 $13 = ($12|0)!=(0|0); //@line 374 "../../iup_table.c"
 $14 = $5; //@line 374 "../../iup_table.c"
 $15 = ($14|0)!=(0|0); //@line 374 "../../iup_table.c"
 $or$cond = $13 & $15; //@line 374 "../../iup_table.c"
 if (!($or$cond)) {
  $3 = 0; //@line 375 "../../iup_table.c"
  $38 = $3; //@line 386 "../../iup_table.c"
  STACKTOP = sp;return ($38|0); //@line 386 "../../iup_table.c"
 }
 $16 = $4; //@line 377 "../../iup_table.c"
 $17 = $5; //@line 377 "../../iup_table.c"
 $18 = (_iTableFindItem($16,$17,$10,$8,$9)|0); //@line 377 "../../iup_table.c"
 $7 = $18; //@line 377 "../../iup_table.c"
 $19 = $7; //@line 378 "../../iup_table.c"
 $20 = ($19|0)!=(0); //@line 378 "../../iup_table.c"
 if ($20) {
  $21 = HEAP32[$8>>2]|0; //@line 380 "../../iup_table.c"
  $22 = HEAP32[$10>>2]|0; //@line 380 "../../iup_table.c"
  $23 = ((($22)) + 8|0); //@line 380 "../../iup_table.c"
  $24 = HEAP32[$23>>2]|0; //@line 380 "../../iup_table.c"
  $25 = (($24) + ($21<<4)|0); //@line 380 "../../iup_table.c"
  $26 = ((($25)) + 12|0); //@line 380 "../../iup_table.c"
  $27 = HEAP32[$26>>2]|0; //@line 380 "../../iup_table.c"
  $11 = $27; //@line 380 "../../iup_table.c"
  $28 = $6; //@line 381 "../../iup_table.c"
  $29 = ($28|0)!=(0|0); //@line 381 "../../iup_table.c"
  if ($29) {
   $30 = HEAP32[$8>>2]|0; //@line 382 "../../iup_table.c"
   $31 = HEAP32[$10>>2]|0; //@line 382 "../../iup_table.c"
   $32 = ((($31)) + 8|0); //@line 382 "../../iup_table.c"
   $33 = HEAP32[$32>>2]|0; //@line 382 "../../iup_table.c"
   $34 = (($33) + ($30<<4)|0); //@line 382 "../../iup_table.c"
   $35 = HEAP32[$34>>2]|0; //@line 382 "../../iup_table.c"
   $36 = $6; //@line 382 "../../iup_table.c"
   HEAP32[$36>>2] = $35; //@line 382 "../../iup_table.c"
  }
 }
 $37 = $11; //@line 385 "../../iup_table.c"
 $3 = $37; //@line 385 "../../iup_table.c"
 $38 = $3; //@line 386 "../../iup_table.c"
 STACKTOP = sp;return ($38|0); //@line 386 "../../iup_table.c"
}
function _iupTableSetCurr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $8 = $3; //@line 394 "../../iup_table.c"
 $9 = ($8|0)!=(0|0); //@line 394 "../../iup_table.c"
 if (!($9)) {
  STACKTOP = sp;return; //@line 418 "../../iup_table.c"
 }
 $10 = $3; //@line 394 "../../iup_table.c"
 $11 = ((($10)) + 20|0); //@line 394 "../../iup_table.c"
 $12 = HEAP32[$11>>2]|0; //@line 394 "../../iup_table.c"
 $13 = ($12|0)==(-1); //@line 394 "../../iup_table.c"
 if ($13) {
  STACKTOP = sp;return; //@line 418 "../../iup_table.c"
 }
 $14 = $3; //@line 395 "../../iup_table.c"
 $15 = ((($14)) + 20|0); //@line 395 "../../iup_table.c"
 $16 = ((($15)) + 4|0); //@line 395 "../../iup_table.c"
 $17 = HEAP32[$16>>2]|0; //@line 395 "../../iup_table.c"
 $18 = ($17|0)==(-1); //@line 395 "../../iup_table.c"
 if ($18) {
  STACKTOP = sp;return; //@line 418 "../../iup_table.c"
 }
 $19 = $3; //@line 398 "../../iup_table.c"
 $20 = ((($19)) + 20|0); //@line 398 "../../iup_table.c"
 $21 = ((($20)) + 4|0); //@line 398 "../../iup_table.c"
 $22 = HEAP32[$21>>2]|0; //@line 398 "../../iup_table.c"
 $23 = $3; //@line 398 "../../iup_table.c"
 $24 = ((($23)) + 20|0); //@line 398 "../../iup_table.c"
 $25 = HEAP32[$24>>2]|0; //@line 398 "../../iup_table.c"
 $26 = $3; //@line 398 "../../iup_table.c"
 $27 = ((($26)) + 16|0); //@line 398 "../../iup_table.c"
 $28 = HEAP32[$27>>2]|0; //@line 398 "../../iup_table.c"
 $29 = (($28) + (($25*12)|0)|0); //@line 398 "../../iup_table.c"
 $30 = ((($29)) + 8|0); //@line 398 "../../iup_table.c"
 $31 = HEAP32[$30>>2]|0; //@line 398 "../../iup_table.c"
 $32 = (($31) + ($22<<4)|0); //@line 398 "../../iup_table.c"
 $7 = $32; //@line 398 "../../iup_table.c"
 $33 = $5; //@line 400 "../../iup_table.c"
 $34 = ($33|0)==(1); //@line 400 "../../iup_table.c"
 if ($34) {
  $35 = $7; //@line 400 "../../iup_table.c"
  $36 = HEAP32[$35>>2]|0; //@line 400 "../../iup_table.c"
  $37 = ($36|0)==(1); //@line 400 "../../iup_table.c"
  if ($37) {
   $38 = $7; //@line 403 "../../iup_table.c"
   $39 = ((($38)) + 12|0); //@line 403 "../../iup_table.c"
   $40 = HEAP32[$39>>2]|0; //@line 403 "../../iup_table.c"
   $41 = $4; //@line 403 "../../iup_table.c"
   $42 = (_iupStrEqual($40,$41)|0); //@line 403 "../../iup_table.c"
   $43 = ($42|0)!=(0); //@line 403 "../../iup_table.c"
   if ($43) {
    STACKTOP = sp;return; //@line 418 "../../iup_table.c"
   }
  }
 }
 $44 = $5; //@line 407 "../../iup_table.c"
 $45 = ($44|0)==(1); //@line 407 "../../iup_table.c"
 $46 = $4; //@line 408 "../../iup_table.c"
 if ($45) {
  $47 = (_iupStrDup($46)|0); //@line 408 "../../iup_table.c"
  $6 = $47; //@line 408 "../../iup_table.c"
 } else {
  $6 = $46; //@line 410 "../../iup_table.c"
 }
 $48 = $7; //@line 412 "../../iup_table.c"
 $49 = HEAP32[$48>>2]|0; //@line 412 "../../iup_table.c"
 $50 = ($49|0)==(1); //@line 412 "../../iup_table.c"
 if ($50) {
  $51 = $7; //@line 413 "../../iup_table.c"
  $52 = ((($51)) + 12|0); //@line 413 "../../iup_table.c"
  $53 = HEAP32[$52>>2]|0; //@line 413 "../../iup_table.c"
  _free($53); //@line 413 "../../iup_table.c"
 }
 $54 = $6; //@line 415 "../../iup_table.c"
 $55 = $7; //@line 415 "../../iup_table.c"
 $56 = ((($55)) + 12|0); //@line 415 "../../iup_table.c"
 HEAP32[$56>>2] = $54; //@line 415 "../../iup_table.c"
 $57 = $5; //@line 416 "../../iup_table.c"
 $58 = $7; //@line 416 "../../iup_table.c"
 HEAP32[$58>>2] = $57; //@line 416 "../../iup_table.c"
 STACKTOP = sp;return; //@line 418 "../../iup_table.c"
}
function _iupTableGetCurr($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 423 "../../iup_table.c"
 $4 = ($3|0)!=(0|0); //@line 423 "../../iup_table.c"
 if ($4) {
  $5 = $2; //@line 423 "../../iup_table.c"
  $6 = ((($5)) + 20|0); //@line 423 "../../iup_table.c"
  $7 = HEAP32[$6>>2]|0; //@line 423 "../../iup_table.c"
  $8 = ($7|0)==(-1); //@line 423 "../../iup_table.c"
  if (!($8)) {
   $9 = $2; //@line 424 "../../iup_table.c"
   $10 = ((($9)) + 20|0); //@line 424 "../../iup_table.c"
   $11 = ((($10)) + 4|0); //@line 424 "../../iup_table.c"
   $12 = HEAP32[$11>>2]|0; //@line 424 "../../iup_table.c"
   $13 = ($12|0)==(-1); //@line 424 "../../iup_table.c"
   if (!($13)) {
    $14 = $2; //@line 427 "../../iup_table.c"
    $15 = ((($14)) + 20|0); //@line 427 "../../iup_table.c"
    $16 = ((($15)) + 4|0); //@line 427 "../../iup_table.c"
    $17 = HEAP32[$16>>2]|0; //@line 427 "../../iup_table.c"
    $18 = $2; //@line 427 "../../iup_table.c"
    $19 = ((($18)) + 20|0); //@line 427 "../../iup_table.c"
    $20 = HEAP32[$19>>2]|0; //@line 427 "../../iup_table.c"
    $21 = $2; //@line 427 "../../iup_table.c"
    $22 = ((($21)) + 16|0); //@line 427 "../../iup_table.c"
    $23 = HEAP32[$22>>2]|0; //@line 427 "../../iup_table.c"
    $24 = (($23) + (($20*12)|0)|0); //@line 427 "../../iup_table.c"
    $25 = ((($24)) + 8|0); //@line 427 "../../iup_table.c"
    $26 = HEAP32[$25>>2]|0; //@line 427 "../../iup_table.c"
    $27 = (($26) + ($17<<4)|0); //@line 427 "../../iup_table.c"
    $28 = ((($27)) + 12|0); //@line 427 "../../iup_table.c"
    $29 = HEAP32[$28>>2]|0; //@line 427 "../../iup_table.c"
    $1 = $29; //@line 427 "../../iup_table.c"
    $30 = $1; //@line 428 "../../iup_table.c"
    STACKTOP = sp;return ($30|0); //@line 428 "../../iup_table.c"
   }
  }
 }
 $1 = 0; //@line 425 "../../iup_table.c"
 $30 = $1; //@line 428 "../../iup_table.c"
 STACKTOP = sp;return ($30|0); //@line 428 "../../iup_table.c"
}
function _iupTableFirst($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 445 "../../iup_table.c"
 $5 = ($4|0)!=(0|0); //@line 445 "../../iup_table.c"
 if (!($5)) {
  $1 = 0; //@line 446 "../../iup_table.c"
  $39 = $1; //@line 463 "../../iup_table.c"
  STACKTOP = sp;return ($39|0); //@line 463 "../../iup_table.c"
 }
 $6 = $2; //@line 448 "../../iup_table.c"
 $7 = ((($6)) + 20|0); //@line 448 "../../iup_table.c"
 HEAP32[$7>>2] = -1; //@line 448 "../../iup_table.c"
 $8 = $2; //@line 449 "../../iup_table.c"
 $9 = ((($8)) + 20|0); //@line 449 "../../iup_table.c"
 $10 = ((($9)) + 4|0); //@line 449 "../../iup_table.c"
 HEAP32[$10>>2] = -1; //@line 449 "../../iup_table.c"
 $3 = 0; //@line 452 "../../iup_table.c"
 while(1) {
  $11 = $3; //@line 452 "../../iup_table.c"
  $12 = $2; //@line 452 "../../iup_table.c"
  $13 = HEAP32[$12>>2]|0; //@line 452 "../../iup_table.c"
  $14 = ($11>>>0)<($13>>>0); //@line 452 "../../iup_table.c"
  if (!($14)) {
   label = 8;
   break;
  }
  $15 = $3; //@line 454 "../../iup_table.c"
  $16 = $2; //@line 454 "../../iup_table.c"
  $17 = ((($16)) + 16|0); //@line 454 "../../iup_table.c"
  $18 = HEAP32[$17>>2]|0; //@line 454 "../../iup_table.c"
  $19 = (($18) + (($15*12)|0)|0); //@line 454 "../../iup_table.c"
  $20 = HEAP32[$19>>2]|0; //@line 454 "../../iup_table.c"
  $21 = ($20>>>0)>(0); //@line 454 "../../iup_table.c"
  $22 = $3; //@line 456 "../../iup_table.c"
  if ($21) {
   label = 6;
   break;
  }
  $38 = (($22) + 1)|0; //@line 452 "../../iup_table.c"
  $3 = $38; //@line 452 "../../iup_table.c"
 }
 if ((label|0) == 6) {
  $23 = $2; //@line 456 "../../iup_table.c"
  $24 = ((($23)) + 20|0); //@line 456 "../../iup_table.c"
  HEAP32[$24>>2] = $22; //@line 456 "../../iup_table.c"
  $25 = $2; //@line 457 "../../iup_table.c"
  $26 = ((($25)) + 20|0); //@line 457 "../../iup_table.c"
  $27 = ((($26)) + 4|0); //@line 457 "../../iup_table.c"
  HEAP32[$27>>2] = 0; //@line 457 "../../iup_table.c"
  $28 = $3; //@line 458 "../../iup_table.c"
  $29 = $2; //@line 458 "../../iup_table.c"
  $30 = ((($29)) + 16|0); //@line 458 "../../iup_table.c"
  $31 = HEAP32[$30>>2]|0; //@line 458 "../../iup_table.c"
  $32 = (($31) + (($28*12)|0)|0); //@line 458 "../../iup_table.c"
  $33 = ((($32)) + 8|0); //@line 458 "../../iup_table.c"
  $34 = HEAP32[$33>>2]|0; //@line 458 "../../iup_table.c"
  $35 = ((($34)) + 4|0); //@line 458 "../../iup_table.c"
  $36 = ((($35)) + 4|0); //@line 458 "../../iup_table.c"
  $37 = HEAP32[$36>>2]|0; //@line 458 "../../iup_table.c"
  $1 = $37; //@line 458 "../../iup_table.c"
  $39 = $1; //@line 463 "../../iup_table.c"
  STACKTOP = sp;return ($39|0); //@line 463 "../../iup_table.c"
 }
 else if ((label|0) == 8) {
  $1 = 0; //@line 462 "../../iup_table.c"
  $39 = $1; //@line 463 "../../iup_table.c"
  STACKTOP = sp;return ($39|0); //@line 463 "../../iup_table.c"
 }
 return (0)|0;
}
function _iupTableNext($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 471 "../../iup_table.c"
 $5 = ($4|0)!=(0|0); //@line 471 "../../iup_table.c"
 if ($5) {
  $6 = $2; //@line 471 "../../iup_table.c"
  $7 = ((($6)) + 20|0); //@line 471 "../../iup_table.c"
  $8 = HEAP32[$7>>2]|0; //@line 471 "../../iup_table.c"
  $9 = ($8|0)==(-1); //@line 471 "../../iup_table.c"
  if (!($9)) {
   $10 = $2; //@line 472 "../../iup_table.c"
   $11 = ((($10)) + 20|0); //@line 472 "../../iup_table.c"
   $12 = ((($11)) + 4|0); //@line 472 "../../iup_table.c"
   $13 = HEAP32[$12>>2]|0; //@line 472 "../../iup_table.c"
   $14 = ($13|0)==(-1); //@line 472 "../../iup_table.c"
   if (!($14)) {
    $15 = $2; //@line 475 "../../iup_table.c"
    $16 = ((($15)) + 20|0); //@line 475 "../../iup_table.c"
    $17 = ((($16)) + 4|0); //@line 475 "../../iup_table.c"
    $18 = HEAP32[$17>>2]|0; //@line 475 "../../iup_table.c"
    $19 = (($18) + 1)|0; //@line 475 "../../iup_table.c"
    $20 = $2; //@line 475 "../../iup_table.c"
    $21 = ((($20)) + 20|0); //@line 475 "../../iup_table.c"
    $22 = HEAP32[$21>>2]|0; //@line 475 "../../iup_table.c"
    $23 = $2; //@line 475 "../../iup_table.c"
    $24 = ((($23)) + 16|0); //@line 475 "../../iup_table.c"
    $25 = HEAP32[$24>>2]|0; //@line 475 "../../iup_table.c"
    $26 = (($25) + (($22*12)|0)|0); //@line 475 "../../iup_table.c"
    $27 = HEAP32[$26>>2]|0; //@line 475 "../../iup_table.c"
    $28 = ($19>>>0)<($27>>>0); //@line 475 "../../iup_table.c"
    $29 = $2; //@line 478 "../../iup_table.c"
    $30 = ((($29)) + 20|0); //@line 478 "../../iup_table.c"
    if ($28) {
     $31 = ((($30)) + 4|0); //@line 478 "../../iup_table.c"
     $32 = HEAP32[$31>>2]|0; //@line 478 "../../iup_table.c"
     $33 = (($32) + 1)|0; //@line 478 "../../iup_table.c"
     HEAP32[$31>>2] = $33; //@line 478 "../../iup_table.c"
     $34 = $2; //@line 479 "../../iup_table.c"
     $35 = ((($34)) + 20|0); //@line 479 "../../iup_table.c"
     $36 = ((($35)) + 4|0); //@line 479 "../../iup_table.c"
     $37 = HEAP32[$36>>2]|0; //@line 479 "../../iup_table.c"
     $38 = $2; //@line 479 "../../iup_table.c"
     $39 = ((($38)) + 20|0); //@line 479 "../../iup_table.c"
     $40 = HEAP32[$39>>2]|0; //@line 479 "../../iup_table.c"
     $41 = $2; //@line 479 "../../iup_table.c"
     $42 = ((($41)) + 16|0); //@line 479 "../../iup_table.c"
     $43 = HEAP32[$42>>2]|0; //@line 479 "../../iup_table.c"
     $44 = (($43) + (($40*12)|0)|0); //@line 479 "../../iup_table.c"
     $45 = ((($44)) + 8|0); //@line 479 "../../iup_table.c"
     $46 = HEAP32[$45>>2]|0; //@line 479 "../../iup_table.c"
     $47 = (($46) + ($37<<4)|0); //@line 479 "../../iup_table.c"
     $48 = ((($47)) + 4|0); //@line 479 "../../iup_table.c"
     $49 = ((($48)) + 4|0); //@line 479 "../../iup_table.c"
     $50 = HEAP32[$49>>2]|0; //@line 479 "../../iup_table.c"
     $1 = $50; //@line 479 "../../iup_table.c"
     $81 = $1; //@line 496 "../../iup_table.c"
     STACKTOP = sp;return ($81|0); //@line 496 "../../iup_table.c"
    }
    $51 = HEAP32[$30>>2]|0; //@line 484 "../../iup_table.c"
    $52 = (($51) + 1)|0; //@line 484 "../../iup_table.c"
    $3 = $52; //@line 484 "../../iup_table.c"
    while(1) {
     $53 = $3; //@line 484 "../../iup_table.c"
     $54 = $2; //@line 484 "../../iup_table.c"
     $55 = HEAP32[$54>>2]|0; //@line 484 "../../iup_table.c"
     $56 = ($53>>>0)<($55>>>0); //@line 484 "../../iup_table.c"
     if (!($56)) {
      label = 12;
      break;
     }
     $57 = $3; //@line 486 "../../iup_table.c"
     $58 = $2; //@line 486 "../../iup_table.c"
     $59 = ((($58)) + 16|0); //@line 486 "../../iup_table.c"
     $60 = HEAP32[$59>>2]|0; //@line 486 "../../iup_table.c"
     $61 = (($60) + (($57*12)|0)|0); //@line 486 "../../iup_table.c"
     $62 = HEAP32[$61>>2]|0; //@line 486 "../../iup_table.c"
     $63 = ($62>>>0)>(0); //@line 486 "../../iup_table.c"
     $64 = $3; //@line 488 "../../iup_table.c"
     if ($63) {
      label = 10;
      break;
     }
     $80 = (($64) + 1)|0; //@line 484 "../../iup_table.c"
     $3 = $80; //@line 484 "../../iup_table.c"
    }
    if ((label|0) == 10) {
     $65 = $2; //@line 488 "../../iup_table.c"
     $66 = ((($65)) + 20|0); //@line 488 "../../iup_table.c"
     HEAP32[$66>>2] = $64; //@line 488 "../../iup_table.c"
     $67 = $2; //@line 489 "../../iup_table.c"
     $68 = ((($67)) + 20|0); //@line 489 "../../iup_table.c"
     $69 = ((($68)) + 4|0); //@line 489 "../../iup_table.c"
     HEAP32[$69>>2] = 0; //@line 489 "../../iup_table.c"
     $70 = $3; //@line 490 "../../iup_table.c"
     $71 = $2; //@line 490 "../../iup_table.c"
     $72 = ((($71)) + 16|0); //@line 490 "../../iup_table.c"
     $73 = HEAP32[$72>>2]|0; //@line 490 "../../iup_table.c"
     $74 = (($73) + (($70*12)|0)|0); //@line 490 "../../iup_table.c"
     $75 = ((($74)) + 8|0); //@line 490 "../../iup_table.c"
     $76 = HEAP32[$75>>2]|0; //@line 490 "../../iup_table.c"
     $77 = ((($76)) + 4|0); //@line 490 "../../iup_table.c"
     $78 = ((($77)) + 4|0); //@line 490 "../../iup_table.c"
     $79 = HEAP32[$78>>2]|0; //@line 490 "../../iup_table.c"
     $1 = $79; //@line 490 "../../iup_table.c"
     $81 = $1; //@line 496 "../../iup_table.c"
     STACKTOP = sp;return ($81|0); //@line 496 "../../iup_table.c"
    }
    else if ((label|0) == 12) {
     $1 = 0; //@line 495 "../../iup_table.c"
     $81 = $1; //@line 496 "../../iup_table.c"
     STACKTOP = sp;return ($81|0); //@line 496 "../../iup_table.c"
    }
   }
  }
 }
 $1 = 0; //@line 473 "../../iup_table.c"
 $81 = $1; //@line 496 "../../iup_table.c"
 STACKTOP = sp;return ($81|0); //@line 496 "../../iup_table.c"
}
function _iupTabsNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 526 "../../iup_tabs.c"
 $0 = $1; //@line 526 "../../iup_tabs.c"
 $2 = $0; //@line 528 "../../iup_tabs.c"
 HEAP32[$2>>2] = 17356; //@line 528 "../../iup_tabs.c"
 $3 = $0; //@line 529 "../../iup_tabs.c"
 $4 = ((($3)) + 4|0); //@line 529 "../../iup_tabs.c"
 HEAP32[$4>>2] = 20071; //@line 529 "../../iup_tabs.c"
 $5 = $0; //@line 530 "../../iup_tabs.c"
 $6 = ((($5)) + 8|0); //@line 530 "../../iup_tabs.c"
 HEAP32[$6>>2] = 1; //@line 530 "../../iup_tabs.c"
 $7 = $0; //@line 531 "../../iup_tabs.c"
 $8 = ((($7)) + 12|0); //@line 531 "../../iup_tabs.c"
 HEAP32[$8>>2] = 1; //@line 531 "../../iup_tabs.c"
 $9 = $0; //@line 532 "../../iup_tabs.c"
 $10 = ((($9)) + 16|0); //@line 532 "../../iup_tabs.c"
 HEAP32[$10>>2] = 1; //@line 532 "../../iup_tabs.c"
 $11 = $0; //@line 533 "../../iup_tabs.c"
 $12 = ((($11)) + 20|0); //@line 533 "../../iup_tabs.c"
 HEAP32[$12>>2] = 1; //@line 533 "../../iup_tabs.c"
 $13 = $0; //@line 536 "../../iup_tabs.c"
 $14 = ((($13)) + 32|0); //@line 536 "../../iup_tabs.c"
 HEAP32[$14>>2] = 447; //@line 536 "../../iup_tabs.c"
 $15 = $0; //@line 537 "../../iup_tabs.c"
 $16 = ((($15)) + 40|0); //@line 537 "../../iup_tabs.c"
 HEAP32[$16>>2] = 448; //@line 537 "../../iup_tabs.c"
 $17 = $0; //@line 538 "../../iup_tabs.c"
 $18 = ((($17)) + 60|0); //@line 538 "../../iup_tabs.c"
 HEAP32[$18>>2] = 449; //@line 538 "../../iup_tabs.c"
 $19 = $0; //@line 540 "../../iup_tabs.c"
 $20 = ((($19)) + 76|0); //@line 540 "../../iup_tabs.c"
 HEAP32[$20>>2] = 450; //@line 540 "../../iup_tabs.c"
 $21 = $0; //@line 541 "../../iup_tabs.c"
 $22 = ((($21)) + 80|0); //@line 541 "../../iup_tabs.c"
 HEAP32[$22>>2] = 451; //@line 541 "../../iup_tabs.c"
 $23 = $0; //@line 542 "../../iup_tabs.c"
 $24 = ((($23)) + 84|0); //@line 542 "../../iup_tabs.c"
 HEAP32[$24>>2] = 452; //@line 542 "../../iup_tabs.c"
 $25 = $0; //@line 544 "../../iup_tabs.c"
 $26 = ((($25)) + 72|0); //@line 544 "../../iup_tabs.c"
 HEAP32[$26>>2] = 47; //@line 544 "../../iup_tabs.c"
 $27 = $0; //@line 545 "../../iup_tabs.c"
 $28 = ((($27)) + 48|0); //@line 545 "../../iup_tabs.c"
 HEAP32[$28>>2] = 48; //@line 545 "../../iup_tabs.c"
 $29 = $0; //@line 548 "../../iup_tabs.c"
 _iupClassRegisterCallback($29,17361,17374); //@line 548 "../../iup_tabs.c"
 $30 = $0; //@line 549 "../../iup_tabs.c"
 _iupClassRegisterCallback($30,17377,17878); //@line 549 "../../iup_tabs.c"
 $31 = $0; //@line 550 "../../iup_tabs.c"
 _iupClassRegisterCallback($31,18025,17949); //@line 550 "../../iup_tabs.c"
 $32 = $0; //@line 553 "../../iup_tabs.c"
 _iupBaseRegisterCommonCallbacks($32); //@line 553 "../../iup_tabs.c"
 $33 = $0; //@line 556 "../../iup_tabs.c"
 _iupBaseRegisterCommonAttrib($33); //@line 556 "../../iup_tabs.c"
 $34 = $0; //@line 559 "../../iup_tabs.c"
 _iupBaseRegisterVisualAttrib($34); //@line 559 "../../iup_tabs.c"
 $35 = $0; //@line 562 "../../iup_tabs.c"
 _iupClassRegisterAttribute($35,20104,453,454,0,0,9); //@line 562 "../../iup_tabs.c"
 $36 = $0; //@line 563 "../../iup_tabs.c"
 _iupClassRegisterAttribute($36,20110,455,456,(-1),19944,521); //@line 563 "../../iup_tabs.c"
 $37 = $0; //@line 564 "../../iup_tabs.c"
 _iupClassRegisterAttribute($37,20119,457,458,0,0,4109); //@line 564 "../../iup_tabs.c"
 $38 = $0; //@line 565 "../../iup_tabs.c"
 _iupClassRegisterAttribute($38,18119,459,0,0,0,41); //@line 565 "../../iup_tabs.c"
 $39 = $0; //@line 566 "../../iup_tabs.c"
 _iupClassRegisterAttribute($39,17393,460,461,0,0,9); //@line 566 "../../iup_tabs.c"
 $40 = $0; //@line 569 "../../iup_tabs.c"
 _iupClassRegisterAttribute($40,20080,462,0,0,0,41); //@line 569 "../../iup_tabs.c"
 $41 = $0; //@line 570 "../../iup_tabs.c"
 _iupClassRegisterAttribute($41,20091,463,0,0,0,41); //@line 570 "../../iup_tabs.c"
 $42 = $0; //@line 571 "../../iup_tabs.c"
 _iupClassRegisterAttribute($42,20073,20,0,(-1),20441,9); //@line 571 "../../iup_tabs.c"
 $43 = $0; //@line 574 "../../iup_tabs.c"
 _iupClassRegisterAttribute($43,17403,0,0,0,0,9); //@line 574 "../../iup_tabs.c"
 $44 = $0; //@line 576 "../../iup_tabs.c"
 _iupdrvTabsInitClass($44); //@line 576 "../../iup_tabs.c"
 $45 = $0; //@line 578 "../../iup_tabs.c"
 STACKTOP = sp;return ($45|0); //@line 578 "../../iup_tabs.c"
}
function _iTabsCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = (_calloc(1,28)|0); //@line 509 "../../iup_tabs.c"
 $6 = $2; //@line 509 "../../iup_tabs.c"
 $7 = ((($6)) + 72|0); //@line 509 "../../iup_tabs.c"
 HEAP32[$7>>2] = $5; //@line 509 "../../iup_tabs.c"
 $8 = $3; //@line 512 "../../iup_tabs.c"
 $9 = ($8|0)!=(0|0); //@line 512 "../../iup_tabs.c"
 if (!($9)) {
  STACKTOP = sp;return 0; //@line 521 "../../iup_tabs.c"
 }
 $10 = $3; //@line 514 "../../iup_tabs.c"
 $4 = $10; //@line 514 "../../iup_tabs.c"
 while(1) {
  $11 = $4; //@line 515 "../../iup_tabs.c"
  $12 = HEAP32[$11>>2]|0; //@line 515 "../../iup_tabs.c"
  $13 = ($12|0)!=(0|0); //@line 515 "../../iup_tabs.c"
  if (!($13)) {
   break;
  }
  $14 = $2; //@line 517 "../../iup_tabs.c"
  $15 = $4; //@line 517 "../../iup_tabs.c"
  $16 = HEAP32[$15>>2]|0; //@line 517 "../../iup_tabs.c"
  (_IupAppend($14,$16)|0); //@line 517 "../../iup_tabs.c"
  $17 = $4; //@line 518 "../../iup_tabs.c"
  $18 = ((($17)) + 4|0); //@line 518 "../../iup_tabs.c"
  $4 = $18; //@line 518 "../../iup_tabs.c"
 }
 STACKTOP = sp;return 0; //@line 521 "../../iup_tabs.c"
}
function _iTabsGetInnerNativeContainerHandleMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 while(1) {
  $5 = $4; //@line 499 "../../iup_tabs.c"
  $6 = ($5|0)!=(0|0); //@line 499 "../../iup_tabs.c"
  if ($6) {
   $7 = $4; //@line 499 "../../iup_tabs.c"
   $8 = ((($7)) + 60|0); //@line 499 "../../iup_tabs.c"
   $9 = HEAP32[$8>>2]|0; //@line 499 "../../iup_tabs.c"
   $10 = $3; //@line 499 "../../iup_tabs.c"
   $11 = ($9|0)!=($10|0); //@line 499 "../../iup_tabs.c"
   $19 = $11;
  } else {
   $19 = 0;
  }
  $12 = $4; //@line 500 "../../iup_tabs.c"
  if (!($19)) {
   break;
  }
  $13 = ((($12)) + 60|0); //@line 500 "../../iup_tabs.c"
  $14 = HEAP32[$13>>2]|0; //@line 500 "../../iup_tabs.c"
  $4 = $14; //@line 500 "../../iup_tabs.c"
 }
 $15 = ($12|0)!=(0|0); //@line 501 "../../iup_tabs.c"
 if ($15) {
  $16 = $4; //@line 502 "../../iup_tabs.c"
  $17 = (_iupAttribGet($16,17452)|0); //@line 502 "../../iup_tabs.c"
  $2 = $17; //@line 502 "../../iup_tabs.c"
  $18 = $2; //@line 505 "../../iup_tabs.c"
  STACKTOP = sp;return ($18|0); //@line 505 "../../iup_tabs.c"
 } else {
  $2 = 0; //@line 504 "../../iup_tabs.c"
  $18 = $2; //@line 505 "../../iup_tabs.c"
  STACKTOP = sp;return ($18|0); //@line 505 "../../iup_tabs.c"
 }
 return (0)|0;
}
function _iTabsComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = sp + 4|0;
 $12 = sp;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = 0; //@line 443 "../../iup_tabs.c"
 $10 = 0; //@line 444 "../../iup_tabs.c"
 $13 = $4; //@line 446 "../../iup_tabs.c"
 $14 = ((($13)) + 64|0); //@line 446 "../../iup_tabs.c"
 $15 = HEAP32[$14>>2]|0; //@line 446 "../../iup_tabs.c"
 $8 = $15; //@line 446 "../../iup_tabs.c"
 while(1) {
  $16 = $8; //@line 446 "../../iup_tabs.c"
  $17 = ($16|0)!=(0|0); //@line 446 "../../iup_tabs.c"
  if (!($17)) {
   break;
  }
  $18 = $8; //@line 449 "../../iup_tabs.c"
  _iupBaseComputeNaturalSize($18); //@line 449 "../../iup_tabs.c"
  $19 = $8; //@line 451 "../../iup_tabs.c"
  $20 = ((($19)) + 20|0); //@line 451 "../../iup_tabs.c"
  $21 = HEAP32[$20>>2]|0; //@line 451 "../../iup_tabs.c"
  $22 = $7; //@line 451 "../../iup_tabs.c"
  $23 = HEAP32[$22>>2]|0; //@line 451 "../../iup_tabs.c"
  $24 = $23 | $21; //@line 451 "../../iup_tabs.c"
  HEAP32[$22>>2] = $24; //@line 451 "../../iup_tabs.c"
  $25 = $9; //@line 452 "../../iup_tabs.c"
  $26 = $8; //@line 452 "../../iup_tabs.c"
  $27 = ((($26)) + 44|0); //@line 452 "../../iup_tabs.c"
  $28 = HEAP32[$27>>2]|0; //@line 452 "../../iup_tabs.c"
  $29 = ($25|0)>($28|0); //@line 452 "../../iup_tabs.c"
  if ($29) {
   $30 = $9; //@line 452 "../../iup_tabs.c"
   $34 = $30;
  } else {
   $31 = $8; //@line 452 "../../iup_tabs.c"
   $32 = ((($31)) + 44|0); //@line 452 "../../iup_tabs.c"
   $33 = HEAP32[$32>>2]|0; //@line 452 "../../iup_tabs.c"
   $34 = $33;
  }
  $9 = $34; //@line 452 "../../iup_tabs.c"
  $35 = $10; //@line 453 "../../iup_tabs.c"
  $36 = $8; //@line 453 "../../iup_tabs.c"
  $37 = ((($36)) + 48|0); //@line 453 "../../iup_tabs.c"
  $38 = HEAP32[$37>>2]|0; //@line 453 "../../iup_tabs.c"
  $39 = ($35|0)>($38|0); //@line 453 "../../iup_tabs.c"
  if ($39) {
   $40 = $10; //@line 453 "../../iup_tabs.c"
   $44 = $40;
  } else {
   $41 = $8; //@line 453 "../../iup_tabs.c"
   $42 = ((($41)) + 48|0); //@line 453 "../../iup_tabs.c"
   $43 = HEAP32[$42>>2]|0; //@line 453 "../../iup_tabs.c"
   $44 = $43;
  }
  $10 = $44; //@line 453 "../../iup_tabs.c"
  $45 = $8; //@line 446 "../../iup_tabs.c"
  $46 = ((($45)) + 68|0); //@line 446 "../../iup_tabs.c"
  $47 = HEAP32[$46>>2]|0; //@line 446 "../../iup_tabs.c"
  $8 = $47; //@line 446 "../../iup_tabs.c"
 }
 $48 = $4; //@line 456 "../../iup_tabs.c"
 _iTabsGetDecorSize($48,$11,$12); //@line 456 "../../iup_tabs.c"
 $49 = $9; //@line 458 "../../iup_tabs.c"
 $50 = HEAP32[$11>>2]|0; //@line 458 "../../iup_tabs.c"
 $51 = (($49) + ($50))|0; //@line 458 "../../iup_tabs.c"
 $52 = $5; //@line 458 "../../iup_tabs.c"
 HEAP32[$52>>2] = $51; //@line 458 "../../iup_tabs.c"
 $53 = $10; //@line 459 "../../iup_tabs.c"
 $54 = HEAP32[$12>>2]|0; //@line 459 "../../iup_tabs.c"
 $55 = (($53) + ($54))|0; //@line 459 "../../iup_tabs.c"
 $56 = $6; //@line 459 "../../iup_tabs.c"
 HEAP32[$56>>2] = $55; //@line 459 "../../iup_tabs.c"
 STACKTOP = sp;return; //@line 460 "../../iup_tabs.c"
}
function _iTabsSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp + 4|0;
 $8 = sp;
 $2 = $0;
 $3 = $1;
 $9 = $2; //@line 467 "../../iup_tabs.c"
 _iTabsGetDecorSize($9,$7,$8); //@line 467 "../../iup_tabs.c"
 $10 = $2; //@line 469 "../../iup_tabs.c"
 $11 = ((($10)) + 52|0); //@line 469 "../../iup_tabs.c"
 $12 = HEAP32[$11>>2]|0; //@line 469 "../../iup_tabs.c"
 $13 = HEAP32[$7>>2]|0; //@line 469 "../../iup_tabs.c"
 $14 = (($12) - ($13))|0; //@line 469 "../../iup_tabs.c"
 $5 = $14; //@line 469 "../../iup_tabs.c"
 $15 = $2; //@line 470 "../../iup_tabs.c"
 $16 = ((($15)) + 56|0); //@line 470 "../../iup_tabs.c"
 $17 = HEAP32[$16>>2]|0; //@line 470 "../../iup_tabs.c"
 $18 = HEAP32[$8>>2]|0; //@line 470 "../../iup_tabs.c"
 $19 = (($17) - ($18))|0; //@line 470 "../../iup_tabs.c"
 $6 = $19; //@line 470 "../../iup_tabs.c"
 $20 = $5; //@line 471 "../../iup_tabs.c"
 $21 = ($20|0)<(0); //@line 471 "../../iup_tabs.c"
 if ($21) {
  $5 = 0; //@line 471 "../../iup_tabs.c"
 }
 $22 = $6; //@line 472 "../../iup_tabs.c"
 $23 = ($22|0)<(0); //@line 472 "../../iup_tabs.c"
 if ($23) {
  $6 = 0; //@line 472 "../../iup_tabs.c"
 }
 $24 = $2; //@line 474 "../../iup_tabs.c"
 $25 = ((($24)) + 64|0); //@line 474 "../../iup_tabs.c"
 $26 = HEAP32[$25>>2]|0; //@line 474 "../../iup_tabs.c"
 $4 = $26; //@line 474 "../../iup_tabs.c"
 while(1) {
  $27 = $4; //@line 474 "../../iup_tabs.c"
  $28 = ($27|0)!=(0|0); //@line 474 "../../iup_tabs.c"
  if (!($28)) {
   break;
  }
  $29 = $4; //@line 476 "../../iup_tabs.c"
  $30 = $5; //@line 476 "../../iup_tabs.c"
  $31 = $6; //@line 476 "../../iup_tabs.c"
  $32 = $3; //@line 476 "../../iup_tabs.c"
  _iupBaseSetCurrentSize($29,$30,$31,$32); //@line 476 "../../iup_tabs.c"
  $33 = $4; //@line 474 "../../iup_tabs.c"
  $34 = ((($33)) + 68|0); //@line 474 "../../iup_tabs.c"
  $35 = HEAP32[$34>>2]|0; //@line 474 "../../iup_tabs.c"
  $4 = $35; //@line 474 "../../iup_tabs.c"
 }
 STACKTOP = sp;return; //@line 478 "../../iup_tabs.c"
}
function _iTabsSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $3 = $0;
 HEAP32[$4>>2] = $1;
 HEAP32[$5>>2] = $2;
 $8 = $3; //@line 485 "../../iup_tabs.c"
 $9 = (_iupAttribGet($8,17403)|0); //@line 485 "../../iup_tabs.c"
 $7 = $9; //@line 485 "../../iup_tabs.c"
 HEAP32[$4>>2] = 0; //@line 488 "../../iup_tabs.c"
 HEAP32[$5>>2] = 0; //@line 489 "../../iup_tabs.c"
 $10 = $7; //@line 491 "../../iup_tabs.c"
 $11 = ($10|0)!=(0|0); //@line 491 "../../iup_tabs.c"
 if ($11) {
  $12 = $7; //@line 491 "../../iup_tabs.c"
  (_iupStrToIntInt($12,$4,$5,120)|0); //@line 491 "../../iup_tabs.c"
 }
 $13 = $3; //@line 493 "../../iup_tabs.c"
 $14 = ((($13)) + 64|0); //@line 493 "../../iup_tabs.c"
 $15 = HEAP32[$14>>2]|0; //@line 493 "../../iup_tabs.c"
 $6 = $15; //@line 493 "../../iup_tabs.c"
 while(1) {
  $16 = $6; //@line 493 "../../iup_tabs.c"
  $17 = ($16|0)!=(0|0); //@line 493 "../../iup_tabs.c"
  if (!($17)) {
   break;
  }
  $18 = $6; //@line 494 "../../iup_tabs.c"
  $19 = HEAP32[$4>>2]|0; //@line 494 "../../iup_tabs.c"
  $20 = HEAP32[$5>>2]|0; //@line 494 "../../iup_tabs.c"
  _iupBaseSetPosition($18,$19,$20); //@line 494 "../../iup_tabs.c"
  $21 = $6; //@line 493 "../../iup_tabs.c"
  $22 = ((($21)) + 68|0); //@line 493 "../../iup_tabs.c"
  $23 = HEAP32[$22>>2]|0; //@line 493 "../../iup_tabs.c"
  $6 = $23; //@line 493 "../../iup_tabs.c"
 }
 STACKTOP = sp;return; //@line 495 "../../iup_tabs.c"
}
function _iTabsGetValueAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 376 "../../iup_tabs.c"
 $4 = (_iTabsGetValueHandleAttrib($3)|0); //@line 376 "../../iup_tabs.c"
 $2 = $4; //@line 376 "../../iup_tabs.c"
 $5 = $2; //@line 377 "../../iup_tabs.c"
 $6 = (_IupGetName($5)|0); //@line 377 "../../iup_tabs.c"
 STACKTOP = sp;return ($6|0); //@line 377 "../../iup_tabs.c"
}
function _iTabsSetValueAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 362 "../../iup_tabs.c"
 $7 = ($6|0)!=(0|0); //@line 362 "../../iup_tabs.c"
 do {
  if ($7) {
   $8 = $4; //@line 365 "../../iup_tabs.c"
   $9 = (_IupGetHandle($8)|0); //@line 365 "../../iup_tabs.c"
   $5 = $9; //@line 365 "../../iup_tabs.c"
   $10 = $5; //@line 366 "../../iup_tabs.c"
   $11 = ($10|0)!=(0|0); //@line 366 "../../iup_tabs.c"
   if ($11) {
    $12 = $3; //@line 369 "../../iup_tabs.c"
    $13 = $5; //@line 369 "../../iup_tabs.c"
    (_iTabsSetValueHandleAttrib($12,$13)|0); //@line 369 "../../iup_tabs.c"
    $2 = 0; //@line 371 "../../iup_tabs.c"
    break;
   } else {
    $2 = 0; //@line 367 "../../iup_tabs.c"
    break;
   }
  } else {
   $2 = 0; //@line 363 "../../iup_tabs.c"
  }
 } while(0);
 $14 = $2; //@line 372 "../../iup_tabs.c"
 STACKTOP = sp;return ($14|0); //@line 372 "../../iup_tabs.c"
}
function _iTabsGetValuePosAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $6 = $2; //@line 342 "../../iup_tabs.c"
 $7 = ((($6)) + 16|0); //@line 342 "../../iup_tabs.c"
 $8 = HEAP32[$7>>2]|0; //@line 342 "../../iup_tabs.c"
 $9 = ($8|0)!=(0|0); //@line 342 "../../iup_tabs.c"
 $10 = $2; //@line 344 "../../iup_tabs.c"
 if ($9) {
  $11 = (_iupdrvTabsGetCurrentTab($10)|0); //@line 344 "../../iup_tabs.c"
  $3 = $11; //@line 344 "../../iup_tabs.c"
  $12 = $3; //@line 345 "../../iup_tabs.c"
  $13 = (_iupStrReturnInt($12)|0); //@line 345 "../../iup_tabs.c"
  $1 = $13; //@line 345 "../../iup_tabs.c"
  $22 = $1; //@line 356 "../../iup_tabs.c"
  STACKTOP = sp;return ($22|0); //@line 356 "../../iup_tabs.c"
 }
 $14 = (_iupAttribGet($10,17430)|0); //@line 349 "../../iup_tabs.c"
 $4 = $14; //@line 349 "../../iup_tabs.c"
 $15 = $2; //@line 350 "../../iup_tabs.c"
 $16 = $4; //@line 350 "../../iup_tabs.c"
 $17 = (_IupGetChildPos($15,$16)|0); //@line 350 "../../iup_tabs.c"
 $5 = $17; //@line 350 "../../iup_tabs.c"
 $18 = $5; //@line 351 "../../iup_tabs.c"
 $19 = ($18|0)!=(-1); //@line 351 "../../iup_tabs.c"
 if ($19) {
  $20 = $5; //@line 352 "../../iup_tabs.c"
  $21 = (_iupStrReturnInt($20)|0); //@line 352 "../../iup_tabs.c"
  $1 = $21; //@line 352 "../../iup_tabs.c"
  $22 = $1; //@line 356 "../../iup_tabs.c"
  STACKTOP = sp;return ($22|0); //@line 356 "../../iup_tabs.c"
 } else {
  $1 = 0; //@line 355 "../../iup_tabs.c"
  $22 = $1; //@line 356 "../../iup_tabs.c"
  STACKTOP = sp;return ($22|0); //@line 356 "../../iup_tabs.c"
 }
 return (0)|0;
}
function _iTabsSetValuePosAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp;
 $3 = $0;
 $4 = $1;
 $7 = $4; //@line 330 "../../iup_tabs.c"
 $8 = (_iupStrToInt($7,$6)|0); //@line 330 "../../iup_tabs.c"
 $9 = ($8|0)!=(0); //@line 330 "../../iup_tabs.c"
 if (!($9)) {
  $2 = 0; //@line 331 "../../iup_tabs.c"
  $18 = $2; //@line 338 "../../iup_tabs.c"
  STACKTOP = sp;return ($18|0); //@line 338 "../../iup_tabs.c"
 }
 $10 = $3; //@line 333 "../../iup_tabs.c"
 $11 = HEAP32[$6>>2]|0; //@line 333 "../../iup_tabs.c"
 $12 = (_IupGetChild($10,$11)|0); //@line 333 "../../iup_tabs.c"
 $5 = $12; //@line 333 "../../iup_tabs.c"
 $13 = $5; //@line 334 "../../iup_tabs.c"
 $14 = ($13|0)!=(0|0); //@line 334 "../../iup_tabs.c"
 if ($14) {
  $15 = $3; //@line 335 "../../iup_tabs.c"
  $16 = $5; //@line 335 "../../iup_tabs.c"
  $17 = HEAP32[$6>>2]|0; //@line 335 "../../iup_tabs.c"
  _iTabsSetTab($15,$16,$17); //@line 335 "../../iup_tabs.c"
 }
 $2 = 0; //@line 337 "../../iup_tabs.c"
 $18 = $2; //@line 338 "../../iup_tabs.c"
 STACKTOP = sp;return ($18|0); //@line 338 "../../iup_tabs.c"
}
function _iTabsGetValueHandleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $4 = $2; //@line 311 "../../iup_tabs.c"
 $5 = ((($4)) + 16|0); //@line 311 "../../iup_tabs.c"
 $6 = HEAP32[$5>>2]|0; //@line 311 "../../iup_tabs.c"
 $7 = ($6|0)!=(0|0); //@line 311 "../../iup_tabs.c"
 $8 = $2; //@line 313 "../../iup_tabs.c"
 if ($7) {
  $9 = (_iupdrvTabsGetCurrentTab($8)|0); //@line 313 "../../iup_tabs.c"
  $3 = $9; //@line 313 "../../iup_tabs.c"
  $10 = $2; //@line 314 "../../iup_tabs.c"
  $11 = $3; //@line 314 "../../iup_tabs.c"
  $12 = (_IupGetChild($10,$11)|0); //@line 314 "../../iup_tabs.c"
  $1 = $12; //@line 314 "../../iup_tabs.c"
  $14 = $1; //@line 318 "../../iup_tabs.c"
  STACKTOP = sp;return ($14|0); //@line 318 "../../iup_tabs.c"
 } else {
  $13 = (_iupAttribGet($8,17430)|0); //@line 317 "../../iup_tabs.c"
  $1 = $13; //@line 317 "../../iup_tabs.c"
  $14 = $1; //@line 318 "../../iup_tabs.c"
  STACKTOP = sp;return ($14|0); //@line 318 "../../iup_tabs.c"
 }
 return (0)|0;
}
function _iTabsSetValueHandleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $4; //@line 274 "../../iup_tabs.c"
 $6 = $7; //@line 274 "../../iup_tabs.c"
 $8 = $6; //@line 276 "../../iup_tabs.c"
 $9 = (_iupObjectCheck($8)|0); //@line 276 "../../iup_tabs.c"
 $10 = ($9|0)!=(0); //@line 276 "../../iup_tabs.c"
 if (!($10)) {
  $2 = 0; //@line 277 "../../iup_tabs.c"
  $19 = $2; //@line 284 "../../iup_tabs.c"
  STACKTOP = sp;return ($19|0); //@line 284 "../../iup_tabs.c"
 }
 $11 = $3; //@line 279 "../../iup_tabs.c"
 $12 = $6; //@line 279 "../../iup_tabs.c"
 $13 = (_IupGetChildPos($11,$12)|0); //@line 279 "../../iup_tabs.c"
 $5 = $13; //@line 279 "../../iup_tabs.c"
 $14 = $5; //@line 280 "../../iup_tabs.c"
 $15 = ($14|0)!=(-1); //@line 280 "../../iup_tabs.c"
 if ($15) {
  $16 = $3; //@line 281 "../../iup_tabs.c"
  $17 = $6; //@line 281 "../../iup_tabs.c"
  $18 = $5; //@line 281 "../../iup_tabs.c"
  _iTabsSetTab($16,$17,$18); //@line 281 "../../iup_tabs.c"
 }
 $2 = 0; //@line 283 "../../iup_tabs.c"
 $19 = $2; //@line 284 "../../iup_tabs.c"
 STACKTOP = sp;return ($19|0); //@line 284 "../../iup_tabs.c"
}
function _iTabsGetCountAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 322 "../../iup_tabs.c"
 $3 = (_IupGetChildCount($2)|0); //@line 322 "../../iup_tabs.c"
 $4 = (_iupStrReturnInt($3)|0); //@line 322 "../../iup_tabs.c"
 STACKTOP = sp;return ($4|0); //@line 322 "../../iup_tabs.c"
}
function _iTabsGetShowCloseAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 420 "../../iup_tabs.c"
 $3 = ((($2)) + 72|0); //@line 420 "../../iup_tabs.c"
 $4 = HEAP32[$3>>2]|0; //@line 420 "../../iup_tabs.c"
 $5 = ((($4)) + 16|0); //@line 420 "../../iup_tabs.c"
 $6 = HEAP32[$5>>2]|0; //@line 420 "../../iup_tabs.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 420 "../../iup_tabs.c"
 STACKTOP = sp;return ($7|0); //@line 420 "../../iup_tabs.c"
}
function _iTabsSetShowCloseAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 425 "../../iup_tabs.c"
 $5 = (_iupStrBoolean($4)|0); //@line 425 "../../iup_tabs.c"
 $6 = ($5|0)!=(0); //@line 425 "../../iup_tabs.c"
 $7 = $2; //@line 426 "../../iup_tabs.c"
 $8 = ((($7)) + 72|0); //@line 426 "../../iup_tabs.c"
 $9 = HEAP32[$8>>2]|0; //@line 426 "../../iup_tabs.c"
 $10 = ((($9)) + 16|0); //@line 426 "../../iup_tabs.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 426 "../../iup_tabs.c"
  STACKTOP = sp;return 0; //@line 430 "../../iup_tabs.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 428 "../../iup_tabs.c"
  STACKTOP = sp;return 0; //@line 430 "../../iup_tabs.c"
 }
 return (0)|0;
}
function _iTabsGetClientSizeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 4|0;
 $5 = sp;
 $1 = $0;
 $6 = $1; //@line 383 "../../iup_tabs.c"
 $7 = ((($6)) + 52|0); //@line 383 "../../iup_tabs.c"
 $8 = HEAP32[$7>>2]|0; //@line 383 "../../iup_tabs.c"
 $2 = $8; //@line 383 "../../iup_tabs.c"
 $9 = $1; //@line 384 "../../iup_tabs.c"
 $10 = ((($9)) + 56|0); //@line 384 "../../iup_tabs.c"
 $11 = HEAP32[$10>>2]|0; //@line 384 "../../iup_tabs.c"
 $3 = $11; //@line 384 "../../iup_tabs.c"
 $12 = $1; //@line 385 "../../iup_tabs.c"
 _iTabsGetDecorSize($12,$4,$5); //@line 385 "../../iup_tabs.c"
 $13 = HEAP32[$4>>2]|0; //@line 386 "../../iup_tabs.c"
 $14 = $2; //@line 386 "../../iup_tabs.c"
 $15 = (($14) - ($13))|0; //@line 386 "../../iup_tabs.c"
 $2 = $15; //@line 386 "../../iup_tabs.c"
 $16 = HEAP32[$5>>2]|0; //@line 387 "../../iup_tabs.c"
 $17 = $3; //@line 387 "../../iup_tabs.c"
 $18 = (($17) - ($16))|0; //@line 387 "../../iup_tabs.c"
 $3 = $18; //@line 387 "../../iup_tabs.c"
 $19 = $2; //@line 388 "../../iup_tabs.c"
 $20 = ($19|0)<(0); //@line 388 "../../iup_tabs.c"
 if ($20) {
  $2 = 0; //@line 388 "../../iup_tabs.c"
 }
 $21 = $3; //@line 389 "../../iup_tabs.c"
 $22 = ($21|0)<(0); //@line 389 "../../iup_tabs.c"
 if (!($22)) {
  $23 = $2; //@line 390 "../../iup_tabs.c"
  $24 = $3; //@line 390 "../../iup_tabs.c"
  $25 = (_iupStrReturnIntInt($23,$24,120)|0); //@line 390 "../../iup_tabs.c"
  STACKTOP = sp;return ($25|0); //@line 390 "../../iup_tabs.c"
 }
 $3 = 0; //@line 389 "../../iup_tabs.c"
 $23 = $2; //@line 390 "../../iup_tabs.c"
 $24 = $3; //@line 390 "../../iup_tabs.c"
 $25 = (_iupStrReturnIntInt($23,$24,120)|0); //@line 390 "../../iup_tabs.c"
 STACKTOP = sp;return ($25|0); //@line 390 "../../iup_tabs.c"
}
function _iTabsGetClientOffsetAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp + 4|0;
 $3 = sp;
 $1 = $0;
 $4 = $1; //@line 396 "../../iup_tabs.c"
 _iTabsGetDecorOffset($4,$2,$3); //@line 396 "../../iup_tabs.c"
 $5 = HEAP32[$2>>2]|0; //@line 397 "../../iup_tabs.c"
 $6 = HEAP32[$3>>2]|0; //@line 397 "../../iup_tabs.c"
 $7 = (_iupStrReturnIntInt($5,$6,120)|0); //@line 397 "../../iup_tabs.c"
 STACKTOP = sp;return ($7|0); //@line 397 "../../iup_tabs.c"
}
function _iTabsGetDecorOffset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $12 = $3; //@line 162 "../../iup_tabs.c"
 $13 = ((($12)) + 72|0); //@line 162 "../../iup_tabs.c"
 $14 = HEAP32[$13>>2]|0; //@line 162 "../../iup_tabs.c"
 $15 = HEAP32[$14>>2]|0; //@line 162 "../../iup_tabs.c"
 $16 = ($15|0)==(2); //@line 162 "../../iup_tabs.c"
 if (!($16)) {
  $17 = $3; //@line 162 "../../iup_tabs.c"
  $18 = ((($17)) + 72|0); //@line 162 "../../iup_tabs.c"
  $19 = HEAP32[$18>>2]|0; //@line 162 "../../iup_tabs.c"
  $20 = HEAP32[$19>>2]|0; //@line 162 "../../iup_tabs.c"
  $21 = ($20|0)==(3); //@line 162 "../../iup_tabs.c"
  if (!($21)) {
   $72 = $3; //@line 190 "../../iup_tabs.c"
   $73 = ((($72)) + 72|0); //@line 190 "../../iup_tabs.c"
   $74 = HEAP32[$73>>2]|0; //@line 190 "../../iup_tabs.c"
   $75 = HEAP32[$74>>2]|0; //@line 190 "../../iup_tabs.c"
   $76 = ($75|0)==(0); //@line 190 "../../iup_tabs.c"
   do {
    if ($76) {
     $77 = $3; //@line 192 "../../iup_tabs.c"
     $78 = ((($77)) + 72|0); //@line 192 "../../iup_tabs.c"
     $79 = HEAP32[$78>>2]|0; //@line 192 "../../iup_tabs.c"
     $80 = ((($79)) + 4|0); //@line 192 "../../iup_tabs.c"
     $81 = HEAP32[$80>>2]|0; //@line 192 "../../iup_tabs.c"
     $82 = ($81|0)==(0); //@line 192 "../../iup_tabs.c"
     $83 = $3; //@line 194 "../../iup_tabs.c"
     if (!($82)) {
      $113 = (_iTabsGetMaxWidth($83)|0); //@line 205 "../../iup_tabs.c"
      $11 = $113; //@line 205 "../../iup_tabs.c"
      $114 = $11; //@line 206 "../../iup_tabs.c"
      $115 = (3 + ($114))|0; //@line 206 "../../iup_tabs.c"
      $116 = (($115) + 3)|0; //@line 206 "../../iup_tabs.c"
      $117 = (4 + ($116))|0; //@line 206 "../../iup_tabs.c"
      $118 = (($117) + 2)|0; //@line 206 "../../iup_tabs.c"
      $119 = $5; //@line 206 "../../iup_tabs.c"
      HEAP32[$119>>2] = $118; //@line 206 "../../iup_tabs.c"
      break;
     }
     $84 = (_iTabsGetMaxHeight($83)|0); //@line 194 "../../iup_tabs.c"
     $9 = $84; //@line 194 "../../iup_tabs.c"
     $85 = $9; //@line 195 "../../iup_tabs.c"
     $86 = (3 + ($85))|0; //@line 195 "../../iup_tabs.c"
     $87 = (($86) + 3)|0; //@line 195 "../../iup_tabs.c"
     $88 = (4 + ($87))|0; //@line 195 "../../iup_tabs.c"
     $89 = (($88) + 2)|0; //@line 195 "../../iup_tabs.c"
     $90 = $5; //@line 195 "../../iup_tabs.c"
     HEAP32[$90>>2] = $89; //@line 195 "../../iup_tabs.c"
     $91 = $3; //@line 197 "../../iup_tabs.c"
     $92 = ((($91)) + 16|0); //@line 197 "../../iup_tabs.c"
     $93 = HEAP32[$92>>2]|0; //@line 197 "../../iup_tabs.c"
     $94 = ($93|0)!=(0|0); //@line 197 "../../iup_tabs.c"
     if ($94) {
      $95 = $3; //@line 197 "../../iup_tabs.c"
      $96 = ((($95)) + 72|0); //@line 197 "../../iup_tabs.c"
      $97 = HEAP32[$96>>2]|0; //@line 197 "../../iup_tabs.c"
      $98 = ((($97)) + 20|0); //@line 197 "../../iup_tabs.c"
      $99 = HEAP32[$98>>2]|0; //@line 197 "../../iup_tabs.c"
      $100 = ($99|0)!=(0); //@line 197 "../../iup_tabs.c"
      if ($100) {
       $101 = $3; //@line 199 "../../iup_tabs.c"
       $102 = (_iupdrvTabsGetLineCountAttrib($101)|0); //@line 199 "../../iup_tabs.c"
       $10 = $102; //@line 199 "../../iup_tabs.c"
       $103 = $10; //@line 200 "../../iup_tabs.c"
       $104 = (($103) - 1)|0; //@line 200 "../../iup_tabs.c"
       $105 = $9; //@line 200 "../../iup_tabs.c"
       $106 = (3 + ($105))|0; //@line 200 "../../iup_tabs.c"
       $107 = (($106) + 3)|0; //@line 200 "../../iup_tabs.c"
       $108 = (($107) + 1)|0; //@line 200 "../../iup_tabs.c"
       $109 = Math_imul($104, $108)|0; //@line 200 "../../iup_tabs.c"
       $110 = $5; //@line 200 "../../iup_tabs.c"
       $111 = HEAP32[$110>>2]|0; //@line 200 "../../iup_tabs.c"
       $112 = (($111) + ($109))|0; //@line 200 "../../iup_tabs.c"
       HEAP32[$110>>2] = $112; //@line 200 "../../iup_tabs.c"
      }
     }
    } else {
     $120 = $5; //@line 210 "../../iup_tabs.c"
     HEAP32[$120>>2] = 4; //@line 210 "../../iup_tabs.c"
    }
   } while(0);
   $121 = $4; //@line 212 "../../iup_tabs.c"
   HEAP32[$121>>2] = 4; //@line 212 "../../iup_tabs.c"
   $122 = $3; //@line 215 "../../iup_tabs.c"
   $123 = ((($122)) + 72|0); //@line 215 "../../iup_tabs.c"
   $124 = HEAP32[$123>>2]|0; //@line 215 "../../iup_tabs.c"
   $125 = ((($124)) + 8|0); //@line 215 "../../iup_tabs.c"
   $126 = HEAP32[$125>>2]|0; //@line 215 "../../iup_tabs.c"
   $127 = $4; //@line 215 "../../iup_tabs.c"
   $128 = HEAP32[$127>>2]|0; //@line 215 "../../iup_tabs.c"
   $129 = (($128) + ($126))|0; //@line 215 "../../iup_tabs.c"
   HEAP32[$127>>2] = $129; //@line 215 "../../iup_tabs.c"
   $130 = $3; //@line 216 "../../iup_tabs.c"
   $131 = ((($130)) + 72|0); //@line 216 "../../iup_tabs.c"
   $132 = HEAP32[$131>>2]|0; //@line 216 "../../iup_tabs.c"
   $133 = ((($132)) + 12|0); //@line 216 "../../iup_tabs.c"
   $134 = HEAP32[$133>>2]|0; //@line 216 "../../iup_tabs.c"
   $135 = $5; //@line 216 "../../iup_tabs.c"
   $136 = HEAP32[$135>>2]|0; //@line 216 "../../iup_tabs.c"
   $137 = (($136) + ($134))|0; //@line 216 "../../iup_tabs.c"
   HEAP32[$135>>2] = $137; //@line 216 "../../iup_tabs.c"
   STACKTOP = sp;return; //@line 217 "../../iup_tabs.c"
  }
 }
 $22 = $3; //@line 164 "../../iup_tabs.c"
 $23 = ((($22)) + 72|0); //@line 164 "../../iup_tabs.c"
 $24 = HEAP32[$23>>2]|0; //@line 164 "../../iup_tabs.c"
 $25 = HEAP32[$24>>2]|0; //@line 164 "../../iup_tabs.c"
 $26 = ($25|0)==(2); //@line 164 "../../iup_tabs.c"
 do {
  if ($26) {
   $27 = $3; //@line 166 "../../iup_tabs.c"
   $28 = ((($27)) + 72|0); //@line 166 "../../iup_tabs.c"
   $29 = HEAP32[$28>>2]|0; //@line 166 "../../iup_tabs.c"
   $30 = ((($29)) + 4|0); //@line 166 "../../iup_tabs.c"
   $31 = HEAP32[$30>>2]|0; //@line 166 "../../iup_tabs.c"
   $32 = ($31|0)==(0); //@line 166 "../../iup_tabs.c"
   $33 = $3; //@line 168 "../../iup_tabs.c"
   if ($32) {
    $34 = (_iTabsGetMaxWidth($33)|0); //@line 168 "../../iup_tabs.c"
    $6 = $34; //@line 168 "../../iup_tabs.c"
    $35 = $6; //@line 169 "../../iup_tabs.c"
    $36 = (3 + ($35))|0; //@line 169 "../../iup_tabs.c"
    $37 = (($36) + 3)|0; //@line 169 "../../iup_tabs.c"
    $38 = (4 + ($37))|0; //@line 169 "../../iup_tabs.c"
    $39 = (($38) + 2)|0; //@line 169 "../../iup_tabs.c"
    $40 = $4; //@line 169 "../../iup_tabs.c"
    HEAP32[$40>>2] = $39; //@line 169 "../../iup_tabs.c"
    break;
   }
   $41 = (_iTabsGetMaxHeight($33)|0); //@line 173 "../../iup_tabs.c"
   $7 = $41; //@line 173 "../../iup_tabs.c"
   $42 = $7; //@line 174 "../../iup_tabs.c"
   $43 = (3 + ($42))|0; //@line 174 "../../iup_tabs.c"
   $44 = (($43) + 3)|0; //@line 174 "../../iup_tabs.c"
   $45 = (4 + ($44))|0; //@line 174 "../../iup_tabs.c"
   $46 = (($45) + 2)|0; //@line 174 "../../iup_tabs.c"
   $47 = $4; //@line 174 "../../iup_tabs.c"
   HEAP32[$47>>2] = $46; //@line 174 "../../iup_tabs.c"
   $48 = $3; //@line 176 "../../iup_tabs.c"
   $49 = ((($48)) + 16|0); //@line 176 "../../iup_tabs.c"
   $50 = HEAP32[$49>>2]|0; //@line 176 "../../iup_tabs.c"
   $51 = ($50|0)!=(0|0); //@line 176 "../../iup_tabs.c"
   if ($51) {
    $52 = $3; //@line 176 "../../iup_tabs.c"
    $53 = ((($52)) + 72|0); //@line 176 "../../iup_tabs.c"
    $54 = HEAP32[$53>>2]|0; //@line 176 "../../iup_tabs.c"
    $55 = ((($54)) + 20|0); //@line 176 "../../iup_tabs.c"
    $56 = HEAP32[$55>>2]|0; //@line 176 "../../iup_tabs.c"
    $57 = ($56|0)!=(0); //@line 176 "../../iup_tabs.c"
    if ($57) {
     $58 = $3; //@line 178 "../../iup_tabs.c"
     $59 = (_iupdrvTabsGetLineCountAttrib($58)|0); //@line 178 "../../iup_tabs.c"
     $8 = $59; //@line 178 "../../iup_tabs.c"
     $60 = $8; //@line 179 "../../iup_tabs.c"
     $61 = (($60) - 1)|0; //@line 179 "../../iup_tabs.c"
     $62 = $7; //@line 179 "../../iup_tabs.c"
     $63 = (3 + ($62))|0; //@line 179 "../../iup_tabs.c"
     $64 = (($63) + 3)|0; //@line 179 "../../iup_tabs.c"
     $65 = (($64) + 1)|0; //@line 179 "../../iup_tabs.c"
     $66 = Math_imul($61, $65)|0; //@line 179 "../../iup_tabs.c"
     $67 = $4; //@line 179 "../../iup_tabs.c"
     $68 = HEAP32[$67>>2]|0; //@line 179 "../../iup_tabs.c"
     $69 = (($68) + ($66))|0; //@line 179 "../../iup_tabs.c"
     HEAP32[$67>>2] = $69; //@line 179 "../../iup_tabs.c"
    }
   }
  } else {
   $70 = $4; //@line 184 "../../iup_tabs.c"
   HEAP32[$70>>2] = 4; //@line 184 "../../iup_tabs.c"
  }
 } while(0);
 $71 = $5; //@line 186 "../../iup_tabs.c"
 HEAP32[$71>>2] = 4; //@line 186 "../../iup_tabs.c"
 $122 = $3; //@line 215 "../../iup_tabs.c"
 $123 = ((($122)) + 72|0); //@line 215 "../../iup_tabs.c"
 $124 = HEAP32[$123>>2]|0; //@line 215 "../../iup_tabs.c"
 $125 = ((($124)) + 8|0); //@line 215 "../../iup_tabs.c"
 $126 = HEAP32[$125>>2]|0; //@line 215 "../../iup_tabs.c"
 $127 = $4; //@line 215 "../../iup_tabs.c"
 $128 = HEAP32[$127>>2]|0; //@line 215 "../../iup_tabs.c"
 $129 = (($128) + ($126))|0; //@line 215 "../../iup_tabs.c"
 HEAP32[$127>>2] = $129; //@line 215 "../../iup_tabs.c"
 $130 = $3; //@line 216 "../../iup_tabs.c"
 $131 = ((($130)) + 72|0); //@line 216 "../../iup_tabs.c"
 $132 = HEAP32[$131>>2]|0; //@line 216 "../../iup_tabs.c"
 $133 = ((($132)) + 12|0); //@line 216 "../../iup_tabs.c"
 $134 = HEAP32[$133>>2]|0; //@line 216 "../../iup_tabs.c"
 $135 = $5; //@line 216 "../../iup_tabs.c"
 $136 = HEAP32[$135>>2]|0; //@line 216 "../../iup_tabs.c"
 $137 = (($136) + ($134))|0; //@line 216 "../../iup_tabs.c"
 HEAP32[$135>>2] = $137; //@line 216 "../../iup_tabs.c"
 STACKTOP = sp;return; //@line 217 "../../iup_tabs.c"
}
function _iTabsGetMaxWidth($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $9 = sp;
 $1 = $0;
 $2 = 0; //@line 35 "../../iup_tabs.c"
 $4 = 0; //@line 39 "../../iup_tabs.c"
 $10 = $1; //@line 39 "../../iup_tabs.c"
 $11 = ((($10)) + 64|0); //@line 39 "../../iup_tabs.c"
 $12 = HEAP32[$11>>2]|0; //@line 39 "../../iup_tabs.c"
 $7 = $12; //@line 39 "../../iup_tabs.c"
 while(1) {
  $13 = $7; //@line 39 "../../iup_tabs.c"
  $14 = ($13|0)!=(0|0); //@line 39 "../../iup_tabs.c"
  if (!($14)) {
   break;
  }
  $15 = $1; //@line 41 "../../iup_tabs.c"
  $16 = $4; //@line 41 "../../iup_tabs.c"
  $17 = (_iupAttribGetId($15,17347,$16)|0); //@line 41 "../../iup_tabs.c"
  $5 = $17; //@line 41 "../../iup_tabs.c"
  $18 = $5; //@line 42 "../../iup_tabs.c"
  $19 = ($18|0)!=(0|0); //@line 42 "../../iup_tabs.c"
  if (!($19)) {
   $20 = $7; //@line 42 "../../iup_tabs.c"
   $21 = (_iupAttribGet($20,17347)|0); //@line 42 "../../iup_tabs.c"
   $5 = $21; //@line 42 "../../iup_tabs.c"
  }
  $22 = $1; //@line 43 "../../iup_tabs.c"
  $23 = $4; //@line 43 "../../iup_tabs.c"
  $24 = (_iupAttribGetId($22,17415,$23)|0); //@line 43 "../../iup_tabs.c"
  $6 = $24; //@line 43 "../../iup_tabs.c"
  $25 = $6; //@line 44 "../../iup_tabs.c"
  $26 = ($25|0)!=(0|0); //@line 44 "../../iup_tabs.c"
  if (!($26)) {
   $27 = $7; //@line 44 "../../iup_tabs.c"
   $28 = (_iupAttribGet($27,17415)|0); //@line 44 "../../iup_tabs.c"
   $6 = $28; //@line 44 "../../iup_tabs.c"
  }
  $29 = $5; //@line 45 "../../iup_tabs.c"
  $30 = ($29|0)!=(0|0); //@line 45 "../../iup_tabs.c"
  $31 = $6; //@line 45 "../../iup_tabs.c"
  $32 = ($31|0)!=(0|0); //@line 45 "../../iup_tabs.c"
  $or$cond = $30 | $32; //@line 45 "../../iup_tabs.c"
  if (!($or$cond)) {
   $5 = 17424; //@line 46 "../../iup_tabs.c"
  }
  $3 = 0; //@line 48 "../../iup_tabs.c"
  $33 = $5; //@line 49 "../../iup_tabs.c"
  $34 = ($33|0)!=(0|0); //@line 49 "../../iup_tabs.c"
  if ($34) {
   $35 = $1; //@line 50 "../../iup_tabs.c"
   $36 = $5; //@line 50 "../../iup_tabs.c"
   $37 = (_iupdrvFontGetStringWidth($35,$36)|0); //@line 50 "../../iup_tabs.c"
   $38 = $3; //@line 50 "../../iup_tabs.c"
   $39 = (($38) + ($37))|0; //@line 50 "../../iup_tabs.c"
   $3 = $39; //@line 50 "../../iup_tabs.c"
  }
  $40 = $6; //@line 52 "../../iup_tabs.c"
  $41 = ($40|0)!=(0|0); //@line 52 "../../iup_tabs.c"
  if ($41) {
   $42 = $6; //@line 54 "../../iup_tabs.c"
   $43 = $1; //@line 54 "../../iup_tabs.c"
   $44 = (_iupImageGetImage($42,$43,0)|0); //@line 54 "../../iup_tabs.c"
   $8 = $44; //@line 54 "../../iup_tabs.c"
   $45 = $8; //@line 55 "../../iup_tabs.c"
   $46 = ($45|0)!=(0|0); //@line 55 "../../iup_tabs.c"
   if ($46) {
    $47 = $8; //@line 58 "../../iup_tabs.c"
    (_iupdrvImageGetInfo($47,$9,0,0)|0); //@line 58 "../../iup_tabs.c"
    $48 = HEAP32[$9>>2]|0; //@line 59 "../../iup_tabs.c"
    $49 = $3; //@line 59 "../../iup_tabs.c"
    $50 = (($49) + ($48))|0; //@line 59 "../../iup_tabs.c"
    $3 = $50; //@line 59 "../../iup_tabs.c"
   }
  }
  $51 = $3; //@line 63 "../../iup_tabs.c"
  $52 = $2; //@line 63 "../../iup_tabs.c"
  $53 = ($51|0)>($52|0); //@line 63 "../../iup_tabs.c"
  if ($53) {
   $54 = $3; //@line 63 "../../iup_tabs.c"
   $2 = $54; //@line 63 "../../iup_tabs.c"
  }
  $55 = $7; //@line 39 "../../iup_tabs.c"
  $56 = ((($55)) + 68|0); //@line 39 "../../iup_tabs.c"
  $57 = HEAP32[$56>>2]|0; //@line 39 "../../iup_tabs.c"
  $7 = $57; //@line 39 "../../iup_tabs.c"
  $58 = $4; //@line 39 "../../iup_tabs.c"
  $59 = (($58) + 1)|0; //@line 39 "../../iup_tabs.c"
  $4 = $59; //@line 39 "../../iup_tabs.c"
 }
 $60 = $2; //@line 66 "../../iup_tabs.c"
 STACKTOP = sp;return ($60|0); //@line 66 "../../iup_tabs.c"
}
function _iTabsGetMaxHeight($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = sp + 16|0;
 $1 = $0;
 $2 = 0; //@line 71 "../../iup_tabs.c"
 $4 = 0; //@line 75 "../../iup_tabs.c"
 $8 = $1; //@line 75 "../../iup_tabs.c"
 $9 = ((($8)) + 64|0); //@line 75 "../../iup_tabs.c"
 $10 = HEAP32[$9>>2]|0; //@line 75 "../../iup_tabs.c"
 $6 = $10; //@line 75 "../../iup_tabs.c"
 while(1) {
  $11 = $6; //@line 75 "../../iup_tabs.c"
  $12 = ($11|0)!=(0|0); //@line 75 "../../iup_tabs.c"
  $13 = $1; //@line 77 "../../iup_tabs.c"
  if (!($12)) {
   break;
  }
  $14 = $4; //@line 77 "../../iup_tabs.c"
  $15 = (_iupAttribGetId($13,17415,$14)|0); //@line 77 "../../iup_tabs.c"
  $5 = $15; //@line 77 "../../iup_tabs.c"
  $16 = $5; //@line 78 "../../iup_tabs.c"
  $17 = ($16|0)!=(0|0); //@line 78 "../../iup_tabs.c"
  if (!($17)) {
   $18 = $6; //@line 78 "../../iup_tabs.c"
   $19 = (_iupAttribGet($18,17415)|0); //@line 78 "../../iup_tabs.c"
   $5 = $19; //@line 78 "../../iup_tabs.c"
  }
  $20 = $5; //@line 80 "../../iup_tabs.c"
  $21 = ($20|0)!=(0|0); //@line 80 "../../iup_tabs.c"
  if ($21) {
   $22 = $5; //@line 82 "../../iup_tabs.c"
   $23 = $1; //@line 82 "../../iup_tabs.c"
   $24 = (_iupImageGetImage($22,$23,0)|0); //@line 82 "../../iup_tabs.c"
   $7 = $24; //@line 82 "../../iup_tabs.c"
   $25 = $7; //@line 83 "../../iup_tabs.c"
   $26 = ($25|0)!=(0|0); //@line 83 "../../iup_tabs.c"
   if ($26) {
    $27 = $7; //@line 85 "../../iup_tabs.c"
    (_iupdrvImageGetInfo($27,0,$3,0)|0); //@line 85 "../../iup_tabs.c"
    $28 = HEAP32[$3>>2]|0; //@line 86 "../../iup_tabs.c"
    $29 = $2; //@line 86 "../../iup_tabs.c"
    $30 = ($28|0)>($29|0); //@line 86 "../../iup_tabs.c"
    if ($30) {
     $31 = HEAP32[$3>>2]|0; //@line 86 "../../iup_tabs.c"
     $2 = $31; //@line 86 "../../iup_tabs.c"
    }
   }
  }
  $32 = $6; //@line 75 "../../iup_tabs.c"
  $33 = ((($32)) + 68|0); //@line 75 "../../iup_tabs.c"
  $34 = HEAP32[$33>>2]|0; //@line 75 "../../iup_tabs.c"
  $6 = $34; //@line 75 "../../iup_tabs.c"
  $35 = $4; //@line 75 "../../iup_tabs.c"
  $36 = (($35) + 1)|0; //@line 75 "../../iup_tabs.c"
  $4 = $36; //@line 75 "../../iup_tabs.c"
 }
 _iupdrvFontGetCharSize($13,0,$3); //@line 91 "../../iup_tabs.c"
 $37 = HEAP32[$3>>2]|0; //@line 92 "../../iup_tabs.c"
 $38 = $2; //@line 92 "../../iup_tabs.c"
 $39 = ($37|0)>($38|0); //@line 92 "../../iup_tabs.c"
 if (!($39)) {
  $41 = $2; //@line 94 "../../iup_tabs.c"
  STACKTOP = sp;return ($41|0); //@line 94 "../../iup_tabs.c"
 }
 $40 = HEAP32[$3>>2]|0; //@line 92 "../../iup_tabs.c"
 $2 = $40; //@line 92 "../../iup_tabs.c"
 $41 = $2; //@line 94 "../../iup_tabs.c"
 STACKTOP = sp;return ($41|0); //@line 94 "../../iup_tabs.c"
}
function _iTabsGetDecorSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = sp + 24|0;
 $12 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $14 = $3; //@line 99 "../../iup_tabs.c"
 $15 = ((($14)) + 72|0); //@line 99 "../../iup_tabs.c"
 $16 = HEAP32[$15>>2]|0; //@line 99 "../../iup_tabs.c"
 $17 = HEAP32[$16>>2]|0; //@line 99 "../../iup_tabs.c"
 $18 = ($17|0)==(2); //@line 99 "../../iup_tabs.c"
 do {
  if ($18) {
   label = 3;
  } else {
   $19 = $3; //@line 99 "../../iup_tabs.c"
   $20 = ((($19)) + 72|0); //@line 99 "../../iup_tabs.c"
   $21 = HEAP32[$20>>2]|0; //@line 99 "../../iup_tabs.c"
   $22 = HEAP32[$21>>2]|0; //@line 99 "../../iup_tabs.c"
   $23 = ($22|0)==(3); //@line 99 "../../iup_tabs.c"
   if ($23) {
    label = 3;
   } else {
    $80 = $3; //@line 129 "../../iup_tabs.c"
    $81 = ((($80)) + 72|0); //@line 129 "../../iup_tabs.c"
    $82 = HEAP32[$81>>2]|0; //@line 129 "../../iup_tabs.c"
    $83 = ((($82)) + 4|0); //@line 129 "../../iup_tabs.c"
    $84 = HEAP32[$83>>2]|0; //@line 129 "../../iup_tabs.c"
    $85 = ($84|0)==(0); //@line 129 "../../iup_tabs.c"
    $86 = $3; //@line 131 "../../iup_tabs.c"
    if (!($85)) {
     $127 = (_iTabsGetMaxWidth($86)|0); //@line 150 "../../iup_tabs.c"
     $13 = $127; //@line 150 "../../iup_tabs.c"
     $128 = $4; //@line 151 "../../iup_tabs.c"
     HEAP32[$128>>2] = 8; //@line 151 "../../iup_tabs.c"
     $129 = $13; //@line 152 "../../iup_tabs.c"
     $130 = (3 + ($129))|0; //@line 152 "../../iup_tabs.c"
     $131 = (($130) + 3)|0; //@line 152 "../../iup_tabs.c"
     $132 = (4 + ($131))|0; //@line 152 "../../iup_tabs.c"
     $133 = (($132) + 2)|0; //@line 152 "../../iup_tabs.c"
     $134 = (($133) + 4)|0; //@line 152 "../../iup_tabs.c"
     $135 = $5; //@line 152 "../../iup_tabs.c"
     HEAP32[$135>>2] = $134; //@line 152 "../../iup_tabs.c"
     break;
    }
    $87 = (_iTabsGetMaxHeight($86)|0); //@line 131 "../../iup_tabs.c"
    $10 = $87; //@line 131 "../../iup_tabs.c"
    $88 = $4; //@line 132 "../../iup_tabs.c"
    HEAP32[$88>>2] = 8; //@line 132 "../../iup_tabs.c"
    $89 = $10; //@line 133 "../../iup_tabs.c"
    $90 = (3 + ($89))|0; //@line 133 "../../iup_tabs.c"
    $91 = (($90) + 3)|0; //@line 133 "../../iup_tabs.c"
    $92 = (4 + ($91))|0; //@line 133 "../../iup_tabs.c"
    $93 = (($92) + 2)|0; //@line 133 "../../iup_tabs.c"
    $94 = (($93) + 4)|0; //@line 133 "../../iup_tabs.c"
    $95 = $5; //@line 133 "../../iup_tabs.c"
    HEAP32[$95>>2] = $94; //@line 133 "../../iup_tabs.c"
    $96 = $3; //@line 135 "../../iup_tabs.c"
    $97 = ((($96)) + 16|0); //@line 135 "../../iup_tabs.c"
    $98 = HEAP32[$97>>2]|0; //@line 135 "../../iup_tabs.c"
    $99 = ($98|0)!=(0|0); //@line 135 "../../iup_tabs.c"
    if ($99) {
     $100 = $3; //@line 135 "../../iup_tabs.c"
     $101 = ((($100)) + 72|0); //@line 135 "../../iup_tabs.c"
     $102 = HEAP32[$101>>2]|0; //@line 135 "../../iup_tabs.c"
     $103 = ((($102)) + 20|0); //@line 135 "../../iup_tabs.c"
     $104 = HEAP32[$103>>2]|0; //@line 135 "../../iup_tabs.c"
     $105 = ($104|0)!=(0); //@line 135 "../../iup_tabs.c"
     if ($105) {
      $106 = $3; //@line 137 "../../iup_tabs.c"
      $107 = (_iupdrvTabsGetLineCountAttrib($106)|0); //@line 137 "../../iup_tabs.c"
      $11 = $107; //@line 137 "../../iup_tabs.c"
      $108 = $11; //@line 138 "../../iup_tabs.c"
      $109 = (($108) - 1)|0; //@line 138 "../../iup_tabs.c"
      $110 = $10; //@line 138 "../../iup_tabs.c"
      $111 = (3 + ($110))|0; //@line 138 "../../iup_tabs.c"
      $112 = (($111) + 3)|0; //@line 138 "../../iup_tabs.c"
      $113 = (($112) + 1)|0; //@line 138 "../../iup_tabs.c"
      $114 = Math_imul($109, $113)|0; //@line 138 "../../iup_tabs.c"
      $115 = $5; //@line 138 "../../iup_tabs.c"
      $116 = HEAP32[$115>>2]|0; //@line 138 "../../iup_tabs.c"
      $117 = (($116) + ($114))|0; //@line 138 "../../iup_tabs.c"
      HEAP32[$115>>2] = $117; //@line 138 "../../iup_tabs.c"
     }
    }
    $118 = $3; //@line 141 "../../iup_tabs.c"
    $119 = (_iupdrvTabsExtraDecor($118)|0); //@line 141 "../../iup_tabs.c"
    $120 = ($119|0)!=(0); //@line 141 "../../iup_tabs.c"
    if ($120) {
     $121 = $3; //@line 144 "../../iup_tabs.c"
     _iupdrvFontGetCharSize($121,0,$12); //@line 144 "../../iup_tabs.c"
     $122 = HEAP32[$12>>2]|0; //@line 145 "../../iup_tabs.c"
     $123 = (($122) + 4)|0; //@line 145 "../../iup_tabs.c"
     $124 = $4; //@line 145 "../../iup_tabs.c"
     $125 = HEAP32[$124>>2]|0; //@line 145 "../../iup_tabs.c"
     $126 = (($125) + ($123))|0; //@line 145 "../../iup_tabs.c"
     HEAP32[$124>>2] = $126; //@line 145 "../../iup_tabs.c"
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 3) {
   $24 = $3; //@line 101 "../../iup_tabs.c"
   $25 = ((($24)) + 72|0); //@line 101 "../../iup_tabs.c"
   $26 = HEAP32[$25>>2]|0; //@line 101 "../../iup_tabs.c"
   $27 = ((($26)) + 4|0); //@line 101 "../../iup_tabs.c"
   $28 = HEAP32[$27>>2]|0; //@line 101 "../../iup_tabs.c"
   $29 = ($28|0)==(0); //@line 101 "../../iup_tabs.c"
   $30 = $3; //@line 103 "../../iup_tabs.c"
   if ($29) {
    $31 = (_iTabsGetMaxWidth($30)|0); //@line 103 "../../iup_tabs.c"
    $6 = $31; //@line 103 "../../iup_tabs.c"
    $32 = $6; //@line 104 "../../iup_tabs.c"
    $33 = (3 + ($32))|0; //@line 104 "../../iup_tabs.c"
    $34 = (($33) + 3)|0; //@line 104 "../../iup_tabs.c"
    $35 = (4 + ($34))|0; //@line 104 "../../iup_tabs.c"
    $36 = (($35) + 2)|0; //@line 104 "../../iup_tabs.c"
    $37 = (($36) + 4)|0; //@line 104 "../../iup_tabs.c"
    $38 = $4; //@line 104 "../../iup_tabs.c"
    HEAP32[$38>>2] = $37; //@line 104 "../../iup_tabs.c"
    $39 = $5; //@line 105 "../../iup_tabs.c"
    HEAP32[$39>>2] = 8; //@line 105 "../../iup_tabs.c"
    $40 = $3; //@line 107 "../../iup_tabs.c"
    $41 = (_iupdrvTabsExtraDecor($40)|0); //@line 107 "../../iup_tabs.c"
    $42 = ($41|0)!=(0); //@line 107 "../../iup_tabs.c"
    if (!($42)) {
     break;
    }
    $43 = $3; //@line 110 "../../iup_tabs.c"
    _iupdrvFontGetCharSize($43,0,$7); //@line 110 "../../iup_tabs.c"
    $44 = HEAP32[$7>>2]|0; //@line 111 "../../iup_tabs.c"
    $45 = (($44) + 4)|0; //@line 111 "../../iup_tabs.c"
    $46 = $5; //@line 111 "../../iup_tabs.c"
    $47 = HEAP32[$46>>2]|0; //@line 111 "../../iup_tabs.c"
    $48 = (($47) + ($45))|0; //@line 111 "../../iup_tabs.c"
    HEAP32[$46>>2] = $48; //@line 111 "../../iup_tabs.c"
    break;
   }
   $49 = (_iTabsGetMaxHeight($30)|0); //@line 116 "../../iup_tabs.c"
   $8 = $49; //@line 116 "../../iup_tabs.c"
   $50 = $8; //@line 117 "../../iup_tabs.c"
   $51 = (3 + ($50))|0; //@line 117 "../../iup_tabs.c"
   $52 = (($51) + 3)|0; //@line 117 "../../iup_tabs.c"
   $53 = (4 + ($52))|0; //@line 117 "../../iup_tabs.c"
   $54 = (($53) + 2)|0; //@line 117 "../../iup_tabs.c"
   $55 = (($54) + 4)|0; //@line 117 "../../iup_tabs.c"
   $56 = $4; //@line 117 "../../iup_tabs.c"
   HEAP32[$56>>2] = $55; //@line 117 "../../iup_tabs.c"
   $57 = $5; //@line 118 "../../iup_tabs.c"
   HEAP32[$57>>2] = 8; //@line 118 "../../iup_tabs.c"
   $58 = $3; //@line 120 "../../iup_tabs.c"
   $59 = ((($58)) + 16|0); //@line 120 "../../iup_tabs.c"
   $60 = HEAP32[$59>>2]|0; //@line 120 "../../iup_tabs.c"
   $61 = ($60|0)!=(0|0); //@line 120 "../../iup_tabs.c"
   if ($61) {
    $62 = $3; //@line 120 "../../iup_tabs.c"
    $63 = ((($62)) + 72|0); //@line 120 "../../iup_tabs.c"
    $64 = HEAP32[$63>>2]|0; //@line 120 "../../iup_tabs.c"
    $65 = ((($64)) + 20|0); //@line 120 "../../iup_tabs.c"
    $66 = HEAP32[$65>>2]|0; //@line 120 "../../iup_tabs.c"
    $67 = ($66|0)!=(0); //@line 120 "../../iup_tabs.c"
    if ($67) {
     $68 = $3; //@line 122 "../../iup_tabs.c"
     $69 = (_iupdrvTabsGetLineCountAttrib($68)|0); //@line 122 "../../iup_tabs.c"
     $9 = $69; //@line 122 "../../iup_tabs.c"
     $70 = $9; //@line 123 "../../iup_tabs.c"
     $71 = (($70) - 1)|0; //@line 123 "../../iup_tabs.c"
     $72 = $8; //@line 123 "../../iup_tabs.c"
     $73 = (3 + ($72))|0; //@line 123 "../../iup_tabs.c"
     $74 = (($73) + 3)|0; //@line 123 "../../iup_tabs.c"
     $75 = (($74) + 1)|0; //@line 123 "../../iup_tabs.c"
     $76 = Math_imul($71, $75)|0; //@line 123 "../../iup_tabs.c"
     $77 = $4; //@line 123 "../../iup_tabs.c"
     $78 = HEAP32[$77>>2]|0; //@line 123 "../../iup_tabs.c"
     $79 = (($78) + ($76))|0; //@line 123 "../../iup_tabs.c"
     HEAP32[$77>>2] = $79; //@line 123 "../../iup_tabs.c"
    }
   }
  }
 } while(0);
 $136 = $3; //@line 156 "../../iup_tabs.c"
 $137 = ((($136)) + 72|0); //@line 156 "../../iup_tabs.c"
 $138 = HEAP32[$137>>2]|0; //@line 156 "../../iup_tabs.c"
 $139 = ((($138)) + 8|0); //@line 156 "../../iup_tabs.c"
 $140 = HEAP32[$139>>2]|0; //@line 156 "../../iup_tabs.c"
 $141 = $4; //@line 156 "../../iup_tabs.c"
 $142 = HEAP32[$141>>2]|0; //@line 156 "../../iup_tabs.c"
 $143 = (($142) + ($140))|0; //@line 156 "../../iup_tabs.c"
 HEAP32[$141>>2] = $143; //@line 156 "../../iup_tabs.c"
 $144 = $3; //@line 157 "../../iup_tabs.c"
 $145 = ((($144)) + 72|0); //@line 157 "../../iup_tabs.c"
 $146 = HEAP32[$145>>2]|0; //@line 157 "../../iup_tabs.c"
 $147 = ((($146)) + 12|0); //@line 157 "../../iup_tabs.c"
 $148 = HEAP32[$147>>2]|0; //@line 157 "../../iup_tabs.c"
 $149 = $5; //@line 157 "../../iup_tabs.c"
 $150 = HEAP32[$149>>2]|0; //@line 157 "../../iup_tabs.c"
 $151 = (($150) + ($148))|0; //@line 157 "../../iup_tabs.c"
 HEAP32[$149>>2] = $151; //@line 157 "../../iup_tabs.c"
 STACKTOP = sp;return; //@line 158 "../../iup_tabs.c"
}
function _iTabsSetTab($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 254 "../../iup_tabs.c"
 $8 = ((($7)) + 16|0); //@line 254 "../../iup_tabs.c"
 $9 = HEAP32[$8>>2]|0; //@line 254 "../../iup_tabs.c"
 $10 = ($9|0)!=(0|0); //@line 254 "../../iup_tabs.c"
 $11 = $3; //@line 256 "../../iup_tabs.c"
 if (!($10)) {
  $22 = $4; //@line 261 "../../iup_tabs.c"
  _iupAttribSet($11,17430,$22); //@line 261 "../../iup_tabs.c"
  STACKTOP = sp;return; //@line 262 "../../iup_tabs.c"
 }
 $12 = (_iupdrvTabsGetCurrentTab($11)|0); //@line 256 "../../iup_tabs.c"
 $6 = $12; //@line 256 "../../iup_tabs.c"
 $13 = $6; //@line 257 "../../iup_tabs.c"
 $14 = $5; //@line 257 "../../iup_tabs.c"
 $15 = ($13|0)!=($14|0); //@line 257 "../../iup_tabs.c"
 if (!($15)) {
  STACKTOP = sp;return; //@line 262 "../../iup_tabs.c"
 }
 $16 = $4; //@line 257 "../../iup_tabs.c"
 $17 = $5; //@line 257 "../../iup_tabs.c"
 $18 = (_iupdrvTabsIsTabVisible($16,$17)|0); //@line 257 "../../iup_tabs.c"
 $19 = ($18|0)!=(0); //@line 257 "../../iup_tabs.c"
 if (!($19)) {
  STACKTOP = sp;return; //@line 262 "../../iup_tabs.c"
 }
 $20 = $3; //@line 258 "../../iup_tabs.c"
 $21 = $5; //@line 258 "../../iup_tabs.c"
 _iupdrvTabsSetCurrentTab($20,$21); //@line 258 "../../iup_tabs.c"
 STACKTOP = sp;return; //@line 262 "../../iup_tabs.c"
}
function _iupTextNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 574 "../../iup_text.c"
 $0 = $1; //@line 574 "../../iup_text.c"
 $2 = $0; //@line 576 "../../iup_text.c"
 HEAP32[$2>>2] = 17470; //@line 576 "../../iup_text.c"
 $3 = $0; //@line 577 "../../iup_text.c"
 $4 = ((($3)) + 4|0); //@line 577 "../../iup_text.c"
 HEAP32[$4>>2] = 17485; //@line 577 "../../iup_text.c"
 $5 = $0; //@line 578 "../../iup_text.c"
 $6 = ((($5)) + 8|0); //@line 578 "../../iup_text.c"
 HEAP32[$6>>2] = 1; //@line 578 "../../iup_text.c"
 $7 = $0; //@line 579 "../../iup_text.c"
 $8 = ((($7)) + 12|0); //@line 579 "../../iup_text.c"
 HEAP32[$8>>2] = 0; //@line 579 "../../iup_text.c"
 $9 = $0; //@line 580 "../../iup_text.c"
 $10 = ((($9)) + 16|0); //@line 580 "../../iup_text.c"
 HEAP32[$10>>2] = 1; //@line 580 "../../iup_text.c"
 $11 = $0; //@line 583 "../../iup_text.c"
 $12 = ((($11)) + 32|0); //@line 583 "../../iup_text.c"
 HEAP32[$12>>2] = 464; //@line 583 "../../iup_text.c"
 $13 = $0; //@line 584 "../../iup_text.c"
 $14 = ((($13)) + 40|0); //@line 584 "../../iup_text.c"
 HEAP32[$14>>2] = 465; //@line 584 "../../iup_text.c"
 $15 = $0; //@line 585 "../../iup_text.c"
 $16 = ((($15)) + 52|0); //@line 585 "../../iup_text.c"
 HEAP32[$16>>2] = 466; //@line 585 "../../iup_text.c"
 $17 = $0; //@line 586 "../../iup_text.c"
 $18 = ((($17)) + 76|0); //@line 586 "../../iup_text.c"
 HEAP32[$18>>2] = 467; //@line 586 "../../iup_text.c"
 $19 = $0; //@line 587 "../../iup_text.c"
 $20 = ((($19)) + 72|0); //@line 587 "../../iup_text.c"
 HEAP32[$20>>2] = 47; //@line 587 "../../iup_text.c"
 $21 = $0; //@line 588 "../../iup_text.c"
 $22 = ((($21)) + 48|0); //@line 588 "../../iup_text.c"
 HEAP32[$22>>2] = 48; //@line 588 "../../iup_text.c"
 $23 = $0; //@line 591 "../../iup_text.c"
 _iupClassRegisterCallback($23,17487,17496); //@line 591 "../../iup_text.c"
 $24 = $0; //@line 592 "../../iup_text.c"
 _iupClassRegisterCallback($24,20479,18005); //@line 592 "../../iup_text.c"
 $25 = $0; //@line 593 "../../iup_text.c"
 _iupClassRegisterCallback($25,20522,18053); //@line 593 "../../iup_text.c"
 $26 = $0; //@line 594 "../../iup_text.c"
 _iupClassRegisterCallback($26,18039,18049); //@line 594 "../../iup_text.c"
 $27 = $0; //@line 595 "../../iup_text.c"
 _iupClassRegisterCallback($27,17500,17949); //@line 595 "../../iup_text.c"
 $28 = $0; //@line 596 "../../iup_text.c"
 _iupClassRegisterCallback($28,19918,362470); //@line 596 "../../iup_text.c"
 $29 = $0; //@line 599 "../../iup_text.c"
 _iupBaseRegisterCommonCallbacks($29); //@line 599 "../../iup_text.c"
 $30 = $0; //@line 602 "../../iup_text.c"
 _iupBaseRegisterCommonAttrib($30); //@line 602 "../../iup_text.c"
 $31 = $0; //@line 605 "../../iup_text.c"
 _iupBaseRegisterVisualAttrib($31); //@line 605 "../../iup_text.c"
 $32 = $0; //@line 608 "../../iup_text.c"
 _iupdrvRegisterDragDropAttrib($32); //@line 608 "../../iup_text.c"
 $33 = $0; //@line 611 "../../iup_text.c"
 _iupClassRegisterAttribute($33,17508,468,469,(-1),20441,9); //@line 611 "../../iup_text.c"
 $34 = $0; //@line 612 "../../iup_text.c"
 _iupClassRegisterAttribute($34,17518,0,0,(-1),20441,1); //@line 612 "../../iup_text.c"
 $35 = $0; //@line 613 "../../iup_text.c"
 _iupClassRegisterAttribute($35,17527,470,471,0,0,9); //@line 613 "../../iup_text.c"
 $36 = $0; //@line 614 "../../iup_text.c"
 _iupClassRegisterAttribute($36,17537,472,473,(-1),20441,9); //@line 614 "../../iup_text.c"
 $37 = $0; //@line 616 "../../iup_text.c"
 _iupClassRegisterAttribute($37,17551,0,474,0,0,65); //@line 616 "../../iup_text.c"
 $38 = $0; //@line 617 "../../iup_text.c"
 _iupClassRegisterAttribute($38,17563,0,0,0,0,9); //@line 617 "../../iup_text.c"
 $39 = $0; //@line 618 "../../iup_text.c"
 _iupClassRegisterAttribute($39,17573,0,0,0,0,9); //@line 618 "../../iup_text.c"
 $40 = $0; //@line 619 "../../iup_text.c"
 _iupClassRegisterAttribute($40,17591,475,476,0,0,9); //@line 619 "../../iup_text.c"
 $41 = $0; //@line 620 "../../iup_text.c"
 _iupClassRegisterAttribute($41,17596,0,477,0,0,9); //@line 620 "../../iup_text.c"
 $42 = $0; //@line 621 "../../iup_text.c"
 _iupClassRegisterAttribute($42,17604,0,478,0,0,9); //@line 621 "../../iup_text.c"
 $43 = $0; //@line 622 "../../iup_text.c"
 _iupClassRegisterAttribute($43,17614,0,479,0,0,9); //@line 622 "../../iup_text.c"
 $44 = $0; //@line 623 "../../iup_text.c"
 _iupClassRegisterAttribute($44,17623,480,0,0,0,41); //@line 623 "../../iup_text.c"
 $45 = $0; //@line 625 "../../iup_text.c"
 _iupClassRegisterAttribute($45,17637,0,0,(-1),20441,1); //@line 625 "../../iup_text.c"
 $46 = $0; //@line 626 "../../iup_text.c"
 _iupClassRegisterAttribute($46,17644,0,0,0,0,1); //@line 626 "../../iup_text.c"
 $47 = $0; //@line 627 "../../iup_text.c"
 _iupClassRegisterAttribute($47,17649,0,0,(-1),17659,1); //@line 627 "../../iup_text.c"
 $48 = $0; //@line 628 "../../iup_text.c"
 _iupClassRegisterAttribute($48,17665,0,0,(-1),20441,1); //@line 628 "../../iup_text.c"
 $49 = $0; //@line 629 "../../iup_text.c"
 _iupClassRegisterAttribute($49,17674,0,0,0,0,1); //@line 629 "../../iup_text.c"
 $50 = $0; //@line 630 "../../iup_text.c"
 _iupClassRegisterAttribute($50,17683,0,0,(-1),19587,1); //@line 630 "../../iup_text.c"
 $51 = $0; //@line 631 "../../iup_text.c"
 _iupClassRegisterAttribute($51,17698,0,0,(-1),19938,1); //@line 631 "../../iup_text.c"
 $52 = $0; //@line 632 "../../iup_text.c"
 _iupClassRegisterAttribute($52,17711,0,0,0,0,0); //@line 632 "../../iup_text.c"
 $53 = $0; //@line 634 "../../iup_text.c"
 _iupdrvTextInitClass($53); //@line 634 "../../iup_text.c"
 $54 = $0; //@line 636 "../../iup_text.c"
 STACKTOP = sp;return ($54|0); //@line 636 "../../iup_text.c"
}
function _iTextCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 434 "../../iup_text.c"
 $5 = ($4|0)!=(0|0); //@line 434 "../../iup_text.c"
 if ($5) {
  $6 = $3; //@line 436 "../../iup_text.c"
  $7 = HEAP32[$6>>2]|0; //@line 436 "../../iup_text.c"
  $8 = ($7|0)!=(0|0); //@line 436 "../../iup_text.c"
  if ($8) {
   $9 = $2; //@line 436 "../../iup_text.c"
   $10 = $3; //@line 436 "../../iup_text.c"
   $11 = HEAP32[$10>>2]|0; //@line 436 "../../iup_text.c"
   _iupAttribSetStr($9,20479,$11); //@line 436 "../../iup_text.c"
  }
 }
 $12 = (_calloc(1,44)|0); //@line 438 "../../iup_text.c"
 $13 = $2; //@line 438 "../../iup_text.c"
 $14 = ((($13)) + 72|0); //@line 438 "../../iup_text.c"
 HEAP32[$14>>2] = $12; //@line 438 "../../iup_text.c"
 $15 = $2; //@line 439 "../../iup_text.c"
 $16 = ((($15)) + 72|0); //@line 439 "../../iup_text.c"
 $17 = HEAP32[$16>>2]|0; //@line 439 "../../iup_text.c"
 $18 = ((($17)) + 8|0); //@line 439 "../../iup_text.c"
 HEAP32[$18>>2] = 1; //@line 439 "../../iup_text.c"
 STACKTOP = sp;return 0; //@line 440 "../../iup_text.c"
}
function _iTextDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 493 "../../iup_text.c"
 $3 = ((($2)) + 72|0); //@line 493 "../../iup_text.c"
 $4 = HEAP32[$3>>2]|0; //@line 493 "../../iup_text.c"
 $5 = ((($4)) + 36|0); //@line 493 "../../iup_text.c"
 $6 = HEAP32[$5>>2]|0; //@line 493 "../../iup_text.c"
 $7 = ($6|0)!=(0|0); //@line 493 "../../iup_text.c"
 if ($7) {
  $8 = $1; //@line 494 "../../iup_text.c"
  _iTextDestroyFormatTags($8); //@line 494 "../../iup_text.c"
 }
 $9 = $1; //@line 495 "../../iup_text.c"
 $10 = ((($9)) + 72|0); //@line 495 "../../iup_text.c"
 $11 = HEAP32[$10>>2]|0; //@line 495 "../../iup_text.c"
 $12 = ((($11)) + 40|0); //@line 495 "../../iup_text.c"
 $13 = HEAP32[$12>>2]|0; //@line 495 "../../iup_text.c"
 $14 = ($13|0)!=(0|0); //@line 495 "../../iup_text.c"
 if (!($14)) {
  STACKTOP = sp;return; //@line 497 "../../iup_text.c"
 }
 $15 = $1; //@line 496 "../../iup_text.c"
 $16 = ((($15)) + 72|0); //@line 496 "../../iup_text.c"
 $17 = HEAP32[$16>>2]|0; //@line 496 "../../iup_text.c"
 $18 = ((($17)) + 40|0); //@line 496 "../../iup_text.c"
 $19 = HEAP32[$18>>2]|0; //@line 496 "../../iup_text.c"
 _iupMaskDestroy($19); //@line 496 "../../iup_text.c"
 STACKTOP = sp;return; //@line 497 "../../iup_text.c"
}
function _iTextComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 16|0;
 $9 = sp + 12|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 HEAP32[$8>>2] = 0; //@line 454 "../../iup_text.c"
 HEAP32[$9>>2] = 0; //@line 455 "../../iup_text.c"
 $13 = $4; //@line 456 "../../iup_text.c"
 $14 = (_iupAttribGetInt($13,17683)|0); //@line 456 "../../iup_text.c"
 $10 = $14; //@line 456 "../../iup_text.c"
 $15 = $4; //@line 457 "../../iup_text.c"
 $16 = (_iupAttribGetInt($15,17698)|0); //@line 457 "../../iup_text.c"
 $11 = $16; //@line 457 "../../iup_text.c"
 $17 = $4; //@line 461 "../../iup_text.c"
 _iupdrvFontGetCharSize($17,0,$9); //@line 461 "../../iup_text.c"
 $18 = $4; //@line 462 "../../iup_text.c"
 $19 = (_iupdrvFontGetStringWidth($18,17749)|0); //@line 462 "../../iup_text.c"
 HEAP32[$8>>2] = $19; //@line 462 "../../iup_text.c"
 $20 = $10; //@line 463 "../../iup_text.c"
 $21 = HEAP32[$8>>2]|0; //@line 463 "../../iup_text.c"
 $22 = Math_imul($20, $21)|0; //@line 463 "../../iup_text.c"
 $23 = (($22|0) / 10)&-1; //@line 463 "../../iup_text.c"
 HEAP32[$8>>2] = $23; //@line 463 "../../iup_text.c"
 $24 = $4; //@line 464 "../../iup_text.c"
 $25 = ((($24)) + 72|0); //@line 464 "../../iup_text.c"
 $26 = HEAP32[$25>>2]|0; //@line 464 "../../iup_text.c"
 $27 = HEAP32[$26>>2]|0; //@line 464 "../../iup_text.c"
 $28 = ($27|0)!=(0); //@line 464 "../../iup_text.c"
 if ($28) {
  $29 = $11; //@line 465 "../../iup_text.c"
  $30 = HEAP32[$9>>2]|0; //@line 465 "../../iup_text.c"
  $31 = Math_imul($29, $30)|0; //@line 465 "../../iup_text.c"
  HEAP32[$9>>2] = $31; //@line 465 "../../iup_text.c"
 }
 $32 = $4; //@line 468 "../../iup_text.c"
 $33 = (_iupAttribGetBoolean($32,17637)|0); //@line 468 "../../iup_text.c"
 $34 = ($33|0)!=(0); //@line 468 "../../iup_text.c"
 if ($34) {
  _iupdrvTextAddBorders($8,$9); //@line 469 "../../iup_text.c"
 }
 $35 = $4; //@line 471 "../../iup_text.c"
 $36 = (_iupAttribGetBoolean($35,17644)|0); //@line 471 "../../iup_text.c"
 $37 = ($36|0)!=(0); //@line 471 "../../iup_text.c"
 if ($37) {
  $38 = HEAP32[$9>>2]|0; //@line 472 "../../iup_text.c"
  _iupdrvTextAddSpin($8,$38); //@line 472 "../../iup_text.c"
 }
 $39 = $4; //@line 474 "../../iup_text.c"
 $40 = ((($39)) + 72|0); //@line 474 "../../iup_text.c"
 $41 = HEAP32[$40>>2]|0; //@line 474 "../../iup_text.c"
 $42 = ((($41)) + 24|0); //@line 474 "../../iup_text.c"
 $43 = HEAP32[$42>>2]|0; //@line 474 "../../iup_text.c"
 $44 = $43<<1; //@line 474 "../../iup_text.c"
 $45 = HEAP32[$8>>2]|0; //@line 474 "../../iup_text.c"
 $46 = (($45) + ($44))|0; //@line 474 "../../iup_text.c"
 HEAP32[$8>>2] = $46; //@line 474 "../../iup_text.c"
 $47 = $4; //@line 475 "../../iup_text.c"
 $48 = ((($47)) + 72|0); //@line 475 "../../iup_text.c"
 $49 = HEAP32[$48>>2]|0; //@line 475 "../../iup_text.c"
 $50 = ((($49)) + 28|0); //@line 475 "../../iup_text.c"
 $51 = HEAP32[$50>>2]|0; //@line 475 "../../iup_text.c"
 $52 = $51<<1; //@line 475 "../../iup_text.c"
 $53 = HEAP32[$9>>2]|0; //@line 475 "../../iup_text.c"
 $54 = (($53) + ($52))|0; //@line 475 "../../iup_text.c"
 HEAP32[$9>>2] = $54; //@line 475 "../../iup_text.c"
 $55 = $4; //@line 478 "../../iup_text.c"
 $56 = ((($55)) + 72|0); //@line 478 "../../iup_text.c"
 $57 = HEAP32[$56>>2]|0; //@line 478 "../../iup_text.c"
 $58 = HEAP32[$57>>2]|0; //@line 478 "../../iup_text.c"
 $59 = ($58|0)!=(0); //@line 478 "../../iup_text.c"
 if ($59) {
  $60 = $4; //@line 478 "../../iup_text.c"
  $61 = ((($60)) + 72|0); //@line 478 "../../iup_text.c"
  $62 = HEAP32[$61>>2]|0; //@line 478 "../../iup_text.c"
  $63 = ((($62)) + 20|0); //@line 478 "../../iup_text.c"
  $64 = HEAP32[$63>>2]|0; //@line 478 "../../iup_text.c"
  $65 = ($64|0)!=(0); //@line 478 "../../iup_text.c"
  if ($65) {
   $66 = (_iupdrvGetScrollbarSize()|0); //@line 480 "../../iup_text.c"
   $12 = $66; //@line 480 "../../iup_text.c"
   $67 = $4; //@line 481 "../../iup_text.c"
   $68 = ((($67)) + 72|0); //@line 481 "../../iup_text.c"
   $69 = HEAP32[$68>>2]|0; //@line 481 "../../iup_text.c"
   $70 = ((($69)) + 20|0); //@line 481 "../../iup_text.c"
   $71 = HEAP32[$70>>2]|0; //@line 481 "../../iup_text.c"
   $72 = $71 & 1; //@line 481 "../../iup_text.c"
   $73 = ($72|0)!=(0); //@line 481 "../../iup_text.c"
   if ($73) {
    $74 = $12; //@line 482 "../../iup_text.c"
    $75 = HEAP32[$9>>2]|0; //@line 482 "../../iup_text.c"
    $76 = (($75) + ($74))|0; //@line 482 "../../iup_text.c"
    HEAP32[$9>>2] = $76; //@line 482 "../../iup_text.c"
   }
   $77 = $4; //@line 483 "../../iup_text.c"
   $78 = ((($77)) + 72|0); //@line 483 "../../iup_text.c"
   $79 = HEAP32[$78>>2]|0; //@line 483 "../../iup_text.c"
   $80 = ((($79)) + 20|0); //@line 483 "../../iup_text.c"
   $81 = HEAP32[$80>>2]|0; //@line 483 "../../iup_text.c"
   $82 = $81 & 2; //@line 483 "../../iup_text.c"
   $83 = ($82|0)!=(0); //@line 483 "../../iup_text.c"
   if ($83) {
    $84 = $12; //@line 484 "../../iup_text.c"
    $85 = HEAP32[$8>>2]|0; //@line 484 "../../iup_text.c"
    $86 = (($85) + ($84))|0; //@line 484 "../../iup_text.c"
    HEAP32[$8>>2] = $86; //@line 484 "../../iup_text.c"
   }
  }
 }
 $87 = HEAP32[$8>>2]|0; //@line 487 "../../iup_text.c"
 $88 = $5; //@line 487 "../../iup_text.c"
 HEAP32[$88>>2] = $87; //@line 487 "../../iup_text.c"
 $89 = HEAP32[$9>>2]|0; //@line 488 "../../iup_text.c"
 $90 = $6; //@line 488 "../../iup_text.c"
 HEAP32[$90>>2] = $89; //@line 488 "../../iup_text.c"
 STACKTOP = sp;return; //@line 489 "../../iup_text.c"
}
function _iTextGetScrollbarAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 412 "../../iup_text.c"
 $4 = ((($3)) + 72|0); //@line 412 "../../iup_text.c"
 $5 = HEAP32[$4>>2]|0; //@line 412 "../../iup_text.c"
 $6 = HEAP32[$5>>2]|0; //@line 412 "../../iup_text.c"
 $7 = ($6|0)!=(0); //@line 412 "../../iup_text.c"
 do {
  if ($7) {
   $8 = $2; //@line 414 "../../iup_text.c"
   $9 = ((($8)) + 72|0); //@line 414 "../../iup_text.c"
   $10 = HEAP32[$9>>2]|0; //@line 414 "../../iup_text.c"
   $11 = ((($10)) + 20|0); //@line 414 "../../iup_text.c"
   $12 = HEAP32[$11>>2]|0; //@line 414 "../../iup_text.c"
   $13 = ($12|0)==(3); //@line 414 "../../iup_text.c"
   if ($13) {
    $1 = 20441; //@line 415 "../../iup_text.c"
    break;
   }
   $14 = $2; //@line 416 "../../iup_text.c"
   $15 = ((($14)) + 72|0); //@line 416 "../../iup_text.c"
   $16 = HEAP32[$15>>2]|0; //@line 416 "../../iup_text.c"
   $17 = ((($16)) + 20|0); //@line 416 "../../iup_text.c"
   $18 = HEAP32[$17>>2]|0; //@line 416 "../../iup_text.c"
   $19 = $18 & 1; //@line 416 "../../iup_text.c"
   $20 = ($19|0)!=(0); //@line 416 "../../iup_text.c"
   if ($20) {
    $1 = 19951; //@line 417 "../../iup_text.c"
    break;
   }
   $21 = $2; //@line 418 "../../iup_text.c"
   $22 = ((($21)) + 72|0); //@line 418 "../../iup_text.c"
   $23 = HEAP32[$22>>2]|0; //@line 418 "../../iup_text.c"
   $24 = ((($23)) + 20|0); //@line 418 "../../iup_text.c"
   $25 = HEAP32[$24>>2]|0; //@line 418 "../../iup_text.c"
   $26 = $25 & 2; //@line 418 "../../iup_text.c"
   $27 = ($26|0)!=(0); //@line 418 "../../iup_text.c"
   if ($27) {
    $1 = 19983; //@line 419 "../../iup_text.c"
    break;
   } else {
    $1 = 20140; //@line 420 "../../iup_text.c"
    break;
   }
  } else {
   $1 = 0; //@line 413 "../../iup_text.c"
  }
 } while(0);
 $28 = $1; //@line 421 "../../iup_text.c"
 STACKTOP = sp;return ($28|0); //@line 421 "../../iup_text.c"
}
function _iTextSetScrollbarAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 392 "../../iup_text.c"
 $6 = ((($5)) + 16|0); //@line 392 "../../iup_text.c"
 $7 = HEAP32[$6>>2]|0; //@line 392 "../../iup_text.c"
 $8 = ($7|0)!=(0|0); //@line 392 "../../iup_text.c"
 if (!($8)) {
  $9 = $3; //@line 392 "../../iup_text.c"
  $10 = ((($9)) + 72|0); //@line 392 "../../iup_text.c"
  $11 = HEAP32[$10>>2]|0; //@line 392 "../../iup_text.c"
  $12 = HEAP32[$11>>2]|0; //@line 392 "../../iup_text.c"
  $13 = ($12|0)!=(0); //@line 392 "../../iup_text.c"
  if ($13) {
   $14 = $4; //@line 395 "../../iup_text.c"
   $15 = ($14|0)!=(0|0); //@line 395 "../../iup_text.c"
   if (!($15)) {
    $4 = 20441; //@line 396 "../../iup_text.c"
   }
   $16 = $4; //@line 398 "../../iup_text.c"
   $17 = (_iupStrEqualNoCase($16,20441)|0); //@line 398 "../../iup_text.c"
   $18 = ($17|0)!=(0); //@line 398 "../../iup_text.c"
   do {
    if ($18) {
     $19 = $3; //@line 399 "../../iup_text.c"
     $20 = ((($19)) + 72|0); //@line 399 "../../iup_text.c"
     $21 = HEAP32[$20>>2]|0; //@line 399 "../../iup_text.c"
     $22 = ((($21)) + 20|0); //@line 399 "../../iup_text.c"
     HEAP32[$22>>2] = 3; //@line 399 "../../iup_text.c"
    } else {
     $23 = $4; //@line 400 "../../iup_text.c"
     $24 = (_iupStrEqualNoCase($23,19951)|0); //@line 400 "../../iup_text.c"
     $25 = ($24|0)!=(0); //@line 400 "../../iup_text.c"
     if ($25) {
      $26 = $3; //@line 401 "../../iup_text.c"
      $27 = ((($26)) + 72|0); //@line 401 "../../iup_text.c"
      $28 = HEAP32[$27>>2]|0; //@line 401 "../../iup_text.c"
      $29 = ((($28)) + 20|0); //@line 401 "../../iup_text.c"
      HEAP32[$29>>2] = 1; //@line 401 "../../iup_text.c"
      break;
     }
     $30 = $4; //@line 402 "../../iup_text.c"
     $31 = (_iupStrEqualNoCase($30,19983)|0); //@line 402 "../../iup_text.c"
     $32 = ($31|0)!=(0); //@line 402 "../../iup_text.c"
     $33 = $3; //@line 403 "../../iup_text.c"
     $34 = ((($33)) + 72|0); //@line 403 "../../iup_text.c"
     $35 = HEAP32[$34>>2]|0; //@line 403 "../../iup_text.c"
     $36 = ((($35)) + 20|0); //@line 403 "../../iup_text.c"
     if ($32) {
      HEAP32[$36>>2] = 2; //@line 403 "../../iup_text.c"
      break;
     } else {
      HEAP32[$36>>2] = 0; //@line 405 "../../iup_text.c"
      break;
     }
    }
   } while(0);
   $2 = 0; //@line 407 "../../iup_text.c"
   $37 = $2; //@line 408 "../../iup_text.c"
   STACKTOP = sp;return ($37|0); //@line 408 "../../iup_text.c"
  }
 }
 $2 = 0; //@line 393 "../../iup_text.c"
 $37 = $2; //@line 408 "../../iup_text.c"
 STACKTOP = sp;return ($37|0); //@line 408 "../../iup_text.c"
}
function _iTextGetMultilineAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 372 "../../iup_text.c"
 $3 = ((($2)) + 72|0); //@line 372 "../../iup_text.c"
 $4 = HEAP32[$3>>2]|0; //@line 372 "../../iup_text.c"
 $5 = HEAP32[$4>>2]|0; //@line 372 "../../iup_text.c"
 $6 = (_iupStrReturnBoolean($5)|0); //@line 372 "../../iup_text.c"
 STACKTOP = sp;return ($6|0); //@line 372 "../../iup_text.c"
}
function _iTextSetMultilineAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 352 "../../iup_text.c"
 $6 = ((($5)) + 16|0); //@line 352 "../../iup_text.c"
 $7 = HEAP32[$6>>2]|0; //@line 352 "../../iup_text.c"
 $8 = ($7|0)!=(0|0); //@line 352 "../../iup_text.c"
 if ($8) {
  $2 = 0; //@line 353 "../../iup_text.c"
  $21 = $2; //@line 368 "../../iup_text.c"
  STACKTOP = sp;return ($21|0); //@line 368 "../../iup_text.c"
 }
 $9 = $4; //@line 355 "../../iup_text.c"
 $10 = (_iupStrBoolean($9)|0); //@line 355 "../../iup_text.c"
 $11 = ($10|0)!=(0); //@line 355 "../../iup_text.c"
 $12 = $3; //@line 357 "../../iup_text.c"
 $13 = ((($12)) + 72|0); //@line 357 "../../iup_text.c"
 $14 = HEAP32[$13>>2]|0; //@line 357 "../../iup_text.c"
 if ($11) {
  HEAP32[$14>>2] = 1; //@line 357 "../../iup_text.c"
  $15 = $3; //@line 358 "../../iup_text.c"
  $16 = ((($15)) + 72|0); //@line 358 "../../iup_text.c"
  $17 = HEAP32[$16>>2]|0; //@line 358 "../../iup_text.c"
  $18 = ((($17)) + 20|0); //@line 358 "../../iup_text.c"
  HEAP32[$18>>2] = 3; //@line 358 "../../iup_text.c"
  $19 = $3; //@line 359 "../../iup_text.c"
  _iupAttribSet($19,17729,19938); //@line 359 "../../iup_text.c"
 } else {
  HEAP32[$14>>2] = 0; //@line 363 "../../iup_text.c"
  $20 = $3; //@line 364 "../../iup_text.c"
  _iupAttribSet($20,17729,0); //@line 364 "../../iup_text.c"
 }
 $2 = 0; //@line 367 "../../iup_text.c"
 $21 = $2; //@line 368 "../../iup_text.c"
 STACKTOP = sp;return ($21|0); //@line 368 "../../iup_text.c"
}
function _iTextGetAppendNewlineAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 386 "../../iup_text.c"
 $3 = ((($2)) + 72|0); //@line 386 "../../iup_text.c"
 $4 = HEAP32[$3>>2]|0; //@line 386 "../../iup_text.c"
 $5 = ((($4)) + 8|0); //@line 386 "../../iup_text.c"
 $6 = HEAP32[$5>>2]|0; //@line 386 "../../iup_text.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 386 "../../iup_text.c"
 STACKTOP = sp;return ($7|0); //@line 386 "../../iup_text.c"
}
function _iTextSetAppendNewlineAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 377 "../../iup_text.c"
 $5 = (_iupStrBoolean($4)|0); //@line 377 "../../iup_text.c"
 $6 = ($5|0)!=(0); //@line 377 "../../iup_text.c"
 $7 = $2; //@line 378 "../../iup_text.c"
 $8 = ((($7)) + 72|0); //@line 378 "../../iup_text.c"
 $9 = HEAP32[$8>>2]|0; //@line 378 "../../iup_text.c"
 $10 = ((($9)) + 8|0); //@line 378 "../../iup_text.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 378 "../../iup_text.c"
  STACKTOP = sp;return 0; //@line 381 "../../iup_text.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 380 "../../iup_text.c"
  STACKTOP = sp;return 0; //@line 381 "../../iup_text.c"
 }
 return (0)|0;
}
function _iTextSetValueMaskedAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $4; //@line 224 "../../iup_text.c"
 $6 = ($5|0)!=(0|0); //@line 224 "../../iup_text.c"
 if ($6) {
  $7 = $3; //@line 226 "../../iup_text.c"
  $8 = ((($7)) + 72|0); //@line 226 "../../iup_text.c"
  $9 = HEAP32[$8>>2]|0; //@line 226 "../../iup_text.c"
  $10 = ((($9)) + 40|0); //@line 226 "../../iup_text.c"
  $11 = HEAP32[$10>>2]|0; //@line 226 "../../iup_text.c"
  $12 = ($11|0)!=(0|0); //@line 226 "../../iup_text.c"
  if ($12) {
   $13 = $3; //@line 226 "../../iup_text.c"
   $14 = ((($13)) + 72|0); //@line 226 "../../iup_text.c"
   $15 = HEAP32[$14>>2]|0; //@line 226 "../../iup_text.c"
   $16 = ((($15)) + 40|0); //@line 226 "../../iup_text.c"
   $17 = HEAP32[$16>>2]|0; //@line 226 "../../iup_text.c"
   $18 = $4; //@line 226 "../../iup_text.c"
   $19 = (_iupMaskCheck($17,$18)|0); //@line 226 "../../iup_text.c"
   $20 = ($19|0)==(0); //@line 226 "../../iup_text.c"
   if ($20) {
    $2 = 0; //@line 227 "../../iup_text.c"
    $23 = $2; //@line 231 "../../iup_text.c"
    STACKTOP = sp;return ($23|0); //@line 231 "../../iup_text.c"
   }
  }
  $21 = $3; //@line 228 "../../iup_text.c"
  $22 = $4; //@line 228 "../../iup_text.c"
  _IupStoreAttribute($21,20104,$22); //@line 228 "../../iup_text.c"
 }
 $2 = 0; //@line 230 "../../iup_text.c"
 $23 = $2; //@line 231 "../../iup_text.c"
 STACKTOP = sp;return ($23|0); //@line 231 "../../iup_text.c"
}
function _iTextGetMaskAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 216 "../../iup_text.c"
 $4 = ((($3)) + 72|0); //@line 216 "../../iup_text.c"
 $5 = HEAP32[$4>>2]|0; //@line 216 "../../iup_text.c"
 $6 = ((($5)) + 40|0); //@line 216 "../../iup_text.c"
 $7 = HEAP32[$6>>2]|0; //@line 216 "../../iup_text.c"
 $8 = ($7|0)!=(0|0); //@line 216 "../../iup_text.c"
 if ($8) {
  $9 = $2; //@line 217 "../../iup_text.c"
  $10 = ((($9)) + 72|0); //@line 217 "../../iup_text.c"
  $11 = HEAP32[$10>>2]|0; //@line 217 "../../iup_text.c"
  $12 = ((($11)) + 40|0); //@line 217 "../../iup_text.c"
  $13 = HEAP32[$12>>2]|0; //@line 217 "../../iup_text.c"
  $14 = (_iupMaskGetStr($13)|0); //@line 217 "../../iup_text.c"
  $1 = $14; //@line 217 "../../iup_text.c"
  $15 = $1; //@line 220 "../../iup_text.c"
  STACKTOP = sp;return ($15|0); //@line 220 "../../iup_text.c"
 } else {
  $1 = 0; //@line 219 "../../iup_text.c"
  $15 = $1; //@line 220 "../../iup_text.c"
  STACKTOP = sp;return ($15|0); //@line 220 "../../iup_text.c"
 }
 return (0)|0;
}
function _iTextSetMaskAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = $4; //@line 235 "../../iup_text.c"
 $8 = ($7|0)!=(0|0); //@line 235 "../../iup_text.c"
 $9 = $3; //@line 245 "../../iup_text.c"
 if ($8) {
  $24 = (_iupAttribGetInt($9,17563)|0); //@line 245 "../../iup_text.c"
  $5 = $24; //@line 245 "../../iup_text.c"
  $25 = $4; //@line 246 "../../iup_text.c"
  $26 = $5; //@line 246 "../../iup_text.c"
  $27 = (_iupMaskCreate($25,$26)|0); //@line 246 "../../iup_text.c"
  $6 = $27; //@line 246 "../../iup_text.c"
  $28 = $6; //@line 247 "../../iup_text.c"
  $29 = ($28|0)!=(0|0); //@line 247 "../../iup_text.c"
  if ($29) {
   $30 = $3; //@line 249 "../../iup_text.c"
   $31 = ((($30)) + 72|0); //@line 249 "../../iup_text.c"
   $32 = HEAP32[$31>>2]|0; //@line 249 "../../iup_text.c"
   $33 = ((($32)) + 40|0); //@line 249 "../../iup_text.c"
   $34 = HEAP32[$33>>2]|0; //@line 249 "../../iup_text.c"
   $35 = ($34|0)!=(0|0); //@line 249 "../../iup_text.c"
   if ($35) {
    $36 = $3; //@line 250 "../../iup_text.c"
    $37 = ((($36)) + 72|0); //@line 250 "../../iup_text.c"
    $38 = HEAP32[$37>>2]|0; //@line 250 "../../iup_text.c"
    $39 = ((($38)) + 40|0); //@line 250 "../../iup_text.c"
    $40 = HEAP32[$39>>2]|0; //@line 250 "../../iup_text.c"
    _iupMaskDestroy($40); //@line 250 "../../iup_text.c"
   }
   $41 = $6; //@line 252 "../../iup_text.c"
   $42 = $3; //@line 252 "../../iup_text.c"
   $43 = ((($42)) + 72|0); //@line 252 "../../iup_text.c"
   $44 = HEAP32[$43>>2]|0; //@line 252 "../../iup_text.c"
   $45 = ((($44)) + 40|0); //@line 252 "../../iup_text.c"
   HEAP32[$45>>2] = $41; //@line 252 "../../iup_text.c"
   $2 = 0; //@line 253 "../../iup_text.c"
   $46 = $2; //@line 258 "../../iup_text.c"
   STACKTOP = sp;return ($46|0); //@line 258 "../../iup_text.c"
  }
 } else {
  $10 = ((($9)) + 72|0); //@line 237 "../../iup_text.c"
  $11 = HEAP32[$10>>2]|0; //@line 237 "../../iup_text.c"
  $12 = ((($11)) + 40|0); //@line 237 "../../iup_text.c"
  $13 = HEAP32[$12>>2]|0; //@line 237 "../../iup_text.c"
  $14 = ($13|0)!=(0|0); //@line 237 "../../iup_text.c"
  if ($14) {
   $15 = $3; //@line 239 "../../iup_text.c"
   $16 = ((($15)) + 72|0); //@line 239 "../../iup_text.c"
   $17 = HEAP32[$16>>2]|0; //@line 239 "../../iup_text.c"
   $18 = ((($17)) + 40|0); //@line 239 "../../iup_text.c"
   $19 = HEAP32[$18>>2]|0; //@line 239 "../../iup_text.c"
   _iupMaskDestroy($19); //@line 239 "../../iup_text.c"
   $20 = $3; //@line 240 "../../iup_text.c"
   $21 = ((($20)) + 72|0); //@line 240 "../../iup_text.c"
   $22 = HEAP32[$21>>2]|0; //@line 240 "../../iup_text.c"
   $23 = ((($22)) + 40|0); //@line 240 "../../iup_text.c"
   HEAP32[$23>>2] = 0; //@line 240 "../../iup_text.c"
  }
 }
 $2 = 0; //@line 257 "../../iup_text.c"
 $46 = $2; //@line 258 "../../iup_text.c"
 STACKTOP = sp;return ($46|0); //@line 258 "../../iup_text.c"
}
function _iTextSetMaskIntAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $7 = sp;
 $3 = $0;
 $4 = $1;
 $8 = $4; //@line 262 "../../iup_text.c"
 $9 = ($8|0)!=(0|0); //@line 262 "../../iup_text.c"
 if ($9) {
  $25 = $4; //@line 275 "../../iup_text.c"
  $26 = (_iupStrToIntInt($25,$6,$7,58)|0); //@line 275 "../../iup_text.c"
  $27 = ($26|0)!=(2); //@line 275 "../../iup_text.c"
  if ($27) {
   $2 = 0; //@line 276 "../../iup_text.c"
   $47 = $2; //@line 287 "../../iup_text.c"
   STACKTOP = sp;return ($47|0); //@line 287 "../../iup_text.c"
  }
  $28 = HEAP32[$6>>2]|0; //@line 278 "../../iup_text.c"
  $29 = HEAP32[$7>>2]|0; //@line 278 "../../iup_text.c"
  $30 = (_iupMaskCreateInt($28,$29)|0); //@line 278 "../../iup_text.c"
  $5 = $30; //@line 278 "../../iup_text.c"
  $31 = $3; //@line 280 "../../iup_text.c"
  $32 = ((($31)) + 72|0); //@line 280 "../../iup_text.c"
  $33 = HEAP32[$32>>2]|0; //@line 280 "../../iup_text.c"
  $34 = ((($33)) + 40|0); //@line 280 "../../iup_text.c"
  $35 = HEAP32[$34>>2]|0; //@line 280 "../../iup_text.c"
  $36 = ($35|0)!=(0|0); //@line 280 "../../iup_text.c"
  if ($36) {
   $37 = $3; //@line 281 "../../iup_text.c"
   $38 = ((($37)) + 72|0); //@line 281 "../../iup_text.c"
   $39 = HEAP32[$38>>2]|0; //@line 281 "../../iup_text.c"
   $40 = ((($39)) + 40|0); //@line 281 "../../iup_text.c"
   $41 = HEAP32[$40>>2]|0; //@line 281 "../../iup_text.c"
   _iupMaskDestroy($41); //@line 281 "../../iup_text.c"
  }
  $42 = $5; //@line 283 "../../iup_text.c"
  $43 = $3; //@line 283 "../../iup_text.c"
  $44 = ((($43)) + 72|0); //@line 283 "../../iup_text.c"
  $45 = HEAP32[$44>>2]|0; //@line 283 "../../iup_text.c"
  $46 = ((($45)) + 40|0); //@line 283 "../../iup_text.c"
  HEAP32[$46>>2] = $42; //@line 283 "../../iup_text.c"
 } else {
  $10 = $3; //@line 264 "../../iup_text.c"
  $11 = ((($10)) + 72|0); //@line 264 "../../iup_text.c"
  $12 = HEAP32[$11>>2]|0; //@line 264 "../../iup_text.c"
  $13 = ((($12)) + 40|0); //@line 264 "../../iup_text.c"
  $14 = HEAP32[$13>>2]|0; //@line 264 "../../iup_text.c"
  $15 = ($14|0)!=(0|0); //@line 264 "../../iup_text.c"
  if ($15) {
   $16 = $3; //@line 266 "../../iup_text.c"
   $17 = ((($16)) + 72|0); //@line 266 "../../iup_text.c"
   $18 = HEAP32[$17>>2]|0; //@line 266 "../../iup_text.c"
   $19 = ((($18)) + 40|0); //@line 266 "../../iup_text.c"
   $20 = HEAP32[$19>>2]|0; //@line 266 "../../iup_text.c"
   _iupMaskDestroy($20); //@line 266 "../../iup_text.c"
   $21 = $3; //@line 267 "../../iup_text.c"
   $22 = ((($21)) + 72|0); //@line 267 "../../iup_text.c"
   $23 = HEAP32[$22>>2]|0; //@line 267 "../../iup_text.c"
   $24 = ((($23)) + 40|0); //@line 267 "../../iup_text.c"
   HEAP32[$24>>2] = 0; //@line 267 "../../iup_text.c"
  }
 }
 $2 = 0; //@line 286 "../../iup_text.c"
 $47 = $2; //@line 287 "../../iup_text.c"
 STACKTOP = sp;return ($47|0); //@line 287 "../../iup_text.c"
}
function _iTextSetMaskFloatAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 8|0;
 $7 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $9 = $4; //@line 291 "../../iup_text.c"
 $10 = ($9|0)!=(0|0); //@line 291 "../../iup_text.c"
 $11 = $3; //@line 303 "../../iup_text.c"
 if ($10) {
  $26 = (_iupAttribGet($11,17573)|0); //@line 303 "../../iup_text.c"
  $8 = $26; //@line 303 "../../iup_text.c"
  $27 = $4; //@line 305 "../../iup_text.c"
  $28 = (_iupStrToFloatFloat($27,$6,$7,58)|0); //@line 305 "../../iup_text.c"
  $29 = ($28|0)!=(2); //@line 305 "../../iup_text.c"
  if ($29) {
   $2 = 0; //@line 306 "../../iup_text.c"
   $50 = $2; //@line 317 "../../iup_text.c"
   STACKTOP = sp;return ($50|0); //@line 317 "../../iup_text.c"
  }
  $30 = +HEAPF32[$6>>2]; //@line 308 "../../iup_text.c"
  $31 = +HEAPF32[$7>>2]; //@line 308 "../../iup_text.c"
  $32 = $8; //@line 308 "../../iup_text.c"
  $33 = (_iupMaskCreateFloat($30,$31,$32)|0); //@line 308 "../../iup_text.c"
  $5 = $33; //@line 308 "../../iup_text.c"
  $34 = $3; //@line 310 "../../iup_text.c"
  $35 = ((($34)) + 72|0); //@line 310 "../../iup_text.c"
  $36 = HEAP32[$35>>2]|0; //@line 310 "../../iup_text.c"
  $37 = ((($36)) + 40|0); //@line 310 "../../iup_text.c"
  $38 = HEAP32[$37>>2]|0; //@line 310 "../../iup_text.c"
  $39 = ($38|0)!=(0|0); //@line 310 "../../iup_text.c"
  if ($39) {
   $40 = $3; //@line 311 "../../iup_text.c"
   $41 = ((($40)) + 72|0); //@line 311 "../../iup_text.c"
   $42 = HEAP32[$41>>2]|0; //@line 311 "../../iup_text.c"
   $43 = ((($42)) + 40|0); //@line 311 "../../iup_text.c"
   $44 = HEAP32[$43>>2]|0; //@line 311 "../../iup_text.c"
   _iupMaskDestroy($44); //@line 311 "../../iup_text.c"
  }
  $45 = $5; //@line 313 "../../iup_text.c"
  $46 = $3; //@line 313 "../../iup_text.c"
  $47 = ((($46)) + 72|0); //@line 313 "../../iup_text.c"
  $48 = HEAP32[$47>>2]|0; //@line 313 "../../iup_text.c"
  $49 = ((($48)) + 40|0); //@line 313 "../../iup_text.c"
  HEAP32[$49>>2] = $45; //@line 313 "../../iup_text.c"
 } else {
  $12 = ((($11)) + 72|0); //@line 293 "../../iup_text.c"
  $13 = HEAP32[$12>>2]|0; //@line 293 "../../iup_text.c"
  $14 = ((($13)) + 40|0); //@line 293 "../../iup_text.c"
  $15 = HEAP32[$14>>2]|0; //@line 293 "../../iup_text.c"
  $16 = ($15|0)!=(0|0); //@line 293 "../../iup_text.c"
  if ($16) {
   $17 = $3; //@line 295 "../../iup_text.c"
   $18 = ((($17)) + 72|0); //@line 295 "../../iup_text.c"
   $19 = HEAP32[$18>>2]|0; //@line 295 "../../iup_text.c"
   $20 = ((($19)) + 40|0); //@line 295 "../../iup_text.c"
   $21 = HEAP32[$20>>2]|0; //@line 295 "../../iup_text.c"
   _iupMaskDestroy($21); //@line 295 "../../iup_text.c"
   $22 = $3; //@line 296 "../../iup_text.c"
   $23 = ((($22)) + 72|0); //@line 296 "../../iup_text.c"
   $24 = HEAP32[$23>>2]|0; //@line 296 "../../iup_text.c"
   $25 = ((($24)) + 40|0); //@line 296 "../../iup_text.c"
   HEAP32[$25>>2] = 0; //@line 296 "../../iup_text.c"
  }
 }
 $2 = 0; //@line 316 "../../iup_text.c"
 $50 = $2; //@line 317 "../../iup_text.c"
 STACKTOP = sp;return ($50|0); //@line 317 "../../iup_text.c"
}
function _iTextSetMaskRealAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $7 = $3; //@line 321 "../../iup_text.c"
 $8 = ($7|0)!=(0|0); //@line 321 "../../iup_text.c"
 $9 = $2; //@line 332 "../../iup_text.c"
 if (!($8)) {
  $10 = ((($9)) + 72|0); //@line 323 "../../iup_text.c"
  $11 = HEAP32[$10>>2]|0; //@line 323 "../../iup_text.c"
  $12 = ((($11)) + 40|0); //@line 323 "../../iup_text.c"
  $13 = HEAP32[$12>>2]|0; //@line 323 "../../iup_text.c"
  $14 = ($13|0)!=(0|0); //@line 323 "../../iup_text.c"
  if (!($14)) {
   STACKTOP = sp;return 0; //@line 346 "../../iup_text.c"
  }
  $15 = $2; //@line 325 "../../iup_text.c"
  $16 = ((($15)) + 72|0); //@line 325 "../../iup_text.c"
  $17 = HEAP32[$16>>2]|0; //@line 325 "../../iup_text.c"
  $18 = ((($17)) + 40|0); //@line 325 "../../iup_text.c"
  $19 = HEAP32[$18>>2]|0; //@line 325 "../../iup_text.c"
  _iupMaskDestroy($19); //@line 325 "../../iup_text.c"
  $20 = $2; //@line 326 "../../iup_text.c"
  $21 = ((($20)) + 72|0); //@line 326 "../../iup_text.c"
  $22 = HEAP32[$21>>2]|0; //@line 326 "../../iup_text.c"
  $23 = ((($22)) + 40|0); //@line 326 "../../iup_text.c"
  HEAP32[$23>>2] = 0; //@line 326 "../../iup_text.c"
  STACKTOP = sp;return 0; //@line 346 "../../iup_text.c"
 }
 $24 = (_iupAttribGet($9,17573)|0); //@line 332 "../../iup_text.c"
 $5 = $24; //@line 332 "../../iup_text.c"
 $6 = 0; //@line 333 "../../iup_text.c"
 $25 = $3; //@line 335 "../../iup_text.c"
 $26 = (_iupStrEqualNoCase($25,17720)|0); //@line 335 "../../iup_text.c"
 $27 = ($26|0)!=(0); //@line 335 "../../iup_text.c"
 if ($27) {
  $6 = 1; //@line 336 "../../iup_text.c"
 }
 $28 = $6; //@line 338 "../../iup_text.c"
 $29 = $5; //@line 338 "../../iup_text.c"
 $30 = (_iupMaskCreateReal($28,$29)|0); //@line 338 "../../iup_text.c"
 $4 = $30; //@line 338 "../../iup_text.c"
 $31 = $2; //@line 340 "../../iup_text.c"
 $32 = ((($31)) + 72|0); //@line 340 "../../iup_text.c"
 $33 = HEAP32[$32>>2]|0; //@line 340 "../../iup_text.c"
 $34 = ((($33)) + 40|0); //@line 340 "../../iup_text.c"
 $35 = HEAP32[$34>>2]|0; //@line 340 "../../iup_text.c"
 $36 = ($35|0)!=(0|0); //@line 340 "../../iup_text.c"
 if ($36) {
  $37 = $2; //@line 341 "../../iup_text.c"
  $38 = ((($37)) + 72|0); //@line 341 "../../iup_text.c"
  $39 = HEAP32[$38>>2]|0; //@line 341 "../../iup_text.c"
  $40 = ((($39)) + 40|0); //@line 341 "../../iup_text.c"
  $41 = HEAP32[$40>>2]|0; //@line 341 "../../iup_text.c"
  _iupMaskDestroy($41); //@line 341 "../../iup_text.c"
 }
 $42 = $4; //@line 343 "../../iup_text.c"
 $43 = $2; //@line 343 "../../iup_text.c"
 $44 = ((($43)) + 72|0); //@line 343 "../../iup_text.c"
 $45 = HEAP32[$44>>2]|0; //@line 343 "../../iup_text.c"
 $46 = ((($45)) + 40|0); //@line 343 "../../iup_text.c"
 HEAP32[$46>>2] = $42; //@line 343 "../../iup_text.c"
 STACKTOP = sp;return 0; //@line 346 "../../iup_text.c"
}
function _iTextGetMaskDataAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 211 "../../iup_text.c"
 $3 = ((($2)) + 72|0); //@line 211 "../../iup_text.c"
 $4 = HEAP32[$3>>2]|0; //@line 211 "../../iup_text.c"
 $5 = ((($4)) + 40|0); //@line 211 "../../iup_text.c"
 $6 = HEAP32[$5>>2]|0; //@line 211 "../../iup_text.c"
 STACKTOP = sp;return ($6|0); //@line 211 "../../iup_text.c"
}
function _iTextDestroyFormatTags($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 112 "../../iup_text.c"
 $6 = ((($5)) + 72|0); //@line 112 "../../iup_text.c"
 $7 = HEAP32[$6>>2]|0; //@line 112 "../../iup_text.c"
 $8 = ((($7)) + 36|0); //@line 112 "../../iup_text.c"
 $9 = HEAP32[$8>>2]|0; //@line 112 "../../iup_text.c"
 $10 = (_iupArrayCount($9)|0); //@line 112 "../../iup_text.c"
 $3 = $10; //@line 112 "../../iup_text.c"
 $11 = $1; //@line 113 "../../iup_text.c"
 $12 = ((($11)) + 72|0); //@line 113 "../../iup_text.c"
 $13 = HEAP32[$12>>2]|0; //@line 113 "../../iup_text.c"
 $14 = ((($13)) + 36|0); //@line 113 "../../iup_text.c"
 $15 = HEAP32[$14>>2]|0; //@line 113 "../../iup_text.c"
 $16 = (_iupArrayGetData($15)|0); //@line 113 "../../iup_text.c"
 $4 = $16; //@line 113 "../../iup_text.c"
 $2 = 0; //@line 114 "../../iup_text.c"
 while(1) {
  $17 = $2; //@line 114 "../../iup_text.c"
  $18 = $3; //@line 114 "../../iup_text.c"
  $19 = ($17|0)<($18|0); //@line 114 "../../iup_text.c"
  if (!($19)) {
   break;
  }
  $20 = $2; //@line 115 "../../iup_text.c"
  $21 = $4; //@line 115 "../../iup_text.c"
  $22 = (($21) + ($20<<2)|0); //@line 115 "../../iup_text.c"
  $23 = HEAP32[$22>>2]|0; //@line 115 "../../iup_text.c"
  _IupDestroy($23); //@line 115 "../../iup_text.c"
  $24 = $2; //@line 114 "../../iup_text.c"
  $25 = (($24) + 1)|0; //@line 114 "../../iup_text.c"
  $2 = $25; //@line 114 "../../iup_text.c"
 }
 $26 = $1; //@line 116 "../../iup_text.c"
 $27 = ((($26)) + 72|0); //@line 116 "../../iup_text.c"
 $28 = HEAP32[$27>>2]|0; //@line 116 "../../iup_text.c"
 $29 = ((($28)) + 36|0); //@line 116 "../../iup_text.c"
 $30 = HEAP32[$29>>2]|0; //@line 116 "../../iup_text.c"
 _iupArrayDestroy($30); //@line 116 "../../iup_text.c"
 $31 = $1; //@line 117 "../../iup_text.c"
 $32 = ((($31)) + 72|0); //@line 117 "../../iup_text.c"
 $33 = HEAP32[$32>>2]|0; //@line 117 "../../iup_text.c"
 $34 = ((($33)) + 36|0); //@line 117 "../../iup_text.c"
 HEAP32[$34>>2] = 0; //@line 117 "../../iup_text.c"
 STACKTOP = sp;return; //@line 118 "../../iup_text.c"
}
function _iupMultilineNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupRegisterFindClass(17470)|0); //@line 641 "../../iup_text.c"
 $2 = (_iupClassNew($1)|0); //@line 641 "../../iup_text.c"
 $0 = $2; //@line 641 "../../iup_text.c"
 $3 = $0; //@line 643 "../../iup_text.c"
 HEAP32[$3>>2] = 17475; //@line 643 "../../iup_text.c"
 $4 = $0; //@line 644 "../../iup_text.c"
 $5 = ((($4)) + 4|0); //@line 644 "../../iup_text.c"
 HEAP32[$5>>2] = 17485; //@line 644 "../../iup_text.c"
 $6 = $0; //@line 645 "../../iup_text.c"
 $7 = ((($6)) + 8|0); //@line 645 "../../iup_text.c"
 HEAP32[$7>>2] = 1; //@line 645 "../../iup_text.c"
 $8 = $0; //@line 646 "../../iup_text.c"
 $9 = ((($8)) + 12|0); //@line 646 "../../iup_text.c"
 HEAP32[$9>>2] = 0; //@line 646 "../../iup_text.c"
 $10 = $0; //@line 647 "../../iup_text.c"
 $11 = ((($10)) + 16|0); //@line 647 "../../iup_text.c"
 HEAP32[$11>>2] = 1; //@line 647 "../../iup_text.c"
 $12 = $0; //@line 649 "../../iup_text.c"
 $13 = ((($12)) + 40|0); //@line 649 "../../iup_text.c"
 HEAP32[$13>>2] = 481; //@line 649 "../../iup_text.c"
 $14 = $0; //@line 651 "../../iup_text.c"
 STACKTOP = sp;return ($14|0); //@line 651 "../../iup_text.c"
}
function _iMultilineCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 446 "../../iup_text.c"
 $5 = ((($4)) + 72|0); //@line 446 "../../iup_text.c"
 $6 = HEAP32[$5>>2]|0; //@line 446 "../../iup_text.c"
 HEAP32[$6>>2] = 1; //@line 446 "../../iup_text.c"
 $7 = $2; //@line 447 "../../iup_text.c"
 $8 = ((($7)) + 72|0); //@line 447 "../../iup_text.c"
 $9 = HEAP32[$8>>2]|0; //@line 447 "../../iup_text.c"
 $10 = ((($9)) + 20|0); //@line 447 "../../iup_text.c"
 HEAP32[$10>>2] = 3; //@line 447 "../../iup_text.c"
 $11 = $2; //@line 448 "../../iup_text.c"
 _iupAttribSet($11,17729,19938); //@line 448 "../../iup_text.c"
 STACKTOP = sp;return 0; //@line 449 "../../iup_text.c"
}
function _IupTimer() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_IupCreate(17760)|0); //@line 61 "../../iup_timer.c"
 return ($0|0); //@line 61 "../../iup_timer.c"
}
function _iupTimerNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 66 "../../iup_timer.c"
 $0 = $1; //@line 66 "../../iup_timer.c"
 $2 = $0; //@line 68 "../../iup_timer.c"
 HEAP32[$2>>2] = 17760; //@line 68 "../../iup_timer.c"
 $3 = $0; //@line 69 "../../iup_timer.c"
 $4 = ((($3)) + 4|0); //@line 69 "../../iup_timer.c"
 HEAP32[$4>>2] = 0; //@line 69 "../../iup_timer.c"
 $5 = $0; //@line 70 "../../iup_timer.c"
 $6 = ((($5)) + 8|0); //@line 70 "../../iup_timer.c"
 HEAP32[$6>>2] = 1; //@line 70 "../../iup_timer.c"
 $7 = $0; //@line 71 "../../iup_timer.c"
 $8 = ((($7)) + 12|0); //@line 71 "../../iup_timer.c"
 HEAP32[$8>>2] = 0; //@line 71 "../../iup_timer.c"
 $9 = $0; //@line 72 "../../iup_timer.c"
 $10 = ((($9)) + 16|0); //@line 72 "../../iup_timer.c"
 HEAP32[$10>>2] = 0; //@line 72 "../../iup_timer.c"
 $11 = $0; //@line 75 "../../iup_timer.c"
 $12 = ((($11)) + 32|0); //@line 75 "../../iup_timer.c"
 HEAP32[$12>>2] = 482; //@line 75 "../../iup_timer.c"
 $13 = $0; //@line 76 "../../iup_timer.c"
 $14 = ((($13)) + 52|0); //@line 76 "../../iup_timer.c"
 HEAP32[$14>>2] = 483; //@line 76 "../../iup_timer.c"
 $15 = $0; //@line 79 "../../iup_timer.c"
 _iupClassRegisterCallback($15,17766,362470); //@line 79 "../../iup_timer.c"
 $16 = $0; //@line 82 "../../iup_timer.c"
 _iupClassRegisterAttribute($16,17776,484,0,0,0,45); //@line 82 "../../iup_timer.c"
 $17 = $0; //@line 83 "../../iup_timer.c"
 _iupClassRegisterAttribute($17,17780,485,486,0,0,9); //@line 83 "../../iup_timer.c"
 $18 = $0; //@line 84 "../../iup_timer.c"
 _iupClassRegisterAttribute($18,17784,0,0,0,0,9); //@line 84 "../../iup_timer.c"
 $19 = $0; //@line 86 "../../iup_timer.c"
 _iupdrvTimerInitClass($19); //@line 86 "../../iup_timer.c"
 $20 = $0; //@line 88 "../../iup_timer.c"
 STACKTOP = sp;return ($20|0); //@line 88 "../../iup_timer.c"
}
function _iTimerDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 54 "../../iup_timer.c"
 _iupdrvTimerStop($2); //@line 54 "../../iup_timer.c"
 STACKTOP = sp;return; //@line 55 "../../iup_timer.c"
}
function _iTimerGetWidAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 49 "../../iup_timer.c"
 $3 = ((($2)) + 12|0); //@line 49 "../../iup_timer.c"
 $4 = HEAP32[$3>>2]|0; //@line 49 "../../iup_timer.c"
 $5 = (_iupStrReturnInt($4)|0); //@line 49 "../../iup_timer.c"
 STACKTOP = sp;return ($5|0); //@line 49 "../../iup_timer.c"
}
function _iTimerGetRunAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 44 "../../iup_timer.c"
 $3 = ((($2)) + 12|0); //@line 44 "../../iup_timer.c"
 $4 = HEAP32[$3>>2]|0; //@line 44 "../../iup_timer.c"
 $5 = ($4|0)>(0); //@line 44 "../../iup_timer.c"
 $6 = $5&1; //@line 44 "../../iup_timer.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 44 "../../iup_timer.c"
 STACKTOP = sp;return ($7|0); //@line 44 "../../iup_timer.c"
}
function _iTimerSetRunAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 34 "../../iup_timer.c"
 $5 = (_iupStrBoolean($4)|0); //@line 34 "../../iup_timer.c"
 $6 = ($5|0)!=(0); //@line 34 "../../iup_timer.c"
 $7 = $2; //@line 35 "../../iup_timer.c"
 if ($6) {
  _iupdrvTimerRun($7); //@line 35 "../../iup_timer.c"
  STACKTOP = sp;return 0; //@line 39 "../../iup_timer.c"
 } else {
  _iupdrvTimerStop($7); //@line 37 "../../iup_timer.c"
  STACKTOP = sp;return 0; //@line 39 "../../iup_timer.c"
 }
 return (0)|0;
}
function _iupToggleNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 115 "../../iup_toggle.c"
 $0 = $1; //@line 115 "../../iup_toggle.c"
 $2 = $0; //@line 117 "../../iup_toggle.c"
 HEAP32[$2>>2] = 17789; //@line 117 "../../iup_toggle.c"
 $3 = $0; //@line 118 "../../iup_toggle.c"
 $4 = ((($3)) + 4|0); //@line 118 "../../iup_toggle.c"
 HEAP32[$4>>2] = 17796; //@line 118 "../../iup_toggle.c"
 $5 = $0; //@line 119 "../../iup_toggle.c"
 $6 = ((($5)) + 8|0); //@line 119 "../../iup_toggle.c"
 HEAP32[$6>>2] = 1; //@line 119 "../../iup_toggle.c"
 $7 = $0; //@line 120 "../../iup_toggle.c"
 $8 = ((($7)) + 12|0); //@line 120 "../../iup_toggle.c"
 HEAP32[$8>>2] = 0; //@line 120 "../../iup_toggle.c"
 $9 = $0; //@line 121 "../../iup_toggle.c"
 $10 = ((($9)) + 16|0); //@line 121 "../../iup_toggle.c"
 HEAP32[$10>>2] = 1; //@line 121 "../../iup_toggle.c"
 $11 = $0; //@line 124 "../../iup_toggle.c"
 $12 = ((($11)) + 32|0); //@line 124 "../../iup_toggle.c"
 HEAP32[$12>>2] = 487; //@line 124 "../../iup_toggle.c"
 $13 = $0; //@line 125 "../../iup_toggle.c"
 $14 = ((($13)) + 40|0); //@line 125 "../../iup_toggle.c"
 HEAP32[$14>>2] = 488; //@line 125 "../../iup_toggle.c"
 $15 = $0; //@line 126 "../../iup_toggle.c"
 $16 = ((($15)) + 76|0); //@line 126 "../../iup_toggle.c"
 HEAP32[$16>>2] = 489; //@line 126 "../../iup_toggle.c"
 $17 = $0; //@line 127 "../../iup_toggle.c"
 $18 = ((($17)) + 72|0); //@line 127 "../../iup_toggle.c"
 HEAP32[$18>>2] = 47; //@line 127 "../../iup_toggle.c"
 $19 = $0; //@line 128 "../../iup_toggle.c"
 $20 = ((($19)) + 48|0); //@line 128 "../../iup_toggle.c"
 HEAP32[$20>>2] = 48; //@line 128 "../../iup_toggle.c"
 $21 = $0; //@line 131 "../../iup_toggle.c"
 _iupClassRegisterCallback($21,20479,17949); //@line 131 "../../iup_toggle.c"
 $22 = $0; //@line 132 "../../iup_toggle.c"
 _iupClassRegisterCallback($22,19918,362470); //@line 132 "../../iup_toggle.c"
 $23 = $0; //@line 135 "../../iup_toggle.c"
 _iupBaseRegisterCommonCallbacks($23); //@line 135 "../../iup_toggle.c"
 $24 = $0; //@line 138 "../../iup_toggle.c"
 _iupBaseRegisterCommonAttrib($24); //@line 138 "../../iup_toggle.c"
 $25 = $0; //@line 141 "../../iup_toggle.c"
 _iupBaseRegisterVisualAttrib($25); //@line 141 "../../iup_toggle.c"
 $26 = $0; //@line 143 "../../iup_toggle.c"
 _iupClassRegisterAttribute($26,17799,490,0,0,0,33); //@line 143 "../../iup_toggle.c"
 $27 = $0; //@line 144 "../../iup_toggle.c"
 _iupClassRegisterAttribute($27,19761,0,0,0,0,1); //@line 144 "../../iup_toggle.c"
 $28 = $0; //@line 145 "../../iup_toggle.c"
 _iupClassRegisterAttribute($28,17805,491,492,(-1),17810,8); //@line 145 "../../iup_toggle.c"
 $29 = $0; //@line 147 "../../iup_toggle.c"
 _iupdrvToggleInitClass($29); //@line 147 "../../iup_toggle.c"
 $30 = $0; //@line 149 "../../iup_toggle.c"
 STACKTOP = sp;return ($30|0); //@line 149 "../../iup_toggle.c"
}
function _iToggleCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 48 "../../iup_toggle.c"
 $5 = ($4|0)!=(0|0); //@line 48 "../../iup_toggle.c"
 if ($5) {
  $6 = $3; //@line 50 "../../iup_toggle.c"
  $7 = HEAP32[$6>>2]|0; //@line 50 "../../iup_toggle.c"
  $8 = ($7|0)!=(0|0); //@line 50 "../../iup_toggle.c"
  if ($8) {
   $9 = $2; //@line 50 "../../iup_toggle.c"
   $10 = $3; //@line 50 "../../iup_toggle.c"
   $11 = HEAP32[$10>>2]|0; //@line 50 "../../iup_toggle.c"
   _iupAttribSetStr($9,20508,$11); //@line 50 "../../iup_toggle.c"
  }
  $12 = $3; //@line 51 "../../iup_toggle.c"
  $13 = ((($12)) + 4|0); //@line 51 "../../iup_toggle.c"
  $14 = HEAP32[$13>>2]|0; //@line 51 "../../iup_toggle.c"
  $15 = ($14|0)!=(0|0); //@line 51 "../../iup_toggle.c"
  if ($15) {
   $16 = $2; //@line 51 "../../iup_toggle.c"
   $17 = $3; //@line 51 "../../iup_toggle.c"
   $18 = ((($17)) + 4|0); //@line 51 "../../iup_toggle.c"
   $19 = HEAP32[$18>>2]|0; //@line 51 "../../iup_toggle.c"
   _iupAttribSetStr($16,20479,$19); //@line 51 "../../iup_toggle.c"
  }
 }
 $20 = (_calloc(1,20)|0); //@line 53 "../../iup_toggle.c"
 $21 = $2; //@line 53 "../../iup_toggle.c"
 $22 = ((($21)) + 72|0); //@line 53 "../../iup_toggle.c"
 HEAP32[$22>>2] = $20; //@line 53 "../../iup_toggle.c"
 STACKTOP = sp;return 0; //@line 54 "../../iup_toggle.c"
}
function _iToggleComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $8 = sp + 20|0;
 $9 = sp + 16|0;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 HEAP32[$8>>2] = 0; //@line 59 "../../iup_toggle.c"
 HEAP32[$9>>2] = 0; //@line 60 "../../iup_toggle.c"
 $14 = $4; //@line 61 "../../iup_toggle.c"
 $15 = ((($14)) + 72|0); //@line 61 "../../iup_toggle.c"
 $16 = HEAP32[$15>>2]|0; //@line 61 "../../iup_toggle.c"
 $17 = HEAP32[$16>>2]|0; //@line 61 "../../iup_toggle.c"
 $10 = $17; //@line 61 "../../iup_toggle.c"
 $18 = $4; //@line 64 "../../iup_toggle.c"
 $19 = ((($18)) + 16|0); //@line 64 "../../iup_toggle.c"
 $20 = HEAP32[$19>>2]|0; //@line 64 "../../iup_toggle.c"
 $21 = ($20|0)!=(0|0); //@line 64 "../../iup_toggle.c"
 do {
  if (!($21)) {
   $22 = $4; //@line 67 "../../iup_toggle.c"
   $23 = (_iupAttribGet($22,20169)|0); //@line 67 "../../iup_toggle.c"
   $11 = $23; //@line 67 "../../iup_toggle.c"
   $24 = $11; //@line 68 "../../iup_toggle.c"
   $25 = ($24|0)!=(0|0); //@line 68 "../../iup_toggle.c"
   if ($25) {
    $10 = 0; //@line 69 "../../iup_toggle.c"
    break;
   } else {
    $10 = 1; //@line 71 "../../iup_toggle.c"
    break;
   }
  }
 } while(0);
 $26 = $10; //@line 74 "../../iup_toggle.c"
 $27 = ($26|0)==(0); //@line 74 "../../iup_toggle.c"
 $28 = $4; //@line 76 "../../iup_toggle.c"
 if ($27) {
  $29 = (_iupAttribGet($28,20169)|0); //@line 76 "../../iup_toggle.c"
  _iupImageGetInfo($29,$8,$9,0); //@line 76 "../../iup_toggle.c"
  _iupdrvButtonAddBorders($8,$9); //@line 79 "../../iup_toggle.c"
  $30 = $4; //@line 81 "../../iup_toggle.c"
  $31 = ((($30)) + 72|0); //@line 81 "../../iup_toggle.c"
  $32 = HEAP32[$31>>2]|0; //@line 81 "../../iup_toggle.c"
  $33 = ((($32)) + 12|0); //@line 81 "../../iup_toggle.c"
  $34 = HEAP32[$33>>2]|0; //@line 81 "../../iup_toggle.c"
  $35 = $34<<1; //@line 81 "../../iup_toggle.c"
  $36 = HEAP32[$8>>2]|0; //@line 81 "../../iup_toggle.c"
  $37 = (($36) + ($35))|0; //@line 81 "../../iup_toggle.c"
  HEAP32[$8>>2] = $37; //@line 81 "../../iup_toggle.c"
  $38 = $4; //@line 82 "../../iup_toggle.c"
  $39 = ((($38)) + 72|0); //@line 82 "../../iup_toggle.c"
  $40 = HEAP32[$39>>2]|0; //@line 82 "../../iup_toggle.c"
  $41 = ((($40)) + 16|0); //@line 82 "../../iup_toggle.c"
  $42 = HEAP32[$41>>2]|0; //@line 82 "../../iup_toggle.c"
  $43 = $42<<1; //@line 82 "../../iup_toggle.c"
  $44 = HEAP32[$9>>2]|0; //@line 82 "../../iup_toggle.c"
  $45 = (($44) + ($43))|0; //@line 82 "../../iup_toggle.c"
  HEAP32[$9>>2] = $45; //@line 82 "../../iup_toggle.c"
 } else {
  $46 = (_IupGetAttribute($28,20508)|0); //@line 87 "../../iup_toggle.c"
  $12 = $46; //@line 87 "../../iup_toggle.c"
  $47 = $12; //@line 88 "../../iup_toggle.c"
  $48 = (_iupStrProcessMnemonic($47,0,0)|0); //@line 88 "../../iup_toggle.c"
  $13 = $48; //@line 88 "../../iup_toggle.c"
  $49 = $4; //@line 89 "../../iup_toggle.c"
  $50 = $13; //@line 89 "../../iup_toggle.c"
  _iupdrvFontGetMultiLineStringSize($49,$50,$8,$9); //@line 89 "../../iup_toggle.c"
  $51 = $13; //@line 91 "../../iup_toggle.c"
  _iupdrvToggleAddCheckBox($8,$9,$51); //@line 91 "../../iup_toggle.c"
  $52 = $13; //@line 93 "../../iup_toggle.c"
  $53 = ($52|0)!=(0|0); //@line 93 "../../iup_toggle.c"
  if ($53) {
   $54 = $13; //@line 93 "../../iup_toggle.c"
   $55 = $12; //@line 93 "../../iup_toggle.c"
   $56 = ($54|0)!=($55|0); //@line 93 "../../iup_toggle.c"
   if ($56) {
    $57 = $13; //@line 93 "../../iup_toggle.c"
    _free($57); //@line 93 "../../iup_toggle.c"
   }
  }
 }
 $58 = HEAP32[$8>>2]|0; //@line 96 "../../iup_toggle.c"
 $59 = $5; //@line 96 "../../iup_toggle.c"
 HEAP32[$59>>2] = $58; //@line 96 "../../iup_toggle.c"
 $60 = HEAP32[$9>>2]|0; //@line 97 "../../iup_toggle.c"
 $61 = $6; //@line 97 "../../iup_toggle.c"
 HEAP32[$61>>2] = $60; //@line 97 "../../iup_toggle.c"
 STACKTOP = sp;return; //@line 98 "../../iup_toggle.c"
}
function _iToggleGetRadioAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 26 "../../iup_toggle.c"
 $3 = ((($2)) + 72|0); //@line 26 "../../iup_toggle.c"
 $4 = HEAP32[$3>>2]|0; //@line 26 "../../iup_toggle.c"
 $5 = ((($4)) + 4|0); //@line 26 "../../iup_toggle.c"
 $6 = HEAP32[$5>>2]|0; //@line 26 "../../iup_toggle.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 26 "../../iup_toggle.c"
 STACKTOP = sp;return ($7|0); //@line 26 "../../iup_toggle.c"
}
function _iToggleGetFlatAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 38 "../../iup_toggle.c"
 $3 = ((($2)) + 72|0); //@line 38 "../../iup_toggle.c"
 $4 = HEAP32[$3>>2]|0; //@line 38 "../../iup_toggle.c"
 $5 = ((($4)) + 8|0); //@line 38 "../../iup_toggle.c"
 $6 = HEAP32[$5>>2]|0; //@line 38 "../../iup_toggle.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 38 "../../iup_toggle.c"
 STACKTOP = sp;return ($7|0); //@line 38 "../../iup_toggle.c"
}
function _iToggleSetFlatAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 31 "../../iup_toggle.c"
 $5 = ((($4)) + 16|0); //@line 31 "../../iup_toggle.c"
 $6 = HEAP32[$5>>2]|0; //@line 31 "../../iup_toggle.c"
 $7 = ($6|0)!=(0|0); //@line 31 "../../iup_toggle.c"
 if ($7) {
  STACKTOP = sp;return 0; //@line 33 "../../iup_toggle.c"
 }
 $8 = $3; //@line 32 "../../iup_toggle.c"
 $9 = (_iupStrBoolean($8)|0); //@line 32 "../../iup_toggle.c"
 $10 = $2; //@line 32 "../../iup_toggle.c"
 $11 = ((($10)) + 72|0); //@line 32 "../../iup_toggle.c"
 $12 = HEAP32[$11>>2]|0; //@line 32 "../../iup_toggle.c"
 $13 = ((($12)) + 8|0); //@line 32 "../../iup_toggle.c"
 HEAP32[$13>>2] = $9; //@line 32 "../../iup_toggle.c"
 STACKTOP = sp;return 0; //@line 33 "../../iup_toggle.c"
}
function _iupTreeFindNodeId($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 244 "../../iup_tree.c"
 $7 = ((($6)) + 72|0); //@line 244 "../../iup_tree.c"
 $8 = HEAP32[$7>>2]|0; //@line 244 "../../iup_tree.c"
 $9 = ((($8)) + 52|0); //@line 244 "../../iup_tree.c"
 $10 = HEAP32[$9>>2]|0; //@line 244 "../../iup_tree.c"
 $5 = $10; //@line 244 "../../iup_tree.c"
 while(1) {
  $11 = $5; //@line 245 "../../iup_tree.c"
  $12 = HEAP32[$11>>2]|0; //@line 245 "../../iup_tree.c"
  $13 = $4; //@line 245 "../../iup_tree.c"
  $14 = ($12|0)!=($13|0); //@line 245 "../../iup_tree.c"
  if ($14) {
   $15 = $5; //@line 246 "../../iup_tree.c"
   $16 = HEAP32[$15>>2]|0; //@line 246 "../../iup_tree.c"
   $17 = ($16|0)!=(0|0); //@line 246 "../../iup_tree.c"
   $33 = $17;
  } else {
   $33 = 0;
  }
  $18 = $5; //@line 247 "../../iup_tree.c"
  if (!($33)) {
   break;
  }
  $19 = ((($18)) + 8|0); //@line 247 "../../iup_tree.c"
  $5 = $19; //@line 247 "../../iup_tree.c"
 }
 $20 = HEAP32[$18>>2]|0; //@line 249 "../../iup_tree.c"
 $21 = ($20|0)!=(0|0); //@line 249 "../../iup_tree.c"
 if ($21) {
  $22 = $5; //@line 250 "../../iup_tree.c"
  $23 = $3; //@line 250 "../../iup_tree.c"
  $24 = ((($23)) + 72|0); //@line 250 "../../iup_tree.c"
  $25 = HEAP32[$24>>2]|0; //@line 250 "../../iup_tree.c"
  $26 = ((($25)) + 52|0); //@line 250 "../../iup_tree.c"
  $27 = HEAP32[$26>>2]|0; //@line 250 "../../iup_tree.c"
  $28 = $22; //@line 250 "../../iup_tree.c"
  $29 = $27; //@line 250 "../../iup_tree.c"
  $30 = (($28) - ($29))|0; //@line 250 "../../iup_tree.c"
  $31 = (($30|0) / 8)&-1; //@line 250 "../../iup_tree.c"
  $2 = $31; //@line 250 "../../iup_tree.c"
  $32 = $2; //@line 253 "../../iup_tree.c"
  STACKTOP = sp;return ($32|0); //@line 253 "../../iup_tree.c"
 } else {
  $2 = -1; //@line 252 "../../iup_tree.c"
  $32 = $2; //@line 253 "../../iup_tree.c"
  STACKTOP = sp;return ($32|0); //@line 253 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iupTreeGetNode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $4; //@line 278 "../../iup_tree.c"
 $6 = ($5|0)>=(0); //@line 278 "../../iup_tree.c"
 if ($6) {
  $7 = $4; //@line 278 "../../iup_tree.c"
  $8 = $3; //@line 278 "../../iup_tree.c"
  $9 = ((($8)) + 72|0); //@line 278 "../../iup_tree.c"
  $10 = HEAP32[$9>>2]|0; //@line 278 "../../iup_tree.c"
  $11 = ((($10)) + 60|0); //@line 278 "../../iup_tree.c"
  $12 = HEAP32[$11>>2]|0; //@line 278 "../../iup_tree.c"
  $13 = ($7|0)<($12|0); //@line 278 "../../iup_tree.c"
  if ($13) {
   $14 = $4; //@line 279 "../../iup_tree.c"
   $15 = $3; //@line 279 "../../iup_tree.c"
   $16 = ((($15)) + 72|0); //@line 279 "../../iup_tree.c"
   $17 = HEAP32[$16>>2]|0; //@line 279 "../../iup_tree.c"
   $18 = ((($17)) + 52|0); //@line 279 "../../iup_tree.c"
   $19 = HEAP32[$18>>2]|0; //@line 279 "../../iup_tree.c"
   $20 = (($19) + ($14<<3)|0); //@line 279 "../../iup_tree.c"
   $21 = HEAP32[$20>>2]|0; //@line 279 "../../iup_tree.c"
   $2 = $21; //@line 279 "../../iup_tree.c"
   $32 = $2; //@line 284 "../../iup_tree.c"
   STACKTOP = sp;return ($32|0); //@line 284 "../../iup_tree.c"
  }
 }
 $22 = $4; //@line 280 "../../iup_tree.c"
 $23 = ($22|0)==(-10); //@line 280 "../../iup_tree.c"
 if ($23) {
  $24 = $3; //@line 280 "../../iup_tree.c"
  $25 = ((($24)) + 72|0); //@line 280 "../../iup_tree.c"
  $26 = HEAP32[$25>>2]|0; //@line 280 "../../iup_tree.c"
  $27 = ((($26)) + 60|0); //@line 280 "../../iup_tree.c"
  $28 = HEAP32[$27>>2]|0; //@line 280 "../../iup_tree.c"
  $29 = ($28|0)!=(0); //@line 280 "../../iup_tree.c"
  if ($29) {
   $30 = $3; //@line 281 "../../iup_tree.c"
   $31 = (_iupdrvTreeGetFocusNode($30)|0); //@line 281 "../../iup_tree.c"
   $2 = $31; //@line 281 "../../iup_tree.c"
   $32 = $2; //@line 284 "../../iup_tree.c"
   STACKTOP = sp;return ($32|0); //@line 284 "../../iup_tree.c"
  }
 }
 $2 = 0; //@line 283 "../../iup_tree.c"
 $32 = $2; //@line 284 "../../iup_tree.c"
 STACKTOP = sp;return ($32|0); //@line 284 "../../iup_tree.c"
}
function _iupTreeNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 807 "../../iup_tree.c"
 $0 = $1; //@line 807 "../../iup_tree.c"
 $2 = $0; //@line 809 "../../iup_tree.c"
 HEAP32[$2>>2] = 17858; //@line 809 "../../iup_tree.c"
 $3 = $0; //@line 810 "../../iup_tree.c"
 $4 = ((($3)) + 4|0); //@line 810 "../../iup_tree.c"
 HEAP32[$4>>2] = 0; //@line 810 "../../iup_tree.c"
 $5 = $0; //@line 811 "../../iup_tree.c"
 $6 = ((($5)) + 8|0); //@line 811 "../../iup_tree.c"
 HEAP32[$6>>2] = 1; //@line 811 "../../iup_tree.c"
 $7 = $0; //@line 812 "../../iup_tree.c"
 $8 = ((($7)) + 12|0); //@line 812 "../../iup_tree.c"
 HEAP32[$8>>2] = 0; //@line 812 "../../iup_tree.c"
 $9 = $0; //@line 813 "../../iup_tree.c"
 $10 = ((($9)) + 16|0); //@line 813 "../../iup_tree.c"
 HEAP32[$10>>2] = 1; //@line 813 "../../iup_tree.c"
 $11 = $0; //@line 814 "../../iup_tree.c"
 $12 = ((($11)) + 20|0); //@line 814 "../../iup_tree.c"
 HEAP32[$12>>2] = 1; //@line 814 "../../iup_tree.c"
 $13 = $0; //@line 817 "../../iup_tree.c"
 $14 = ((($13)) + 32|0); //@line 817 "../../iup_tree.c"
 HEAP32[$14>>2] = 493; //@line 817 "../../iup_tree.c"
 $15 = $0; //@line 818 "../../iup_tree.c"
 $16 = ((($15)) + 40|0); //@line 818 "../../iup_tree.c"
 HEAP32[$16>>2] = 494; //@line 818 "../../iup_tree.c"
 $17 = $0; //@line 819 "../../iup_tree.c"
 $18 = ((($17)) + 72|0); //@line 819 "../../iup_tree.c"
 HEAP32[$18>>2] = 47; //@line 819 "../../iup_tree.c"
 $19 = $0; //@line 820 "../../iup_tree.c"
 $20 = ((($19)) + 52|0); //@line 820 "../../iup_tree.c"
 HEAP32[$20>>2] = 495; //@line 820 "../../iup_tree.c"
 $21 = $0; //@line 823 "../../iup_tree.c"
 _iupClassRegisterCallback($21,17863,17878); //@line 823 "../../iup_tree.c"
 $22 = $0; //@line 824 "../../iup_tree.c"
 _iupClassRegisterCallback($22,17881,17878); //@line 824 "../../iup_tree.c"
 $23 = $0; //@line 825 "../../iup_tree.c"
 _iupClassRegisterCallback($23,17894,17912); //@line 825 "../../iup_tree.c"
 $24 = $0; //@line 826 "../../iup_tree.c"
 _iupClassRegisterCallback($24,17915,17912); //@line 826 "../../iup_tree.c"
 $25 = $0; //@line 827 "../../iup_tree.c"
 _iupClassRegisterCallback($25,17935,17949); //@line 827 "../../iup_tree.c"
 $26 = $0; //@line 828 "../../iup_tree.c"
 _iupClassRegisterCallback($26,17951,17949); //@line 828 "../../iup_tree.c"
 $27 = $0; //@line 829 "../../iup_tree.c"
 _iupClassRegisterCallback($27,17966,17949); //@line 829 "../../iup_tree.c"
 $28 = $0; //@line 830 "../../iup_tree.c"
 _iupClassRegisterCallback($28,17981,17949); //@line 830 "../../iup_tree.c"
 $29 = $0; //@line 831 "../../iup_tree.c"
 _iupClassRegisterCallback($29,17995,18005); //@line 831 "../../iup_tree.c"
 $30 = $0; //@line 832 "../../iup_tree.c"
 _iupClassRegisterCallback($30,18008,18020); //@line 832 "../../iup_tree.c"
 $31 = $0; //@line 833 "../../iup_tree.c"
 _iupClassRegisterCallback($31,18025,17949); //@line 833 "../../iup_tree.c"
 $32 = $0; //@line 834 "../../iup_tree.c"
 _iupClassRegisterCallback($32,18039,18049); //@line 834 "../../iup_tree.c"
 $33 = $0; //@line 835 "../../iup_tree.c"
 _iupClassRegisterCallback($33,20522,18053); //@line 835 "../../iup_tree.c"
 $34 = $0; //@line 838 "../../iup_tree.c"
 _iupBaseRegisterCommonCallbacks($34); //@line 838 "../../iup_tree.c"
 $35 = $0; //@line 841 "../../iup_tree.c"
 _iupBaseRegisterCommonAttrib($35); //@line 841 "../../iup_tree.c"
 $36 = $0; //@line 844 "../../iup_tree.c"
 _iupBaseRegisterVisualAttrib($36); //@line 844 "../../iup_tree.c"
 $37 = $0; //@line 847 "../../iup_tree.c"
 _iupdrvRegisterDragDropAttrib($37); //@line 847 "../../iup_tree.c"
 $38 = $0; //@line 850 "../../iup_tree.c"
 _iupClassRegisterAttribute($38,18059,0,496,0,0,1); //@line 850 "../../iup_tree.c"
 $39 = $0; //@line 851 "../../iup_tree.c"
 _iupClassRegisterAttribute($39,18072,497,498,0,0,9); //@line 851 "../../iup_tree.c"
 $40 = $0; //@line 852 "../../iup_tree.c"
 _iupClassRegisterAttribute($40,18085,499,500,0,0,9); //@line 852 "../../iup_tree.c"
 $41 = $0; //@line 853 "../../iup_tree.c"
 _iupClassRegisterAttribute($41,18096,501,502,0,0,9); //@line 853 "../../iup_tree.c"
 $42 = $0; //@line 854 "../../iup_tree.c"
 _iupClassRegisterAttribute($42,18107,503,504,(-1),20441,9); //@line 854 "../../iup_tree.c"
 $43 = $0; //@line 855 "../../iup_tree.c"
 _iupClassRegisterAttribute($43,18119,505,0,0,0,35); //@line 855 "../../iup_tree.c"
 $44 = $0; //@line 856 "../../iup_tree.c"
 _iupClassRegisterAttribute($44,17846,0,0,(-1),0,33); //@line 856 "../../iup_tree.c"
 $45 = $0; //@line 857 "../../iup_tree.c"
 _iupClassRegisterAttribute($45,18125,0,0,(-1),20441,1); //@line 857 "../../iup_tree.c"
 $46 = $0; //@line 858 "../../iup_tree.c"
 _iupClassRegisterAttribute($46,18133,0,0,(-1),0,1); //@line 858 "../../iup_tree.c"
 $47 = $0; //@line 861 "../../iup_tree.c"
 _iupClassRegisterAttribute($47,18147,0,506,0,0,8); //@line 861 "../../iup_tree.c"
 $48 = $0; //@line 862 "../../iup_tree.c"
 _iupClassRegisterAttribute($48,18152,0,507,0,0,8); //@line 862 "../../iup_tree.c"
 $49 = $0; //@line 863 "../../iup_tree.c"
 _iupClassRegisterAttribute($49,18158,508,509,(-1),18167,8); //@line 863 "../../iup_tree.c"
 $50 = $0; //@line 866 "../../iup_tree.c"
 _iupClassRegisterAttributeId($50,18174,0,510,73); //@line 866 "../../iup_tree.c"
 $51 = $0; //@line 867 "../../iup_tree.c"
 _iupClassRegisterAttributeId($51,18182,0,511,73); //@line 867 "../../iup_tree.c"
 $52 = $0; //@line 868 "../../iup_tree.c"
 _iupClassRegisterAttributeId($52,18192,0,512,73); //@line 868 "../../iup_tree.c"
 $53 = $0; //@line 869 "../../iup_tree.c"
 _iupClassRegisterAttributeId($53,18203,0,513,73); //@line 869 "../../iup_tree.c"
 $54 = $0; //@line 872 "../../iup_tree.c"
 _iupClassRegisterAttributeId($54,18216,514,0,33); //@line 872 "../../iup_tree.c"
 $55 = $0; //@line 873 "../../iup_tree.c"
 _iupClassRegisterAttributeId($55,18232,515,516,5); //@line 873 "../../iup_tree.c"
 $56 = (_IupGetHandle(17813)|0); //@line 876 "../../iup_tree.c"
 $57 = ($56|0)!=(0|0); //@line 876 "../../iup_tree.c"
 if ($57) {
  $58 = (_IupGetHandle(18241)|0); //@line 876 "../../iup_tree.c"
  $59 = ($58|0)!=(0|0); //@line 876 "../../iup_tree.c"
  if ($59) {
   $60 = (_IupGetHandle(18250)|0); //@line 876 "../../iup_tree.c"
   $61 = ($60|0)!=(0|0); //@line 876 "../../iup_tree.c"
   if ($61) {
    $62 = $0; //@line 879 "../../iup_tree.c"
    _iupdrvTreeInitClass($62); //@line 879 "../../iup_tree.c"
    $63 = $0; //@line 881 "../../iup_tree.c"
    STACKTOP = sp;return ($63|0); //@line 881 "../../iup_tree.c"
   }
  }
 }
 _iTreeInitializeImages(); //@line 877 "../../iup_tree.c"
 $62 = $0; //@line 879 "../../iup_tree.c"
 _iupdrvTreeInitClass($62); //@line 879 "../../iup_tree.c"
 $63 = $0; //@line 881 "../../iup_tree.c"
 STACKTOP = sp;return ($63|0); //@line 881 "../../iup_tree.c"
}
function _iTreeCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = (_calloc(1,64)|0); //@line 780 "../../iup_tree.c"
 $5 = $2; //@line 780 "../../iup_tree.c"
 $6 = ((($5)) + 72|0); //@line 780 "../../iup_tree.c"
 HEAP32[$6>>2] = $4; //@line 780 "../../iup_tree.c"
 $7 = $2; //@line 782 "../../iup_tree.c"
 _IupSetAttribute($7,20008,19883); //@line 782 "../../iup_tree.c"
 $8 = $2; //@line 783 "../../iup_tree.c"
 _IupSetAttribute($8,20073,20441); //@line 783 "../../iup_tree.c"
 $9 = $2; //@line 785 "../../iup_tree.c"
 $10 = ((($9)) + 72|0); //@line 785 "../../iup_tree.c"
 $11 = HEAP32[$10>>2]|0; //@line 785 "../../iup_tree.c"
 $12 = ((($11)) + 4|0); //@line 785 "../../iup_tree.c"
 HEAP32[$12>>2] = 1; //@line 785 "../../iup_tree.c"
 $13 = $2; //@line 786 "../../iup_tree.c"
 $14 = ((($13)) + 72|0); //@line 786 "../../iup_tree.c"
 $15 = HEAP32[$14>>2]|0; //@line 786 "../../iup_tree.c"
 $16 = ((($15)) + 56|0); //@line 786 "../../iup_tree.c"
 HEAP32[$16>>2] = 20; //@line 786 "../../iup_tree.c"
 $17 = $2; //@line 787 "../../iup_tree.c"
 $18 = ((($17)) + 72|0); //@line 787 "../../iup_tree.c"
 $19 = HEAP32[$18>>2]|0; //@line 787 "../../iup_tree.c"
 $20 = ((($19)) + 56|0); //@line 787 "../../iup_tree.c"
 $21 = HEAP32[$20>>2]|0; //@line 787 "../../iup_tree.c"
 $22 = (_calloc($21,8)|0); //@line 787 "../../iup_tree.c"
 $23 = $2; //@line 787 "../../iup_tree.c"
 $24 = ((($23)) + 72|0); //@line 787 "../../iup_tree.c"
 $25 = HEAP32[$24>>2]|0; //@line 787 "../../iup_tree.c"
 $26 = ((($25)) + 52|0); //@line 787 "../../iup_tree.c"
 HEAP32[$26>>2] = $22; //@line 787 "../../iup_tree.c"
 STACKTOP = sp;return 0; //@line 789 "../../iup_tree.c"
}
function _iTreeDestroyMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 794 "../../iup_tree.c"
 $3 = ((($2)) + 72|0); //@line 794 "../../iup_tree.c"
 $4 = HEAP32[$3>>2]|0; //@line 794 "../../iup_tree.c"
 $5 = ((($4)) + 52|0); //@line 794 "../../iup_tree.c"
 $6 = HEAP32[$5>>2]|0; //@line 794 "../../iup_tree.c"
 $7 = ($6|0)!=(0|0); //@line 794 "../../iup_tree.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 796 "../../iup_tree.c"
 }
 $8 = $1; //@line 795 "../../iup_tree.c"
 $9 = ((($8)) + 72|0); //@line 795 "../../iup_tree.c"
 $10 = HEAP32[$9>>2]|0; //@line 795 "../../iup_tree.c"
 $11 = ((($10)) + 52|0); //@line 795 "../../iup_tree.c"
 $12 = HEAP32[$11>>2]|0; //@line 795 "../../iup_tree.c"
 _free($12); //@line 795 "../../iup_tree.c"
 STACKTOP = sp;return; //@line 796 "../../iup_tree.c"
}
function _iTreeSetDragDropTreeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 750 "../../iup_tree.c"
 $5 = (_iupStrBoolean($4)|0); //@line 750 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 750 "../../iup_tree.c"
 $7 = $2; //@line 753 "../../iup_tree.c"
 if ($6) {
  (_IupSetCallback($7,19768,517)|0); //@line 753 "../../iup_tree.c"
  $8 = $2; //@line 754 "../../iup_tree.c"
  (_IupSetCallback($8,19781,518)|0); //@line 754 "../../iup_tree.c"
  $9 = $2; //@line 755 "../../iup_tree.c"
  (_IupSetCallback($9,19797,519)|0); //@line 755 "../../iup_tree.c"
  $10 = $2; //@line 756 "../../iup_tree.c"
  (_IupSetCallback($10,19809,520)|0); //@line 756 "../../iup_tree.c"
  $11 = $2; //@line 757 "../../iup_tree.c"
  (_IupSetCallback($11,19820,521)|0); //@line 757 "../../iup_tree.c"
  STACKTOP = sp;return 1; //@line 769 "../../iup_tree.c"
 } else {
  (_IupSetCallback($7,19768,0)|0); //@line 762 "../../iup_tree.c"
  $12 = $2; //@line 763 "../../iup_tree.c"
  (_IupSetCallback($12,19781,0)|0); //@line 763 "../../iup_tree.c"
  $13 = $2; //@line 764 "../../iup_tree.c"
  (_IupSetCallback($13,19797,0)|0); //@line 764 "../../iup_tree.c"
  $14 = $2; //@line 765 "../../iup_tree.c"
  (_IupSetCallback($14,19809,0)|0); //@line 765 "../../iup_tree.c"
  $15 = $2; //@line 766 "../../iup_tree.c"
  (_IupSetCallback($15,19820,0)|0); //@line 766 "../../iup_tree.c"
  STACKTOP = sp;return 1; //@line 769 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeGetShowDragDropAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 523 "../../iup_tree.c"
 $3 = ((($2)) + 72|0); //@line 523 "../../iup_tree.c"
 $4 = HEAP32[$3>>2]|0; //@line 523 "../../iup_tree.c"
 $5 = ((($4)) + 8|0); //@line 523 "../../iup_tree.c"
 $6 = HEAP32[$5>>2]|0; //@line 523 "../../iup_tree.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 523 "../../iup_tree.c"
 STACKTOP = sp;return ($7|0); //@line 523 "../../iup_tree.c"
}
function _iTreeSetShowDragDropAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 529 "../../iup_tree.c"
 $6 = ((($5)) + 16|0); //@line 529 "../../iup_tree.c"
 $7 = HEAP32[$6>>2]|0; //@line 529 "../../iup_tree.c"
 $8 = ($7|0)!=(0|0); //@line 529 "../../iup_tree.c"
 if ($8) {
  $2 = 0; //@line 530 "../../iup_tree.c"
  $16 = $2; //@line 538 "../../iup_tree.c"
  STACKTOP = sp;return ($16|0); //@line 538 "../../iup_tree.c"
 }
 $9 = $4; //@line 532 "../../iup_tree.c"
 $10 = (_iupStrBoolean($9)|0); //@line 532 "../../iup_tree.c"
 $11 = ($10|0)!=(0); //@line 532 "../../iup_tree.c"
 $12 = $3; //@line 533 "../../iup_tree.c"
 $13 = ((($12)) + 72|0); //@line 533 "../../iup_tree.c"
 $14 = HEAP32[$13>>2]|0; //@line 533 "../../iup_tree.c"
 $15 = ((($14)) + 8|0); //@line 533 "../../iup_tree.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 533 "../../iup_tree.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 535 "../../iup_tree.c"
 }
 $2 = 0; //@line 537 "../../iup_tree.c"
 $16 = $2; //@line 538 "../../iup_tree.c"
 STACKTOP = sp;return ($16|0); //@line 538 "../../iup_tree.c"
}
function _iTreeGetShowRenameAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 483 "../../iup_tree.c"
 $3 = ((($2)) + 72|0); //@line 483 "../../iup_tree.c"
 $4 = HEAP32[$3>>2]|0; //@line 483 "../../iup_tree.c"
 $5 = ((($4)) + 12|0); //@line 483 "../../iup_tree.c"
 $6 = HEAP32[$5>>2]|0; //@line 483 "../../iup_tree.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 483 "../../iup_tree.c"
 STACKTOP = sp;return ($7|0); //@line 483 "../../iup_tree.c"
}
function _iTreeSetShowRenameAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 488 "../../iup_tree.c"
 $5 = (_iupStrBoolean($4)|0); //@line 488 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 488 "../../iup_tree.c"
 $7 = $2; //@line 489 "../../iup_tree.c"
 $8 = ((($7)) + 72|0); //@line 489 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 489 "../../iup_tree.c"
 $10 = ((($9)) + 12|0); //@line 489 "../../iup_tree.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 489 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 493 "../../iup_tree.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 491 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 493 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeGetShowToggleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 498 "../../iup_tree.c"
 $4 = ((($3)) + 72|0); //@line 498 "../../iup_tree.c"
 $5 = HEAP32[$4>>2]|0; //@line 498 "../../iup_tree.c"
 $6 = ((($5)) + 16|0); //@line 498 "../../iup_tree.c"
 $7 = HEAP32[$6>>2]|0; //@line 498 "../../iup_tree.c"
 $8 = ($7|0)!=(0); //@line 498 "../../iup_tree.c"
 do {
  if ($8) {
   $9 = $2; //@line 500 "../../iup_tree.c"
   $10 = ((($9)) + 72|0); //@line 500 "../../iup_tree.c"
   $11 = HEAP32[$10>>2]|0; //@line 500 "../../iup_tree.c"
   $12 = ((($11)) + 16|0); //@line 500 "../../iup_tree.c"
   $13 = HEAP32[$12>>2]|0; //@line 500 "../../iup_tree.c"
   $14 = ($13|0)==(2); //@line 500 "../../iup_tree.c"
   if ($14) {
    $1 = 19761; //@line 501 "../../iup_tree.c"
    break;
   } else {
    $1 = 20441; //@line 503 "../../iup_tree.c"
    break;
   }
  } else {
   $1 = 20140; //@line 506 "../../iup_tree.c"
  }
 } while(0);
 $15 = $1; //@line 507 "../../iup_tree.c"
 STACKTOP = sp;return ($15|0); //@line 507 "../../iup_tree.c"
}
function _iTreeSetShowToggleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 511 "../../iup_tree.c"
 $5 = (_iupStrEqualNoCase($4,19761)|0); //@line 511 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 511 "../../iup_tree.c"
 if ($6) {
  $7 = $2; //@line 512 "../../iup_tree.c"
  $8 = ((($7)) + 72|0); //@line 512 "../../iup_tree.c"
  $9 = HEAP32[$8>>2]|0; //@line 512 "../../iup_tree.c"
  $10 = ((($9)) + 16|0); //@line 512 "../../iup_tree.c"
  HEAP32[$10>>2] = 2; //@line 512 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 518 "../../iup_tree.c"
 }
 $11 = $3; //@line 513 "../../iup_tree.c"
 $12 = (_iupStrBoolean($11)|0); //@line 513 "../../iup_tree.c"
 $13 = ($12|0)!=(0); //@line 513 "../../iup_tree.c"
 $14 = $2; //@line 514 "../../iup_tree.c"
 $15 = ((($14)) + 72|0); //@line 514 "../../iup_tree.c"
 $16 = HEAP32[$15>>2]|0; //@line 514 "../../iup_tree.c"
 $17 = ((($16)) + 16|0); //@line 514 "../../iup_tree.c"
 if ($13) {
  HEAP32[$17>>2] = 1; //@line 514 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 518 "../../iup_tree.c"
 } else {
  HEAP32[$17>>2] = 0; //@line 516 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 518 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeGetAddExpandedAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 574 "../../iup_tree.c"
 $3 = ((($2)) + 72|0); //@line 574 "../../iup_tree.c"
 $4 = HEAP32[$3>>2]|0; //@line 574 "../../iup_tree.c"
 $5 = ((($4)) + 4|0); //@line 574 "../../iup_tree.c"
 $6 = HEAP32[$5>>2]|0; //@line 574 "../../iup_tree.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 574 "../../iup_tree.c"
 STACKTOP = sp;return ($7|0); //@line 574 "../../iup_tree.c"
}
function _iTreeSetAddExpandedAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 579 "../../iup_tree.c"
 $5 = (_iupStrBoolean($4)|0); //@line 579 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 579 "../../iup_tree.c"
 $7 = $2; //@line 580 "../../iup_tree.c"
 $8 = ((($7)) + 72|0); //@line 580 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 580 "../../iup_tree.c"
 $10 = ((($9)) + 4|0); //@line 580 "../../iup_tree.c"
 if ($6) {
  HEAP32[$10>>2] = 1; //@line 580 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 584 "../../iup_tree.c"
 } else {
  HEAP32[$10>>2] = 0; //@line 582 "../../iup_tree.c"
  STACKTOP = sp;return 0; //@line 584 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeGetCountAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 589 "../../iup_tree.c"
 $3 = ((($2)) + 72|0); //@line 589 "../../iup_tree.c"
 $4 = HEAP32[$3>>2]|0; //@line 589 "../../iup_tree.c"
 $5 = ((($4)) + 60|0); //@line 589 "../../iup_tree.c"
 $6 = HEAP32[$5>>2]|0; //@line 589 "../../iup_tree.c"
 $7 = (_iupStrReturnInt($6)|0); //@line 589 "../../iup_tree.c"
 STACKTOP = sp;return ($7|0); //@line 589 "../../iup_tree.c"
}
function _iTreeSetCtrlAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 474 "../../iup_tree.c"
 $5 = (_iupStrBoolean($4)|0); //@line 474 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 474 "../../iup_tree.c"
 if ($6) {
  $7 = $2; //@line 474 "../../iup_tree.c"
  $8 = (_iupAttribGetBoolean($7,18152)|0); //@line 474 "../../iup_tree.c"
  $9 = ($8|0)!=(0); //@line 474 "../../iup_tree.c"
  if ($9) {
   $10 = $2; //@line 475 "../../iup_tree.c"
   (_iTreeSetMarkModeAttrib($10,19752)|0); //@line 475 "../../iup_tree.c"
   STACKTOP = sp;return 1; //@line 478 "../../iup_tree.c"
  }
 }
 $11 = $2; //@line 477 "../../iup_tree.c"
 (_iTreeSetMarkModeAttrib($11,18167)|0); //@line 477 "../../iup_tree.c"
 STACKTOP = sp;return 1; //@line 478 "../../iup_tree.c"
}
function _iTreeSetShiftAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 465 "../../iup_tree.c"
 $5 = (_iupStrBoolean($4)|0); //@line 465 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 465 "../../iup_tree.c"
 if ($6) {
  $7 = $2; //@line 465 "../../iup_tree.c"
  $8 = (_iupAttribGetBoolean($7,18147)|0); //@line 465 "../../iup_tree.c"
  $9 = ($8|0)!=(0); //@line 465 "../../iup_tree.c"
  if ($9) {
   $10 = $2; //@line 466 "../../iup_tree.c"
   (_iTreeSetMarkModeAttrib($10,19752)|0); //@line 466 "../../iup_tree.c"
   STACKTOP = sp;return 1; //@line 469 "../../iup_tree.c"
  }
 }
 $11 = $2; //@line 468 "../../iup_tree.c"
 (_iTreeSetMarkModeAttrib($11,18167)|0); //@line 468 "../../iup_tree.c"
 STACKTOP = sp;return 1; //@line 469 "../../iup_tree.c"
}
function _iTreeGetMarkModeAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 444 "../../iup_tree.c"
 $4 = ((($3)) + 72|0); //@line 444 "../../iup_tree.c"
 $5 = HEAP32[$4>>2]|0; //@line 444 "../../iup_tree.c"
 $6 = HEAP32[$5>>2]|0; //@line 444 "../../iup_tree.c"
 $7 = ($6|0)==(0); //@line 444 "../../iup_tree.c"
 if ($7) {
  $1 = 18167; //@line 445 "../../iup_tree.c"
 } else {
  $1 = 19752; //@line 447 "../../iup_tree.c"
 }
 $8 = $1; //@line 448 "../../iup_tree.c"
 STACKTOP = sp;return ($8|0); //@line 448 "../../iup_tree.c"
}
function _iTreeSetMarkModeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 452 "../../iup_tree.c"
 $5 = (_iupStrEqualNoCase($4,19752)|0); //@line 452 "../../iup_tree.c"
 $6 = ($5|0)!=(0); //@line 452 "../../iup_tree.c"
 $7 = $2; //@line 453 "../../iup_tree.c"
 $8 = ((($7)) + 72|0); //@line 453 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 453 "../../iup_tree.c"
 if ($6) {
  HEAP32[$9>>2] = 1; //@line 453 "../../iup_tree.c"
 } else {
  HEAP32[$9>>2] = 0; //@line 455 "../../iup_tree.c"
 }
 $10 = $2; //@line 457 "../../iup_tree.c"
 $11 = ((($10)) + 16|0); //@line 457 "../../iup_tree.c"
 $12 = HEAP32[$11>>2]|0; //@line 457 "../../iup_tree.c"
 $13 = ($12|0)!=(0|0); //@line 457 "../../iup_tree.c"
 if (!($13)) {
  STACKTOP = sp;return 0; //@line 460 "../../iup_tree.c"
 }
 $14 = $2; //@line 458 "../../iup_tree.c"
 _iupdrvTreeUpdateMarkMode($14); //@line 458 "../../iup_tree.c"
 STACKTOP = sp;return 0; //@line 460 "../../iup_tree.c"
}
function _iTreeSetAddLeafAttrib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $4; //@line 542 "../../iup_tree.c"
 $8 = ((($7)) + 16|0); //@line 542 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 542 "../../iup_tree.c"
 $10 = ($9|0)!=(0|0); //@line 542 "../../iup_tree.c"
 if ($10) {
  $11 = $4; //@line 544 "../../iup_tree.c"
  $12 = $5; //@line 544 "../../iup_tree.c"
  $13 = $6; //@line 544 "../../iup_tree.c"
  _iupdrvTreeAddNode($11,$12,1,$13,1); //@line 544 "../../iup_tree.c"
  $3 = 0; //@line 545 "../../iup_tree.c"
  $14 = $3; //@line 546 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 546 "../../iup_tree.c"
 } else {
  $3 = 0; //@line 543 "../../iup_tree.c"
  $14 = $3; //@line 546 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 546 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeSetAddBranchAttrib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $4; //@line 550 "../../iup_tree.c"
 $8 = ((($7)) + 16|0); //@line 550 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 550 "../../iup_tree.c"
 $10 = ($9|0)!=(0|0); //@line 550 "../../iup_tree.c"
 if ($10) {
  $11 = $4; //@line 552 "../../iup_tree.c"
  $12 = $5; //@line 552 "../../iup_tree.c"
  $13 = $6; //@line 552 "../../iup_tree.c"
  _iupdrvTreeAddNode($11,$12,0,$13,1); //@line 552 "../../iup_tree.c"
  $3 = 0; //@line 553 "../../iup_tree.c"
  $14 = $3; //@line 554 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 554 "../../iup_tree.c"
 } else {
  $3 = 0; //@line 551 "../../iup_tree.c"
  $14 = $3; //@line 554 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 554 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeSetInsertLeafAttrib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $4; //@line 558 "../../iup_tree.c"
 $8 = ((($7)) + 16|0); //@line 558 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 558 "../../iup_tree.c"
 $10 = ($9|0)!=(0|0); //@line 558 "../../iup_tree.c"
 if ($10) {
  $11 = $4; //@line 560 "../../iup_tree.c"
  $12 = $5; //@line 560 "../../iup_tree.c"
  $13 = $6; //@line 560 "../../iup_tree.c"
  _iupdrvTreeAddNode($11,$12,1,$13,0); //@line 560 "../../iup_tree.c"
  $3 = 0; //@line 561 "../../iup_tree.c"
  $14 = $3; //@line 562 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 562 "../../iup_tree.c"
 } else {
  $3 = 0; //@line 559 "../../iup_tree.c"
  $14 = $3; //@line 562 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 562 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeSetInsertBranchAttrib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $4; //@line 566 "../../iup_tree.c"
 $8 = ((($7)) + 16|0); //@line 566 "../../iup_tree.c"
 $9 = HEAP32[$8>>2]|0; //@line 566 "../../iup_tree.c"
 $10 = ($9|0)!=(0|0); //@line 566 "../../iup_tree.c"
 if ($10) {
  $11 = $4; //@line 568 "../../iup_tree.c"
  $12 = $5; //@line 568 "../../iup_tree.c"
  $13 = $6; //@line 568 "../../iup_tree.c"
  _iupdrvTreeAddNode($11,$12,0,$13,0); //@line 568 "../../iup_tree.c"
  $3 = 0; //@line 569 "../../iup_tree.c"
  $14 = $3; //@line 570 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 570 "../../iup_tree.c"
 } else {
  $3 = 0; //@line 567 "../../iup_tree.c"
  $14 = $3; //@line 570 "../../iup_tree.c"
  STACKTOP = sp;return ($14|0); //@line 570 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeGetTotalChildCountAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $3; //@line 594 "../../iup_tree.c"
 $7 = $4; //@line 594 "../../iup_tree.c"
 $8 = (_iupTreeGetNode($6,$7)|0); //@line 594 "../../iup_tree.c"
 $5 = $8; //@line 594 "../../iup_tree.c"
 $9 = $5; //@line 595 "../../iup_tree.c"
 $10 = ($9|0)!=(0|0); //@line 595 "../../iup_tree.c"
 if ($10) {
  $11 = $3; //@line 598 "../../iup_tree.c"
  $12 = $5; //@line 598 "../../iup_tree.c"
  $13 = (_iupdrvTreeTotalChildCount($11,$12)|0); //@line 598 "../../iup_tree.c"
  $14 = (_iupStrReturnInt($13)|0); //@line 598 "../../iup_tree.c"
  $2 = $14; //@line 598 "../../iup_tree.c"
  $15 = $2; //@line 599 "../../iup_tree.c"
  STACKTOP = sp;return ($15|0); //@line 599 "../../iup_tree.c"
 } else {
  $2 = 0; //@line 596 "../../iup_tree.c"
  $15 = $2; //@line 599 "../../iup_tree.c"
  STACKTOP = sp;return ($15|0); //@line 599 "../../iup_tree.c"
 }
 return (0)|0;
}
function _iTreeGetUserDataAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 603 "../../iup_tree.c"
 $7 = ($6|0)>=(0); //@line 603 "../../iup_tree.c"
 if ($7) {
  $8 = $4; //@line 603 "../../iup_tree.c"
  $9 = $3; //@line 603 "../../iup_tree.c"
  $10 = ((($9)) + 72|0); //@line 603 "../../iup_tree.c"
  $11 = HEAP32[$10>>2]|0; //@line 603 "../../iup_tree.c"
  $12 = ((($11)) + 60|0); //@line 603 "../../iup_tree.c"
  $13 = HEAP32[$12>>2]|0; //@line 603 "../../iup_tree.c"
  $14 = ($8|0)<($13|0); //@line 603 "../../iup_tree.c"
  if ($14) {
   $15 = $4; //@line 604 "../../iup_tree.c"
   $16 = $3; //@line 604 "../../iup_tree.c"
   $17 = ((($16)) + 72|0); //@line 604 "../../iup_tree.c"
   $18 = HEAP32[$17>>2]|0; //@line 604 "../../iup_tree.c"
   $19 = ((($18)) + 52|0); //@line 604 "../../iup_tree.c"
   $20 = HEAP32[$19>>2]|0; //@line 604 "../../iup_tree.c"
   $21 = (($20) + ($15<<3)|0); //@line 604 "../../iup_tree.c"
   $22 = ((($21)) + 4|0); //@line 604 "../../iup_tree.c"
   $23 = HEAP32[$22>>2]|0; //@line 604 "../../iup_tree.c"
   $2 = $23; //@line 604 "../../iup_tree.c"
   $55 = $2; //@line 613 "../../iup_tree.c"
   STACKTOP = sp;return ($55|0); //@line 613 "../../iup_tree.c"
  }
 }
 $24 = $4; //@line 605 "../../iup_tree.c"
 $25 = ($24|0)==(-10); //@line 605 "../../iup_tree.c"
 if ($25) {
  $26 = $3; //@line 605 "../../iup_tree.c"
  $27 = ((($26)) + 72|0); //@line 605 "../../iup_tree.c"
  $28 = HEAP32[$27>>2]|0; //@line 605 "../../iup_tree.c"
  $29 = ((($28)) + 60|0); //@line 605 "../../iup_tree.c"
  $30 = HEAP32[$29>>2]|0; //@line 605 "../../iup_tree.c"
  $31 = ($30|0)!=(0); //@line 605 "../../iup_tree.c"
  if ($31) {
   $32 = $3; //@line 607 "../../iup_tree.c"
   $33 = (_iupdrvTreeGetFocusNode($32)|0); //@line 607 "../../iup_tree.c"
   $5 = $33; //@line 607 "../../iup_tree.c"
   $34 = $3; //@line 608 "../../iup_tree.c"
   $35 = $5; //@line 608 "../../iup_tree.c"
   $36 = (_iupTreeFindNodeId($34,$35)|0); //@line 608 "../../iup_tree.c"
   $4 = $36; //@line 608 "../../iup_tree.c"
   $37 = $4; //@line 609 "../../iup_tree.c"
   $38 = ($37|0)>=(0); //@line 609 "../../iup_tree.c"
   if ($38) {
    $39 = $4; //@line 609 "../../iup_tree.c"
    $40 = $3; //@line 609 "../../iup_tree.c"
    $41 = ((($40)) + 72|0); //@line 609 "../../iup_tree.c"
    $42 = HEAP32[$41>>2]|0; //@line 609 "../../iup_tree.c"
    $43 = ((($42)) + 60|0); //@line 609 "../../iup_tree.c"
    $44 = HEAP32[$43>>2]|0; //@line 609 "../../iup_tree.c"
    $45 = ($39|0)<($44|0); //@line 609 "../../iup_tree.c"
    if ($45) {
     $46 = $4; //@line 610 "../../iup_tree.c"
     $47 = $3; //@line 610 "../../iup_tree.c"
     $48 = ((($47)) + 72|0); //@line 610 "../../iup_tree.c"
     $49 = HEAP32[$48>>2]|0; //@line 610 "../../iup_tree.c"
     $50 = ((($49)) + 52|0); //@line 610 "../../iup_tree.c"
     $51 = HEAP32[$50>>2]|0; //@line 610 "../../iup_tree.c"
     $52 = (($51) + ($46<<3)|0); //@line 610 "../../iup_tree.c"
     $53 = ((($52)) + 4|0); //@line 610 "../../iup_tree.c"
     $54 = HEAP32[$53>>2]|0; //@line 610 "../../iup_tree.c"
     $2 = $54; //@line 610 "../../iup_tree.c"
     $55 = $2; //@line 613 "../../iup_tree.c"
     STACKTOP = sp;return ($55|0); //@line 613 "../../iup_tree.c"
    }
   }
  }
 }
 $2 = 0; //@line 612 "../../iup_tree.c"
 $55 = $2; //@line 613 "../../iup_tree.c"
 STACKTOP = sp;return ($55|0); //@line 613 "../../iup_tree.c"
}
function _iTreeSetUserDataAttrib($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $4; //@line 617 "../../iup_tree.c"
 $8 = ($7|0)>=(0); //@line 617 "../../iup_tree.c"
 if ($8) {
  $9 = $4; //@line 617 "../../iup_tree.c"
  $10 = $3; //@line 617 "../../iup_tree.c"
  $11 = ((($10)) + 72|0); //@line 617 "../../iup_tree.c"
  $12 = HEAP32[$11>>2]|0; //@line 617 "../../iup_tree.c"
  $13 = ((($12)) + 60|0); //@line 617 "../../iup_tree.c"
  $14 = HEAP32[$13>>2]|0; //@line 617 "../../iup_tree.c"
  $15 = ($9|0)<($14|0); //@line 617 "../../iup_tree.c"
  if ($15) {
   $16 = $5; //@line 618 "../../iup_tree.c"
   $17 = $4; //@line 618 "../../iup_tree.c"
   $18 = $3; //@line 618 "../../iup_tree.c"
   $19 = ((($18)) + 72|0); //@line 618 "../../iup_tree.c"
   $20 = HEAP32[$19>>2]|0; //@line 618 "../../iup_tree.c"
   $21 = ((($20)) + 52|0); //@line 618 "../../iup_tree.c"
   $22 = HEAP32[$21>>2]|0; //@line 618 "../../iup_tree.c"
   $23 = (($22) + ($17<<3)|0); //@line 618 "../../iup_tree.c"
   $24 = ((($23)) + 4|0); //@line 618 "../../iup_tree.c"
   HEAP32[$24>>2] = $16; //@line 618 "../../iup_tree.c"
   STACKTOP = sp;return 0; //@line 626 "../../iup_tree.c"
  }
 }
 $25 = $4; //@line 619 "../../iup_tree.c"
 $26 = ($25|0)==(-10); //@line 619 "../../iup_tree.c"
 if (!($26)) {
  STACKTOP = sp;return 0; //@line 626 "../../iup_tree.c"
 }
 $27 = $3; //@line 619 "../../iup_tree.c"
 $28 = ((($27)) + 72|0); //@line 619 "../../iup_tree.c"
 $29 = HEAP32[$28>>2]|0; //@line 619 "../../iup_tree.c"
 $30 = ((($29)) + 60|0); //@line 619 "../../iup_tree.c"
 $31 = HEAP32[$30>>2]|0; //@line 619 "../../iup_tree.c"
 $32 = ($31|0)!=(0); //@line 619 "../../iup_tree.c"
 if (!($32)) {
  STACKTOP = sp;return 0; //@line 626 "../../iup_tree.c"
 }
 $33 = $3; //@line 621 "../../iup_tree.c"
 $34 = (_iupdrvTreeGetFocusNode($33)|0); //@line 621 "../../iup_tree.c"
 $6 = $34; //@line 621 "../../iup_tree.c"
 $35 = $3; //@line 622 "../../iup_tree.c"
 $36 = $6; //@line 622 "../../iup_tree.c"
 $37 = (_iupTreeFindNodeId($35,$36)|0); //@line 622 "../../iup_tree.c"
 $4 = $37; //@line 622 "../../iup_tree.c"
 $38 = $4; //@line 623 "../../iup_tree.c"
 $39 = ($38|0)>=(0); //@line 623 "../../iup_tree.c"
 if (!($39)) {
  STACKTOP = sp;return 0; //@line 626 "../../iup_tree.c"
 }
 $40 = $4; //@line 623 "../../iup_tree.c"
 $41 = $3; //@line 623 "../../iup_tree.c"
 $42 = ((($41)) + 72|0); //@line 623 "../../iup_tree.c"
 $43 = HEAP32[$42>>2]|0; //@line 623 "../../iup_tree.c"
 $44 = ((($43)) + 60|0); //@line 623 "../../iup_tree.c"
 $45 = HEAP32[$44>>2]|0; //@line 623 "../../iup_tree.c"
 $46 = ($40|0)<($45|0); //@line 623 "../../iup_tree.c"
 if (!($46)) {
  STACKTOP = sp;return 0; //@line 626 "../../iup_tree.c"
 }
 $47 = $5; //@line 624 "../../iup_tree.c"
 $48 = $4; //@line 624 "../../iup_tree.c"
 $49 = $3; //@line 624 "../../iup_tree.c"
 $50 = ((($49)) + 72|0); //@line 624 "../../iup_tree.c"
 $51 = HEAP32[$50>>2]|0; //@line 624 "../../iup_tree.c"
 $52 = ((($51)) + 52|0); //@line 624 "../../iup_tree.c"
 $53 = HEAP32[$52>>2]|0; //@line 624 "../../iup_tree.c"
 $54 = (($53) + ($48<<3)|0); //@line 624 "../../iup_tree.c"
 $55 = ((($54)) + 4|0); //@line 624 "../../iup_tree.c"
 HEAP32[$55>>2] = $47; //@line 624 "../../iup_tree.c"
 STACKTOP = sp;return 0; //@line 626 "../../iup_tree.c"
}
function _iTreeInitializeImages() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1312|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1312|0);
 $5 = sp + 1048|0;
 $6 = sp + 792|0;
 $7 = sp + 536|0;
 $8 = sp + 280|0;
 $9 = sp + 24|0;
 _memcpy(($5|0),(18259|0),256)|0; //@line 35 "../../iup_tree.c"
 _memcpy(($6|0),(18515|0),256)|0; //@line 55 "../../iup_tree.c"
 _memcpy(($7|0),(18771|0),256)|0; //@line 75 "../../iup_tree.c"
 _memcpy(($8|0),(19027|0),256)|0; //@line 95 "../../iup_tree.c"
 _memcpy(($9|0),(19283|0),256)|0; //@line 115 "../../iup_tree.c"
 $10 = (_IupImage(16,16,$5)|0); //@line 135 "../../iup_tree.c"
 $0 = $10; //@line 135 "../../iup_tree.c"
 $11 = (_IupImage(16,16,$6)|0); //@line 136 "../../iup_tree.c"
 $3 = $11; //@line 136 "../../iup_tree.c"
 $12 = (_IupImage(16,16,$7)|0); //@line 137 "../../iup_tree.c"
 $4 = $12; //@line 137 "../../iup_tree.c"
 $13 = (_IupImage(16,16,$8)|0); //@line 138 "../../iup_tree.c"
 $1 = $13; //@line 138 "../../iup_tree.c"
 $14 = (_IupImage(16,16,$9)|0); //@line 139 "../../iup_tree.c"
 $2 = $14; //@line 139 "../../iup_tree.c"
 $15 = $0; //@line 141 "../../iup_tree.c"
 _IupSetAttribute($15,19944,20290); //@line 141 "../../iup_tree.c"
 $16 = $0; //@line 142 "../../iup_tree.c"
 _IupSetAttribute($16,19938,19539); //@line 142 "../../iup_tree.c"
 $17 = $0; //@line 143 "../../iup_tree.c"
 _IupSetAttribute($17,19551,19553); //@line 143 "../../iup_tree.c"
 $18 = $0; //@line 144 "../../iup_tree.c"
 _IupSetAttribute($18,19562,19564); //@line 144 "../../iup_tree.c"
 $19 = $0; //@line 145 "../../iup_tree.c"
 _IupSetAttribute($19,19573,19575); //@line 145 "../../iup_tree.c"
 $20 = $0; //@line 146 "../../iup_tree.c"
 _IupSetAttribute($20,19587,19589); //@line 146 "../../iup_tree.c"
 $21 = $0; //@line 147 "../../iup_tree.c"
 _IupSetAttribute($21,19601,19603); //@line 147 "../../iup_tree.c"
 $22 = $3; //@line 149 "../../iup_tree.c"
 _IupSetAttribute($22,19944,20290); //@line 149 "../../iup_tree.c"
 $23 = $3; //@line 150 "../../iup_tree.c"
 _IupSetAttribute($23,19938,19615); //@line 150 "../../iup_tree.c"
 $24 = $3; //@line 151 "../../iup_tree.c"
 _IupSetAttribute($24,19551,19627); //@line 151 "../../iup_tree.c"
 $25 = $3; //@line 152 "../../iup_tree.c"
 _IupSetAttribute($25,19562,19637); //@line 152 "../../iup_tree.c"
 $26 = $3; //@line 153 "../../iup_tree.c"
 _IupSetAttribute($26,19573,19643); //@line 153 "../../iup_tree.c"
 $27 = $3; //@line 154 "../../iup_tree.c"
 _IupSetAttribute($27,19587,19654); //@line 154 "../../iup_tree.c"
 $28 = $3; //@line 155 "../../iup_tree.c"
 _IupSetAttribute($28,19601,19666); //@line 155 "../../iup_tree.c"
 $29 = $3; //@line 156 "../../iup_tree.c"
 _IupSetAttribute($29,19678,19680); //@line 156 "../../iup_tree.c"
 $30 = $4; //@line 158 "../../iup_tree.c"
 _IupSetAttribute($30,19944,20290); //@line 158 "../../iup_tree.c"
 $31 = $4; //@line 159 "../../iup_tree.c"
 _IupSetAttribute($31,19938,19692); //@line 159 "../../iup_tree.c"
 $32 = $4; //@line 160 "../../iup_tree.c"
 _IupSetAttribute($32,19551,19627); //@line 160 "../../iup_tree.c"
 $33 = $4; //@line 161 "../../iup_tree.c"
 _IupSetAttribute($33,19562,19680); //@line 161 "../../iup_tree.c"
 $34 = $4; //@line 162 "../../iup_tree.c"
 _IupSetAttribute($34,19573,19637); //@line 162 "../../iup_tree.c"
 $35 = $4; //@line 163 "../../iup_tree.c"
 _IupSetAttribute($35,19587,19615); //@line 163 "../../iup_tree.c"
 $36 = $4; //@line 164 "../../iup_tree.c"
 _IupSetAttribute($36,19601,19643); //@line 164 "../../iup_tree.c"
 $37 = $1; //@line 166 "../../iup_tree.c"
 _IupSetAttribute($37,19944,20290); //@line 166 "../../iup_tree.c"
 $38 = $1; //@line 167 "../../iup_tree.c"
 _IupSetAttribute($38,19938,19692); //@line 167 "../../iup_tree.c"
 $39 = $1; //@line 168 "../../iup_tree.c"
 _IupSetAttribute($39,19551,19704); //@line 168 "../../iup_tree.c"
 $40 = $1; //@line 169 "../../iup_tree.c"
 _IupSetAttribute($40,19562,19716); //@line 169 "../../iup_tree.c"
 $41 = $1; //@line 170 "../../iup_tree.c"
 _IupSetAttribute($41,19573,19728); //@line 170 "../../iup_tree.c"
 $42 = $1; //@line 171 "../../iup_tree.c"
 _IupSetAttribute($42,19587,19740); //@line 171 "../../iup_tree.c"
 $43 = $2; //@line 173 "../../iup_tree.c"
 _IupSetAttribute($43,19944,20290); //@line 173 "../../iup_tree.c"
 $44 = $2; //@line 174 "../../iup_tree.c"
 _IupSetAttribute($44,19938,19692); //@line 174 "../../iup_tree.c"
 $45 = $2; //@line 175 "../../iup_tree.c"
 _IupSetAttribute($45,19551,19704); //@line 175 "../../iup_tree.c"
 $46 = $2; //@line 176 "../../iup_tree.c"
 _IupSetAttribute($46,19562,19716); //@line 176 "../../iup_tree.c"
 $47 = $2; //@line 177 "../../iup_tree.c"
 _IupSetAttribute($47,19573,19728); //@line 177 "../../iup_tree.c"
 $48 = $2; //@line 178 "../../iup_tree.c"
 _IupSetAttribute($48,19587,19740); //@line 178 "../../iup_tree.c"
 $49 = $0; //@line 180 "../../iup_tree.c"
 (_IupSetHandle(17813,$49)|0); //@line 180 "../../iup_tree.c"
 $50 = $3; //@line 181 "../../iup_tree.c"
 (_IupSetHandle(17821,$50)|0); //@line 181 "../../iup_tree.c"
 $51 = $4; //@line 182 "../../iup_tree.c"
 (_IupSetHandle(17834,$51)|0); //@line 182 "../../iup_tree.c"
 $52 = $1; //@line 183 "../../iup_tree.c"
 (_IupSetHandle(18241,$52)|0); //@line 183 "../../iup_tree.c"
 $53 = $2; //@line 184 "../../iup_tree.c"
 (_IupSetHandle(18250,$53)|0); //@line 184 "../../iup_tree.c"
 STACKTOP = sp;return; //@line 188 "../../iup_tree.c"
}
function _iTreeDragBegin_CB($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $7 = $3; //@line 743 "../../iup_tree.c"
 $8 = $4; //@line 743 "../../iup_tree.c"
 $9 = $5; //@line 743 "../../iup_tree.c"
 $10 = (_IupConvertXYToPos($7,$8,$9)|0); //@line 743 "../../iup_tree.c"
 $6 = $10; //@line 743 "../../iup_tree.c"
 $11 = $3; //@line 744 "../../iup_tree.c"
 $12 = $6; //@line 744 "../../iup_tree.c"
 _iupAttribSetInt($11,19832,$12); //@line 744 "../../iup_tree.c"
 STACKTOP = sp;return -2; //@line 745 "../../iup_tree.c"
}
function _iTreeDragDataSize_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 4; //@line 731 "../../iup_tree.c"
}
function _iTreeDragData_CB($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp + 16|0;
 HEAP32[$5>>2] = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $10 = HEAP32[$5>>2]|0; //@line 710 "../../iup_tree.c"
 $11 = (_iupAttribGetInt($10,19832)|0); //@line 710 "../../iup_tree.c"
 $9 = $11; //@line 710 "../../iup_tree.c"
 $12 = $9; //@line 711 "../../iup_tree.c"
 $13 = ($12|0)<(1); //@line 711 "../../iup_tree.c"
 if ($13) {
  $4 = -2; //@line 712 "../../iup_tree.c"
  $23 = $4; //@line 725 "../../iup_tree.c"
  STACKTOP = sp;return ($23|0); //@line 725 "../../iup_tree.c"
 }
 $14 = HEAP32[$5>>2]|0; //@line 714 "../../iup_tree.c"
 $15 = ((($14)) + 72|0); //@line 714 "../../iup_tree.c"
 $16 = HEAP32[$15>>2]|0; //@line 714 "../../iup_tree.c"
 $17 = HEAP32[$16>>2]|0; //@line 714 "../../iup_tree.c"
 $18 = ($17|0)==(0); //@line 714 "../../iup_tree.c"
 if ($18) {
  $19 = HEAP32[$5>>2]|0; //@line 717 "../../iup_tree.c"
  $20 = $9; //@line 717 "../../iup_tree.c"
  _IupSetAttributeId($19,19876,$20,20441); //@line 717 "../../iup_tree.c"
 }
 $21 = $7; //@line 721 "../../iup_tree.c"
 $22 = $8; //@line 721 "../../iup_tree.c"
 _memcpy(($21|0),($5|0),($22|0))|0; //@line 721 "../../iup_tree.c"
 $4 = -2; //@line 724 "../../iup_tree.c"
 $23 = $4; //@line 725 "../../iup_tree.c"
 STACKTOP = sp;return ($23|0); //@line 725 "../../iup_tree.c"
}
function _iTreeDragEnd_CB($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 736 "../../iup_tree.c"
 _iupAttribSetInt($4,19832,0); //@line 736 "../../iup_tree.c"
 STACKTOP = sp;return -2; //@line 738 "../../iup_tree.c"
}
function _iTreeDropData_CB($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $15 = sp + 52|0;
 $16 = sp + 12|0;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $20 = $7; //@line 666 "../../iup_tree.c"
 $21 = $11; //@line 666 "../../iup_tree.c"
 $22 = $12; //@line 666 "../../iup_tree.c"
 $23 = (_IupConvertXYToPos($20,$21,$22)|0); //@line 666 "../../iup_tree.c"
 $13 = $23; //@line 666 "../../iup_tree.c"
 $14 = 0; //@line 667 "../../iup_tree.c"
 $24 = $9; //@line 672 "../../iup_tree.c"
 $25 = $10; //@line 672 "../../iup_tree.c"
 _memcpy(($16|0),($24|0),($25|0))|0; //@line 672 "../../iup_tree.c"
 _iupdrvGetKeyState($15); //@line 677 "../../iup_tree.c"
 $26 = ((($15)) + 1|0); //@line 678 "../../iup_tree.c"
 $27 = HEAP8[$26>>0]|0; //@line 678 "../../iup_tree.c"
 $28 = $27 << 24 >> 24; //@line 678 "../../iup_tree.c"
 $29 = ($28|0)==(67); //@line 678 "../../iup_tree.c"
 if ($29) {
  $14 = 1; //@line 679 "../../iup_tree.c"
 }
 $30 = HEAP32[$16>>2]|0; //@line 684 "../../iup_tree.c"
 $31 = ((($30)) + 72|0); //@line 684 "../../iup_tree.c"
 $32 = HEAP32[$31>>2]|0; //@line 684 "../../iup_tree.c"
 $33 = HEAP32[$32>>2]|0; //@line 684 "../../iup_tree.c"
 $34 = ($33|0)==(0); //@line 684 "../../iup_tree.c"
 do {
  if ($34) {
   $35 = HEAP32[$16>>2]|0; //@line 686 "../../iup_tree.c"
   $36 = (_iupAttribGetInt($35,19832)|0); //@line 686 "../../iup_tree.c"
   $17 = $36; //@line 686 "../../iup_tree.c"
   $37 = HEAP32[$16>>2]|0; //@line 689 "../../iup_tree.c"
   $38 = $17; //@line 689 "../../iup_tree.c"
   $39 = (_iupTreeGetNode($37,$38)|0); //@line 689 "../../iup_tree.c"
   $19 = $39; //@line 689 "../../iup_tree.c"
   $40 = $19; //@line 690 "../../iup_tree.c"
   $41 = ($40|0)!=(0|0); //@line 690 "../../iup_tree.c"
   if (!($41)) {
    $6 = -2; //@line 691 "../../iup_tree.c"
    $57 = $6; //@line 706 "../../iup_tree.c"
    STACKTOP = sp;return ($57|0); //@line 706 "../../iup_tree.c"
   }
   $42 = $7; //@line 693 "../../iup_tree.c"
   $43 = $13; //@line 693 "../../iup_tree.c"
   $44 = (_iupTreeGetNode($42,$43)|0); //@line 693 "../../iup_tree.c"
   $18 = $44; //@line 693 "../../iup_tree.c"
   $45 = $18; //@line 694 "../../iup_tree.c"
   $46 = ($45|0)!=(0|0); //@line 694 "../../iup_tree.c"
   if ($46) {
    $47 = HEAP32[$16>>2]|0; //@line 698 "../../iup_tree.c"
    $48 = $7; //@line 698 "../../iup_tree.c"
    $49 = $19; //@line 698 "../../iup_tree.c"
    $50 = $18; //@line 698 "../../iup_tree.c"
    _iupdrvTreeDragDropCopyNode($47,$48,$49,$50); //@line 698 "../../iup_tree.c"
    $51 = HEAP32[$16>>2]|0; //@line 700 "../../iup_tree.c"
    $52 = (_IupGetInt($51,19852)|0); //@line 700 "../../iup_tree.c"
    $53 = ($52|0)==(0); //@line 700 "../../iup_tree.c"
    $54 = $14; //@line 700 "../../iup_tree.c"
    $55 = ($54|0)!=(0); //@line 700 "../../iup_tree.c"
    $or$cond = $53 | $55; //@line 700 "../../iup_tree.c"
    if ($or$cond) {
     break;
    }
    $56 = HEAP32[$16>>2]|0; //@line 701 "../../iup_tree.c"
    _IupSetAttribute($56,19867,19876); //@line 701 "../../iup_tree.c"
    break;
   } else {
    $6 = -2; //@line 695 "../../iup_tree.c"
    $57 = $6; //@line 706 "../../iup_tree.c"
    STACKTOP = sp;return ($57|0); //@line 706 "../../iup_tree.c"
   }
  }
 } while(0);
 $6 = -2; //@line 705 "../../iup_tree.c"
 $57 = $6; //@line 706 "../../iup_tree.c"
 STACKTOP = sp;return ($57|0); //@line 706 "../../iup_tree.c"
}
function _iupUserNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 30 "../../iup_user.c"
 $0 = $1; //@line 30 "../../iup_user.c"
 $2 = $0; //@line 32 "../../iup_user.c"
 HEAP32[$2>>2] = 19891; //@line 32 "../../iup_user.c"
 $3 = $0; //@line 33 "../../iup_user.c"
 $4 = ((($3)) + 4|0); //@line 33 "../../iup_user.c"
 HEAP32[$4>>2] = 0; //@line 33 "../../iup_user.c"
 $5 = $0; //@line 34 "../../iup_user.c"
 $6 = ((($5)) + 8|0); //@line 34 "../../iup_user.c"
 HEAP32[$6>>2] = 0; //@line 34 "../../iup_user.c"
 $7 = $0; //@line 35 "../../iup_user.c"
 $8 = ((($7)) + 12|0); //@line 35 "../../iup_user.c"
 HEAP32[$8>>2] = 1; //@line 35 "../../iup_user.c"
 $9 = $0; //@line 36 "../../iup_user.c"
 $10 = ((($9)) + 16|0); //@line 36 "../../iup_user.c"
 HEAP32[$10>>2] = 0; //@line 36 "../../iup_user.c"
 $11 = $0; //@line 38 "../../iup_user.c"
 $12 = ((($11)) + 32|0); //@line 38 "../../iup_user.c"
 HEAP32[$12>>2] = 522; //@line 38 "../../iup_user.c"
 $13 = $0; //@line 40 "../../iup_user.c"
 _iupClassRegisterAttribute($13,19896,0,523,0,0,9); //@line 40 "../../iup_user.c"
 $14 = $0; //@line 42 "../../iup_user.c"
 STACKTOP = sp;return ($14|0); //@line 42 "../../iup_user.c"
}
function _iUserSetClearAttributesAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 19 "../../iup_user.c"
 $5 = ((($4)) + 8|0); //@line 19 "../../iup_user.c"
 $6 = HEAP32[$5>>2]|0; //@line 19 "../../iup_user.c"
 _iupTableClear($6); //@line 19 "../../iup_user.c"
 STACKTOP = sp;return 0; //@line 20 "../../iup_user.c"
}
function _iupValCropValue($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0.0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 28 "../../iup_val.c"
 $3 = ((($2)) + 72|0); //@line 28 "../../iup_val.c"
 $4 = HEAP32[$3>>2]|0; //@line 28 "../../iup_val.c"
 $5 = ((($4)) + 16|0); //@line 28 "../../iup_val.c"
 $6 = +HEAPF64[$5>>3]; //@line 28 "../../iup_val.c"
 $7 = $1; //@line 28 "../../iup_val.c"
 $8 = ((($7)) + 72|0); //@line 28 "../../iup_val.c"
 $9 = HEAP32[$8>>2]|0; //@line 28 "../../iup_val.c"
 $10 = ((($9)) + 48|0); //@line 28 "../../iup_val.c"
 $11 = +HEAPF64[$10>>3]; //@line 28 "../../iup_val.c"
 $12 = $6 > $11; //@line 28 "../../iup_val.c"
 $13 = $1; //@line 29 "../../iup_val.c"
 $14 = ((($13)) + 72|0); //@line 29 "../../iup_val.c"
 $15 = HEAP32[$14>>2]|0; //@line 29 "../../iup_val.c"
 if ($12) {
  $16 = ((($15)) + 48|0); //@line 29 "../../iup_val.c"
  $17 = +HEAPF64[$16>>3]; //@line 29 "../../iup_val.c"
  $18 = $1; //@line 29 "../../iup_val.c"
  $19 = ((($18)) + 72|0); //@line 29 "../../iup_val.c"
  $20 = HEAP32[$19>>2]|0; //@line 29 "../../iup_val.c"
  $21 = ((($20)) + 16|0); //@line 29 "../../iup_val.c"
  HEAPF64[$21>>3] = $17; //@line 29 "../../iup_val.c"
  STACKTOP = sp;return; //@line 32 "../../iup_val.c"
 }
 $22 = ((($15)) + 16|0); //@line 30 "../../iup_val.c"
 $23 = +HEAPF64[$22>>3]; //@line 30 "../../iup_val.c"
 $24 = $1; //@line 30 "../../iup_val.c"
 $25 = ((($24)) + 72|0); //@line 30 "../../iup_val.c"
 $26 = HEAP32[$25>>2]|0; //@line 30 "../../iup_val.c"
 $27 = ((($26)) + 40|0); //@line 30 "../../iup_val.c"
 $28 = +HEAPF64[$27>>3]; //@line 30 "../../iup_val.c"
 $29 = $23 < $28; //@line 30 "../../iup_val.c"
 if (!($29)) {
  STACKTOP = sp;return; //@line 32 "../../iup_val.c"
 }
 $30 = $1; //@line 31 "../../iup_val.c"
 $31 = ((($30)) + 72|0); //@line 31 "../../iup_val.c"
 $32 = HEAP32[$31>>2]|0; //@line 31 "../../iup_val.c"
 $33 = ((($32)) + 40|0); //@line 31 "../../iup_val.c"
 $34 = +HEAPF64[$33>>3]; //@line 31 "../../iup_val.c"
 $35 = $1; //@line 31 "../../iup_val.c"
 $36 = ((($35)) + 72|0); //@line 31 "../../iup_val.c"
 $37 = HEAP32[$36>>2]|0; //@line 31 "../../iup_val.c"
 $38 = ((($37)) + 16|0); //@line 31 "../../iup_val.c"
 HEAPF64[$38>>3] = $34; //@line 31 "../../iup_val.c"
 STACKTOP = sp;return; //@line 32 "../../iup_val.c"
}
function _iupValNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 152 "../../iup_val.c"
 $0 = $1; //@line 152 "../../iup_val.c"
 $2 = $0; //@line 154 "../../iup_val.c"
 HEAP32[$2>>2] = 19912; //@line 154 "../../iup_val.c"
 $3 = $0; //@line 155 "../../iup_val.c"
 $4 = ((($3)) + 4|0); //@line 155 "../../iup_val.c"
 HEAP32[$4>>2] = 19916; //@line 155 "../../iup_val.c"
 $5 = $0; //@line 156 "../../iup_val.c"
 $6 = ((($5)) + 8|0); //@line 156 "../../iup_val.c"
 HEAP32[$6>>2] = 1; //@line 156 "../../iup_val.c"
 $7 = $0; //@line 157 "../../iup_val.c"
 $8 = ((($7)) + 12|0); //@line 157 "../../iup_val.c"
 HEAP32[$8>>2] = 0; //@line 157 "../../iup_val.c"
 $9 = $0; //@line 158 "../../iup_val.c"
 $10 = ((($9)) + 16|0); //@line 158 "../../iup_val.c"
 HEAP32[$10>>2] = 1; //@line 158 "../../iup_val.c"
 $11 = $0; //@line 161 "../../iup_val.c"
 $12 = ((($11)) + 32|0); //@line 161 "../../iup_val.c"
 HEAP32[$12>>2] = 524; //@line 161 "../../iup_val.c"
 $13 = $0; //@line 162 "../../iup_val.c"
 $14 = ((($13)) + 40|0); //@line 162 "../../iup_val.c"
 HEAP32[$14>>2] = 525; //@line 162 "../../iup_val.c"
 $15 = $0; //@line 163 "../../iup_val.c"
 $16 = ((($15)) + 72|0); //@line 163 "../../iup_val.c"
 HEAP32[$16>>2] = 47; //@line 163 "../../iup_val.c"
 $17 = $0; //@line 164 "../../iup_val.c"
 $18 = ((($17)) + 48|0); //@line 164 "../../iup_val.c"
 HEAP32[$18>>2] = 48; //@line 164 "../../iup_val.c"
 $19 = $0; //@line 167 "../../iup_val.c"
 _iupClassRegisterCallback($19,19918,362470); //@line 167 "../../iup_val.c"
 $20 = $0; //@line 170 "../../iup_val.c"
 _iupBaseRegisterCommonCallbacks($20); //@line 170 "../../iup_val.c"
 $21 = $0; //@line 173 "../../iup_val.c"
 _iupBaseRegisterCommonAttrib($21); //@line 173 "../../iup_val.c"
 $22 = $0; //@line 176 "../../iup_val.c"
 _iupBaseRegisterVisualAttrib($22); //@line 176 "../../iup_val.c"
 $23 = $0; //@line 179 "../../iup_val.c"
 _iupClassRegisterAttribute($23,19934,526,527,(-1),19938,8); //@line 179 "../../iup_val.c"
 $24 = $0; //@line 180 "../../iup_val.c"
 _iupClassRegisterAttribute($24,19940,528,529,(-1),19944,8); //@line 180 "../../iup_val.c"
 $25 = $0; //@line 181 "../../iup_val.c"
 _iupClassRegisterAttribute($25,19946,530,531,(-1),19951,9); //@line 181 "../../iup_val.c"
 $26 = $0; //@line 182 "../../iup_val.c"
 _iupClassRegisterAttribute($26,19962,530,531,(-1),19951,9); //@line 182 "../../iup_val.c"
 $27 = $0; //@line 183 "../../iup_val.c"
 _iupClassRegisterAttribute($27,19974,532,533,0,0,9); //@line 183 "../../iup_val.c"
 $28 = $0; //@line 185 "../../iup_val.c"
 _iupdrvValInitClass($28); //@line 185 "../../iup_val.c"
 $29 = $0; //@line 187 "../../iup_val.c"
 STACKTOP = sp;return ($29|0); //@line 187 "../../iup_val.c"
}
function _iValCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 19951; //@line 133 "../../iup_val.c"
 $5 = $3; //@line 134 "../../iup_val.c"
 $6 = ($5|0)!=(0|0); //@line 134 "../../iup_val.c"
 if ($6) {
  $7 = $3; //@line 134 "../../iup_val.c"
  $8 = HEAP32[$7>>2]|0; //@line 134 "../../iup_val.c"
  $9 = ($8|0)!=(0|0); //@line 134 "../../iup_val.c"
  if ($9) {
   $10 = $3; //@line 135 "../../iup_val.c"
   $11 = HEAP32[$10>>2]|0; //@line 135 "../../iup_val.c"
   $4 = $11; //@line 135 "../../iup_val.c"
  }
 }
 $12 = (_calloc(1,56)|0); //@line 137 "../../iup_val.c"
 $13 = $2; //@line 137 "../../iup_val.c"
 $14 = ((($13)) + 72|0); //@line 137 "../../iup_val.c"
 HEAP32[$14>>2] = $12; //@line 137 "../../iup_val.c"
 $15 = $2; //@line 139 "../../iup_val.c"
 $16 = $4; //@line 139 "../../iup_val.c"
 (_iValSetOrientationAttrib($15,$16)|0); //@line 139 "../../iup_val.c"
 $17 = $2; //@line 140 "../../iup_val.c"
 $18 = ((($17)) + 72|0); //@line 140 "../../iup_val.c"
 $19 = HEAP32[$18>>2]|0; //@line 140 "../../iup_val.c"
 $20 = HEAP32[$19>>2]|0; //@line 140 "../../iup_val.c"
 $21 = ($20|0)==(0); //@line 140 "../../iup_val.c"
 if ($21) {
  $22 = $2; //@line 141 "../../iup_val.c"
  $23 = ((($22)) + 72|0); //@line 141 "../../iup_val.c"
  $24 = HEAP32[$23>>2]|0; //@line 141 "../../iup_val.c"
  $25 = ((($24)) + 8|0); //@line 141 "../../iup_val.c"
  HEAP32[$25>>2] = 1; //@line 141 "../../iup_val.c"
 }
 $26 = $2; //@line 143 "../../iup_val.c"
 $27 = ((($26)) + 72|0); //@line 143 "../../iup_val.c"
 $28 = HEAP32[$27>>2]|0; //@line 143 "../../iup_val.c"
 $29 = ((($28)) + 48|0); //@line 143 "../../iup_val.c"
 HEAPF64[$29>>3] = 1.0; //@line 143 "../../iup_val.c"
 $30 = $2; //@line 144 "../../iup_val.c"
 $31 = ((($30)) + 72|0); //@line 144 "../../iup_val.c"
 $32 = HEAP32[$31>>2]|0; //@line 144 "../../iup_val.c"
 $33 = ((($32)) + 24|0); //@line 144 "../../iup_val.c"
 HEAPF64[$33>>3] = 0.01; //@line 144 "../../iup_val.c"
 $34 = $2; //@line 145 "../../iup_val.c"
 $35 = ((($34)) + 72|0); //@line 145 "../../iup_val.c"
 $36 = HEAP32[$35>>2]|0; //@line 145 "../../iup_val.c"
 $37 = ((($36)) + 32|0); //@line 145 "../../iup_val.c"
 HEAPF64[$37>>3] = 0.10000000000000001; //@line 145 "../../iup_val.c"
 STACKTOP = sp;return 0; //@line 147 "../../iup_val.c"
}
function _iValGetMaxAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 63 "../../iup_val.c"
 $3 = ((($2)) + 72|0); //@line 63 "../../iup_val.c"
 $4 = HEAP32[$3>>2]|0; //@line 63 "../../iup_val.c"
 $5 = ((($4)) + 48|0); //@line 63 "../../iup_val.c"
 $6 = +HEAPF64[$5>>3]; //@line 63 "../../iup_val.c"
 $7 = (_iupStrReturnDouble($6)|0); //@line 63 "../../iup_val.c"
 STACKTOP = sp;return ($7|0); //@line 63 "../../iup_val.c"
}
function _iValSetMaxAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 56 "../../iup_val.c"
 $5 = $2; //@line 56 "../../iup_val.c"
 $6 = ((($5)) + 72|0); //@line 56 "../../iup_val.c"
 $7 = HEAP32[$6>>2]|0; //@line 56 "../../iup_val.c"
 $8 = ((($7)) + 48|0); //@line 56 "../../iup_val.c"
 $9 = (_iupStrToDouble($4,$8)|0); //@line 56 "../../iup_val.c"
 $10 = ($9|0)!=(0); //@line 56 "../../iup_val.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 58 "../../iup_val.c"
 }
 $11 = $2; //@line 57 "../../iup_val.c"
 _iupValCropValue($11); //@line 57 "../../iup_val.c"
 STACKTOP = sp;return 0; //@line 58 "../../iup_val.c"
}
function _iValGetMinAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 75 "../../iup_val.c"
 $3 = ((($2)) + 72|0); //@line 75 "../../iup_val.c"
 $4 = HEAP32[$3>>2]|0; //@line 75 "../../iup_val.c"
 $5 = ((($4)) + 40|0); //@line 75 "../../iup_val.c"
 $6 = +HEAPF64[$5>>3]; //@line 75 "../../iup_val.c"
 $7 = (_iupStrReturnDouble($6)|0); //@line 75 "../../iup_val.c"
 STACKTOP = sp;return ($7|0); //@line 75 "../../iup_val.c"
}
function _iValSetMinAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 68 "../../iup_val.c"
 $5 = $2; //@line 68 "../../iup_val.c"
 $6 = ((($5)) + 72|0); //@line 68 "../../iup_val.c"
 $7 = HEAP32[$6>>2]|0; //@line 68 "../../iup_val.c"
 $8 = ((($7)) + 40|0); //@line 68 "../../iup_val.c"
 $9 = (_iupStrToDouble($4,$8)|0); //@line 68 "../../iup_val.c"
 $10 = ($9|0)!=(0); //@line 68 "../../iup_val.c"
 if (!($10)) {
  STACKTOP = sp;return 0; //@line 70 "../../iup_val.c"
 }
 $11 = $2; //@line 69 "../../iup_val.c"
 _iupValCropValue($11); //@line 69 "../../iup_val.c"
 STACKTOP = sp;return 0; //@line 70 "../../iup_val.c"
}
function _iValGetOrientationAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $2; //@line 106 "../../iup_val.c"
 $4 = ((($3)) + 72|0); //@line 106 "../../iup_val.c"
 $5 = HEAP32[$4>>2]|0; //@line 106 "../../iup_val.c"
 $6 = HEAP32[$5>>2]|0; //@line 106 "../../iup_val.c"
 $7 = ($6|0)==(1); //@line 106 "../../iup_val.c"
 if ($7) {
  $1 = 19951; //@line 107 "../../iup_val.c"
 } else {
  $1 = 19983; //@line 109 "../../iup_val.c"
 }
 $8 = $1; //@line 110 "../../iup_val.c"
 STACKTOP = sp;return ($8|0); //@line 110 "../../iup_val.c"
}
function _iValSetOrientationAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = sp + 20|0;
 $6 = sp + 16|0;
 $3 = $0;
 $4 = $1;
 $7 = $3; //@line 83 "../../iup_val.c"
 $8 = ((($7)) + 16|0); //@line 83 "../../iup_val.c"
 $9 = HEAP32[$8>>2]|0; //@line 83 "../../iup_val.c"
 $10 = ($9|0)!=(0|0); //@line 83 "../../iup_val.c"
 if ($10) {
  $2 = 0; //@line 84 "../../iup_val.c"
  $23 = $2; //@line 102 "../../iup_val.c"
  STACKTOP = sp;return ($23|0); //@line 102 "../../iup_val.c"
 }
 $11 = $4; //@line 86 "../../iup_val.c"
 $12 = (_iupStrEqualNoCase($11,19983)|0); //@line 86 "../../iup_val.c"
 $13 = ($12|0)!=(0); //@line 86 "../../iup_val.c"
 $14 = $3; //@line 88 "../../iup_val.c"
 $15 = ((($14)) + 72|0); //@line 88 "../../iup_val.c"
 $16 = HEAP32[$15>>2]|0; //@line 88 "../../iup_val.c"
 if ($13) {
  HEAP32[$16>>2] = 0; //@line 88 "../../iup_val.c"
  $17 = $3; //@line 89 "../../iup_val.c"
  _iupdrvValGetMinSize($17,$5,$6); //@line 89 "../../iup_val.c"
  $18 = $3; //@line 91 "../../iup_val.c"
  $19 = HEAP32[$5>>2]|0; //@line 91 "../../iup_val.c"
  HEAP32[$vararg_buffer>>2] = $19; //@line 91 "../../iup_val.c"
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 91 "../../iup_val.c"
  HEAP32[$vararg_ptr1>>2] = 100; //@line 91 "../../iup_val.c"
  _IupSetfAttribute($18,20008,19992,$vararg_buffer); //@line 91 "../../iup_val.c"
 } else {
  HEAP32[$16>>2] = 1; //@line 95 "../../iup_val.c"
  $20 = $3; //@line 96 "../../iup_val.c"
  _iupdrvValGetMinSize($20,$5,$6); //@line 96 "../../iup_val.c"
  $21 = $3; //@line 98 "../../iup_val.c"
  $22 = HEAP32[$6>>2]|0; //@line 98 "../../iup_val.c"
  HEAP32[$vararg_buffer2>>2] = 100; //@line 98 "../../iup_val.c"
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0); //@line 98 "../../iup_val.c"
  HEAP32[$vararg_ptr5>>2] = $22; //@line 98 "../../iup_val.c"
  _IupSetfAttribute($21,20008,19992,$vararg_buffer2); //@line 98 "../../iup_val.c"
 }
 $2 = 0; //@line 101 "../../iup_val.c"
 $23 = $2; //@line 102 "../../iup_val.c"
 STACKTOP = sp;return ($23|0); //@line 102 "../../iup_val.c"
}
function _iValGetInvertedAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 128 "../../iup_val.c"
 $3 = ((($2)) + 72|0); //@line 128 "../../iup_val.c"
 $4 = HEAP32[$3>>2]|0; //@line 128 "../../iup_val.c"
 $5 = ((($4)) + 8|0); //@line 128 "../../iup_val.c"
 $6 = HEAP32[$5>>2]|0; //@line 128 "../../iup_val.c"
 $7 = (_iupStrReturnBoolean($6)|0); //@line 128 "../../iup_val.c"
 STACKTOP = sp;return ($7|0); //@line 128 "../../iup_val.c"
}
function _iValSetInvertedAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 115 "../../iup_val.c"
 $6 = ((($5)) + 16|0); //@line 115 "../../iup_val.c"
 $7 = HEAP32[$6>>2]|0; //@line 115 "../../iup_val.c"
 $8 = ($7|0)!=(0|0); //@line 115 "../../iup_val.c"
 if ($8) {
  $2 = 0; //@line 116 "../../iup_val.c"
  $16 = $2; //@line 124 "../../iup_val.c"
  STACKTOP = sp;return ($16|0); //@line 124 "../../iup_val.c"
 }
 $9 = $4; //@line 118 "../../iup_val.c"
 $10 = (_iupStrBoolean($9)|0); //@line 118 "../../iup_val.c"
 $11 = ($10|0)!=(0); //@line 118 "../../iup_val.c"
 $12 = $3; //@line 119 "../../iup_val.c"
 $13 = ((($12)) + 72|0); //@line 119 "../../iup_val.c"
 $14 = HEAP32[$13>>2]|0; //@line 119 "../../iup_val.c"
 $15 = ((($14)) + 8|0); //@line 119 "../../iup_val.c"
 if ($11) {
  HEAP32[$15>>2] = 1; //@line 119 "../../iup_val.c"
 } else {
  HEAP32[$15>>2] = 0; //@line 121 "../../iup_val.c"
 }
 $2 = 0; //@line 123 "../../iup_val.c"
 $16 = $2; //@line 124 "../../iup_val.c"
 STACKTOP = sp;return ($16|0); //@line 124 "../../iup_val.c"
}
function _IupVbox($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $1 = $0;
 HEAP32[$4>>2] = $varargs; //@line 282 "../../iup_vbox.c"
 $5 = $1; //@line 283 "../../iup_vbox.c"
 $6 = (_iupObjectGetParamList($5,$4)|0); //@line 283 "../../iup_vbox.c"
 $2 = $6; //@line 283 "../../iup_vbox.c"
 $7 = $2; //@line 286 "../../iup_vbox.c"
 $8 = (_IupCreatev(19998,$7)|0); //@line 286 "../../iup_vbox.c"
 $3 = $8; //@line 286 "../../iup_vbox.c"
 $9 = $2; //@line 287 "../../iup_vbox.c"
 _free($9); //@line 287 "../../iup_vbox.c"
 $10 = $3; //@line 289 "../../iup_vbox.c"
 STACKTOP = sp;return ($10|0); //@line 289 "../../iup_vbox.c"
}
function _iupVboxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupBoxNewClassBase()|0); //@line 294 "../../iup_vbox.c"
 $0 = $1; //@line 294 "../../iup_vbox.c"
 $2 = $0; //@line 296 "../../iup_vbox.c"
 HEAP32[$2>>2] = 19998; //@line 296 "../../iup_vbox.c"
 $3 = $0; //@line 299 "../../iup_vbox.c"
 $4 = ((($3)) + 32|0); //@line 299 "../../iup_vbox.c"
 HEAP32[$4>>2] = 534; //@line 299 "../../iup_vbox.c"
 $5 = $0; //@line 300 "../../iup_vbox.c"
 $6 = ((($5)) + 76|0); //@line 300 "../../iup_vbox.c"
 HEAP32[$6>>2] = 535; //@line 300 "../../iup_vbox.c"
 $7 = $0; //@line 301 "../../iup_vbox.c"
 $8 = ((($7)) + 80|0); //@line 301 "../../iup_vbox.c"
 HEAP32[$8>>2] = 536; //@line 301 "../../iup_vbox.c"
 $9 = $0; //@line 302 "../../iup_vbox.c"
 $10 = ((($9)) + 84|0); //@line 302 "../../iup_vbox.c"
 HEAP32[$10>>2] = 537; //@line 302 "../../iup_vbox.c"
 $11 = $0; //@line 305 "../../iup_vbox.c"
 _iupClassRegisterAttribute($11,20003,71,538,0,0,521); //@line 305 "../../iup_vbox.c"
 $12 = $0; //@line 306 "../../iup_vbox.c"
 _iupClassRegisterAttribute($12,20008,73,539,0,0,521); //@line 306 "../../iup_vbox.c"
 $13 = $0; //@line 309 "../../iup_vbox.c"
 _iupClassRegisterAttribute($13,20679,540,541,(-1),20156,9); //@line 309 "../../iup_vbox.c"
 $14 = $0; //@line 311 "../../iup_vbox.c"
 STACKTOP = sp;return ($14|0); //@line 311 "../../iup_vbox.c"
}
function _iVboxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = 0; //@line 92 "../../iup_vbox.c"
 $12 = 0; //@line 93 "../../iup_vbox.c"
 $13 = 0; //@line 94 "../../iup_vbox.c"
 $14 = 0; //@line 95 "../../iup_vbox.c"
 $15 = $4; //@line 97 "../../iup_vbox.c"
 $16 = ((($15)) + 64|0); //@line 97 "../../iup_vbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 97 "../../iup_vbox.c"
 $8 = $17; //@line 97 "../../iup_vbox.c"
 while(1) {
  $18 = $8; //@line 97 "../../iup_vbox.c"
  $19 = ($18|0)!=(0|0); //@line 97 "../../iup_vbox.c"
  $20 = $4; //@line 99 "../../iup_vbox.c"
  $21 = ((($20)) + 72|0); //@line 99 "../../iup_vbox.c"
  $22 = HEAP32[$21>>2]|0; //@line 99 "../../iup_vbox.c"
  if (!($19)) {
   break;
  }
  $23 = ((($22)) + 4|0); //@line 99 "../../iup_vbox.c"
  $24 = HEAP32[$23>>2]|0; //@line 99 "../../iup_vbox.c"
  $25 = ($24|0)!=(0); //@line 99 "../../iup_vbox.c"
  if ($25) {
   $26 = $4; //@line 100 "../../iup_vbox.c"
   $27 = ((($26)) + 72|0); //@line 100 "../../iup_vbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 100 "../../iup_vbox.c"
   $29 = ((($28)) + 4|0); //@line 100 "../../iup_vbox.c"
   $30 = HEAP32[$29>>2]|0; //@line 100 "../../iup_vbox.c"
   $31 = $8; //@line 100 "../../iup_vbox.c"
   $32 = ((($31)) + 20|0); //@line 100 "../../iup_vbox.c"
   HEAP32[$32>>2] = $30; //@line 100 "../../iup_vbox.c"
  }
  $33 = $8; //@line 103 "../../iup_vbox.c"
  $34 = ((($33)) + 24|0); //@line 103 "../../iup_vbox.c"
  $35 = HEAP32[$34>>2]|0; //@line 103 "../../iup_vbox.c"
  $36 = $35 & 2; //@line 103 "../../iup_vbox.c"
  $37 = ($36|0)!=(0); //@line 103 "../../iup_vbox.c"
  if (!($37)) {
   $38 = $8; //@line 104 "../../iup_vbox.c"
   _iupBaseComputeNaturalSize($38); //@line 104 "../../iup_vbox.c"
  }
  $39 = $8; //@line 106 "../../iup_vbox.c"
  $40 = ((($39)) + 24|0); //@line 106 "../../iup_vbox.c"
  $41 = HEAP32[$40>>2]|0; //@line 106 "../../iup_vbox.c"
  $42 = $41 & 1; //@line 106 "../../iup_vbox.c"
  $43 = ($42|0)!=(0); //@line 106 "../../iup_vbox.c"
  if (!($43)) {
   $44 = $8; //@line 108 "../../iup_vbox.c"
   $45 = ((($44)) + 20|0); //@line 108 "../../iup_vbox.c"
   $46 = HEAP32[$45>>2]|0; //@line 108 "../../iup_vbox.c"
   $47 = $7; //@line 108 "../../iup_vbox.c"
   $48 = HEAP32[$47>>2]|0; //@line 108 "../../iup_vbox.c"
   $49 = $48 | $46; //@line 108 "../../iup_vbox.c"
   HEAP32[$47>>2] = $49; //@line 108 "../../iup_vbox.c"
   $50 = $12; //@line 109 "../../iup_vbox.c"
   $51 = $8; //@line 109 "../../iup_vbox.c"
   $52 = ((($51)) + 44|0); //@line 109 "../../iup_vbox.c"
   $53 = HEAP32[$52>>2]|0; //@line 109 "../../iup_vbox.c"
   $54 = ($50|0)>($53|0); //@line 109 "../../iup_vbox.c"
   if ($54) {
    $55 = $12; //@line 109 "../../iup_vbox.c"
    $59 = $55;
   } else {
    $56 = $8; //@line 109 "../../iup_vbox.c"
    $57 = ((($56)) + 44|0); //@line 109 "../../iup_vbox.c"
    $58 = HEAP32[$57>>2]|0; //@line 109 "../../iup_vbox.c"
    $59 = $58;
   }
   $12 = $59; //@line 109 "../../iup_vbox.c"
   $60 = $13; //@line 110 "../../iup_vbox.c"
   $61 = $8; //@line 110 "../../iup_vbox.c"
   $62 = ((($61)) + 48|0); //@line 110 "../../iup_vbox.c"
   $63 = HEAP32[$62>>2]|0; //@line 110 "../../iup_vbox.c"
   $64 = ($60|0)>($63|0); //@line 110 "../../iup_vbox.c"
   if ($64) {
    $65 = $13; //@line 110 "../../iup_vbox.c"
    $69 = $65;
   } else {
    $66 = $8; //@line 110 "../../iup_vbox.c"
    $67 = ((($66)) + 48|0); //@line 110 "../../iup_vbox.c"
    $68 = HEAP32[$67>>2]|0; //@line 110 "../../iup_vbox.c"
    $69 = $68;
   }
   $13 = $69; //@line 110 "../../iup_vbox.c"
   $70 = $11; //@line 111 "../../iup_vbox.c"
   $71 = (($70) + 1)|0; //@line 111 "../../iup_vbox.c"
   $11 = $71; //@line 111 "../../iup_vbox.c"
  }
  $72 = $8; //@line 97 "../../iup_vbox.c"
  $73 = ((($72)) + 68|0); //@line 97 "../../iup_vbox.c"
  $74 = HEAP32[$73>>2]|0; //@line 97 "../../iup_vbox.c"
  $8 = $74; //@line 97 "../../iup_vbox.c"
 }
 $75 = ((($22)) + 12|0); //@line 116 "../../iup_vbox.c"
 $76 = HEAP32[$75>>2]|0; //@line 116 "../../iup_vbox.c"
 $77 = ($76|0)!=(0); //@line 116 "../../iup_vbox.c"
 if ($77) {
  $78 = $4; //@line 117 "../../iup_vbox.c"
  $79 = $4; //@line 117 "../../iup_vbox.c"
  $80 = ((($79)) + 72|0); //@line 117 "../../iup_vbox.c"
  $81 = HEAP32[$80>>2]|0; //@line 117 "../../iup_vbox.c"
  $82 = ((($81)) + 12|0); //@line 117 "../../iup_vbox.c"
  $83 = HEAP32[$82>>2]|0; //@line 117 "../../iup_vbox.c"
  $84 = $12; //@line 117 "../../iup_vbox.c"
  $85 = $13; //@line 117 "../../iup_vbox.c"
  _iupNormalizeSizeBoxChild($78,$83,$84,$85); //@line 117 "../../iup_vbox.c"
 }
 $86 = $4; //@line 120 "../../iup_vbox.c"
 $87 = ((($86)) + 64|0); //@line 120 "../../iup_vbox.c"
 $88 = HEAP32[$87>>2]|0; //@line 120 "../../iup_vbox.c"
 $8 = $88; //@line 120 "../../iup_vbox.c"
 while(1) {
  $89 = $8; //@line 120 "../../iup_vbox.c"
  $90 = ($89|0)!=(0|0); //@line 120 "../../iup_vbox.c"
  if (!($90)) {
   break;
  }
  $91 = $8; //@line 122 "../../iup_vbox.c"
  $92 = ((($91)) + 24|0); //@line 122 "../../iup_vbox.c"
  $93 = HEAP32[$92>>2]|0; //@line 122 "../../iup_vbox.c"
  $94 = $93 & 1; //@line 122 "../../iup_vbox.c"
  $95 = ($94|0)!=(0); //@line 122 "../../iup_vbox.c"
  if (!($95)) {
   $96 = $8; //@line 123 "../../iup_vbox.c"
   $97 = ((($96)) + 48|0); //@line 123 "../../iup_vbox.c"
   $98 = HEAP32[$97>>2]|0; //@line 123 "../../iup_vbox.c"
   $99 = $14; //@line 123 "../../iup_vbox.c"
   $100 = (($99) + ($98))|0; //@line 123 "../../iup_vbox.c"
   $14 = $100; //@line 123 "../../iup_vbox.c"
  }
  $101 = $8; //@line 120 "../../iup_vbox.c"
  $102 = ((($101)) + 68|0); //@line 120 "../../iup_vbox.c"
  $103 = HEAP32[$102>>2]|0; //@line 120 "../../iup_vbox.c"
  $8 = $103; //@line 120 "../../iup_vbox.c"
 }
 $104 = $4; //@line 127 "../../iup_vbox.c"
 $105 = ((($104)) + 72|0); //@line 127 "../../iup_vbox.c"
 $106 = HEAP32[$105>>2]|0; //@line 127 "../../iup_vbox.c"
 $107 = ((($106)) + 8|0); //@line 127 "../../iup_vbox.c"
 $108 = HEAP32[$107>>2]|0; //@line 127 "../../iup_vbox.c"
 $109 = ($108|0)!=(0); //@line 127 "../../iup_vbox.c"
 if ($109) {
  $110 = $13; //@line 128 "../../iup_vbox.c"
  $111 = $11; //@line 128 "../../iup_vbox.c"
  $112 = Math_imul($110, $111)|0; //@line 128 "../../iup_vbox.c"
  $14 = $112; //@line 128 "../../iup_vbox.c"
 }
 $113 = $12; //@line 131 "../../iup_vbox.c"
 $114 = $4; //@line 131 "../../iup_vbox.c"
 $115 = ((($114)) + 72|0); //@line 131 "../../iup_vbox.c"
 $116 = HEAP32[$115>>2]|0; //@line 131 "../../iup_vbox.c"
 $117 = ((($116)) + 16|0); //@line 131 "../../iup_vbox.c"
 $118 = HEAP32[$117>>2]|0; //@line 131 "../../iup_vbox.c"
 $119 = $118<<1; //@line 131 "../../iup_vbox.c"
 $120 = (($113) + ($119))|0; //@line 131 "../../iup_vbox.c"
 $9 = $120; //@line 131 "../../iup_vbox.c"
 $121 = $14; //@line 132 "../../iup_vbox.c"
 $122 = $11; //@line 132 "../../iup_vbox.c"
 $123 = (($122) - 1)|0; //@line 132 "../../iup_vbox.c"
 $124 = $4; //@line 132 "../../iup_vbox.c"
 $125 = ((($124)) + 72|0); //@line 132 "../../iup_vbox.c"
 $126 = HEAP32[$125>>2]|0; //@line 132 "../../iup_vbox.c"
 $127 = ((($126)) + 24|0); //@line 132 "../../iup_vbox.c"
 $128 = HEAP32[$127>>2]|0; //@line 132 "../../iup_vbox.c"
 $129 = Math_imul($123, $128)|0; //@line 132 "../../iup_vbox.c"
 $130 = (($121) + ($129))|0; //@line 132 "../../iup_vbox.c"
 $131 = $4; //@line 132 "../../iup_vbox.c"
 $132 = ((($131)) + 72|0); //@line 132 "../../iup_vbox.c"
 $133 = HEAP32[$132>>2]|0; //@line 132 "../../iup_vbox.c"
 $134 = ((($133)) + 20|0); //@line 132 "../../iup_vbox.c"
 $135 = HEAP32[$134>>2]|0; //@line 132 "../../iup_vbox.c"
 $136 = $135<<1; //@line 132 "../../iup_vbox.c"
 $137 = (($130) + ($136))|0; //@line 132 "../../iup_vbox.c"
 $10 = $137; //@line 132 "../../iup_vbox.c"
 $138 = $10; //@line 135 "../../iup_vbox.c"
 $139 = $4; //@line 135 "../../iup_vbox.c"
 $140 = ((($139)) + 72|0); //@line 135 "../../iup_vbox.c"
 $141 = HEAP32[$140>>2]|0; //@line 135 "../../iup_vbox.c"
 $142 = ((($141)) + 28|0); //@line 135 "../../iup_vbox.c"
 HEAP32[$142>>2] = $138; //@line 135 "../../iup_vbox.c"
 $143 = $9; //@line 137 "../../iup_vbox.c"
 $144 = $5; //@line 137 "../../iup_vbox.c"
 HEAP32[$144>>2] = $143; //@line 137 "../../iup_vbox.c"
 $145 = $10; //@line 138 "../../iup_vbox.c"
 $146 = $6; //@line 138 "../../iup_vbox.c"
 HEAP32[$146>>2] = $145; //@line 138 "../../iup_vbox.c"
 STACKTOP = sp;return; //@line 139 "../../iup_vbox.c"
}
function _iVboxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = sp;
 $2 = $0;
 $3 = $1;
 $5 = 0; //@line 185 "../../iup_vbox.c"
 $6 = 0; //@line 185 "../../iup_vbox.c"
 $11 = $2; //@line 187 "../../iup_vbox.c"
 $12 = ((($11)) + 72|0); //@line 187 "../../iup_vbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 187 "../../iup_vbox.c"
 $14 = ((($13)) + 8|0); //@line 187 "../../iup_vbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 187 "../../iup_vbox.c"
 $16 = ($15|0)!=(0); //@line 187 "../../iup_vbox.c"
 $17 = $2; //@line 188 "../../iup_vbox.c"
 do {
  if ($16) {
   $18 = (_iHboxCalcHomogeneousHeight($17)|0); //@line 188 "../../iup_vbox.c"
   $19 = $2; //@line 188 "../../iup_vbox.c"
   $20 = ((($19)) + 72|0); //@line 188 "../../iup_vbox.c"
   $21 = HEAP32[$20>>2]|0; //@line 188 "../../iup_vbox.c"
   $22 = ((($21)) + 32|0); //@line 188 "../../iup_vbox.c"
   HEAP32[$22>>2] = $18; //@line 188 "../../iup_vbox.c"
  } else {
   $23 = ((($17)) + 72|0); //@line 191 "../../iup_vbox.c"
   $24 = HEAP32[$23>>2]|0; //@line 191 "../../iup_vbox.c"
   $25 = ((($24)) + 32|0); //@line 191 "../../iup_vbox.c"
   HEAP32[$25>>2] = 0; //@line 191 "../../iup_vbox.c"
   $26 = $2; //@line 195 "../../iup_vbox.c"
   $27 = ((($26)) + 20|0); //@line 195 "../../iup_vbox.c"
   $28 = HEAP32[$27>>2]|0; //@line 195 "../../iup_vbox.c"
   $29 = $28 & 2; //@line 195 "../../iup_vbox.c"
   $30 = ($29|0)!=(0); //@line 195 "../../iup_vbox.c"
   $31 = $2; //@line 196 "../../iup_vbox.c"
   if ($30) {
    $32 = (_iVboxCalcEmptyHeight($31,2)|0); //@line 196 "../../iup_vbox.c"
    $6 = $32; //@line 196 "../../iup_vbox.c"
    break;
   }
   $33 = ((($31)) + 20|0); //@line 198 "../../iup_vbox.c"
   $34 = HEAP32[$33>>2]|0; //@line 198 "../../iup_vbox.c"
   $35 = $34 & 1; //@line 198 "../../iup_vbox.c"
   $36 = ($35|0)!=(0); //@line 198 "../../iup_vbox.c"
   if ($36) {
    $37 = $2; //@line 199 "../../iup_vbox.c"
    $38 = (_iVboxCalcEmptyHeight($37,1)|0); //@line 199 "../../iup_vbox.c"
    $5 = $38; //@line 199 "../../iup_vbox.c"
   }
  }
 } while(0);
 $39 = $2; //@line 202 "../../iup_vbox.c"
 $40 = ((($39)) + 52|0); //@line 202 "../../iup_vbox.c"
 $41 = HEAP32[$40>>2]|0; //@line 202 "../../iup_vbox.c"
 $42 = $2; //@line 202 "../../iup_vbox.c"
 $43 = ((($42)) + 72|0); //@line 202 "../../iup_vbox.c"
 $44 = HEAP32[$43>>2]|0; //@line 202 "../../iup_vbox.c"
 $45 = ((($44)) + 16|0); //@line 202 "../../iup_vbox.c"
 $46 = HEAP32[$45>>2]|0; //@line 202 "../../iup_vbox.c"
 $47 = $46<<1; //@line 202 "../../iup_vbox.c"
 $48 = (($41) - ($47))|0; //@line 202 "../../iup_vbox.c"
 $7 = $48; //@line 202 "../../iup_vbox.c"
 $49 = $7; //@line 203 "../../iup_vbox.c"
 $50 = ($49|0)<(0); //@line 203 "../../iup_vbox.c"
 $$ = $50 ? 0 : $48; //@line 203 "../../iup_vbox.c"
 $7 = $$; //@line 203 "../../iup_vbox.c"
 $51 = $2; //@line 205 "../../iup_vbox.c"
 $52 = ((($51)) + 64|0); //@line 205 "../../iup_vbox.c"
 $53 = HEAP32[$52>>2]|0; //@line 205 "../../iup_vbox.c"
 $4 = $53; //@line 205 "../../iup_vbox.c"
 while(1) {
  $54 = $4; //@line 205 "../../iup_vbox.c"
  $55 = ($54|0)!=(0|0); //@line 205 "../../iup_vbox.c"
  if (!($55)) {
   break;
  }
  $56 = $4; //@line 207 "../../iup_vbox.c"
  $57 = ((($56)) + 24|0); //@line 207 "../../iup_vbox.c"
  $58 = HEAP32[$57>>2]|0; //@line 207 "../../iup_vbox.c"
  $59 = $58 & 1; //@line 207 "../../iup_vbox.c"
  $60 = ($59|0)!=(0); //@line 207 "../../iup_vbox.c"
  do {
   if ($60) {
    $109 = $4; //@line 224 "../../iup_vbox.c"
    $110 = ((($109)) + 24|0); //@line 224 "../../iup_vbox.c"
    $111 = HEAP32[$110>>2]|0; //@line 224 "../../iup_vbox.c"
    $112 = $111 & 2; //@line 224 "../../iup_vbox.c"
    $113 = ($112|0)!=(0); //@line 224 "../../iup_vbox.c"
    if (!($113)) {
     $114 = $4; //@line 227 "../../iup_vbox.c"
     $115 = $4; //@line 227 "../../iup_vbox.c"
     $116 = ((($115)) + 44|0); //@line 227 "../../iup_vbox.c"
     $117 = HEAP32[$116>>2]|0; //@line 227 "../../iup_vbox.c"
     $118 = $4; //@line 227 "../../iup_vbox.c"
     $119 = ((($118)) + 48|0); //@line 227 "../../iup_vbox.c"
     $120 = HEAP32[$119>>2]|0; //@line 227 "../../iup_vbox.c"
     $121 = $3; //@line 227 "../../iup_vbox.c"
     _iupBaseSetCurrentSize($114,$117,$120,$121); //@line 227 "../../iup_vbox.c"
    }
   } else {
    $61 = $2; //@line 209 "../../iup_vbox.c"
    $62 = ((($61)) + 72|0); //@line 209 "../../iup_vbox.c"
    $63 = HEAP32[$62>>2]|0; //@line 209 "../../iup_vbox.c"
    $64 = ((($63)) + 32|0); //@line 209 "../../iup_vbox.c"
    $65 = HEAP32[$64>>2]|0; //@line 209 "../../iup_vbox.c"
    $66 = ($65|0)!=(0); //@line 209 "../../iup_vbox.c"
    $67 = $4; //@line 210 "../../iup_vbox.c"
    if ($66) {
     $68 = $7; //@line 210 "../../iup_vbox.c"
     $69 = $2; //@line 210 "../../iup_vbox.c"
     $70 = ((($69)) + 72|0); //@line 210 "../../iup_vbox.c"
     $71 = HEAP32[$70>>2]|0; //@line 210 "../../iup_vbox.c"
     $72 = ((($71)) + 32|0); //@line 210 "../../iup_vbox.c"
     $73 = HEAP32[$72>>2]|0; //@line 210 "../../iup_vbox.c"
     $74 = $3; //@line 210 "../../iup_vbox.c"
     _iupBaseSetCurrentSize($67,$68,$73,$74); //@line 210 "../../iup_vbox.c"
     break;
    }
    $75 = ((($67)) + 20|0); //@line 213 "../../iup_vbox.c"
    $76 = HEAP32[$75>>2]|0; //@line 213 "../../iup_vbox.c"
    $77 = $76 & 2; //@line 213 "../../iup_vbox.c"
    $78 = ($77|0)!=(0); //@line 213 "../../iup_vbox.c"
    if ($78) {
     $79 = $6; //@line 213 "../../iup_vbox.c"
     $87 = $79;
    } else {
     $80 = $4; //@line 213 "../../iup_vbox.c"
     $81 = ((($80)) + 20|0); //@line 213 "../../iup_vbox.c"
     $82 = HEAP32[$81>>2]|0; //@line 213 "../../iup_vbox.c"
     $83 = $82 & 1; //@line 213 "../../iup_vbox.c"
     $84 = ($83|0)!=(0); //@line 213 "../../iup_vbox.c"
     $85 = $5; //@line 213 "../../iup_vbox.c"
     $86 = $84 ? $85 : 0; //@line 213 "../../iup_vbox.c"
     $87 = $86;
    }
    $8 = $87; //@line 213 "../../iup_vbox.c"
    $88 = $4; //@line 214 "../../iup_vbox.c"
    $89 = (_iupAttribGet($88,20019)|0); //@line 214 "../../iup_vbox.c"
    $9 = $89; //@line 214 "../../iup_vbox.c"
    $90 = $9; //@line 215 "../../iup_vbox.c"
    $91 = ($90|0)!=(0|0); //@line 215 "../../iup_vbox.c"
    if ($91) {
     $92 = $9; //@line 218 "../../iup_vbox.c"
     $93 = (_iupStrToFloat($92,$10)|0); //@line 218 "../../iup_vbox.c"
     $94 = ($93|0)!=(0); //@line 218 "../../iup_vbox.c"
     if ($94) {
      $95 = $8; //@line 219 "../../iup_vbox.c"
      $96 = (+($95|0)); //@line 219 "../../iup_vbox.c"
      $97 = +HEAPF32[$10>>2]; //@line 219 "../../iup_vbox.c"
      $98 = $96 * $97; //@line 219 "../../iup_vbox.c"
      $99 = $98; //@line 219 "../../iup_vbox.c"
      $100 = (_iupRound($99)|0); //@line 219 "../../iup_vbox.c"
      $8 = $100; //@line 219 "../../iup_vbox.c"
     }
    }
    $101 = $4; //@line 221 "../../iup_vbox.c"
    $102 = $7; //@line 221 "../../iup_vbox.c"
    $103 = $4; //@line 221 "../../iup_vbox.c"
    $104 = ((($103)) + 48|0); //@line 221 "../../iup_vbox.c"
    $105 = HEAP32[$104>>2]|0; //@line 221 "../../iup_vbox.c"
    $106 = $8; //@line 221 "../../iup_vbox.c"
    $107 = (($105) + ($106))|0; //@line 221 "../../iup_vbox.c"
    $108 = $3; //@line 221 "../../iup_vbox.c"
    _iupBaseSetCurrentSize($101,$102,$107,$108); //@line 221 "../../iup_vbox.c"
   }
  } while(0);
  $122 = $4; //@line 205 "../../iup_vbox.c"
  $123 = ((($122)) + 68|0); //@line 205 "../../iup_vbox.c"
  $124 = HEAP32[$123>>2]|0; //@line 205 "../../iup_vbox.c"
  $4 = $124; //@line 205 "../../iup_vbox.c"
 }
 STACKTOP = sp;return; //@line 230 "../../iup_vbox.c"
}
function _iVboxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $3; //@line 237 "../../iup_vbox.c"
 $10 = ((($9)) + 72|0); //@line 237 "../../iup_vbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 237 "../../iup_vbox.c"
 $12 = ((($11)) + 16|0); //@line 237 "../../iup_vbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 237 "../../iup_vbox.c"
 $14 = $4; //@line 237 "../../iup_vbox.c"
 $15 = (($14) + ($13))|0; //@line 237 "../../iup_vbox.c"
 $4 = $15; //@line 237 "../../iup_vbox.c"
 $16 = $3; //@line 238 "../../iup_vbox.c"
 $17 = ((($16)) + 72|0); //@line 238 "../../iup_vbox.c"
 $18 = HEAP32[$17>>2]|0; //@line 238 "../../iup_vbox.c"
 $19 = ((($18)) + 20|0); //@line 238 "../../iup_vbox.c"
 $20 = HEAP32[$19>>2]|0; //@line 238 "../../iup_vbox.c"
 $21 = $5; //@line 238 "../../iup_vbox.c"
 $22 = (($21) + ($20))|0; //@line 238 "../../iup_vbox.c"
 $5 = $22; //@line 238 "../../iup_vbox.c"
 $23 = $3; //@line 240 "../../iup_vbox.c"
 $24 = ((($23)) + 52|0); //@line 240 "../../iup_vbox.c"
 $25 = HEAP32[$24>>2]|0; //@line 240 "../../iup_vbox.c"
 $26 = $3; //@line 240 "../../iup_vbox.c"
 $27 = ((($26)) + 72|0); //@line 240 "../../iup_vbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 240 "../../iup_vbox.c"
 $29 = ((($28)) + 16|0); //@line 240 "../../iup_vbox.c"
 $30 = HEAP32[$29>>2]|0; //@line 240 "../../iup_vbox.c"
 $31 = $30<<1; //@line 240 "../../iup_vbox.c"
 $32 = (($25) - ($31))|0; //@line 240 "../../iup_vbox.c"
 $7 = $32; //@line 240 "../../iup_vbox.c"
 $33 = $7; //@line 241 "../../iup_vbox.c"
 $34 = ($33|0)<(0); //@line 241 "../../iup_vbox.c"
 $$ = $34 ? 0 : $32; //@line 241 "../../iup_vbox.c"
 $7 = $$; //@line 241 "../../iup_vbox.c"
 $35 = $3; //@line 243 "../../iup_vbox.c"
 $36 = ((($35)) + 64|0); //@line 243 "../../iup_vbox.c"
 $37 = HEAP32[$36>>2]|0; //@line 243 "../../iup_vbox.c"
 $8 = $37; //@line 243 "../../iup_vbox.c"
 while(1) {
  $38 = $8; //@line 243 "../../iup_vbox.c"
  $39 = ($38|0)!=(0|0); //@line 243 "../../iup_vbox.c"
  if (!($39)) {
   break;
  }
  $40 = $8; //@line 245 "../../iup_vbox.c"
  $41 = ((($40)) + 24|0); //@line 245 "../../iup_vbox.c"
  $42 = HEAP32[$41>>2]|0; //@line 245 "../../iup_vbox.c"
  $43 = $42 & 1; //@line 245 "../../iup_vbox.c"
  $44 = ($43|0)!=(0); //@line 245 "../../iup_vbox.c"
  do {
   if (!($44)) {
    $45 = $3; //@line 247 "../../iup_vbox.c"
    $46 = ((($45)) + 72|0); //@line 247 "../../iup_vbox.c"
    $47 = HEAP32[$46>>2]|0; //@line 247 "../../iup_vbox.c"
    $48 = HEAP32[$47>>2]|0; //@line 247 "../../iup_vbox.c"
    $49 = ($48|0)==(1); //@line 247 "../../iup_vbox.c"
    do {
     if ($49) {
      $50 = $7; //@line 248 "../../iup_vbox.c"
      $51 = $8; //@line 248 "../../iup_vbox.c"
      $52 = ((($51)) + 52|0); //@line 248 "../../iup_vbox.c"
      $53 = HEAP32[$52>>2]|0; //@line 248 "../../iup_vbox.c"
      $54 = (($50) - ($53))|0; //@line 248 "../../iup_vbox.c"
      $55 = (($54|0) / 2)&-1; //@line 248 "../../iup_vbox.c"
      $6 = $55; //@line 248 "../../iup_vbox.c"
     } else {
      $56 = $3; //@line 249 "../../iup_vbox.c"
      $57 = ((($56)) + 72|0); //@line 249 "../../iup_vbox.c"
      $58 = HEAP32[$57>>2]|0; //@line 249 "../../iup_vbox.c"
      $59 = HEAP32[$58>>2]|0; //@line 249 "../../iup_vbox.c"
      $60 = ($59|0)==(2); //@line 249 "../../iup_vbox.c"
      if ($60) {
       $61 = $7; //@line 250 "../../iup_vbox.c"
       $62 = $8; //@line 250 "../../iup_vbox.c"
       $63 = ((($62)) + 52|0); //@line 250 "../../iup_vbox.c"
       $64 = HEAP32[$63>>2]|0; //@line 250 "../../iup_vbox.c"
       $65 = (($61) - ($64))|0; //@line 250 "../../iup_vbox.c"
       $6 = $65; //@line 250 "../../iup_vbox.c"
       break;
      } else {
       $6 = 0; //@line 252 "../../iup_vbox.c"
       break;
      }
     }
    } while(0);
    $66 = $6; //@line 253 "../../iup_vbox.c"
    $67 = ($66|0)<(0); //@line 253 "../../iup_vbox.c"
    if ($67) {
     $6 = 0; //@line 253 "../../iup_vbox.c"
    }
    $68 = $8; //@line 256 "../../iup_vbox.c"
    $69 = $4; //@line 256 "../../iup_vbox.c"
    $70 = $6; //@line 256 "../../iup_vbox.c"
    $71 = (($69) + ($70))|0; //@line 256 "../../iup_vbox.c"
    $72 = $5; //@line 256 "../../iup_vbox.c"
    _iupBaseSetPosition($68,$71,$72); //@line 256 "../../iup_vbox.c"
    $73 = $3; //@line 259 "../../iup_vbox.c"
    $74 = ((($73)) + 72|0); //@line 259 "../../iup_vbox.c"
    $75 = HEAP32[$74>>2]|0; //@line 259 "../../iup_vbox.c"
    $76 = ((($75)) + 32|0); //@line 259 "../../iup_vbox.c"
    $77 = HEAP32[$76>>2]|0; //@line 259 "../../iup_vbox.c"
    $78 = ($77|0)!=(0); //@line 259 "../../iup_vbox.c"
    if ($78) {
     $79 = $3; //@line 260 "../../iup_vbox.c"
     $80 = ((($79)) + 72|0); //@line 260 "../../iup_vbox.c"
     $81 = HEAP32[$80>>2]|0; //@line 260 "../../iup_vbox.c"
     $82 = ((($81)) + 32|0); //@line 260 "../../iup_vbox.c"
     $83 = HEAP32[$82>>2]|0; //@line 260 "../../iup_vbox.c"
     $84 = $3; //@line 260 "../../iup_vbox.c"
     $85 = ((($84)) + 72|0); //@line 260 "../../iup_vbox.c"
     $86 = HEAP32[$85>>2]|0; //@line 260 "../../iup_vbox.c"
     $87 = ((($86)) + 24|0); //@line 260 "../../iup_vbox.c"
     $88 = HEAP32[$87>>2]|0; //@line 260 "../../iup_vbox.c"
     $89 = (($83) + ($88))|0; //@line 260 "../../iup_vbox.c"
     $90 = $5; //@line 260 "../../iup_vbox.c"
     $91 = (($90) + ($89))|0; //@line 260 "../../iup_vbox.c"
     $5 = $91; //@line 260 "../../iup_vbox.c"
     break;
    } else {
     $92 = $8; //@line 262 "../../iup_vbox.c"
     $93 = ((($92)) + 56|0); //@line 262 "../../iup_vbox.c"
     $94 = HEAP32[$93>>2]|0; //@line 262 "../../iup_vbox.c"
     $95 = $3; //@line 262 "../../iup_vbox.c"
     $96 = ((($95)) + 72|0); //@line 262 "../../iup_vbox.c"
     $97 = HEAP32[$96>>2]|0; //@line 262 "../../iup_vbox.c"
     $98 = ((($97)) + 24|0); //@line 262 "../../iup_vbox.c"
     $99 = HEAP32[$98>>2]|0; //@line 262 "../../iup_vbox.c"
     $100 = (($94) + ($99))|0; //@line 262 "../../iup_vbox.c"
     $101 = $5; //@line 262 "../../iup_vbox.c"
     $102 = (($101) + ($100))|0; //@line 262 "../../iup_vbox.c"
     $5 = $102; //@line 262 "../../iup_vbox.c"
     break;
    }
   }
  } while(0);
  $103 = $8; //@line 243 "../../iup_vbox.c"
  $104 = ((($103)) + 68|0); //@line 243 "../../iup_vbox.c"
  $105 = HEAP32[$104>>2]|0; //@line 243 "../../iup_vbox.c"
  $8 = $105; //@line 243 "../../iup_vbox.c"
 }
 STACKTOP = sp;return; //@line 265 "../../iup_vbox.c"
}
function _iVboxSetSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp + 12|0;
 $5 = sp + 8|0;
 $6 = sp + 4|0;
 $7 = sp;
 $2 = $0;
 $3 = $1;
 $8 = $3; //@line 48 "../../iup_vbox.c"
 $9 = ($8|0)!=(0|0); //@line 48 "../../iup_vbox.c"
 if (!($9)) {
  $10 = $2; //@line 50 "../../iup_vbox.c"
  $11 = ((($10)) + 36|0); //@line 50 "../../iup_vbox.c"
  HEAP32[$11>>2] = 0; //@line 50 "../../iup_vbox.c"
  $12 = $2; //@line 51 "../../iup_vbox.c"
  $13 = ((($12)) + 40|0); //@line 51 "../../iup_vbox.c"
  HEAP32[$13>>2] = 0; //@line 51 "../../iup_vbox.c"
  STACKTOP = sp;return 1; //@line 66 "../../iup_vbox.c"
 }
 HEAP32[$4>>2] = 0; //@line 55 "../../iup_vbox.c"
 HEAP32[$5>>2] = 0; //@line 55 "../../iup_vbox.c"
 $14 = $3; //@line 56 "../../iup_vbox.c"
 (_iupStrToIntInt($14,$4,$5,120)|0); //@line 56 "../../iup_vbox.c"
 $15 = HEAP32[$5>>2]|0; //@line 57 "../../iup_vbox.c"
 $16 = ($15|0)!=(0); //@line 57 "../../iup_vbox.c"
 if ($16) {
  $17 = HEAP32[$5>>2]|0; //@line 57 "../../iup_vbox.c"
  HEAP32[$4>>2] = $17; //@line 57 "../../iup_vbox.c"
 }
 $18 = HEAP32[$4>>2]|0; //@line 58 "../../iup_vbox.c"
 $19 = ($18|0)>(0); //@line 58 "../../iup_vbox.c"
 if (!($19)) {
  STACKTOP = sp;return 1; //@line 66 "../../iup_vbox.c"
 }
 $20 = $2; //@line 61 "../../iup_vbox.c"
 _iupdrvFontGetCharSize($20,$6,$7); //@line 61 "../../iup_vbox.c"
 $21 = HEAP32[$4>>2]|0; //@line 62 "../../iup_vbox.c"
 $22 = HEAP32[$7>>2]|0; //@line 62 "../../iup_vbox.c"
 $23 = Math_imul($21, $22)|0; //@line 62 "../../iup_vbox.c"
 $24 = (+($23|0)); //@line 62 "../../iup_vbox.c"
 $25 = $24 / 8.0; //@line 62 "../../iup_vbox.c"
 $26 = $25 + 0.5; //@line 62 "../../iup_vbox.c"
 $27 = (~~(($26))); //@line 62 "../../iup_vbox.c"
 $28 = $2; //@line 62 "../../iup_vbox.c"
 $29 = ((($28)) + 40|0); //@line 62 "../../iup_vbox.c"
 HEAP32[$29>>2] = $27; //@line 62 "../../iup_vbox.c"
 $30 = $2; //@line 63 "../../iup_vbox.c"
 $31 = ((($30)) + 36|0); //@line 63 "../../iup_vbox.c"
 HEAP32[$31>>2] = 0; //@line 63 "../../iup_vbox.c"
 STACKTOP = sp;return 1; //@line 66 "../../iup_vbox.c"
}
function _iVboxSetRasterSizeAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp + 4|0;
 $5 = sp;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 26 "../../iup_vbox.c"
 $7 = ($6|0)!=(0|0); //@line 26 "../../iup_vbox.c"
 if ($7) {
  HEAP32[$4>>2] = 0; //@line 33 "../../iup_vbox.c"
  HEAP32[$5>>2] = 0; //@line 33 "../../iup_vbox.c"
  $12 = $3; //@line 34 "../../iup_vbox.c"
  (_iupStrToIntInt($12,$4,$5,120)|0); //@line 34 "../../iup_vbox.c"
  $13 = HEAP32[$5>>2]|0; //@line 35 "../../iup_vbox.c"
  $14 = ($13|0)!=(0); //@line 35 "../../iup_vbox.c"
  if ($14) {
   $15 = HEAP32[$5>>2]|0; //@line 35 "../../iup_vbox.c"
   HEAP32[$4>>2] = $15; //@line 35 "../../iup_vbox.c"
  }
  $16 = HEAP32[$4>>2]|0; //@line 36 "../../iup_vbox.c"
  $17 = ($16|0)>(0); //@line 36 "../../iup_vbox.c"
  if ($17) {
   $18 = HEAP32[$4>>2]|0; //@line 38 "../../iup_vbox.c"
   $19 = $2; //@line 38 "../../iup_vbox.c"
   $20 = ((($19)) + 40|0); //@line 38 "../../iup_vbox.c"
   HEAP32[$20>>2] = $18; //@line 38 "../../iup_vbox.c"
   $21 = $2; //@line 39 "../../iup_vbox.c"
   $22 = ((($21)) + 36|0); //@line 39 "../../iup_vbox.c"
   HEAP32[$22>>2] = 0; //@line 39 "../../iup_vbox.c"
  }
 } else {
  $8 = $2; //@line 28 "../../iup_vbox.c"
  $9 = ((($8)) + 36|0); //@line 28 "../../iup_vbox.c"
  HEAP32[$9>>2] = 0; //@line 28 "../../iup_vbox.c"
  $10 = $2; //@line 29 "../../iup_vbox.c"
  $11 = ((($10)) + 40|0); //@line 29 "../../iup_vbox.c"
  HEAP32[$11>>2] = 0; //@line 29 "../../iup_vbox.c"
 }
 $23 = $2; //@line 42 "../../iup_vbox.c"
 _iupAttribSet($23,20003,0); //@line 42 "../../iup_vbox.c"
 STACKTOP = sp;return 0; //@line 43 "../../iup_vbox.c"
}
function _iVboxGetAlignmentAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 $1 = $0;
 ;HEAP32[$2>>2]=HEAP32[1012>>2]|0;HEAP32[$2+4>>2]=HEAP32[1012+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[1012+8>>2]|0; //@line 82 "../../iup_vbox.c"
 $3 = $1; //@line 83 "../../iup_vbox.c"
 $4 = ((($3)) + 72|0); //@line 83 "../../iup_vbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 83 "../../iup_vbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 83 "../../iup_vbox.c"
 $7 = (($2) + ($6<<2)|0); //@line 83 "../../iup_vbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 83 "../../iup_vbox.c"
 $9 = (_iupStrReturnStr($8)|0); //@line 83 "../../iup_vbox.c"
 STACKTOP = sp;return ($9|0); //@line 83 "../../iup_vbox.c"
}
function _iVboxSetAlignmentAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 71 "../../iup_vbox.c"
 $5 = (_iupStrEqualNoCase($4,20162)|0); //@line 71 "../../iup_vbox.c"
 $6 = ($5|0)!=(0); //@line 71 "../../iup_vbox.c"
 if ($6) {
  $7 = $2; //@line 72 "../../iup_vbox.c"
  $8 = ((($7)) + 72|0); //@line 72 "../../iup_vbox.c"
  $9 = HEAP32[$8>>2]|0; //@line 72 "../../iup_vbox.c"
  HEAP32[$9>>2] = 2; //@line 72 "../../iup_vbox.c"
  STACKTOP = sp;return 0; //@line 77 "../../iup_vbox.c"
 }
 $10 = $3; //@line 73 "../../iup_vbox.c"
 $11 = (_iupStrEqualNoCase($10,20689)|0); //@line 73 "../../iup_vbox.c"
 $12 = ($11|0)!=(0); //@line 73 "../../iup_vbox.c"
 if ($12) {
  $13 = $2; //@line 74 "../../iup_vbox.c"
  $14 = ((($13)) + 72|0); //@line 74 "../../iup_vbox.c"
  $15 = HEAP32[$14>>2]|0; //@line 74 "../../iup_vbox.c"
  HEAP32[$15>>2] = 1; //@line 74 "../../iup_vbox.c"
  STACKTOP = sp;return 0; //@line 77 "../../iup_vbox.c"
 }
 $16 = $3; //@line 75 "../../iup_vbox.c"
 $17 = (_iupStrEqualNoCase($16,20156)|0); //@line 75 "../../iup_vbox.c"
 $18 = ($17|0)!=(0); //@line 75 "../../iup_vbox.c"
 if (!($18)) {
  STACKTOP = sp;return 0; //@line 77 "../../iup_vbox.c"
 }
 $19 = $2; //@line 76 "../../iup_vbox.c"
 $20 = ((($19)) + 72|0); //@line 76 "../../iup_vbox.c"
 $21 = HEAP32[$20>>2]|0; //@line 76 "../../iup_vbox.c"
 HEAP32[$21>>2] = 0; //@line 76 "../../iup_vbox.c"
 STACKTOP = sp;return 0; //@line 77 "../../iup_vbox.c"
}
function _iHboxCalcHomogeneousHeight($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $5 = 0; //@line 146 "../../iup_vbox.c"
 $6 = $2; //@line 147 "../../iup_vbox.c"
 $7 = ((($6)) + 64|0); //@line 147 "../../iup_vbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 147 "../../iup_vbox.c"
 $3 = $8; //@line 147 "../../iup_vbox.c"
 while(1) {
  $9 = $3; //@line 147 "../../iup_vbox.c"
  $10 = ($9|0)!=(0|0); //@line 147 "../../iup_vbox.c"
  if (!($10)) {
   break;
  }
  $11 = $3; //@line 149 "../../iup_vbox.c"
  $12 = ((($11)) + 24|0); //@line 149 "../../iup_vbox.c"
  $13 = HEAP32[$12>>2]|0; //@line 149 "../../iup_vbox.c"
  $14 = $13 & 1; //@line 149 "../../iup_vbox.c"
  $15 = ($14|0)!=(0); //@line 149 "../../iup_vbox.c"
  if (!($15)) {
   $16 = $5; //@line 150 "../../iup_vbox.c"
   $17 = (($16) + 1)|0; //@line 150 "../../iup_vbox.c"
   $5 = $17; //@line 150 "../../iup_vbox.c"
  }
  $18 = $3; //@line 147 "../../iup_vbox.c"
  $19 = ((($18)) + 68|0); //@line 147 "../../iup_vbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 147 "../../iup_vbox.c"
  $3 = $20; //@line 147 "../../iup_vbox.c"
 }
 $21 = $5; //@line 152 "../../iup_vbox.c"
 $22 = ($21|0)==(0); //@line 152 "../../iup_vbox.c"
 if ($22) {
  $1 = 0; //@line 153 "../../iup_vbox.c"
  $47 = $1; //@line 159 "../../iup_vbox.c"
  STACKTOP = sp;return ($47|0); //@line 159 "../../iup_vbox.c"
 } else {
  $23 = $2; //@line 156 "../../iup_vbox.c"
  $24 = ((($23)) + 56|0); //@line 156 "../../iup_vbox.c"
  $25 = HEAP32[$24>>2]|0; //@line 156 "../../iup_vbox.c"
  $26 = $5; //@line 156 "../../iup_vbox.c"
  $27 = (($26) - 1)|0; //@line 156 "../../iup_vbox.c"
  $28 = $2; //@line 156 "../../iup_vbox.c"
  $29 = ((($28)) + 72|0); //@line 156 "../../iup_vbox.c"
  $30 = HEAP32[$29>>2]|0; //@line 156 "../../iup_vbox.c"
  $31 = ((($30)) + 24|0); //@line 156 "../../iup_vbox.c"
  $32 = HEAP32[$31>>2]|0; //@line 156 "../../iup_vbox.c"
  $33 = Math_imul($27, $32)|0; //@line 156 "../../iup_vbox.c"
  $34 = (($25) - ($33))|0; //@line 156 "../../iup_vbox.c"
  $35 = $2; //@line 156 "../../iup_vbox.c"
  $36 = ((($35)) + 72|0); //@line 156 "../../iup_vbox.c"
  $37 = HEAP32[$36>>2]|0; //@line 156 "../../iup_vbox.c"
  $38 = ((($37)) + 20|0); //@line 156 "../../iup_vbox.c"
  $39 = HEAP32[$38>>2]|0; //@line 156 "../../iup_vbox.c"
  $40 = $39<<1; //@line 156 "../../iup_vbox.c"
  $41 = (($34) - ($40))|0; //@line 156 "../../iup_vbox.c"
  $42 = $5; //@line 156 "../../iup_vbox.c"
  $43 = (($41|0) / ($42|0))&-1; //@line 156 "../../iup_vbox.c"
  $4 = $43; //@line 156 "../../iup_vbox.c"
  $44 = $4; //@line 157 "../../iup_vbox.c"
  $45 = ($44|0)<(0); //@line 157 "../../iup_vbox.c"
  $$ = $45 ? 0 : $43; //@line 157 "../../iup_vbox.c"
  $4 = $$; //@line 157 "../../iup_vbox.c"
  $46 = $4; //@line 158 "../../iup_vbox.c"
  $1 = $46; //@line 158 "../../iup_vbox.c"
  $47 = $1; //@line 159 "../../iup_vbox.c"
  STACKTOP = sp;return ($47|0); //@line 159 "../../iup_vbox.c"
 }
 return (0)|0;
}
function _iVboxCalcEmptyHeight($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $7 = 0; //@line 167 "../../iup_vbox.c"
 $8 = $3; //@line 168 "../../iup_vbox.c"
 $9 = ((($8)) + 64|0); //@line 168 "../../iup_vbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 168 "../../iup_vbox.c"
 $5 = $10; //@line 168 "../../iup_vbox.c"
 while(1) {
  $11 = $5; //@line 168 "../../iup_vbox.c"
  $12 = ($11|0)!=(0|0); //@line 168 "../../iup_vbox.c"
  if (!($12)) {
   break;
  }
  $13 = $5; //@line 170 "../../iup_vbox.c"
  $14 = ((($13)) + 24|0); //@line 170 "../../iup_vbox.c"
  $15 = HEAP32[$14>>2]|0; //@line 170 "../../iup_vbox.c"
  $16 = $15 & 1; //@line 170 "../../iup_vbox.c"
  $17 = ($16|0)!=(0); //@line 170 "../../iup_vbox.c"
  if (!($17)) {
   $18 = $5; //@line 170 "../../iup_vbox.c"
   $19 = ((($18)) + 20|0); //@line 170 "../../iup_vbox.c"
   $20 = HEAP32[$19>>2]|0; //@line 170 "../../iup_vbox.c"
   $21 = $4; //@line 170 "../../iup_vbox.c"
   $22 = $20 & $21; //@line 170 "../../iup_vbox.c"
   $23 = ($22|0)!=(0); //@line 170 "../../iup_vbox.c"
   if ($23) {
    $24 = $7; //@line 171 "../../iup_vbox.c"
    $25 = (($24) + 1)|0; //@line 171 "../../iup_vbox.c"
    $7 = $25; //@line 171 "../../iup_vbox.c"
   }
  }
  $26 = $5; //@line 168 "../../iup_vbox.c"
  $27 = ((($26)) + 68|0); //@line 168 "../../iup_vbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 168 "../../iup_vbox.c"
  $5 = $28; //@line 168 "../../iup_vbox.c"
 }
 $29 = $7; //@line 173 "../../iup_vbox.c"
 $30 = ($29|0)==(0); //@line 173 "../../iup_vbox.c"
 if ($30) {
  $2 = 0; //@line 174 "../../iup_vbox.c"
  $45 = $2; //@line 180 "../../iup_vbox.c"
  STACKTOP = sp;return ($45|0); //@line 180 "../../iup_vbox.c"
 } else {
  $31 = $3; //@line 177 "../../iup_vbox.c"
  $32 = ((($31)) + 56|0); //@line 177 "../../iup_vbox.c"
  $33 = HEAP32[$32>>2]|0; //@line 177 "../../iup_vbox.c"
  $34 = $3; //@line 177 "../../iup_vbox.c"
  $35 = ((($34)) + 72|0); //@line 177 "../../iup_vbox.c"
  $36 = HEAP32[$35>>2]|0; //@line 177 "../../iup_vbox.c"
  $37 = ((($36)) + 28|0); //@line 177 "../../iup_vbox.c"
  $38 = HEAP32[$37>>2]|0; //@line 177 "../../iup_vbox.c"
  $39 = (($33) - ($38))|0; //@line 177 "../../iup_vbox.c"
  $40 = $7; //@line 177 "../../iup_vbox.c"
  $41 = (($39|0) / ($40|0))&-1; //@line 177 "../../iup_vbox.c"
  $6 = $41; //@line 177 "../../iup_vbox.c"
  $42 = $6; //@line 178 "../../iup_vbox.c"
  $43 = ($42|0)<(0); //@line 178 "../../iup_vbox.c"
  $$ = $43 ? 0 : $41; //@line 178 "../../iup_vbox.c"
  $6 = $$; //@line 178 "../../iup_vbox.c"
  $44 = $6; //@line 179 "../../iup_vbox.c"
  $2 = $44; //@line 179 "../../iup_vbox.c"
  $45 = $2; //@line 180 "../../iup_vbox.c"
  STACKTOP = sp;return ($45|0); //@line 180 "../../iup_vbox.c"
 }
 return (0)|0;
}
function _IupZbox($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp;
 $1 = $0;
 HEAP32[$4>>2] = $varargs; //@line 332 "../../iup_zbox.c"
 $5 = $1; //@line 333 "../../iup_zbox.c"
 $6 = (_iupObjectGetParamList($5,$4)|0); //@line 333 "../../iup_zbox.c"
 $2 = $6; //@line 333 "../../iup_zbox.c"
 $7 = $2; //@line 336 "../../iup_zbox.c"
 $8 = (_IupCreatev(20032,$7)|0); //@line 336 "../../iup_zbox.c"
 $3 = $8; //@line 336 "../../iup_zbox.c"
 $9 = $2; //@line 337 "../../iup_zbox.c"
 _free($9); //@line 337 "../../iup_zbox.c"
 $10 = $3; //@line 339 "../../iup_zbox.c"
 STACKTOP = sp;return ($10|0); //@line 339 "../../iup_zbox.c"
}
function _iupZboxNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 344 "../../iup_zbox.c"
 $0 = $1; //@line 344 "../../iup_zbox.c"
 $2 = $0; //@line 346 "../../iup_zbox.c"
 HEAP32[$2>>2] = 20032; //@line 346 "../../iup_zbox.c"
 $3 = $0; //@line 347 "../../iup_zbox.c"
 $4 = ((($3)) + 4|0); //@line 347 "../../iup_zbox.c"
 HEAP32[$4>>2] = 20071; //@line 347 "../../iup_zbox.c"
 $5 = $0; //@line 348 "../../iup_zbox.c"
 $6 = ((($5)) + 8|0); //@line 348 "../../iup_zbox.c"
 HEAP32[$6>>2] = 0; //@line 348 "../../iup_zbox.c"
 $7 = $0; //@line 349 "../../iup_zbox.c"
 $8 = ((($7)) + 12|0); //@line 349 "../../iup_zbox.c"
 HEAP32[$8>>2] = 1; //@line 349 "../../iup_zbox.c"
 $9 = $0; //@line 350 "../../iup_zbox.c"
 $10 = ((($9)) + 16|0); //@line 350 "../../iup_zbox.c"
 HEAP32[$10>>2] = 0; //@line 350 "../../iup_zbox.c"
 $11 = $0; //@line 353 "../../iup_zbox.c"
 $12 = ((($11)) + 32|0); //@line 353 "../../iup_zbox.c"
 HEAP32[$12>>2] = 542; //@line 353 "../../iup_zbox.c"
 $13 = $0; //@line 354 "../../iup_zbox.c"
 $14 = ((($13)) + 40|0); //@line 354 "../../iup_zbox.c"
 HEAP32[$14>>2] = 543; //@line 354 "../../iup_zbox.c"
 $15 = $0; //@line 355 "../../iup_zbox.c"
 $16 = ((($15)) + 44|0); //@line 355 "../../iup_zbox.c"
 HEAP32[$16>>2] = 26; //@line 355 "../../iup_zbox.c"
 $17 = $0; //@line 356 "../../iup_zbox.c"
 $18 = ((($17)) + 64|0); //@line 356 "../../iup_zbox.c"
 HEAP32[$18>>2] = 544; //@line 356 "../../iup_zbox.c"
 $19 = $0; //@line 357 "../../iup_zbox.c"
 $20 = ((($19)) + 68|0); //@line 357 "../../iup_zbox.c"
 HEAP32[$20>>2] = 545; //@line 357 "../../iup_zbox.c"
 $21 = $0; //@line 359 "../../iup_zbox.c"
 $22 = ((($21)) + 76|0); //@line 359 "../../iup_zbox.c"
 HEAP32[$22>>2] = 546; //@line 359 "../../iup_zbox.c"
 $23 = $0; //@line 360 "../../iup_zbox.c"
 $24 = ((($23)) + 80|0); //@line 360 "../../iup_zbox.c"
 HEAP32[$24>>2] = 547; //@line 360 "../../iup_zbox.c"
 $25 = $0; //@line 361 "../../iup_zbox.c"
 $26 = ((($25)) + 84|0); //@line 361 "../../iup_zbox.c"
 HEAP32[$26>>2] = 548; //@line 361 "../../iup_zbox.c"
 $27 = $0; //@line 364 "../../iup_zbox.c"
 _iupBaseRegisterCommonAttrib($27); //@line 364 "../../iup_zbox.c"
 $28 = $0; //@line 367 "../../iup_zbox.c"
 _iupClassRegisterAttribute($28,20073,20,0,(-1),20441,9); //@line 367 "../../iup_zbox.c"
 $29 = $0; //@line 368 "../../iup_zbox.c"
 _iupClassRegisterAttribute($29,20080,63,0,0,0,41); //@line 368 "../../iup_zbox.c"
 $30 = $0; //@line 369 "../../iup_zbox.c"
 _iupClassRegisterAttribute($30,20091,28,0,0,0,41); //@line 369 "../../iup_zbox.c"
 $31 = $0; //@line 372 "../../iup_zbox.c"
 _iupClassRegisterAttribute($31,20679,549,550,(-1),20065,9); //@line 372 "../../iup_zbox.c"
 $32 = $0; //@line 373 "../../iup_zbox.c"
 _iupClassRegisterAttribute($32,20104,551,552,0,0,9); //@line 373 "../../iup_zbox.c"
 $33 = $0; //@line 374 "../../iup_zbox.c"
 _iupClassRegisterAttribute($33,20110,553,554,0,0,9); //@line 374 "../../iup_zbox.c"
 $34 = $0; //@line 375 "../../iup_zbox.c"
 _iupClassRegisterAttribute($34,20119,555,556,0,0,4109); //@line 375 "../../iup_zbox.c"
 $35 = $0; //@line 378 "../../iup_zbox.c"
 _iupClassRegisterAttribute($35,20132,0,557,(-1),20441,520); //@line 378 "../../iup_zbox.c"
 $36 = $0; //@line 380 "../../iup_zbox.c"
 STACKTOP = sp;return ($36|0); //@line 380 "../../iup_zbox.c"
}
function _iZboxCreateMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = (_calloc(1,8)|0); //@line 34 "../../iup_zbox.c"
 $6 = $2; //@line 34 "../../iup_zbox.c"
 $7 = ((($6)) + 72|0); //@line 34 "../../iup_zbox.c"
 HEAP32[$7>>2] = $5; //@line 34 "../../iup_zbox.c"
 $8 = $2; //@line 36 "../../iup_zbox.c"
 $9 = ((($8)) + 72|0); //@line 36 "../../iup_zbox.c"
 $10 = HEAP32[$9>>2]|0; //@line 36 "../../iup_zbox.c"
 HEAP32[$10>>2] = 6; //@line 36 "../../iup_zbox.c"
 $11 = $3; //@line 38 "../../iup_zbox.c"
 $12 = ($11|0)!=(0|0); //@line 38 "../../iup_zbox.c"
 if (!($12)) {
  STACKTOP = sp;return 0; //@line 48 "../../iup_zbox.c"
 }
 $13 = $3; //@line 40 "../../iup_zbox.c"
 $4 = $13; //@line 40 "../../iup_zbox.c"
 while(1) {
  $14 = $4; //@line 41 "../../iup_zbox.c"
  $15 = HEAP32[$14>>2]|0; //@line 41 "../../iup_zbox.c"
  $16 = ($15|0)!=(0|0); //@line 41 "../../iup_zbox.c"
  if (!($16)) {
   break;
  }
  $17 = $2; //@line 43 "../../iup_zbox.c"
  $18 = $4; //@line 43 "../../iup_zbox.c"
  $19 = HEAP32[$18>>2]|0; //@line 43 "../../iup_zbox.c"
  (_IupAppend($17,$19)|0); //@line 43 "../../iup_zbox.c"
  $20 = $4; //@line 44 "../../iup_zbox.c"
  $21 = ((($20)) + 4|0); //@line 44 "../../iup_zbox.c"
  $4 = $21; //@line 44 "../../iup_zbox.c"
 }
 STACKTOP = sp;return 0; //@line 48 "../../iup_zbox.c"
}
function _iZboxChildAddedMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 53 "../../iup_zbox.c"
 $5 = ((($4)) + 72|0); //@line 53 "../../iup_zbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 53 "../../iup_zbox.c"
 $7 = ((($6)) + 4|0); //@line 53 "../../iup_zbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 53 "../../iup_zbox.c"
 $9 = ($8|0)!=(0|0); //@line 53 "../../iup_zbox.c"
 $10 = $3; //@line 59 "../../iup_zbox.c"
 if ($9) {
  _IupSetAttribute($10,20132,20140); //@line 59 "../../iup_zbox.c"
  STACKTOP = sp;return; //@line 60 "../../iup_zbox.c"
 } else {
  $11 = $2; //@line 55 "../../iup_zbox.c"
  $12 = (_IupGetAttribute($11,20132)|0); //@line 55 "../../iup_zbox.c"
  _IupSetAttribute($10,20132,$12); //@line 55 "../../iup_zbox.c"
  $13 = $3; //@line 56 "../../iup_zbox.c"
  $14 = $2; //@line 56 "../../iup_zbox.c"
  $15 = ((($14)) + 72|0); //@line 56 "../../iup_zbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 56 "../../iup_zbox.c"
  $17 = ((($16)) + 4|0); //@line 56 "../../iup_zbox.c"
  HEAP32[$17>>2] = $13; //@line 56 "../../iup_zbox.c"
  STACKTOP = sp;return; //@line 60 "../../iup_zbox.c"
 }
}
function _iZboxChildRemovedMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 66 "../../iup_zbox.c"
 $7 = $3; //@line 66 "../../iup_zbox.c"
 $8 = ((($7)) + 72|0); //@line 66 "../../iup_zbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 66 "../../iup_zbox.c"
 $10 = ((($9)) + 4|0); //@line 66 "../../iup_zbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 66 "../../iup_zbox.c"
 $12 = ($6|0)==($11|0); //@line 66 "../../iup_zbox.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 73 "../../iup_zbox.c"
 }
 $13 = $3; //@line 69 "../../iup_zbox.c"
 $14 = ((($13)) + 64|0); //@line 69 "../../iup_zbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 69 "../../iup_zbox.c"
 $16 = ($15|0)!=(0|0); //@line 69 "../../iup_zbox.c"
 if ($16) {
  $17 = $3; //@line 70 "../../iup_zbox.c"
  $18 = ((($17)) + 64|0); //@line 70 "../../iup_zbox.c"
  $19 = HEAP32[$18>>2]|0; //@line 70 "../../iup_zbox.c"
  $20 = $3; //@line 70 "../../iup_zbox.c"
  $21 = (_IupGetAttribute($20,20132)|0); //@line 70 "../../iup_zbox.c"
  _IupSetAttribute($19,20132,$21); //@line 70 "../../iup_zbox.c"
 }
 $22 = $3; //@line 71 "../../iup_zbox.c"
 $23 = ((($22)) + 64|0); //@line 71 "../../iup_zbox.c"
 $24 = HEAP32[$23>>2]|0; //@line 71 "../../iup_zbox.c"
 $25 = $3; //@line 71 "../../iup_zbox.c"
 $26 = ((($25)) + 72|0); //@line 71 "../../iup_zbox.c"
 $27 = HEAP32[$26>>2]|0; //@line 71 "../../iup_zbox.c"
 $28 = ((($27)) + 4|0); //@line 71 "../../iup_zbox.c"
 HEAP32[$28>>2] = $24; //@line 71 "../../iup_zbox.c"
 STACKTOP = sp;return; //@line 73 "../../iup_zbox.c"
}
function _iZboxComputeNaturalSizeMethod($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $9 = 0; //@line 228 "../../iup_zbox.c"
 $10 = 0; //@line 229 "../../iup_zbox.c"
 $11 = $4; //@line 231 "../../iup_zbox.c"
 $12 = ((($11)) + 64|0); //@line 231 "../../iup_zbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 231 "../../iup_zbox.c"
 $8 = $13; //@line 231 "../../iup_zbox.c"
 while(1) {
  $14 = $8; //@line 231 "../../iup_zbox.c"
  $15 = ($14|0)!=(0|0); //@line 231 "../../iup_zbox.c"
  if (!($15)) {
   break;
  }
  $16 = $8; //@line 234 "../../iup_zbox.c"
  $17 = ((($16)) + 24|0); //@line 234 "../../iup_zbox.c"
  $18 = HEAP32[$17>>2]|0; //@line 234 "../../iup_zbox.c"
  $19 = $18 & 2; //@line 234 "../../iup_zbox.c"
  $20 = ($19|0)!=(0); //@line 234 "../../iup_zbox.c"
  if (!($20)) {
   $21 = $8; //@line 235 "../../iup_zbox.c"
   _iupBaseComputeNaturalSize($21); //@line 235 "../../iup_zbox.c"
  }
  $22 = $8; //@line 237 "../../iup_zbox.c"
  $23 = ((($22)) + 24|0); //@line 237 "../../iup_zbox.c"
  $24 = HEAP32[$23>>2]|0; //@line 237 "../../iup_zbox.c"
  $25 = $24 & 1; //@line 237 "../../iup_zbox.c"
  $26 = ($25|0)!=(0); //@line 237 "../../iup_zbox.c"
  if (!($26)) {
   $27 = $8; //@line 239 "../../iup_zbox.c"
   $28 = ((($27)) + 20|0); //@line 239 "../../iup_zbox.c"
   $29 = HEAP32[$28>>2]|0; //@line 239 "../../iup_zbox.c"
   $30 = $7; //@line 239 "../../iup_zbox.c"
   $31 = HEAP32[$30>>2]|0; //@line 239 "../../iup_zbox.c"
   $32 = $31 | $29; //@line 239 "../../iup_zbox.c"
   HEAP32[$30>>2] = $32; //@line 239 "../../iup_zbox.c"
   $33 = $9; //@line 240 "../../iup_zbox.c"
   $34 = $8; //@line 240 "../../iup_zbox.c"
   $35 = ((($34)) + 44|0); //@line 240 "../../iup_zbox.c"
   $36 = HEAP32[$35>>2]|0; //@line 240 "../../iup_zbox.c"
   $37 = ($33|0)>($36|0); //@line 240 "../../iup_zbox.c"
   if ($37) {
    $38 = $9; //@line 240 "../../iup_zbox.c"
    $42 = $38;
   } else {
    $39 = $8; //@line 240 "../../iup_zbox.c"
    $40 = ((($39)) + 44|0); //@line 240 "../../iup_zbox.c"
    $41 = HEAP32[$40>>2]|0; //@line 240 "../../iup_zbox.c"
    $42 = $41;
   }
   $9 = $42; //@line 240 "../../iup_zbox.c"
   $43 = $10; //@line 241 "../../iup_zbox.c"
   $44 = $8; //@line 241 "../../iup_zbox.c"
   $45 = ((($44)) + 48|0); //@line 241 "../../iup_zbox.c"
   $46 = HEAP32[$45>>2]|0; //@line 241 "../../iup_zbox.c"
   $47 = ($43|0)>($46|0); //@line 241 "../../iup_zbox.c"
   if ($47) {
    $48 = $10; //@line 241 "../../iup_zbox.c"
    $52 = $48;
   } else {
    $49 = $8; //@line 241 "../../iup_zbox.c"
    $50 = ((($49)) + 48|0); //@line 241 "../../iup_zbox.c"
    $51 = HEAP32[$50>>2]|0; //@line 241 "../../iup_zbox.c"
    $52 = $51;
   }
   $10 = $52; //@line 241 "../../iup_zbox.c"
  }
  $53 = $8; //@line 231 "../../iup_zbox.c"
  $54 = ((($53)) + 68|0); //@line 231 "../../iup_zbox.c"
  $55 = HEAP32[$54>>2]|0; //@line 231 "../../iup_zbox.c"
  $8 = $55; //@line 231 "../../iup_zbox.c"
 }
 $56 = $9; //@line 245 "../../iup_zbox.c"
 $57 = $5; //@line 245 "../../iup_zbox.c"
 HEAP32[$57>>2] = $56; //@line 245 "../../iup_zbox.c"
 $58 = $10; //@line 246 "../../iup_zbox.c"
 $59 = $6; //@line 246 "../../iup_zbox.c"
 HEAP32[$59>>2] = $58; //@line 246 "../../iup_zbox.c"
 STACKTOP = sp;return; //@line 247 "../../iup_zbox.c"
}
function _iZboxSetChildrenCurrentSizeMethod($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 252 "../../iup_zbox.c"
 $6 = ((($5)) + 64|0); //@line 252 "../../iup_zbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 252 "../../iup_zbox.c"
 $4 = $7; //@line 252 "../../iup_zbox.c"
 while(1) {
  $8 = $4; //@line 252 "../../iup_zbox.c"
  $9 = ($8|0)!=(0|0); //@line 252 "../../iup_zbox.c"
  if (!($9)) {
   break;
  }
  $10 = $4; //@line 254 "../../iup_zbox.c"
  $11 = ((($10)) + 24|0); //@line 254 "../../iup_zbox.c"
  $12 = HEAP32[$11>>2]|0; //@line 254 "../../iup_zbox.c"
  $13 = $12 & 1; //@line 254 "../../iup_zbox.c"
  $14 = ($13|0)!=(0); //@line 254 "../../iup_zbox.c"
  if (!($14)) {
   $15 = $4; //@line 255 "../../iup_zbox.c"
   $16 = $2; //@line 255 "../../iup_zbox.c"
   $17 = ((($16)) + 52|0); //@line 255 "../../iup_zbox.c"
   $18 = HEAP32[$17>>2]|0; //@line 255 "../../iup_zbox.c"
   $19 = $2; //@line 255 "../../iup_zbox.c"
   $20 = ((($19)) + 56|0); //@line 255 "../../iup_zbox.c"
   $21 = HEAP32[$20>>2]|0; //@line 255 "../../iup_zbox.c"
   $22 = $3; //@line 255 "../../iup_zbox.c"
   _iupBaseSetCurrentSize($15,$18,$21,$22); //@line 255 "../../iup_zbox.c"
  }
  $23 = $4; //@line 252 "../../iup_zbox.c"
  $24 = ((($23)) + 68|0); //@line 252 "../../iup_zbox.c"
  $25 = HEAP32[$24>>2]|0; //@line 252 "../../iup_zbox.c"
  $4 = $25; //@line 252 "../../iup_zbox.c"
 }
 STACKTOP = sp;return; //@line 257 "../../iup_zbox.c"
}
function _iZboxSetChildrenPositionMethod($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 261 "../../iup_zbox.c"
 $7 = 0; //@line 261 "../../iup_zbox.c"
 $9 = $3; //@line 264 "../../iup_zbox.c"
 $10 = ((($9)) + 64|0); //@line 264 "../../iup_zbox.c"
 $11 = HEAP32[$10>>2]|0; //@line 264 "../../iup_zbox.c"
 $8 = $11; //@line 264 "../../iup_zbox.c"
 while(1) {
  $12 = $8; //@line 264 "../../iup_zbox.c"
  $13 = ($12|0)!=(0|0); //@line 264 "../../iup_zbox.c"
  if (!($13)) {
   break;
  }
  $14 = $8; //@line 266 "../../iup_zbox.c"
  $15 = ((($14)) + 24|0); //@line 266 "../../iup_zbox.c"
  $16 = HEAP32[$15>>2]|0; //@line 266 "../../iup_zbox.c"
  $17 = $16 & 1; //@line 266 "../../iup_zbox.c"
  $18 = ($17|0)!=(0); //@line 266 "../../iup_zbox.c"
  if (!($18)) {
   $19 = $3; //@line 268 "../../iup_zbox.c"
   $20 = ((($19)) + 72|0); //@line 268 "../../iup_zbox.c"
   $21 = HEAP32[$20>>2]|0; //@line 268 "../../iup_zbox.c"
   $22 = HEAP32[$21>>2]|0; //@line 268 "../../iup_zbox.c"
   switch ($22|0) {
   case 8:  {
    $23 = $3; //@line 271 "../../iup_zbox.c"
    $24 = ((($23)) + 52|0); //@line 271 "../../iup_zbox.c"
    $25 = HEAP32[$24>>2]|0; //@line 271 "../../iup_zbox.c"
    $26 = $8; //@line 271 "../../iup_zbox.c"
    $27 = ((($26)) + 52|0); //@line 271 "../../iup_zbox.c"
    $28 = HEAP32[$27>>2]|0; //@line 271 "../../iup_zbox.c"
    $29 = (($25) - ($28))|0; //@line 271 "../../iup_zbox.c"
    $30 = (($29|0) / 2)&-1; //@line 271 "../../iup_zbox.c"
    $6 = $30; //@line 271 "../../iup_zbox.c"
    $31 = $3; //@line 272 "../../iup_zbox.c"
    $32 = ((($31)) + 56|0); //@line 272 "../../iup_zbox.c"
    $33 = HEAP32[$32>>2]|0; //@line 272 "../../iup_zbox.c"
    $34 = $8; //@line 272 "../../iup_zbox.c"
    $35 = ((($34)) + 56|0); //@line 272 "../../iup_zbox.c"
    $36 = HEAP32[$35>>2]|0; //@line 272 "../../iup_zbox.c"
    $37 = (($33) - ($36))|0; //@line 272 "../../iup_zbox.c"
    $38 = (($37|0) / 2)&-1; //@line 272 "../../iup_zbox.c"
    $7 = $38; //@line 272 "../../iup_zbox.c"
    break;
   }
   case 0:  {
    $39 = $3; //@line 275 "../../iup_zbox.c"
    $40 = ((($39)) + 52|0); //@line 275 "../../iup_zbox.c"
    $41 = HEAP32[$40>>2]|0; //@line 275 "../../iup_zbox.c"
    $42 = $8; //@line 275 "../../iup_zbox.c"
    $43 = ((($42)) + 52|0); //@line 275 "../../iup_zbox.c"
    $44 = HEAP32[$43>>2]|0; //@line 275 "../../iup_zbox.c"
    $45 = (($41) - ($44))|0; //@line 275 "../../iup_zbox.c"
    $46 = (($45|0) / 2)&-1; //@line 275 "../../iup_zbox.c"
    $6 = $46; //@line 275 "../../iup_zbox.c"
    $7 = 0; //@line 276 "../../iup_zbox.c"
    break;
   }
   case 1:  {
    $47 = $3; //@line 279 "../../iup_zbox.c"
    $48 = ((($47)) + 52|0); //@line 279 "../../iup_zbox.c"
    $49 = HEAP32[$48>>2]|0; //@line 279 "../../iup_zbox.c"
    $50 = $8; //@line 279 "../../iup_zbox.c"
    $51 = ((($50)) + 52|0); //@line 279 "../../iup_zbox.c"
    $52 = HEAP32[$51>>2]|0; //@line 279 "../../iup_zbox.c"
    $53 = (($49) - ($52))|0; //@line 279 "../../iup_zbox.c"
    $54 = (($53|0) / 2)&-1; //@line 279 "../../iup_zbox.c"
    $6 = $54; //@line 279 "../../iup_zbox.c"
    $55 = $3; //@line 280 "../../iup_zbox.c"
    $56 = ((($55)) + 56|0); //@line 280 "../../iup_zbox.c"
    $57 = HEAP32[$56>>2]|0; //@line 280 "../../iup_zbox.c"
    $58 = $8; //@line 280 "../../iup_zbox.c"
    $59 = ((($58)) + 56|0); //@line 280 "../../iup_zbox.c"
    $60 = HEAP32[$59>>2]|0; //@line 280 "../../iup_zbox.c"
    $61 = (($57) - ($60))|0; //@line 280 "../../iup_zbox.c"
    $7 = $61; //@line 280 "../../iup_zbox.c"
    break;
   }
   case 2:  {
    $6 = 0; //@line 283 "../../iup_zbox.c"
    $62 = $3; //@line 284 "../../iup_zbox.c"
    $63 = ((($62)) + 56|0); //@line 284 "../../iup_zbox.c"
    $64 = HEAP32[$63>>2]|0; //@line 284 "../../iup_zbox.c"
    $65 = $8; //@line 284 "../../iup_zbox.c"
    $66 = ((($65)) + 56|0); //@line 284 "../../iup_zbox.c"
    $67 = HEAP32[$66>>2]|0; //@line 284 "../../iup_zbox.c"
    $68 = (($64) - ($67))|0; //@line 284 "../../iup_zbox.c"
    $69 = (($68|0) / 2)&-1; //@line 284 "../../iup_zbox.c"
    $7 = $69; //@line 284 "../../iup_zbox.c"
    break;
   }
   case 3:  {
    $70 = $3; //@line 287 "../../iup_zbox.c"
    $71 = ((($70)) + 52|0); //@line 287 "../../iup_zbox.c"
    $72 = HEAP32[$71>>2]|0; //@line 287 "../../iup_zbox.c"
    $73 = $8; //@line 287 "../../iup_zbox.c"
    $74 = ((($73)) + 52|0); //@line 287 "../../iup_zbox.c"
    $75 = HEAP32[$74>>2]|0; //@line 287 "../../iup_zbox.c"
    $76 = (($72) - ($75))|0; //@line 287 "../../iup_zbox.c"
    $6 = $76; //@line 287 "../../iup_zbox.c"
    $77 = $3; //@line 288 "../../iup_zbox.c"
    $78 = ((($77)) + 56|0); //@line 288 "../../iup_zbox.c"
    $79 = HEAP32[$78>>2]|0; //@line 288 "../../iup_zbox.c"
    $80 = $8; //@line 288 "../../iup_zbox.c"
    $81 = ((($80)) + 56|0); //@line 288 "../../iup_zbox.c"
    $82 = HEAP32[$81>>2]|0; //@line 288 "../../iup_zbox.c"
    $83 = (($79) - ($82))|0; //@line 288 "../../iup_zbox.c"
    $84 = (($83|0) / 2)&-1; //@line 288 "../../iup_zbox.c"
    $7 = $84; //@line 288 "../../iup_zbox.c"
    break;
   }
   case 4:  {
    $85 = $3; //@line 291 "../../iup_zbox.c"
    $86 = ((($85)) + 52|0); //@line 291 "../../iup_zbox.c"
    $87 = HEAP32[$86>>2]|0; //@line 291 "../../iup_zbox.c"
    $88 = $8; //@line 291 "../../iup_zbox.c"
    $89 = ((($88)) + 52|0); //@line 291 "../../iup_zbox.c"
    $90 = HEAP32[$89>>2]|0; //@line 291 "../../iup_zbox.c"
    $91 = (($87) - ($90))|0; //@line 291 "../../iup_zbox.c"
    $6 = $91; //@line 291 "../../iup_zbox.c"
    $7 = 0; //@line 292 "../../iup_zbox.c"
    break;
   }
   case 5:  {
    $92 = $3; //@line 295 "../../iup_zbox.c"
    $93 = ((($92)) + 52|0); //@line 295 "../../iup_zbox.c"
    $94 = HEAP32[$93>>2]|0; //@line 295 "../../iup_zbox.c"
    $95 = $8; //@line 295 "../../iup_zbox.c"
    $96 = ((($95)) + 52|0); //@line 295 "../../iup_zbox.c"
    $97 = HEAP32[$96>>2]|0; //@line 295 "../../iup_zbox.c"
    $98 = (($94) - ($97))|0; //@line 295 "../../iup_zbox.c"
    $6 = $98; //@line 295 "../../iup_zbox.c"
    $99 = $3; //@line 296 "../../iup_zbox.c"
    $100 = ((($99)) + 56|0); //@line 296 "../../iup_zbox.c"
    $101 = HEAP32[$100>>2]|0; //@line 296 "../../iup_zbox.c"
    $102 = $8; //@line 296 "../../iup_zbox.c"
    $103 = ((($102)) + 56|0); //@line 296 "../../iup_zbox.c"
    $104 = HEAP32[$103>>2]|0; //@line 296 "../../iup_zbox.c"
    $105 = (($101) - ($104))|0; //@line 296 "../../iup_zbox.c"
    $7 = $105; //@line 296 "../../iup_zbox.c"
    break;
   }
   case 7:  {
    $6 = 0; //@line 299 "../../iup_zbox.c"
    $106 = $3; //@line 300 "../../iup_zbox.c"
    $107 = ((($106)) + 56|0); //@line 300 "../../iup_zbox.c"
    $108 = HEAP32[$107>>2]|0; //@line 300 "../../iup_zbox.c"
    $109 = $8; //@line 300 "../../iup_zbox.c"
    $110 = ((($109)) + 56|0); //@line 300 "../../iup_zbox.c"
    $111 = HEAP32[$110>>2]|0; //@line 300 "../../iup_zbox.c"
    $112 = (($108) - ($111))|0; //@line 300 "../../iup_zbox.c"
    $7 = $112; //@line 300 "../../iup_zbox.c"
    break;
   }
   default: {
    $6 = 0; //@line 304 "../../iup_zbox.c"
    $7 = 0; //@line 305 "../../iup_zbox.c"
   }
   }
   $113 = $6; //@line 308 "../../iup_zbox.c"
   $114 = ($113|0)<(0); //@line 308 "../../iup_zbox.c"
   if ($114) {
    $6 = 0; //@line 308 "../../iup_zbox.c"
   }
   $115 = $7; //@line 309 "../../iup_zbox.c"
   $116 = ($115|0)<(0); //@line 309 "../../iup_zbox.c"
   if ($116) {
    $7 = 0; //@line 309 "../../iup_zbox.c"
   }
   $117 = $8; //@line 312 "../../iup_zbox.c"
   $118 = $4; //@line 312 "../../iup_zbox.c"
   $119 = $6; //@line 312 "../../iup_zbox.c"
   $120 = (($118) + ($119))|0; //@line 312 "../../iup_zbox.c"
   $121 = $5; //@line 312 "../../iup_zbox.c"
   $122 = $7; //@line 312 "../../iup_zbox.c"
   $123 = (($121) + ($122))|0; //@line 312 "../../iup_zbox.c"
   _iupBaseSetPosition($117,$120,$123); //@line 312 "../../iup_zbox.c"
  }
  $124 = $8; //@line 264 "../../iup_zbox.c"
  $125 = ((($124)) + 68|0); //@line 264 "../../iup_zbox.c"
  $126 = HEAP32[$125>>2]|0; //@line 264 "../../iup_zbox.c"
  $8 = $126; //@line 264 "../../iup_zbox.c"
 }
 STACKTOP = sp;return; //@line 315 "../../iup_zbox.c"
}
function _iZboxGetAlignmentAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 103 "../../iup_zbox.c"
 $3 = ((($2)) + 72|0); //@line 103 "../../iup_zbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 103 "../../iup_zbox.c"
 $5 = HEAP32[$4>>2]|0; //@line 103 "../../iup_zbox.c"
 $6 = (1024 + ($5<<2)|0); //@line 103 "../../iup_zbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 103 "../../iup_zbox.c"
 STACKTOP = sp;return ($7|0); //@line 103 "../../iup_zbox.c"
}
function _iZboxSetAlignmentAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 77 "../../iup_zbox.c"
 $5 = (_iupStrEqualNoCase($4,20037)|0); //@line 77 "../../iup_zbox.c"
 $6 = ($5|0)!=(0); //@line 77 "../../iup_zbox.c"
 if (!($6)) {
  $7 = $3; //@line 77 "../../iup_zbox.c"
  $8 = (_iupStrEqualNoCase($7,20143)|0); //@line 77 "../../iup_zbox.c"
  $9 = ($8|0)!=(0); //@line 77 "../../iup_zbox.c"
  if (!($9)) {
   $13 = $3; //@line 79 "../../iup_zbox.c"
   $14 = (_iupStrEqualNoCase($13,20043)|0); //@line 79 "../../iup_zbox.c"
   $15 = ($14|0)!=(0); //@line 79 "../../iup_zbox.c"
   if (!($15)) {
    $16 = $3; //@line 79 "../../iup_zbox.c"
    $17 = (_iupStrEqualNoCase($16,20148)|0); //@line 79 "../../iup_zbox.c"
    $18 = ($17|0)!=(0); //@line 79 "../../iup_zbox.c"
    if (!($18)) {
     $22 = $3; //@line 81 "../../iup_zbox.c"
     $23 = (_iupStrEqualNoCase($22,20049)|0); //@line 81 "../../iup_zbox.c"
     $24 = ($23|0)!=(0); //@line 81 "../../iup_zbox.c"
     if (!($24)) {
      $25 = $3; //@line 81 "../../iup_zbox.c"
      $26 = (_iupStrEqualNoCase($25,20156)|0); //@line 81 "../../iup_zbox.c"
      $27 = ($26|0)!=(0); //@line 81 "../../iup_zbox.c"
      if (!($27)) {
       $31 = $3; //@line 83 "../../iup_zbox.c"
       $32 = (_iupStrEqualNoCase($31,20054)|0); //@line 83 "../../iup_zbox.c"
       $33 = ($32|0)!=(0); //@line 83 "../../iup_zbox.c"
       if (!($33)) {
        $34 = $3; //@line 83 "../../iup_zbox.c"
        $35 = (_iupStrEqualNoCase($34,20162)|0); //@line 83 "../../iup_zbox.c"
        $36 = ($35|0)!=(0); //@line 83 "../../iup_zbox.c"
        if (!($36)) {
         $40 = $3; //@line 85 "../../iup_zbox.c"
         $41 = (_iupStrEqualNoCase($40,20059)|0); //@line 85 "../../iup_zbox.c"
         $42 = ($41|0)!=(0); //@line 85 "../../iup_zbox.c"
         if ($42) {
          $43 = $2; //@line 86 "../../iup_zbox.c"
          $44 = ((($43)) + 72|0); //@line 86 "../../iup_zbox.c"
          $45 = HEAP32[$44>>2]|0; //@line 86 "../../iup_zbox.c"
          HEAP32[$45>>2] = 4; //@line 86 "../../iup_zbox.c"
          STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
         }
         $46 = $3; //@line 87 "../../iup_zbox.c"
         $47 = (_iupStrEqualNoCase($46,20062)|0); //@line 87 "../../iup_zbox.c"
         $48 = ($47|0)!=(0); //@line 87 "../../iup_zbox.c"
         if ($48) {
          $49 = $2; //@line 88 "../../iup_zbox.c"
          $50 = ((($49)) + 72|0); //@line 88 "../../iup_zbox.c"
          $51 = HEAP32[$50>>2]|0; //@line 88 "../../iup_zbox.c"
          HEAP32[$51>>2] = 5; //@line 88 "../../iup_zbox.c"
          STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
         }
         $52 = $3; //@line 89 "../../iup_zbox.c"
         $53 = (_iupStrEqualNoCase($52,20065)|0); //@line 89 "../../iup_zbox.c"
         $54 = ($53|0)!=(0); //@line 89 "../../iup_zbox.c"
         if ($54) {
          $55 = $2; //@line 90 "../../iup_zbox.c"
          $56 = ((($55)) + 72|0); //@line 90 "../../iup_zbox.c"
          $57 = HEAP32[$56>>2]|0; //@line 90 "../../iup_zbox.c"
          HEAP32[$57>>2] = 6; //@line 90 "../../iup_zbox.c"
          STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
         }
         $58 = $3; //@line 91 "../../iup_zbox.c"
         $59 = (_iupStrEqualNoCase($58,20068)|0); //@line 91 "../../iup_zbox.c"
         $60 = ($59|0)!=(0); //@line 91 "../../iup_zbox.c"
         if ($60) {
          $61 = $2; //@line 92 "../../iup_zbox.c"
          $62 = ((($61)) + 72|0); //@line 92 "../../iup_zbox.c"
          $63 = HEAP32[$62>>2]|0; //@line 92 "../../iup_zbox.c"
          HEAP32[$63>>2] = 7; //@line 92 "../../iup_zbox.c"
          STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
         }
         $64 = $3; //@line 93 "../../iup_zbox.c"
         $65 = (_iupStrEqualNoCase($64,20689)|0); //@line 93 "../../iup_zbox.c"
         $66 = ($65|0)!=(0); //@line 93 "../../iup_zbox.c"
         if (!($66)) {
          STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
         }
         $67 = $2; //@line 94 "../../iup_zbox.c"
         $68 = ((($67)) + 72|0); //@line 94 "../../iup_zbox.c"
         $69 = HEAP32[$68>>2]|0; //@line 94 "../../iup_zbox.c"
         HEAP32[$69>>2] = 8; //@line 94 "../../iup_zbox.c"
         STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
        }
       }
       $37 = $2; //@line 84 "../../iup_zbox.c"
       $38 = ((($37)) + 72|0); //@line 84 "../../iup_zbox.c"
       $39 = HEAP32[$38>>2]|0; //@line 84 "../../iup_zbox.c"
       HEAP32[$39>>2] = 3; //@line 84 "../../iup_zbox.c"
       STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
      }
     }
     $28 = $2; //@line 82 "../../iup_zbox.c"
     $29 = ((($28)) + 72|0); //@line 82 "../../iup_zbox.c"
     $30 = HEAP32[$29>>2]|0; //@line 82 "../../iup_zbox.c"
     HEAP32[$30>>2] = 2; //@line 82 "../../iup_zbox.c"
     STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
    }
   }
   $19 = $2; //@line 80 "../../iup_zbox.c"
   $20 = ((($19)) + 72|0); //@line 80 "../../iup_zbox.c"
   $21 = HEAP32[$20>>2]|0; //@line 80 "../../iup_zbox.c"
   HEAP32[$21>>2] = 1; //@line 80 "../../iup_zbox.c"
   STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
  }
 }
 $10 = $2; //@line 78 "../../iup_zbox.c"
 $11 = ((($10)) + 72|0); //@line 78 "../../iup_zbox.c"
 $12 = HEAP32[$11>>2]|0; //@line 78 "../../iup_zbox.c"
 HEAP32[$12>>2] = 0; //@line 78 "../../iup_zbox.c"
 STACKTOP = sp;return 0; //@line 95 "../../iup_zbox.c"
}
function _iZboxGetValueAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 203 "../../iup_zbox.c"
 $6 = ((($5)) + 72|0); //@line 203 "../../iup_zbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 203 "../../iup_zbox.c"
 $8 = ((($7)) + 4|0); //@line 203 "../../iup_zbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 203 "../../iup_zbox.c"
 $10 = (_iupObjectCheck($9)|0); //@line 203 "../../iup_zbox.c"
 $11 = ($10|0)!=(0); //@line 203 "../../iup_zbox.c"
 if (!($11)) {
  $1 = 0; //@line 204 "../../iup_zbox.c"
  $35 = $1; //@line 213 "../../iup_zbox.c"
  STACKTOP = sp;return ($35|0); //@line 213 "../../iup_zbox.c"
 }
 $4 = 0; //@line 206 "../../iup_zbox.c"
 $12 = $2; //@line 206 "../../iup_zbox.c"
 $13 = ((($12)) + 64|0); //@line 206 "../../iup_zbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 206 "../../iup_zbox.c"
 $3 = $14; //@line 206 "../../iup_zbox.c"
 while(1) {
  $15 = $3; //@line 206 "../../iup_zbox.c"
  $16 = ($15|0)!=(0|0); //@line 206 "../../iup_zbox.c"
  if (!($16)) {
   label = 8;
   break;
  }
  $17 = $3; //@line 208 "../../iup_zbox.c"
  $18 = $2; //@line 208 "../../iup_zbox.c"
  $19 = ((($18)) + 72|0); //@line 208 "../../iup_zbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 208 "../../iup_zbox.c"
  $21 = ((($20)) + 4|0); //@line 208 "../../iup_zbox.c"
  $22 = HEAP32[$21>>2]|0; //@line 208 "../../iup_zbox.c"
  $23 = ($17|0)==($22|0); //@line 208 "../../iup_zbox.c"
  if ($23) {
   label = 6;
   break;
  }
  $30 = $3; //@line 206 "../../iup_zbox.c"
  $31 = ((($30)) + 68|0); //@line 206 "../../iup_zbox.c"
  $32 = HEAP32[$31>>2]|0; //@line 206 "../../iup_zbox.c"
  $3 = $32; //@line 206 "../../iup_zbox.c"
  $33 = $4; //@line 206 "../../iup_zbox.c"
  $34 = (($33) + 1)|0; //@line 206 "../../iup_zbox.c"
  $4 = $34; //@line 206 "../../iup_zbox.c"
 }
 if ((label|0) == 6) {
  $24 = $2; //@line 209 "../../iup_zbox.c"
  $25 = ((($24)) + 72|0); //@line 209 "../../iup_zbox.c"
  $26 = HEAP32[$25>>2]|0; //@line 209 "../../iup_zbox.c"
  $27 = ((($26)) + 4|0); //@line 209 "../../iup_zbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 209 "../../iup_zbox.c"
  $29 = (_IupGetName($28)|0); //@line 209 "../../iup_zbox.c"
  $1 = $29; //@line 209 "../../iup_zbox.c"
  $35 = $1; //@line 213 "../../iup_zbox.c"
  STACKTOP = sp;return ($35|0); //@line 213 "../../iup_zbox.c"
 }
 else if ((label|0) == 8) {
  $1 = 0; //@line 212 "../../iup_zbox.c"
  $35 = $1; //@line 213 "../../iup_zbox.c"
  STACKTOP = sp;return ($35|0); //@line 213 "../../iup_zbox.c"
 }
 return (0)|0;
}
function _iZboxSetValueAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $6 = $4; //@line 186 "../../iup_zbox.c"
 $7 = ($6|0)!=(0|0); //@line 186 "../../iup_zbox.c"
 do {
  if ($7) {
   $8 = $4; //@line 189 "../../iup_zbox.c"
   $9 = (_IupGetHandle($8)|0); //@line 189 "../../iup_zbox.c"
   $5 = $9; //@line 189 "../../iup_zbox.c"
   $10 = $5; //@line 190 "../../iup_zbox.c"
   $11 = ($10|0)!=(0|0); //@line 190 "../../iup_zbox.c"
   if ($11) {
    $12 = $3; //@line 193 "../../iup_zbox.c"
    $13 = $5; //@line 193 "../../iup_zbox.c"
    (_iZboxSetValueHandleAttrib($12,$13)|0); //@line 193 "../../iup_zbox.c"
    $2 = 0; //@line 195 "../../iup_zbox.c"
    break;
   } else {
    $2 = 0; //@line 191 "../../iup_zbox.c"
    break;
   }
  } else {
   $2 = 0; //@line 187 "../../iup_zbox.c"
  }
 } while(0);
 $14 = $2; //@line 196 "../../iup_zbox.c"
 STACKTOP = sp;return ($14|0); //@line 196 "../../iup_zbox.c"
}
function _iZboxGetValuePosAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $5 = $2; //@line 170 "../../iup_zbox.c"
 $6 = ((($5)) + 72|0); //@line 170 "../../iup_zbox.c"
 $7 = HEAP32[$6>>2]|0; //@line 170 "../../iup_zbox.c"
 $8 = ((($7)) + 4|0); //@line 170 "../../iup_zbox.c"
 $9 = HEAP32[$8>>2]|0; //@line 170 "../../iup_zbox.c"
 $10 = (_iupObjectCheck($9)|0); //@line 170 "../../iup_zbox.c"
 $11 = ($10|0)!=(0); //@line 170 "../../iup_zbox.c"
 if (!($11)) {
  $1 = 0; //@line 171 "../../iup_zbox.c"
  $31 = $1; //@line 180 "../../iup_zbox.c"
  STACKTOP = sp;return ($31|0); //@line 180 "../../iup_zbox.c"
 }
 $4 = 0; //@line 173 "../../iup_zbox.c"
 $12 = $2; //@line 173 "../../iup_zbox.c"
 $13 = ((($12)) + 64|0); //@line 173 "../../iup_zbox.c"
 $14 = HEAP32[$13>>2]|0; //@line 173 "../../iup_zbox.c"
 $3 = $14; //@line 173 "../../iup_zbox.c"
 while(1) {
  $15 = $3; //@line 173 "../../iup_zbox.c"
  $16 = ($15|0)!=(0|0); //@line 173 "../../iup_zbox.c"
  if (!($16)) {
   label = 8;
   break;
  }
  $17 = $3; //@line 175 "../../iup_zbox.c"
  $18 = $2; //@line 175 "../../iup_zbox.c"
  $19 = ((($18)) + 72|0); //@line 175 "../../iup_zbox.c"
  $20 = HEAP32[$19>>2]|0; //@line 175 "../../iup_zbox.c"
  $21 = ((($20)) + 4|0); //@line 175 "../../iup_zbox.c"
  $22 = HEAP32[$21>>2]|0; //@line 175 "../../iup_zbox.c"
  $23 = ($17|0)==($22|0); //@line 175 "../../iup_zbox.c"
  if ($23) {
   label = 6;
   break;
  }
  $26 = $3; //@line 173 "../../iup_zbox.c"
  $27 = ((($26)) + 68|0); //@line 173 "../../iup_zbox.c"
  $28 = HEAP32[$27>>2]|0; //@line 173 "../../iup_zbox.c"
  $3 = $28; //@line 173 "../../iup_zbox.c"
  $29 = $4; //@line 173 "../../iup_zbox.c"
  $30 = (($29) + 1)|0; //@line 173 "../../iup_zbox.c"
  $4 = $30; //@line 173 "../../iup_zbox.c"
 }
 if ((label|0) == 6) {
  $24 = $4; //@line 176 "../../iup_zbox.c"
  $25 = (_iupStrReturnInt($24)|0); //@line 176 "../../iup_zbox.c"
  $1 = $25; //@line 176 "../../iup_zbox.c"
  $31 = $1; //@line 180 "../../iup_zbox.c"
  STACKTOP = sp;return ($31|0); //@line 180 "../../iup_zbox.c"
 }
 else if ((label|0) == 8) {
  $1 = 0; //@line 179 "../../iup_zbox.c"
  $31 = $1; //@line 180 "../../iup_zbox.c"
  STACKTOP = sp;return ($31|0); //@line 180 "../../iup_zbox.c"
 }
 return (0)|0;
}
function _iZboxSetValuePosAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp + 4|0;
 $3 = $0;
 $4 = $1;
 $8 = $4; //@line 150 "../../iup_zbox.c"
 $9 = (_iupStrToInt($8,$6)|0); //@line 150 "../../iup_zbox.c"
 $10 = ($9|0)!=(0); //@line 150 "../../iup_zbox.c"
 if (!($10)) {
  $2 = 0; //@line 151 "../../iup_zbox.c"
  $26 = $2; //@line 163 "../../iup_zbox.c"
  STACKTOP = sp;return ($26|0); //@line 163 "../../iup_zbox.c"
 }
 $7 = 0; //@line 153 "../../iup_zbox.c"
 $11 = $3; //@line 153 "../../iup_zbox.c"
 $12 = ((($11)) + 64|0); //@line 153 "../../iup_zbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 153 "../../iup_zbox.c"
 $5 = $13; //@line 153 "../../iup_zbox.c"
 while(1) {
  $14 = $5; //@line 153 "../../iup_zbox.c"
  $15 = ($14|0)!=(0|0); //@line 153 "../../iup_zbox.c"
  if (!($15)) {
   label = 8;
   break;
  }
  $16 = $7; //@line 155 "../../iup_zbox.c"
  $17 = HEAP32[$6>>2]|0; //@line 155 "../../iup_zbox.c"
  $18 = ($16|0)==($17|0); //@line 155 "../../iup_zbox.c"
  if ($18) {
   label = 6;
   break;
  }
  $21 = $5; //@line 153 "../../iup_zbox.c"
  $22 = ((($21)) + 68|0); //@line 153 "../../iup_zbox.c"
  $23 = HEAP32[$22>>2]|0; //@line 153 "../../iup_zbox.c"
  $5 = $23; //@line 153 "../../iup_zbox.c"
  $24 = $7; //@line 153 "../../iup_zbox.c"
  $25 = (($24) + 1)|0; //@line 153 "../../iup_zbox.c"
  $7 = $25; //@line 153 "../../iup_zbox.c"
 }
 if ((label|0) == 6) {
  $19 = $3; //@line 157 "../../iup_zbox.c"
  $20 = $5; //@line 157 "../../iup_zbox.c"
  (_iZboxSetValueHandleAttrib($19,$20)|0); //@line 157 "../../iup_zbox.c"
  $2 = 0; //@line 158 "../../iup_zbox.c"
  $26 = $2; //@line 163 "../../iup_zbox.c"
  STACKTOP = sp;return ($26|0); //@line 163 "../../iup_zbox.c"
 }
 else if ((label|0) == 8) {
  $2 = 0; //@line 162 "../../iup_zbox.c"
  $26 = $2; //@line 163 "../../iup_zbox.c"
  STACKTOP = sp;return ($26|0); //@line 163 "../../iup_zbox.c"
 }
 return (0)|0;
}
function _iZboxGetValueHandleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 142 "../../iup_zbox.c"
 $3 = ((($2)) + 72|0); //@line 142 "../../iup_zbox.c"
 $4 = HEAP32[$3>>2]|0; //@line 142 "../../iup_zbox.c"
 $5 = ((($4)) + 4|0); //@line 142 "../../iup_zbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 142 "../../iup_zbox.c"
 STACKTOP = sp;return ($6|0); //@line 142 "../../iup_zbox.c"
}
function _iZboxSetValueHandleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $9 = $4; //@line 111 "../../iup_zbox.c"
 $7 = $9; //@line 111 "../../iup_zbox.c"
 $10 = $7; //@line 112 "../../iup_zbox.c"
 $11 = (_iupObjectCheck($10)|0); //@line 112 "../../iup_zbox.c"
 $12 = ($11|0)!=(0); //@line 112 "../../iup_zbox.c"
 if (!($12)) {
  $2 = 0; //@line 113 "../../iup_zbox.c"
  $52 = $2; //@line 138 "../../iup_zbox.c"
  STACKTOP = sp;return ($52|0); //@line 138 "../../iup_zbox.c"
 }
 $13 = $3; //@line 115 "../../iup_zbox.c"
 $14 = ((($13)) + 72|0); //@line 115 "../../iup_zbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 115 "../../iup_zbox.c"
 $16 = ((($15)) + 4|0); //@line 115 "../../iup_zbox.c"
 $17 = HEAP32[$16>>2]|0; //@line 115 "../../iup_zbox.c"
 $6 = $17; //@line 115 "../../iup_zbox.c"
 $18 = $6; //@line 116 "../../iup_zbox.c"
 $19 = (_iupObjectCheck($18)|0); //@line 116 "../../iup_zbox.c"
 $20 = ($19|0)!=(0); //@line 116 "../../iup_zbox.c"
 if (!($20)) {
  $6 = 0; //@line 117 "../../iup_zbox.c"
 }
 $21 = $6; //@line 119 "../../iup_zbox.c"
 $22 = $7; //@line 119 "../../iup_zbox.c"
 $23 = ($21|0)==($22|0); //@line 119 "../../iup_zbox.c"
 if ($23) {
  $2 = 0; //@line 120 "../../iup_zbox.c"
  $52 = $2; //@line 138 "../../iup_zbox.c"
  STACKTOP = sp;return ($52|0); //@line 138 "../../iup_zbox.c"
 }
 $24 = $3; //@line 122 "../../iup_zbox.c"
 $25 = (_IupGetInt($24,20132)|0); //@line 122 "../../iup_zbox.c"
 $5 = $25; //@line 122 "../../iup_zbox.c"
 $26 = $3; //@line 124 "../../iup_zbox.c"
 $27 = ((($26)) + 64|0); //@line 124 "../../iup_zbox.c"
 $28 = HEAP32[$27>>2]|0; //@line 124 "../../iup_zbox.c"
 $8 = $28; //@line 124 "../../iup_zbox.c"
 while(1) {
  $29 = $8; //@line 124 "../../iup_zbox.c"
  $30 = ($29|0)!=(0|0); //@line 124 "../../iup_zbox.c"
  if (!($30)) {
   label = 15;
   break;
  }
  $31 = $8; //@line 126 "../../iup_zbox.c"
  $32 = $7; //@line 126 "../../iup_zbox.c"
  $33 = ($31|0)==($32|0); //@line 126 "../../iup_zbox.c"
  if ($33) {
   break;
  }
  $49 = $8; //@line 124 "../../iup_zbox.c"
  $50 = ((($49)) + 68|0); //@line 124 "../../iup_zbox.c"
  $51 = HEAP32[$50>>2]|0; //@line 124 "../../iup_zbox.c"
  $8 = $51; //@line 124 "../../iup_zbox.c"
 }
 if ((label|0) == 15) {
  $2 = 0; //@line 137 "../../iup_zbox.c"
  $52 = $2; //@line 138 "../../iup_zbox.c"
  STACKTOP = sp;return ($52|0); //@line 138 "../../iup_zbox.c"
 }
 $34 = $6; //@line 128 "../../iup_zbox.c"
 $35 = ($34|0)!=(0|0); //@line 128 "../../iup_zbox.c"
 if ($35) {
  $36 = $6; //@line 128 "../../iup_zbox.c"
  $37 = $7; //@line 128 "../../iup_zbox.c"
  $38 = ($36|0)!=($37|0); //@line 128 "../../iup_zbox.c"
  if ($38) {
   $39 = $6; //@line 129 "../../iup_zbox.c"
   _IupSetAttribute($39,20132,20140); //@line 129 "../../iup_zbox.c"
  }
 }
 $40 = $7; //@line 131 "../../iup_zbox.c"
 $41 = $5; //@line 131 "../../iup_zbox.c"
 $42 = ($41|0)!=(0); //@line 131 "../../iup_zbox.c"
 $43 = $42 ? 20441 : 20140; //@line 131 "../../iup_zbox.c"
 _IupSetAttribute($40,20132,$43); //@line 131 "../../iup_zbox.c"
 $44 = $7; //@line 132 "../../iup_zbox.c"
 $45 = $3; //@line 132 "../../iup_zbox.c"
 $46 = ((($45)) + 72|0); //@line 132 "../../iup_zbox.c"
 $47 = HEAP32[$46>>2]|0; //@line 132 "../../iup_zbox.c"
 $48 = ((($47)) + 4|0); //@line 132 "../../iup_zbox.c"
 HEAP32[$48>>2] = $44; //@line 132 "../../iup_zbox.c"
 $2 = 0; //@line 133 "../../iup_zbox.c"
 $52 = $2; //@line 138 "../../iup_zbox.c"
 STACKTOP = sp;return ($52|0); //@line 138 "../../iup_zbox.c"
}
function _iZboxSetVisibleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 217 "../../iup_zbox.c"
 $5 = ((($4)) + 72|0); //@line 217 "../../iup_zbox.c"
 $6 = HEAP32[$5>>2]|0; //@line 217 "../../iup_zbox.c"
 $7 = ((($6)) + 4|0); //@line 217 "../../iup_zbox.c"
 $8 = HEAP32[$7>>2]|0; //@line 217 "../../iup_zbox.c"
 $9 = (_iupObjectCheck($8)|0); //@line 217 "../../iup_zbox.c"
 $10 = ($9|0)!=(0); //@line 217 "../../iup_zbox.c"
 if (!($10)) {
  STACKTOP = sp;return 1; //@line 219 "../../iup_zbox.c"
 }
 $11 = $2; //@line 218 "../../iup_zbox.c"
 $12 = ((($11)) + 72|0); //@line 218 "../../iup_zbox.c"
 $13 = HEAP32[$12>>2]|0; //@line 218 "../../iup_zbox.c"
 $14 = ((($13)) + 4|0); //@line 218 "../../iup_zbox.c"
 $15 = HEAP32[$14>>2]|0; //@line 218 "../../iup_zbox.c"
 $16 = $3; //@line 218 "../../iup_zbox.c"
 _IupSetAttribute($15,20132,$16); //@line 218 "../../iup_zbox.c"
 STACKTOP = sp;return 1; //@line 219 "../../iup_zbox.c"
}
function _emscriptenButtonCallbackTrampoline($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 41 "../iupemscripten_button.c"
 $5 = (_iupEmscripten_GetIhandleValueForKey($4)|0); //@line 41 "../iupemscripten_button.c"
 $2 = $5; //@line 41 "../iupemscripten_button.c"
 $6 = $2; //@line 42 "../iupemscripten_button.c"
 $7 = (_IupGetCallback($6,20479)|0); //@line 42 "../iupemscripten_button.c"
 $3 = $7; //@line 42 "../iupemscripten_button.c"
 $8 = $3; //@line 43 "../iupemscripten_button.c"
 $9 = ($8|0)!=(0|0); //@line 43 "../iupemscripten_button.c"
 if (!($9)) {
  STACKTOP = sp;return; //@line 53 "../iupemscripten_button.c"
 }
 $10 = $3; //@line 45 "../iupemscripten_button.c"
 $11 = $2; //@line 45 "../iupemscripten_button.c"
 (FUNCTION_TABLE_ii[$10 & 1023]($11)|0); //@line 45 "../iupemscripten_button.c"
 STACKTOP = sp;return; //@line 53 "../iupemscripten_button.c"
}
function _emscriptenButtonCallbackTrampoline_Cb($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $14 = $6; //@line 57 "../iupemscripten_button.c"
 $15 = (_iupEmscripten_GetIhandleValueForKey($14)|0); //@line 57 "../iupemscripten_button.c"
 $12 = $15; //@line 57 "../iupemscripten_button.c"
 $16 = $12; //@line 59 "../iupemscripten_button.c"
 $17 = (_IupGetCallback($16,20522)|0); //@line 59 "../iupemscripten_button.c"
 $13 = $17; //@line 59 "../iupemscripten_button.c"
 $18 = $13; //@line 60 "../iupemscripten_button.c"
 $19 = ($18|0)!=(0|0); //@line 60 "../iupemscripten_button.c"
 if (!($19)) {
  STACKTOP = sp;return; //@line 74 "../iupemscripten_button.c"
 }
 $20 = $13; //@line 62 "../iupemscripten_button.c"
 $21 = $12; //@line 62 "../iupemscripten_button.c"
 $22 = $7; //@line 62 "../iupemscripten_button.c"
 $23 = $8; //@line 62 "../iupemscripten_button.c"
 $24 = $9; //@line 62 "../iupemscripten_button.c"
 $25 = $10; //@line 62 "../iupemscripten_button.c"
 $26 = $11; //@line 62 "../iupemscripten_button.c"
 (FUNCTION_TABLE_iiiiiii[$20 & 1023]($21,$22,$23,$24,$25,$26)|0); //@line 62 "../iupemscripten_button.c"
 STACKTOP = sp;return; //@line 74 "../iupemscripten_button.c"
}
function _iupdrvButtonAddBorders($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 80 "../iupemscripten_button.c"
}
function _iupdrvButtonInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 155 "../iupemscripten_button.c"
 $3 = ((($2)) + 44|0); //@line 155 "../iupemscripten_button.c"
 HEAP32[$3>>2] = 558; //@line 155 "../iupemscripten_button.c"
 $4 = $1; //@line 156 "../iupemscripten_button.c"
 $5 = ((($4)) + 48|0); //@line 156 "../iupemscripten_button.c"
 HEAP32[$5>>2] = 559; //@line 156 "../iupemscripten_button.c"
 STACKTOP = sp;return; //@line 188 "../iupemscripten_button.c"
}
function _emscriptenButtonMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0; //@line 91 "../iupemscripten_button.c"
 $3 = 0; //@line 92 "../iupemscripten_button.c"
 $5 = $1; //@line 97 "../iupemscripten_button.c"
 $6 = (_iupAttribGet($5,20169)|0); //@line 97 "../iupemscripten_button.c"
 $4 = $6; //@line 97 "../iupemscripten_button.c"
 $7 = $4; //@line 99 "../iupemscripten_button.c"
 $8 = ($7|0)!=(0|0); //@line 99 "../iupemscripten_button.c"
 if ($8) {
  $9 = $4; //@line 99 "../iupemscripten_button.c"
  $10 = HEAP8[$9>>0]|0; //@line 99 "../iupemscripten_button.c"
  $11 = $10 << 24 >> 24; //@line 99 "../iupemscripten_button.c"
  $12 = ($11|0)!=(0); //@line 99 "../iupemscripten_button.c"
  if ($12) {
   $13 = $1; //@line 101 "../iupemscripten_button.c"
   $14 = ((($13)) + 72|0); //@line 101 "../iupemscripten_button.c"
   $15 = HEAP32[$14>>2]|0; //@line 101 "../iupemscripten_button.c"
   $16 = HEAP32[$15>>2]|0; //@line 101 "../iupemscripten_button.c"
   $17 = $16 | 1; //@line 101 "../iupemscripten_button.c"
   HEAP32[$15>>2] = $17; //@line 101 "../iupemscripten_button.c"
  } else {
   label = 4;
  }
 } else {
  label = 4;
 }
 if ((label|0) == 4) {
  $18 = (_emjsButton_CreateButton()|0); //@line 105 "../iupemscripten_button.c"
  $2 = $18; //@line 105 "../iupemscripten_button.c"
  $19 = (_calloc(1,4)|0); //@line 106 "../iupemscripten_button.c"
  $3 = $19; //@line 106 "../iupemscripten_button.c"
  $20 = $2; //@line 107 "../iupemscripten_button.c"
  $21 = $3; //@line 107 "../iupemscripten_button.c"
  HEAP32[$21>>2] = $20; //@line 107 "../iupemscripten_button.c"
  $22 = $3; //@line 108 "../iupemscripten_button.c"
  $23 = $1; //@line 108 "../iupemscripten_button.c"
  $24 = ((($23)) + 16|0); //@line 108 "../iupemscripten_button.c"
  HEAP32[$24>>2] = $22; //@line 108 "../iupemscripten_button.c"
 }
 $25 = $1; //@line 113 "../iupemscripten_button.c"
 $26 = (_iupAttribGet($25,20508)|0); //@line 113 "../iupemscripten_button.c"
 $4 = $26; //@line 113 "../iupemscripten_button.c"
 $27 = $4; //@line 114 "../iupemscripten_button.c"
 $28 = ($27|0)!=(0|0); //@line 114 "../iupemscripten_button.c"
 if ($28) {
  $29 = $4; //@line 114 "../iupemscripten_button.c"
  $30 = HEAP8[$29>>0]|0; //@line 114 "../iupemscripten_button.c"
  $31 = $30 << 24 >> 24; //@line 114 "../iupemscripten_button.c"
  $32 = ($31|0)!=(0); //@line 114 "../iupemscripten_button.c"
  if ($32) {
   $33 = $1; //@line 117 "../iupemscripten_button.c"
   $34 = ((($33)) + 72|0); //@line 117 "../iupemscripten_button.c"
   $35 = HEAP32[$34>>2]|0; //@line 117 "../iupemscripten_button.c"
   $36 = HEAP32[$35>>2]|0; //@line 117 "../iupemscripten_button.c"
   $37 = $36 | 2; //@line 117 "../iupemscripten_button.c"
   HEAP32[$35>>2] = $37; //@line 117 "../iupemscripten_button.c"
   $38 = $2; //@line 127 "../iupemscripten_button.c"
   $39 = $4; //@line 127 "../iupemscripten_button.c"
   _emjsButton_SetTitle(($38|0),($39|0)); //@line 127 "../iupemscripten_button.c"
  }
 }
 $40 = $2; //@line 131 "../iupemscripten_button.c"
 _emjsButton_SetCallback(($40|0)); //@line 131 "../iupemscripten_button.c"
 $41 = $2; //@line 132 "../iupemscripten_button.c"
 $42 = $1; //@line 132 "../iupemscripten_button.c"
 _iupEmscripten_SetIntKeyForIhandleValue($41,$42); //@line 132 "../iupemscripten_button.c"
 $43 = $1; //@line 135 "../iupemscripten_button.c"
 _iupEmscripten_AddWidgetToParent($43); //@line 135 "../iupemscripten_button.c"
 STACKTOP = sp;return 0; //@line 137 "../iupemscripten_button.c"
}
function _emscriptenButtonUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 143 "../iupemscripten_button.c"
 $3 = ($2|0)!=(0|0); //@line 143 "../iupemscripten_button.c"
 if (!($3)) {
  STACKTOP = sp;return; //@line 150 "../iupemscripten_button.c"
 }
 $4 = $1; //@line 143 "../iupemscripten_button.c"
 $5 = ((($4)) + 16|0); //@line 143 "../iupemscripten_button.c"
 $6 = HEAP32[$5>>2]|0; //@line 143 "../iupemscripten_button.c"
 $7 = ($6|0)!=(0|0); //@line 143 "../iupemscripten_button.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 150 "../iupemscripten_button.c"
 }
 $8 = $1; //@line 145 "../iupemscripten_button.c"
 $9 = ((($8)) + 16|0); //@line 145 "../iupemscripten_button.c"
 $10 = HEAP32[$9>>2]|0; //@line 145 "../iupemscripten_button.c"
 $11 = HEAP32[$10>>2]|0; //@line 145 "../iupemscripten_button.c"
 _iupEmscripten_RemoveIntKeyFromIhandleMap($11); //@line 145 "../iupemscripten_button.c"
 $12 = $1; //@line 146 "../iupemscripten_button.c"
 $13 = ((($12)) + 16|0); //@line 146 "../iupemscripten_button.c"
 $14 = HEAP32[$13>>2]|0; //@line 146 "../iupemscripten_button.c"
 $15 = HEAP32[$14>>2]|0; //@line 146 "../iupemscripten_button.c"
 _emjsButton_DestroyButton(($15|0)); //@line 146 "../iupemscripten_button.c"
 $16 = $1; //@line 147 "../iupemscripten_button.c"
 $17 = ((($16)) + 16|0); //@line 147 "../iupemscripten_button.c"
 $18 = HEAP32[$17>>2]|0; //@line 147 "../iupemscripten_button.c"
 _free($18); //@line 147 "../iupemscripten_button.c"
 $19 = $1; //@line 148 "../iupemscripten_button.c"
 $20 = ((($19)) + 16|0); //@line 148 "../iupemscripten_button.c"
 HEAP32[$20>>2] = 0; //@line 148 "../iupemscripten_button.c"
 STACKTOP = sp;return; //@line 150 "../iupemscripten_button.c"
}
function _iupdrvCanvasInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 67 "../iupemscripten_canvas.c"
}
function _iupClipboardNewClass() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_iupClassNew(0)|0); //@line 32 "../iupemscripten_clipboard.c"
 $0 = $1; //@line 32 "../iupemscripten_clipboard.c"
 $2 = $0; //@line 34 "../iupemscripten_clipboard.c"
 HEAP32[$2>>2] = 20175; //@line 34 "../iupemscripten_clipboard.c"
 $3 = $0; //@line 35 "../iupemscripten_clipboard.c"
 $4 = ((($3)) + 4|0); //@line 35 "../iupemscripten_clipboard.c"
 HEAP32[$4>>2] = 0; //@line 35 "../iupemscripten_clipboard.c"
 $5 = $0; //@line 36 "../iupemscripten_clipboard.c"
 $6 = ((($5)) + 8|0); //@line 36 "../iupemscripten_clipboard.c"
 HEAP32[$6>>2] = 1; //@line 36 "../iupemscripten_clipboard.c"
 $7 = $0; //@line 37 "../iupemscripten_clipboard.c"
 $8 = ((($7)) + 12|0); //@line 37 "../iupemscripten_clipboard.c"
 HEAP32[$8>>2] = 0; //@line 37 "../iupemscripten_clipboard.c"
 $9 = $0; //@line 38 "../iupemscripten_clipboard.c"
 $10 = ((($9)) + 16|0); //@line 38 "../iupemscripten_clipboard.c"
 HEAP32[$10>>2] = 0; //@line 38 "../iupemscripten_clipboard.c"
 $11 = $0; //@line 40 "../iupemscripten_clipboard.c"
 $12 = ((($11)) + 32|0); //@line 40 "../iupemscripten_clipboard.c"
 HEAP32[$12>>2] = 560; //@line 40 "../iupemscripten_clipboard.c"
 $13 = $0; //@line 58 "../iupemscripten_clipboard.c"
 STACKTOP = sp;return ($13|0); //@line 58 "../iupemscripten_clipboard.c"
}
function _iupdrvColorDlgInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 18 "../iupemscripten_colordlg.c"
}
function _iupEmscripten_InitializeInternalGlobals() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[6224]|0; //@line 35 "../iupemscripten_common.c"
 $1 = ($0|0)!=(0|0); //@line 35 "../iupemscripten_common.c"
 if ($1) {
  return; //@line 40 "../iupemscripten_common.c"
 }
 $2 = (_iupTableCreate(10)|0); //@line 38 "../iupemscripten_common.c"
 HEAP32[6224] = $2; //@line 38 "../iupemscripten_common.c"
 return; //@line 40 "../iupemscripten_common.c"
}
function _iupEmscripten_SetIntKeyForIhandleValue($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = HEAP32[6224]|0; //@line 52 "../iupemscripten_common.c"
 $5 = $2; //@line 52 "../iupemscripten_common.c"
 $6 = $5; //@line 52 "../iupemscripten_common.c"
 $7 = $3; //@line 52 "../iupemscripten_common.c"
 _iupTableSet($4,$6,$7,0); //@line 52 "../iupemscripten_common.c"
 STACKTOP = sp;return; //@line 53 "../iupemscripten_common.c"
}
function _iupEmscripten_RemoveIntKeyFromIhandleMap($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = HEAP32[6224]|0; //@line 56 "../iupemscripten_common.c"
 $3 = $1; //@line 56 "../iupemscripten_common.c"
 $4 = $3; //@line 56 "../iupemscripten_common.c"
 _iupTableRemove($2,$4); //@line 56 "../iupemscripten_common.c"
 STACKTOP = sp;return; //@line 57 "../iupemscripten_common.c"
}
function _iupEmscripten_GetIhandleValueForKey($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = HEAP32[6224]|0; //@line 60 "../iupemscripten_common.c"
 $4 = $1; //@line 60 "../iupemscripten_common.c"
 $5 = $4; //@line 60 "../iupemscripten_common.c"
 $6 = (_iupTableGet($3,$5)|0); //@line 60 "../iupemscripten_common.c"
 $7 = $6; //@line 60 "../iupemscripten_common.c"
 $8 = $7; //@line 60 "../iupemscripten_common.c"
 $2 = $8; //@line 60 "../iupemscripten_common.c"
 $9 = $2; //@line 61 "../iupemscripten_common.c"
 STACKTOP = sp;return ($9|0); //@line 61 "../iupemscripten_common.c"
}
function _iupEmscripten_AddWidgetToParent($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $8 = $1; //@line 68 "../iupemscripten_common.c"
 $9 = (_iupChildTreeGetNativeParent($8)|0); //@line 68 "../iupemscripten_common.c"
 $2 = $9; //@line 68 "../iupemscripten_common.c"
 $10 = $2; //@line 71 "../iupemscripten_common.c"
 $11 = ($10|0)!=(0|0); //@line 71 "../iupemscripten_common.c"
 if (!($11)) {
  STACKTOP = sp;return; //@line 104 "../iupemscripten_common.c"
 }
 $12 = $2; //@line 76 "../iupemscripten_common.c"
 $13 = ((($12)) + 16|0); //@line 76 "../iupemscripten_common.c"
 $14 = HEAP32[$13>>2]|0; //@line 76 "../iupemscripten_common.c"
 $3 = $14; //@line 76 "../iupemscripten_common.c"
 $15 = $1; //@line 77 "../iupemscripten_common.c"
 $16 = ((($15)) + 16|0); //@line 77 "../iupemscripten_common.c"
 $17 = HEAP32[$16>>2]|0; //@line 77 "../iupemscripten_common.c"
 $4 = $17; //@line 77 "../iupemscripten_common.c"
 $5 = 0; //@line 79 "../iupemscripten_common.c"
 $6 = 0; //@line 80 "../iupemscripten_common.c"
 $7 = 0; //@line 81 "../iupemscripten_common.c"
 $18 = $3; //@line 82 "../iupemscripten_common.c"
 $19 = ($18|0)!=(0|0); //@line 82 "../iupemscripten_common.c"
 if ($19) {
  $20 = $3; //@line 84 "../iupemscripten_common.c"
  $21 = HEAP32[$20>>2]|0; //@line 84 "../iupemscripten_common.c"
  $5 = $21; //@line 84 "../iupemscripten_common.c"
  $22 = $2; //@line 85 "../iupemscripten_common.c"
  $23 = ((($22)) + 4|0); //@line 85 "../iupemscripten_common.c"
  $24 = HEAP32[$23>>2]|0; //@line 85 "../iupemscripten_common.c"
  $25 = ((($24)) + 8|0); //@line 85 "../iupemscripten_common.c"
  $26 = HEAP32[$25>>2]|0; //@line 85 "../iupemscripten_common.c"
  $27 = ($26|0)==(3); //@line 85 "../iupemscripten_common.c"
  if ($27) {
   $7 = 1; //@line 87 "../iupemscripten_common.c"
  }
 }
 $28 = $4; //@line 90 "../iupemscripten_common.c"
 $29 = ($28|0)!=(0|0); //@line 90 "../iupemscripten_common.c"
 if ($29) {
  $30 = $4; //@line 92 "../iupemscripten_common.c"
  $31 = HEAP32[$30>>2]|0; //@line 92 "../iupemscripten_common.c"
  $6 = $31; //@line 92 "../iupemscripten_common.c"
 }
 $32 = $7; //@line 95 "../iupemscripten_common.c"
 $33 = $32&1; //@line 95 "../iupemscripten_common.c"
 $34 = $5; //@line 97 "../iupemscripten_common.c"
 $35 = $6; //@line 97 "../iupemscripten_common.c"
 if ($33) {
  _emjsCommon_AddWidgetToDialog(($34|0),($35|0)); //@line 97 "../iupemscripten_common.c"
  STACKTOP = sp;return; //@line 104 "../iupemscripten_common.c"
 } else {
  _emjsCommon_AddWidgetToWidget(($34|0),($35|0)); //@line 101 "../iupemscripten_common.c"
  STACKTOP = sp;return; //@line 104 "../iupemscripten_common.c"
 }
}
function _iupdrvReparent($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 147 "../iupemscripten_common.c"
}
function _iupdrvBaseLayoutUpdateMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 215 "../iupemscripten_common.c"
}
function _iupdrvBaseUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 221 "../iupemscripten_common.c"
}
function _iupdrvScreenToClient($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 236 "../iupemscripten_common.c"
}
function _iupdrvBaseSetZorderAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 0; //@line 242 "../iupemscripten_common.c"
}
function _iupdrvSetVisible($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 247 "../iupemscripten_common.c"
}
function _iupdrvIsVisible($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 251 "../iupemscripten_common.c"
}
function _iupdrvIsActive($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 256 "../iupemscripten_common.c"
}
function _iupdrvSetActive($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 261 "../iupemscripten_common.c"
}
function _iupdrvBaseSetFgColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $5 = sp + 14|0;
 $6 = sp + 13|0;
 $7 = sp + 12|0;
 $3 = $0;
 $4 = $1;
 $8 = $4; //@line 297 "../iupemscripten_common.c"
 $9 = (_iupStrToRGB($8,$5,$6,$7)|0); //@line 297 "../iupemscripten_common.c"
 $10 = ($9|0)!=(0); //@line 297 "../iupemscripten_common.c"
 if ($10) {
  $11 = $3; //@line 299 "../iupemscripten_common.c"
  $12 = ((($11)) + 16|0); //@line 299 "../iupemscripten_common.c"
  $13 = HEAP32[$12>>2]|0; //@line 299 "../iupemscripten_common.c"
  $14 = HEAP32[$13>>2]|0; //@line 299 "../iupemscripten_common.c"
  $15 = HEAP8[$5>>0]|0; //@line 299 "../iupemscripten_common.c"
  $16 = HEAP8[$6>>0]|0; //@line 299 "../iupemscripten_common.c"
  $17 = HEAP8[$7>>0]|0; //@line 299 "../iupemscripten_common.c"
  _emjsCommon_SetFgColor(($14|0),($15|0),($16|0),($17|0)); //@line 299 "../iupemscripten_common.c"
  $2 = 1; //@line 301 "../iupemscripten_common.c"
  $18 = $2; //@line 302 "../iupemscripten_common.c"
  STACKTOP = sp;return ($18|0); //@line 302 "../iupemscripten_common.c"
 } else {
  $2 = 0; //@line 298 "../iupemscripten_common.c"
  $18 = $2; //@line 302 "../iupemscripten_common.c"
  STACKTOP = sp;return ($18|0); //@line 302 "../iupemscripten_common.c"
 }
 return (0)|0;
}
function _iupdrvBaseSetCursorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 0; //@line 307 "../iupemscripten_common.c"
}
function _iupdrvGetScrollbarSize() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 314 "../iupemscripten_common.c"
}
function _iupdrvBaseRegisterCommonAttrib($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 334 "../iupemscripten_common.c"
}
function _iupdrvBaseRegisterVisualAttrib($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 339 "../iupemscripten_common.c"
}
function _iupdrvClientToScreen($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 344 "../iupemscripten_common.c"
}
function _iupdrvPostRedraw($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 349 "../iupemscripten_common.c"
}
function _iupdrvRedrawNow($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 354 "../iupemscripten_common.c"
}
function _iupdrvSendKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 358 "../iupemscripten_common.c"
}
function _iupdrvSendMouse($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return; //@line 362 "../iupemscripten_common.c"
}
function _iupdrvSleep($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 366 "../iupemscripten_common.c"
}
function _iupdrvWarpPointer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 370 "../iupemscripten_common.c"
}
function _iupdrvDialogIsVisible($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 47 "../iupemscripten_dialog.c"
}
function _iupdrvDialogGetSize($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $6; //@line 54 "../iupemscripten_dialog.c"
 $9 = ($8|0)!=(0|0); //@line 54 "../iupemscripten_dialog.c"
 if ($9) {
  $10 = $6; //@line 54 "../iupemscripten_dialog.c"
  HEAP32[$10>>2] = 1280; //@line 54 "../iupemscripten_dialog.c"
 }
 $11 = $7; //@line 55 "../iupemscripten_dialog.c"
 $12 = ($11|0)!=(0|0); //@line 55 "../iupemscripten_dialog.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 56 "../iupemscripten_dialog.c"
 }
 $13 = $7; //@line 55 "../iupemscripten_dialog.c"
 HEAP32[$13>>2] = 720; //@line 55 "../iupemscripten_dialog.c"
 STACKTOP = sp;return; //@line 56 "../iupemscripten_dialog.c"
}
function _iupdrvDialogSetVisible($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 69 "../iupemscripten_dialog.c"
}
function _iupdrvDialogGetPosition($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $6; //@line 74 "../iupemscripten_dialog.c"
 $9 = ($8|0)!=(0|0); //@line 74 "../iupemscripten_dialog.c"
 if ($9) {
  $10 = $6; //@line 74 "../iupemscripten_dialog.c"
  HEAP32[$10>>2] = 0; //@line 74 "../iupemscripten_dialog.c"
 }
 $11 = $7; //@line 76 "../iupemscripten_dialog.c"
 $12 = ($11|0)!=(0|0); //@line 76 "../iupemscripten_dialog.c"
 if (!($12)) {
  STACKTOP = sp;return; //@line 77 "../iupemscripten_dialog.c"
 }
 $13 = $7; //@line 76 "../iupemscripten_dialog.c"
 HEAP32[$13>>2] = 0; //@line 76 "../iupemscripten_dialog.c"
 STACKTOP = sp;return; //@line 77 "../iupemscripten_dialog.c"
}
function _iupdrvDialogSetPosition($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 81 "../iupemscripten_dialog.c"
}
function _iupdrvDialogGetDecoration($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return; //@line 86 "../iupemscripten_dialog.c"
}
function _iupdrvDialogSetPlacement($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 170 "../iupemscripten_dialog.c"
}
function _iupdrvDialogInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 243 "../iupemscripten_dialog.c"
 $3 = ((($2)) + 44|0); //@line 243 "../iupemscripten_dialog.c"
 HEAP32[$3>>2] = 561; //@line 243 "../iupemscripten_dialog.c"
 $4 = $1; //@line 244 "../iupemscripten_dialog.c"
 $5 = ((($4)) + 48|0); //@line 244 "../iupemscripten_dialog.c"
 HEAP32[$5>>2] = 562; //@line 244 "../iupemscripten_dialog.c"
 $6 = $1; //@line 245 "../iupemscripten_dialog.c"
 $7 = ((($6)) + 72|0); //@line 245 "../iupemscripten_dialog.c"
 HEAP32[$7>>2] = 563; //@line 245 "../iupemscripten_dialog.c"
 $8 = $1; //@line 274 "../iupemscripten_dialog.c"
 _iupClassRegisterAttribute($8,20508,0,564,0,0,3); //@line 274 "../iupemscripten_dialog.c"
 STACKTOP = sp;return; //@line 313 "../iupemscripten_dialog.c"
}
function _emscriptenDialogMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $1 = $0;
 $2 = 0; //@line 188 "../iupemscripten_dialog.c"
 $3 = 0; //@line 189 "../iupemscripten_dialog.c"
 $4 = 0; //@line 190 "../iupemscripten_dialog.c"
 $7 = $1; //@line 192 "../iupemscripten_dialog.c"
 $8 = (_iupAttribGet($7,20508)|0); //@line 192 "../iupemscripten_dialog.c"
 $2 = $8; //@line 192 "../iupemscripten_dialog.c"
 $9 = $2; //@line 194 "../iupemscripten_dialog.c"
 $10 = $3; //@line 194 "../iupemscripten_dialog.c"
 $11 = $4; //@line 194 "../iupemscripten_dialog.c"
 $12 = (_emjsDialog_CreateDialog(($9|0),($10|0),($11|0))|0); //@line 194 "../iupemscripten_dialog.c"
 $5 = $12; //@line 194 "../iupemscripten_dialog.c"
 $13 = (_calloc(1,4)|0); //@line 195 "../iupemscripten_dialog.c"
 $6 = $13; //@line 195 "../iupemscripten_dialog.c"
 $14 = $5; //@line 196 "../iupemscripten_dialog.c"
 $15 = $6; //@line 196 "../iupemscripten_dialog.c"
 HEAP32[$15>>2] = $14; //@line 196 "../iupemscripten_dialog.c"
 $16 = $6; //@line 197 "../iupemscripten_dialog.c"
 $17 = $1; //@line 197 "../iupemscripten_dialog.c"
 $18 = ((($17)) + 16|0); //@line 197 "../iupemscripten_dialog.c"
 HEAP32[$18>>2] = $16; //@line 197 "../iupemscripten_dialog.c"
 STACKTOP = sp;return 0; //@line 205 "../iupemscripten_dialog.c"
}
function _emscriptenDialogUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 212 "../iupemscripten_dialog.c"
 $3 = ($2|0)!=(0|0); //@line 212 "../iupemscripten_dialog.c"
 if (!($3)) {
  STACKTOP = sp;return; //@line 218 "../iupemscripten_dialog.c"
 }
 $4 = $1; //@line 212 "../iupemscripten_dialog.c"
 $5 = ((($4)) + 16|0); //@line 212 "../iupemscripten_dialog.c"
 $6 = HEAP32[$5>>2]|0; //@line 212 "../iupemscripten_dialog.c"
 $7 = ($6|0)!=(0|0); //@line 212 "../iupemscripten_dialog.c"
 if (!($7)) {
  STACKTOP = sp;return; //@line 218 "../iupemscripten_dialog.c"
 }
 $8 = $1; //@line 214 "../iupemscripten_dialog.c"
 $9 = ((($8)) + 16|0); //@line 214 "../iupemscripten_dialog.c"
 $10 = HEAP32[$9>>2]|0; //@line 214 "../iupemscripten_dialog.c"
 $11 = HEAP32[$10>>2]|0; //@line 214 "../iupemscripten_dialog.c"
 _emjsDialog_DestroyDialog(($11|0)); //@line 214 "../iupemscripten_dialog.c"
 $12 = $1; //@line 215 "../iupemscripten_dialog.c"
 $13 = ((($12)) + 16|0); //@line 215 "../iupemscripten_dialog.c"
 $14 = HEAP32[$13>>2]|0; //@line 215 "../iupemscripten_dialog.c"
 _free($14); //@line 215 "../iupemscripten_dialog.c"
 $15 = $1; //@line 216 "../iupemscripten_dialog.c"
 $16 = ((($15)) + 16|0); //@line 216 "../iupemscripten_dialog.c"
 HEAP32[$16>>2] = 0; //@line 216 "../iupemscripten_dialog.c"
 STACKTOP = sp;return; //@line 218 "../iupemscripten_dialog.c"
}
function _emscriptenDialogLayoutUpdateMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 236 "../iupemscripten_dialog.c"
}
function _emscriptenDialogSetTitleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 1; //@line 181 "../iupemscripten_dialog.c"
}
function _iupdrvRegisterDragDropAttrib($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 49 "../iupemscripten_dragdrop.c"
}
function _iupDrawCreateCanvas($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (0|0); //@line 27 "../iupemscripten_draw.c"
}
function _iupDrawKillCanvas($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 34 "../iupemscripten_draw.c"
}
function _iupDrawFlush($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 46 "../iupemscripten_draw.c"
}
function _iupDrawGetSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 52 "../iupemscripten_draw.c"
}
function _iupDrawParentBackground($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 57 "../iupemscripten_draw.c"
}
function _iupDrawRectangle($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $3;
 $13 = $4;
 $14 = $5;
 $15 = $6;
 $16 = $7;
 $17 = $8;
 STACKTOP = sp;return; //@line 62 "../iupemscripten_draw.c"
}
function _iupDrawLine($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $3;
 $13 = $4;
 $14 = $5;
 $15 = $6;
 $16 = $7;
 $17 = $8;
 STACKTOP = sp;return; //@line 66 "../iupemscripten_draw.c"
}
function _iupDrawText($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $9 = $0;
 $10 = $1;
 $11 = $2;
 $12 = $3;
 $13 = $4;
 $14 = $5;
 $15 = $6;
 $16 = $7;
 $17 = $8;
 STACKTOP = sp;return; //@line 90 "../iupemscripten_draw.c"
}
function _iupDrawImage($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $10 = $3;
 $11 = $4;
 $12 = $5;
 $13 = $6;
 STACKTOP = sp;return; //@line 94 "../iupemscripten_draw.c"
}
function _iupDrawFocusRect($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 STACKTOP = sp;return; //@line 103 "../iupemscripten_draw.c"
}
function _iupdrvFileDlgInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 39 "../iupemscripten_filedlg.c"
 _iupClassRegisterAttribute($2,20185,0,0,0,0,1); //@line 39 "../iupemscripten_filedlg.c"
 $3 = $1; //@line 40 "../iupemscripten_filedlg.c"
 _iupClassRegisterAttribute($3,20195,0,0,0,0,1); //@line 40 "../iupemscripten_filedlg.c"
 $4 = $1; //@line 41 "../iupemscripten_filedlg.c"
 _iupClassRegisterAttribute($4,20206,0,0,0,0,1); //@line 41 "../iupemscripten_filedlg.c"
 $5 = $1; //@line 42 "../iupemscripten_filedlg.c"
 _iupClassRegisterAttribute($5,20217,0,0,0,0,1); //@line 42 "../iupemscripten_filedlg.c"
 STACKTOP = sp;return; //@line 43 "../iupemscripten_filedlg.c"
}
function _iupdrvSetFocus($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 25 "../iupemscripten_focus.c"
}
function _iupdrvGetSystemFont() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (361230|0); //@line 38 "../iupemscripten_font.c"
}
function _iupdrvSetStandardFontAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 1; //@line 58 "../iupemscripten_font.c"
}
function _iupdrvFontGetMultiLineStringSize($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return; //@line 63 "../iupemscripten_font.c"
}
function _iupdrvFontGetStringWidth($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 40; //@line 72 "../iupemscripten_font.c"
}
function _iupdrvFontGetCharSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 81 "../iupemscripten_font.c"
}
function _iupdrvFontInit() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 85 "../iupemscripten_font.c"
}
function _iupdrvFontDlgInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 24 "../iupemscripten_fontdlg.c"
}
function _iupdrvFrameGetDecorOffset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 77 "../iupemscripten_frame.c"
 HEAP32[$4>>2] = 2; //@line 77 "../iupemscripten_frame.c"
 $5 = $3; //@line 78 "../iupemscripten_frame.c"
 HEAP32[$5>>2] = 2; //@line 78 "../iupemscripten_frame.c"
 STACKTOP = sp;return; //@line 79 "../iupemscripten_frame.c"
}
function _iupdrvFrameHasClientOffset() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0; //@line 83 "../iupemscripten_frame.c"
}
function _iupdrvFrameInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 91 "../iupemscripten_frame.c"
 $3 = ((($2)) + 44|0); //@line 91 "../iupemscripten_frame.c"
 HEAP32[$3>>2] = 565; //@line 91 "../iupemscripten_frame.c"
 $4 = $1; //@line 92 "../iupemscripten_frame.c"
 $5 = ((($4)) + 48|0); //@line 92 "../iupemscripten_frame.c"
 HEAP32[$5>>2] = 566; //@line 92 "../iupemscripten_frame.c"
 STACKTOP = sp;return; //@line 109 "../iupemscripten_frame.c"
}
function _emscriptenFrameMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 59 "../iupemscripten_frame.c"
}
function _emscriptenFrameUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 71 "../iupemscripten_frame.c"
}
function _iupdrvSetGlobal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $3; //@line 24 "../iupemscripten_globalattrib.c"
 $6 = (_iupStrEqual($5,20231)|0); //@line 24 "../iupemscripten_globalattrib.c"
 $7 = ($6|0)!=(0); //@line 24 "../iupemscripten_globalattrib.c"
 do {
  if ($7) {
   $8 = $4; //@line 26 "../iupemscripten_globalattrib.c"
   _iupStrMessageUpdateLanguage($8); //@line 26 "../iupemscripten_globalattrib.c"
   $2 = 1; //@line 27 "../iupemscripten_globalattrib.c"
  } else {
   $9 = $3; //@line 29 "../iupemscripten_globalattrib.c"
   $10 = (_iupStrEqual($9,20240)|0); //@line 29 "../iupemscripten_globalattrib.c"
   $11 = ($10|0)!=(0); //@line 29 "../iupemscripten_globalattrib.c"
   if ($11) {
    $2 = 0; //@line 39 "../iupemscripten_globalattrib.c"
    break;
   }
   $12 = $3; //@line 41 "../iupemscripten_globalattrib.c"
   $13 = (_iupStrEqual($12,20250)|0); //@line 41 "../iupemscripten_globalattrib.c"
   $14 = ($13|0)!=(0); //@line 41 "../iupemscripten_globalattrib.c"
   if ($14) {
    $2 = 0; //@line 49 "../iupemscripten_globalattrib.c"
    break;
   }
   $15 = $3; //@line 51 "../iupemscripten_globalattrib.c"
   $16 = (_iupStrEqual($15,20266)|0); //@line 51 "../iupemscripten_globalattrib.c"
   $17 = ($16|0)!=(0); //@line 51 "../iupemscripten_globalattrib.c"
   if ($17) {
    $2 = 0; //@line 58 "../iupemscripten_globalattrib.c"
    break;
   }
   $18 = $3; //@line 60 "../iupemscripten_globalattrib.c"
   $19 = (_iupStrEqual($18,20275)|0); //@line 60 "../iupemscripten_globalattrib.c"
   $20 = ($19|0)!=(0); //@line 60 "../iupemscripten_globalattrib.c"
   if ($20) {
    $2 = 0; //@line 67 "../iupemscripten_globalattrib.c"
    break;
   }
   $21 = $3; //@line 69 "../iupemscripten_globalattrib.c"
   $22 = (_iupStrEqual($21,20286)|0); //@line 69 "../iupemscripten_globalattrib.c"
   $23 = ($22|0)!=(0); //@line 69 "../iupemscripten_globalattrib.c"
   if ($23) {
    $2 = 0; //@line 76 "../iupemscripten_globalattrib.c"
    break;
   } else {
    $2 = 1; //@line 78 "../iupemscripten_globalattrib.c"
    break;
   }
  }
 } while(0);
 $24 = $2; //@line 79 "../iupemscripten_globalattrib.c"
 STACKTOP = sp;return ($24|0); //@line 79 "../iupemscripten_globalattrib.c"
}
function _iupdrvGetGlobal($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (0|0); //@line 179 "../iupemscripten_globalattrib.c"
}
function _IupHelp($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 47 "../iupemscripten_help.c"
}
function _iupdrvImageGetInfo($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return 1; //@line 558 "../iupemscripten_image.c"
}
function _iupdrvImageCreateImage($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return (0|0); //@line 414 "../iupemscripten_image.c"
}
function _iupdrvImageLoad($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return (0|0); //@line 544 "../iupemscripten_image.c"
}
function _iupdrvImageDestroy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 565 "../iupemscripten_image.c"
}
function _iupdrvAddScreenOffset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 27 "../iupemscripten_info.c"
}
function _iupdrvGetScreenSize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 42 "../iupemscripten_info.c"
}
function _iupdrvGetFullSize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 55 "../iupemscripten_info.c"
}
function _iupdrvGetScreenDepth() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 32; //@line 60 "../iupemscripten_info.c"
}
function _iupdrvGetScreenDpi() {
 var $0 = 0.0, $1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0; //@line 71 "../iupemscripten_info.c"
 STACKTOP = sp;return (+$1); //@line 71 "../iupemscripten_info.c"
}
function _iupdrvGetCursorPos($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 88 "../iupemscripten_info.c"
}
function _iupdrvGetKeyState($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 113 "../iupemscripten_info.c"
}
function _iupdrvGetSystemName() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (20406|0); //@line 118 "../iupemscripten_info.c"
}
function _iupdrvGetSystemVersion() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 172 "../iupemscripten_info.c"
}
function _iupdrvGetComputerName() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 182 "../iupemscripten_info.c"
}
function _iupdrvGetUserName() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 188 "../iupemscripten_info.c"
}
function _iupdrvLocaleInfo() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0); //@line 196 "../iupemscripten_info.c"
}
function _iupdrvLabelInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 271 "../iupemscripten_label.c"
 $3 = ((($2)) + 44|0); //@line 271 "../iupemscripten_label.c"
 HEAP32[$3>>2] = 567; //@line 271 "../iupemscripten_label.c"
 $4 = $1; //@line 281 "../iupemscripten_label.c"
 _iupClassRegisterAttribute($4,20290,406,568,(-1),20331,0); //@line 281 "../iupemscripten_label.c"
 $5 = $1; //@line 286 "../iupemscripten_label.c"
 _iupClassRegisterAttribute($5,20610,0,569,(-1),20342,0); //@line 286 "../iupemscripten_label.c"
 $6 = $1; //@line 289 "../iupemscripten_label.c"
 _iupClassRegisterAttribute($6,20508,0,570,0,0,3); //@line 289 "../iupemscripten_label.c"
 STACKTOP = sp;return; //@line 308 "../iupemscripten_label.c"
}
function _emscriptenLabelMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0; //@line 87 "../iupemscripten_label.c"
 $3 = 0; //@line 88 "../iupemscripten_label.c"
 $5 = (_emjsLabel_CreateLabel()|0); //@line 90 "../iupemscripten_label.c"
 $2 = $5; //@line 90 "../iupemscripten_label.c"
 $6 = (_calloc(1,4)|0); //@line 91 "../iupemscripten_label.c"
 $3 = $6; //@line 91 "../iupemscripten_label.c"
 $7 = $2; //@line 93 "../iupemscripten_label.c"
 $8 = $3; //@line 93 "../iupemscripten_label.c"
 HEAP32[$8>>2] = $7; //@line 93 "../iupemscripten_label.c"
 $9 = $3; //@line 94 "../iupemscripten_label.c"
 $10 = $1; //@line 94 "../iupemscripten_label.c"
 $11 = ((($10)) + 16|0); //@line 94 "../iupemscripten_label.c"
 HEAP32[$11>>2] = $9; //@line 94 "../iupemscripten_label.c"
 $12 = $2; //@line 96 "../iupemscripten_label.c"
 $13 = $1; //@line 96 "../iupemscripten_label.c"
 _iupEmscripten_SetIntKeyForIhandleValue($12,$13); //@line 96 "../iupemscripten_label.c"
 $14 = $1; //@line 99 "../iupemscripten_label.c"
 $15 = (_iupAttribGet($14,20508)|0); //@line 99 "../iupemscripten_label.c"
 $4 = $15; //@line 99 "../iupemscripten_label.c"
 $16 = $4; //@line 100 "../iupemscripten_label.c"
 $17 = ($16|0)!=(0|0); //@line 100 "../iupemscripten_label.c"
 if ($17) {
  $18 = $4; //@line 100 "../iupemscripten_label.c"
  $19 = HEAP8[$18>>0]|0; //@line 100 "../iupemscripten_label.c"
  $20 = $19 << 24 >> 24; //@line 100 "../iupemscripten_label.c"
  $21 = ($20|0)!=(0); //@line 100 "../iupemscripten_label.c"
  if ($21) {
   $22 = $1; //@line 102 "../iupemscripten_label.c"
   $23 = ((($22)) + 72|0); //@line 102 "../iupemscripten_label.c"
   $24 = HEAP32[$23>>2]|0; //@line 102 "../iupemscripten_label.c"
   $25 = HEAP32[$24>>2]|0; //@line 102 "../iupemscripten_label.c"
   $26 = $25 | 3; //@line 102 "../iupemscripten_label.c"
   HEAP32[$24>>2] = $26; //@line 102 "../iupemscripten_label.c"
   $27 = $2; //@line 112 "../iupemscripten_label.c"
   $28 = $4; //@line 112 "../iupemscripten_label.c"
   _emjsLabel_SetTitle(($27|0),($28|0)); //@line 112 "../iupemscripten_label.c"
  }
 }
 $29 = $1; //@line 246 "../iupemscripten_label.c"
 _iupEmscripten_AddWidgetToParent($29); //@line 246 "../iupemscripten_label.c"
 $30 = $1; //@line 250 "../iupemscripten_label.c"
 $31 = (_IupGetCallback($30,20302)|0); //@line 250 "../iupemscripten_label.c"
 $32 = ($31|0)!=(0|0); //@line 250 "../iupemscripten_label.c"
 if (!($32)) {
  STACKTOP = sp;return 0; //@line 254 "../iupemscripten_label.c"
 }
 $33 = $1; //@line 252 "../iupemscripten_label.c"
 _iupAttribSet($33,20315,20441); //@line 252 "../iupemscripten_label.c"
 STACKTOP = sp;return 0; //@line 254 "../iupemscripten_label.c"
}
function _emscriptenLabelSetBgColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 _emjsLabel_SetBGColor(7,(20298|0)); //@line 66 "../iupemscripten_label.c"
 STACKTOP = sp;return 1; //@line 67 "../iupemscripten_label.c"
}
function _emscriptenLabelSetFgColorAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 59 "../iupemscripten_label.c"
 $5 = $3; //@line 59 "../iupemscripten_label.c"
 (_iupdrvBaseSetFgColorAttrib($4,$5)|0); //@line 59 "../iupemscripten_label.c"
 STACKTOP = sp;return 1; //@line 61 "../iupemscripten_label.c"
}
function _emscriptenLabelSetTitleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 47 "../iupemscripten_label.c"
 $5 = ((($4)) + 72|0); //@line 47 "../iupemscripten_label.c"
 $6 = HEAP32[$5>>2]|0; //@line 47 "../iupemscripten_label.c"
 $7 = HEAP32[$6>>2]|0; //@line 47 "../iupemscripten_label.c"
 $8 = ($7|0)==(3); //@line 47 "../iupemscripten_label.c"
 if (!($8)) {
  STACKTOP = sp;return 1; //@line 51 "../iupemscripten_label.c"
 }
 $9 = $2; //@line 48 "../iupemscripten_label.c"
 $10 = ((($9)) + 16|0); //@line 48 "../iupemscripten_label.c"
 $11 = HEAP32[$10>>2]|0; //@line 48 "../iupemscripten_label.c"
 $12 = HEAP32[$11>>2]|0; //@line 48 "../iupemscripten_label.c"
 $13 = $3; //@line 48 "../iupemscripten_label.c"
 _emjsLabel_SetTitle(($12|0),($13|0)); //@line 48 "../iupemscripten_label.c"
 STACKTOP = sp;return 1; //@line 51 "../iupemscripten_label.c"
}
function _iupdrvListAddItemSpace($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 42 "../iupemscripten_list.c"
 $5 = HEAP32[$4>>2]|0; //@line 42 "../iupemscripten_list.c"
 $6 = (($5) + 2)|0; //@line 42 "../iupemscripten_list.c"
 HEAP32[$4>>2] = $6; //@line 42 "../iupemscripten_list.c"
 STACKTOP = sp;return; //@line 43 "../iupemscripten_list.c"
}
function _iupdrvListAddBorders($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 10; //@line 47 "../iupemscripten_list.c"
 $7 = $6; //@line 48 "../iupemscripten_list.c"
 $8 = $4; //@line 48 "../iupemscripten_list.c"
 $9 = HEAP32[$8>>2]|0; //@line 48 "../iupemscripten_list.c"
 $10 = (($9) + ($7))|0; //@line 48 "../iupemscripten_list.c"
 HEAP32[$8>>2] = $10; //@line 48 "../iupemscripten_list.c"
 $11 = $6; //@line 49 "../iupemscripten_list.c"
 $12 = $5; //@line 49 "../iupemscripten_list.c"
 $13 = HEAP32[$12>>2]|0; //@line 49 "../iupemscripten_list.c"
 $14 = (($13) + ($11))|0; //@line 49 "../iupemscripten_list.c"
 HEAP32[$12>>2] = $14; //@line 49 "../iupemscripten_list.c"
 $15 = $3; //@line 51 "../iupemscripten_list.c"
 $16 = ((($15)) + 72|0); //@line 51 "../iupemscripten_list.c"
 $17 = HEAP32[$16>>2]|0; //@line 51 "../iupemscripten_list.c"
 $18 = ((($17)) + 28|0); //@line 51 "../iupemscripten_list.c"
 $19 = HEAP32[$18>>2]|0; //@line 51 "../iupemscripten_list.c"
 $20 = ($19|0)!=(0); //@line 51 "../iupemscripten_list.c"
 if (!($20)) {
  $39 = $3; //@line 69 "../iupemscripten_list.c"
  $40 = ((($39)) + 72|0); //@line 69 "../iupemscripten_list.c"
  $41 = HEAP32[$40>>2]|0; //@line 69 "../iupemscripten_list.c"
  $42 = ((($41)) + 32|0); //@line 69 "../iupemscripten_list.c"
  $43 = HEAP32[$42>>2]|0; //@line 69 "../iupemscripten_list.c"
  $44 = ($43|0)!=(0); //@line 69 "../iupemscripten_list.c"
  if (!($44)) {
   STACKTOP = sp;return; //@line 72 "../iupemscripten_list.c"
  }
  $45 = $5; //@line 70 "../iupemscripten_list.c"
  $46 = HEAP32[$45>>2]|0; //@line 70 "../iupemscripten_list.c"
  $47 = (($46) + 6)|0; //@line 70 "../iupemscripten_list.c"
  HEAP32[$45>>2] = $47; //@line 70 "../iupemscripten_list.c"
  STACKTOP = sp;return; //@line 72 "../iupemscripten_list.c"
 }
 $21 = $4; //@line 56 "../iupemscripten_list.c"
 $22 = HEAP32[$21>>2]|0; //@line 56 "../iupemscripten_list.c"
 $23 = (($22) + 5)|0; //@line 56 "../iupemscripten_list.c"
 HEAP32[$21>>2] = $23; //@line 56 "../iupemscripten_list.c"
 $24 = $3; //@line 59 "../iupemscripten_list.c"
 $25 = ((($24)) + 72|0); //@line 59 "../iupemscripten_list.c"
 $26 = HEAP32[$25>>2]|0; //@line 59 "../iupemscripten_list.c"
 $27 = ((($26)) + 32|0); //@line 59 "../iupemscripten_list.c"
 $28 = HEAP32[$27>>2]|0; //@line 59 "../iupemscripten_list.c"
 $29 = ($28|0)!=(0); //@line 59 "../iupemscripten_list.c"
 if ($29) {
  $30 = $4; //@line 60 "../iupemscripten_list.c"
  $31 = HEAP32[$30>>2]|0; //@line 60 "../iupemscripten_list.c"
  $32 = (($31) + 5)|0; //@line 60 "../iupemscripten_list.c"
  HEAP32[$30>>2] = $32; //@line 60 "../iupemscripten_list.c"
  STACKTOP = sp;return; //@line 72 "../iupemscripten_list.c"
 } else {
  $33 = $5; //@line 63 "../iupemscripten_list.c"
  $34 = HEAP32[$33>>2]|0; //@line 63 "../iupemscripten_list.c"
  $35 = (($34) + 4)|0; //@line 63 "../iupemscripten_list.c"
  HEAP32[$33>>2] = $35; //@line 63 "../iupemscripten_list.c"
  $36 = $4; //@line 64 "../iupemscripten_list.c"
  $37 = HEAP32[$36>>2]|0; //@line 64 "../iupemscripten_list.c"
  $38 = (($37) + 4)|0; //@line 64 "../iupemscripten_list.c"
  HEAP32[$36>>2] = $38; //@line 64 "../iupemscripten_list.c"
  STACKTOP = sp;return; //@line 72 "../iupemscripten_list.c"
 }
}
function _iupdrvListGetCount($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 76 "../iupemscripten_list.c"
}
function _iupdrvListAppendItem($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 84 "../iupemscripten_list.c"
}
function _iupdrvListInsertItem($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 90 "../iupemscripten_list.c"
}
function _iupdrvListRemoveItem($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 95 "../iupemscripten_list.c"
}
function _iupdrvListRemoveAllItems($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 101 "../iupemscripten_list.c"
}
function _iupdrvListGetImageHandle($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return (0|0); //@line 108 "../iupemscripten_list.c"
}
function _iupdrvListSetImageHandle($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return 0; //@line 116 "../iupemscripten_list.c"
}
function _iupdrvListInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 362 "../iupemscripten_list.c"
}
function _iupdrvSetIdleFunction($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 19 "../iupemscripten_loop.c"
 HEAP32[6225] = $2; //@line 19 "../iupemscripten_loop.c"
 STACKTOP = sp;return; //@line 20 "../iupemscripten_loop.c"
}
function _IupExitLoop() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 24 "../iupemscripten_loop.c"
}
function _IupMainLoop() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = (_IupGetFunction(20697)|0); //@line 37 "../iupemscripten_loop.c"
 $0 = $1; //@line 37 "../iupemscripten_loop.c"
 $2 = $0; //@line 39 "../iupemscripten_loop.c"
 $3 = ($2|0)!=(0|0); //@line 39 "../iupemscripten_loop.c"
 if (!($3)) {
  STACKTOP = sp;return 0; //@line 44 "../iupemscripten_loop.c"
 }
 $4 = $0; //@line 41 "../iupemscripten_loop.c"
 (FUNCTION_TABLE_ii[$4 & 1023](0)|0); //@line 41 "../iupemscripten_loop.c"
 STACKTOP = sp;return 0; //@line 44 "../iupemscripten_loop.c"
}
function _IupLoopStep() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return -2; //@line 55 "../iupemscripten_loop.c"
}
function _IupFlush() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return; //@line 60 "../iupemscripten_loop.c"
}
function _iupdrvMenuPopup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return 0; //@line 35 "../iupemscripten_menu.c"
}
function _iupdrvMenuInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 83 "../iupemscripten_menu.c"
}
function _iupdrvItemInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 109 "../iupemscripten_menu.c"
}
function _iupdrvSubmenuInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 131 "../iupemscripten_menu.c"
}
function _iupdrvSeparatorInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 143 "../iupemscripten_menu.c"
}
function _iupdrvMessageDlgInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 22 "../iupemscripten_messagedlg.c"
}
function _iupEmscriptenUpdateGlobalColors() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _iupGlobalSetDefaultColorAttrib(20331,237,237,237); //@line 41 "../iupemscripten_open.c"
 _iupGlobalSetDefaultColorAttrib(20342,0,0,0); //@line 43 "../iupemscripten_open.c"
 _iupGlobalSetDefaultColorAttrib(20353,255,255,255); //@line 45 "../iupemscripten_open.c"
 _iupGlobalSetDefaultColorAttrib(20364,0,0,0); //@line 47 "../iupemscripten_open.c"
 _iupGlobalSetDefaultColorAttrib(20375,183,183,183); //@line 49 "../iupemscripten_open.c"
 _iupGlobalSetDefaultColorAttrib(20387,0,0,0); //@line 51 "../iupemscripten_open.c"
 return; //@line 52 "../iupemscripten_open.c"
}
function _iupdrvOpen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 _iupEmscripten_InitializeInternalGlobals(); //@line 62 "../iupemscripten_open.c"
 _IupSetGlobal(20399,20406); //@line 64 "../iupemscripten_open.c"
 _iupEmscriptenUpdateGlobalColors(); //@line 68 "../iupemscripten_open.c"
 _IupSetGlobal(20417,20441); //@line 70 "../iupemscripten_open.c"
 STACKTOP = sp;return 0; //@line 72 "../iupemscripten_open.c"
}
function _iupdrvProgressBarInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 58 "../iupemscripten_progressbar.c"
}
function _iupdrvTabsExtraDecor($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 35 "../iupemscripten_tabs.c"
}
function _iupdrvTabsGetLineCountAttrib($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 1; //@line 41 "../iupemscripten_tabs.c"
}
function _iupdrvTabsSetCurrentTab($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 46 "../iupemscripten_tabs.c"
}
function _iupdrvTabsGetCurrentTab($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 50 "../iupemscripten_tabs.c"
}
function _iupdrvTabsIsTabVisible($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 0; //@line 57 "../iupemscripten_tabs.c"
}
function _iupdrvTabsInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 93 "../iupemscripten_tabs.c"
}
function _iupdrvTextAddSpin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 39 "../iupemscripten_text.c"
}
function _iupdrvTextAddBorders($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return; //@line 45 "../iupemscripten_text.c"
}
function _iupdrvTextInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 255 "../iupemscripten_text.c"
 $3 = ((($2)) + 44|0); //@line 255 "../iupemscripten_text.c"
 HEAP32[$3>>2] = 571; //@line 255 "../iupemscripten_text.c"
 $4 = $1; //@line 256 "../iupemscripten_text.c"
 $5 = ((($4)) + 48|0); //@line 256 "../iupemscripten_text.c"
 HEAP32[$5>>2] = 572; //@line 256 "../iupemscripten_text.c"
 STACKTOP = sp;return; //@line 306 "../iupemscripten_text.c"
}
function _emscriptenTextMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 232 "../iupemscripten_text.c"
}
function _emscriptenTextUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 249 "../iupemscripten_text.c"
}
function _iupdrvTimerRun($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 91 "../iupemscripten_timer.c"
}
function _iupdrvTimerStop($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 116 "../iupemscripten_timer.c"
}
function _iupdrvTimerInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 122 "../iupemscripten_timer.c"
 $3 = ((($2)) + 48|0); //@line 122 "../iupemscripten_timer.c"
 HEAP32[$3>>2] = 573; //@line 122 "../iupemscripten_timer.c"
 STACKTOP = sp;return; //@line 125 "../iupemscripten_timer.c"
}
function _cocoaTimerDestroy($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 109 "../iupemscripten_timer.c"
}
function _iupdrvBaseSetTipAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 1; //@line 40 "../iupemscripten_tips.c"
}
function _iupdrvBaseSetTipVisibleAttrib($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 0; //@line 66 "../iupemscripten_tips.c"
}
function _iupdrvBaseGetTipVisibleAttrib($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (0|0); //@line 71 "../iupemscripten_tips.c"
}
function _iupdrvToggleAddCheckBox($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 200 "../iupemscripten_toggle.c"
}
function _iupdrvToggleInitClass($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = $1; //@line 206 "../iupemscripten_toggle.c"
 $3 = ((($2)) + 44|0); //@line 206 "../iupemscripten_toggle.c"
 HEAP32[$3>>2] = 574; //@line 206 "../iupemscripten_toggle.c"
 $4 = $1; //@line 207 "../iupemscripten_toggle.c"
 $5 = ((($4)) + 48|0); //@line 207 "../iupemscripten_toggle.c"
 HEAP32[$5>>2] = 575; //@line 207 "../iupemscripten_toggle.c"
 STACKTOP = sp;return; //@line 241 "../iupemscripten_toggle.c"
}
function _emscriptenToggleMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return 0; //@line 171 "../iupemscripten_toggle.c"
}
function _emscriptenToggleUnMapMethod($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 186 "../iupemscripten_toggle.c"
}
function _iupdrvTreeAddNode($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 STACKTOP = sp;return; //@line 39 "../iupemscripten_tree.c"
}
function _iupdrvTreeTotalChildCount($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 STACKTOP = sp;return 0; //@line 51 "../iupemscripten_tree.c"
}
function _iupdrvTreeGetFocusNode($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return (0|0); //@line 59 "../iupemscripten_tree.c"
}
function _iupdrvTreeUpdateMarkMode($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 66 "../iupemscripten_tree.c"
}
function _iupdrvTreeDragDropCopyNode($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 STACKTOP = sp;return; //@line 73 "../iupemscripten_tree.c"
}
function _iupdrvTreeInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 137 "../iupemscripten_tree.c"
}
function _iupdrvValGetMinSize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 STACKTOP = sp;return; //@line 43 "../iupemscripten_val.c"
}
function _iupdrvValInitClass($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 STACKTOP = sp;return; //@line 65 "../iupemscripten_val.c"
}
function _MyPrintf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $2 = sp + 8|0;
 $1 = $0;
 HEAP32[$2>>2] = $varargs; //@line 20 "main_c.c"
 $3 = HEAP32[316]|0; //@line 21 "main_c.c"
 $4 = $1; //@line 21 "main_c.c"
 HEAP32[$vararg_buffer>>2] = $2; //@line 21 "main_c.c"
 (_fprintf($3,$4,$vararg_buffer)|0); //@line 21 "main_c.c"
 STACKTOP = sp;return; //@line 23 "main_c.c"
}
function _OnButtonCallback($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 32|0;
 $1 = $0;
 _MyPrintf(20445,$vararg_buffer); //@line 27 "main_c.c"
 $5 = HEAP32[6226]|0; //@line 32 "main_c.c"
 HEAP32[$vararg_buffer1>>2] = $5; //@line 32 "main_c.c"
 (_snprintf($2,1024,20465,$vararg_buffer1)|0); //@line 32 "main_c.c"
 $6 = (_IupButton($2,362470)|0); //@line 34 "main_c.c"
 $3 = $6; //@line 34 "main_c.c"
 $7 = $3; //@line 37 "main_c.c"
 (_IupSetCallback($7,20479,576)|0); //@line 37 "main_c.c"
 $8 = $3; //@line 38 "main_c.c"
 $9 = (_IupDialog($8)|0); //@line 38 "main_c.c"
 $4 = $9; //@line 38 "main_c.c"
 $10 = HEAP32[6226]|0; //@line 39 "main_c.c"
 HEAP32[$vararg_buffer3>>2] = $10; //@line 39 "main_c.c"
 (_snprintf($2,1024,20486,$vararg_buffer3)|0); //@line 39 "main_c.c"
 $11 = $4; //@line 41 "main_c.c"
 _IupSetStrAttribute($11,20508,$2); //@line 41 "main_c.c"
 $12 = $4; //@line 43 "main_c.c"
 (_IupShow($12)|0); //@line 43 "main_c.c"
 $13 = HEAP32[6226]|0; //@line 45 "main_c.c"
 $14 = (($13) + 1)|0; //@line 45 "main_c.c"
 HEAP32[6226] = $14; //@line 45 "main_c.c"
 STACKTOP = sp;return -2; //@line 47 "main_c.c"
}
function _testCallback($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1072|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1072|0);
 $vararg_buffer = sp;
 $12 = sp + 40|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = $4;
 $11 = $5;
 $15 = (_IupButton(20514,362470)|0); //@line 52 "main_c.c"
 $13 = $15; //@line 52 "main_c.c"
 $16 = $13; //@line 55 "main_c.c"
 (_IupSetCallback($16,20522,577)|0); //@line 55 "main_c.c"
 $17 = $13; //@line 56 "main_c.c"
 $18 = (_IupDialog($17)|0); //@line 56 "main_c.c"
 $14 = $18; //@line 56 "main_c.c"
 (_snprintf($12,1024,20532,$vararg_buffer)|0); //@line 57 "main_c.c"
 $19 = $14; //@line 59 "main_c.c"
 _IupSetStrAttribute($19,20508,$12); //@line 59 "main_c.c"
 $20 = $14; //@line 62 "main_c.c"
 (_IupShow($20)|0); //@line 62 "main_c.c"
 STACKTOP = sp;return -2; //@line 64 "main_c.c"
}
function _IupEntryPoint($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $vararg_buffer = sp;
 $1 = $0;
 $9 = (_IupButton(20551,362470)|0); //@line 71 "main_c.c"
 $2 = $9; //@line 71 "main_c.c"
 $10 = (_IupButton(20562,362470)|0); //@line 72 "main_c.c"
 $3 = $10; //@line 72 "main_c.c"
 $11 = (_IupLabel(20571)|0); //@line 74 "main_c.c"
 $4 = $11; //@line 74 "main_c.c"
 $12 = (_IupLabel(20581)|0); //@line 75 "main_c.c"
 $5 = $12; //@line 75 "main_c.c"
 $13 = (_IupLabel(20595)|0); //@line 76 "main_c.c"
 $6 = $13; //@line 76 "main_c.c"
 $14 = $4; //@line 79 "main_c.c"
 _IupSetAttribute($14,20610,20618); //@line 79 "main_c.c"
 $15 = $2; //@line 83 "main_c.c"
 (_IupSetCallback($15,20479,576)|0); //@line 83 "main_c.c"
 $16 = $3; //@line 84 "main_c.c"
 (_IupSetCallback($16,20522,577)|0); //@line 84 "main_c.c"
 $17 = $5; //@line 87 "main_c.c"
 _IupSetAttribute($17,20610,20629); //@line 87 "main_c.c"
 $18 = $6; //@line 88 "main_c.c"
 _IupSetAttribute($18,20610,20641); //@line 88 "main_c.c"
 $19 = $4; //@line 89 "main_c.c"
 _IupSetAttribute($19,20508,20649); //@line 89 "main_c.c"
 $20 = $2; //@line 92 "main_c.c"
 $21 = $3; //@line 92 "main_c.c"
 $22 = $4; //@line 92 "main_c.c"
 $23 = $5; //@line 92 "main_c.c"
 $24 = $6; //@line 92 "main_c.c"
 HEAP32[$vararg_buffer>>2] = $21; //@line 92 "main_c.c"
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0); //@line 92 "main_c.c"
 HEAP32[$vararg_ptr1>>2] = $22; //@line 92 "main_c.c"
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0); //@line 92 "main_c.c"
 HEAP32[$vararg_ptr2>>2] = $23; //@line 92 "main_c.c"
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0); //@line 92 "main_c.c"
 HEAP32[$vararg_ptr3>>2] = $24; //@line 92 "main_c.c"
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0); //@line 92 "main_c.c"
 HEAP32[$vararg_ptr4>>2] = 0; //@line 92 "main_c.c"
 $25 = (_IupVbox($20,$vararg_buffer)|0); //@line 92 "main_c.c"
 $7 = $25; //@line 92 "main_c.c"
 $26 = $7; //@line 93 "main_c.c"
 _IupSetAttribute($26,20659,20663); //@line 93 "main_c.c"
 $27 = $7; //@line 94 "main_c.c"
 _IupSetAttribute($27,20666,20673); //@line 94 "main_c.c"
 $28 = $7; //@line 95 "main_c.c"
 _IupSetAttribute($28,20679,20689); //@line 95 "main_c.c"
 $29 = $7; //@line 97 "main_c.c"
 $30 = (_IupDialog($29)|0); //@line 97 "main_c.c"
 $8 = $30; //@line 97 "main_c.c"
 $31 = $8; //@line 99 "main_c.c"
 _IupSetAttribute($31,20508,20532); //@line 99 "main_c.c"
 $32 = $8; //@line 101 "main_c.c"
 (_IupShow($32)|0); //@line 101 "main_c.c"
 STACKTOP = sp;return 0; //@line 102 "main_c.c"
}
function _main($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = 0;
 $3 = $0;
 $4 = $1;
 (_IupOpen(0,0)|0); //@line 108 "main_c.c"
 (_IupSetFunction(20697,578)|0); //@line 109 "main_c.c"
 (_IupMainLoop()|0); //@line 110 "main_c.c"
 STACKTOP = sp;return 0; //@line 111 "main_c.c"
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$vararg_buffer>>2] = $2;
 $3 = (___syscall6(6,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $3;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $6 = (___syscall140(140,($vararg_buffer|0))|0);
 $7 = (___syscall_ret($6)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  HEAP32[$3>>2] = -1;
  $9 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $9 = $$pre;
 }
 STACKTOP = sp;return ($9|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (0|0)==(0|0);
 if ($0) {
  $$0 = 24952;
 } else {
  $1 = (_pthread_self()|0);
  $2 = ((($1)) + 64|0);
  $3 = HEAP32[$2>>2]|0;
  $$0 = $3;
 }
 return ($$0|0);
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$056 = 0, $$058 = 0, $$059 = 0, $$061 = 0, $$1 = 0, $$157 = 0, $$160 = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $3 = sp + 32|0;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = ((($0)) + 44|0);
 $$056 = 2;$$058 = $12;$$059 = $3;
 while(1) {
  $15 = HEAP32[6227]|0;
  $16 = ($15|0)==(0|0);
  if ($16) {
   $20 = HEAP32[$13>>2]|0;
   HEAP32[$vararg_buffer3>>2] = $20;
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   HEAP32[$vararg_ptr6>>2] = $$059;
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   HEAP32[$vararg_ptr7>>2] = $$056;
   $21 = (___syscall146(146,($vararg_buffer3|0))|0);
   $22 = (___syscall_ret($21)|0);
   $$0 = $22;
  } else {
   _pthread_cleanup_push((579|0),($0|0));
   $17 = HEAP32[$13>>2]|0;
   HEAP32[$vararg_buffer>>2] = $17;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $$059;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $$056;
   $18 = (___syscall146(146,($vararg_buffer|0))|0);
   $19 = (___syscall_ret($18)|0);
   _pthread_cleanup_pop(0);
   $$0 = $19;
  }
  $23 = ($$058|0)==($$0|0);
  if ($23) {
   label = 6;
   break;
  }
  $30 = ($$0|0)<(0);
  if ($30) {
   label = 8;
   break;
  }
  $38 = (($$058) - ($$0))|0;
  $39 = ((($$059)) + 4|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($$0>>>0)>($40>>>0);
  if ($41) {
   $42 = HEAP32[$14>>2]|0;
   HEAP32[$4>>2] = $42;
   HEAP32[$7>>2] = $42;
   $43 = (($$0) - ($40))|0;
   $44 = ((($$059)) + 8|0);
   $45 = (($$056) + -1)|0;
   $$phi$trans$insert = ((($$059)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $$1 = $43;$$157 = $45;$$160 = $44;$53 = $$pre;
  } else {
   $46 = ($$056|0)==(2);
   if ($46) {
    $47 = HEAP32[$4>>2]|0;
    $48 = (($47) + ($$0)|0);
    HEAP32[$4>>2] = $48;
    $$1 = $$0;$$157 = 2;$$160 = $$059;$53 = $40;
   } else {
    $$1 = $$0;$$157 = $$056;$$160 = $$059;$53 = $40;
   }
  }
  $49 = HEAP32[$$160>>2]|0;
  $50 = (($49) + ($$1)|0);
  HEAP32[$$160>>2] = $50;
  $51 = ((($$160)) + 4|0);
  $52 = (($53) - ($$1))|0;
  HEAP32[$51>>2] = $52;
  $$056 = $$157;$$058 = $38;$$059 = $$160;
 }
 if ((label|0) == 6) {
  $24 = HEAP32[$14>>2]|0;
  $25 = ((($0)) + 48|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (($24) + ($26)|0);
  $28 = ((($0)) + 16|0);
  HEAP32[$28>>2] = $27;
  $29 = $24;
  HEAP32[$4>>2] = $29;
  HEAP32[$7>>2] = $29;
  $$061 = $2;
 }
 else if ((label|0) == 8) {
  $31 = ((($0)) + 16|0);
  HEAP32[$31>>2] = 0;
  HEAP32[$4>>2] = 0;
  HEAP32[$7>>2] = 0;
  $32 = HEAP32[$0>>2]|0;
  $33 = $32 | 32;
  HEAP32[$0>>2] = $33;
  $34 = ($$056|0)==(2);
  if ($34) {
   $$061 = 0;
  } else {
   $35 = ((($$059)) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = (($2) - ($36))|0;
   $$061 = $37;
  }
 }
 STACKTOP = sp;return ($$061|0);
}
function _cleanup_612($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  ___unlockfile($0);
 }
 return;
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $vararg_buffer = sp;
 $3 = sp + 12|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 11;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21505;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $3;
  $10 = (___syscall54(54,($vararg_buffer|0))|0);
  $11 = ($10|0)==(0);
  if (!($11)) {
   $12 = ((($0)) + 75|0);
   HEAP8[$12>>0] = -1;
  }
 }
 $13 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($13|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01518 = $0;$22 = $1;
   while(1) {
    $4 = HEAP8[$$01518>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$pn = $22;
     break L1;
    }
    $6 = ((($$01518)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01518 = $6;$22 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn29 = $$0;
   while(1) {
    $19 = ((($$pn29)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn29 = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$pn = $21;
 }
 $$014 = (($$pn) - ($1))|0;
 return ($$014|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($0,$1)|0);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$029 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = HEAP8[$$02642>>0]|0;
     HEAP8[$$02741>>0] = $9;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      $$029 = $$02741;
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = HEAP32[$$026$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     HEAP32[$$02536>>2] = $24;
     $25 = HEAP32[$22>>2]|0;
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1$ph = $$0$lcssa;$$128$ph = $$025$lcssa;
   label = 8;
  } else {
   $$1$ph = $1;$$128$ph = $0;
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = HEAP8[$$1$ph>>0]|0;
  HEAP8[$$128$ph>>0] = $31;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $$029 = $$128$ph;
  } else {
   $$12834 = $$128$ph;$$135 = $$1$ph;
   while(1) {
    $33 = ((($$135)) + 1|0);
    $34 = ((($$12834)) + 1|0);
    $35 = HEAP8[$33>>0]|0;
    HEAP8[$34>>0] = $35;
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     $$029 = $34;
     break;
    } else {
     $$12834 = $34;$$135 = $33;
    }
   }
  }
 }
 return ($$029|0);
}
function ___intscan($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0154222 = 0, $$0157 = 0, $$0157$ = 0, $$0159 = 0, $$1155188 = 0, $$1158 = 0, $$1160 = 0, $$1160169 = 0, $$1165 = 0, $$1165167 = 0, $$1165168 = 0, $$166 = 0, $$2156206 = 0, $$2161$be = 0, $$2161$lcssa = 0, $$3162$be = 0, $$3162$lcssa = 0, $$3162211 = 0, $$4163$be = 0, $$4163$lcssa = 0;
 var $$5$be = 0, $$6$be = 0, $$6$lcssa = 0, $$7$be = 0, $$7194 = 0, $$8 = 0, $$9$be = 0, $$lcssa = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond183 = 0, $or$cond5 = 0, $or$cond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($1>>>0)>(36);
 L1: do {
  if ($5) {
   $8 = (___errno_location()|0);
   HEAP32[$8>>2] = 22;
   $289 = 0;$290 = 0;
  } else {
   $6 = ((($0)) + 4|0);
   $7 = ((($0)) + 100|0);
   while(1) {
    $9 = HEAP32[$6>>2]|0;
    $10 = HEAP32[$7>>2]|0;
    $11 = ($9>>>0)<($10>>>0);
    if ($11) {
     $12 = ((($9)) + 1|0);
     HEAP32[$6>>2] = $12;
     $13 = HEAP8[$9>>0]|0;
     $14 = $13&255;
     $16 = $14;
    } else {
     $15 = (___shgetc($0)|0);
     $16 = $15;
    }
    $17 = (_isspace($16)|0);
    $18 = ($17|0)==(0);
    if ($18) {
     break;
    }
   }
   $19 = ($16|0)==(45);
   L11: do {
    switch ($16|0) {
    case 43: case 45:  {
     $20 = $19 << 31 >> 31;
     $21 = HEAP32[$6>>2]|0;
     $22 = HEAP32[$7>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$6>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $$0157 = $20;$$0159 = $26;
      break L11;
     } else {
      $27 = (___shgetc($0)|0);
      $$0157 = $20;$$0159 = $27;
      break L11;
     }
     break;
    }
    default: {
     $$0157 = 0;$$0159 = $16;
    }
    }
   } while(0);
   $28 = ($1|0)==(0);
   $29 = $1 | 16;
   $30 = ($29|0)==(16);
   $31 = ($$0159|0)==(48);
   $or$cond5 = $30 & $31;
   do {
    if ($or$cond5) {
     $32 = HEAP32[$6>>2]|0;
     $33 = HEAP32[$7>>2]|0;
     $34 = ($32>>>0)<($33>>>0);
     if ($34) {
      $35 = ((($32)) + 1|0);
      HEAP32[$6>>2] = $35;
      $36 = HEAP8[$32>>0]|0;
      $37 = $36&255;
      $40 = $37;
     } else {
      $38 = (___shgetc($0)|0);
      $40 = $38;
     }
     $39 = $40 | 32;
     $41 = ($39|0)==(120);
     if (!($41)) {
      if ($28) {
       $$1160169 = $40;$$1165168 = 8;
       label = 46;
       break;
      } else {
       $$1160 = $40;$$1165 = $1;
       label = 32;
       break;
      }
     }
     $42 = HEAP32[$6>>2]|0;
     $43 = HEAP32[$7>>2]|0;
     $44 = ($42>>>0)<($43>>>0);
     if ($44) {
      $45 = ((($42)) + 1|0);
      HEAP32[$6>>2] = $45;
      $46 = HEAP8[$42>>0]|0;
      $47 = $46&255;
      $50 = $47;
     } else {
      $48 = (___shgetc($0)|0);
      $50 = $48;
     }
     $49 = ((20710) + ($50)|0);
     $51 = HEAP8[$49>>0]|0;
     $52 = ($51&255)>(15);
     if ($52) {
      $53 = HEAP32[$7>>2]|0;
      $54 = ($53|0)==(0|0);
      if (!($54)) {
       $55 = HEAP32[$6>>2]|0;
       $56 = ((($55)) + -1|0);
       HEAP32[$6>>2] = $56;
      }
      $57 = ($2|0)==(0);
      if ($57) {
       ___shlim($0,0);
       $289 = 0;$290 = 0;
       break L1;
      }
      if ($54) {
       $289 = 0;$290 = 0;
       break L1;
      }
      $58 = HEAP32[$6>>2]|0;
      $59 = ((($58)) + -1|0);
      HEAP32[$6>>2] = $59;
      $289 = 0;$290 = 0;
      break L1;
     } else {
      $$1160169 = $50;$$1165168 = 16;
      label = 46;
     }
    } else {
     $$166 = $28 ? 10 : $1;
     $60 = ((20710) + ($$0159)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = ($62>>>0)<($$166>>>0);
     if ($63) {
      $$1160 = $$0159;$$1165 = $$166;
      label = 32;
     } else {
      $64 = HEAP32[$7>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $66 = HEAP32[$6>>2]|0;
       $67 = ((($66)) + -1|0);
       HEAP32[$6>>2] = $67;
      }
      ___shlim($0,0);
      $68 = (___errno_location()|0);
      HEAP32[$68>>2] = 22;
      $289 = 0;$290 = 0;
      break L1;
     }
    }
   } while(0);
   if ((label|0) == 32) {
    $69 = ($$1165|0)==(10);
    if ($69) {
     $70 = (($$1160) + -48)|0;
     $71 = ($70>>>0)<(10);
     if ($71) {
      $$0154222 = 0;$74 = $70;
      while(1) {
       $72 = ($$0154222*10)|0;
       $73 = (($72) + ($74))|0;
       $75 = HEAP32[$6>>2]|0;
       $76 = HEAP32[$7>>2]|0;
       $77 = ($75>>>0)<($76>>>0);
       if ($77) {
        $78 = ((($75)) + 1|0);
        HEAP32[$6>>2] = $78;
        $79 = HEAP8[$75>>0]|0;
        $80 = $79&255;
        $$2161$be = $80;
       } else {
        $81 = (___shgetc($0)|0);
        $$2161$be = $81;
       }
       $82 = (($$2161$be) + -48)|0;
       $83 = ($82>>>0)<(10);
       $84 = ($73>>>0)<(429496729);
       $85 = $83 & $84;
       if ($85) {
        $$0154222 = $73;$74 = $82;
       } else {
        break;
       }
      }
      $$2161$lcssa = $$2161$be;$291 = $73;$292 = 0;
     } else {
      $$2161$lcssa = $$1160;$291 = 0;$292 = 0;
     }
     $86 = (($$2161$lcssa) + -48)|0;
     $87 = ($86>>>0)<(10);
     if ($87) {
      $$3162211 = $$2161$lcssa;$88 = $291;$89 = $292;$92 = $86;
      while(1) {
       $90 = (___muldi3(($88|0),($89|0),10,0)|0);
       $91 = tempRet0;
       $93 = ($92|0)<(0);
       $94 = $93 << 31 >> 31;
       $95 = $92 ^ -1;
       $96 = $94 ^ -1;
       $97 = ($91>>>0)>($96>>>0);
       $98 = ($90>>>0)>($95>>>0);
       $99 = ($91|0)==($96|0);
       $100 = $99 & $98;
       $101 = $97 | $100;
       if ($101) {
        $$3162$lcssa = $$3162211;$$lcssa = $92;$293 = $88;$294 = $89;
        break;
       }
       $102 = (_i64Add(($90|0),($91|0),($92|0),($94|0))|0);
       $103 = tempRet0;
       $104 = HEAP32[$6>>2]|0;
       $105 = HEAP32[$7>>2]|0;
       $106 = ($104>>>0)<($105>>>0);
       if ($106) {
        $107 = ((($104)) + 1|0);
        HEAP32[$6>>2] = $107;
        $108 = HEAP8[$104>>0]|0;
        $109 = $108&255;
        $$3162$be = $109;
       } else {
        $110 = (___shgetc($0)|0);
        $$3162$be = $110;
       }
       $111 = (($$3162$be) + -48)|0;
       $112 = ($111>>>0)<(10);
       $113 = ($103>>>0)<(429496729);
       $114 = ($102>>>0)<(2576980378);
       $115 = ($103|0)==(429496729);
       $116 = $115 & $114;
       $117 = $113 | $116;
       $or$cond7 = $112 & $117;
       if ($or$cond7) {
        $$3162211 = $$3162$be;$88 = $102;$89 = $103;$92 = $111;
       } else {
        $$3162$lcssa = $$3162$be;$$lcssa = $111;$293 = $102;$294 = $103;
        break;
       }
      }
      $118 = ($$lcssa>>>0)>(9);
      if ($118) {
       $$1158 = $$0157;$262 = $294;$264 = $293;
      } else {
       $$1165167 = 10;$$8 = $$3162$lcssa;$295 = $293;$296 = $294;
       label = 72;
      }
     } else {
      $$1158 = $$0157;$262 = $292;$264 = $291;
     }
    } else {
     $$1160169 = $$1160;$$1165168 = $$1165;
     label = 46;
    }
   }
   L63: do {
    if ((label|0) == 46) {
     $119 = (($$1165168) + -1)|0;
     $120 = $119 & $$1165168;
     $121 = ($120|0)==(0);
     if ($121) {
      $126 = ($$1165168*23)|0;
      $127 = $126 >>> 5;
      $128 = $127 & 7;
      $129 = (20966 + ($128)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130 << 24 >> 24;
      $132 = ((20710) + ($$1160169)|0);
      $133 = HEAP8[$132>>0]|0;
      $134 = $133&255;
      $135 = ($134>>>0)<($$1165168>>>0);
      if ($135) {
       $$1155188 = 0;$138 = $134;
       while(1) {
        $136 = $$1155188 << $131;
        $137 = $138 | $136;
        $139 = HEAP32[$6>>2]|0;
        $140 = HEAP32[$7>>2]|0;
        $141 = ($139>>>0)<($140>>>0);
        if ($141) {
         $142 = ((($139)) + 1|0);
         HEAP32[$6>>2] = $142;
         $143 = HEAP8[$139>>0]|0;
         $144 = $143&255;
         $$4163$be = $144;
        } else {
         $145 = (___shgetc($0)|0);
         $$4163$be = $145;
        }
        $146 = ((20710) + ($$4163$be)|0);
        $147 = HEAP8[$146>>0]|0;
        $148 = $147&255;
        $149 = ($148>>>0)<($$1165168>>>0);
        $150 = ($137>>>0)<(134217728);
        $151 = $150 & $149;
        if ($151) {
         $$1155188 = $137;$138 = $148;
        } else {
         break;
        }
       }
       $$4163$lcssa = $$4163$be;$155 = $147;$157 = 0;$159 = $137;
      } else {
       $$4163$lcssa = $$1160169;$155 = $133;$157 = 0;$159 = 0;
      }
      $152 = (_bitshift64Lshr(-1,-1,($131|0))|0);
      $153 = tempRet0;
      $154 = $155&255;
      $156 = ($154>>>0)>=($$1165168>>>0);
      $158 = ($157>>>0)>($153>>>0);
      $160 = ($159>>>0)>($152>>>0);
      $161 = ($157|0)==($153|0);
      $162 = $161 & $160;
      $163 = $158 | $162;
      $or$cond183 = $156 | $163;
      if ($or$cond183) {
       $$1165167 = $$1165168;$$8 = $$4163$lcssa;$295 = $159;$296 = $157;
       label = 72;
       break;
      } else {
       $164 = $159;$165 = $157;$169 = $155;
      }
      while(1) {
       $166 = (_bitshift64Shl(($164|0),($165|0),($131|0))|0);
       $167 = tempRet0;
       $168 = $169&255;
       $170 = $168 | $166;
       $171 = HEAP32[$6>>2]|0;
       $172 = HEAP32[$7>>2]|0;
       $173 = ($171>>>0)<($172>>>0);
       if ($173) {
        $174 = ((($171)) + 1|0);
        HEAP32[$6>>2] = $174;
        $175 = HEAP8[$171>>0]|0;
        $176 = $175&255;
        $$5$be = $176;
       } else {
        $177 = (___shgetc($0)|0);
        $$5$be = $177;
       }
       $178 = ((20710) + ($$5$be)|0);
       $179 = HEAP8[$178>>0]|0;
       $180 = $179&255;
       $181 = ($180>>>0)>=($$1165168>>>0);
       $182 = ($167>>>0)>($153>>>0);
       $183 = ($170>>>0)>($152>>>0);
       $184 = ($167|0)==($153|0);
       $185 = $184 & $183;
       $186 = $182 | $185;
       $or$cond = $181 | $186;
       if ($or$cond) {
        $$1165167 = $$1165168;$$8 = $$5$be;$295 = $170;$296 = $167;
        label = 72;
        break L63;
       } else {
        $164 = $170;$165 = $167;$169 = $179;
       }
      }
     }
     $122 = ((20710) + ($$1160169)|0);
     $123 = HEAP8[$122>>0]|0;
     $124 = $123&255;
     $125 = ($124>>>0)<($$1165168>>>0);
     if ($125) {
      $$2156206 = 0;$189 = $124;
      while(1) {
       $187 = Math_imul($$2156206, $$1165168)|0;
       $188 = (($189) + ($187))|0;
       $190 = HEAP32[$6>>2]|0;
       $191 = HEAP32[$7>>2]|0;
       $192 = ($190>>>0)<($191>>>0);
       if ($192) {
        $193 = ((($190)) + 1|0);
        HEAP32[$6>>2] = $193;
        $194 = HEAP8[$190>>0]|0;
        $195 = $194&255;
        $$6$be = $195;
       } else {
        $196 = (___shgetc($0)|0);
        $$6$be = $196;
       }
       $197 = ((20710) + ($$6$be)|0);
       $198 = HEAP8[$197>>0]|0;
       $199 = $198&255;
       $200 = ($199>>>0)<($$1165168>>>0);
       $201 = ($188>>>0)<(119304647);
       $202 = $201 & $200;
       if ($202) {
        $$2156206 = $188;$189 = $199;
       } else {
        break;
       }
      }
      $$6$lcssa = $$6$be;$204 = $198;$297 = $188;$298 = 0;
     } else {
      $$6$lcssa = $$1160169;$204 = $123;$297 = 0;$298 = 0;
     }
     $203 = $204&255;
     $205 = ($203>>>0)<($$1165168>>>0);
     if ($205) {
      $206 = (___udivdi3(-1,-1,($$1165168|0),0)|0);
      $207 = tempRet0;
      $$7194 = $$6$lcssa;$208 = $298;$210 = $297;$218 = $204;
      while(1) {
       $209 = ($208>>>0)>($207>>>0);
       $211 = ($210>>>0)>($206>>>0);
       $212 = ($208|0)==($207|0);
       $213 = $212 & $211;
       $214 = $209 | $213;
       if ($214) {
        $$1165167 = $$1165168;$$8 = $$7194;$295 = $210;$296 = $208;
        label = 72;
        break L63;
       }
       $215 = (___muldi3(($210|0),($208|0),($$1165168|0),0)|0);
       $216 = tempRet0;
       $217 = $218&255;
       $219 = $217 ^ -1;
       $220 = ($216>>>0)>(4294967295);
       $221 = ($215>>>0)>($219>>>0);
       $222 = ($216|0)==(-1);
       $223 = $222 & $221;
       $224 = $220 | $223;
       if ($224) {
        $$1165167 = $$1165168;$$8 = $$7194;$295 = $210;$296 = $208;
        label = 72;
        break L63;
       }
       $225 = (_i64Add(($217|0),0,($215|0),($216|0))|0);
       $226 = tempRet0;
       $227 = HEAP32[$6>>2]|0;
       $228 = HEAP32[$7>>2]|0;
       $229 = ($227>>>0)<($228>>>0);
       if ($229) {
        $230 = ((($227)) + 1|0);
        HEAP32[$6>>2] = $230;
        $231 = HEAP8[$227>>0]|0;
        $232 = $231&255;
        $$7$be = $232;
       } else {
        $233 = (___shgetc($0)|0);
        $$7$be = $233;
       }
       $234 = ((20710) + ($$7$be)|0);
       $235 = HEAP8[$234>>0]|0;
       $236 = $235&255;
       $237 = ($236>>>0)<($$1165168>>>0);
       if ($237) {
        $$7194 = $$7$be;$208 = $226;$210 = $225;$218 = $235;
       } else {
        $$1165167 = $$1165168;$$8 = $$7$be;$295 = $225;$296 = $226;
        label = 72;
        break;
       }
      }
     } else {
      $$1165167 = $$1165168;$$8 = $$6$lcssa;$295 = $297;$296 = $298;
      label = 72;
     }
    }
   } while(0);
   if ((label|0) == 72) {
    $238 = ((20710) + ($$8)|0);
    $239 = HEAP8[$238>>0]|0;
    $240 = $239&255;
    $241 = ($240>>>0)<($$1165167>>>0);
    if ($241) {
     while(1) {
      $242 = HEAP32[$6>>2]|0;
      $243 = HEAP32[$7>>2]|0;
      $244 = ($242>>>0)<($243>>>0);
      if ($244) {
       $245 = ((($242)) + 1|0);
       HEAP32[$6>>2] = $245;
       $246 = HEAP8[$242>>0]|0;
       $247 = $246&255;
       $$9$be = $247;
      } else {
       $248 = (___shgetc($0)|0);
       $$9$be = $248;
      }
      $249 = ((20710) + ($$9$be)|0);
      $250 = HEAP8[$249>>0]|0;
      $251 = $250&255;
      $252 = ($251>>>0)<($$1165167>>>0);
      if (!($252)) {
       break;
      }
     }
     $253 = (___errno_location()|0);
     HEAP32[$253>>2] = 34;
     $254 = $3 & 1;
     $255 = ($254|0)==(0);
     $256 = (0)==(0);
     $257 = $255 & $256;
     $$0157$ = $257 ? $$0157 : 0;
     $$1158 = $$0157$;$262 = $4;$264 = $3;
    } else {
     $$1158 = $$0157;$262 = $296;$264 = $295;
    }
   }
   $258 = HEAP32[$7>>2]|0;
   $259 = ($258|0)==(0|0);
   if (!($259)) {
    $260 = HEAP32[$6>>2]|0;
    $261 = ((($260)) + -1|0);
    HEAP32[$6>>2] = $261;
   }
   $263 = ($262>>>0)<($4>>>0);
   $265 = ($264>>>0)<($3>>>0);
   $266 = ($262|0)==($4|0);
   $267 = $266 & $265;
   $268 = $263 | $267;
   if (!($268)) {
    $269 = $3 & 1;
    $270 = ($269|0)!=(0);
    $271 = (0)!=(0);
    $272 = $270 | $271;
    $273 = ($$1158|0)!=(0);
    $or$cond12 = $272 | $273;
    if (!($or$cond12)) {
     $274 = (___errno_location()|0);
     HEAP32[$274>>2] = 34;
     $275 = (_i64Add(($3|0),($4|0),-1,-1)|0);
     $276 = tempRet0;
     $289 = $276;$290 = $275;
     break;
    }
    $277 = ($262>>>0)>($4>>>0);
    $278 = ($264>>>0)>($3>>>0);
    $279 = ($262|0)==($4|0);
    $280 = $279 & $278;
    $281 = $277 | $280;
    if ($281) {
     $282 = (___errno_location()|0);
     HEAP32[$282>>2] = 34;
     $289 = $4;$290 = $3;
     break;
    }
   }
   $283 = ($$1158|0)<(0);
   $284 = $283 << 31 >> 31;
   $285 = $264 ^ $$1158;
   $286 = $262 ^ $284;
   $287 = (_i64Subtract(($285|0),($286|0),($$1158|0),($284|0))|0);
   $288 = tempRet0;
   $289 = $288;$290 = $287;
  }
 } while(0);
 tempRet0 = ($289);
 return ($290|0);
}
function ___shgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert28 = 0, $$pre = 0, $$pre29 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 104|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  label = 3;
 } else {
  $4 = ((($0)) + 108|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)<($2|0);
  if ($6) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $7 = (___uflow($0)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   label = 4;
  } else {
   $10 = HEAP32[$1>>2]|0;
   $11 = ($10|0)==(0);
   $$phi$trans$insert = ((($0)) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($11) {
    $12 = $$pre;
    $42 = $12;
    label = 9;
   } else {
    $13 = ((($0)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $14;
    $16 = (($$pre) - ($15))|0;
    $17 = ((($0)) + 108|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($10) - ($18))|0;
    $20 = ($16|0)<($19|0);
    $21 = $$pre;
    if ($20) {
     $42 = $21;
     label = 9;
    } else {
     $22 = (($19) + -1)|0;
     $23 = (($14) + ($22)|0);
     $24 = ((($0)) + 100|0);
     HEAP32[$24>>2] = $23;
     $26 = $21;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($0)) + 100|0);
    HEAP32[$25>>2] = $$pre;
    $26 = $42;
   }
   $27 = ($26|0)==(0|0);
   $$phi$trans$insert28 = ((($0)) + 4|0);
   if ($27) {
    $$pre29 = HEAP32[$$phi$trans$insert28>>2]|0;
    $37 = $$pre29;
   } else {
    $28 = HEAP32[$$phi$trans$insert28>>2]|0;
    $29 = $26;
    $30 = ((($0)) + 108|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (($29) + 1)|0;
    $33 = (($32) - ($28))|0;
    $34 = (($33) + ($31))|0;
    HEAP32[$30>>2] = $34;
    $35 = $28;
    $37 = $35;
   }
   $36 = ((($37)) + -1|0);
   $38 = HEAP8[$36>>0]|0;
   $39 = $38&255;
   $40 = ($39|0)==($7|0);
   if ($40) {
    $$0 = $7;
   } else {
    $41 = $7&255;
    HEAP8[$36>>0] = $41;
    $$0 = $7;
   }
  }
 }
 if ((label|0) == 4) {
  $9 = ((($0)) + 100|0);
  HEAP32[$9>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function _isspace($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(32);
 $2 = (($0) + -9)|0;
 $3 = ($2>>>0)<(5);
 $4 = $1 | $3;
 $5 = $4&1;
 return ($5|0);
}
function ___shlim($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 104|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ((($0)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1|0)!=(0);
 $10 = ($7|0)>($1|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = $6;
  $12 = (($11) + ($1)|0);
  $13 = ((($0)) + 100|0);
  HEAP32[$13>>2] = $12;
 } else {
  $14 = ((($0)) + 100|0);
  HEAP32[$14>>2] = $4;
 }
 return;
}
function ___uflow($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $5 = (___toread($0)|0);
  $6 = ($5|0)==(0);
  if ($6) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $7 = ((($0)) + 32|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = (FUNCTION_TABLE_iiii[$8 & 1023]($0,$1,1)|0);
  $10 = ($9|0)==(1);
  if ($10) {
   $11 = HEAP8[$1>>0]|0;
   $12 = $11&255;
   $$0 = $12;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8>>>0)>($10>>>0);
 if ($11) {
  $12 = ((($0)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  (FUNCTION_TABLE_iiii[$13 & 1023]($0,0,0)|0);
 }
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($0)) + 28|0);
 HEAP32[$15>>2] = 0;
 HEAP32[$7>>2] = 0;
 $16 = HEAP32[$0>>2]|0;
 $17 = $16 & 20;
 $18 = ($17|0)==(0);
 if ($18) {
  $22 = HEAP32[$9>>2]|0;
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = $22;
  $24 = ((($0)) + 4|0);
  HEAP32[$24>>2] = $22;
  $$0 = 0;
 } else {
  $19 = $16 & 4;
  $20 = ($19|0)==(0);
  if ($20) {
   $$0 = -1;
  } else {
   $21 = $16 | 32;
   HEAP32[$0>>2] = $21;
   $$0 = -1;
  }
 }
 return ($$0|0);
}
function ___floatscan($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$0340$i = 0, $$$0345$i = 0, $$$0380$i = 0, $$$0396$i = 0, $$$5350$i = 0, $$$5385$i = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0105$ph = 0, $$0106$ph = 0, $$0107$lcssa = 0, $$0107163 = 0, $$0113 = 0, $$0114 = 0.0, $$0133$i = 0, $$0142$i = 0, $$0146$i = 0, $$0148$i = 0, $$0151$i = 0.0;
 var $$0152$i = 0.0, $$0155$i = 0.0, $$0159$i = 0, $$0166$i = 0, $$0166169$i = 0, $$0166170$i = 0, $$0324$i = 0, $$0327480$i = 0, $$0328$i = 0, $$0329$i = 0, $$0331476$i = 0, $$0335486$i = 0, $$0336$lcssa$i = 0, $$0336453$i = 0, $$0336454$i = 0, $$0336455$i = 0, $$0336503$i = 0, $$0340$lcssa$i = 0, $$0340457$i = 0, $$0340458$i = 0;
 var $$0340459$i = 0, $$0340502$i = 0, $$0345$lcssa545$i = 0, $$0345484$i = 0, $$0355$i = 0.0, $$0356$i = 0.0, $$0360474$i = 0.0, $$0364$i = 0, $$0367$i = 0, $$0375$i = 0, $$0375$ph$i = 0, $$0380$lcssa544$i = 0, $$0380483$i = 0, $$0388$i = 0, $$0391$i = 0, $$0396$lcssa$i = 0, $$0396463$i = 0, $$0396464$i = 0, $$0396465$i = 0, $$0396499$i = 0;
 var $$1$i = 0.0, $$1$lcssa = 0, $$1$ph$i = 0, $$10$i = 0, $$1108 = 0, $$1147$i = 0, $$1149$i = 0, $$1153$i = 0.0, $$1156$i = 0.0, $$1160$i = 0, $$1164 = 0, $$1325$be$i = 0, $$1325$ph$i = 0, $$1330$i = 0, $$1332$i = 0, $$1357$i = 0.0, $$1361$i = 0.0, $$1365$i = 0, $$1368$i = 0, $$1368$ph438$i = 0;
 var $$1376$i = 0, $$1376$ph$i = 0, $$1376$ph549$i = 0, $$1389$lcssa$i = 0, $$1389501$i = 0, $$2 = 0, $$2$i = 0, $$2$i117 = 0, $$2$lcssa$i = 0, $$2109161 = 0, $$2144$i = 0, $$2150$i = 0, $$2154$i = 0.0, $$2157$i = 0.0, $$2161$i = 0, $$2338$i = 0, $$2342$i = 0, $$2347$ph439$i = 0, $$2362$i = 0.0, $$2366$i = 0;
 var $$2369$i = 0, $$2382$ph437$i = 0, $$2390$i = 0, $$2393$i = 0, $$2398$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3110 = 0, $$3145$i = 0, $$3158$lcssa$i = 0.0, $$3158179$i = 0.0, $$3162 = 0, $$3162$lcssa$i = 0, $$3162183$i = 0, $$3339493$i = 0, $$3343$i = 0, $$3359$i = 0.0, $$3363$i = 0.0, $$3370$i = 0, $$3378$i = 0;
 var $$3394$lcssa$i = 0, $$3394500$i = 0, $$3504$i = 0, $$4 = 0, $$4$i = 0.0, $$408$i = 0, $$4111 = 0, $$416$i = 0, $$4163$lcssa$i = 0, $$4163178$i = 0, $$4344485$i = 0, $$4349$i = 0, $$4349$ph$i = 0, $$4349$ph550$i = 0, $$4371$i = 0, $$4379$i = 0, $$4384$ph$i = 0, $$4384$ph435$i = 0, $$4395$i = 0, $$4475$i = 0;
 var $$5 = 0, $$5$$2369$i = 0, $$5$i = 0.0, $$5$i121 = 0, $$5$in$i = 0, $$5164$i = 0, $$5350478$i = 0, $$5385477$i = 0, $$6 = 0, $$6$i = 0, $$6373$ph$i = 0, $$6479$i = 0, $$9473$i = 0, $$in = 0, $$neg432$i = 0, $$neg433$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i119 = 0;
 var $$pre$phi202$iZ2D = 0.0, $$pre201$i = 0.0, $$promoted$i = 0, $$sink$off0$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0.0;
 var $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0.0, $261 = 0.0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0.0, $283 = 0.0, $284 = 0.0, $285 = 0, $286 = 0, $287 = 0.0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0.0;
 var $313 = 0.0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0.0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0.0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0.0, $428 = 0.0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0.0, $445 = 0.0, $446 = 0.0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0.0, $457 = 0.0;
 var $458 = 0.0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0.0, $469 = 0.0, $47 = 0, $470 = 0.0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0.0, $483 = 0, $484 = 0.0, $485 = 0.0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0.0, $49 = 0, $490 = 0.0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0.0, $501 = 0.0, $502 = 0.0, $503 = 0, $504 = 0, $505 = 0, $506 = 0.0, $507 = 0.0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0.0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0.0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0.0, $63 = 0, $630 = 0, $631 = 0, $632 = 0.0, $633 = 0.0, $634 = 0, $635 = 0.0, $636 = 0.0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0, $663 = 0.0, $664 = 0.0, $665 = 0, $666 = 0, $667 = 0, $668 = 0.0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0.0, $672 = 0, $673 = 0;
 var $674 = 0.0, $675 = 0, $676 = 0.0, $677 = 0.0, $678 = 0.0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0.0, $683 = 0, $684 = 0, $685 = 0, $686 = 0.0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;
 var $692 = 0.0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;
 var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond$i = 0, $exitcond$i = 0;
 var $exitcond541$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i118 = 0, $or$cond168$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond410$i = 0, $or$cond412$i = 0, $or$cond413$i = 0, $or$cond414$i = 0, $or$cond417$i = 0, $or$cond418$i = 0, $or$cond5 = 0, $or$cond571$i = 0, $or$cond6$i = 0, $or$cond6$i122 = 0, $or$cond7 = 0, $or$cond9 = 0, $or$cond9$i = 0;
 var $storemerge$i = 0, $sum$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(512|0);
 $3 = sp;
 switch ($1|0) {
 case 0:  {
  $$0105$ph = -149;$$0106$ph = 24;
  label = 4;
  break;
 }
 case 1:  {
  $$0105$ph = -1074;$$0106$ph = 53;
  label = 4;
  break;
 }
 case 2:  {
  $$0105$ph = -1074;$$0106$ph = 53;
  label = 4;
  break;
 }
 default: {
  $$0114 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $4 = ((($0)) + 4|0);
   $5 = ((($0)) + 100|0);
   while(1) {
    $6 = HEAP32[$4>>2]|0;
    $7 = HEAP32[$5>>2]|0;
    $8 = ($6>>>0)<($7>>>0);
    if ($8) {
     $9 = ((($6)) + 1|0);
     HEAP32[$4>>2] = $9;
     $10 = HEAP8[$6>>0]|0;
     $11 = $10&255;
     $13 = $11;
    } else {
     $12 = (___shgetc($0)|0);
     $13 = $12;
    }
    $14 = (_isspace($13)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     break;
    }
   }
   $16 = ($13|0)==(45);
   L13: do {
    switch ($13|0) {
    case 43: case 45:  {
     $17 = $16&1;
     $18 = $17 << 1;
     $19 = (1 - ($18))|0;
     $20 = HEAP32[$4>>2]|0;
     $21 = HEAP32[$5>>2]|0;
     $22 = ($20>>>0)<($21>>>0);
     if ($22) {
      $23 = ((($20)) + 1|0);
      HEAP32[$4>>2] = $23;
      $24 = HEAP8[$20>>0]|0;
      $25 = $24&255;
      $$0 = $25;$$0113 = $19;
      break L13;
     } else {
      $26 = (___shgetc($0)|0);
      $$0 = $26;$$0113 = $19;
      break L13;
     }
     break;
    }
    default: {
     $$0 = $13;$$0113 = 1;
    }
    }
   } while(0);
   $$0107163 = 0;$$1164 = $$0;
   while(1) {
    $27 = $$1164 | 32;
    $28 = (20975 + ($$0107163)|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = $29 << 24 >> 24;
    $31 = ($27|0)==($30|0);
    if (!($31)) {
     $$0107$lcssa = $$0107163;$$1$lcssa = $$1164;
     break;
    }
    $32 = ($$0107163>>>0)<(7);
    do {
     if ($32) {
      $33 = HEAP32[$4>>2]|0;
      $34 = HEAP32[$5>>2]|0;
      $35 = ($33>>>0)<($34>>>0);
      if ($35) {
       $36 = ((($33)) + 1|0);
       HEAP32[$4>>2] = $36;
       $37 = HEAP8[$33>>0]|0;
       $38 = $37&255;
       $$2 = $38;
       break;
      } else {
       $39 = (___shgetc($0)|0);
       $$2 = $39;
       break;
      }
     } else {
      $$2 = $$1164;
     }
    } while(0);
    $40 = (($$0107163) + 1)|0;
    $41 = ($40>>>0)<(8);
    if ($41) {
     $$0107163 = $40;$$1164 = $$2;
    } else {
     $$0107$lcssa = $40;$$1$lcssa = $$2;
     break;
    }
   }
   L29: do {
    switch ($$0107$lcssa|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $42 = ($$0107$lcssa>>>0)>(3);
     $43 = ($2|0)!=(0);
     $or$cond5 = $43 & $42;
     if ($or$cond5) {
      $44 = ($$0107$lcssa|0)==(8);
      if ($44) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $57 = ($$0107$lcssa|0)==(0);
     L34: do {
      if ($57) {
       $$2109161 = 0;$$3162 = $$1$lcssa;
       while(1) {
        $58 = $$3162 | 32;
        $59 = (21508 + ($$2109161)|0);
        $60 = HEAP8[$59>>0]|0;
        $61 = $60 << 24 >> 24;
        $62 = ($58|0)==($61|0);
        if (!($62)) {
         $$3110 = $$2109161;$$5 = $$3162;
         break L34;
        }
        $63 = ($$2109161>>>0)<(2);
        do {
         if ($63) {
          $64 = HEAP32[$4>>2]|0;
          $65 = HEAP32[$5>>2]|0;
          $66 = ($64>>>0)<($65>>>0);
          if ($66) {
           $67 = ((($64)) + 1|0);
           HEAP32[$4>>2] = $67;
           $68 = HEAP8[$64>>0]|0;
           $69 = $68&255;
           $$4 = $69;
           break;
          } else {
           $70 = (___shgetc($0)|0);
           $$4 = $70;
           break;
          }
         } else {
          $$4 = $$3162;
         }
        } while(0);
        $71 = (($$2109161) + 1)|0;
        $72 = ($71>>>0)<(3);
        if ($72) {
         $$2109161 = $71;$$3162 = $$4;
        } else {
         $$3110 = $71;$$5 = $$4;
         break;
        }
       }
      } else {
       $$3110 = $$0107$lcssa;$$5 = $$1$lcssa;
      }
     } while(0);
     switch ($$3110|0) {
     case 3:  {
      $73 = HEAP32[$4>>2]|0;
      $74 = HEAP32[$5>>2]|0;
      $75 = ($73>>>0)<($74>>>0);
      if ($75) {
       $76 = ((($73)) + 1|0);
       HEAP32[$4>>2] = $76;
       $77 = HEAP8[$73>>0]|0;
       $78 = $77&255;
       $80 = $78;
      } else {
       $79 = (___shgetc($0)|0);
       $80 = $79;
      }
      $81 = ($80|0)==(40);
      if ($81) {
       $$4111 = 1;
      } else {
       $82 = HEAP32[$5>>2]|0;
       $83 = ($82|0)==(0|0);
       if ($83) {
        $$0114 = nan;
        break L4;
       }
       $84 = HEAP32[$4>>2]|0;
       $85 = ((($84)) + -1|0);
       HEAP32[$4>>2] = $85;
       $$0114 = nan;
       break L4;
      }
      while(1) {
       $86 = HEAP32[$4>>2]|0;
       $87 = HEAP32[$5>>2]|0;
       $88 = ($86>>>0)<($87>>>0);
       if ($88) {
        $89 = ((($86)) + 1|0);
        HEAP32[$4>>2] = $89;
        $90 = HEAP8[$86>>0]|0;
        $91 = $90&255;
        $94 = $91;
       } else {
        $92 = (___shgetc($0)|0);
        $94 = $92;
       }
       $93 = (($94) + -48)|0;
       $95 = ($93>>>0)<(10);
       $96 = (($94) + -65)|0;
       $97 = ($96>>>0)<(26);
       $or$cond = $95 | $97;
       if (!($or$cond)) {
        $98 = (($94) + -97)|0;
        $99 = ($98>>>0)<(26);
        $100 = ($94|0)==(95);
        $or$cond7 = $100 | $99;
        if (!($or$cond7)) {
         break;
        }
       }
       $112 = (($$4111) + 1)|0;
       $$4111 = $112;
      }
      $101 = ($94|0)==(41);
      if ($101) {
       $$0114 = nan;
       break L4;
      }
      $102 = HEAP32[$5>>2]|0;
      $103 = ($102|0)==(0|0);
      if (!($103)) {
       $104 = HEAP32[$4>>2]|0;
       $105 = ((($104)) + -1|0);
       HEAP32[$4>>2] = $105;
      }
      if (!($43)) {
       $107 = (___errno_location()|0);
       HEAP32[$107>>2] = 22;
       ___shlim($0,0);
       $$0114 = 0.0;
       break L4;
      }
      $106 = ($$4111|0)==(0);
      if ($106) {
       $$0114 = nan;
       break L4;
      } else {
       $$in = $$4111;
      }
      while(1) {
       $108 = (($$in) + -1)|0;
       if (!($103)) {
        $109 = HEAP32[$4>>2]|0;
        $110 = ((($109)) + -1|0);
        HEAP32[$4>>2] = $110;
       }
       $111 = ($108|0)==(0);
       if ($111) {
        $$0114 = nan;
        break L4;
       } else {
        $$in = $108;
       }
      }
      break;
     }
     case 0:  {
      $118 = ($$5|0)==(48);
      do {
       if ($118) {
        $119 = HEAP32[$4>>2]|0;
        $120 = HEAP32[$5>>2]|0;
        $121 = ($119>>>0)<($120>>>0);
        if ($121) {
         $122 = ((($119)) + 1|0);
         HEAP32[$4>>2] = $122;
         $123 = HEAP8[$119>>0]|0;
         $124 = $123&255;
         $127 = $124;
        } else {
         $125 = (___shgetc($0)|0);
         $127 = $125;
        }
        $126 = $127 | 32;
        $128 = ($126|0)==(120);
        if (!($128)) {
         $329 = HEAP32[$5>>2]|0;
         $330 = ($329|0)==(0|0);
         if ($330) {
          $$6 = 48;
          break;
         }
         $331 = HEAP32[$4>>2]|0;
         $332 = ((($331)) + -1|0);
         HEAP32[$4>>2] = $332;
         $$6 = 48;
         break;
        }
        $129 = HEAP32[$4>>2]|0;
        $130 = HEAP32[$5>>2]|0;
        $131 = ($129>>>0)<($130>>>0);
        if ($131) {
         $132 = ((($129)) + 1|0);
         HEAP32[$4>>2] = $132;
         $133 = HEAP8[$129>>0]|0;
         $134 = $133&255;
         $$0$i = $134;$$0142$i = 0;
        } else {
         $135 = (___shgetc($0)|0);
         $$0$i = $135;$$0142$i = 0;
        }
        L94: while(1) {
         switch ($$0$i|0) {
         case 46:  {
          label = 74;
          break L94;
          break;
         }
         case 48:  {
          break;
         }
         default: {
          $$0146$i = 0;$$0148$i = 0;$$0152$i = 1.0;$$0155$i = 0.0;$$0159$i = 0;$$2$i = $$0$i;$$2144$i = $$0142$i;$172 = 0;$174 = 0;$216 = 0;$218 = 0;
          break L94;
         }
         }
         $136 = HEAP32[$4>>2]|0;
         $137 = HEAP32[$5>>2]|0;
         $138 = ($136>>>0)<($137>>>0);
         if ($138) {
          $139 = ((($136)) + 1|0);
          HEAP32[$4>>2] = $139;
          $140 = HEAP8[$136>>0]|0;
          $141 = $140&255;
          $$0$i = $141;$$0142$i = 1;
          continue;
         } else {
          $142 = (___shgetc($0)|0);
          $$0$i = $142;$$0142$i = 1;
          continue;
         }
        }
        if ((label|0) == 74) {
         $143 = HEAP32[$4>>2]|0;
         $144 = HEAP32[$5>>2]|0;
         $145 = ($143>>>0)<($144>>>0);
         if ($145) {
          $146 = ((($143)) + 1|0);
          HEAP32[$4>>2] = $146;
          $147 = HEAP8[$143>>0]|0;
          $148 = $147&255;
          $$1$ph$i = $148;
         } else {
          $149 = (___shgetc($0)|0);
          $$1$ph$i = $149;
         }
         $150 = ($$1$ph$i|0)==(48);
         if ($150) {
          $158 = 0;$159 = 0;
          while(1) {
           $151 = HEAP32[$4>>2]|0;
           $152 = HEAP32[$5>>2]|0;
           $153 = ($151>>>0)<($152>>>0);
           if ($153) {
            $154 = ((($151)) + 1|0);
            HEAP32[$4>>2] = $154;
            $155 = HEAP8[$151>>0]|0;
            $156 = $155&255;
            $162 = $156;
           } else {
            $157 = (___shgetc($0)|0);
            $162 = $157;
           }
           $160 = (_i64Add(($158|0),($159|0),-1,-1)|0);
           $161 = tempRet0;
           $163 = ($162|0)==(48);
           if ($163) {
            $158 = $160;$159 = $161;
           } else {
            $$0146$i = 1;$$0148$i = 0;$$0152$i = 1.0;$$0155$i = 0.0;$$0159$i = 0;$$2$i = $162;$$2144$i = 1;$172 = 0;$174 = 0;$216 = $160;$218 = $161;
            break;
           }
          }
         } else {
          $$0146$i = 1;$$0148$i = 0;$$0152$i = 1.0;$$0155$i = 0.0;$$0159$i = 0;$$2$i = $$1$ph$i;$$2144$i = $$0142$i;$172 = 0;$174 = 0;$216 = 0;$218 = 0;
         }
        }
        while(1) {
         $164 = (($$2$i) + -48)|0;
         $165 = ($164>>>0)<(10);
         $$pre$i = $$2$i | 32;
         if ($165) {
          label = 86;
         } else {
          $166 = (($$pre$i) + -97)|0;
          $167 = ($166>>>0)<(6);
          $168 = ($$2$i|0)==(46);
          $or$cond6$i = $168 | $167;
          if (!($or$cond6$i)) {
           $$2$lcssa$i = $$2$i;
           break;
          }
          if ($168) {
           $169 = ($$0146$i|0)==(0);
           if ($169) {
            $$1147$i = 1;$$2150$i = $$0148$i;$$2154$i = $$0152$i;$$2157$i = $$0155$i;$$2161$i = $$0159$i;$$3145$i = $$2144$i;$693 = $174;$694 = $172;$695 = $174;$696 = $172;
           } else {
            $$2$lcssa$i = 46;
            break;
           }
          } else {
           label = 86;
          }
         }
         if ((label|0) == 86) {
          label = 0;
          $170 = ($$2$i|0)>(57);
          $171 = (($$pre$i) + -87)|0;
          $$0133$i = $170 ? $171 : $164;
          $173 = ($172|0)<(0);
          $175 = ($174>>>0)<(8);
          $176 = ($172|0)==(0);
          $177 = $176 & $175;
          $178 = $173 | $177;
          do {
           if ($178) {
            $179 = $$0159$i << 4;
            $180 = (($$0133$i) + ($179))|0;
            $$1149$i = $$0148$i;$$1153$i = $$0152$i;$$1156$i = $$0155$i;$$1160$i = $180;
           } else {
            $181 = ($172|0)<(0);
            $182 = ($174>>>0)<(14);
            $183 = ($172|0)==(0);
            $184 = $183 & $182;
            $185 = $181 | $184;
            if ($185) {
             $186 = (+($$0133$i|0));
             $187 = $$0152$i * 0.0625;
             $188 = $187 * $186;
             $189 = $$0155$i + $188;
             $$1149$i = $$0148$i;$$1153$i = $187;$$1156$i = $189;$$1160$i = $$0159$i;
             break;
            }
            $190 = ($$0133$i|0)==(0);
            $191 = ($$0148$i|0)!=(0);
            $or$cond$i = $191 | $190;
            if ($or$cond$i) {
             $$1149$i = $$0148$i;$$1153$i = $$0152$i;$$1156$i = $$0155$i;$$1160$i = $$0159$i;
            } else {
             $192 = $$0152$i * 0.5;
             $193 = $$0155$i + $192;
             $$1149$i = 1;$$1153$i = $$0152$i;$$1156$i = $193;$$1160$i = $$0159$i;
            }
           }
          } while(0);
          $194 = (_i64Add(($174|0),($172|0),1,0)|0);
          $195 = tempRet0;
          $$1147$i = $$0146$i;$$2150$i = $$1149$i;$$2154$i = $$1153$i;$$2157$i = $$1156$i;$$2161$i = $$1160$i;$$3145$i = 1;$693 = $216;$694 = $218;$695 = $194;$696 = $195;
         }
         $196 = HEAP32[$4>>2]|0;
         $197 = HEAP32[$5>>2]|0;
         $198 = ($196>>>0)<($197>>>0);
         if ($198) {
          $199 = ((($196)) + 1|0);
          HEAP32[$4>>2] = $199;
          $200 = HEAP8[$196>>0]|0;
          $201 = $200&255;
          $$0146$i = $$1147$i;$$0148$i = $$2150$i;$$0152$i = $$2154$i;$$0155$i = $$2157$i;$$0159$i = $$2161$i;$$2$i = $201;$$2144$i = $$3145$i;$172 = $696;$174 = $695;$216 = $693;$218 = $694;
          continue;
         } else {
          $202 = (___shgetc($0)|0);
          $$0146$i = $$1147$i;$$0148$i = $$2150$i;$$0152$i = $$2154$i;$$0155$i = $$2157$i;$$0159$i = $$2161$i;$$2$i = $202;$$2144$i = $$3145$i;$172 = $696;$174 = $695;$216 = $693;$218 = $694;
          continue;
         }
        }
        $203 = ($$2144$i|0)==(0);
        if ($203) {
         $204 = HEAP32[$5>>2]|0;
         $205 = ($204|0)==(0|0);
         if (!($205)) {
          $206 = HEAP32[$4>>2]|0;
          $207 = ((($206)) + -1|0);
          HEAP32[$4>>2] = $207;
         }
         $208 = ($2|0)==(0);
         if ($208) {
          ___shlim($0,0);
         } else {
          if (!($205)) {
           $209 = HEAP32[$4>>2]|0;
           $210 = ((($209)) + -1|0);
           HEAP32[$4>>2] = $210;
           $211 = ($$0146$i|0)==(0);
           if (!($211)) {
            $212 = ((($209)) + -2|0);
            HEAP32[$4>>2] = $212;
           }
          }
         }
         $213 = (+($$0113|0));
         $214 = $213 * 0.0;
         $$0114 = $214;
         break L4;
        }
        $215 = ($$0146$i|0)==(0);
        $217 = $215 ? $174 : $216;
        $219 = $215 ? $172 : $218;
        $220 = ($172|0)<(0);
        $221 = ($174>>>0)<(8);
        $222 = ($172|0)==(0);
        $223 = $222 & $221;
        $224 = $220 | $223;
        if ($224) {
         $$3162183$i = $$0159$i;$226 = $174;$227 = $172;
         while(1) {
          $225 = $$3162183$i << 4;
          $228 = (_i64Add(($226|0),($227|0),1,0)|0);
          $229 = tempRet0;
          $230 = ($229|0)<(0);
          $231 = ($228>>>0)<(8);
          $232 = ($229|0)==(0);
          $233 = $232 & $231;
          $234 = $230 | $233;
          if ($234) {
           $$3162183$i = $225;$226 = $228;$227 = $229;
          } else {
           $$3162$lcssa$i = $225;
           break;
          }
         }
        } else {
         $$3162$lcssa$i = $$0159$i;
        }
        $235 = $$2$lcssa$i | 32;
        $236 = ($235|0)==(112);
        if ($236) {
         $237 = (_scanexp($0,$2)|0);
         $238 = tempRet0;
         $239 = ($237|0)==(0);
         $240 = ($238|0)==(-2147483648);
         $241 = $239 & $240;
         if ($241) {
          $242 = ($2|0)==(0);
          if ($242) {
           ___shlim($0,0);
           $$0114 = 0.0;
           break L4;
          }
          $243 = HEAP32[$5>>2]|0;
          $244 = ($243|0)==(0|0);
          if ($244) {
           $255 = 0;$256 = 0;
          } else {
           $245 = HEAP32[$4>>2]|0;
           $246 = ((($245)) + -1|0);
           HEAP32[$4>>2] = $246;
           $255 = 0;$256 = 0;
          }
         } else {
          $255 = $237;$256 = $238;
         }
        } else {
         $247 = HEAP32[$5>>2]|0;
         $248 = ($247|0)==(0|0);
         if ($248) {
          $255 = 0;$256 = 0;
         } else {
          $249 = HEAP32[$4>>2]|0;
          $250 = ((($249)) + -1|0);
          HEAP32[$4>>2] = $250;
          $255 = 0;$256 = 0;
         }
        }
        $251 = (_bitshift64Shl(($217|0),($219|0),2)|0);
        $252 = tempRet0;
        $253 = (_i64Add(($251|0),($252|0),-32,-1)|0);
        $254 = tempRet0;
        $257 = (_i64Add(($253|0),($254|0),($255|0),($256|0))|0);
        $258 = tempRet0;
        $259 = ($$3162$lcssa$i|0)==(0);
        if ($259) {
         $260 = (+($$0113|0));
         $261 = $260 * 0.0;
         $$0114 = $261;
         break L4;
        }
        $262 = (0 - ($$0105$ph))|0;
        $263 = ($258|0)>(0);
        $264 = ($257>>>0)>($262>>>0);
        $265 = ($258|0)==(0);
        $266 = $265 & $264;
        $267 = $263 | $266;
        if ($267) {
         $268 = (___errno_location()|0);
         HEAP32[$268>>2] = 34;
         $269 = (+($$0113|0));
         $270 = $269 * 1.7976931348623157E+308;
         $271 = $270 * 1.7976931348623157E+308;
         $$0114 = $271;
         break L4;
        }
        $272 = (($$0105$ph) + -106)|0;
        $273 = ($272|0)<(0);
        $274 = $273 << 31 >> 31;
        $275 = ($258|0)<($274|0);
        $276 = ($257>>>0)<($272>>>0);
        $277 = ($258|0)==($274|0);
        $278 = $277 & $276;
        $279 = $275 | $278;
        if ($279) {
         $281 = (___errno_location()|0);
         HEAP32[$281>>2] = 34;
         $282 = (+($$0113|0));
         $283 = $282 * 2.2250738585072014E-308;
         $284 = $283 * 2.2250738585072014E-308;
         $$0114 = $284;
         break L4;
        }
        $280 = ($$3162$lcssa$i|0)>(-1);
        if ($280) {
         $$3158179$i = $$0155$i;$$4163178$i = $$3162$lcssa$i;$290 = $257;$291 = $258;
         while(1) {
          $285 = !($$3158179$i >= 0.5);
          $286 = $$4163178$i << 1;
          $287 = $$3158179$i + -1.0;
          $288 = $285&1;
          $289 = $288 | $286;
          $$5164$i = $289 ^ 1;
          $$pn$i = $285 ? $$3158179$i : $287;
          $$4$i = $$3158179$i + $$pn$i;
          $292 = (_i64Add(($290|0),($291|0),-1,-1)|0);
          $293 = tempRet0;
          $294 = ($289|0)>(-1);
          if ($294) {
           $$3158179$i = $$4$i;$$4163178$i = $$5164$i;$290 = $292;$291 = $293;
          } else {
           $$3158$lcssa$i = $$4$i;$$4163$lcssa$i = $$5164$i;$299 = $292;$300 = $293;
           break;
          }
         }
        } else {
         $$3158$lcssa$i = $$0155$i;$$4163$lcssa$i = $$3162$lcssa$i;$299 = $257;$300 = $258;
        }
        $295 = ($$0105$ph|0)<(0);
        $296 = $295 << 31 >> 31;
        $297 = (_i64Subtract(32,0,($$0105$ph|0),($296|0))|0);
        $298 = tempRet0;
        $301 = (_i64Add(($299|0),($300|0),($297|0),($298|0))|0);
        $302 = tempRet0;
        $303 = (0)>($302|0);
        $304 = ($$0106$ph>>>0)>($301>>>0);
        $305 = (0)==($302|0);
        $306 = $305 & $304;
        $307 = $303 | $306;
        if ($307) {
         $308 = ($301|0)<(0);
         if ($308) {
          $$0166170$i = 0;$311 = 84;
          label = 127;
         } else {
          $$0166$i = $301;
          label = 125;
         }
        } else {
         $$0166$i = $$0106$ph;
         label = 125;
        }
        if ((label|0) == 125) {
         $309 = ($$0166$i|0)<(53);
         $310 = (84 - ($$0166$i))|0;
         if ($309) {
          $$0166170$i = $$0166$i;$311 = $310;
          label = 127;
         } else {
          $$pre201$i = (+($$0113|0));
          $$0151$i = 0.0;$$0166169$i = $$0166$i;$$pre$phi202$iZ2D = $$pre201$i;
         }
        }
        if ((label|0) == 127) {
         $312 = (+_scalbn(1.0,$311));
         $313 = (+($$0113|0));
         $314 = (+_copysignl($312,$313));
         $$0151$i = $314;$$0166169$i = $$0166170$i;$$pre$phi202$iZ2D = $313;
        }
        $315 = ($$0166169$i|0)<(32);
        $316 = $$3158$lcssa$i != 0.0;
        $or$cond4$i = $316 & $315;
        $317 = $$4163$lcssa$i & 1;
        $318 = ($317|0)==(0);
        $or$cond168$i = $318 & $or$cond4$i;
        $319 = $or$cond168$i&1;
        $$6$i = (($319) + ($$4163$lcssa$i))|0;
        $$5$i = $or$cond168$i ? 0.0 : $$3158$lcssa$i;
        $320 = (+($$6$i>>>0));
        $321 = $$pre$phi202$iZ2D * $320;
        $322 = $$0151$i + $321;
        $323 = $$pre$phi202$iZ2D * $$5$i;
        $324 = $323 + $322;
        $325 = $324 - $$0151$i;
        $326 = $325 != 0.0;
        if (!($326)) {
         $327 = (___errno_location()|0);
         HEAP32[$327>>2] = 34;
        }
        $328 = (+_scalbnl($325,$299));
        $$0114 = $328;
        break L4;
       } else {
        $$6 = $$5;
       }
      } while(0);
      $sum$i = (($$0105$ph) + ($$0106$ph))|0;
      $333 = (0 - ($sum$i))|0;
      $$0324$i = $$6;$$0391$i = 0;
      L184: while(1) {
       switch ($$0324$i|0) {
       case 46:  {
        label = 138;
        break L184;
        break;
       }
       case 48:  {
        break;
       }
       default: {
        $$0388$i = 0;$$2$i117 = $$0324$i;$$2393$i = $$0391$i;$697 = 0;$698 = 0;
        break L184;
       }
       }
       $334 = HEAP32[$4>>2]|0;
       $335 = HEAP32[$5>>2]|0;
       $336 = ($334>>>0)<($335>>>0);
       if ($336) {
        $337 = ((($334)) + 1|0);
        HEAP32[$4>>2] = $337;
        $338 = HEAP8[$334>>0]|0;
        $339 = $338&255;
        $$0324$i = $339;$$0391$i = 1;
        continue;
       } else {
        $340 = (___shgetc($0)|0);
        $$0324$i = $340;$$0391$i = 1;
        continue;
       }
      }
      if ((label|0) == 138) {
       $341 = HEAP32[$4>>2]|0;
       $342 = HEAP32[$5>>2]|0;
       $343 = ($341>>>0)<($342>>>0);
       if ($343) {
        $344 = ((($341)) + 1|0);
        HEAP32[$4>>2] = $344;
        $345 = HEAP8[$341>>0]|0;
        $346 = $345&255;
        $$1325$ph$i = $346;
       } else {
        $347 = (___shgetc($0)|0);
        $$1325$ph$i = $347;
       }
       $348 = ($$1325$ph$i|0)==(48);
       if ($348) {
        $349 = 0;$350 = 0;
        while(1) {
         $351 = (_i64Add(($349|0),($350|0),-1,-1)|0);
         $352 = tempRet0;
         $353 = HEAP32[$4>>2]|0;
         $354 = HEAP32[$5>>2]|0;
         $355 = ($353>>>0)<($354>>>0);
         if ($355) {
          $356 = ((($353)) + 1|0);
          HEAP32[$4>>2] = $356;
          $357 = HEAP8[$353>>0]|0;
          $358 = $357&255;
          $$1325$be$i = $358;
         } else {
          $359 = (___shgetc($0)|0);
          $$1325$be$i = $359;
         }
         $360 = ($$1325$be$i|0)==(48);
         if ($360) {
          $349 = $351;$350 = $352;
         } else {
          $$0388$i = 1;$$2$i117 = $$1325$be$i;$$2393$i = 1;$697 = $351;$698 = $352;
          break;
         }
        }
       } else {
        $$0388$i = 1;$$2$i117 = $$1325$ph$i;$$2393$i = $$0391$i;$697 = 0;$698 = 0;
       }
      }
      HEAP32[$3>>2] = 0;
      $361 = (($$2$i117) + -48)|0;
      $362 = ($361>>>0)<(10);
      $363 = ($$2$i117|0)==(46);
      $364 = $363 | $362;
      L203: do {
       if ($364) {
        $365 = ((($3)) + 496|0);
        $$0336503$i = 0;$$0340502$i = 0;$$0396499$i = 0;$$1389501$i = $$0388$i;$$3394500$i = $$2393$i;$$3504$i = $$2$i117;$368 = 0;$369 = 0;$699 = $363;$700 = $361;$701 = $697;$702 = $698;
        L205: while(1) {
         do {
          if ($699) {
           $cond$i = ($$1389501$i|0)==(0);
           if ($cond$i) {
            $$2338$i = $$0336503$i;$$2342$i = $$0340502$i;$$2390$i = 1;$$2398$i = $$0396499$i;$$4395$i = $$3394500$i;$703 = $368;$704 = $369;$705 = $368;$706 = $369;
           } else {
            break L205;
           }
          } else {
           $367 = ($$0340502$i|0)<(125);
           $370 = (_i64Add(($368|0),($369|0),1,0)|0);
           $371 = tempRet0;
           $372 = ($$3504$i|0)!=(48);
           if (!($367)) {
            if (!($372)) {
             $$2338$i = $$0336503$i;$$2342$i = $$0340502$i;$$2390$i = $$1389501$i;$$2398$i = $$0396499$i;$$4395$i = $$3394500$i;$703 = $701;$704 = $702;$705 = $370;$706 = $371;
             break;
            }
            $382 = HEAP32[$365>>2]|0;
            $383 = $382 | 1;
            HEAP32[$365>>2] = $383;
            $$2338$i = $$0336503$i;$$2342$i = $$0340502$i;$$2390$i = $$1389501$i;$$2398$i = $$0396499$i;$$4395$i = $$3394500$i;$703 = $701;$704 = $702;$705 = $370;$706 = $371;
            break;
           }
           $$$0396$i = $372 ? $370 : $$0396499$i;
           $373 = ($$0336503$i|0)==(0);
           $374 = (($3) + ($$0340502$i<<2)|0);
           if ($373) {
            $storemerge$i = $700;
           } else {
            $375 = (($$3504$i) + -48)|0;
            $376 = HEAP32[$374>>2]|0;
            $377 = ($376*10)|0;
            $378 = (($375) + ($377))|0;
            $storemerge$i = $378;
           }
           HEAP32[$374>>2] = $storemerge$i;
           $379 = (($$0336503$i) + 1)|0;
           $380 = ($379|0)==(9);
           $381 = $380&1;
           $$$0340$i = (($381) + ($$0340502$i))|0;
           $$408$i = $380 ? 0 : $379;
           $$2338$i = $$408$i;$$2342$i = $$$0340$i;$$2390$i = $$1389501$i;$$2398$i = $$$0396$i;$$4395$i = 1;$703 = $701;$704 = $702;$705 = $370;$706 = $371;
          }
         } while(0);
         $384 = HEAP32[$4>>2]|0;
         $385 = HEAP32[$5>>2]|0;
         $386 = ($384>>>0)<($385>>>0);
         if ($386) {
          $387 = ((($384)) + 1|0);
          HEAP32[$4>>2] = $387;
          $388 = HEAP8[$384>>0]|0;
          $389 = $388&255;
          $$3$be$i = $389;
         } else {
          $390 = (___shgetc($0)|0);
          $$3$be$i = $390;
         }
         $391 = (($$3$be$i) + -48)|0;
         $392 = ($391>>>0)<(10);
         $393 = ($$3$be$i|0)==(46);
         $394 = $393 | $392;
         if ($394) {
          $$0336503$i = $$2338$i;$$0340502$i = $$2342$i;$$0396499$i = $$2398$i;$$1389501$i = $$2390$i;$$3394500$i = $$4395$i;$$3504$i = $$3$be$i;$368 = $705;$369 = $706;$699 = $393;$700 = $391;$701 = $703;$702 = $704;
         } else {
          $$0336$lcssa$i = $$2338$i;$$0340$lcssa$i = $$2342$i;$$0396$lcssa$i = $$2398$i;$$1389$lcssa$i = $$2390$i;$$3$lcssa$i = $$3$be$i;$$3394$lcssa$i = $$4395$i;$396 = $703;$397 = $705;$399 = $704;$400 = $706;
          label = 161;
          break L203;
         }
        }
        $366 = ($$3394500$i|0)!=(0);
        $$0336455$i = $$0336503$i;$$0340459$i = $$0340502$i;$$0396465$i = $$0396499$i;$707 = $368;$708 = $369;$709 = $701;$710 = $702;$711 = $366;
        label = 169;
       } else {
        $$0336$lcssa$i = 0;$$0340$lcssa$i = 0;$$0396$lcssa$i = 0;$$1389$lcssa$i = $$0388$i;$$3$lcssa$i = $$2$i117;$$3394$lcssa$i = $$2393$i;$396 = $697;$397 = 0;$399 = $698;$400 = 0;
        label = 161;
       }
      } while(0);
      do {
       if ((label|0) == 161) {
        $395 = ($$1389$lcssa$i|0)==(0);
        $398 = $395 ? $397 : $396;
        $401 = $395 ? $400 : $399;
        $402 = ($$3394$lcssa$i|0)!=(0);
        $403 = $$3$lcssa$i | 32;
        $404 = ($403|0)==(101);
        $or$cond410$i = $402 & $404;
        if (!($or$cond410$i)) {
         $419 = ($$3$lcssa$i|0)>(-1);
         if ($419) {
          $$0336455$i = $$0336$lcssa$i;$$0340459$i = $$0340$lcssa$i;$$0396465$i = $$0396$lcssa$i;$707 = $397;$708 = $400;$709 = $398;$710 = $401;$711 = $402;
          label = 169;
          break;
         } else {
          $$0336454$i = $$0336$lcssa$i;$$0340458$i = $$0340$lcssa$i;$$0396464$i = $$0396$lcssa$i;$712 = $397;$713 = $400;$714 = $402;$715 = $398;$716 = $401;
          label = 171;
          break;
         }
        }
        $405 = (_scanexp($0,$2)|0);
        $406 = tempRet0;
        $407 = ($405|0)==(0);
        $408 = ($406|0)==(-2147483648);
        $409 = $407 & $408;
        if ($409) {
         $410 = ($2|0)==(0);
         if ($410) {
          ___shlim($0,0);
          $$1$i = 0.0;
          break;
         }
         $411 = HEAP32[$5>>2]|0;
         $412 = ($411|0)==(0|0);
         if ($412) {
          $415 = 0;$416 = 0;
         } else {
          $413 = HEAP32[$4>>2]|0;
          $414 = ((($413)) + -1|0);
          HEAP32[$4>>2] = $414;
          $415 = 0;$416 = 0;
         }
        } else {
         $415 = $405;$416 = $406;
        }
        $417 = (_i64Add(($415|0),($416|0),($398|0),($401|0))|0);
        $418 = tempRet0;
        $$0336453$i = $$0336$lcssa$i;$$0340457$i = $$0340$lcssa$i;$$0396463$i = $$0396$lcssa$i;$429 = $417;$431 = $397;$432 = $418;$434 = $400;
        label = 173;
       }
      } while(0);
      if ((label|0) == 169) {
       $420 = HEAP32[$5>>2]|0;
       $421 = ($420|0)==(0|0);
       if ($421) {
        $$0336454$i = $$0336455$i;$$0340458$i = $$0340459$i;$$0396464$i = $$0396465$i;$712 = $707;$713 = $708;$714 = $711;$715 = $709;$716 = $710;
        label = 171;
       } else {
        $422 = HEAP32[$4>>2]|0;
        $423 = ((($422)) + -1|0);
        HEAP32[$4>>2] = $423;
        if ($711) {
         $$0336453$i = $$0336455$i;$$0340457$i = $$0340459$i;$$0396463$i = $$0396465$i;$429 = $709;$431 = $707;$432 = $710;$434 = $708;
         label = 173;
        } else {
         label = 172;
        }
       }
      }
      if ((label|0) == 171) {
       if ($714) {
        $$0336453$i = $$0336454$i;$$0340457$i = $$0340458$i;$$0396463$i = $$0396464$i;$429 = $715;$431 = $712;$432 = $716;$434 = $713;
        label = 173;
       } else {
        label = 172;
       }
      }
      do {
       if ((label|0) == 172) {
        $424 = (___errno_location()|0);
        HEAP32[$424>>2] = 22;
        ___shlim($0,0);
        $$1$i = 0.0;
       }
       else if ((label|0) == 173) {
        $425 = HEAP32[$3>>2]|0;
        $426 = ($425|0)==(0);
        if ($426) {
         $427 = (+($$0113|0));
         $428 = $427 * 0.0;
         $$1$i = $428;
         break;
        }
        $430 = ($429|0)==($431|0);
        $433 = ($432|0)==($434|0);
        $435 = $430 & $433;
        $436 = ($434|0)<(0);
        $437 = ($431>>>0)<(10);
        $438 = ($434|0)==(0);
        $439 = $438 & $437;
        $440 = $436 | $439;
        $or$cond$i118 = $440 & $435;
        if ($or$cond$i118) {
         $441 = ($$0106$ph>>>0)>(30);
         $442 = $425 >>> $$0106$ph;
         $443 = ($442|0)==(0);
         $or$cond412$i = $441 | $443;
         if ($or$cond412$i) {
          $444 = (+($$0113|0));
          $445 = (+($425>>>0));
          $446 = $444 * $445;
          $$1$i = $446;
          break;
         }
        }
        $447 = (($$0105$ph|0) / -2)&-1;
        $448 = ($447|0)<(0);
        $449 = $448 << 31 >> 31;
        $450 = ($432|0)>($449|0);
        $451 = ($429>>>0)>($447>>>0);
        $452 = ($432|0)==($449|0);
        $453 = $452 & $451;
        $454 = $450 | $453;
        if ($454) {
         $455 = (___errno_location()|0);
         HEAP32[$455>>2] = 34;
         $456 = (+($$0113|0));
         $457 = $456 * 1.7976931348623157E+308;
         $458 = $457 * 1.7976931348623157E+308;
         $$1$i = $458;
         break;
        }
        $459 = (($$0105$ph) + -106)|0;
        $460 = ($459|0)<(0);
        $461 = $460 << 31 >> 31;
        $462 = ($432|0)<($461|0);
        $463 = ($429>>>0)<($459>>>0);
        $464 = ($432|0)==($461|0);
        $465 = $464 & $463;
        $466 = $462 | $465;
        if ($466) {
         $467 = (___errno_location()|0);
         HEAP32[$467>>2] = 34;
         $468 = (+($$0113|0));
         $469 = $468 * 2.2250738585072014E-308;
         $470 = $469 * 2.2250738585072014E-308;
         $$1$i = $470;
         break;
        }
        $471 = ($$0336453$i|0)==(0);
        if ($471) {
         $$3343$i = $$0340457$i;
        } else {
         $472 = ($$0336453$i|0)<(9);
         if ($472) {
          $473 = (($3) + ($$0340457$i<<2)|0);
          $$promoted$i = HEAP32[$473>>2]|0;
          $$3339493$i = $$0336453$i;$475 = $$promoted$i;
          while(1) {
           $474 = ($475*10)|0;
           $476 = (($$3339493$i) + 1)|0;
           $exitcond541$i = ($476|0)==(9);
           if ($exitcond541$i) {
            break;
           } else {
            $$3339493$i = $476;$475 = $474;
           }
          }
          HEAP32[$473>>2] = $474;
         }
         $477 = (($$0340457$i) + 1)|0;
         $$3343$i = $477;
        }
        $478 = ($$0396463$i|0)<(9);
        if ($478) {
         $479 = ($$0396463$i|0)<=($429|0);
         $480 = ($429|0)<(18);
         $or$cond3$i = $479 & $480;
         if ($or$cond3$i) {
          $481 = ($429|0)==(9);
          if ($481) {
           $482 = (+($$0113|0));
           $483 = HEAP32[$3>>2]|0;
           $484 = (+($483>>>0));
           $485 = $482 * $484;
           $$1$i = $485;
           break;
          }
          $486 = ($429|0)<(9);
          if ($486) {
           $487 = (+($$0113|0));
           $488 = HEAP32[$3>>2]|0;
           $489 = (+($488>>>0));
           $490 = $487 * $489;
           $491 = (8 - ($429))|0;
           $492 = (1496 + ($491<<2)|0);
           $493 = HEAP32[$492>>2]|0;
           $494 = (+($493|0));
           $495 = $490 / $494;
           $$1$i = $495;
           break;
          }
          $$neg432$i = Math_imul($429, -3)|0;
          $$neg433$i = (($$0106$ph) + 27)|0;
          $496 = (($$neg433$i) + ($$neg432$i))|0;
          $497 = ($496|0)>(30);
          $$pre$i119 = HEAP32[$3>>2]|0;
          $498 = $$pre$i119 >>> $496;
          $499 = ($498|0)==(0);
          $or$cond571$i = $497 | $499;
          if ($or$cond571$i) {
           $500 = (+($$0113|0));
           $501 = (+($$pre$i119>>>0));
           $502 = $500 * $501;
           $503 = (($429) + -10)|0;
           $504 = (1496 + ($503<<2)|0);
           $505 = HEAP32[$504>>2]|0;
           $506 = (+($505|0));
           $507 = $502 * $506;
           $$1$i = $507;
           break;
          }
         }
        }
        $508 = (($429|0) % 9)&-1;
        $509 = ($508|0)==(0);
        if ($509) {
         $$0375$ph$i = 0;$$1368$ph438$i = $$3343$i;$$2347$ph439$i = 0;$$2382$ph437$i = $429;
        } else {
         $510 = ($429|0)>(-1);
         $511 = (($508) + 9)|0;
         $512 = $510 ? $508 : $511;
         $513 = (8 - ($512))|0;
         $514 = (1496 + ($513<<2)|0);
         $515 = HEAP32[$514>>2]|0;
         $516 = ($$3343$i|0)==(0);
         if ($516) {
          $$0345$lcssa545$i = 0;$$0367$i = 0;$$0380$lcssa544$i = $429;
         } else {
          $517 = (1000000000 / ($515|0))&-1;
          $$0335486$i = 0;$$0345484$i = 0;$$0380483$i = $429;$$4344485$i = 0;
          while(1) {
           $518 = (($3) + ($$4344485$i<<2)|0);
           $519 = HEAP32[$518>>2]|0;
           $520 = (($519>>>0) % ($515>>>0))&-1;
           $521 = (($519>>>0) / ($515>>>0))&-1;
           $522 = (($521) + ($$0335486$i))|0;
           HEAP32[$518>>2] = $522;
           $523 = Math_imul($520, $517)|0;
           $524 = ($$4344485$i|0)==($$0345484$i|0);
           $525 = ($522|0)==(0);
           $or$cond413$i = $524 & $525;
           $526 = (($$0345484$i) + 1)|0;
           $527 = $526 & 127;
           $528 = (($$0380483$i) + -9)|0;
           $$$0380$i = $or$cond413$i ? $528 : $$0380483$i;
           $$$0345$i = $or$cond413$i ? $527 : $$0345484$i;
           $529 = (($$4344485$i) + 1)|0;
           $530 = ($529|0)==($$3343$i|0);
           if ($530) {
            break;
           } else {
            $$0335486$i = $523;$$0345484$i = $$$0345$i;$$0380483$i = $$$0380$i;$$4344485$i = $529;
           }
          }
          $531 = ($523|0)==(0);
          if ($531) {
           $$0345$lcssa545$i = $$$0345$i;$$0367$i = $$3343$i;$$0380$lcssa544$i = $$$0380$i;
          } else {
           $532 = (($$3343$i) + 1)|0;
           $533 = (($3) + ($$3343$i<<2)|0);
           HEAP32[$533>>2] = $523;
           $$0345$lcssa545$i = $$$0345$i;$$0367$i = $532;$$0380$lcssa544$i = $$$0380$i;
          }
         }
         $534 = (9 - ($512))|0;
         $535 = (($534) + ($$0380$lcssa544$i))|0;
         $$0375$ph$i = 0;$$1368$ph438$i = $$0367$i;$$2347$ph439$i = $$0345$lcssa545$i;$$2382$ph437$i = $535;
        }
        L284: while(1) {
         $536 = ($$2382$ph437$i|0)<(18);
         $537 = ($$2382$ph437$i|0)==(18);
         $538 = (($3) + ($$2347$ph439$i<<2)|0);
         $$0375$i = $$0375$ph$i;$$1368$i = $$1368$ph438$i;
         while(1) {
          if (!($536)) {
           if (!($537)) {
            $$1376$ph$i = $$0375$i;$$4349$ph$i = $$2347$ph439$i;$$4384$ph435$i = $$2382$ph437$i;$$6373$ph$i = $$1368$i;
            break L284;
           }
           $539 = HEAP32[$538>>2]|0;
           $540 = ($539>>>0)<(9007199);
           if (!($540)) {
            $$1376$ph$i = $$0375$i;$$4349$ph$i = $$2347$ph439$i;$$4384$ph435$i = 18;$$6373$ph$i = $$1368$i;
            break L284;
           }
          }
          $541 = (($$1368$i) + 127)|0;
          $$0329$i = 0;$$2369$i = $$1368$i;$$5$in$i = $541;
          while(1) {
           $$5$i121 = $$5$in$i & 127;
           $542 = (($3) + ($$5$i121<<2)|0);
           $543 = HEAP32[$542>>2]|0;
           $544 = (_bitshift64Shl(($543|0),0,29)|0);
           $545 = tempRet0;
           $546 = (_i64Add(($544|0),($545|0),($$0329$i|0),0)|0);
           $547 = tempRet0;
           $548 = ($547>>>0)>(0);
           $549 = ($546>>>0)>(1000000000);
           $550 = ($547|0)==(0);
           $551 = $550 & $549;
           $552 = $548 | $551;
           if ($552) {
            $553 = (___udivdi3(($546|0),($547|0),1000000000,0)|0);
            $554 = tempRet0;
            $555 = (___uremdi3(($546|0),($547|0),1000000000,0)|0);
            $556 = tempRet0;
            $$1330$i = $553;$$sink$off0$i = $555;
           } else {
            $$1330$i = 0;$$sink$off0$i = $546;
           }
           HEAP32[$542>>2] = $$sink$off0$i;
           $557 = (($$2369$i) + 127)|0;
           $558 = $557 & 127;
           $559 = ($$5$i121|0)!=($558|0);
           $560 = ($$5$i121|0)==($$2347$ph439$i|0);
           $or$cond414$i = $559 | $560;
           $561 = ($$sink$off0$i|0)==(0);
           $$5$$2369$i = $561 ? $$5$i121 : $$2369$i;
           $$3370$i = $or$cond414$i ? $$2369$i : $$5$$2369$i;
           $562 = (($$5$i121) + -1)|0;
           if ($560) {
            break;
           } else {
            $$0329$i = $$1330$i;$$2369$i = $$3370$i;$$5$in$i = $562;
           }
          }
          $563 = (($$0375$i) + -29)|0;
          $564 = ($$1330$i|0)==(0);
          if ($564) {
           $$0375$i = $563;$$1368$i = $$3370$i;
          } else {
           break;
          }
         }
         $565 = (($$2382$ph437$i) + 9)|0;
         $566 = (($$2347$ph439$i) + 127)|0;
         $567 = $566 & 127;
         $568 = ($567|0)==($$3370$i|0);
         $569 = (($$3370$i) + 127)|0;
         $570 = $569 & 127;
         $571 = (($$3370$i) + 126)|0;
         $572 = $571 & 127;
         $573 = (($3) + ($572<<2)|0);
         if ($568) {
          $574 = (($3) + ($570<<2)|0);
          $575 = HEAP32[$574>>2]|0;
          $576 = HEAP32[$573>>2]|0;
          $577 = $576 | $575;
          HEAP32[$573>>2] = $577;
          $$4371$i = $570;
         } else {
          $$4371$i = $$3370$i;
         }
         $578 = (($3) + ($567<<2)|0);
         HEAP32[$578>>2] = $$1330$i;
         $$0375$ph$i = $563;$$1368$ph438$i = $$4371$i;$$2347$ph439$i = $567;$$2382$ph437$i = $565;
        }
        L302: while(1) {
         $615 = (($$6373$ph$i) + 1)|0;
         $612 = $615 & 127;
         $616 = (($$6373$ph$i) + 127)|0;
         $617 = $616 & 127;
         $618 = (($3) + ($617<<2)|0);
         $$1376$ph549$i = $$1376$ph$i;$$4349$ph550$i = $$4349$ph$i;$$4384$ph$i = $$4384$ph435$i;
         while(1) {
          $591 = ($$4384$ph$i|0)==(18);
          $619 = ($$4384$ph$i|0)>(27);
          $$416$i = $619 ? 9 : 1;
          $$1376$i = $$1376$ph549$i;$$4349$i = $$4349$ph550$i;
          while(1) {
           $$0331476$i = 0;
           while(1) {
            $579 = (($$0331476$i) + ($$4349$i))|0;
            $580 = $579 & 127;
            $581 = ($580|0)==($$6373$ph$i|0);
            if ($581) {
             $$1332$i = 2;
             label = 220;
             break;
            }
            $582 = (($3) + ($580<<2)|0);
            $583 = HEAP32[$582>>2]|0;
            $584 = (1528 + ($$0331476$i<<2)|0);
            $585 = HEAP32[$584>>2]|0;
            $586 = ($583>>>0)<($585>>>0);
            if ($586) {
             $$1332$i = 2;
             label = 220;
             break;
            }
            $587 = ($583>>>0)>($585>>>0);
            if ($587) {
             break;
            }
            $588 = (($$0331476$i) + 1)|0;
            $589 = ($588|0)<(2);
            if ($589) {
             $$0331476$i = $588;
            } else {
             $$1332$i = $588;
             label = 220;
             break;
            }
           }
           if ((label|0) == 220) {
            label = 0;
            $590 = ($$1332$i|0)==(2);
            $or$cond6$i122 = $591 & $590;
            if ($or$cond6$i122) {
             $$0360474$i = 0.0;$$4475$i = 0;$$9473$i = $$6373$ph$i;
             break L302;
            }
           }
           $592 = (($$1376$i) + ($$416$i))|0;
           $593 = ($$4349$i|0)==($$6373$ph$i|0);
           if ($593) {
            $$1376$i = $592;$$4349$i = $$6373$ph$i;
           } else {
            break;
           }
          }
          $594 = 1 << $$416$i;
          $595 = (($594) + -1)|0;
          $596 = 1000000000 >>> $$416$i;
          $$0327480$i = 0;$$5350478$i = $$4349$i;$$5385477$i = $$4384$ph$i;$$6479$i = $$4349$i;
          while(1) {
           $597 = (($3) + ($$6479$i<<2)|0);
           $598 = HEAP32[$597>>2]|0;
           $599 = $598 & $595;
           $600 = $598 >>> $$416$i;
           $601 = (($600) + ($$0327480$i))|0;
           HEAP32[$597>>2] = $601;
           $602 = Math_imul($599, $596)|0;
           $603 = ($$6479$i|0)==($$5350478$i|0);
           $604 = ($601|0)==(0);
           $or$cond417$i = $603 & $604;
           $605 = (($$5350478$i) + 1)|0;
           $606 = $605 & 127;
           $607 = (($$5385477$i) + -9)|0;
           $$$5385$i = $or$cond417$i ? $607 : $$5385477$i;
           $$$5350$i = $or$cond417$i ? $606 : $$5350478$i;
           $608 = (($$6479$i) + 1)|0;
           $609 = $608 & 127;
           $610 = ($609|0)==($$6373$ph$i|0);
           if ($610) {
            break;
           } else {
            $$0327480$i = $602;$$5350478$i = $$$5350$i;$$5385477$i = $$$5385$i;$$6479$i = $609;
           }
          }
          $611 = ($602|0)==(0);
          if ($611) {
           $$1376$ph549$i = $592;$$4349$ph550$i = $$$5350$i;$$4384$ph$i = $$$5385$i;
           continue;
          }
          $613 = ($612|0)==($$$5350$i|0);
          if (!($613)) {
           break;
          }
          $620 = HEAP32[$618>>2]|0;
          $621 = $620 | 1;
          HEAP32[$618>>2] = $621;
          $$1376$ph549$i = $592;$$4349$ph550$i = $$$5350$i;$$4384$ph$i = $$$5385$i;
         }
         $614 = (($3) + ($$6373$ph$i<<2)|0);
         HEAP32[$614>>2] = $602;
         $$1376$ph$i = $592;$$4349$ph$i = $$$5350$i;$$4384$ph435$i = $$$5385$i;$$6373$ph$i = $612;
        }
        while(1) {
         $622 = (($$4475$i) + ($$4349$i))|0;
         $623 = $622 & 127;
         $624 = ($623|0)==($$9473$i|0);
         $625 = (($$9473$i) + 1)|0;
         $626 = $625 & 127;
         if ($624) {
          $627 = (($626) + -1)|0;
          $628 = (($3) + ($627<<2)|0);
          HEAP32[$628>>2] = 0;
          $$10$i = $626;
         } else {
          $$10$i = $$9473$i;
         }
         $629 = $$0360474$i * 1.0E+9;
         $630 = (($3) + ($623<<2)|0);
         $631 = HEAP32[$630>>2]|0;
         $632 = (+($631>>>0));
         $633 = $629 + $632;
         $634 = (($$4475$i) + 1)|0;
         $exitcond$i = ($634|0)==(2);
         if ($exitcond$i) {
          break;
         } else {
          $$0360474$i = $633;$$4475$i = $634;$$9473$i = $$10$i;
         }
        }
        $635 = (+($$0113|0));
        $636 = $635 * $633;
        $637 = (($$1376$i) + 53)|0;
        $638 = (($637) - ($$0105$ph))|0;
        $639 = ($638|0)<($$0106$ph|0);
        $640 = ($638|0)<(0);
        $$$i = $640 ? 0 : $638;
        $$0364$i = $639&1;
        $$0328$i = $639 ? $$$i : $$0106$ph;
        $641 = ($$0328$i|0)<(53);
        if ($641) {
         $642 = (105 - ($$0328$i))|0;
         $643 = (+_scalbn(1.0,$642));
         $644 = (+_copysignl($643,$636));
         $645 = (53 - ($$0328$i))|0;
         $646 = (+_scalbn(1.0,$645));
         $647 = (+_fmodl($636,$646));
         $648 = $636 - $647;
         $649 = $644 + $648;
         $$0355$i = $644;$$0356$i = $647;$$1361$i = $649;
        } else {
         $$0355$i = 0.0;$$0356$i = 0.0;$$1361$i = $636;
        }
        $650 = (($$4349$i) + 2)|0;
        $651 = $650 & 127;
        $652 = ($651|0)==($$10$i|0);
        do {
         if ($652) {
          $$3359$i = $$0356$i;
         } else {
          $653 = (($3) + ($651<<2)|0);
          $654 = HEAP32[$653>>2]|0;
          $655 = ($654>>>0)<(500000000);
          do {
           if ($655) {
            $656 = ($654|0)==(0);
            if ($656) {
             $657 = (($$4349$i) + 3)|0;
             $658 = $657 & 127;
             $659 = ($658|0)==($$10$i|0);
             if ($659) {
              $$1357$i = $$0356$i;
              break;
             }
            }
            $660 = $635 * 0.25;
            $661 = $660 + $$0356$i;
            $$1357$i = $661;
           } else {
            $662 = ($654|0)==(500000000);
            if (!($662)) {
             $663 = $635 * 0.75;
             $664 = $663 + $$0356$i;
             $$1357$i = $664;
             break;
            }
            $665 = (($$4349$i) + 3)|0;
            $666 = $665 & 127;
            $667 = ($666|0)==($$10$i|0);
            if ($667) {
             $668 = $635 * 0.5;
             $669 = $668 + $$0356$i;
             $$1357$i = $669;
             break;
            } else {
             $670 = $635 * 0.75;
             $671 = $670 + $$0356$i;
             $$1357$i = $671;
             break;
            }
           }
          } while(0);
          $672 = (53 - ($$0328$i))|0;
          $673 = ($672|0)>(1);
          if ($673) {
           $674 = (+_fmodl($$1357$i,1.0));
           $675 = $674 != 0.0;
           if ($675) {
            $$3359$i = $$1357$i;
            break;
           }
           $676 = $$1357$i + 1.0;
           $$3359$i = $676;
          } else {
           $$3359$i = $$1357$i;
          }
         }
        } while(0);
        $677 = $$1361$i + $$3359$i;
        $678 = $677 - $$0355$i;
        $679 = $637 & 2147483647;
        $680 = (-2 - ($sum$i))|0;
        $681 = ($679|0)>($680|0);
        do {
         if ($681) {
          $682 = (+Math_abs((+$678)));
          $683 = !($682 >= 9007199254740992.0);
          if ($683) {
           $$2362$i = $678;$$2366$i = $$0364$i;$$3378$i = $$1376$i;
          } else {
           $684 = (($$1376$i) + 1)|0;
           $685 = ($$0328$i|0)==($638|0);
           $or$cond418$i = $639 & $685;
           $$1365$i = $or$cond418$i ? 0 : $$0364$i;
           $686 = $678 * 0.5;
           $$2362$i = $686;$$2366$i = $$1365$i;$$3378$i = $684;
          }
          $687 = (($$3378$i) + 50)|0;
          $688 = ($687|0)>($333|0);
          if (!($688)) {
           $689 = ($$2366$i|0)!=(0);
           $690 = $$3359$i != 0.0;
           $or$cond9$i = $690 & $689;
           if (!($or$cond9$i)) {
            $$3363$i = $$2362$i;$$4379$i = $$3378$i;
            break;
           }
          }
          $691 = (___errno_location()|0);
          HEAP32[$691>>2] = 34;
          $$3363$i = $$2362$i;$$4379$i = $$3378$i;
         } else {
          $$3363$i = $678;$$4379$i = $$1376$i;
         }
        } while(0);
        $692 = (+_scalbnl($$3363$i,$$4379$i));
        $$1$i = $692;
       }
      } while(0);
      $$0114 = $$1$i;
      break L4;
      break;
     }
     default: {
      $113 = HEAP32[$5>>2]|0;
      $114 = ($113|0)==(0|0);
      if (!($114)) {
       $115 = HEAP32[$4>>2]|0;
       $116 = ((($115)) + -1|0);
       HEAP32[$4>>2] = $116;
      }
      $117 = (___errno_location()|0);
      HEAP32[$117>>2] = 22;
      ___shlim($0,0);
      $$0114 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $45 = HEAP32[$5>>2]|0;
    $46 = ($45|0)==(0|0);
    if (!($46)) {
     $47 = HEAP32[$4>>2]|0;
     $48 = ((($47)) + -1|0);
     HEAP32[$4>>2] = $48;
    }
    $49 = ($2|0)!=(0);
    $50 = ($$0107$lcssa>>>0)>(3);
    $or$cond9 = $49 & $50;
    if ($or$cond9) {
     $$1108 = $$0107$lcssa;
     while(1) {
      if (!($46)) {
       $51 = HEAP32[$4>>2]|0;
       $52 = ((($51)) + -1|0);
       HEAP32[$4>>2] = $52;
      }
      $53 = (($$1108) + -1)|0;
      $$old8 = ($53>>>0)>(3);
      if ($$old8) {
       $$1108 = $53;
      } else {
       break;
      }
     }
    }
   }
   $54 = (+($$0113|0));
   $55 = $54 * inf;
   $56 = $55;
   $$0114 = $56;
  }
 } while(0);
 STACKTOP = sp;return (+$$0114);
}
function _scanexp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04860 = 0, $$049 = 0, $$1$be = 0, $$159 = 0, $$2$be = 0, $$2$lcssa = 0, $$254 = 0, $$3$be = 0, $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 100|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = ((($3)) + 1|0);
  HEAP32[$2>>2] = $7;
  $8 = HEAP8[$3>>0]|0;
  $9 = $8&255;
  $11 = $9;
 } else {
  $10 = (___shgetc($0)|0);
  $11 = $10;
 }
 $12 = ($11|0)==(45);
 switch ($11|0) {
 case 43: case 45:  {
  $13 = $12&1;
  $14 = HEAP32[$2>>2]|0;
  $15 = HEAP32[$4>>2]|0;
  $16 = ($14>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($14)) + 1|0);
   HEAP32[$2>>2] = $17;
   $18 = HEAP8[$14>>0]|0;
   $19 = $18&255;
   $22 = $19;
  } else {
   $20 = (___shgetc($0)|0);
   $22 = $20;
  }
  $21 = (($22) + -48)|0;
  $23 = ($21>>>0)>(9);
  $24 = ($1|0)!=(0);
  $or$cond3 = $24 & $23;
  if ($or$cond3) {
   $25 = HEAP32[$4>>2]|0;
   $26 = ($25|0)==(0|0);
   if ($26) {
    $$0 = $13;$$049 = $22;
   } else {
    $27 = HEAP32[$2>>2]|0;
    $28 = ((($27)) + -1|0);
    HEAP32[$2>>2] = $28;
    $$0 = $13;$$049 = $22;
   }
  } else {
   $$0 = $13;$$049 = $22;
  }
  break;
 }
 default: {
  $$0 = 0;$$049 = $11;
 }
 }
 $29 = (($$049) + -48)|0;
 $30 = ($29>>>0)>(9);
 if ($30) {
  $31 = HEAP32[$4>>2]|0;
  $32 = ($31|0)==(0|0);
  if ($32) {
   $100 = -2147483648;$101 = 0;
  } else {
   $33 = HEAP32[$2>>2]|0;
   $34 = ((($33)) + -1|0);
   HEAP32[$2>>2] = $34;
   $100 = -2147483648;$101 = 0;
  }
 } else {
  $$04860 = 0;$$159 = $$049;
  while(1) {
   $35 = ($$04860*10)|0;
   $36 = (($$159) + -48)|0;
   $37 = (($36) + ($35))|0;
   $38 = HEAP32[$2>>2]|0;
   $39 = HEAP32[$4>>2]|0;
   $40 = ($38>>>0)<($39>>>0);
   if ($40) {
    $41 = ((($38)) + 1|0);
    HEAP32[$2>>2] = $41;
    $42 = HEAP8[$38>>0]|0;
    $43 = $42&255;
    $$1$be = $43;
   } else {
    $44 = (___shgetc($0)|0);
    $$1$be = $44;
   }
   $45 = (($$1$be) + -48)|0;
   $46 = ($45>>>0)<(10);
   $47 = ($37|0)<(214748364);
   $48 = $46 & $47;
   if ($48) {
    $$04860 = $37;$$159 = $$1$be;
   } else {
    break;
   }
  }
  $49 = ($37|0)<(0);
  $50 = $49 << 31 >> 31;
  $51 = (($$1$be) + -48)|0;
  $52 = ($51>>>0)<(10);
  if ($52) {
   $$254 = $$1$be;$55 = $37;$56 = $50;
   while(1) {
    $57 = (___muldi3(($55|0),($56|0),10,0)|0);
    $58 = tempRet0;
    $59 = ($$254|0)<(0);
    $60 = $59 << 31 >> 31;
    $61 = (_i64Add(($$254|0),($60|0),-48,-1)|0);
    $62 = tempRet0;
    $63 = (_i64Add(($61|0),($62|0),($57|0),($58|0))|0);
    $64 = tempRet0;
    $65 = HEAP32[$2>>2]|0;
    $66 = HEAP32[$4>>2]|0;
    $67 = ($65>>>0)<($66>>>0);
    if ($67) {
     $68 = ((($65)) + 1|0);
     HEAP32[$2>>2] = $68;
     $69 = HEAP8[$65>>0]|0;
     $70 = $69&255;
     $$2$be = $70;
    } else {
     $71 = (___shgetc($0)|0);
     $$2$be = $71;
    }
    $72 = (($$2$be) + -48)|0;
    $73 = ($72>>>0)<(10);
    $74 = ($64|0)<(21474836);
    $75 = ($63>>>0)<(2061584302);
    $76 = ($64|0)==(21474836);
    $77 = $76 & $75;
    $78 = $74 | $77;
    $79 = $73 & $78;
    if ($79) {
     $$254 = $$2$be;$55 = $63;$56 = $64;
    } else {
     $$2$lcssa = $$2$be;$94 = $63;$95 = $64;
     break;
    }
   }
  } else {
   $$2$lcssa = $$1$be;$94 = $37;$95 = $50;
  }
  $53 = (($$2$lcssa) + -48)|0;
  $54 = ($53>>>0)<(10);
  if ($54) {
   while(1) {
    $80 = HEAP32[$2>>2]|0;
    $81 = HEAP32[$4>>2]|0;
    $82 = ($80>>>0)<($81>>>0);
    if ($82) {
     $83 = ((($80)) + 1|0);
     HEAP32[$2>>2] = $83;
     $84 = HEAP8[$80>>0]|0;
     $85 = $84&255;
     $$3$be = $85;
    } else {
     $86 = (___shgetc($0)|0);
     $$3$be = $86;
    }
    $87 = (($$3$be) + -48)|0;
    $88 = ($87>>>0)<(10);
    if (!($88)) {
     break;
    }
   }
  }
  $89 = HEAP32[$4>>2]|0;
  $90 = ($89|0)==(0|0);
  if (!($90)) {
   $91 = HEAP32[$2>>2]|0;
   $92 = ((($91)) + -1|0);
   HEAP32[$2>>2] = $92;
  }
  $93 = ($$0|0)!=(0);
  $96 = (_i64Subtract(0,0,($94|0),($95|0))|0);
  $97 = tempRet0;
  $98 = $93 ? $96 : $94;
  $99 = $93 ? $97 : $95;
  $100 = $99;$101 = $98;
 }
 tempRet0 = ($100);
 return ($101|0);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0.0, $$020 = 0, $$1 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0.0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($4|0)>(1023);
  $6 = (($1) + -2046)|0;
  if ($5) {
   $7 = $3 * 8.9884656743115795E+307;
   $8 = ($6|0)>(1023);
   $$ = $8 ? 1023 : $6;
   $$0 = $7;$$020 = $$;
  } else {
   $$0 = $3;$$020 = $4;
  }
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($11|0)<(-1022);
   $13 = (($1) + 2044)|0;
   if ($12) {
    $14 = $10 * 2.2250738585072014E-308;
    $15 = ($13|0)<(-1022);
    $$1 = $15 ? -1022 : $13;
    $$0 = $14;$$020 = $$1;
   } else {
    $$0 = $10;$$020 = $11;
   }
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _copysignl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_copysign($0,$1));
 return (+$2);
}
function _scalbnl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function _fmodl($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_fmod($0,$1));
 return (+$2);
}
function _fmod($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$ = 0.0, $$070 = 0.0, $$071$lcssa = 0, $$07195 = 0, $$073$lcssa = 0, $$073101 = 0, $$172$ph = 0, $$174 = 0, $$275$lcssa = 0, $$27587 = 0, $$376$lcssa = 0, $$37684 = 0, $$lcssa = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0.0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $7 = tempRet0;
 $8 = $6 & 2047;
 $9 = (_bitshift64Lshr(($4|0),($5|0),52)|0);
 $10 = tempRet0;
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = (_bitshift64Shl(($4|0),($5|0),1)|0);
 $14 = tempRet0;
 $15 = ($13|0)==(0);
 $16 = ($14|0)==(0);
 $17 = $15 & $16;
 L1: do {
  if ($17) {
   label = 3;
  } else {
   $18 = $5 & 2147483647;
   $19 = ($18>>>0)>(2146435072);
   $20 = ($4>>>0)>(0);
   $21 = ($18|0)==(2146435072);
   $22 = $21 & $20;
   $23 = $19 | $22;
   $24 = ($8|0)==(2047);
   $or$cond = $23 | $24;
   if ($or$cond) {
    label = 3;
   } else {
    $27 = (_bitshift64Shl(($2|0),($3|0),1)|0);
    $28 = tempRet0;
    $29 = ($28>>>0)>($14>>>0);
    $30 = ($27>>>0)>($13>>>0);
    $31 = ($28|0)==($14|0);
    $32 = $31 & $30;
    $33 = $29 | $32;
    if (!($33)) {
     $34 = ($27|0)==($13|0);
     $35 = ($28|0)==($14|0);
     $36 = $34 & $35;
     $37 = $0 * 0.0;
     $$ = $36 ? $37 : $0;
     return (+$$);
    }
    $38 = ($8|0)==(0);
    if ($38) {
     $39 = (_bitshift64Shl(($2|0),($3|0),12)|0);
     $40 = tempRet0;
     $41 = ($40|0)>(-1);
     $42 = ($39>>>0)>(4294967295);
     $43 = ($40|0)==(-1);
     $44 = $43 & $42;
     $45 = $41 | $44;
     if ($45) {
      $$073101 = 0;$47 = $39;$48 = $40;
      while(1) {
       $46 = (($$073101) + -1)|0;
       $49 = (_bitshift64Shl(($47|0),($48|0),1)|0);
       $50 = tempRet0;
       $51 = ($50|0)>(-1);
       $52 = ($49>>>0)>(4294967295);
       $53 = ($50|0)==(-1);
       $54 = $53 & $52;
       $55 = $51 | $54;
       if ($55) {
        $$073101 = $46;$47 = $49;$48 = $50;
       } else {
        $$073$lcssa = $46;
        break;
       }
      }
     } else {
      $$073$lcssa = 0;
     }
     $56 = (1 - ($$073$lcssa))|0;
     $57 = (_bitshift64Shl(($2|0),($3|0),($56|0))|0);
     $58 = tempRet0;
     $$174 = $$073$lcssa;$85 = $57;$86 = $58;
    } else {
     $59 = $3 & 1048575;
     $60 = $59 | 1048576;
     $$174 = $8;$85 = $2;$86 = $60;
    }
    $61 = ($11|0)==(0);
    if ($61) {
     $62 = (_bitshift64Shl(($4|0),($5|0),12)|0);
     $63 = tempRet0;
     $64 = ($63|0)>(-1);
     $65 = ($62>>>0)>(4294967295);
     $66 = ($63|0)==(-1);
     $67 = $66 & $65;
     $68 = $64 | $67;
     if ($68) {
      $$07195 = 0;$70 = $62;$71 = $63;
      while(1) {
       $69 = (($$07195) + -1)|0;
       $72 = (_bitshift64Shl(($70|0),($71|0),1)|0);
       $73 = tempRet0;
       $74 = ($73|0)>(-1);
       $75 = ($72>>>0)>(4294967295);
       $76 = ($73|0)==(-1);
       $77 = $76 & $75;
       $78 = $74 | $77;
       if ($78) {
        $$07195 = $69;$70 = $72;$71 = $73;
       } else {
        $$071$lcssa = $69;
        break;
       }
      }
     } else {
      $$071$lcssa = 0;
     }
     $79 = (1 - ($$071$lcssa))|0;
     $80 = (_bitshift64Shl(($4|0),($5|0),($79|0))|0);
     $81 = tempRet0;
     $$172$ph = $$071$lcssa;$87 = $80;$88 = $81;
    } else {
     $82 = $5 & 1048575;
     $83 = $82 | 1048576;
     $$172$ph = $11;$87 = $4;$88 = $83;
    }
    $84 = ($$174|0)>($$172$ph|0);
    $89 = (_i64Subtract(($85|0),($86|0),($87|0),($88|0))|0);
    $90 = tempRet0;
    $91 = ($90|0)>(-1);
    $92 = ($89>>>0)>(4294967295);
    $93 = ($90|0)==(-1);
    $94 = $93 & $92;
    $95 = $91 | $94;
    L23: do {
     if ($84) {
      $$27587 = $$174;$154 = $95;$155 = $85;$156 = $86;$96 = $89;$98 = $90;
      while(1) {
       if ($154) {
        $97 = ($96|0)==(0);
        $99 = ($98|0)==(0);
        $100 = $97 & $99;
        if ($100) {
         break;
        } else {
         $102 = $96;$103 = $98;
        }
       } else {
        $102 = $155;$103 = $156;
       }
       $104 = (_bitshift64Shl(($102|0),($103|0),1)|0);
       $105 = tempRet0;
       $106 = (($$27587) + -1)|0;
       $107 = ($106|0)>($$172$ph|0);
       $108 = (_i64Subtract(($104|0),($105|0),($87|0),($88|0))|0);
       $109 = tempRet0;
       $110 = ($109|0)>(-1);
       $111 = ($108>>>0)>(4294967295);
       $112 = ($109|0)==(-1);
       $113 = $112 & $111;
       $114 = $110 | $113;
       if ($107) {
        $$27587 = $106;$154 = $114;$155 = $104;$156 = $105;$96 = $108;$98 = $109;
       } else {
        $$275$lcssa = $106;$$lcssa = $114;$115 = $108;$117 = $109;$157 = $104;$158 = $105;
        break L23;
       }
      }
      $101 = $0 * 0.0;
      $$070 = $101;
      break L1;
     } else {
      $$275$lcssa = $$174;$$lcssa = $95;$115 = $89;$117 = $90;$157 = $85;$158 = $86;
     }
    } while(0);
    if ($$lcssa) {
     $116 = ($115|0)==(0);
     $118 = ($117|0)==(0);
     $119 = $116 & $118;
     if ($119) {
      $127 = $0 * 0.0;
      $$070 = $127;
      break;
     } else {
      $120 = $117;$122 = $115;
     }
    } else {
     $120 = $158;$122 = $157;
    }
    $121 = ($120>>>0)<(1048576);
    $123 = ($122>>>0)<(0);
    $124 = ($120|0)==(1048576);
    $125 = $124 & $123;
    $126 = $121 | $125;
    if ($126) {
     $$37684 = $$275$lcssa;$128 = $122;$129 = $120;
     while(1) {
      $130 = (_bitshift64Shl(($128|0),($129|0),1)|0);
      $131 = tempRet0;
      $132 = (($$37684) + -1)|0;
      $133 = ($131>>>0)<(1048576);
      $134 = ($130>>>0)<(0);
      $135 = ($131|0)==(1048576);
      $136 = $135 & $134;
      $137 = $133 | $136;
      if ($137) {
       $$37684 = $132;$128 = $130;$129 = $131;
      } else {
       $$376$lcssa = $132;$139 = $130;$140 = $131;
       break;
      }
     }
    } else {
     $$376$lcssa = $$275$lcssa;$139 = $122;$140 = $120;
    }
    $138 = ($$376$lcssa|0)>(0);
    if ($138) {
     $141 = (_i64Add(($139|0),($140|0),0,-1048576)|0);
     $142 = tempRet0;
     $143 = (_bitshift64Shl(($$376$lcssa|0),0,52)|0);
     $144 = tempRet0;
     $145 = $141 | $143;
     $146 = $142 | $144;
     $151 = $146;$153 = $145;
    } else {
     $147 = (1 - ($$376$lcssa))|0;
     $148 = (_bitshift64Lshr(($139|0),($140|0),($147|0))|0);
     $149 = tempRet0;
     $151 = $149;$153 = $148;
    }
    $150 = $151 | $12;
    HEAP32[tempDoublePtr>>2] = $153;HEAP32[tempDoublePtr+4>>2] = $150;$152 = +HEAPF64[tempDoublePtr>>3];
    $$070 = $152;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $25 = $0 * $1;
  $26 = $25 / $25;
  $$070 = $26;
 }
 return (+$$070);
}
function _copysign($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = $3 & 2147483647;
 $7 = $5 & -2147483648;
 $8 = $7 | $6;
 HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $8;$9 = +HEAPF64[tempDoublePtr>>3];
 return (+$9);
}
function _isalnum($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $isdigit = 0, $isdigittmp = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isalpha($0)|0);
 $isdigittmp = (($0) + -48)|0;
 $isdigit = ($isdigittmp>>>0)<(10);
 $not$ = ($1|0)!=(0);
 $2 = $isdigit | $not$;
 $3 = $2&1;
 return ($3|0);
}
function _isalpha($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 | 32;
 $2 = (($1) + -97)|0;
 $3 = ($2>>>0)<(26);
 $4 = $3&1;
 return ($4|0);
}
function _tolower($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isupper($0)|0);
 $2 = ($1|0)==(0);
 $3 = $0 | 32;
 $$0 = $2 ? $0 : $3;
 return ($$0|0);
}
function _isupper($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -65)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _fprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vfprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $$1$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(224|0);
 $3 = sp + 120|0;
 $4 = sp + 80|0;
 $5 = sp;
 $6 = sp + 136|0;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $39 = $12;
  } else {
   $39 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (FUNCTION_TABLE_iiii[$32 & 1023]($0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $$ = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $$;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $$1$ = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $40 = ($39|0)==(0);
  if (!($40)) {
   ___unlockfile($0);
  }
  $$0 = $$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$0259 = 0, $$$0262 = 0, $$$0269 = 0, $$$3484$i = 0, $$$3484705$i = 0, $$$3484706$i = 0, $$$3501$i = 0, $$$4266 = 0, $$$4502$i = 0, $$$5 = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i300 = 0, $$0228 = 0, $$0229396 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0;
 var $$0240$lcssa = 0, $$0240$lcssa460 = 0, $$0240395 = 0, $$0243 = 0, $$0247 = 0, $$0249$lcssa = 0, $$0249383 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0254$ = 0, $$0259 = 0, $$0262342 = 0, $$0262390 = 0, $$0269 = 0, $$0269$phi = 0, $$0321 = 0, $$0463$lcssa$i = 0, $$0463594$i = 0, $$0464603$i = 0;
 var $$0466$i = 0.0, $$0470$i = 0, $$0471$i = 0.0, $$0479$i = 0, $$0487652$i = 0, $$0488$i = 0, $$0488663$i = 0, $$0488665$i = 0, $$0496$$9$i = 0, $$0497664$i = 0, $$0498$i = 0, $$05$lcssa$i = 0, $$0509592$i = 0.0, $$0510$i = 0, $$0511$i = 0, $$0514647$i = 0, $$0520$i = 0, $$0522$$i = 0, $$0522$i = 0, $$0524$i = 0;
 var $$0526$i = 0, $$0528$i = 0, $$0528639$i = 0, $$0528641$i = 0, $$0531646$i = 0, $$056$i = 0, $$06$i = 0, $$06$i290 = 0, $$06$i298 = 0, $$1 = 0, $$1230407 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241406 = 0, $$1244394 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0;
 var $$1263 = 0, $$1263$ = 0, $$1270 = 0, $$1322 = 0, $$1465$i = 0, $$1467$i = 0.0, $$1469$i = 0.0, $$1472$i = 0.0, $$1480$i = 0, $$1482$lcssa$i = 0, $$1482671$i = 0, $$1489651$i = 0, $$1499$lcssa$i = 0, $$1499670$i = 0, $$1508593$i = 0, $$1512$lcssa$i = 0, $$1512617$i = 0, $$1515$i = 0, $$1521$i = 0, $$1525$i = 0;
 var $$1527$i = 0, $$1529624$i = 0, $$1532$lcssa$i = 0, $$1532640$i = 0, $$1607$i = 0, $$2 = 0, $$2$i = 0, $$2234 = 0, $$2239 = 0, $$2242381 = 0, $$2245 = 0, $$2251 = 0, $$2256 = 0, $$2256$ = 0, $$2261 = 0, $$2271 = 0, $$2323$lcssa = 0, $$2323382 = 0, $$2473$i = 0.0, $$2476$$545$i = 0;
 var $$2476$$547$i = 0, $$2476$i = 0, $$2483$ph$i = 0, $$2490$lcssa$i = 0, $$2490632$i = 0, $$2500$i = 0, $$2513$i = 0, $$2516628$i = 0, $$2530$i = 0, $$2533627$i = 0, $$3$i = 0.0, $$3257 = 0, $$3265 = 0, $$3272 = 0, $$331 = 0, $$332 = 0, $$333 = 0, $$3379 = 0, $$3477$i = 0, $$3484$lcssa$i = 0;
 var $$3484658$i = 0, $$3501$lcssa$i = 0, $$3501657$i = 0, $$3534623$i = 0, $$4$i = 0.0, $$4258458 = 0, $$4266 = 0, $$4325 = 0, $$4478$lcssa$i = 0, $$4478600$i = 0, $$4492$i = 0, $$4502$i = 0, $$4518$i = 0, $$5 = 0, $$5$lcssa$i = 0, $$537$i = 0, $$538$$i = 0, $$538$i = 0, $$541$i = 0.0, $$544$i = 0;
 var $$546$i = 0, $$5486$lcssa$i = 0, $$5486633$i = 0, $$5493606$i = 0, $$5519$ph$i = 0, $$553$i = 0, $$554$i = 0, $$557$i = 0.0, $$5611$i = 0, $$6 = 0, $$6$i = 0, $$6268 = 0, $$6494599$i = 0, $$7 = 0, $$7495610$i = 0, $$7505$$i = 0, $$7505$i = 0, $$7505$ph$i = 0, $$8$i = 0, $$9$ph$i = 0;
 var $$lcssa683$i = 0, $$neg$i = 0, $$neg572$i = 0, $$pn$i = 0, $$pr = 0, $$pr$i = 0, $$pr571$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi704$iZ2D = 0, $$pre452 = 0, $$pre453 = 0, $$pre454 = 0, $$pre697$i = 0, $$pre700$i = 0, $$pre703$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0.0, $372 = 0, $373 = 0, $374 = 0, $375 = 0.0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0.0, $404 = 0.0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0.0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0.0, $424 = 0.0, $425 = 0.0, $426 = 0.0, $427 = 0.0, $428 = 0.0, $429 = 0, $43 = 0;
 var $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0;
 var $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0;
 var $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0;
 var $485 = 0, $486 = 0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0.0, $494 = 0.0, $495 = 0.0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0;
 var $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0;
 var $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0;
 var $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0;
 var $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0;
 var $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0;
 var $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0.0, $606 = 0.0, $607 = 0, $608 = 0.0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0;
 var $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0;
 var $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0;
 var $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0;
 var $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0;
 var $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0;
 var $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0;
 var $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0;
 var $809 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0, $exitcond$i = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i292 = 0, $isdigit275 = 0;
 var $isdigit277 = 0, $isdigit5$i = 0, $isdigit5$i288 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0, $isdigittmp$i291 = 0, $isdigittmp274 = 0, $isdigittmp276 = 0, $isdigittmp4$i = 0, $isdigittmp4$i287 = 0, $isdigittmp7$i = 0, $isdigittmp7$i289 = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond280 = 0, $or$cond282 = 0, $or$cond285 = 0;
 var $or$cond3$not$i = 0, $or$cond412 = 0, $or$cond540$i = 0, $or$cond543$i = 0, $or$cond552$i = 0, $or$cond6$i = 0, $scevgep694$i = 0, $scevgep694695$i = 0, $storemerge = 0, $storemerge273345 = 0, $storemerge273389 = 0, $storemerge278 = 0, $sum = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(624|0);
 $5 = sp + 24|0;
 $6 = sp + 16|0;
 $7 = sp + 588|0;
 $8 = sp + 576|0;
 $9 = sp;
 $10 = sp + 536|0;
 $11 = sp + 8|0;
 $12 = sp + 528|0;
 $13 = ($0|0)!=(0|0);
 $14 = ((($10)) + 40|0);
 $15 = $14;
 $16 = ((($10)) + 39|0);
 $17 = ((($11)) + 4|0);
 $18 = $7;
 $19 = (0 - ($18))|0;
 $20 = ((($8)) + 12|0);
 $21 = ((($8)) + 11|0);
 $22 = $20;
 $23 = (($22) - ($18))|0;
 $24 = (-2 - ($18))|0;
 $25 = (($22) + 2)|0;
 $26 = ((($5)) + 288|0);
 $27 = ((($7)) + 9|0);
 $28 = $27;
 $29 = ((($7)) + 8|0);
 $$0243 = 0;$$0247 = 0;$$0269 = 0;$$0321 = $1;
 L1: while(1) {
  $30 = ($$0247|0)>(-1);
  do {
   if ($30) {
    $31 = (2147483647 - ($$0247))|0;
    $32 = ($$0243|0)>($31|0);
    if ($32) {
     $33 = (___errno_location()|0);
     HEAP32[$33>>2] = 75;
     $$1248 = -1;
     break;
    } else {
     $34 = (($$0243) + ($$0247))|0;
     $$1248 = $34;
     break;
    }
   } else {
    $$1248 = $$0247;
   }
  } while(0);
  $35 = HEAP8[$$0321>>0]|0;
  $36 = ($35<<24>>24)==(0);
  if ($36) {
   label = 243;
   break;
  } else {
   $$1322 = $$0321;$37 = $35;
  }
  L9: while(1) {
   switch ($37<<24>>24) {
   case 37:  {
    $$0249383 = $$1322;$$2323382 = $$1322;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $$0249$lcssa = $$1322;$$2323$lcssa = $$1322;
    break L9;
    break;
   }
   default: {
   }
   }
   $38 = ((($$1322)) + 1|0);
   $$pre = HEAP8[$38>>0]|0;
   $$1322 = $38;$37 = $$pre;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $39 = ((($$2323382)) + 1|0);
     $40 = HEAP8[$39>>0]|0;
     $41 = ($40<<24>>24)==(37);
     if (!($41)) {
      $$0249$lcssa = $$0249383;$$2323$lcssa = $$2323382;
      break L12;
     }
     $42 = ((($$0249383)) + 1|0);
     $43 = ((($$2323382)) + 2|0);
     $44 = HEAP8[$43>>0]|0;
     $45 = ($44<<24>>24)==(37);
     if ($45) {
      $$0249383 = $42;$$2323382 = $43;
      label = 9;
     } else {
      $$0249$lcssa = $42;$$2323$lcssa = $43;
      break;
     }
    }
   }
  } while(0);
  $46 = $$0249$lcssa;
  $47 = $$0321;
  $48 = (($46) - ($47))|0;
  if ($13) {
   $49 = HEAP32[$0>>2]|0;
   $50 = $49 & 32;
   $51 = ($50|0)==(0);
   if ($51) {
    (___fwritex($$0321,$48,$0)|0);
   }
  }
  $52 = ($48|0)==(0);
  if (!($52)) {
   $$0269$phi = $$0269;$$0243 = $48;$$0247 = $$1248;$$0321 = $$2323$lcssa;$$0269 = $$0269$phi;
   continue;
  }
  $53 = ((($$2323$lcssa)) + 1|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 << 24 >> 24;
  $isdigittmp = (($55) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $56 = ((($$2323$lcssa)) + 2|0);
   $57 = HEAP8[$56>>0]|0;
   $58 = ($57<<24>>24)==(36);
   $59 = ((($$2323$lcssa)) + 3|0);
   $$331 = $58 ? $59 : $53;
   $$$0269 = $58 ? 1 : $$0269;
   $isdigittmp$ = $58 ? $isdigittmp : -1;
   $$pre452 = HEAP8[$$331>>0]|0;
   $$0253 = $isdigittmp$;$$1270 = $$$0269;$61 = $$pre452;$storemerge = $$331;
  } else {
   $$0253 = -1;$$1270 = $$0269;$61 = $54;$storemerge = $53;
  }
  $60 = $61 << 24 >> 24;
  $62 = (($60) + -32)|0;
  $63 = ($62>>>0)<(32);
  L25: do {
   if ($63) {
    $$0262390 = 0;$65 = $62;$69 = $61;$storemerge273389 = $storemerge;
    while(1) {
     $64 = 1 << $65;
     $66 = $64 & 75913;
     $67 = ($66|0)==(0);
     if ($67) {
      $$0262342 = $$0262390;$78 = $69;$storemerge273345 = $storemerge273389;
      break L25;
     }
     $68 = $69 << 24 >> 24;
     $70 = (($68) + -32)|0;
     $71 = 1 << $70;
     $72 = $71 | $$0262390;
     $73 = ((($storemerge273389)) + 1|0);
     $74 = HEAP8[$73>>0]|0;
     $75 = $74 << 24 >> 24;
     $76 = (($75) + -32)|0;
     $77 = ($76>>>0)<(32);
     if ($77) {
      $$0262390 = $72;$65 = $76;$69 = $74;$storemerge273389 = $73;
     } else {
      $$0262342 = $72;$78 = $74;$storemerge273345 = $73;
      break;
     }
    }
   } else {
    $$0262342 = 0;$78 = $61;$storemerge273345 = $storemerge;
   }
  } while(0);
  $79 = ($78<<24>>24)==(42);
  do {
   if ($79) {
    $80 = ((($storemerge273345)) + 1|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = $81 << 24 >> 24;
    $isdigittmp276 = (($82) + -48)|0;
    $isdigit277 = ($isdigittmp276>>>0)<(10);
    if ($isdigit277) {
     $83 = ((($storemerge273345)) + 2|0);
     $84 = HEAP8[$83>>0]|0;
     $85 = ($84<<24>>24)==(36);
     if ($85) {
      $86 = (($4) + ($isdigittmp276<<2)|0);
      HEAP32[$86>>2] = 10;
      $87 = HEAP8[$80>>0]|0;
      $88 = $87 << 24 >> 24;
      $89 = (($88) + -48)|0;
      $90 = (($3) + ($89<<3)|0);
      $91 = $90;
      $92 = $91;
      $93 = HEAP32[$92>>2]|0;
      $94 = (($91) + 4)|0;
      $95 = $94;
      $96 = HEAP32[$95>>2]|0;
      $97 = ((($storemerge273345)) + 3|0);
      $$0259 = $93;$$2271 = 1;$storemerge278 = $97;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $98 = ($$1270|0)==(0);
     if (!($98)) {
      $$0 = -1;
      break L1;
     }
     if (!($13)) {
      $$1260 = 0;$$1263 = $$0262342;$$3272 = 0;$$4325 = $80;$$pr = $81;
      break;
     }
     $arglist_current = HEAP32[$2>>2]|0;
     $99 = $arglist_current;
     $100 = ((0) + 4|0);
     $expanded4 = $100;
     $expanded = (($expanded4) - 1)|0;
     $101 = (($99) + ($expanded))|0;
     $102 = ((0) + 4|0);
     $expanded8 = $102;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $103 = $101 & $expanded6;
     $104 = $103;
     $105 = HEAP32[$104>>2]|0;
     $arglist_next = ((($104)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $$0259 = $105;$$2271 = 0;$storemerge278 = $80;
    }
    $106 = ($$0259|0)<(0);
    $107 = $$0262342 | 8192;
    $108 = (0 - ($$0259))|0;
    $$$0262 = $106 ? $107 : $$0262342;
    $$$0259 = $106 ? $108 : $$0259;
    $$pre453 = HEAP8[$storemerge278>>0]|0;
    $$1260 = $$$0259;$$1263 = $$$0262;$$3272 = $$2271;$$4325 = $storemerge278;$$pr = $$pre453;
   } else {
    $109 = $78 << 24 >> 24;
    $isdigittmp4$i = (($109) + -48)|0;
    $isdigit5$i = ($isdigittmp4$i>>>0)<(10);
    if ($isdigit5$i) {
     $$06$i = 0;$113 = $storemerge273345;$isdigittmp7$i = $isdigittmp4$i;
     while(1) {
      $110 = ($$06$i*10)|0;
      $111 = (($110) + ($isdigittmp7$i))|0;
      $112 = ((($113)) + 1|0);
      $114 = HEAP8[$112>>0]|0;
      $115 = $114 << 24 >> 24;
      $isdigittmp$i = (($115) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $$06$i = $111;$113 = $112;$isdigittmp7$i = $isdigittmp$i;
      } else {
       break;
      }
     }
     $116 = ($111|0)<(0);
     if ($116) {
      $$0 = -1;
      break L1;
     } else {
      $$1260 = $111;$$1263 = $$0262342;$$3272 = $$1270;$$4325 = $112;$$pr = $114;
     }
    } else {
     $$1260 = 0;$$1263 = $$0262342;$$3272 = $$1270;$$4325 = $storemerge273345;$$pr = $78;
    }
   }
  } while(0);
  $117 = ($$pr<<24>>24)==(46);
  L45: do {
   if ($117) {
    $118 = ((($$4325)) + 1|0);
    $119 = HEAP8[$118>>0]|0;
    $120 = ($119<<24>>24)==(42);
    if (!($120)) {
     $147 = $119 << 24 >> 24;
     $isdigittmp4$i287 = (($147) + -48)|0;
     $isdigit5$i288 = ($isdigittmp4$i287>>>0)<(10);
     if ($isdigit5$i288) {
      $$06$i290 = 0;$151 = $118;$isdigittmp7$i289 = $isdigittmp4$i287;
     } else {
      $$0254 = 0;$$6 = $118;
      break;
     }
     while(1) {
      $148 = ($$06$i290*10)|0;
      $149 = (($148) + ($isdigittmp7$i289))|0;
      $150 = ((($151)) + 1|0);
      $152 = HEAP8[$150>>0]|0;
      $153 = $152 << 24 >> 24;
      $isdigittmp$i291 = (($153) + -48)|0;
      $isdigit$i292 = ($isdigittmp$i291>>>0)<(10);
      if ($isdigit$i292) {
       $$06$i290 = $149;$151 = $150;$isdigittmp7$i289 = $isdigittmp$i291;
      } else {
       $$0254 = $149;$$6 = $150;
       break L45;
      }
     }
    }
    $121 = ((($$4325)) + 2|0);
    $122 = HEAP8[$121>>0]|0;
    $123 = $122 << 24 >> 24;
    $isdigittmp274 = (($123) + -48)|0;
    $isdigit275 = ($isdigittmp274>>>0)<(10);
    if ($isdigit275) {
     $124 = ((($$4325)) + 3|0);
     $125 = HEAP8[$124>>0]|0;
     $126 = ($125<<24>>24)==(36);
     if ($126) {
      $127 = (($4) + ($isdigittmp274<<2)|0);
      HEAP32[$127>>2] = 10;
      $128 = HEAP8[$121>>0]|0;
      $129 = $128 << 24 >> 24;
      $130 = (($129) + -48)|0;
      $131 = (($3) + ($130<<3)|0);
      $132 = $131;
      $133 = $132;
      $134 = HEAP32[$133>>2]|0;
      $135 = (($132) + 4)|0;
      $136 = $135;
      $137 = HEAP32[$136>>2]|0;
      $138 = ((($$4325)) + 4|0);
      $$0254 = $134;$$6 = $138;
      break;
     }
    }
    $139 = ($$3272|0)==(0);
    if (!($139)) {
     $$0 = -1;
     break L1;
    }
    if ($13) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $140 = $arglist_current2;
     $141 = ((0) + 4|0);
     $expanded11 = $141;
     $expanded10 = (($expanded11) - 1)|0;
     $142 = (($140) + ($expanded10))|0;
     $143 = ((0) + 4|0);
     $expanded15 = $143;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $144 = $142 & $expanded13;
     $145 = $144;
     $146 = HEAP32[$145>>2]|0;
     $arglist_next3 = ((($145)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $$0254 = $146;$$6 = $121;
    } else {
     $$0254 = 0;$$6 = $121;
    }
   } else {
    $$0254 = -1;$$6 = $$4325;
   }
  } while(0);
  $$0252 = 0;$$7 = $$6;
  while(1) {
   $154 = HEAP8[$$7>>0]|0;
   $155 = $154 << 24 >> 24;
   $156 = (($155) + -65)|0;
   $157 = ($156>>>0)>(57);
   if ($157) {
    $$0 = -1;
    break L1;
   }
   $158 = ((($$7)) + 1|0);
   $159 = ((20984 + (($$0252*58)|0)|0) + ($156)|0);
   $160 = HEAP8[$159>>0]|0;
   $161 = $160&255;
   $162 = (($161) + -1)|0;
   $163 = ($162>>>0)<(8);
   if ($163) {
    $$0252 = $161;$$7 = $158;
   } else {
    break;
   }
  }
  $164 = ($160<<24>>24)==(0);
  if ($164) {
   $$0 = -1;
   break;
  }
  $165 = ($160<<24>>24)==(19);
  $166 = ($$0253|0)>(-1);
  do {
   if ($165) {
    if ($166) {
     $$0 = -1;
     break L1;
    } else {
     label = 51;
    }
   } else {
    if ($166) {
     $167 = (($4) + ($$0253<<2)|0);
     HEAP32[$167>>2] = $161;
     $168 = (($3) + ($$0253<<3)|0);
     $169 = $168;
     $170 = $169;
     $171 = HEAP32[$170>>2]|0;
     $172 = (($169) + 4)|0;
     $173 = $172;
     $174 = HEAP32[$173>>2]|0;
     $175 = $9;
     $176 = $175;
     HEAP32[$176>>2] = $171;
     $177 = (($175) + 4)|0;
     $178 = $177;
     HEAP32[$178>>2] = $174;
     label = 51;
     break;
    }
    if (!($13)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg_554($9,$161,$2);
   }
  } while(0);
  if ((label|0) == 51) {
   label = 0;
   if (!($13)) {
    $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
    continue;
   }
  }
  $179 = HEAP8[$$7>>0]|0;
  $180 = $179 << 24 >> 24;
  $181 = ($$0252|0)!=(0);
  $182 = $180 & 15;
  $183 = ($182|0)==(3);
  $or$cond280 = $181 & $183;
  $184 = $180 & -33;
  $$0235 = $or$cond280 ? $184 : $180;
  $185 = $$1263 & 8192;
  $186 = ($185|0)==(0);
  $187 = $$1263 & -65537;
  $$1263$ = $186 ? $$1263 : $187;
  L74: do {
   switch ($$0235|0) {
   case 110:  {
    $trunc = $$0252&255;
    switch ($trunc<<24>>24) {
    case 0:  {
     $194 = HEAP32[$9>>2]|0;
     HEAP32[$194>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    case 1:  {
     $195 = HEAP32[$9>>2]|0;
     HEAP32[$195>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    case 2:  {
     $196 = ($$1248|0)<(0);
     $197 = $196 << 31 >> 31;
     $198 = HEAP32[$9>>2]|0;
     $199 = $198;
     $200 = $199;
     HEAP32[$200>>2] = $$1248;
     $201 = (($199) + 4)|0;
     $202 = $201;
     HEAP32[$202>>2] = $197;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    case 3:  {
     $203 = $$1248&65535;
     $204 = HEAP32[$9>>2]|0;
     HEAP16[$204>>1] = $203;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    case 4:  {
     $205 = $$1248&255;
     $206 = HEAP32[$9>>2]|0;
     HEAP8[$206>>0] = $205;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    case 6:  {
     $207 = HEAP32[$9>>2]|0;
     HEAP32[$207>>2] = $$1248;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    case 7:  {
     $208 = ($$1248|0)<(0);
     $209 = $208 << 31 >> 31;
     $210 = HEAP32[$9>>2]|0;
     $211 = $210;
     $212 = $211;
     HEAP32[$212>>2] = $$1248;
     $213 = (($211) + 4)|0;
     $214 = $213;
     HEAP32[$214>>2] = $209;
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
     break;
    }
    default: {
     $$0243 = 0;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $215 = ($$0254>>>0)>(8);
    $216 = $215 ? $$0254 : 8;
    $217 = $$1263$ | 8;
    $$1236 = 120;$$1255 = $216;$$3265 = $217;
    label = 63;
    break;
   }
   case 88: case 120:  {
    $$1236 = $$0235;$$1255 = $$0254;$$3265 = $$1263$;
    label = 63;
    break;
   }
   case 111:  {
    $257 = $9;
    $258 = $257;
    $259 = HEAP32[$258>>2]|0;
    $260 = (($257) + 4)|0;
    $261 = $260;
    $262 = HEAP32[$261>>2]|0;
    $263 = ($259|0)==(0);
    $264 = ($262|0)==(0);
    $265 = $263 & $264;
    if ($265) {
     $$0$lcssa$i300 = $14;
    } else {
     $$06$i298 = $14;$267 = $259;$271 = $262;
     while(1) {
      $266 = $267 & 7;
      $268 = $266 | 48;
      $269 = $268&255;
      $270 = ((($$06$i298)) + -1|0);
      HEAP8[$270>>0] = $269;
      $272 = (_bitshift64Lshr(($267|0),($271|0),3)|0);
      $273 = tempRet0;
      $274 = ($272|0)==(0);
      $275 = ($273|0)==(0);
      $276 = $274 & $275;
      if ($276) {
       $$0$lcssa$i300 = $270;
       break;
      } else {
       $$06$i298 = $270;$267 = $272;$271 = $273;
      }
     }
    }
    $277 = $$1263$ & 8;
    $278 = ($277|0)==(0);
    if ($278) {
     $$0228 = $$0$lcssa$i300;$$1233 = 0;$$1238 = 21464;$$2256 = $$0254;$$4266 = $$1263$;
     label = 76;
    } else {
     $279 = $$0$lcssa$i300;
     $280 = (($15) - ($279))|0;
     $281 = ($$0254|0)>($280|0);
     $282 = (($280) + 1)|0;
     $$0254$ = $281 ? $$0254 : $282;
     $$0228 = $$0$lcssa$i300;$$1233 = 0;$$1238 = 21464;$$2256 = $$0254$;$$4266 = $$1263$;
     label = 76;
    }
    break;
   }
   case 105: case 100:  {
    $283 = $9;
    $284 = $283;
    $285 = HEAP32[$284>>2]|0;
    $286 = (($283) + 4)|0;
    $287 = $286;
    $288 = HEAP32[$287>>2]|0;
    $289 = ($288|0)<(0);
    if ($289) {
     $290 = (_i64Subtract(0,0,($285|0),($288|0))|0);
     $291 = tempRet0;
     $292 = $9;
     $293 = $292;
     HEAP32[$293>>2] = $290;
     $294 = (($292) + 4)|0;
     $295 = $294;
     HEAP32[$295>>2] = $291;
     $$0232 = 1;$$0237 = 21464;$300 = $290;$301 = $291;
     label = 75;
     break L74;
    }
    $296 = $$1263$ & 2048;
    $297 = ($296|0)==(0);
    if ($297) {
     $298 = $$1263$ & 1;
     $299 = ($298|0)==(0);
     $$ = $299 ? 21464 : (21466);
     $$0232 = $298;$$0237 = $$;$300 = $285;$301 = $288;
     label = 75;
    } else {
     $$0232 = 1;$$0237 = (21465);$300 = $285;$301 = $288;
     label = 75;
    }
    break;
   }
   case 117:  {
    $188 = $9;
    $189 = $188;
    $190 = HEAP32[$189>>2]|0;
    $191 = (($188) + 4)|0;
    $192 = $191;
    $193 = HEAP32[$192>>2]|0;
    $$0232 = 0;$$0237 = 21464;$300 = $190;$301 = $193;
    label = 75;
    break;
   }
   case 99:  {
    $321 = $9;
    $322 = $321;
    $323 = HEAP32[$322>>2]|0;
    $324 = (($321) + 4)|0;
    $325 = $324;
    $326 = HEAP32[$325>>2]|0;
    $327 = $323&255;
    HEAP8[$16>>0] = $327;
    $$2 = $16;$$2234 = 0;$$2239 = 21464;$$2251 = $14;$$5 = 1;$$6268 = $187;
    break;
   }
   case 109:  {
    $328 = (___errno_location()|0);
    $329 = HEAP32[$328>>2]|0;
    $330 = (_strerror($329)|0);
    $$1 = $330;
    label = 81;
    break;
   }
   case 115:  {
    $331 = HEAP32[$9>>2]|0;
    $332 = ($331|0)!=(0|0);
    $333 = $332 ? $331 : 21474;
    $$1 = $333;
    label = 81;
    break;
   }
   case 67:  {
    $340 = $9;
    $341 = $340;
    $342 = HEAP32[$341>>2]|0;
    $343 = (($340) + 4)|0;
    $344 = $343;
    $345 = HEAP32[$344>>2]|0;
    HEAP32[$11>>2] = $342;
    HEAP32[$17>>2] = 0;
    HEAP32[$9>>2] = $11;
    $$4258458 = -1;$809 = $11;
    label = 85;
    break;
   }
   case 83:  {
    $$pre454 = HEAP32[$9>>2]|0;
    $346 = ($$0254|0)==(0);
    if ($346) {
     _pad($0,32,$$1260,0,$$1263$);
     $$0240$lcssa460 = 0;
     label = 96;
    } else {
     $$4258458 = $$0254;$809 = $$pre454;
     label = 85;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $371 = +HEAPF64[$9>>3];
    HEAP32[$6>>2] = 0;
    HEAPF64[tempDoublePtr>>3] = $371;$372 = HEAP32[tempDoublePtr>>2]|0;
    $373 = HEAP32[tempDoublePtr+4>>2]|0;
    $374 = ($373|0)<(0);
    if ($374) {
     $375 = -$371;
     $$0471$i = $375;$$0520$i = 1;$$0522$i = 21481;
    } else {
     $376 = $$1263$ & 2048;
     $377 = ($376|0)==(0);
     $378 = $$1263$ & 1;
     if ($377) {
      $379 = ($378|0)==(0);
      $$$i = $379 ? (21482) : (21487);
      $$0471$i = $371;$$0520$i = $378;$$0522$i = $$$i;
     } else {
      $$0471$i = $371;$$0520$i = 1;$$0522$i = (21484);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$0471$i;$380 = HEAP32[tempDoublePtr>>2]|0;
    $381 = HEAP32[tempDoublePtr+4>>2]|0;
    $382 = $381 & 2146435072;
    $383 = ($382>>>0)<(2146435072);
    $384 = (0)<(0);
    $385 = ($382|0)==(2146435072);
    $386 = $385 & $384;
    $387 = $383 | $386;
    do {
     if ($387) {
      $403 = (+_frexpl($$0471$i,$6));
      $404 = $403 * 2.0;
      $405 = $404 != 0.0;
      if ($405) {
       $406 = HEAP32[$6>>2]|0;
       $407 = (($406) + -1)|0;
       HEAP32[$6>>2] = $407;
      }
      $408 = $$0235 | 32;
      $409 = ($408|0)==(97);
      if ($409) {
       $410 = $$0235 & 32;
       $411 = ($410|0)==(0);
       $412 = ((($$0522$i)) + 9|0);
       $$0522$$i = $411 ? $$0522$i : $412;
       $413 = $$0520$i | 2;
       $414 = ($$0254>>>0)>(11);
       $415 = (12 - ($$0254))|0;
       $416 = ($415|0)==(0);
       $417 = $414 | $416;
       do {
        if ($417) {
         $$1472$i = $404;
        } else {
         $$0509592$i = 8.0;$$1508593$i = $415;
         while(1) {
          $418 = (($$1508593$i) + -1)|0;
          $419 = $$0509592$i * 16.0;
          $420 = ($418|0)==(0);
          if ($420) {
           break;
          } else {
           $$0509592$i = $419;$$1508593$i = $418;
          }
         }
         $421 = HEAP8[$$0522$$i>>0]|0;
         $422 = ($421<<24>>24)==(45);
         if ($422) {
          $423 = -$404;
          $424 = $423 - $419;
          $425 = $419 + $424;
          $426 = -$425;
          $$1472$i = $426;
          break;
         } else {
          $427 = $404 + $419;
          $428 = $427 - $419;
          $$1472$i = $428;
          break;
         }
        }
       } while(0);
       $429 = HEAP32[$6>>2]|0;
       $430 = ($429|0)<(0);
       $431 = (0 - ($429))|0;
       $432 = $430 ? $431 : $429;
       $433 = ($432|0)<(0);
       $434 = $433 << 31 >> 31;
       $435 = (_fmt_u($432,$434,$20)|0);
       $436 = ($435|0)==($20|0);
       if ($436) {
        HEAP8[$21>>0] = 48;
        $$0511$i = $21;
       } else {
        $$0511$i = $435;
       }
       $437 = $429 >> 31;
       $438 = $437 & 2;
       $439 = (($438) + 43)|0;
       $440 = $439&255;
       $441 = ((($$0511$i)) + -1|0);
       HEAP8[$441>>0] = $440;
       $442 = (($$0235) + 15)|0;
       $443 = $442&255;
       $444 = ((($$0511$i)) + -2|0);
       HEAP8[$444>>0] = $443;
       $notrhs$i = ($$0254|0)<(1);
       $445 = $$1263$ & 8;
       $446 = ($445|0)==(0);
       $$0524$i = $7;$$2473$i = $$1472$i;
       while(1) {
        $447 = (~~(($$2473$i)));
        $448 = (21448 + ($447)|0);
        $449 = HEAP8[$448>>0]|0;
        $450 = $449&255;
        $451 = $450 | $410;
        $452 = $451&255;
        $453 = ((($$0524$i)) + 1|0);
        HEAP8[$$0524$i>>0] = $452;
        $454 = (+($447|0));
        $455 = $$2473$i - $454;
        $456 = $455 * 16.0;
        $457 = $453;
        $458 = (($457) - ($18))|0;
        $459 = ($458|0)==(1);
        do {
         if ($459) {
          $notlhs$i = $456 == 0.0;
          $or$cond3$not$i = $notrhs$i & $notlhs$i;
          $or$cond$i = $446 & $or$cond3$not$i;
          if ($or$cond$i) {
           $$1525$i = $453;
           break;
          }
          $460 = ((($$0524$i)) + 2|0);
          HEAP8[$453>>0] = 46;
          $$1525$i = $460;
         } else {
          $$1525$i = $453;
         }
        } while(0);
        $461 = $456 != 0.0;
        if ($461) {
         $$0524$i = $$1525$i;$$2473$i = $456;
        } else {
         break;
        }
       }
       $462 = ($$0254|0)!=(0);
       $$pre700$i = $$1525$i;
       $463 = (($24) + ($$pre700$i))|0;
       $464 = ($463|0)<($$0254|0);
       $or$cond412 = $462 & $464;
       $465 = $444;
       $466 = (($25) + ($$0254))|0;
       $467 = (($466) - ($465))|0;
       $468 = (($23) - ($465))|0;
       $469 = (($468) + ($$pre700$i))|0;
       $$0526$i = $or$cond412 ? $467 : $469;
       $470 = (($$0526$i) + ($413))|0;
       _pad($0,32,$$1260,$470,$$1263$);
       $471 = HEAP32[$0>>2]|0;
       $472 = $471 & 32;
       $473 = ($472|0)==(0);
       if ($473) {
        (___fwritex($$0522$$i,$413,$0)|0);
       }
       $474 = $$1263$ ^ 65536;
       _pad($0,48,$$1260,$470,$474);
       $475 = (($$pre700$i) - ($18))|0;
       $476 = HEAP32[$0>>2]|0;
       $477 = $476 & 32;
       $478 = ($477|0)==(0);
       if ($478) {
        (___fwritex($7,$475,$0)|0);
       }
       $479 = (($22) - ($465))|0;
       $sum = (($475) + ($479))|0;
       $480 = (($$0526$i) - ($sum))|0;
       _pad($0,48,$480,0,0);
       $481 = HEAP32[$0>>2]|0;
       $482 = $481 & 32;
       $483 = ($482|0)==(0);
       if ($483) {
        (___fwritex($444,$479,$0)|0);
       }
       $484 = $$1263$ ^ 8192;
       _pad($0,32,$$1260,$470,$484);
       $485 = ($470|0)<($$1260|0);
       $$537$i = $485 ? $$1260 : $470;
       $$0470$i = $$537$i;
       break;
      }
      $486 = ($$0254|0)<(0);
      $$538$i = $486 ? 6 : $$0254;
      if ($405) {
       $487 = $404 * 268435456.0;
       $488 = HEAP32[$6>>2]|0;
       $489 = (($488) + -28)|0;
       HEAP32[$6>>2] = $489;
       $$3$i = $487;$$pr$i = $489;
      } else {
       $$pre697$i = HEAP32[$6>>2]|0;
       $$3$i = $404;$$pr$i = $$pre697$i;
      }
      $490 = ($$pr$i|0)<(0);
      $$554$i = $490 ? $5 : $26;
      $$0498$i = $$554$i;$$4$i = $$3$i;
      while(1) {
       $491 = (~~(($$4$i))>>>0);
       HEAP32[$$0498$i>>2] = $491;
       $492 = ((($$0498$i)) + 4|0);
       $493 = (+($491>>>0));
       $494 = $$4$i - $493;
       $495 = $494 * 1.0E+9;
       $496 = $495 != 0.0;
       if ($496) {
        $$0498$i = $492;$$4$i = $495;
       } else {
        break;
       }
      }
      $497 = ($$pr$i|0)>(0);
      if ($497) {
       $$1482671$i = $$554$i;$$1499670$i = $492;$498 = $$pr$i;
       while(1) {
        $499 = ($498|0)>(29);
        $500 = $499 ? 29 : $498;
        $$0488663$i = ((($$1499670$i)) + -4|0);
        $501 = ($$0488663$i>>>0)<($$1482671$i>>>0);
        do {
         if ($501) {
          $$2483$ph$i = $$1482671$i;
         } else {
          $$0488665$i = $$0488663$i;$$0497664$i = 0;
          while(1) {
           $502 = HEAP32[$$0488665$i>>2]|0;
           $503 = (_bitshift64Shl(($502|0),0,($500|0))|0);
           $504 = tempRet0;
           $505 = (_i64Add(($503|0),($504|0),($$0497664$i|0),0)|0);
           $506 = tempRet0;
           $507 = (___uremdi3(($505|0),($506|0),1000000000,0)|0);
           $508 = tempRet0;
           HEAP32[$$0488665$i>>2] = $507;
           $509 = (___udivdi3(($505|0),($506|0),1000000000,0)|0);
           $510 = tempRet0;
           $$0488$i = ((($$0488665$i)) + -4|0);
           $511 = ($$0488$i>>>0)<($$1482671$i>>>0);
           if ($511) {
            break;
           } else {
            $$0488665$i = $$0488$i;$$0497664$i = $509;
           }
          }
          $512 = ($509|0)==(0);
          if ($512) {
           $$2483$ph$i = $$1482671$i;
           break;
          }
          $513 = ((($$1482671$i)) + -4|0);
          HEAP32[$513>>2] = $509;
          $$2483$ph$i = $513;
         }
        } while(0);
        $$2500$i = $$1499670$i;
        while(1) {
         $514 = ($$2500$i>>>0)>($$2483$ph$i>>>0);
         if (!($514)) {
          break;
         }
         $515 = ((($$2500$i)) + -4|0);
         $516 = HEAP32[$515>>2]|0;
         $517 = ($516|0)==(0);
         if ($517) {
          $$2500$i = $515;
         } else {
          break;
         }
        }
        $518 = HEAP32[$6>>2]|0;
        $519 = (($518) - ($500))|0;
        HEAP32[$6>>2] = $519;
        $520 = ($519|0)>(0);
        if ($520) {
         $$1482671$i = $$2483$ph$i;$$1499670$i = $$2500$i;$498 = $519;
        } else {
         $$1482$lcssa$i = $$2483$ph$i;$$1499$lcssa$i = $$2500$i;$$pr571$i = $519;
         break;
        }
       }
      } else {
       $$1482$lcssa$i = $$554$i;$$1499$lcssa$i = $492;$$pr571$i = $$pr$i;
      }
      $521 = ($$pr571$i|0)<(0);
      if ($521) {
       $522 = (($$538$i) + 25)|0;
       $523 = (($522|0) / 9)&-1;
       $524 = (($523) + 1)|0;
       $525 = ($408|0)==(102);
       $$3484658$i = $$1482$lcssa$i;$$3501657$i = $$1499$lcssa$i;$527 = $$pr571$i;
       while(1) {
        $526 = (0 - ($527))|0;
        $528 = ($526|0)>(9);
        $529 = $528 ? 9 : $526;
        $530 = ($$3484658$i>>>0)<($$3501657$i>>>0);
        do {
         if ($530) {
          $534 = 1 << $529;
          $535 = (($534) + -1)|0;
          $536 = 1000000000 >>> $529;
          $$0487652$i = 0;$$1489651$i = $$3484658$i;
          while(1) {
           $537 = HEAP32[$$1489651$i>>2]|0;
           $538 = $537 & $535;
           $539 = $537 >>> $529;
           $540 = (($539) + ($$0487652$i))|0;
           HEAP32[$$1489651$i>>2] = $540;
           $541 = Math_imul($538, $536)|0;
           $542 = ((($$1489651$i)) + 4|0);
           $543 = ($542>>>0)<($$3501657$i>>>0);
           if ($543) {
            $$0487652$i = $541;$$1489651$i = $542;
           } else {
            break;
           }
          }
          $544 = HEAP32[$$3484658$i>>2]|0;
          $545 = ($544|0)==(0);
          $546 = ((($$3484658$i)) + 4|0);
          $$$3484$i = $545 ? $546 : $$3484658$i;
          $547 = ($541|0)==(0);
          if ($547) {
           $$$3484706$i = $$$3484$i;$$4502$i = $$3501657$i;
           break;
          }
          $548 = ((($$3501657$i)) + 4|0);
          HEAP32[$$3501657$i>>2] = $541;
          $$$3484706$i = $$$3484$i;$$4502$i = $548;
         } else {
          $531 = HEAP32[$$3484658$i>>2]|0;
          $532 = ($531|0)==(0);
          $533 = ((($$3484658$i)) + 4|0);
          $$$3484705$i = $532 ? $533 : $$3484658$i;
          $$$3484706$i = $$$3484705$i;$$4502$i = $$3501657$i;
         }
        } while(0);
        $549 = $525 ? $$554$i : $$$3484706$i;
        $550 = $$4502$i;
        $551 = $549;
        $552 = (($550) - ($551))|0;
        $553 = $552 >> 2;
        $554 = ($553|0)>($524|0);
        $555 = (($549) + ($524<<2)|0);
        $$$4502$i = $554 ? $555 : $$4502$i;
        $556 = HEAP32[$6>>2]|0;
        $557 = (($556) + ($529))|0;
        HEAP32[$6>>2] = $557;
        $558 = ($557|0)<(0);
        if ($558) {
         $$3484658$i = $$$3484706$i;$$3501657$i = $$$4502$i;$527 = $557;
        } else {
         $$3484$lcssa$i = $$$3484706$i;$$3501$lcssa$i = $$$4502$i;
         break;
        }
       }
      } else {
       $$3484$lcssa$i = $$1482$lcssa$i;$$3501$lcssa$i = $$1499$lcssa$i;
      }
      $559 = ($$3484$lcssa$i>>>0)<($$3501$lcssa$i>>>0);
      $560 = $$554$i;
      do {
       if ($559) {
        $561 = $$3484$lcssa$i;
        $562 = (($560) - ($561))|0;
        $563 = $562 >> 2;
        $564 = ($563*9)|0;
        $565 = HEAP32[$$3484$lcssa$i>>2]|0;
        $566 = ($565>>>0)<(10);
        if ($566) {
         $$1515$i = $564;
         break;
        } else {
         $$0514647$i = $564;$$0531646$i = 10;
        }
        while(1) {
         $567 = ($$0531646$i*10)|0;
         $568 = (($$0514647$i) + 1)|0;
         $569 = ($565>>>0)<($567>>>0);
         if ($569) {
          $$1515$i = $568;
          break;
         } else {
          $$0514647$i = $568;$$0531646$i = $567;
         }
        }
       } else {
        $$1515$i = 0;
       }
      } while(0);
      $570 = ($408|0)!=(102);
      $571 = $570 ? $$1515$i : 0;
      $572 = (($$538$i) - ($571))|0;
      $573 = ($408|0)==(103);
      $574 = ($$538$i|0)!=(0);
      $575 = $574 & $573;
      $$neg$i = $575 << 31 >> 31;
      $576 = (($572) + ($$neg$i))|0;
      $577 = $$3501$lcssa$i;
      $578 = (($577) - ($560))|0;
      $579 = $578 >> 2;
      $580 = ($579*9)|0;
      $581 = (($580) + -9)|0;
      $582 = ($576|0)<($581|0);
      if ($582) {
       $583 = ((($$554$i)) + 4|0);
       $584 = (($576) + 9216)|0;
       $585 = (($584|0) / 9)&-1;
       $586 = (($585) + -1024)|0;
       $587 = (($583) + ($586<<2)|0);
       $588 = (($584|0) % 9)&-1;
       $$0528639$i = (($588) + 1)|0;
       $589 = ($$0528639$i|0)<(9);
       if ($589) {
        $$0528641$i = $$0528639$i;$$1532640$i = 10;
        while(1) {
         $590 = ($$1532640$i*10)|0;
         $$0528$i = (($$0528641$i) + 1)|0;
         $exitcond$i = ($$0528$i|0)==(9);
         if ($exitcond$i) {
          $$1532$lcssa$i = $590;
          break;
         } else {
          $$0528641$i = $$0528$i;$$1532640$i = $590;
         }
        }
       } else {
        $$1532$lcssa$i = 10;
       }
       $591 = HEAP32[$587>>2]|0;
       $592 = (($591>>>0) % ($$1532$lcssa$i>>>0))&-1;
       $593 = ($592|0)==(0);
       $594 = ((($587)) + 4|0);
       $595 = ($594|0)==($$3501$lcssa$i|0);
       $or$cond540$i = $595 & $593;
       do {
        if ($or$cond540$i) {
         $$4492$i = $587;$$4518$i = $$1515$i;$$8$i = $$3484$lcssa$i;
        } else {
         $596 = (($591>>>0) / ($$1532$lcssa$i>>>0))&-1;
         $597 = $596 & 1;
         $598 = ($597|0)==(0);
         $$541$i = $598 ? 9007199254740992.0 : 9007199254740994.0;
         $599 = (($$1532$lcssa$i|0) / 2)&-1;
         $600 = ($592>>>0)<($599>>>0);
         if ($600) {
          $$0466$i = 0.5;
         } else {
          $601 = ($592|0)==($599|0);
          $or$cond543$i = $595 & $601;
          $$557$i = $or$cond543$i ? 1.0 : 1.5;
          $$0466$i = $$557$i;
         }
         $602 = ($$0520$i|0)==(0);
         do {
          if ($602) {
           $$1467$i = $$0466$i;$$1469$i = $$541$i;
          } else {
           $603 = HEAP8[$$0522$i>>0]|0;
           $604 = ($603<<24>>24)==(45);
           if (!($604)) {
            $$1467$i = $$0466$i;$$1469$i = $$541$i;
            break;
           }
           $605 = -$$541$i;
           $606 = -$$0466$i;
           $$1467$i = $606;$$1469$i = $605;
          }
         } while(0);
         $607 = (($591) - ($592))|0;
         HEAP32[$587>>2] = $607;
         $608 = $$1469$i + $$1467$i;
         $609 = $608 != $$1469$i;
         if (!($609)) {
          $$4492$i = $587;$$4518$i = $$1515$i;$$8$i = $$3484$lcssa$i;
          break;
         }
         $610 = (($607) + ($$1532$lcssa$i))|0;
         HEAP32[$587>>2] = $610;
         $611 = ($610>>>0)>(999999999);
         if ($611) {
          $$2490632$i = $587;$$5486633$i = $$3484$lcssa$i;
          while(1) {
           $612 = ((($$2490632$i)) + -4|0);
           HEAP32[$$2490632$i>>2] = 0;
           $613 = ($612>>>0)<($$5486633$i>>>0);
           if ($613) {
            $614 = ((($$5486633$i)) + -4|0);
            HEAP32[$614>>2] = 0;
            $$6$i = $614;
           } else {
            $$6$i = $$5486633$i;
           }
           $615 = HEAP32[$612>>2]|0;
           $616 = (($615) + 1)|0;
           HEAP32[$612>>2] = $616;
           $617 = ($616>>>0)>(999999999);
           if ($617) {
            $$2490632$i = $612;$$5486633$i = $$6$i;
           } else {
            $$2490$lcssa$i = $612;$$5486$lcssa$i = $$6$i;
            break;
           }
          }
         } else {
          $$2490$lcssa$i = $587;$$5486$lcssa$i = $$3484$lcssa$i;
         }
         $618 = $$5486$lcssa$i;
         $619 = (($560) - ($618))|0;
         $620 = $619 >> 2;
         $621 = ($620*9)|0;
         $622 = HEAP32[$$5486$lcssa$i>>2]|0;
         $623 = ($622>>>0)<(10);
         if ($623) {
          $$4492$i = $$2490$lcssa$i;$$4518$i = $621;$$8$i = $$5486$lcssa$i;
          break;
         } else {
          $$2516628$i = $621;$$2533627$i = 10;
         }
         while(1) {
          $624 = ($$2533627$i*10)|0;
          $625 = (($$2516628$i) + 1)|0;
          $626 = ($622>>>0)<($624>>>0);
          if ($626) {
           $$4492$i = $$2490$lcssa$i;$$4518$i = $625;$$8$i = $$5486$lcssa$i;
           break;
          } else {
           $$2516628$i = $625;$$2533627$i = $624;
          }
         }
        }
       } while(0);
       $627 = ((($$4492$i)) + 4|0);
       $628 = ($$3501$lcssa$i>>>0)>($627>>>0);
       $$$3501$i = $628 ? $627 : $$3501$lcssa$i;
       $$5519$ph$i = $$4518$i;$$7505$ph$i = $$$3501$i;$$9$ph$i = $$8$i;
      } else {
       $$5519$ph$i = $$1515$i;$$7505$ph$i = $$3501$lcssa$i;$$9$ph$i = $$3484$lcssa$i;
      }
      $629 = (0 - ($$5519$ph$i))|0;
      $$7505$i = $$7505$ph$i;
      while(1) {
       $630 = ($$7505$i>>>0)>($$9$ph$i>>>0);
       if (!($630)) {
        $$lcssa683$i = 0;
        break;
       }
       $631 = ((($$7505$i)) + -4|0);
       $632 = HEAP32[$631>>2]|0;
       $633 = ($632|0)==(0);
       if ($633) {
        $$7505$i = $631;
       } else {
        $$lcssa683$i = 1;
        break;
       }
      }
      do {
       if ($573) {
        $634 = $574&1;
        $635 = $634 ^ 1;
        $$538$$i = (($635) + ($$538$i))|0;
        $636 = ($$538$$i|0)>($$5519$ph$i|0);
        $637 = ($$5519$ph$i|0)>(-5);
        $or$cond6$i = $636 & $637;
        if ($or$cond6$i) {
         $638 = (($$0235) + -1)|0;
         $$neg572$i = (($$538$$i) + -1)|0;
         $639 = (($$neg572$i) - ($$5519$ph$i))|0;
         $$0479$i = $638;$$2476$i = $639;
        } else {
         $640 = (($$0235) + -2)|0;
         $641 = (($$538$$i) + -1)|0;
         $$0479$i = $640;$$2476$i = $641;
        }
        $642 = $$1263$ & 8;
        $643 = ($642|0)==(0);
        if (!($643)) {
         $$1480$i = $$0479$i;$$3477$i = $$2476$i;$$pre$phi704$iZ2D = $642;
         break;
        }
        do {
         if ($$lcssa683$i) {
          $644 = ((($$7505$i)) + -4|0);
          $645 = HEAP32[$644>>2]|0;
          $646 = ($645|0)==(0);
          if ($646) {
           $$2530$i = 9;
           break;
          }
          $647 = (($645>>>0) % 10)&-1;
          $648 = ($647|0)==(0);
          if ($648) {
           $$1529624$i = 0;$$3534623$i = 10;
          } else {
           $$2530$i = 0;
           break;
          }
          while(1) {
           $649 = ($$3534623$i*10)|0;
           $650 = (($$1529624$i) + 1)|0;
           $651 = (($645>>>0) % ($649>>>0))&-1;
           $652 = ($651|0)==(0);
           if ($652) {
            $$1529624$i = $650;$$3534623$i = $649;
           } else {
            $$2530$i = $650;
            break;
           }
          }
         } else {
          $$2530$i = 9;
         }
        } while(0);
        $653 = $$0479$i | 32;
        $654 = ($653|0)==(102);
        $655 = $$7505$i;
        $656 = (($655) - ($560))|0;
        $657 = $656 >> 2;
        $658 = ($657*9)|0;
        $659 = (($658) + -9)|0;
        if ($654) {
         $660 = (($659) - ($$2530$i))|0;
         $661 = ($660|0)<(0);
         $$544$i = $661 ? 0 : $660;
         $662 = ($$2476$i|0)<($$544$i|0);
         $$2476$$545$i = $662 ? $$2476$i : $$544$i;
         $$1480$i = $$0479$i;$$3477$i = $$2476$$545$i;$$pre$phi704$iZ2D = 0;
         break;
        } else {
         $663 = (($659) + ($$5519$ph$i))|0;
         $664 = (($663) - ($$2530$i))|0;
         $665 = ($664|0)<(0);
         $$546$i = $665 ? 0 : $664;
         $666 = ($$2476$i|0)<($$546$i|0);
         $$2476$$547$i = $666 ? $$2476$i : $$546$i;
         $$1480$i = $$0479$i;$$3477$i = $$2476$$547$i;$$pre$phi704$iZ2D = 0;
         break;
        }
       } else {
        $$pre703$i = $$1263$ & 8;
        $$1480$i = $$0235;$$3477$i = $$538$i;$$pre$phi704$iZ2D = $$pre703$i;
       }
      } while(0);
      $667 = $$3477$i | $$pre$phi704$iZ2D;
      $668 = ($667|0)!=(0);
      $669 = $668&1;
      $670 = $$1480$i | 32;
      $671 = ($670|0)==(102);
      if ($671) {
       $672 = ($$5519$ph$i|0)>(0);
       $673 = $672 ? $$5519$ph$i : 0;
       $$2513$i = 0;$$pn$i = $673;
      } else {
       $674 = ($$5519$ph$i|0)<(0);
       $675 = $674 ? $629 : $$5519$ph$i;
       $676 = ($675|0)<(0);
       $677 = $676 << 31 >> 31;
       $678 = (_fmt_u($675,$677,$20)|0);
       $679 = $678;
       $680 = (($22) - ($679))|0;
       $681 = ($680|0)<(2);
       if ($681) {
        $$1512617$i = $678;
        while(1) {
         $682 = ((($$1512617$i)) + -1|0);
         HEAP8[$682>>0] = 48;
         $683 = $682;
         $684 = (($22) - ($683))|0;
         $685 = ($684|0)<(2);
         if ($685) {
          $$1512617$i = $682;
         } else {
          $$1512$lcssa$i = $682;
          break;
         }
        }
       } else {
        $$1512$lcssa$i = $678;
       }
       $686 = $$5519$ph$i >> 31;
       $687 = $686 & 2;
       $688 = (($687) + 43)|0;
       $689 = $688&255;
       $690 = ((($$1512$lcssa$i)) + -1|0);
       HEAP8[$690>>0] = $689;
       $691 = $$1480$i&255;
       $692 = ((($$1512$lcssa$i)) + -2|0);
       HEAP8[$692>>0] = $691;
       $693 = $692;
       $694 = (($22) - ($693))|0;
       $$2513$i = $692;$$pn$i = $694;
      }
      $695 = (($$0520$i) + 1)|0;
      $696 = (($695) + ($$3477$i))|0;
      $$1527$i = (($696) + ($669))|0;
      $697 = (($$1527$i) + ($$pn$i))|0;
      _pad($0,32,$$1260,$697,$$1263$);
      $698 = HEAP32[$0>>2]|0;
      $699 = $698 & 32;
      $700 = ($699|0)==(0);
      if ($700) {
       (___fwritex($$0522$i,$$0520$i,$0)|0);
      }
      $701 = $$1263$ ^ 65536;
      _pad($0,48,$$1260,$697,$701);
      do {
       if ($671) {
        $702 = ($$9$ph$i>>>0)>($$554$i>>>0);
        $$0496$$9$i = $702 ? $$554$i : $$9$ph$i;
        $$5493606$i = $$0496$$9$i;
        while(1) {
         $703 = HEAP32[$$5493606$i>>2]|0;
         $704 = (_fmt_u($703,0,$27)|0);
         $705 = ($$5493606$i|0)==($$0496$$9$i|0);
         do {
          if ($705) {
           $711 = ($704|0)==($27|0);
           if (!($711)) {
            $$1465$i = $704;
            break;
           }
           HEAP8[$29>>0] = 48;
           $$1465$i = $29;
          } else {
           $706 = ($704>>>0)>($7>>>0);
           if (!($706)) {
            $$1465$i = $704;
            break;
           }
           $707 = $704;
           $708 = (($707) - ($18))|0;
           _memset(($7|0),48,($708|0))|0;
           $$0464603$i = $704;
           while(1) {
            $709 = ((($$0464603$i)) + -1|0);
            $710 = ($709>>>0)>($7>>>0);
            if ($710) {
             $$0464603$i = $709;
            } else {
             $$1465$i = $709;
             break;
            }
           }
          }
         } while(0);
         $712 = HEAP32[$0>>2]|0;
         $713 = $712 & 32;
         $714 = ($713|0)==(0);
         if ($714) {
          $715 = $$1465$i;
          $716 = (($28) - ($715))|0;
          (___fwritex($$1465$i,$716,$0)|0);
         }
         $717 = ((($$5493606$i)) + 4|0);
         $718 = ($717>>>0)>($$554$i>>>0);
         if ($718) {
          break;
         } else {
          $$5493606$i = $717;
         }
        }
        $719 = ($667|0)==(0);
        do {
         if (!($719)) {
          $720 = HEAP32[$0>>2]|0;
          $721 = $720 & 32;
          $722 = ($721|0)==(0);
          if (!($722)) {
           break;
          }
          (___fwritex(23408,1,$0)|0);
         }
        } while(0);
        $723 = ($717>>>0)<($$7505$i>>>0);
        $724 = ($$3477$i|0)>(0);
        $725 = $724 & $723;
        if ($725) {
         $$4478600$i = $$3477$i;$$6494599$i = $717;
         while(1) {
          $726 = HEAP32[$$6494599$i>>2]|0;
          $727 = (_fmt_u($726,0,$27)|0);
          $728 = ($727>>>0)>($7>>>0);
          if ($728) {
           $729 = $727;
           $730 = (($729) - ($18))|0;
           _memset(($7|0),48,($730|0))|0;
           $$0463594$i = $727;
           while(1) {
            $731 = ((($$0463594$i)) + -1|0);
            $732 = ($731>>>0)>($7>>>0);
            if ($732) {
             $$0463594$i = $731;
            } else {
             $$0463$lcssa$i = $731;
             break;
            }
           }
          } else {
           $$0463$lcssa$i = $727;
          }
          $733 = HEAP32[$0>>2]|0;
          $734 = $733 & 32;
          $735 = ($734|0)==(0);
          if ($735) {
           $736 = ($$4478600$i|0)>(9);
           $737 = $736 ? 9 : $$4478600$i;
           (___fwritex($$0463$lcssa$i,$737,$0)|0);
          }
          $738 = ((($$6494599$i)) + 4|0);
          $739 = (($$4478600$i) + -9)|0;
          $740 = ($738>>>0)<($$7505$i>>>0);
          $741 = ($$4478600$i|0)>(9);
          $742 = $741 & $740;
          if ($742) {
           $$4478600$i = $739;$$6494599$i = $738;
          } else {
           $$4478$lcssa$i = $739;
           break;
          }
         }
        } else {
         $$4478$lcssa$i = $$3477$i;
        }
        $743 = (($$4478$lcssa$i) + 9)|0;
        _pad($0,48,$743,9,0);
       } else {
        $744 = ((($$9$ph$i)) + 4|0);
        $$7505$$i = $$lcssa683$i ? $$7505$i : $744;
        $745 = ($$3477$i|0)>(-1);
        if ($745) {
         $746 = ($$pre$phi704$iZ2D|0)==(0);
         $$5611$i = $$3477$i;$$7495610$i = $$9$ph$i;
         while(1) {
          $747 = HEAP32[$$7495610$i>>2]|0;
          $748 = (_fmt_u($747,0,$27)|0);
          $749 = ($748|0)==($27|0);
          if ($749) {
           HEAP8[$29>>0] = 48;
           $$0$i = $29;
          } else {
           $$0$i = $748;
          }
          $750 = ($$7495610$i|0)==($$9$ph$i|0);
          do {
           if ($750) {
            $754 = ((($$0$i)) + 1|0);
            $755 = HEAP32[$0>>2]|0;
            $756 = $755 & 32;
            $757 = ($756|0)==(0);
            if ($757) {
             (___fwritex($$0$i,1,$0)|0);
            }
            $758 = ($$5611$i|0)<(1);
            $or$cond552$i = $746 & $758;
            if ($or$cond552$i) {
             $$2$i = $754;
             break;
            }
            $759 = HEAP32[$0>>2]|0;
            $760 = $759 & 32;
            $761 = ($760|0)==(0);
            if (!($761)) {
             $$2$i = $754;
             break;
            }
            (___fwritex(23408,1,$0)|0);
            $$2$i = $754;
           } else {
            $751 = ($$0$i>>>0)>($7>>>0);
            if (!($751)) {
             $$2$i = $$0$i;
             break;
            }
            $scevgep694$i = (($$0$i) + ($19)|0);
            $scevgep694695$i = $scevgep694$i;
            _memset(($7|0),48,($scevgep694695$i|0))|0;
            $$1607$i = $$0$i;
            while(1) {
             $752 = ((($$1607$i)) + -1|0);
             $753 = ($752>>>0)>($7>>>0);
             if ($753) {
              $$1607$i = $752;
             } else {
              $$2$i = $752;
              break;
             }
            }
           }
          } while(0);
          $762 = $$2$i;
          $763 = (($28) - ($762))|0;
          $764 = HEAP32[$0>>2]|0;
          $765 = $764 & 32;
          $766 = ($765|0)==(0);
          if ($766) {
           $767 = ($$5611$i|0)>($763|0);
           $768 = $767 ? $763 : $$5611$i;
           (___fwritex($$2$i,$768,$0)|0);
          }
          $769 = (($$5611$i) - ($763))|0;
          $770 = ((($$7495610$i)) + 4|0);
          $771 = ($770>>>0)<($$7505$$i>>>0);
          $772 = ($769|0)>(-1);
          $773 = $771 & $772;
          if ($773) {
           $$5611$i = $769;$$7495610$i = $770;
          } else {
           $$5$lcssa$i = $769;
           break;
          }
         }
        } else {
         $$5$lcssa$i = $$3477$i;
        }
        $774 = (($$5$lcssa$i) + 18)|0;
        _pad($0,48,$774,18,0);
        $775 = HEAP32[$0>>2]|0;
        $776 = $775 & 32;
        $777 = ($776|0)==(0);
        if (!($777)) {
         break;
        }
        $778 = $$2513$i;
        $779 = (($22) - ($778))|0;
        (___fwritex($$2513$i,$779,$0)|0);
       }
      } while(0);
      $780 = $$1263$ ^ 8192;
      _pad($0,32,$$1260,$697,$780);
      $781 = ($697|0)<($$1260|0);
      $$553$i = $781 ? $$1260 : $697;
      $$0470$i = $$553$i;
     } else {
      $388 = $$0235 & 32;
      $389 = ($388|0)!=(0);
      $390 = $389 ? 21500 : 21504;
      $391 = ($$0471$i != $$0471$i) | (0.0 != 0.0);
      $392 = $389 ? 21508 : 21512;
      $$1521$i = $391 ? 0 : $$0520$i;
      $$0510$i = $391 ? $392 : $390;
      $393 = (($$1521$i) + 3)|0;
      _pad($0,32,$$1260,$393,$187);
      $394 = HEAP32[$0>>2]|0;
      $395 = $394 & 32;
      $396 = ($395|0)==(0);
      if ($396) {
       (___fwritex($$0522$i,$$1521$i,$0)|0);
       $$pre$i = HEAP32[$0>>2]|0;
       $398 = $$pre$i;
      } else {
       $398 = $394;
      }
      $397 = $398 & 32;
      $399 = ($397|0)==(0);
      if ($399) {
       (___fwritex($$0510$i,3,$0)|0);
      }
      $400 = $$1263$ ^ 8192;
      _pad($0,32,$$1260,$393,$400);
      $401 = ($393|0)<($$1260|0);
      $402 = $401 ? $$1260 : $393;
      $$0470$i = $402;
     }
    } while(0);
    $$0243 = $$0470$i;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
    continue L1;
    break;
   }
   default: {
    $$2 = $$0321;$$2234 = 0;$$2239 = 21464;$$2251 = $14;$$5 = $$0254;$$6268 = $$1263$;
   }
   }
  } while(0);
  L310: do {
   if ((label|0) == 63) {
    label = 0;
    $218 = $9;
    $219 = $218;
    $220 = HEAP32[$219>>2]|0;
    $221 = (($218) + 4)|0;
    $222 = $221;
    $223 = HEAP32[$222>>2]|0;
    $224 = $$1236 & 32;
    $225 = ($220|0)==(0);
    $226 = ($223|0)==(0);
    $227 = $225 & $226;
    if ($227) {
     $$05$lcssa$i = $14;$248 = 0;$250 = 0;
    } else {
     $$056$i = $14;$229 = $220;$236 = $223;
     while(1) {
      $228 = $229 & 15;
      $230 = (21448 + ($228)|0);
      $231 = HEAP8[$230>>0]|0;
      $232 = $231&255;
      $233 = $232 | $224;
      $234 = $233&255;
      $235 = ((($$056$i)) + -1|0);
      HEAP8[$235>>0] = $234;
      $237 = (_bitshift64Lshr(($229|0),($236|0),4)|0);
      $238 = tempRet0;
      $239 = ($237|0)==(0);
      $240 = ($238|0)==(0);
      $241 = $239 & $240;
      if ($241) {
       break;
      } else {
       $$056$i = $235;$229 = $237;$236 = $238;
      }
     }
     $242 = $9;
     $243 = $242;
     $244 = HEAP32[$243>>2]|0;
     $245 = (($242) + 4)|0;
     $246 = $245;
     $247 = HEAP32[$246>>2]|0;
     $$05$lcssa$i = $235;$248 = $244;$250 = $247;
    }
    $249 = ($248|0)==(0);
    $251 = ($250|0)==(0);
    $252 = $249 & $251;
    $253 = $$3265 & 8;
    $254 = ($253|0)==(0);
    $or$cond282 = $254 | $252;
    $255 = $$1236 >> 4;
    $256 = (21464 + ($255)|0);
    $$332 = $or$cond282 ? 21464 : $256;
    $$333 = $or$cond282 ? 0 : 2;
    $$0228 = $$05$lcssa$i;$$1233 = $$333;$$1238 = $$332;$$2256 = $$1255;$$4266 = $$3265;
    label = 76;
   }
   else if ((label|0) == 75) {
    label = 0;
    $302 = (_fmt_u($300,$301,$14)|0);
    $$0228 = $302;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $$1263$;
    label = 76;
   }
   else if ((label|0) == 81) {
    label = 0;
    $334 = (_memchr($$1,0,$$0254)|0);
    $335 = ($334|0)==(0|0);
    $336 = $334;
    $337 = $$1;
    $338 = (($336) - ($337))|0;
    $339 = (($$1) + ($$0254)|0);
    $$3257 = $335 ? $$0254 : $338;
    $$1250 = $335 ? $339 : $334;
    $$2 = $$1;$$2234 = 0;$$2239 = 21464;$$2251 = $$1250;$$5 = $$3257;$$6268 = $187;
   }
   else if ((label|0) == 85) {
    label = 0;
    $$0229396 = $809;$$0240395 = 0;$$1244394 = 0;
    while(1) {
     $347 = HEAP32[$$0229396>>2]|0;
     $348 = ($347|0)==(0);
     if ($348) {
      $$0240$lcssa = $$0240395;$$2245 = $$1244394;
      break;
     }
     $349 = (_wctomb($12,$347)|0);
     $350 = ($349|0)<(0);
     $351 = (($$4258458) - ($$0240395))|0;
     $352 = ($349>>>0)>($351>>>0);
     $or$cond285 = $350 | $352;
     if ($or$cond285) {
      $$0240$lcssa = $$0240395;$$2245 = $349;
      break;
     }
     $353 = ((($$0229396)) + 4|0);
     $354 = (($349) + ($$0240395))|0;
     $355 = ($$4258458>>>0)>($354>>>0);
     if ($355) {
      $$0229396 = $353;$$0240395 = $354;$$1244394 = $349;
     } else {
      $$0240$lcssa = $354;$$2245 = $349;
      break;
     }
    }
    $356 = ($$2245|0)<(0);
    if ($356) {
     $$0 = -1;
     break L1;
    }
    _pad($0,32,$$1260,$$0240$lcssa,$$1263$);
    $357 = ($$0240$lcssa|0)==(0);
    if ($357) {
     $$0240$lcssa460 = 0;
     label = 96;
    } else {
     $$1230407 = $809;$$1241406 = 0;
     while(1) {
      $358 = HEAP32[$$1230407>>2]|0;
      $359 = ($358|0)==(0);
      if ($359) {
       $$0240$lcssa460 = $$0240$lcssa;
       label = 96;
       break L310;
      }
      $360 = ((($$1230407)) + 4|0);
      $361 = (_wctomb($12,$358)|0);
      $362 = (($361) + ($$1241406))|0;
      $363 = ($362|0)>($$0240$lcssa|0);
      if ($363) {
       $$0240$lcssa460 = $$0240$lcssa;
       label = 96;
       break L310;
      }
      $364 = HEAP32[$0>>2]|0;
      $365 = $364 & 32;
      $366 = ($365|0)==(0);
      if ($366) {
       (___fwritex($12,$361,$0)|0);
      }
      $367 = ($362>>>0)<($$0240$lcssa>>>0);
      if ($367) {
       $$1230407 = $360;$$1241406 = $362;
      } else {
       $$0240$lcssa460 = $$0240$lcssa;
       label = 96;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 96) {
   label = 0;
   $368 = $$1263$ ^ 8192;
   _pad($0,32,$$1260,$$0240$lcssa460,$368);
   $369 = ($$1260|0)>($$0240$lcssa460|0);
   $370 = $369 ? $$1260 : $$0240$lcssa460;
   $$0243 = $370;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
   continue;
  }
  if ((label|0) == 76) {
   label = 0;
   $303 = ($$2256|0)>(-1);
   $304 = $$4266 & -65537;
   $$$4266 = $303 ? $304 : $$4266;
   $305 = $9;
   $306 = $305;
   $307 = HEAP32[$306>>2]|0;
   $308 = (($305) + 4)|0;
   $309 = $308;
   $310 = HEAP32[$309>>2]|0;
   $311 = ($307|0)!=(0);
   $312 = ($310|0)!=(0);
   $313 = $311 | $312;
   $314 = ($$2256|0)!=(0);
   $or$cond = $314 | $313;
   if ($or$cond) {
    $315 = $$0228;
    $316 = (($15) - ($315))|0;
    $317 = $313&1;
    $318 = $317 ^ 1;
    $319 = (($318) + ($316))|0;
    $320 = ($$2256|0)>($319|0);
    $$2256$ = $320 ? $$2256 : $319;
    $$2 = $$0228;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $14;$$5 = $$2256$;$$6268 = $$$4266;
   } else {
    $$2 = $14;$$2234 = $$1233;$$2239 = $$1238;$$2251 = $14;$$5 = 0;$$6268 = $$$4266;
   }
  }
  $782 = $$2251;
  $783 = $$2;
  $784 = (($782) - ($783))|0;
  $785 = ($$5|0)<($784|0);
  $$$5 = $785 ? $784 : $$5;
  $786 = (($$$5) + ($$2234))|0;
  $787 = ($$1260|0)<($786|0);
  $$2261 = $787 ? $786 : $$1260;
  _pad($0,32,$$2261,$786,$$6268);
  $788 = HEAP32[$0>>2]|0;
  $789 = $788 & 32;
  $790 = ($789|0)==(0);
  if ($790) {
   (___fwritex($$2239,$$2234,$0)|0);
  }
  $791 = $$6268 ^ 65536;
  _pad($0,48,$$2261,$786,$791);
  _pad($0,48,$$$5,$784,0);
  $792 = HEAP32[$0>>2]|0;
  $793 = $792 & 32;
  $794 = ($793|0)==(0);
  if ($794) {
   (___fwritex($$2,$784,$0)|0);
  }
  $795 = $$6268 ^ 8192;
  _pad($0,32,$$2261,$786,$795);
  $$0243 = $$2261;$$0247 = $$1248;$$0269 = $$3272;$$0321 = $158;
 }
 L345: do {
  if ((label|0) == 243) {
   $796 = ($0|0)==(0|0);
   if ($796) {
    $797 = ($$0269|0)==(0);
    if ($797) {
     $$0 = 0;
    } else {
     $$2242381 = 1;
     while(1) {
      $798 = (($4) + ($$2242381<<2)|0);
      $799 = HEAP32[$798>>2]|0;
      $800 = ($799|0)==(0);
      if ($800) {
       $$3379 = $$2242381;
       break;
      }
      $801 = (($3) + ($$2242381<<3)|0);
      _pop_arg_554($801,$799,$2);
      $802 = (($$2242381) + 1)|0;
      $803 = ($802|0)<(10);
      if ($803) {
       $$2242381 = $802;
      } else {
       $$0 = 1;
       break L345;
      }
     }
     while(1) {
      $806 = (($4) + ($$3379<<2)|0);
      $807 = HEAP32[$806>>2]|0;
      $808 = ($807|0)==(0);
      $804 = (($$3379) + 1)|0;
      if (!($808)) {
       $$0 = -1;
       break L345;
      }
      $805 = ($804|0)<(10);
      if ($805) {
       $$3379 = $804;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$032 = 0, $$033 = 0, $$034 = 0, $$1 = 0, $$pre = 0, $$pre38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$032 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (FUNCTION_TABLE_iiii[$16 & 1023]($2,$0,$1)|0);
    $$032 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)>(-1);
   L10: do {
    if ($20) {
     $$0 = $1;
     while(1) {
      $21 = ($$0|0)==(0);
      if ($21) {
       $$033 = $1;$$034 = $0;$$1 = 0;$32 = $14;
       break L10;
      }
      $22 = (($$0) + -1)|0;
      $23 = (($0) + ($22)|0);
      $24 = HEAP8[$23>>0]|0;
      $25 = ($24<<24>>24)==(10);
      if ($25) {
       break;
      } else {
       $$0 = $22;
      }
     }
     $26 = ((($2)) + 36|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (FUNCTION_TABLE_iiii[$27 & 1023]($2,$0,$$0)|0);
     $29 = ($28>>>0)<($$0>>>0);
     if ($29) {
      $$032 = $$0;
      break L5;
     }
     $30 = (($0) + ($$0)|0);
     $31 = (($1) - ($$0))|0;
     $$pre38 = HEAP32[$9>>2]|0;
     $$033 = $31;$$034 = $30;$$1 = $$0;$32 = $$pre38;
    } else {
     $$033 = $1;$$034 = $0;$$1 = 0;$32 = $14;
    }
   } while(0);
   _memcpy(($32|0),($$034|0),($$033|0))|0;
   $33 = HEAP32[$9>>2]|0;
   $34 = (($33) + ($$033)|0);
   HEAP32[$9>>2] = $34;
   $35 = (($$1) + ($$033))|0;
   $$032 = $35;
  }
 } while(0);
 return ($$032|0);
}
function _pop_arg_554($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___uremdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = $10 | 48;
   $13 = $12&255;
   $14 = ((($$0914)) + -1|0);
   HEAP8[$14>>0] = $13;
   $15 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $16 = tempRet0;
   $17 = ($9>>>0)>(9);
   $18 = ($8>>>0)>(4294967295);
   $19 = ($9|0)==(9);
   $20 = $19 & $18;
   $21 = $17 | $20;
   if ($21) {
    $$0914 = $14;$8 = $15;$9 = $16;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $15;$$09$lcssa = $14;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $22 = ($$010$lcssa$off0|0)==(0);
 if ($22) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $23 = (($$012>>>0) % 10)&-1;
   $24 = $23 | 48;
   $25 = $24&255;
   $26 = ((($$111)) + -1|0);
   HEAP8[$26>>0] = $25;
   $27 = (($$012>>>0) / 10)&-1;
   $28 = ($$012>>>0)<(10);
   if ($28) {
    $$1$lcssa = $26;
    break;
   } else {
    $$012 = $27;$$111 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $$011$lcssa = 0, $$01113 = 0, $$015 = 0, $$112 = 0, $$114 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$015 = 0;
 while(1) {
  $2 = (21516 + ($$015)|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = $3&255;
  $5 = ($4|0)==($0|0);
  if ($5) {
   label = 2;
   break;
  }
  $6 = (($$015) + 1)|0;
  $7 = ($6|0)==(87);
  if ($7) {
   $$01113 = 21604;$$114 = 87;
   label = 5;
   break;
  } else {
   $$015 = $6;
  }
 }
 if ((label|0) == 2) {
  $1 = ($$015|0)==(0);
  if ($1) {
   $$011$lcssa = 21604;
  } else {
   $$01113 = 21604;$$114 = $$015;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $$112 = $$01113;
   while(1) {
    $8 = HEAP8[$$112>>0]|0;
    $9 = ($8<<24>>24)==(0);
    $10 = ((($$112)) + 1|0);
    if ($9) {
     break;
    } else {
     $$112 = $10;
    }
   }
   $11 = (($$114) + -1)|0;
   $12 = ($11|0)==(0);
   if ($12) {
    $$011$lcssa = $10;
    break;
   } else {
    $$01113 = $10;$$114 = $11;
    label = 5;
   }
  }
 }
 return ($$011$lcssa|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$13745 = 0, $$140 = 0, $$2 = 0, $$23839 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   $$2 = $$035$lcssa;$$3 = 0;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $$2 = $$035$lcssa65;$$3 = $$036$lcssa64;
   } else {
    $20 = Math_imul($3, 16843009)|0;
    $21 = ($$036$lcssa64>>>0)>(3);
    L11: do {
     if ($21) {
      $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
      while(1) {
       $22 = HEAP32[$$046>>2]|0;
       $23 = $22 ^ $20;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        break;
       }
       $29 = ((($$046)) + 4|0);
       $30 = (($$13745) + -4)|0;
       $31 = ($30>>>0)>(3);
       if ($31) {
        $$046 = $29;$$13745 = $30;
       } else {
        $$0$lcssa = $29;$$137$lcssa = $30;
        label = 11;
        break L11;
       }
      }
      $$140 = $$046;$$23839 = $$13745;
     } else {
      $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $32 = ($$137$lcssa|0)==(0);
     if ($32) {
      $$2 = $$0$lcssa;$$3 = 0;
      break;
     } else {
      $$140 = $$0$lcssa;$$23839 = $$137$lcssa;
     }
    }
    while(1) {
     $33 = HEAP8[$$140>>0]|0;
     $34 = ($33<<24>>24)==($18<<24>>24);
     if ($34) {
      $$2 = $$140;$$3 = $$23839;
      break L8;
     }
     $35 = ((($$140)) + 1|0);
     $36 = (($$23839) + -1)|0;
     $37 = ($36|0)==(0);
     if ($37) {
      $$2 = $35;$$3 = 0;
      break;
     } else {
      $$140 = $35;$$23839 = $36;
     }
    }
   }
  }
 } while(0);
 $38 = ($$3|0)!=(0);
 $39 = $38 ? $$2 : 0;
 return ($39|0);
}
function _pad($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa16 = 0, $$012 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 do {
  if ($or$cond) {
   $9 = (($2) - ($3))|0;
   $10 = ($9>>>0)>(256);
   $11 = $10 ? 256 : $9;
   _memset(($5|0),($1|0),($11|0))|0;
   $12 = ($9>>>0)>(255);
   $13 = HEAP32[$0>>2]|0;
   $14 = $13 & 32;
   $15 = ($14|0)==(0);
   if ($12) {
    $16 = (($2) - ($3))|0;
    $$012 = $9;$23 = $13;$24 = $15;
    while(1) {
     if ($24) {
      (___fwritex($5,256,$0)|0);
      $$pre = HEAP32[$0>>2]|0;
      $20 = $$pre;
     } else {
      $20 = $23;
     }
     $17 = (($$012) + -256)|0;
     $18 = ($17>>>0)>(255);
     $19 = $20 & 32;
     $21 = ($19|0)==(0);
     if ($18) {
      $$012 = $17;$23 = $20;$24 = $21;
     } else {
      break;
     }
    }
    $22 = $16 & 255;
    if ($21) {
     $$0$lcssa16 = $22;
    } else {
     break;
    }
   } else {
    if ($15) {
     $$0$lcssa16 = $9;
    } else {
     break;
    }
   }
   (___fwritex($5,$$0$lcssa16,$0)|0);
  }
 } while(0);
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = ($1>>>0)<(2048);
   if ($6) {
    $7 = $1 >>> 6;
    $8 = $7 | 192;
    $9 = $8&255;
    $10 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $9;
    $11 = $1 & 63;
    $12 = $11 | 128;
    $13 = $12&255;
    HEAP8[$10>>0] = $13;
    $$0 = 2;
    break;
   }
   $14 = ($1>>>0)<(55296);
   $15 = $1 & -8192;
   $16 = ($15|0)==(57344);
   $or$cond = $14 | $16;
   if ($or$cond) {
    $17 = $1 >>> 12;
    $18 = $17 | 224;
    $19 = $18&255;
    $20 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $19;
    $21 = $1 >>> 6;
    $22 = $21 & 63;
    $23 = $22 | 128;
    $24 = $23&255;
    $25 = ((($0)) + 2|0);
    HEAP8[$20>>0] = $24;
    $26 = $1 & 63;
    $27 = $26 | 128;
    $28 = $27&255;
    HEAP8[$25>>0] = $28;
    $$0 = 3;
    break;
   }
   $29 = (($1) + -65536)|0;
   $30 = ($29>>>0)<(1048576);
   if ($30) {
    $31 = $1 >>> 18;
    $32 = $31 | 240;
    $33 = $32&255;
    $34 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $33;
    $35 = $1 >>> 12;
    $36 = $35 & 63;
    $37 = $36 | 128;
    $38 = $37&255;
    $39 = ((($0)) + 2|0);
    HEAP8[$34>>0] = $38;
    $40 = $1 >>> 6;
    $41 = $40 & 63;
    $42 = $41 | 128;
    $43 = $42&255;
    $44 = ((($0)) + 3|0);
    HEAP8[$39>>0] = $43;
    $45 = $1 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    HEAP8[$44>>0] = $47;
    $$0 = 4;
    break;
   } else {
    $48 = (___errno_location()|0);
    HEAP32[$48>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _strncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpncpy($0,$1,$2)|0);
 return ($0|0);
}
function ___stpncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03753 = 0, $$038$lcssa = 0, $$038$lcssa79 = 0, $$03866 = 0, $$039$lcssa = 0, $$039$lcssa78 = 0, $$03965 = 0, $$041$lcssa = 0, $$041$lcssa77 = 0, $$04164 = 0, $$054 = 0, $$1$lcssa = 0, $$140$ph = 0, $$14046 = 0, $$142$ph = 0, $$14245 = 0, $$152 = 0, $$2$ph = 0;
 var $$243 = 0, $$247 = 0, $$3 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond63 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1;
 $4 = $0;
 $5 = $3 ^ $4;
 $6 = $5 & 3;
 $7 = ($6|0)==(0);
 do {
  if ($7) {
   $8 = $3 & 3;
   $9 = ($8|0)!=(0);
   $10 = ($2|0)!=(0);
   $or$cond63 = $10 & $9;
   L3: do {
    if ($or$cond63) {
     $$03866 = $2;$$03965 = $1;$$04164 = $0;
     while(1) {
      $11 = HEAP8[$$03965>>0]|0;
      HEAP8[$$04164>>0] = $11;
      $12 = ($11<<24>>24)==(0);
      if ($12) {
       $$038$lcssa79 = $$03866;$$039$lcssa78 = $$03965;$$041$lcssa77 = $$04164;
       break L3;
      }
      $13 = (($$03866) + -1)|0;
      $14 = ((($$03965)) + 1|0);
      $15 = ((($$04164)) + 1|0);
      $16 = $14;
      $17 = $16 & 3;
      $18 = ($17|0)!=(0);
      $19 = ($13|0)!=(0);
      $or$cond = $19 & $18;
      if ($or$cond) {
       $$03866 = $13;$$03965 = $14;$$04164 = $15;
      } else {
       $$038$lcssa = $13;$$039$lcssa = $14;$$041$lcssa = $15;$$lcssa = $19;
       label = 5;
       break;
      }
     }
    } else {
     $$038$lcssa = $2;$$039$lcssa = $1;$$041$lcssa = $0;$$lcssa = $10;
     label = 5;
    }
   } while(0);
   if ((label|0) == 5) {
    if ($$lcssa) {
     $$038$lcssa79 = $$038$lcssa;$$039$lcssa78 = $$039$lcssa;$$041$lcssa77 = $$041$lcssa;
    } else {
     $$243 = $$041$lcssa;$$3 = 0;
     break;
    }
   }
   $20 = HEAP8[$$039$lcssa78>>0]|0;
   $21 = ($20<<24>>24)==(0);
   if ($21) {
    $$243 = $$041$lcssa77;$$3 = $$038$lcssa79;
   } else {
    $22 = ($$038$lcssa79>>>0)>(3);
    L11: do {
     if ($22) {
      $$03753 = $$041$lcssa77;$$054 = $$039$lcssa78;$$152 = $$038$lcssa79;
      while(1) {
       $23 = HEAP32[$$054>>2]|0;
       $24 = (($23) + -16843009)|0;
       $25 = $23 & -2139062144;
       $26 = $25 ^ -2139062144;
       $27 = $26 & $24;
       $28 = ($27|0)==(0);
       if (!($28)) {
        $$0$lcssa = $$054;$$037$lcssa = $$03753;$$1$lcssa = $$152;
        break L11;
       }
       HEAP32[$$03753>>2] = $23;
       $29 = (($$152) + -4)|0;
       $30 = ((($$054)) + 4|0);
       $31 = ((($$03753)) + 4|0);
       $32 = ($29>>>0)>(3);
       if ($32) {
        $$03753 = $31;$$054 = $30;$$152 = $29;
       } else {
        $$0$lcssa = $30;$$037$lcssa = $31;$$1$lcssa = $29;
        break;
       }
      }
     } else {
      $$0$lcssa = $$039$lcssa78;$$037$lcssa = $$041$lcssa77;$$1$lcssa = $$038$lcssa79;
     }
    } while(0);
    $$140$ph = $$0$lcssa;$$142$ph = $$037$lcssa;$$2$ph = $$1$lcssa;
    label = 11;
   }
  } else {
   $$140$ph = $1;$$142$ph = $0;$$2$ph = $2;
   label = 11;
  }
 } while(0);
 L16: do {
  if ((label|0) == 11) {
   $33 = ($$2$ph|0)==(0);
   if ($33) {
    $$243 = $$142$ph;$$3 = 0;
   } else {
    $$14046 = $$140$ph;$$14245 = $$142$ph;$$247 = $$2$ph;
    while(1) {
     $34 = HEAP8[$$14046>>0]|0;
     HEAP8[$$14245>>0] = $34;
     $35 = ($34<<24>>24)==(0);
     if ($35) {
      $$243 = $$14245;$$3 = $$247;
      break L16;
     }
     $36 = (($$247) + -1)|0;
     $37 = ((($$14046)) + 1|0);
     $38 = ((($$14245)) + 1|0);
     $39 = ($36|0)==(0);
     if ($39) {
      $$243 = $38;$$3 = 0;
      break;
     } else {
      $$14046 = $37;$$14245 = $38;$$247 = $36;
     }
    }
   }
  }
 } while(0);
 _memset(($$243|0),0,($$3|0))|0;
 return ($$243|0);
}
function _snprintf($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_vsnprintf($0,$1,$2,$3)|0);
 STACKTOP = sp;return ($4|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _strspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$01925 = 0, $$020 = 0, $$1$lcssa = 0, $$123 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $div = 0, $div21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($3<<24>>24)==(0);
 do {
  if ($4) {
   $$0 = 0;
  } else {
   $5 = ((($1)) + 1|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    $$020 = $0;
    while(1) {
     $8 = HEAP8[$$020>>0]|0;
     $9 = ($8<<24>>24)==($3<<24>>24);
     $10 = ((($$020)) + 1|0);
     if ($9) {
      $$020 = $10;
     } else {
      break;
     }
    }
    $11 = $$020;
    $12 = $0;
    $13 = (($11) - ($12))|0;
    $$0 = $13;
    break;
   } else {
    $$01925 = $1;$17 = $3;
   }
   while(1) {
    $16 = $17 & 31;
    $18 = $16&255;
    $19 = 1 << $18;
    $div21 = ($17&255) >>> 5;
    $20 = $div21&255;
    $21 = (($2) + ($20<<2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $22 | $19;
    HEAP32[$21>>2] = $23;
    $24 = ((($$01925)) + 1|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = ($25<<24>>24)==(0);
    if ($26) {
     break;
    } else {
     $$01925 = $24;$17 = $25;
    }
   }
   $14 = HEAP8[$0>>0]|0;
   $15 = ($14<<24>>24)==(0);
   L10: do {
    if ($15) {
     $$1$lcssa = $0;
    } else {
     $$123 = $0;$27 = $14;
     while(1) {
      $div = ($27&255) >>> 5;
      $28 = $div&255;
      $29 = (($2) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = $27 & 31;
      $32 = $31&255;
      $33 = 1 << $32;
      $34 = $30 & $33;
      $35 = ($34|0)==(0);
      if ($35) {
       $$1$lcssa = $$123;
       break L10;
      }
      $36 = ((($$123)) + 1|0);
      $37 = HEAP8[$36>>0]|0;
      $38 = ($37<<24>>24)==(0);
      if ($38) {
       $$1$lcssa = $36;
       break;
      } else {
       $$123 = $36;$27 = $37;
      }
     }
    }
   } while(0);
   $39 = $$1$lcssa;
   $40 = $0;
   $41 = (($39) - ($40))|0;
   $$0 = $41;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$015 = 0, $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $4 = sp + 112|0;
 $5 = sp;
 dest=$5; src=1536; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $$$015 = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $$$015;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($$$015)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($$$015|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $$ = $8 ? $2 : $7;
 $$cast = $6;
 _memcpy(($$cast|0),($1|0),($$|0))|0;
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($$)|0);
 HEAP32[$5>>2] = $10;
 return ($2|0);
}
function _strncmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$020 = 0;
 } else {
  $4 = HEAP8[$0>>0]|0;
  $5 = ($4<<24>>24)==(0);
  L3: do {
   if ($5) {
    $$0$lcssa = $1;$16 = 0;
   } else {
    $$01823 = $0;$$01925$in = $2;$$024 = $1;$9 = $4;
    while(1) {
     $$01925 = (($$01925$in) + -1)|0;
     $6 = HEAP8[$$024>>0]|0;
     $7 = ($6<<24>>24)!=(0);
     $8 = ($$01925|0)!=(0);
     $or$cond = $8 & $7;
     $10 = ($9<<24>>24)==($6<<24>>24);
     $or$cond21 = $10 & $or$cond;
     if (!($or$cond21)) {
      $$0$lcssa = $$024;$16 = $9;
      break L3;
     }
     $11 = ((($$01823)) + 1|0);
     $12 = ((($$024)) + 1|0);
     $13 = HEAP8[$11>>0]|0;
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$0$lcssa = $12;$16 = 0;
      break;
     } else {
      $$01823 = $11;$$01925$in = $$01925;$$024 = $12;$9 = $13;
     }
    }
   }
  } while(0);
  $15 = $16&255;
  $17 = HEAP8[$$0$lcssa>>0]|0;
  $18 = $17&255;
  $19 = (($15) - ($18))|0;
  $$020 = $19;
 }
 return ($$020|0);
}
function _sprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vsprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function _vsprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_vsnprintf($0,2147483647,$1,$2)|0);
 return ($3|0);
}
function _sscanf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vsscanf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function _vsscanf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $3 = sp;
 dest=$3; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $4 = ((($3)) + 32|0);
 HEAP32[$4>>2] = 580;
 $5 = ((($3)) + 44|0);
 HEAP32[$5>>2] = $0;
 $6 = ((($3)) + 76|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($3)) + 84|0);
 HEAP32[$7>>2] = $0;
 $8 = (_vfscanf($3,$1,$2)|0);
 STACKTOP = sp;return ($8|0);
}
function _do_read_533($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___string_read($0,$1,$2)|0);
 return ($3|0);
}
function _vfscanf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$$0266 = 0, $$$0268 = 0, $$0$i = 0, $$0266$lcssa = 0, $$0266408 = 0, $$0268 = 0, $$0270 = 0, $$0272 = 0, $$0273420 = 0, $$0276$ph = 0, $$0278$ph = 0, $$0278$ph$phi = 0, $$0278$ph331 = 0, $$0283419 = 0, $$0286411 = 0, $$0288$ = 0, $$0288416 = 0, $$0292 = 0, $$0293 = 0;
 var $$0294415 = 0, $$0305414 = 0, $$10 = 0, $$10304 = 0, $$11 = 0, $$1267 = 0, $$1271 = 0, $$1274 = 0, $$1277$ph = 0, $$1279 = 0, $$1284 = 0, $$1289 = 0, $$1295 = 0, $$1306 = 0, $$2 = 0, $$2275 = 0, $$2280 = 0, $$2280$ph = 0, $$2280$ph$phi = 0, $$2285 = 0;
 var $$2290 = 0, $$2296 = 0, $$2307$ph = 0, $$3$lcssa = 0, $$319 = 0, $$320 = 0, $$321 = 0, $$322 = 0, $$3281 = 0, $$3291 = 0, $$3297$ph = 0, $$3407 = 0, $$4 = 0, $$4282 = 0, $$4309 = 0, $$5 = 0, $$5299 = 0, $$5310 = 0, $$6 = 0, $$6300 = 0;
 var $$6311 = 0, $$7 = 0, $$7$ph = 0, $$7301 = 0, $$7312 = 0, $$8 = 0, $$8302 = 0, $$8313 = 0, $$9 = 0, $$9303 = 0, $$9314 = 0, $$lcssa349 = 0, $$not = 0, $$old4 = 0, $$pre = 0, $$pre$phi493Z2D = 0, $$pre482 = 0, $$pre484 = 0, $$pre486 = 0, $$pre488 = 0;
 var $$pre489 = 0, $$pre490 = 0, $$pre491 = 0, $$pre492 = 0, $$sroa$2$0$$sroa_idx13 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0.0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0.0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $factor = 0, $factor327 = 0, $isdigit = 0, $isdigit316 = 0, $isdigit316406 = 0, $isdigittmp = 0, $isdigittmp315 = 0, $isdigittmp315405 = 0, $not$ = 0, $or$cond = 0;
 var $or$cond3 = 0, $or$cond318 = 0, $or$cond5 = 0, $trunc = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(304|0);
 $3 = sp + 16|0;
 $4 = sp + 8|0;
 $5 = sp + 33|0;
 $6 = sp;
 $7 = sp + 32|0;
 $8 = ((($0)) + 76|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)>(-1);
 if ($10) {
  $11 = (___lockfile($0)|0);
  $332 = $11;
 } else {
  $332 = 0;
 }
 $12 = HEAP8[$1>>0]|0;
 $13 = ($12<<24>>24)==(0);
 L4: do {
  if ($13) {
   $$3291 = 0;
  } else {
   $14 = ((($0)) + 4|0);
   $15 = ((($0)) + 100|0);
   $16 = ((($0)) + 108|0);
   $17 = ((($0)) + 8|0);
   $18 = ((($5)) + 10|0);
   $19 = ((($5)) + 33|0);
   $$sroa$2$0$$sroa_idx13 = ((($4)) + 4|0);
   $20 = ((($5)) + 46|0);
   $21 = ((($5)) + 94|0);
   $22 = ((($5)) + 1|0);
   $23 = ((($5)) + 1|0);
   $$0273420 = $1;$$0283419 = 0;$$0288416 = 0;$$0294415 = 0;$$0305414 = 0;$25 = $12;
   L6: while(1) {
    $24 = $25&255;
    $26 = (_isspace($24)|0);
    $27 = ($26|0)==(0);
    L8: do {
     if ($27) {
      $54 = ($25<<24>>24)==(37);
      L10: do {
       if ($54) {
        $55 = ((($$0273420)) + 1|0);
        $56 = HEAP8[$55>>0]|0;
        L12: do {
         switch ($56<<24>>24) {
         case 37:  {
          break L10;
          break;
         }
         case 42:  {
          $77 = ((($$0273420)) + 2|0);
          $$0293 = 0;$$2275 = $77;
          break;
         }
         default: {
          $78 = $56&255;
          $isdigittmp = (($78) + -48)|0;
          $isdigit = ($isdigittmp>>>0)<(10);
          if ($isdigit) {
           $79 = ((($$0273420)) + 2|0);
           $80 = HEAP8[$79>>0]|0;
           $81 = ($80<<24>>24)==(36);
           if ($81) {
            $vacopy_currentptr = HEAP32[$2>>2]|0;
            HEAP32[$3>>2] = $vacopy_currentptr;
            $$0$i = $isdigittmp;
            while(1) {
             $82 = ($$0$i>>>0)>(1);
             $arglist_current = HEAP32[$3>>2]|0;
             $83 = $arglist_current;
             $84 = ((0) + 4|0);
             $expanded4 = $84;
             $expanded = (($expanded4) - 1)|0;
             $85 = (($83) + ($expanded))|0;
             $86 = ((0) + 4|0);
             $expanded8 = $86;
             $expanded7 = (($expanded8) - 1)|0;
             $expanded6 = $expanded7 ^ -1;
             $87 = $85 & $expanded6;
             $88 = $87;
             $89 = HEAP32[$88>>2]|0;
             $arglist_next = ((($88)) + 4|0);
             HEAP32[$3>>2] = $arglist_next;
             $90 = (($$0$i) + -1)|0;
             if ($82) {
              $$0$i = $90;
             } else {
              break;
             }
            }
            $91 = ((($$0273420)) + 3|0);
            $$0293 = $89;$$2275 = $91;
            break L12;
           }
          }
          $arglist_current2 = HEAP32[$2>>2]|0;
          $92 = $arglist_current2;
          $93 = ((0) + 4|0);
          $expanded11 = $93;
          $expanded10 = (($expanded11) - 1)|0;
          $94 = (($92) + ($expanded10))|0;
          $95 = ((0) + 4|0);
          $expanded15 = $95;
          $expanded14 = (($expanded15) - 1)|0;
          $expanded13 = $expanded14 ^ -1;
          $96 = $94 & $expanded13;
          $97 = $96;
          $98 = HEAP32[$97>>2]|0;
          $arglist_next3 = ((($97)) + 4|0);
          HEAP32[$2>>2] = $arglist_next3;
          $$0293 = $98;$$2275 = $55;
         }
         }
        } while(0);
        $99 = HEAP8[$$2275>>0]|0;
        $100 = $99&255;
        $isdigittmp315405 = (($100) + -48)|0;
        $isdigit316406 = ($isdigittmp315405>>>0)<(10);
        if ($isdigit316406) {
         $$0266408 = 0;$$3407 = $$2275;$104 = $100;
         while(1) {
          $101 = ($$0266408*10)|0;
          $102 = (($101) + -48)|0;
          $103 = (($102) + ($104))|0;
          $105 = ((($$3407)) + 1|0);
          $106 = HEAP8[$105>>0]|0;
          $107 = $106&255;
          $isdigittmp315 = (($107) + -48)|0;
          $isdigit316 = ($isdigittmp315>>>0)<(10);
          if ($isdigit316) {
           $$0266408 = $103;$$3407 = $105;$104 = $107;
          } else {
           $$0266$lcssa = $103;$$3$lcssa = $105;$$lcssa349 = $106;
           break;
          }
         }
        } else {
         $$0266$lcssa = 0;$$3$lcssa = $$2275;$$lcssa349 = $99;
        }
        $108 = ($$lcssa349<<24>>24)==(109);
        if ($108) {
         $109 = ($$0293|0)!=(0|0);
         $110 = $109&1;
         $111 = ((($$3$lcssa)) + 1|0);
         $$pre482 = HEAP8[$111>>0]|0;
         $$0270 = $110;$$1295 = 0;$$1306 = 0;$$4 = $111;$113 = $$pre482;
        } else {
         $$0270 = 0;$$1295 = $$0294415;$$1306 = $$0305414;$$4 = $$3$lcssa;$113 = $$lcssa349;
        }
        $112 = ((($$4)) + 1|0);
        switch ($113<<24>>24) {
        case 104:  {
         $114 = HEAP8[$112>>0]|0;
         $115 = ($114<<24>>24)==(104);
         $116 = ((($$4)) + 2|0);
         $$319 = $115 ? $116 : $112;
         $$320 = $115 ? -2 : -1;
         $$0268 = $$320;$$5 = $$319;
         break;
        }
        case 108:  {
         $117 = HEAP8[$112>>0]|0;
         $118 = ($117<<24>>24)==(108);
         $119 = ((($$4)) + 2|0);
         $$321 = $118 ? $119 : $112;
         $$322 = $118 ? 3 : 1;
         $$0268 = $$322;$$5 = $$321;
         break;
        }
        case 106:  {
         $$0268 = 3;$$5 = $112;
         break;
        }
        case 116: case 122:  {
         $$0268 = 1;$$5 = $112;
         break;
        }
        case 76:  {
         $$0268 = 2;$$5 = $112;
         break;
        }
        case 110: case 112: case 67: case 83: case 91: case 99: case 115: case 88: case 71: case 70: case 69: case 65: case 103: case 102: case 101: case 97: case 120: case 117: case 111: case 105: case 100:  {
         $$0268 = 0;$$5 = $$4;
         break;
        }
        default: {
         $$7312 = $$1306;$$8302 = $$1295;
         label = 154;
         break L6;
        }
        }
        $120 = HEAP8[$$5>>0]|0;
        $121 = $120&255;
        $122 = $121 & 47;
        $123 = ($122|0)==(3);
        $124 = $121 | 32;
        $$ = $123 ? $124 : $121;
        $$$0268 = $123 ? 1 : $$0268;
        $trunc = $$&255;
        switch ($trunc<<24>>24) {
        case 99:  {
         $125 = ($$0266$lcssa|0)<(1);
         $$$0266 = $125 ? 1 : $$0266$lcssa;
         $$1267 = $$$0266;$$1284 = $$0283419;
         break;
        }
        case 91:  {
         $$1267 = $$0266$lcssa;$$1284 = $$0283419;
         break;
        }
        case 110:  {
         $126 = ($$0283419|0)<(0);
         $127 = $126 << 31 >> 31;
         $128 = ($$0293|0)==(0|0);
         if ($128) {
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
         }
         switch ($$$0268|0) {
         case -2:  {
          $129 = $$0283419&255;
          HEAP8[$$0293>>0] = $129;
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
          break;
         }
         case -1:  {
          $130 = $$0283419&65535;
          HEAP16[$$0293>>1] = $130;
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
          break;
         }
         case 0:  {
          HEAP32[$$0293>>2] = $$0283419;
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
          break;
         }
         case 1:  {
          HEAP32[$$0293>>2] = $$0283419;
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
          break;
         }
         case 3:  {
          $131 = $$0293;
          $132 = $131;
          HEAP32[$132>>2] = $$0283419;
          $133 = (($131) + 4)|0;
          $134 = $133;
          HEAP32[$134>>2] = $127;
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
          break;
         }
         default: {
          $$11 = $$5;$$1289 = $$0288416;$$2285 = $$0283419;$$6311 = $$1306;$$7301 = $$1295;
          break L8;
         }
         }
         break;
        }
        default: {
         ___shlim($0,0);
         while(1) {
          $135 = HEAP32[$14>>2]|0;
          $136 = HEAP32[$15>>2]|0;
          $137 = ($135>>>0)<($136>>>0);
          if ($137) {
           $138 = ((($135)) + 1|0);
           HEAP32[$14>>2] = $138;
           $139 = HEAP8[$135>>0]|0;
           $140 = $139&255;
           $142 = $140;
          } else {
           $141 = (___shgetc($0)|0);
           $142 = $141;
          }
          $143 = (_isspace($142)|0);
          $144 = ($143|0)==(0);
          if ($144) {
           break;
          }
         }
         $145 = HEAP32[$15>>2]|0;
         $146 = ($145|0)==(0|0);
         if ($146) {
          $$pre484 = HEAP32[$14>>2]|0;
          $154 = $$pre484;
         } else {
          $147 = HEAP32[$14>>2]|0;
          $148 = ((($147)) + -1|0);
          HEAP32[$14>>2] = $148;
          $149 = $148;
          $154 = $149;
         }
         $150 = HEAP32[$16>>2]|0;
         $151 = HEAP32[$17>>2]|0;
         $152 = (($150) + ($$0283419))|0;
         $153 = (($152) + ($154))|0;
         $155 = (($153) - ($151))|0;
         $$1267 = $$0266$lcssa;$$1284 = $155;
        }
        }
        ___shlim($0,$$1267);
        $156 = HEAP32[$14>>2]|0;
        $157 = HEAP32[$15>>2]|0;
        $158 = ($156>>>0)<($157>>>0);
        if ($158) {
         $159 = ((($156)) + 1|0);
         HEAP32[$14>>2] = $159;
         $162 = $157;
        } else {
         $160 = (___shgetc($0)|0);
         $161 = ($160|0)<(0);
         if ($161) {
          $$7312 = $$1306;$$8302 = $$1295;
          label = 154;
          break L6;
         }
         $$pre486 = HEAP32[$15>>2]|0;
         $162 = $$pre486;
        }
        $163 = ($162|0)==(0|0);
        if (!($163)) {
         $164 = HEAP32[$14>>2]|0;
         $165 = ((($164)) + -1|0);
         HEAP32[$14>>2] = $165;
        }
        L68: do {
         switch ($trunc<<24>>24) {
         case 91: case 99: case 115:  {
          $166 = ($$|0)==(99);
          $167 = $$ | 16;
          $168 = ($167|0)==(115);
          L70: do {
           if ($168) {
            $169 = ($$|0)==(115);
            _memset(($22|0),-1,256)|0;
            HEAP8[$5>>0] = 0;
            if ($169) {
             HEAP8[$19>>0] = 0;
             ;HEAP8[$18>>0]=0|0;HEAP8[$18+1>>0]=0|0;HEAP8[$18+2>>0]=0|0;HEAP8[$18+3>>0]=0|0;HEAP8[$18+4>>0]=0|0;
             $$9 = $$5;
            } else {
             $$9 = $$5;
            }
           } else {
            $170 = ((($$5)) + 1|0);
            $171 = HEAP8[$170>>0]|0;
            $172 = ($171<<24>>24)==(94);
            $173 = ((($$5)) + 2|0);
            $$0292 = $172&1;
            $$6 = $172 ? $173 : $170;
            $174 = $172&1;
            _memset(($23|0),($174|0),256)|0;
            HEAP8[$5>>0] = 0;
            $175 = HEAP8[$$6>>0]|0;
            switch ($175<<24>>24) {
            case 45:  {
             $176 = ((($$6)) + 1|0);
             $177 = $$0292 ^ 1;
             $178 = $177&255;
             HEAP8[$20>>0] = $178;
             $$7$ph = $176;$$pre$phi493Z2D = $178;
             break;
            }
            case 93:  {
             $179 = ((($$6)) + 1|0);
             $180 = $$0292 ^ 1;
             $181 = $180&255;
             HEAP8[$21>>0] = $181;
             $$7$ph = $179;$$pre$phi493Z2D = $181;
             break;
            }
            default: {
             $$pre491 = $$0292 ^ 1;
             $$pre492 = $$pre491&255;
             $$7$ph = $$6;$$pre$phi493Z2D = $$pre492;
            }
            }
            $$7 = $$7$ph;
            while(1) {
             $182 = HEAP8[$$7>>0]|0;
             L81: do {
              switch ($182<<24>>24) {
              case 0:  {
               $$7312 = $$1306;$$8302 = $$1295;
               label = 154;
               break L6;
               break;
              }
              case 93:  {
               $$9 = $$7;
               break L70;
               break;
              }
              case 45:  {
               $183 = ((($$7)) + 1|0);
               $184 = HEAP8[$183>>0]|0;
               switch ($184<<24>>24) {
               case 93: case 0:  {
                $$8 = $$7;$195 = 45;
                break L81;
                break;
               }
               default: {
               }
               }
               $185 = ((($$7)) + -1|0);
               $186 = HEAP8[$185>>0]|0;
               $187 = ($186&255)<($184&255);
               if ($187) {
                $188 = $186&255;
                $$0286411 = $188;
                while(1) {
                 $189 = (($$0286411) + 1)|0;
                 $190 = (($5) + ($189)|0);
                 HEAP8[$190>>0] = $$pre$phi493Z2D;
                 $191 = HEAP8[$183>>0]|0;
                 $192 = $191&255;
                 $193 = ($189|0)<($192|0);
                 if ($193) {
                  $$0286411 = $189;
                 } else {
                  $$8 = $183;$195 = $191;
                  break;
                 }
                }
               } else {
                $$8 = $183;$195 = $184;
               }
               break;
              }
              default: {
               $$8 = $$7;$195 = $182;
              }
              }
             } while(0);
             $194 = $195&255;
             $196 = (($194) + 1)|0;
             $197 = (($5) + ($196)|0);
             HEAP8[$197>>0] = $$pre$phi493Z2D;
             $198 = ((($$8)) + 1|0);
             $$7 = $198;
            }
           }
          } while(0);
          $199 = (($$1267) + 1)|0;
          $200 = $166 ? $199 : 31;
          $201 = ($$$0268|0)==(1);
          $202 = ($$0270|0)!=(0);
          L89: do {
           if ($201) {
            if ($202) {
             $203 = $200 << 2;
             $204 = (_malloc($203)|0);
             $205 = ($204|0)==(0|0);
             if ($205) {
              $$7312 = 0;$$8302 = $204;
              label = 154;
              break L6;
             } else {
              $$2296 = $204;
             }
            } else {
             $$2296 = $$0293;
            }
            HEAP32[$4>>2] = 0;
            HEAP32[$$sroa$2$0$$sroa_idx13>>2] = 0;
            $$0276$ph = $200;$$0278$ph = 0;$$3297$ph = $$2296;
            L95: while(1) {
             $206 = ($$3297$ph|0)==(0|0);
             $$0278$ph331 = $$0278$ph;
             while(1) {
              L99: while(1) {
               $207 = HEAP32[$14>>2]|0;
               $208 = HEAP32[$15>>2]|0;
               $209 = ($207>>>0)<($208>>>0);
               if ($209) {
                $210 = ((($207)) + 1|0);
                HEAP32[$14>>2] = $210;
                $211 = HEAP8[$207>>0]|0;
                $212 = $211&255;
                $215 = $212;
               } else {
                $213 = (___shgetc($0)|0);
                $215 = $213;
               }
               $214 = (($215) + 1)|0;
               $216 = (($5) + ($214)|0);
               $217 = HEAP8[$216>>0]|0;
               $218 = ($217<<24>>24)==(0);
               if ($218) {
                break L95;
               }
               $219 = $215&255;
               HEAP8[$7>>0] = $219;
               $220 = (_mbrtowc($6,$7,1,$4)|0);
               switch ($220|0) {
               case -1:  {
                $$7312 = 0;$$8302 = $$3297$ph;
                label = 154;
                break L6;
                break;
               }
               case -2:  {
                break;
               }
               default: {
                break L99;
               }
               }
              }
              if ($206) {
               $$1279 = $$0278$ph331;
              } else {
               $221 = (($$3297$ph) + ($$0278$ph331<<2)|0);
               $222 = (($$0278$ph331) + 1)|0;
               $223 = HEAP32[$6>>2]|0;
               HEAP32[$221>>2] = $223;
               $$1279 = $222;
              }
              $224 = ($$1279|0)==($$0276$ph|0);
              $or$cond = $202 & $224;
              if ($or$cond) {
               break;
              } else {
               $$0278$ph331 = $$1279;
              }
             }
             $factor327 = $$0276$ph << 1;
             $225 = $factor327 | 1;
             $226 = $225 << 2;
             $227 = (_realloc($$3297$ph,$226)|0);
             $228 = ($227|0)==(0|0);
             if ($228) {
              $$7312 = 0;$$8302 = $$3297$ph;
              label = 154;
              break L6;
             } else {
              $$0278$ph$phi = $$0276$ph;$$0276$ph = $225;$$3297$ph = $227;$$0278$ph = $$0278$ph$phi;
             }
            }
            $229 = (_mbsinit($4)|0);
            $230 = ($229|0)==(0);
            if ($230) {
             $$7312 = 0;$$8302 = $$3297$ph;
             label = 154;
             break L6;
            } else {
             $$4282 = $$0278$ph331;$$4309 = 0;$$5299 = $$3297$ph;
            }
           } else {
            if ($202) {
             $231 = (_malloc($200)|0);
             $232 = ($231|0)==(0|0);
             if ($232) {
              $$7312 = 0;$$8302 = 0;
              label = 154;
              break L6;
             } else {
              $$1277$ph = $200;$$2280$ph = 0;$$2307$ph = $231;
             }
             while(1) {
              $$2280 = $$2280$ph;
              while(1) {
               $233 = HEAP32[$14>>2]|0;
               $234 = HEAP32[$15>>2]|0;
               $235 = ($233>>>0)<($234>>>0);
               if ($235) {
                $236 = ((($233)) + 1|0);
                HEAP32[$14>>2] = $236;
                $237 = HEAP8[$233>>0]|0;
                $238 = $237&255;
                $241 = $238;
               } else {
                $239 = (___shgetc($0)|0);
                $241 = $239;
               }
               $240 = (($241) + 1)|0;
               $242 = (($5) + ($240)|0);
               $243 = HEAP8[$242>>0]|0;
               $244 = ($243<<24>>24)==(0);
               if ($244) {
                $$4282 = $$2280;$$4309 = $$2307$ph;$$5299 = 0;
                break L89;
               }
               $245 = $241&255;
               $246 = (($$2280) + 1)|0;
               $247 = (($$2307$ph) + ($$2280)|0);
               HEAP8[$247>>0] = $245;
               $248 = ($246|0)==($$1277$ph|0);
               if ($248) {
                break;
               } else {
                $$2280 = $246;
               }
              }
              $factor = $$1277$ph << 1;
              $249 = $factor | 1;
              $250 = (_realloc($$2307$ph,$249)|0);
              $251 = ($250|0)==(0|0);
              if ($251) {
               $$7312 = $$2307$ph;$$8302 = 0;
               label = 154;
               break L6;
              } else {
               $$2280$ph$phi = $$1277$ph;$$1277$ph = $249;$$2307$ph = $250;$$2280$ph = $$2280$ph$phi;
              }
             }
            }
            $252 = ($$0293|0)==(0|0);
            if ($252) {
             $270 = $162;
             while(1) {
              $268 = HEAP32[$14>>2]|0;
              $269 = ($268>>>0)<($270>>>0);
              if ($269) {
               $271 = ((($268)) + 1|0);
               HEAP32[$14>>2] = $271;
               $272 = HEAP8[$268>>0]|0;
               $273 = $272&255;
               $276 = $273;
              } else {
               $274 = (___shgetc($0)|0);
               $276 = $274;
              }
              $275 = (($276) + 1)|0;
              $277 = (($5) + ($275)|0);
              $278 = HEAP8[$277>>0]|0;
              $279 = ($278<<24>>24)==(0);
              if ($279) {
               $$4282 = 0;$$4309 = 0;$$5299 = 0;
               break L89;
              }
              $$pre489 = HEAP32[$15>>2]|0;
              $270 = $$pre489;
             }
            } else {
             $$3281 = 0;$255 = $162;
             while(1) {
              $253 = HEAP32[$14>>2]|0;
              $254 = ($253>>>0)<($255>>>0);
              if ($254) {
               $256 = ((($253)) + 1|0);
               HEAP32[$14>>2] = $256;
               $257 = HEAP8[$253>>0]|0;
               $258 = $257&255;
               $261 = $258;
              } else {
               $259 = (___shgetc($0)|0);
               $261 = $259;
              }
              $260 = (($261) + 1)|0;
              $262 = (($5) + ($260)|0);
              $263 = HEAP8[$262>>0]|0;
              $264 = ($263<<24>>24)==(0);
              if ($264) {
               $$4282 = $$3281;$$4309 = $$0293;$$5299 = 0;
               break L89;
              }
              $265 = $261&255;
              $266 = (($$3281) + 1)|0;
              $267 = (($$0293) + ($$3281)|0);
              HEAP8[$267>>0] = $265;
              $$pre488 = HEAP32[$15>>2]|0;
              $$3281 = $266;$255 = $$pre488;
             }
            }
           }
          } while(0);
          $280 = HEAP32[$15>>2]|0;
          $281 = ($280|0)==(0|0);
          if ($281) {
           $$pre490 = HEAP32[$14>>2]|0;
           $288 = $$pre490;
          } else {
           $282 = HEAP32[$14>>2]|0;
           $283 = ((($282)) + -1|0);
           HEAP32[$14>>2] = $283;
           $284 = $283;
           $288 = $284;
          }
          $285 = HEAP32[$16>>2]|0;
          $286 = HEAP32[$17>>2]|0;
          $287 = (($288) - ($286))|0;
          $289 = (($287) + ($285))|0;
          $290 = ($289|0)==(0);
          if ($290) {
           $$10304 = $$5299;$$2 = $$0270;$$2290 = $$0288416;$$9314 = $$4309;
           break L6;
          }
          $$not = $166 ^ 1;
          $291 = ($289|0)==($$1267|0);
          $or$cond318 = $291 | $$not;
          if (!($or$cond318)) {
           $$10304 = $$5299;$$2 = $$0270;$$2290 = $$0288416;$$9314 = $$4309;
           break L6;
          }
          do {
           if ($202) {
            if ($201) {
             HEAP32[$$0293>>2] = $$5299;
             break;
            } else {
             HEAP32[$$0293>>2] = $$4309;
             break;
            }
           }
          } while(0);
          if ($166) {
           $$10 = $$9;$$5310 = $$4309;$$6300 = $$5299;
          } else {
           $292 = ($$5299|0)==(0|0);
           if (!($292)) {
            $293 = (($$5299) + ($$4282<<2)|0);
            HEAP32[$293>>2] = 0;
           }
           $294 = ($$4309|0)==(0|0);
           if ($294) {
            $$10 = $$9;$$5310 = 0;$$6300 = $$5299;
            break L68;
           }
           $295 = (($$4309) + ($$4282)|0);
           HEAP8[$295>>0] = 0;
           $$10 = $$9;$$5310 = $$4309;$$6300 = $$5299;
          }
          break;
         }
         case 120: case 88: case 112:  {
          $$0272 = 16;
          label = 136;
          break;
         }
         case 111:  {
          $$0272 = 8;
          label = 136;
          break;
         }
         case 117: case 100:  {
          $$0272 = 10;
          label = 136;
          break;
         }
         case 105:  {
          $$0272 = 0;
          label = 136;
          break;
         }
         case 71: case 103: case 70: case 102: case 69: case 101: case 65: case 97:  {
          $313 = (+___floatscan($0,$$$0268,0));
          $314 = HEAP32[$16>>2]|0;
          $315 = HEAP32[$14>>2]|0;
          $316 = HEAP32[$17>>2]|0;
          $317 = (($316) - ($315))|0;
          $318 = ($314|0)==($317|0);
          if ($318) {
           $$10304 = $$1295;$$2 = $$0270;$$2290 = $$0288416;$$9314 = $$1306;
           break L6;
          }
          $319 = ($$0293|0)==(0|0);
          if ($319) {
           $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
          } else {
           switch ($$$0268|0) {
           case 0:  {
            $320 = $313;
            HEAPF32[$$0293>>2] = $320;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L68;
            break;
           }
           case 1:  {
            HEAPF64[$$0293>>3] = $313;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L68;
            break;
           }
           case 2:  {
            HEAPF64[$$0293>>3] = $313;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L68;
            break;
           }
           default: {
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L68;
           }
           }
          }
          break;
         }
         default: {
          $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
         }
         }
        } while(0);
        L169: do {
         if ((label|0) == 136) {
          label = 0;
          $296 = (___intscan($0,$$0272,0,-1,-1)|0);
          $297 = tempRet0;
          $298 = HEAP32[$16>>2]|0;
          $299 = HEAP32[$14>>2]|0;
          $300 = HEAP32[$17>>2]|0;
          $301 = (($300) - ($299))|0;
          $302 = ($298|0)==($301|0);
          if ($302) {
           $$10304 = $$1295;$$2 = $$0270;$$2290 = $$0288416;$$9314 = $$1306;
           break L6;
          }
          $303 = ($$|0)==(112);
          $304 = ($$0293|0)!=(0|0);
          $or$cond3 = $304 & $303;
          if ($or$cond3) {
           $305 = $296;
           HEAP32[$$0293>>2] = $305;
           $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
           break;
          }
          $306 = ($$0293|0)==(0|0);
          if ($306) {
           $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
          } else {
           switch ($$$0268|0) {
           case -2:  {
            $307 = $296&255;
            HEAP8[$$0293>>0] = $307;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L169;
            break;
           }
           case -1:  {
            $308 = $296&65535;
            HEAP16[$$0293>>1] = $308;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L169;
            break;
           }
           case 0:  {
            HEAP32[$$0293>>2] = $296;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L169;
            break;
           }
           case 1:  {
            HEAP32[$$0293>>2] = $296;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L169;
            break;
           }
           case 3:  {
            $309 = $$0293;
            $310 = $309;
            HEAP32[$310>>2] = $296;
            $311 = (($309) + 4)|0;
            $312 = $311;
            HEAP32[$312>>2] = $297;
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L169;
            break;
           }
           default: {
            $$10 = $$5;$$5310 = $$1306;$$6300 = $$1295;
            break L169;
           }
           }
          }
         }
        } while(0);
        $321 = HEAP32[$16>>2]|0;
        $322 = HEAP32[$14>>2]|0;
        $323 = HEAP32[$17>>2]|0;
        $324 = (($321) + ($$1284))|0;
        $325 = (($324) + ($322))|0;
        $326 = (($325) - ($323))|0;
        $not$ = ($$0293|0)!=(0|0);
        $327 = $not$&1;
        $$0288$ = (($327) + ($$0288416))|0;
        $$11 = $$10;$$1289 = $$0288$;$$2285 = $326;$$6311 = $$5310;$$7301 = $$6300;
        break L8;
       }
      } while(0);
      $57 = $54&1;
      $58 = (($$0273420) + ($57)|0);
      ___shlim($0,0);
      $59 = HEAP32[$14>>2]|0;
      $60 = HEAP32[$15>>2]|0;
      $61 = ($59>>>0)<($60>>>0);
      if ($61) {
       $62 = ((($59)) + 1|0);
       HEAP32[$14>>2] = $62;
       $63 = HEAP8[$59>>0]|0;
       $64 = $63&255;
       $68 = $64;
      } else {
       $65 = (___shgetc($0)|0);
       $68 = $65;
      }
      $66 = HEAP8[$58>>0]|0;
      $67 = $66&255;
      $69 = ($68|0)==($67|0);
      if (!($69)) {
       label = 22;
       break L6;
      }
      $76 = (($$0283419) + 1)|0;
      $$11 = $58;$$1289 = $$0288416;$$2285 = $76;$$6311 = $$0305414;$$7301 = $$0294415;
     } else {
      $$1274 = $$0273420;
      while(1) {
       $28 = ((($$1274)) + 1|0);
       $29 = HEAP8[$28>>0]|0;
       $30 = $29&255;
       $31 = (_isspace($30)|0);
       $32 = ($31|0)==(0);
       if ($32) {
        break;
       } else {
        $$1274 = $28;
       }
      }
      ___shlim($0,0);
      while(1) {
       $33 = HEAP32[$14>>2]|0;
       $34 = HEAP32[$15>>2]|0;
       $35 = ($33>>>0)<($34>>>0);
       if ($35) {
        $36 = ((($33)) + 1|0);
        HEAP32[$14>>2] = $36;
        $37 = HEAP8[$33>>0]|0;
        $38 = $37&255;
        $40 = $38;
       } else {
        $39 = (___shgetc($0)|0);
        $40 = $39;
       }
       $41 = (_isspace($40)|0);
       $42 = ($41|0)==(0);
       if ($42) {
        break;
       }
      }
      $43 = HEAP32[$15>>2]|0;
      $44 = ($43|0)==(0|0);
      if ($44) {
       $$pre = HEAP32[$14>>2]|0;
       $52 = $$pre;
      } else {
       $45 = HEAP32[$14>>2]|0;
       $46 = ((($45)) + -1|0);
       HEAP32[$14>>2] = $46;
       $47 = $46;
       $52 = $47;
      }
      $48 = HEAP32[$16>>2]|0;
      $49 = HEAP32[$17>>2]|0;
      $50 = (($48) + ($$0283419))|0;
      $51 = (($50) + ($52))|0;
      $53 = (($51) - ($49))|0;
      $$11 = $$1274;$$1289 = $$0288416;$$2285 = $53;$$6311 = $$0305414;$$7301 = $$0294415;
     }
    } while(0);
    $328 = ((($$11)) + 1|0);
    $329 = HEAP8[$328>>0]|0;
    $330 = ($329<<24>>24)==(0);
    if ($330) {
     $$3291 = $$1289;
     break L4;
    } else {
     $$0273420 = $328;$$0283419 = $$2285;$$0288416 = $$1289;$$0294415 = $$7301;$$0305414 = $$6311;$25 = $329;
    }
   }
   if ((label|0) == 22) {
    $70 = HEAP32[$15>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = HEAP32[$14>>2]|0;
     $73 = ((($72)) + -1|0);
     HEAP32[$14>>2] = $73;
    }
    $74 = ($68|0)>(-1);
    $75 = ($$0288416|0)!=(0);
    $or$cond5 = $75 | $74;
    if ($or$cond5) {
     $$3291 = $$0288416;
     break;
    } else {
     $$1271 = 0;$$8313 = $$0305414;$$9303 = $$0294415;
     label = 155;
    }
   }
   else if ((label|0) == 154) {
    $$old4 = ($$0288416|0)==(0);
    if ($$old4) {
     $$1271 = $$0270;$$8313 = $$7312;$$9303 = $$8302;
     label = 155;
    } else {
     $$10304 = $$8302;$$2 = $$0270;$$2290 = $$0288416;$$9314 = $$7312;
    }
   }
   if ((label|0) == 155) {
    $$10304 = $$9303;$$2 = $$1271;$$2290 = -1;$$9314 = $$8313;
   }
   $331 = ($$2|0)==(0);
   if ($331) {
    $$3291 = $$2290;
   } else {
    _free($$9314);
    _free($$10304);
    $$3291 = $$2290;
   }
  }
 } while(0);
 $333 = ($332|0)==(0);
 if (!($333)) {
  ___unlockfile($0);
 }
 STACKTOP = sp;return ($$3291|0);
}
function _mbrtowc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$03750 = 0, $$03849 = 0, $$04148 = 0, $$1 = 0, $$139 = 0, $$142 = 0, $$2 = 0, $$45 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $5 = ($3|0)==(0|0);
 $$ = $5 ? 24956 : $3;
 $6 = HEAP32[$$>>2]|0;
 $7 = ($1|0)==(0|0);
 L1: do {
  if ($7) {
   $8 = ($6|0)==(0);
   if ($8) {
    $$0 = 0;
   } else {
    label = 15;
   }
  } else {
   $9 = ($0|0)==(0|0);
   $$45 = $9 ? $4 : $0;
   $10 = ($2|0)==(0);
   if ($10) {
    $$0 = -2;
   } else {
    $11 = ($6|0)==(0);
    if ($11) {
     $12 = HEAP8[$1>>0]|0;
     $13 = $12&255;
     $14 = ($12<<24>>24)>(-1);
     if ($14) {
      HEAP32[$$45>>2] = $13;
      $15 = ($12<<24>>24)!=(0);
      $16 = $15&1;
      $$0 = $16;
      break;
     }
     $17 = (($13) + -194)|0;
     $18 = ($17>>>0)>(50);
     if ($18) {
      label = 15;
      break;
     }
     $19 = ((($1)) + 1|0);
     $20 = (1060 + ($17<<2)|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = (($2) + -1)|0;
     $23 = ($22|0)==(0);
     if ($23) {
      $$2 = $21;
     } else {
      $$03750 = $19;$$03849 = $21;$$04148 = $22;
      label = 9;
     }
    } else {
     $$03750 = $1;$$03849 = $6;$$04148 = $2;
     label = 9;
    }
    L11: do {
     if ((label|0) == 9) {
      $24 = HEAP8[$$03750>>0]|0;
      $25 = $24&255;
      $26 = $25 >>> 3;
      $27 = (($26) + -16)|0;
      $28 = $$03849 >> 26;
      $29 = (($26) + ($28))|0;
      $30 = $27 | $29;
      $31 = ($30>>>0)>(7);
      if ($31) {
       label = 15;
       break L1;
      } else {
       $$1 = $$03750;$$139 = $$03849;$$142 = $$04148;$35 = $24;
      }
      while(1) {
       $32 = $$139 << 6;
       $33 = ((($$1)) + 1|0);
       $34 = $35&255;
       $36 = (($34) + -128)|0;
       $37 = $36 | $32;
       $38 = (($$142) + -1)|0;
       $39 = ($37|0)<(0);
       if (!($39)) {
        break;
       }
       $41 = ($38|0)==(0);
       if ($41) {
        $$2 = $37;
        break L11;
       }
       $42 = HEAP8[$33>>0]|0;
       $43 = $42 & -64;
       $44 = ($43<<24>>24)==(-128);
       if ($44) {
        $$1 = $33;$$139 = $37;$$142 = $38;$35 = $42;
       } else {
        label = 15;
        break L1;
       }
      }
      HEAP32[$$>>2] = 0;
      HEAP32[$$45>>2] = $37;
      $40 = (($2) - ($38))|0;
      $$0 = $40;
      break L1;
     }
    } while(0);
    HEAP32[$$>>2] = $$2;
    $$0 = -2;
   }
  }
 } while(0);
 if ((label|0) == 15) {
  HEAP32[$$>>2] = 0;
  $45 = (___errno_location()|0);
  HEAP32[$45>>2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function _mbsinit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $5 = 1;
 } else {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0);
  $5 = $3;
 }
 $4 = $5&1;
 return ($4|0);
}
function ___string_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$027 = 0, $$027$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($2) + 256)|0;
 $6 = (_memchr($4,0,$5)|0);
 $7 = ($6|0)==(0|0);
 $8 = $6;
 $9 = $4;
 $10 = (($8) - ($9))|0;
 $$027 = $7 ? $5 : $10;
 $11 = ($$027>>>0)<($2>>>0);
 $$027$ = $11 ? $$027 : $2;
 _memcpy(($1|0),($4|0),($$027$|0))|0;
 $12 = (($4) + ($$027$)|0);
 $13 = ((($0)) + 4|0);
 HEAP32[$13>>2] = $12;
 $14 = (($4) + ($$027)|0);
 $15 = ((($0)) + 8|0);
 HEAP32[$15>>2] = $14;
 HEAP32[$3>>2] = $14;
 return ($$027$|0);
}
function _strchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___strchrnul($0,$1)|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = $1&255;
 $5 = ($3<<24>>24)==($4<<24>>24);
 $6 = $5 ? $2 : 0;
 return ($6|0);
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $8 = (_strlen($0)|0);
   $9 = (($0) + ($8)|0);
   $$0 = $9;
  } else {
   $4 = $0;
   $5 = $4 & 3;
   $6 = ($5|0)==(0);
   if ($6) {
    $$030$lcssa = $0;
   } else {
    $7 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = HEAP8[$$03039>>0]|0;
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($7<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = HEAP32[$$030$lcssa>>2]|0;
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = HEAP8[$$1>>0]|0;
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _atoi($0) {
 $0 = $0|0;
 var $$0 = 0, $$010$lcssa = 0, $$01016 = 0, $$011 = 0, $$1$ph = 0, $$112$ph = 0, $$11215 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit14 = 0, $isdigittmp = 0, $isdigittmp13 = 0, $isdigittmp17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$011 = $0;
 while(1) {
  $1 = HEAP8[$$011>>0]|0;
  $2 = $1 << 24 >> 24;
  $3 = (_isspace($2)|0);
  $4 = ($3|0)==(0);
  $5 = ((($$011)) + 1|0);
  if ($4) {
   break;
  } else {
   $$011 = $5;
  }
 }
 switch ($2|0) {
 case 45:  {
  $$0 = 1;
  label = 5;
  break;
 }
 case 43:  {
  $$0 = 0;
  label = 5;
  break;
 }
 default: {
  $$1$ph = 0;$$112$ph = $$011;$7 = $1;
 }
 }
 if ((label|0) == 5) {
  $$pre = HEAP8[$5>>0]|0;
  $$1$ph = $$0;$$112$ph = $5;$7 = $$pre;
 }
 $6 = $7 << 24 >> 24;
 $isdigittmp13 = (($6) + -48)|0;
 $isdigit14 = ($isdigittmp13>>>0)<(10);
 if ($isdigit14) {
  $$01016 = 0;$$11215 = $$112$ph;$isdigittmp17 = $isdigittmp13;
  while(1) {
   $8 = ($$01016*10)|0;
   $9 = ((($$11215)) + 1|0);
   $10 = (($8) - ($isdigittmp17))|0;
   $11 = HEAP8[$9>>0]|0;
   $12 = $11 << 24 >> 24;
   $isdigittmp = (($12) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $$01016 = $10;$$11215 = $9;$isdigittmp17 = $isdigittmp;
   } else {
    $$010$lcssa = $10;
    break;
   }
  }
 } else {
  $$010$lcssa = 0;
 }
 $13 = ($$1$ph|0)!=(0);
 $14 = (0 - ($$010$lcssa))|0;
 $15 = $13 ? $$010$lcssa : $14;
 return ($15|0);
}
function _strcspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$01823 = 0, $$019$lcssa = 0, $$01921 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $div = 0, $div20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($3<<24>>24)==(0);
 if ($4) {
  label = 3;
 } else {
  $5 = ((($1)) + 1|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ($6<<24>>24)==(0);
  if ($7) {
   label = 3;
  } else {
   ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
   $$01823 = $1;$16 = $3;
   while(1) {
    $15 = $16 & 31;
    $17 = $15&255;
    $18 = 1 << $17;
    $div20 = ($16&255) >>> 5;
    $19 = $div20&255;
    $20 = (($2) + ($19<<2)|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $21 | $18;
    HEAP32[$20>>2] = $22;
    $23 = ((($$01823)) + 1|0);
    $24 = HEAP8[$23>>0]|0;
    $25 = ($24<<24>>24)==(0);
    if ($25) {
     break;
    } else {
     $$01823 = $23;$16 = $24;
    }
   }
   $13 = HEAP8[$0>>0]|0;
   $14 = ($13<<24>>24)==(0);
   L7: do {
    if ($14) {
     $$019$lcssa = $0;
    } else {
     $$01921 = $0;$26 = $13;
     while(1) {
      $div = ($26&255) >>> 5;
      $27 = $div&255;
      $28 = (($2) + ($27<<2)|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = $26 & 31;
      $31 = $30&255;
      $32 = 1 << $31;
      $33 = $29 & $32;
      $34 = ($33|0)==(0);
      if (!($34)) {
       $$019$lcssa = $$01921;
       break L7;
      }
      $35 = ((($$01921)) + 1|0);
      $36 = HEAP8[$35>>0]|0;
      $37 = ($36<<24>>24)==(0);
      if ($37) {
       $$019$lcssa = $35;
       break;
      } else {
       $$01921 = $35;$26 = $36;
      }
     }
    }
   } while(0);
   $38 = $$019$lcssa;
   $39 = $0;
   $40 = (($38) - ($39))|0;
   $$0 = $40;
  }
 }
 if ((label|0) == 3) {
  $8 = $3 << 24 >> 24;
  $9 = (___strchrnul($0,$8)|0);
  $10 = $9;
  $11 = $0;
  $12 = (($10) - ($11))|0;
  $$0 = $12;
 }
 STACKTOP = sp;return ($$0|0);
}
function _strstr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$in16$i = 0, $$014$lcssa$i = 0, $$01415$i = 0, $$016$lcssa$i = 0, $$01618$i = 0, $$0165$i = 0, $$0167$i = 0, $$0168$i = 0, $$0169$i = 0, $$0174$ph$ph$lcssa217$i = 0, $$0174$ph$ph$lcssa217329$i = 0, $$0174$ph$ph256$i = 0, $$0178244$i = 0, $$018$lcssa$i = 0, $$0182$ph197$ph255$i = 0, $$0182$ph197250$i = 0, $$0182$ph262$i = 0, $$01820$i = 0, $$0184$ph$lcssa$i = 0;
 var $$0184$ph$lcssa328$i = 0, $$0184$ph261$i = 0, $$0186265$i = 0, $$019$i = 0, $$021$i = 0, $$1175$$0174$i = 0, $$1175$ph$ph$lcssa208$i = 0, $$1175$ph$ph235$i = 0, $$1179224$i = 0, $$1183$ph193$ph234$i = 0, $$1183$ph193229$i = 0, $$1183$ph241$i = 0, $$1185$$0184$$i = 0, $$1185$$0184$i = 0, $$1185$ph$lcssa$i = 0, $$1185$ph240$i = 0, $$2180$i = 0, $$3$i = 0, $$3172$i = 0, $$3177$i = 0;
 var $$3181223$i = 0, $$4$i = 0, $$lcssa$i = 0, $$lcssa$i23 = 0, $$pr$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0;
 var $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0;
 var $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0;
 var $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $div$i = 0, $div187$i = 0, $or$cond$i = 0, $or$cond$i18 = 0, $or$cond$i21 = 0, $or$cond188$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1056|0);
 $2 = sp + 1024|0;
 $3 = sp;
 $4 = HEAP8[$1>>0]|0;
 $5 = ($4<<24>>24)==(0);
 do {
  if ($5) {
   $$0 = $0;
  } else {
   $6 = $4 << 24 >> 24;
   $7 = (_strchr($0,$6)|0);
   $8 = ($7|0)==(0|0);
   if ($8) {
    $$0 = 0;
   } else {
    $9 = ((($1)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if ($11) {
     $$0 = $7;
    } else {
     $12 = ((($7)) + 1|0);
     $13 = HEAP8[$12>>0]|0;
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$0 = 0;
     } else {
      $15 = ((($1)) + 2|0);
      $16 = HEAP8[$15>>0]|0;
      $17 = ($16<<24>>24)==(0);
      if ($17) {
       $18 = $4&255;
       $19 = $18 << 8;
       $20 = $10&255;
       $21 = $20 | $19;
       $22 = HEAP8[$7>>0]|0;
       $23 = $22&255;
       $24 = $23 << 8;
       $25 = $13&255;
       $26 = $24 | $25;
       $$0$in16$i = $26;$$01415$i = $12;$237 = $13;
       while(1) {
        $27 = $$0$in16$i & 65535;
        $28 = ($27|0)==($21|0);
        if ($28) {
         $$014$lcssa$i = $$01415$i;$35 = $237;
         break;
        }
        $29 = $27 << 8;
        $30 = ((($$01415$i)) + 1|0);
        $31 = HEAP8[$30>>0]|0;
        $32 = $31&255;
        $33 = $32 | $29;
        $34 = ($31<<24>>24)==(0);
        if ($34) {
         $$014$lcssa$i = $30;$35 = 0;
         break;
        } else {
         $$0$in16$i = $33;$$01415$i = $30;$237 = $31;
        }
       }
       $36 = ($35<<24>>24)!=(0);
       $37 = ((($$014$lcssa$i)) + -1|0);
       $38 = $36 ? $37 : 0;
       $$0 = $38;
       break;
      }
      $39 = ((($7)) + 2|0);
      $40 = HEAP8[$39>>0]|0;
      $41 = ($40<<24>>24)==(0);
      if ($41) {
       $$0 = 0;
      } else {
       $42 = ((($1)) + 3|0);
       $43 = HEAP8[$42>>0]|0;
       $44 = ($43<<24>>24)==(0);
       if ($44) {
        $45 = $4&255;
        $46 = $45 << 24;
        $47 = $10&255;
        $48 = $47 << 16;
        $49 = $48 | $46;
        $50 = $16&255;
        $51 = $50 << 8;
        $52 = $49 | $51;
        $53 = HEAP8[$7>>0]|0;
        $54 = $53&255;
        $55 = $54 << 24;
        $56 = $13&255;
        $57 = $56 << 16;
        $58 = $40&255;
        $59 = $58 << 8;
        $60 = $59 | $57;
        $61 = $60 | $55;
        $62 = ($61|0)==($52|0);
        if ($62) {
         $$016$lcssa$i = $39;$$lcssa$i = $40;
        } else {
         $$01618$i = $39;$$019$i = $61;
         while(1) {
          $63 = ((($$01618$i)) + 1|0);
          $64 = HEAP8[$63>>0]|0;
          $65 = $64&255;
          $66 = $65 | $$019$i;
          $67 = $66 << 8;
          $68 = ($64<<24>>24)==(0);
          $69 = ($67|0)==($52|0);
          $or$cond$i18 = $68 | $69;
          if ($or$cond$i18) {
           $$016$lcssa$i = $63;$$lcssa$i = $64;
           break;
          } else {
           $$01618$i = $63;$$019$i = $67;
          }
         }
        }
        $70 = ($$lcssa$i<<24>>24)!=(0);
        $71 = ((($$016$lcssa$i)) + -2|0);
        $72 = $70 ? $71 : 0;
        $$0 = $72;
        break;
       }
       $73 = ((($7)) + 3|0);
       $74 = HEAP8[$73>>0]|0;
       $75 = ($74<<24>>24)==(0);
       if ($75) {
        $$0 = 0;
       } else {
        $76 = ((($1)) + 4|0);
        $77 = HEAP8[$76>>0]|0;
        $78 = ($77<<24>>24)==(0);
        if ($78) {
         $79 = $4&255;
         $80 = $79 << 24;
         $81 = $10&255;
         $82 = $81 << 16;
         $83 = $82 | $80;
         $84 = $16&255;
         $85 = $84 << 8;
         $86 = $83 | $85;
         $87 = $43&255;
         $88 = $86 | $87;
         $89 = HEAP8[$7>>0]|0;
         $90 = $89&255;
         $91 = $90 << 24;
         $92 = $13&255;
         $93 = $92 << 16;
         $94 = $40&255;
         $95 = $94 << 8;
         $96 = $74&255;
         $97 = $95 | $93;
         $98 = $97 | $96;
         $99 = $98 | $91;
         $100 = ($99|0)==($88|0);
         if ($100) {
          $$018$lcssa$i = $73;$$lcssa$i23 = $74;
         } else {
          $$01820$i = $73;$$021$i = $99;
          while(1) {
           $101 = $$021$i << 8;
           $102 = ((($$01820$i)) + 1|0);
           $103 = HEAP8[$102>>0]|0;
           $104 = $103&255;
           $105 = $104 | $101;
           $106 = ($103<<24>>24)==(0);
           $107 = ($105|0)==($88|0);
           $or$cond$i21 = $106 | $107;
           if ($or$cond$i21) {
            $$018$lcssa$i = $102;$$lcssa$i23 = $103;
            break;
           } else {
            $$01820$i = $102;$$021$i = $105;
           }
          }
         }
         $108 = ($$lcssa$i23<<24>>24)!=(0);
         $109 = ((($$018$lcssa$i)) + -3|0);
         $110 = $108 ? $109 : 0;
         $$0 = $110;
         break;
        }
        ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
        $$0186265$i = 0;$115 = $4;
        while(1) {
         $111 = (($7) + ($$0186265$i)|0);
         $112 = HEAP8[$111>>0]|0;
         $113 = ($112<<24>>24)==(0);
         if ($113) {
          $$3$i = 0;
          break;
         }
         $114 = $115 & 31;
         $116 = $114&255;
         $117 = 1 << $116;
         $div187$i = ($115&255) >>> 5;
         $118 = $div187$i&255;
         $119 = (($2) + ($118<<2)|0);
         $120 = HEAP32[$119>>2]|0;
         $121 = $120 | $117;
         HEAP32[$119>>2] = $121;
         $122 = (($$0186265$i) + 1)|0;
         $123 = $115&255;
         $124 = (($3) + ($123<<2)|0);
         HEAP32[$124>>2] = $122;
         $125 = (($1) + ($122)|0);
         $126 = HEAP8[$125>>0]|0;
         $127 = ($126<<24>>24)==(0);
         if ($127) {
          label = 23;
          break;
         } else {
          $$0186265$i = $122;$115 = $126;
         }
        }
        L32: do {
         if ((label|0) == 23) {
          $128 = ($122>>>0)>(1);
          L34: do {
           if ($128) {
            $$0182$ph262$i = 0;$$0184$ph261$i = -1;$238 = 1;
            L35: while(1) {
             $$0174$ph$ph256$i = 1;$$0182$ph197$ph255$i = $$0182$ph262$i;$239 = $238;
             while(1) {
              $$0182$ph197250$i = $$0182$ph197$ph255$i;$240 = $239;
              L39: while(1) {
               $$0178244$i = 1;$130 = $240;
               while(1) {
                $135 = (($$0178244$i) + ($$0184$ph261$i))|0;
                $136 = (($1) + ($135)|0);
                $137 = HEAP8[$136>>0]|0;
                $138 = (($1) + ($130)|0);
                $139 = HEAP8[$138>>0]|0;
                $140 = ($137<<24>>24)==($139<<24>>24);
                if (!($140)) {
                 break L39;
                }
                $141 = ($$0178244$i|0)==($$0174$ph$ph256$i|0);
                $133 = (($$0178244$i) + 1)|0;
                if ($141) {
                 break;
                }
                $132 = (($133) + ($$0182$ph197250$i))|0;
                $134 = ($132>>>0)<($122>>>0);
                if ($134) {
                 $$0178244$i = $133;$130 = $132;
                } else {
                 $$0174$ph$ph$lcssa217$i = $$0174$ph$ph256$i;$$0184$ph$lcssa$i = $$0184$ph261$i;
                 break L35;
                }
               }
               $142 = (($$0182$ph197250$i) + ($$0174$ph$ph256$i))|0;
               $143 = (($142) + 1)|0;
               $144 = ($143>>>0)<($122>>>0);
               if ($144) {
                $$0182$ph197250$i = $142;$240 = $143;
               } else {
                $$0174$ph$ph$lcssa217$i = $$0174$ph$ph256$i;$$0184$ph$lcssa$i = $$0184$ph261$i;
                break L35;
               }
              }
              $145 = ($137&255)>($139&255);
              $146 = (($130) - ($$0184$ph261$i))|0;
              if (!($145)) {
               break;
              }
              $129 = (($130) + 1)|0;
              $131 = ($129>>>0)<($122>>>0);
              if ($131) {
               $$0174$ph$ph256$i = $146;$$0182$ph197$ph255$i = $130;$239 = $129;
              } else {
               $$0174$ph$ph$lcssa217$i = $146;$$0184$ph$lcssa$i = $$0184$ph261$i;
               break L35;
              }
             }
             $147 = (($$0182$ph197250$i) + 1)|0;
             $148 = (($$0182$ph197250$i) + 2)|0;
             $149 = ($148>>>0)<($122>>>0);
             if ($149) {
              $$0182$ph262$i = $147;$$0184$ph261$i = $$0182$ph197250$i;$238 = $148;
             } else {
              $$0174$ph$ph$lcssa217$i = 1;$$0184$ph$lcssa$i = $$0182$ph197250$i;
              break;
             }
            }
            $$1183$ph241$i = 0;$$1185$ph240$i = -1;$241 = 1;
            while(1) {
             $$1175$ph$ph235$i = 1;$$1183$ph193$ph234$i = $$1183$ph241$i;$243 = $241;
             while(1) {
              $$1183$ph193229$i = $$1183$ph193$ph234$i;$242 = $243;
              L54: while(1) {
               $$1179224$i = 1;$157 = $242;
               while(1) {
                $153 = (($$1179224$i) + ($$1185$ph240$i))|0;
                $154 = (($1) + ($153)|0);
                $155 = HEAP8[$154>>0]|0;
                $156 = (($1) + ($157)|0);
                $158 = HEAP8[$156>>0]|0;
                $159 = ($155<<24>>24)==($158<<24>>24);
                if (!($159)) {
                 break L54;
                }
                $160 = ($$1179224$i|0)==($$1175$ph$ph235$i|0);
                $151 = (($$1179224$i) + 1)|0;
                if ($160) {
                 break;
                }
                $150 = (($151) + ($$1183$ph193229$i))|0;
                $152 = ($150>>>0)<($122>>>0);
                if ($152) {
                 $$1179224$i = $151;$157 = $150;
                } else {
                 $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;$$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;$$1175$ph$ph$lcssa208$i = $$1175$ph$ph235$i;$$1185$ph$lcssa$i = $$1185$ph240$i;
                 break L34;
                }
               }
               $161 = (($$1183$ph193229$i) + ($$1175$ph$ph235$i))|0;
               $162 = (($161) + 1)|0;
               $163 = ($162>>>0)<($122>>>0);
               if ($163) {
                $$1183$ph193229$i = $161;$242 = $162;
               } else {
                $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;$$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;$$1175$ph$ph$lcssa208$i = $$1175$ph$ph235$i;$$1185$ph$lcssa$i = $$1185$ph240$i;
                break L34;
               }
              }
              $164 = ($155&255)<($158&255);
              $165 = (($157) - ($$1185$ph240$i))|0;
              if (!($164)) {
               break;
              }
              $169 = (($157) + 1)|0;
              $170 = ($169>>>0)<($122>>>0);
              if ($170) {
               $$1175$ph$ph235$i = $165;$$1183$ph193$ph234$i = $157;$243 = $169;
              } else {
               $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;$$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;$$1175$ph$ph$lcssa208$i = $165;$$1185$ph$lcssa$i = $$1185$ph240$i;
               break L34;
              }
             }
             $166 = (($$1183$ph193229$i) + 1)|0;
             $167 = (($$1183$ph193229$i) + 2)|0;
             $168 = ($167>>>0)<($122>>>0);
             if ($168) {
              $$1183$ph241$i = $166;$$1185$ph240$i = $$1183$ph193229$i;$241 = $167;
             } else {
              $$0174$ph$ph$lcssa217329$i = $$0174$ph$ph$lcssa217$i;$$0184$ph$lcssa328$i = $$0184$ph$lcssa$i;$$1175$ph$ph$lcssa208$i = 1;$$1185$ph$lcssa$i = $$1183$ph193229$i;
              break;
             }
            }
           } else {
            $$0174$ph$ph$lcssa217329$i = 1;$$0184$ph$lcssa328$i = -1;$$1175$ph$ph$lcssa208$i = 1;$$1185$ph$lcssa$i = -1;
           }
          } while(0);
          $171 = (($$1185$ph$lcssa$i) + 1)|0;
          $172 = (($$0184$ph$lcssa328$i) + 1)|0;
          $173 = ($171>>>0)>($172>>>0);
          $$1175$$0174$i = $173 ? $$1175$ph$ph$lcssa208$i : $$0174$ph$ph$lcssa217329$i;
          $$1185$$0184$i = $173 ? $$1185$ph$lcssa$i : $$0184$ph$lcssa328$i;
          $174 = (($1) + ($$1175$$0174$i)|0);
          $175 = (($$1185$$0184$i) + 1)|0;
          $176 = (_memcmp($1,$174,$175)|0);
          $177 = ($176|0)==(0);
          if ($177) {
           $182 = (($122) - ($$1175$$0174$i))|0;
           $$0167$i = $182;$$3177$i = $$1175$$0174$i;
          } else {
           $178 = (($122) - ($$1185$$0184$i))|0;
           $179 = (($178) + -1)|0;
           $180 = ($$1185$$0184$i>>>0)>($179>>>0);
           $$1185$$0184$$i = $180 ? $$1185$$0184$i : $179;
           $181 = (($$1185$$0184$$i) + 1)|0;
           $$0167$i = 0;$$3177$i = $181;
          }
          $183 = $122 | 63;
          $184 = ($$0167$i|0)!=(0);
          $185 = (($122) - ($$3177$i))|0;
          $$0165$i = $7;$$0168$i = 0;$$0169$i = $7;
          L69: while(1) {
           $186 = $$0169$i;
           $187 = $$0165$i;
           $188 = (($186) - ($187))|0;
           $189 = ($188>>>0)<($122>>>0);
           do {
            if ($189) {
             $190 = (_memchr($$0169$i,0,$183)|0);
             $191 = ($190|0)==(0|0);
             if ($191) {
              $195 = (($$0169$i) + ($183)|0);
              $$3172$i = $195;
              break;
             } else {
              $192 = $190;
              $193 = (($192) - ($187))|0;
              $194 = ($193>>>0)<($122>>>0);
              if ($194) {
               $$3$i = 0;
               break L32;
              } else {
               $$3172$i = $190;
               break;
              }
             }
            } else {
             $$3172$i = $$0169$i;
            }
           } while(0);
           $196 = (($$0165$i) + ($$0186265$i)|0);
           $197 = HEAP8[$196>>0]|0;
           $div$i = ($197&255) >>> 5;
           $198 = $div$i&255;
           $199 = (($2) + ($198<<2)|0);
           $200 = HEAP32[$199>>2]|0;
           $201 = $197 & 31;
           $202 = $201&255;
           $203 = 1 << $202;
           $204 = $203 & $200;
           $205 = ($204|0)==(0);
           if ($205) {
            $214 = (($$0165$i) + ($122)|0);
            $$0165$i = $214;$$0168$i = 0;$$0169$i = $$3172$i;
            continue;
           }
           $206 = $197&255;
           $207 = (($3) + ($206<<2)|0);
           $208 = HEAP32[$207>>2]|0;
           $209 = (($122) - ($208))|0;
           $210 = ($209|0)==(0);
           if (!($210)) {
            $211 = ($$0168$i|0)!=(0);
            $or$cond$i = $184 & $211;
            $212 = ($209>>>0)<($$3177$i>>>0);
            $or$cond188$i = $or$cond$i & $212;
            $$2180$i = $or$cond188$i ? $185 : $209;
            $213 = (($$0165$i) + ($$2180$i)|0);
            $$0165$i = $213;$$0168$i = 0;$$0169$i = $$3172$i;
            continue;
           }
           $215 = ($175>>>0)>($$0168$i>>>0);
           $216 = $215 ? $175 : $$0168$i;
           $217 = (($1) + ($216)|0);
           $218 = HEAP8[$217>>0]|0;
           $219 = ($218<<24>>24)==(0);
           L83: do {
            if ($219) {
             $$4$i = $175;
            } else {
             $$3181223$i = $216;$$pr$i = $218;
             while(1) {
              $220 = (($$0165$i) + ($$3181223$i)|0);
              $221 = HEAP8[$220>>0]|0;
              $222 = ($$pr$i<<24>>24)==($221<<24>>24);
              if (!($222)) {
               break;
              }
              $223 = (($$3181223$i) + 1)|0;
              $224 = (($1) + ($223)|0);
              $225 = HEAP8[$224>>0]|0;
              $226 = ($225<<24>>24)==(0);
              if ($226) {
               $$4$i = $175;
               break L83;
              } else {
               $$3181223$i = $223;$$pr$i = $225;
              }
             }
             $227 = (($$3181223$i) - ($$1185$$0184$i))|0;
             $228 = (($$0165$i) + ($227)|0);
             $$0165$i = $228;$$0168$i = 0;$$0169$i = $$3172$i;
             continue L69;
            }
           } while(0);
           while(1) {
            $229 = ($$4$i>>>0)>($$0168$i>>>0);
            if (!($229)) {
             $$3$i = $$0165$i;
             break L32;
            }
            $230 = (($$4$i) + -1)|0;
            $231 = (($1) + ($230)|0);
            $232 = HEAP8[$231>>0]|0;
            $233 = (($$0165$i) + ($230)|0);
            $234 = HEAP8[$233>>0]|0;
            $235 = ($232<<24>>24)==($234<<24>>24);
            if ($235) {
             $$4$i = $230;
            } else {
             break;
            }
           }
           $236 = (($$0165$i) + ($$3177$i)|0);
           $$0165$i = $236;$$0168$i = $$0167$i;$$0169$i = $$3172$i;
          }
         }
        } while(0);
        $$0 = $$3$i;
       }
      }
     }
    }
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _strtok($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$010 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = HEAP32[6240]|0;
  $4 = ($3|0)==(0|0);
  if ($4) {
   $$0 = 0;
  } else {
   $$010 = $3;
   label = 3;
  }
 } else {
  $$010 = $0;
  label = 3;
 }
 do {
  if ((label|0) == 3) {
   $5 = (_strspn($$010,$1)|0);
   $6 = (($$010) + ($5)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = ($7<<24>>24)==(0);
   if ($8) {
    HEAP32[6240] = 0;
    $$0 = 0;
    break;
   }
   $9 = (_strcspn($6,$1)|0);
   $10 = (($6) + ($9)|0);
   HEAP32[6240] = $10;
   $11 = HEAP8[$10>>0]|0;
   $12 = ($11<<24>>24)==(0);
   if ($12) {
    HEAP32[6240] = 0;
    $$0 = $6;
    break;
   } else {
    $13 = ((($10)) + 1|0);
    HEAP32[6240] = $13;
    HEAP8[$10>>0] = 0;
    $$0 = $6;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _strcat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (($0) + ($2)|0);
 (_strcpy($3,$1)|0);
 return ($0|0);
}
function _printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[345]|0;
 $3 = (_vfprintf($2,$0,$1)|0);
 STACKTOP = sp;return ($3|0);
}
function _localeconv() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (1648|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0190$i = 0, $$$0191$i = 0, $$$4349$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i17$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0;
 var $$024370$i = 0, $$0286$i$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$0342$i = 0, $$0343$i = 0, $$0345$i = 0, $$0351$i = 0, $$0356$i = 0, $$0357$$i = 0, $$0357$i = 0, $$0359$i = 0, $$0360$i = 0, $$0366$i = 0, $$1194$i = 0, $$1196$i = 0, $$124469$i = 0;
 var $$1290$i$i = 0, $$1292$i$i = 0, $$1341$i = 0, $$1346$i = 0, $$1361$i = 0, $$1368$i = 0, $$1372$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3348$i = 0, $$3370$i = 0, $$4$lcssa$i = 0, $$413$i = 0, $$4349$lcssa$i = 0, $$434912$i = 0, $$4355$$4$i = 0;
 var $$4355$ph$i = 0, $$435511$i = 0, $$5256$i = 0, $$723947$i = 0, $$748$i = 0, $$not$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i205 = 0, $$pre$i208 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i206Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre9$i$i = 0, $1 = 0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0;
 var $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0;
 var $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0;
 var $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0;
 var $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0;
 var $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0;
 var $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0;
 var $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0;
 var $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0;
 var $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0;
 var $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0;
 var $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0;
 var $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0;
 var $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0;
 var $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0;
 var $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0;
 var $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0;
 var $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0;
 var $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0;
 var $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0;
 var $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i204 = 0, $exitcond$i$i = 0, $not$$i$i = 0, $not$$i22$i = 0;
 var $not$7$i = 0, $or$cond$i = 0, $or$cond$i211 = 0, $or$cond1$i = 0, $or$cond1$i210 = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[6241]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (25004 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    do {
     if ($21) {
      $22 = 1 << $14;
      $23 = $22 ^ -1;
      $24 = $8 & $23;
      HEAP32[6241] = $24;
     } else {
      $25 = HEAP32[(24980)>>2]|0;
      $26 = ($20>>>0)<($25>>>0);
      if ($26) {
       _abort();
       // unreachable;
      }
      $27 = ((($20)) + 12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==($18|0);
      if ($29) {
       HEAP32[$27>>2] = $16;
       HEAP32[$17>>2] = $20;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $30 = $14 << 3;
    $31 = $30 | 3;
    $32 = ((($18)) + 4|0);
    HEAP32[$32>>2] = $31;
    $33 = (($18) + ($30)|0);
    $34 = ((($33)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = $35 | 1;
    HEAP32[$34>>2] = $36;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = HEAP32[(24972)>>2]|0;
   $38 = ($6>>>0)>($37>>>0);
   if ($38) {
    $39 = ($9|0)==(0);
    if (!($39)) {
     $40 = $9 << $7;
     $41 = 2 << $7;
     $42 = (0 - ($41))|0;
     $43 = $41 | $42;
     $44 = $40 & $43;
     $45 = (0 - ($44))|0;
     $46 = $44 & $45;
     $47 = (($46) + -1)|0;
     $48 = $47 >>> 12;
     $49 = $48 & 16;
     $50 = $47 >>> $49;
     $51 = $50 >>> 5;
     $52 = $51 & 8;
     $53 = $52 | $49;
     $54 = $50 >>> $52;
     $55 = $54 >>> 2;
     $56 = $55 & 4;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 2;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = $62 >>> 1;
     $64 = $63 & 1;
     $65 = $61 | $64;
     $66 = $62 >>> $64;
     $67 = (($65) + ($66))|0;
     $68 = $67 << 1;
     $69 = (25004 + ($68<<2)|0);
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($69|0)==($73|0);
     do {
      if ($74) {
       $75 = 1 << $67;
       $76 = $75 ^ -1;
       $77 = $8 & $76;
       HEAP32[6241] = $77;
       $98 = $77;
      } else {
       $78 = HEAP32[(24980)>>2]|0;
       $79 = ($73>>>0)<($78>>>0);
       if ($79) {
        _abort();
        // unreachable;
       }
       $80 = ((($73)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)==($71|0);
       if ($82) {
        HEAP32[$80>>2] = $69;
        HEAP32[$70>>2] = $73;
        $98 = $8;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $83 = $67 << 3;
     $84 = (($83) - ($6))|0;
     $85 = $6 | 3;
     $86 = ((($71)) + 4|0);
     HEAP32[$86>>2] = $85;
     $87 = (($71) + ($6)|0);
     $88 = $84 | 1;
     $89 = ((($87)) + 4|0);
     HEAP32[$89>>2] = $88;
     $90 = (($87) + ($84)|0);
     HEAP32[$90>>2] = $84;
     $91 = ($37|0)==(0);
     if (!($91)) {
      $92 = HEAP32[(24984)>>2]|0;
      $93 = $37 >>> 3;
      $94 = $93 << 1;
      $95 = (25004 + ($94<<2)|0);
      $96 = 1 << $93;
      $97 = $98 & $96;
      $99 = ($97|0)==(0);
      if ($99) {
       $100 = $98 | $96;
       HEAP32[6241] = $100;
       $$pre = ((($95)) + 8|0);
       $$0199 = $95;$$pre$phiZ2D = $$pre;
      } else {
       $101 = ((($95)) + 8|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = HEAP32[(24980)>>2]|0;
       $104 = ($102>>>0)<($103>>>0);
       if ($104) {
        _abort();
        // unreachable;
       } else {
        $$0199 = $102;$$pre$phiZ2D = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $92;
      $105 = ((($$0199)) + 12|0);
      HEAP32[$105>>2] = $92;
      $106 = ((($92)) + 8|0);
      HEAP32[$106>>2] = $$0199;
      $107 = ((($92)) + 12|0);
      HEAP32[$107>>2] = $95;
     }
     HEAP32[(24972)>>2] = $84;
     HEAP32[(24984)>>2] = $87;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    $108 = HEAP32[(24968)>>2]|0;
    $109 = ($108|0)==(0);
    if ($109) {
     $$0197 = $6;
    } else {
     $110 = (0 - ($108))|0;
     $111 = $108 & $110;
     $112 = (($111) + -1)|0;
     $113 = $112 >>> 12;
     $114 = $113 & 16;
     $115 = $112 >>> $114;
     $116 = $115 >>> 5;
     $117 = $116 & 8;
     $118 = $117 | $114;
     $119 = $115 >>> $117;
     $120 = $119 >>> 2;
     $121 = $120 & 4;
     $122 = $118 | $121;
     $123 = $119 >>> $121;
     $124 = $123 >>> 1;
     $125 = $124 & 2;
     $126 = $122 | $125;
     $127 = $123 >>> $125;
     $128 = $127 >>> 1;
     $129 = $128 & 1;
     $130 = $126 | $129;
     $131 = $127 >>> $129;
     $132 = (($130) + ($131))|0;
     $133 = (25268 + ($132<<2)|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($134)) + 4|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = $136 & -8;
     $138 = (($137) - ($6))|0;
     $$0189$i = $134;$$0190$i = $134;$$0191$i = $138;
     while(1) {
      $139 = ((($$0189$i)) + 16|0);
      $140 = HEAP32[$139>>2]|0;
      $141 = ($140|0)==(0|0);
      if ($141) {
       $142 = ((($$0189$i)) + 20|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ($143|0)==(0|0);
       if ($144) {
        break;
       } else {
        $146 = $143;
       }
      } else {
       $146 = $140;
      }
      $145 = ((($146)) + 4|0);
      $147 = HEAP32[$145>>2]|0;
      $148 = $147 & -8;
      $149 = (($148) - ($6))|0;
      $150 = ($149>>>0)<($$0191$i>>>0);
      $$$0191$i = $150 ? $149 : $$0191$i;
      $$$0190$i = $150 ? $146 : $$0190$i;
      $$0189$i = $146;$$0190$i = $$$0190$i;$$0191$i = $$$0191$i;
     }
     $151 = HEAP32[(24980)>>2]|0;
     $152 = ($$0190$i>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     }
     $153 = (($$0190$i) + ($6)|0);
     $154 = ($$0190$i>>>0)<($153>>>0);
     if (!($154)) {
      _abort();
      // unreachable;
     }
     $155 = ((($$0190$i)) + 24|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ((($$0190$i)) + 12|0);
     $158 = HEAP32[$157>>2]|0;
     $159 = ($158|0)==($$0190$i|0);
     do {
      if ($159) {
       $169 = ((($$0190$i)) + 20|0);
       $170 = HEAP32[$169>>2]|0;
       $171 = ($170|0)==(0|0);
       if ($171) {
        $172 = ((($$0190$i)) + 16|0);
        $173 = HEAP32[$172>>2]|0;
        $174 = ($173|0)==(0|0);
        if ($174) {
         $$3$i = 0;
         break;
        } else {
         $$1194$i = $173;$$1196$i = $172;
        }
       } else {
        $$1194$i = $170;$$1196$i = $169;
       }
       while(1) {
        $175 = ((($$1194$i)) + 20|0);
        $176 = HEAP32[$175>>2]|0;
        $177 = ($176|0)==(0|0);
        if (!($177)) {
         $$1194$i = $176;$$1196$i = $175;
         continue;
        }
        $178 = ((($$1194$i)) + 16|0);
        $179 = HEAP32[$178>>2]|0;
        $180 = ($179|0)==(0|0);
        if ($180) {
         break;
        } else {
         $$1194$i = $179;$$1196$i = $178;
        }
       }
       $181 = ($$1196$i>>>0)<($151>>>0);
       if ($181) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$1196$i>>2] = 0;
        $$3$i = $$1194$i;
        break;
       }
      } else {
       $160 = ((($$0190$i)) + 8|0);
       $161 = HEAP32[$160>>2]|0;
       $162 = ($161>>>0)<($151>>>0);
       if ($162) {
        _abort();
        // unreachable;
       }
       $163 = ((($161)) + 12|0);
       $164 = HEAP32[$163>>2]|0;
       $165 = ($164|0)==($$0190$i|0);
       if (!($165)) {
        _abort();
        // unreachable;
       }
       $166 = ((($158)) + 8|0);
       $167 = HEAP32[$166>>2]|0;
       $168 = ($167|0)==($$0190$i|0);
       if ($168) {
        HEAP32[$163>>2] = $158;
        HEAP32[$166>>2] = $161;
        $$3$i = $158;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $182 = ($156|0)==(0|0);
     do {
      if (!($182)) {
       $183 = ((($$0190$i)) + 28|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = (25268 + ($184<<2)|0);
       $186 = HEAP32[$185>>2]|0;
       $187 = ($$0190$i|0)==($186|0);
       if ($187) {
        HEAP32[$185>>2] = $$3$i;
        $cond$i = ($$3$i|0)==(0|0);
        if ($cond$i) {
         $188 = 1 << $184;
         $189 = $188 ^ -1;
         $190 = $108 & $189;
         HEAP32[(24968)>>2] = $190;
         break;
        }
       } else {
        $191 = HEAP32[(24980)>>2]|0;
        $192 = ($156>>>0)<($191>>>0);
        if ($192) {
         _abort();
         // unreachable;
        }
        $193 = ((($156)) + 16|0);
        $194 = HEAP32[$193>>2]|0;
        $195 = ($194|0)==($$0190$i|0);
        if ($195) {
         HEAP32[$193>>2] = $$3$i;
        } else {
         $196 = ((($156)) + 20|0);
         HEAP32[$196>>2] = $$3$i;
        }
        $197 = ($$3$i|0)==(0|0);
        if ($197) {
         break;
        }
       }
       $198 = HEAP32[(24980)>>2]|0;
       $199 = ($$3$i>>>0)<($198>>>0);
       if ($199) {
        _abort();
        // unreachable;
       }
       $200 = ((($$3$i)) + 24|0);
       HEAP32[$200>>2] = $156;
       $201 = ((($$0190$i)) + 16|0);
       $202 = HEAP32[$201>>2]|0;
       $203 = ($202|0)==(0|0);
       do {
        if (!($203)) {
         $204 = ($202>>>0)<($198>>>0);
         if ($204) {
          _abort();
          // unreachable;
         } else {
          $205 = ((($$3$i)) + 16|0);
          HEAP32[$205>>2] = $202;
          $206 = ((($202)) + 24|0);
          HEAP32[$206>>2] = $$3$i;
          break;
         }
        }
       } while(0);
       $207 = ((($$0190$i)) + 20|0);
       $208 = HEAP32[$207>>2]|0;
       $209 = ($208|0)==(0|0);
       if (!($209)) {
        $210 = HEAP32[(24980)>>2]|0;
        $211 = ($208>>>0)<($210>>>0);
        if ($211) {
         _abort();
         // unreachable;
        } else {
         $212 = ((($$3$i)) + 20|0);
         HEAP32[$212>>2] = $208;
         $213 = ((($208)) + 24|0);
         HEAP32[$213>>2] = $$3$i;
         break;
        }
       }
      }
     } while(0);
     $214 = ($$0191$i>>>0)<(16);
     if ($214) {
      $215 = (($$0191$i) + ($6))|0;
      $216 = $215 | 3;
      $217 = ((($$0190$i)) + 4|0);
      HEAP32[$217>>2] = $216;
      $218 = (($$0190$i) + ($215)|0);
      $219 = ((($218)) + 4|0);
      $220 = HEAP32[$219>>2]|0;
      $221 = $220 | 1;
      HEAP32[$219>>2] = $221;
     } else {
      $222 = $6 | 3;
      $223 = ((($$0190$i)) + 4|0);
      HEAP32[$223>>2] = $222;
      $224 = $$0191$i | 1;
      $225 = ((($153)) + 4|0);
      HEAP32[$225>>2] = $224;
      $226 = (($153) + ($$0191$i)|0);
      HEAP32[$226>>2] = $$0191$i;
      $227 = ($37|0)==(0);
      if (!($227)) {
       $228 = HEAP32[(24984)>>2]|0;
       $229 = $37 >>> 3;
       $230 = $229 << 1;
       $231 = (25004 + ($230<<2)|0);
       $232 = 1 << $229;
       $233 = $8 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $8 | $232;
        HEAP32[6241] = $235;
        $$pre$i = ((($231)) + 8|0);
        $$0187$i = $231;$$pre$phi$iZ2D = $$pre$i;
       } else {
        $236 = ((($231)) + 8|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(24980)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$0187$i = $237;$$pre$phi$iZ2D = $236;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $228;
       $240 = ((($$0187$i)) + 12|0);
       HEAP32[$240>>2] = $228;
       $241 = ((($228)) + 8|0);
       HEAP32[$241>>2] = $$0187$i;
       $242 = ((($228)) + 12|0);
       HEAP32[$242>>2] = $231;
      }
      HEAP32[(24972)>>2] = $$0191$i;
      HEAP32[(24984)>>2] = $153;
     }
     $243 = ((($$0190$i)) + 8|0);
     $$0 = $243;
     STACKTOP = sp;return ($$0|0);
    }
   } else {
    $$0197 = $6;
   }
  } else {
   $244 = ($0>>>0)>(4294967231);
   if ($244) {
    $$0197 = -1;
   } else {
    $245 = (($0) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(24968)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $$0197 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $$0356$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $$0356$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $$0356$i = $274;
      }
     }
     $275 = (25268 + ($$0356$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $$2353$i = 0;$$3$i201 = 0;$$3348$i = $249;
       label = 86;
      } else {
       $278 = ($$0356$i|0)==(31);
       $279 = $$0356$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $$0340$i = 0;$$0345$i = $249;$$0351$i = $276;$$0357$i = $282;$$0360$i = 0;
       while(1) {
        $283 = ((($$0351$i)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($$0345$i>>>0);
        if ($287) {
         $288 = ($286|0)==(0);
         if ($288) {
          $$413$i = $$0351$i;$$434912$i = 0;$$435511$i = $$0351$i;
          label = 90;
          break L123;
         } else {
          $$1341$i = $$0351$i;$$1346$i = $286;
         }
        } else {
         $$1341$i = $$0340$i;$$1346$i = $$0345$i;
        }
        $289 = ((($$0351$i)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $$0357$i >>> 31;
        $292 = (((($$0351$i)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond1$i = $294 | $295;
        $$1361$i = $or$cond1$i ? $$0360$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $296&1;
        $298 = $297 ^ 1;
        $$0357$$i = $$0357$i << $298;
        if ($296) {
         $$2353$i = $$1361$i;$$3$i201 = $$1341$i;$$3348$i = $$1346$i;
         label = 86;
         break;
        } else {
         $$0340$i = $$1341$i;$$0345$i = $$1346$i;$$0351$i = $293;$$0357$i = $$0357$$i;$$0360$i = $$1361$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $299 = ($$2353$i|0)==(0|0);
      $300 = ($$3$i201|0)==(0|0);
      $or$cond$i = $299 & $300;
      if ($or$cond$i) {
       $301 = 2 << $$0356$i;
       $302 = (0 - ($301))|0;
       $303 = $301 | $302;
       $304 = $247 & $303;
       $305 = ($304|0)==(0);
       if ($305) {
        $$0197 = $246;
        break;
       }
       $306 = (0 - ($304))|0;
       $307 = $304 & $306;
       $308 = (($307) + -1)|0;
       $309 = $308 >>> 12;
       $310 = $309 & 16;
       $311 = $308 >>> $310;
       $312 = $311 >>> 5;
       $313 = $312 & 8;
       $314 = $313 | $310;
       $315 = $311 >>> $313;
       $316 = $315 >>> 2;
       $317 = $316 & 4;
       $318 = $314 | $317;
       $319 = $315 >>> $317;
       $320 = $319 >>> 1;
       $321 = $320 & 2;
       $322 = $318 | $321;
       $323 = $319 >>> $321;
       $324 = $323 >>> 1;
       $325 = $324 & 1;
       $326 = $322 | $325;
       $327 = $323 >>> $325;
       $328 = (($326) + ($327))|0;
       $329 = (25268 + ($328<<2)|0);
       $330 = HEAP32[$329>>2]|0;
       $$4355$ph$i = $330;
      } else {
       $$4355$ph$i = $$2353$i;
      }
      $331 = ($$4355$ph$i|0)==(0|0);
      if ($331) {
       $$4$lcssa$i = $$3$i201;$$4349$lcssa$i = $$3348$i;
      } else {
       $$413$i = $$3$i201;$$434912$i = $$3348$i;$$435511$i = $$4355$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $332 = ((($$435511$i)) + 4|0);
       $333 = HEAP32[$332>>2]|0;
       $334 = $333 & -8;
       $335 = (($334) - ($246))|0;
       $336 = ($335>>>0)<($$434912$i>>>0);
       $$$4349$i = $336 ? $335 : $$434912$i;
       $$4355$$4$i = $336 ? $$435511$i : $$413$i;
       $337 = ((($$435511$i)) + 16|0);
       $338 = HEAP32[$337>>2]|0;
       $339 = ($338|0)==(0|0);
       if (!($339)) {
        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $338;
        label = 90;
        continue;
       }
       $340 = ((($$435511$i)) + 20|0);
       $341 = HEAP32[$340>>2]|0;
       $342 = ($341|0)==(0|0);
       if ($342) {
        $$4$lcssa$i = $$4355$$4$i;$$4349$lcssa$i = $$$4349$i;
        break;
       } else {
        $$413$i = $$4355$$4$i;$$434912$i = $$$4349$i;$$435511$i = $341;
        label = 90;
       }
      }
     }
     $343 = ($$4$lcssa$i|0)==(0|0);
     if ($343) {
      $$0197 = $246;
     } else {
      $344 = HEAP32[(24972)>>2]|0;
      $345 = (($344) - ($246))|0;
      $346 = ($$4349$lcssa$i>>>0)<($345>>>0);
      if ($346) {
       $347 = HEAP32[(24980)>>2]|0;
       $348 = ($$4$lcssa$i>>>0)<($347>>>0);
       if ($348) {
        _abort();
        // unreachable;
       }
       $349 = (($$4$lcssa$i) + ($246)|0);
       $350 = ($$4$lcssa$i>>>0)<($349>>>0);
       if (!($350)) {
        _abort();
        // unreachable;
       }
       $351 = ((($$4$lcssa$i)) + 24|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = ((($$4$lcssa$i)) + 12|0);
       $354 = HEAP32[$353>>2]|0;
       $355 = ($354|0)==($$4$lcssa$i|0);
       do {
        if ($355) {
         $365 = ((($$4$lcssa$i)) + 20|0);
         $366 = HEAP32[$365>>2]|0;
         $367 = ($366|0)==(0|0);
         if ($367) {
          $368 = ((($$4$lcssa$i)) + 16|0);
          $369 = HEAP32[$368>>2]|0;
          $370 = ($369|0)==(0|0);
          if ($370) {
           $$3370$i = 0;
           break;
          } else {
           $$1368$i = $369;$$1372$i = $368;
          }
         } else {
          $$1368$i = $366;$$1372$i = $365;
         }
         while(1) {
          $371 = ((($$1368$i)) + 20|0);
          $372 = HEAP32[$371>>2]|0;
          $373 = ($372|0)==(0|0);
          if (!($373)) {
           $$1368$i = $372;$$1372$i = $371;
           continue;
          }
          $374 = ((($$1368$i)) + 16|0);
          $375 = HEAP32[$374>>2]|0;
          $376 = ($375|0)==(0|0);
          if ($376) {
           break;
          } else {
           $$1368$i = $375;$$1372$i = $374;
          }
         }
         $377 = ($$1372$i>>>0)<($347>>>0);
         if ($377) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$1372$i>>2] = 0;
          $$3370$i = $$1368$i;
          break;
         }
        } else {
         $356 = ((($$4$lcssa$i)) + 8|0);
         $357 = HEAP32[$356>>2]|0;
         $358 = ($357>>>0)<($347>>>0);
         if ($358) {
          _abort();
          // unreachable;
         }
         $359 = ((($357)) + 12|0);
         $360 = HEAP32[$359>>2]|0;
         $361 = ($360|0)==($$4$lcssa$i|0);
         if (!($361)) {
          _abort();
          // unreachable;
         }
         $362 = ((($354)) + 8|0);
         $363 = HEAP32[$362>>2]|0;
         $364 = ($363|0)==($$4$lcssa$i|0);
         if ($364) {
          HEAP32[$359>>2] = $354;
          HEAP32[$362>>2] = $357;
          $$3370$i = $354;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $378 = ($352|0)==(0|0);
       do {
        if ($378) {
         $470 = $247;
        } else {
         $379 = ((($$4$lcssa$i)) + 28|0);
         $380 = HEAP32[$379>>2]|0;
         $381 = (25268 + ($380<<2)|0);
         $382 = HEAP32[$381>>2]|0;
         $383 = ($$4$lcssa$i|0)==($382|0);
         if ($383) {
          HEAP32[$381>>2] = $$3370$i;
          $cond$i204 = ($$3370$i|0)==(0|0);
          if ($cond$i204) {
           $384 = 1 << $380;
           $385 = $384 ^ -1;
           $386 = $247 & $385;
           HEAP32[(24968)>>2] = $386;
           $470 = $386;
           break;
          }
         } else {
          $387 = HEAP32[(24980)>>2]|0;
          $388 = ($352>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($352)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($$4$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $$3370$i;
          } else {
           $392 = ((($352)) + 20|0);
           HEAP32[$392>>2] = $$3370$i;
          }
          $393 = ($$3370$i|0)==(0|0);
          if ($393) {
           $470 = $247;
           break;
          }
         }
         $394 = HEAP32[(24980)>>2]|0;
         $395 = ($$3370$i>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($$3370$i)) + 24|0);
         HEAP32[$396>>2] = $352;
         $397 = ((($$4$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($$3370$i)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $$3370$i;
            break;
           }
          }
         } while(0);
         $403 = ((($$4$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if ($405) {
          $470 = $247;
         } else {
          $406 = HEAP32[(24980)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($$3370$i)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $$3370$i;
           $470 = $247;
           break;
          }
         }
        }
       } while(0);
       $410 = ($$4349$lcssa$i>>>0)<(16);
       do {
        if ($410) {
         $411 = (($$4349$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $414 = (($$4$lcssa$i) + ($411)|0);
         $415 = ((($414)) + 4|0);
         $416 = HEAP32[$415>>2]|0;
         $417 = $416 | 1;
         HEAP32[$415>>2] = $417;
        } else {
         $418 = $246 | 3;
         $419 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$419>>2] = $418;
         $420 = $$4349$lcssa$i | 1;
         $421 = ((($349)) + 4|0);
         HEAP32[$421>>2] = $420;
         $422 = (($349) + ($$4349$lcssa$i)|0);
         HEAP32[$422>>2] = $$4349$lcssa$i;
         $423 = $$4349$lcssa$i >>> 3;
         $424 = ($$4349$lcssa$i>>>0)<(256);
         if ($424) {
          $425 = $423 << 1;
          $426 = (25004 + ($425<<2)|0);
          $427 = HEAP32[6241]|0;
          $428 = 1 << $423;
          $429 = $427 & $428;
          $430 = ($429|0)==(0);
          if ($430) {
           $431 = $427 | $428;
           HEAP32[6241] = $431;
           $$pre$i205 = ((($426)) + 8|0);
           $$0366$i = $426;$$pre$phi$i206Z2D = $$pre$i205;
          } else {
           $432 = ((($426)) + 8|0);
           $433 = HEAP32[$432>>2]|0;
           $434 = HEAP32[(24980)>>2]|0;
           $435 = ($433>>>0)<($434>>>0);
           if ($435) {
            _abort();
            // unreachable;
           } else {
            $$0366$i = $433;$$pre$phi$i206Z2D = $432;
           }
          }
          HEAP32[$$pre$phi$i206Z2D>>2] = $349;
          $436 = ((($$0366$i)) + 12|0);
          HEAP32[$436>>2] = $349;
          $437 = ((($349)) + 8|0);
          HEAP32[$437>>2] = $$0366$i;
          $438 = ((($349)) + 12|0);
          HEAP32[$438>>2] = $426;
          break;
         }
         $439 = $$4349$lcssa$i >>> 8;
         $440 = ($439|0)==(0);
         if ($440) {
          $$0359$i = 0;
         } else {
          $441 = ($$4349$lcssa$i>>>0)>(16777215);
          if ($441) {
           $$0359$i = 31;
          } else {
           $442 = (($439) + 1048320)|0;
           $443 = $442 >>> 16;
           $444 = $443 & 8;
           $445 = $439 << $444;
           $446 = (($445) + 520192)|0;
           $447 = $446 >>> 16;
           $448 = $447 & 4;
           $449 = $448 | $444;
           $450 = $445 << $448;
           $451 = (($450) + 245760)|0;
           $452 = $451 >>> 16;
           $453 = $452 & 2;
           $454 = $449 | $453;
           $455 = (14 - ($454))|0;
           $456 = $450 << $453;
           $457 = $456 >>> 15;
           $458 = (($455) + ($457))|0;
           $459 = $458 << 1;
           $460 = (($458) + 7)|0;
           $461 = $$4349$lcssa$i >>> $460;
           $462 = $461 & 1;
           $463 = $462 | $459;
           $$0359$i = $463;
          }
         }
         $464 = (25268 + ($$0359$i<<2)|0);
         $465 = ((($349)) + 28|0);
         HEAP32[$465>>2] = $$0359$i;
         $466 = ((($349)) + 16|0);
         $467 = ((($466)) + 4|0);
         HEAP32[$467>>2] = 0;
         HEAP32[$466>>2] = 0;
         $468 = 1 << $$0359$i;
         $469 = $470 & $468;
         $471 = ($469|0)==(0);
         if ($471) {
          $472 = $470 | $468;
          HEAP32[(24968)>>2] = $472;
          HEAP32[$464>>2] = $349;
          $473 = ((($349)) + 24|0);
          HEAP32[$473>>2] = $464;
          $474 = ((($349)) + 12|0);
          HEAP32[$474>>2] = $349;
          $475 = ((($349)) + 8|0);
          HEAP32[$475>>2] = $349;
          break;
         }
         $476 = HEAP32[$464>>2]|0;
         $477 = ($$0359$i|0)==(31);
         $478 = $$0359$i >>> 1;
         $479 = (25 - ($478))|0;
         $480 = $477 ? 0 : $479;
         $481 = $$4349$lcssa$i << $480;
         $$0342$i = $481;$$0343$i = $476;
         while(1) {
          $482 = ((($$0343$i)) + 4|0);
          $483 = HEAP32[$482>>2]|0;
          $484 = $483 & -8;
          $485 = ($484|0)==($$4349$lcssa$i|0);
          if ($485) {
           label = 148;
           break;
          }
          $486 = $$0342$i >>> 31;
          $487 = (((($$0343$i)) + 16|0) + ($486<<2)|0);
          $488 = $$0342$i << 1;
          $489 = HEAP32[$487>>2]|0;
          $490 = ($489|0)==(0|0);
          if ($490) {
           label = 145;
           break;
          } else {
           $$0342$i = $488;$$0343$i = $489;
          }
         }
         if ((label|0) == 145) {
          $491 = HEAP32[(24980)>>2]|0;
          $492 = ($487>>>0)<($491>>>0);
          if ($492) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$487>>2] = $349;
           $493 = ((($349)) + 24|0);
           HEAP32[$493>>2] = $$0343$i;
           $494 = ((($349)) + 12|0);
           HEAP32[$494>>2] = $349;
           $495 = ((($349)) + 8|0);
           HEAP32[$495>>2] = $349;
           break;
          }
         }
         else if ((label|0) == 148) {
          $496 = ((($$0343$i)) + 8|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = HEAP32[(24980)>>2]|0;
          $499 = ($497>>>0)>=($498>>>0);
          $not$7$i = ($$0343$i>>>0)>=($498>>>0);
          $500 = $499 & $not$7$i;
          if ($500) {
           $501 = ((($497)) + 12|0);
           HEAP32[$501>>2] = $349;
           HEAP32[$496>>2] = $349;
           $502 = ((($349)) + 8|0);
           HEAP32[$502>>2] = $497;
           $503 = ((($349)) + 12|0);
           HEAP32[$503>>2] = $$0343$i;
           $504 = ((($349)) + 24|0);
           HEAP32[$504>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $505 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $505;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0197 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $506 = HEAP32[(24972)>>2]|0;
 $507 = ($506>>>0)<($$0197>>>0);
 if (!($507)) {
  $508 = (($506) - ($$0197))|0;
  $509 = HEAP32[(24984)>>2]|0;
  $510 = ($508>>>0)>(15);
  if ($510) {
   $511 = (($509) + ($$0197)|0);
   HEAP32[(24984)>>2] = $511;
   HEAP32[(24972)>>2] = $508;
   $512 = $508 | 1;
   $513 = ((($511)) + 4|0);
   HEAP32[$513>>2] = $512;
   $514 = (($511) + ($508)|0);
   HEAP32[$514>>2] = $508;
   $515 = $$0197 | 3;
   $516 = ((($509)) + 4|0);
   HEAP32[$516>>2] = $515;
  } else {
   HEAP32[(24972)>>2] = 0;
   HEAP32[(24984)>>2] = 0;
   $517 = $506 | 3;
   $518 = ((($509)) + 4|0);
   HEAP32[$518>>2] = $517;
   $519 = (($509) + ($506)|0);
   $520 = ((($519)) + 4|0);
   $521 = HEAP32[$520>>2]|0;
   $522 = $521 | 1;
   HEAP32[$520>>2] = $522;
  }
  $523 = ((($509)) + 8|0);
  $$0 = $523;
  STACKTOP = sp;return ($$0|0);
 }
 $524 = HEAP32[(24976)>>2]|0;
 $525 = ($524>>>0)>($$0197>>>0);
 if ($525) {
  $526 = (($524) - ($$0197))|0;
  HEAP32[(24976)>>2] = $526;
  $527 = HEAP32[(24988)>>2]|0;
  $528 = (($527) + ($$0197)|0);
  HEAP32[(24988)>>2] = $528;
  $529 = $526 | 1;
  $530 = ((($528)) + 4|0);
  HEAP32[$530>>2] = $529;
  $531 = $$0197 | 3;
  $532 = ((($527)) + 4|0);
  HEAP32[$532>>2] = $531;
  $533 = ((($527)) + 8|0);
  $$0 = $533;
  STACKTOP = sp;return ($$0|0);
 }
 $534 = HEAP32[6359]|0;
 $535 = ($534|0)==(0);
 if ($535) {
  HEAP32[(25444)>>2] = 4096;
  HEAP32[(25440)>>2] = 4096;
  HEAP32[(25448)>>2] = -1;
  HEAP32[(25452)>>2] = -1;
  HEAP32[(25456)>>2] = 0;
  HEAP32[(25408)>>2] = 0;
  $536 = $1;
  $537 = $536 & -16;
  $538 = $537 ^ 1431655768;
  HEAP32[$1>>2] = $538;
  HEAP32[6359] = $538;
  $542 = 4096;
 } else {
  $$pre$i208 = HEAP32[(25444)>>2]|0;
  $542 = $$pre$i208;
 }
 $539 = (($$0197) + 48)|0;
 $540 = (($$0197) + 47)|0;
 $541 = (($542) + ($540))|0;
 $543 = (0 - ($542))|0;
 $544 = $541 & $543;
 $545 = ($544>>>0)>($$0197>>>0);
 if (!($545)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $546 = HEAP32[(25404)>>2]|0;
 $547 = ($546|0)==(0);
 if (!($547)) {
  $548 = HEAP32[(25396)>>2]|0;
  $549 = (($548) + ($544))|0;
  $550 = ($549>>>0)<=($548>>>0);
  $551 = ($549>>>0)>($546>>>0);
  $or$cond1$i210 = $550 | $551;
  if ($or$cond1$i210) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $552 = HEAP32[(25408)>>2]|0;
 $553 = $552 & 4;
 $554 = ($553|0)==(0);
 L255: do {
  if ($554) {
   $555 = HEAP32[(24988)>>2]|0;
   $556 = ($555|0)==(0|0);
   L257: do {
    if ($556) {
     label = 172;
    } else {
     $$0$i17$i = (25412);
     while(1) {
      $557 = HEAP32[$$0$i17$i>>2]|0;
      $558 = ($557>>>0)>($555>>>0);
      if (!($558)) {
       $559 = ((($$0$i17$i)) + 4|0);
       $560 = HEAP32[$559>>2]|0;
       $561 = (($557) + ($560)|0);
       $562 = ($561>>>0)>($555>>>0);
       if ($562) {
        break;
       }
      }
      $563 = ((($$0$i17$i)) + 8|0);
      $564 = HEAP32[$563>>2]|0;
      $565 = ($564|0)==(0|0);
      if ($565) {
       label = 172;
       break L257;
      } else {
       $$0$i17$i = $564;
      }
     }
     $588 = (($541) - ($524))|0;
     $589 = $588 & $543;
     $590 = ($589>>>0)<(2147483647);
     if ($590) {
      $591 = (_sbrk(($589|0))|0);
      $592 = HEAP32[$$0$i17$i>>2]|0;
      $593 = HEAP32[$559>>2]|0;
      $594 = (($592) + ($593)|0);
      $595 = ($591|0)==($594|0);
      if ($595) {
       $596 = ($591|0)==((-1)|0);
       if (!($596)) {
        $$723947$i = $589;$$748$i = $591;
        label = 190;
        break L255;
       }
      } else {
       $$2247$ph$i = $591;$$2253$ph$i = $589;
       label = 180;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 172) {
     $566 = (_sbrk(0)|0);
     $567 = ($566|0)==((-1)|0);
     if (!($567)) {
      $568 = $566;
      $569 = HEAP32[(25440)>>2]|0;
      $570 = (($569) + -1)|0;
      $571 = $570 & $568;
      $572 = ($571|0)==(0);
      $573 = (($570) + ($568))|0;
      $574 = (0 - ($569))|0;
      $575 = $573 & $574;
      $576 = (($575) - ($568))|0;
      $577 = $572 ? 0 : $576;
      $$$i = (($577) + ($544))|0;
      $578 = HEAP32[(25396)>>2]|0;
      $579 = (($$$i) + ($578))|0;
      $580 = ($$$i>>>0)>($$0197>>>0);
      $581 = ($$$i>>>0)<(2147483647);
      $or$cond$i211 = $580 & $581;
      if ($or$cond$i211) {
       $582 = HEAP32[(25404)>>2]|0;
       $583 = ($582|0)==(0);
       if (!($583)) {
        $584 = ($579>>>0)<=($578>>>0);
        $585 = ($579>>>0)>($582>>>0);
        $or$cond2$i = $584 | $585;
        if ($or$cond2$i) {
         break;
        }
       }
       $586 = (_sbrk(($$$i|0))|0);
       $587 = ($586|0)==($566|0);
       if ($587) {
        $$723947$i = $$$i;$$748$i = $566;
        label = 190;
        break L255;
       } else {
        $$2247$ph$i = $586;$$2253$ph$i = $$$i;
        label = 180;
       }
      }
     }
    }
   } while(0);
   L274: do {
    if ((label|0) == 180) {
     $597 = (0 - ($$2253$ph$i))|0;
     $598 = ($$2247$ph$i|0)!=((-1)|0);
     $599 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $599 & $598;
     $600 = ($539>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $600 & $or$cond7$i;
     do {
      if ($or$cond10$i) {
       $601 = HEAP32[(25444)>>2]|0;
       $602 = (($540) - ($$2253$ph$i))|0;
       $603 = (($602) + ($601))|0;
       $604 = (0 - ($601))|0;
       $605 = $603 & $604;
       $606 = ($605>>>0)<(2147483647);
       if ($606) {
        $607 = (_sbrk(($605|0))|0);
        $608 = ($607|0)==((-1)|0);
        if ($608) {
         (_sbrk(($597|0))|0);
         break L274;
        } else {
         $609 = (($605) + ($$2253$ph$i))|0;
         $$5256$i = $609;
         break;
        }
       } else {
        $$5256$i = $$2253$ph$i;
       }
      } else {
       $$5256$i = $$2253$ph$i;
      }
     } while(0);
     $610 = ($$2247$ph$i|0)==((-1)|0);
     if (!($610)) {
      $$723947$i = $$5256$i;$$748$i = $$2247$ph$i;
      label = 190;
      break L255;
     }
    }
   } while(0);
   $611 = HEAP32[(25408)>>2]|0;
   $612 = $611 | 4;
   HEAP32[(25408)>>2] = $612;
   label = 187;
  } else {
   label = 187;
  }
 } while(0);
 if ((label|0) == 187) {
  $613 = ($544>>>0)<(2147483647);
  if ($613) {
   $614 = (_sbrk(($544|0))|0);
   $615 = (_sbrk(0)|0);
   $616 = ($614|0)!=((-1)|0);
   $617 = ($615|0)!=((-1)|0);
   $or$cond5$i = $616 & $617;
   $618 = ($614>>>0)<($615>>>0);
   $or$cond11$i = $618 & $or$cond5$i;
   if ($or$cond11$i) {
    $619 = $615;
    $620 = $614;
    $621 = (($619) - ($620))|0;
    $622 = (($$0197) + 40)|0;
    $$not$i = ($621>>>0)>($622>>>0);
    if ($$not$i) {
     $$723947$i = $621;$$748$i = $614;
     label = 190;
    }
   }
  }
 }
 if ((label|0) == 190) {
  $623 = HEAP32[(25396)>>2]|0;
  $624 = (($623) + ($$723947$i))|0;
  HEAP32[(25396)>>2] = $624;
  $625 = HEAP32[(25400)>>2]|0;
  $626 = ($624>>>0)>($625>>>0);
  if ($626) {
   HEAP32[(25400)>>2] = $624;
  }
  $627 = HEAP32[(24988)>>2]|0;
  $628 = ($627|0)==(0|0);
  do {
   if ($628) {
    $629 = HEAP32[(24980)>>2]|0;
    $630 = ($629|0)==(0|0);
    $631 = ($$748$i>>>0)<($629>>>0);
    $or$cond12$i = $630 | $631;
    if ($or$cond12$i) {
     HEAP32[(24980)>>2] = $$748$i;
    }
    HEAP32[(25412)>>2] = $$748$i;
    HEAP32[(25416)>>2] = $$723947$i;
    HEAP32[(25424)>>2] = 0;
    $632 = HEAP32[6359]|0;
    HEAP32[(25000)>>2] = $632;
    HEAP32[(24996)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $633 = $$01$i$i << 1;
     $634 = (25004 + ($633<<2)|0);
     $635 = ((($634)) + 12|0);
     HEAP32[$635>>2] = $634;
     $636 = ((($634)) + 8|0);
     HEAP32[$636>>2] = $634;
     $637 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($637|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $637;
     }
    }
    $638 = (($$723947$i) + -40)|0;
    $639 = ((($$748$i)) + 8|0);
    $640 = $639;
    $641 = $640 & 7;
    $642 = ($641|0)==(0);
    $643 = (0 - ($640))|0;
    $644 = $643 & 7;
    $645 = $642 ? 0 : $644;
    $646 = (($$748$i) + ($645)|0);
    $647 = (($638) - ($645))|0;
    HEAP32[(24988)>>2] = $646;
    HEAP32[(24976)>>2] = $647;
    $648 = $647 | 1;
    $649 = ((($646)) + 4|0);
    HEAP32[$649>>2] = $648;
    $650 = (($646) + ($647)|0);
    $651 = ((($650)) + 4|0);
    HEAP32[$651>>2] = 40;
    $652 = HEAP32[(25452)>>2]|0;
    HEAP32[(24992)>>2] = $652;
   } else {
    $$024370$i = (25412);
    while(1) {
     $653 = HEAP32[$$024370$i>>2]|0;
     $654 = ((($$024370$i)) + 4|0);
     $655 = HEAP32[$654>>2]|0;
     $656 = (($653) + ($655)|0);
     $657 = ($$748$i|0)==($656|0);
     if ($657) {
      label = 200;
      break;
     }
     $658 = ((($$024370$i)) + 8|0);
     $659 = HEAP32[$658>>2]|0;
     $660 = ($659|0)==(0|0);
     if ($660) {
      break;
     } else {
      $$024370$i = $659;
     }
    }
    if ((label|0) == 200) {
     $661 = ((($$024370$i)) + 12|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = $662 & 8;
     $664 = ($663|0)==(0);
     if ($664) {
      $665 = ($627>>>0)>=($653>>>0);
      $666 = ($627>>>0)<($$748$i>>>0);
      $or$cond50$i = $666 & $665;
      if ($or$cond50$i) {
       $667 = (($655) + ($$723947$i))|0;
       HEAP32[$654>>2] = $667;
       $668 = HEAP32[(24976)>>2]|0;
       $669 = ((($627)) + 8|0);
       $670 = $669;
       $671 = $670 & 7;
       $672 = ($671|0)==(0);
       $673 = (0 - ($670))|0;
       $674 = $673 & 7;
       $675 = $672 ? 0 : $674;
       $676 = (($627) + ($675)|0);
       $677 = (($$723947$i) - ($675))|0;
       $678 = (($677) + ($668))|0;
       HEAP32[(24988)>>2] = $676;
       HEAP32[(24976)>>2] = $678;
       $679 = $678 | 1;
       $680 = ((($676)) + 4|0);
       HEAP32[$680>>2] = $679;
       $681 = (($676) + ($678)|0);
       $682 = ((($681)) + 4|0);
       HEAP32[$682>>2] = 40;
       $683 = HEAP32[(25452)>>2]|0;
       HEAP32[(24992)>>2] = $683;
       break;
      }
     }
    }
    $684 = HEAP32[(24980)>>2]|0;
    $685 = ($$748$i>>>0)<($684>>>0);
    if ($685) {
     HEAP32[(24980)>>2] = $$748$i;
     $749 = $$748$i;
    } else {
     $749 = $684;
    }
    $686 = (($$748$i) + ($$723947$i)|0);
    $$124469$i = (25412);
    while(1) {
     $687 = HEAP32[$$124469$i>>2]|0;
     $688 = ($687|0)==($686|0);
     if ($688) {
      label = 208;
      break;
     }
     $689 = ((($$124469$i)) + 8|0);
     $690 = HEAP32[$689>>2]|0;
     $691 = ($690|0)==(0|0);
     if ($691) {
      $$0$i$i$i = (25412);
      break;
     } else {
      $$124469$i = $690;
     }
    }
    if ((label|0) == 208) {
     $692 = ((($$124469$i)) + 12|0);
     $693 = HEAP32[$692>>2]|0;
     $694 = $693 & 8;
     $695 = ($694|0)==(0);
     if ($695) {
      HEAP32[$$124469$i>>2] = $$748$i;
      $696 = ((($$124469$i)) + 4|0);
      $697 = HEAP32[$696>>2]|0;
      $698 = (($697) + ($$723947$i))|0;
      HEAP32[$696>>2] = $698;
      $699 = ((($$748$i)) + 8|0);
      $700 = $699;
      $701 = $700 & 7;
      $702 = ($701|0)==(0);
      $703 = (0 - ($700))|0;
      $704 = $703 & 7;
      $705 = $702 ? 0 : $704;
      $706 = (($$748$i) + ($705)|0);
      $707 = ((($686)) + 8|0);
      $708 = $707;
      $709 = $708 & 7;
      $710 = ($709|0)==(0);
      $711 = (0 - ($708))|0;
      $712 = $711 & 7;
      $713 = $710 ? 0 : $712;
      $714 = (($686) + ($713)|0);
      $715 = $714;
      $716 = $706;
      $717 = (($715) - ($716))|0;
      $718 = (($706) + ($$0197)|0);
      $719 = (($717) - ($$0197))|0;
      $720 = $$0197 | 3;
      $721 = ((($706)) + 4|0);
      HEAP32[$721>>2] = $720;
      $722 = ($714|0)==($627|0);
      do {
       if ($722) {
        $723 = HEAP32[(24976)>>2]|0;
        $724 = (($723) + ($719))|0;
        HEAP32[(24976)>>2] = $724;
        HEAP32[(24988)>>2] = $718;
        $725 = $724 | 1;
        $726 = ((($718)) + 4|0);
        HEAP32[$726>>2] = $725;
       } else {
        $727 = HEAP32[(24984)>>2]|0;
        $728 = ($714|0)==($727|0);
        if ($728) {
         $729 = HEAP32[(24972)>>2]|0;
         $730 = (($729) + ($719))|0;
         HEAP32[(24972)>>2] = $730;
         HEAP32[(24984)>>2] = $718;
         $731 = $730 | 1;
         $732 = ((($718)) + 4|0);
         HEAP32[$732>>2] = $731;
         $733 = (($718) + ($730)|0);
         HEAP32[$733>>2] = $730;
         break;
        }
        $734 = ((($714)) + 4|0);
        $735 = HEAP32[$734>>2]|0;
        $736 = $735 & 3;
        $737 = ($736|0)==(1);
        if ($737) {
         $738 = $735 & -8;
         $739 = $735 >>> 3;
         $740 = ($735>>>0)<(256);
         L326: do {
          if ($740) {
           $741 = ((($714)) + 8|0);
           $742 = HEAP32[$741>>2]|0;
           $743 = ((($714)) + 12|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = $739 << 1;
           $746 = (25004 + ($745<<2)|0);
           $747 = ($742|0)==($746|0);
           do {
            if (!($747)) {
             $748 = ($742>>>0)<($749>>>0);
             if ($748) {
              _abort();
              // unreachable;
             }
             $750 = ((($742)) + 12|0);
             $751 = HEAP32[$750>>2]|0;
             $752 = ($751|0)==($714|0);
             if ($752) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $753 = ($744|0)==($742|0);
           if ($753) {
            $754 = 1 << $739;
            $755 = $754 ^ -1;
            $756 = HEAP32[6241]|0;
            $757 = $756 & $755;
            HEAP32[6241] = $757;
            break;
           }
           $758 = ($744|0)==($746|0);
           do {
            if ($758) {
             $$pre9$i$i = ((($744)) + 8|0);
             $$pre$phi10$i$iZ2D = $$pre9$i$i;
            } else {
             $759 = ($744>>>0)<($749>>>0);
             if ($759) {
              _abort();
              // unreachable;
             }
             $760 = ((($744)) + 8|0);
             $761 = HEAP32[$760>>2]|0;
             $762 = ($761|0)==($714|0);
             if ($762) {
              $$pre$phi10$i$iZ2D = $760;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $763 = ((($742)) + 12|0);
           HEAP32[$763>>2] = $744;
           HEAP32[$$pre$phi10$i$iZ2D>>2] = $742;
          } else {
           $764 = ((($714)) + 24|0);
           $765 = HEAP32[$764>>2]|0;
           $766 = ((($714)) + 12|0);
           $767 = HEAP32[$766>>2]|0;
           $768 = ($767|0)==($714|0);
           do {
            if ($768) {
             $778 = ((($714)) + 16|0);
             $779 = ((($778)) + 4|0);
             $780 = HEAP32[$779>>2]|0;
             $781 = ($780|0)==(0|0);
             if ($781) {
              $782 = HEAP32[$778>>2]|0;
              $783 = ($782|0)==(0|0);
              if ($783) {
               $$3$i$i = 0;
               break;
              } else {
               $$1290$i$i = $782;$$1292$i$i = $778;
              }
             } else {
              $$1290$i$i = $780;$$1292$i$i = $779;
             }
             while(1) {
              $784 = ((($$1290$i$i)) + 20|0);
              $785 = HEAP32[$784>>2]|0;
              $786 = ($785|0)==(0|0);
              if (!($786)) {
               $$1290$i$i = $785;$$1292$i$i = $784;
               continue;
              }
              $787 = ((($$1290$i$i)) + 16|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               break;
              } else {
               $$1290$i$i = $788;$$1292$i$i = $787;
              }
             }
             $790 = ($$1292$i$i>>>0)<($749>>>0);
             if ($790) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$1292$i$i>>2] = 0;
              $$3$i$i = $$1290$i$i;
              break;
             }
            } else {
             $769 = ((($714)) + 8|0);
             $770 = HEAP32[$769>>2]|0;
             $771 = ($770>>>0)<($749>>>0);
             if ($771) {
              _abort();
              // unreachable;
             }
             $772 = ((($770)) + 12|0);
             $773 = HEAP32[$772>>2]|0;
             $774 = ($773|0)==($714|0);
             if (!($774)) {
              _abort();
              // unreachable;
             }
             $775 = ((($767)) + 8|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776|0)==($714|0);
             if ($777) {
              HEAP32[$772>>2] = $767;
              HEAP32[$775>>2] = $770;
              $$3$i$i = $767;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $791 = ($765|0)==(0|0);
           if ($791) {
            break;
           }
           $792 = ((($714)) + 28|0);
           $793 = HEAP32[$792>>2]|0;
           $794 = (25268 + ($793<<2)|0);
           $795 = HEAP32[$794>>2]|0;
           $796 = ($714|0)==($795|0);
           do {
            if ($796) {
             HEAP32[$794>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $797 = 1 << $793;
             $798 = $797 ^ -1;
             $799 = HEAP32[(24968)>>2]|0;
             $800 = $799 & $798;
             HEAP32[(24968)>>2] = $800;
             break L326;
            } else {
             $801 = HEAP32[(24980)>>2]|0;
             $802 = ($765>>>0)<($801>>>0);
             if ($802) {
              _abort();
              // unreachable;
             }
             $803 = ((($765)) + 16|0);
             $804 = HEAP32[$803>>2]|0;
             $805 = ($804|0)==($714|0);
             if ($805) {
              HEAP32[$803>>2] = $$3$i$i;
             } else {
              $806 = ((($765)) + 20|0);
              HEAP32[$806>>2] = $$3$i$i;
             }
             $807 = ($$3$i$i|0)==(0|0);
             if ($807) {
              break L326;
             }
            }
           } while(0);
           $808 = HEAP32[(24980)>>2]|0;
           $809 = ($$3$i$i>>>0)<($808>>>0);
           if ($809) {
            _abort();
            // unreachable;
           }
           $810 = ((($$3$i$i)) + 24|0);
           HEAP32[$810>>2] = $765;
           $811 = ((($714)) + 16|0);
           $812 = HEAP32[$811>>2]|0;
           $813 = ($812|0)==(0|0);
           do {
            if (!($813)) {
             $814 = ($812>>>0)<($808>>>0);
             if ($814) {
              _abort();
              // unreachable;
             } else {
              $815 = ((($$3$i$i)) + 16|0);
              HEAP32[$815>>2] = $812;
              $816 = ((($812)) + 24|0);
              HEAP32[$816>>2] = $$3$i$i;
              break;
             }
            }
           } while(0);
           $817 = ((($811)) + 4|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           if ($819) {
            break;
           }
           $820 = HEAP32[(24980)>>2]|0;
           $821 = ($818>>>0)<($820>>>0);
           if ($821) {
            _abort();
            // unreachable;
           } else {
            $822 = ((($$3$i$i)) + 20|0);
            HEAP32[$822>>2] = $818;
            $823 = ((($818)) + 24|0);
            HEAP32[$823>>2] = $$3$i$i;
            break;
           }
          }
         } while(0);
         $824 = (($714) + ($738)|0);
         $825 = (($738) + ($719))|0;
         $$0$i18$i = $824;$$0286$i$i = $825;
        } else {
         $$0$i18$i = $714;$$0286$i$i = $719;
        }
        $826 = ((($$0$i18$i)) + 4|0);
        $827 = HEAP32[$826>>2]|0;
        $828 = $827 & -2;
        HEAP32[$826>>2] = $828;
        $829 = $$0286$i$i | 1;
        $830 = ((($718)) + 4|0);
        HEAP32[$830>>2] = $829;
        $831 = (($718) + ($$0286$i$i)|0);
        HEAP32[$831>>2] = $$0286$i$i;
        $832 = $$0286$i$i >>> 3;
        $833 = ($$0286$i$i>>>0)<(256);
        if ($833) {
         $834 = $832 << 1;
         $835 = (25004 + ($834<<2)|0);
         $836 = HEAP32[6241]|0;
         $837 = 1 << $832;
         $838 = $836 & $837;
         $839 = ($838|0)==(0);
         do {
          if ($839) {
           $840 = $836 | $837;
           HEAP32[6241] = $840;
           $$pre$i19$i = ((($835)) + 8|0);
           $$0294$i$i = $835;$$pre$phi$i20$iZ2D = $$pre$i19$i;
          } else {
           $841 = ((($835)) + 8|0);
           $842 = HEAP32[$841>>2]|0;
           $843 = HEAP32[(24980)>>2]|0;
           $844 = ($842>>>0)<($843>>>0);
           if (!($844)) {
            $$0294$i$i = $842;$$pre$phi$i20$iZ2D = $841;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i20$iZ2D>>2] = $718;
         $845 = ((($$0294$i$i)) + 12|0);
         HEAP32[$845>>2] = $718;
         $846 = ((($718)) + 8|0);
         HEAP32[$846>>2] = $$0294$i$i;
         $847 = ((($718)) + 12|0);
         HEAP32[$847>>2] = $835;
         break;
        }
        $848 = $$0286$i$i >>> 8;
        $849 = ($848|0)==(0);
        do {
         if ($849) {
          $$0295$i$i = 0;
         } else {
          $850 = ($$0286$i$i>>>0)>(16777215);
          if ($850) {
           $$0295$i$i = 31;
           break;
          }
          $851 = (($848) + 1048320)|0;
          $852 = $851 >>> 16;
          $853 = $852 & 8;
          $854 = $848 << $853;
          $855 = (($854) + 520192)|0;
          $856 = $855 >>> 16;
          $857 = $856 & 4;
          $858 = $857 | $853;
          $859 = $854 << $857;
          $860 = (($859) + 245760)|0;
          $861 = $860 >>> 16;
          $862 = $861 & 2;
          $863 = $858 | $862;
          $864 = (14 - ($863))|0;
          $865 = $859 << $862;
          $866 = $865 >>> 15;
          $867 = (($864) + ($866))|0;
          $868 = $867 << 1;
          $869 = (($867) + 7)|0;
          $870 = $$0286$i$i >>> $869;
          $871 = $870 & 1;
          $872 = $871 | $868;
          $$0295$i$i = $872;
         }
        } while(0);
        $873 = (25268 + ($$0295$i$i<<2)|0);
        $874 = ((($718)) + 28|0);
        HEAP32[$874>>2] = $$0295$i$i;
        $875 = ((($718)) + 16|0);
        $876 = ((($875)) + 4|0);
        HEAP32[$876>>2] = 0;
        HEAP32[$875>>2] = 0;
        $877 = HEAP32[(24968)>>2]|0;
        $878 = 1 << $$0295$i$i;
        $879 = $877 & $878;
        $880 = ($879|0)==(0);
        if ($880) {
         $881 = $877 | $878;
         HEAP32[(24968)>>2] = $881;
         HEAP32[$873>>2] = $718;
         $882 = ((($718)) + 24|0);
         HEAP32[$882>>2] = $873;
         $883 = ((($718)) + 12|0);
         HEAP32[$883>>2] = $718;
         $884 = ((($718)) + 8|0);
         HEAP32[$884>>2] = $718;
         break;
        }
        $885 = HEAP32[$873>>2]|0;
        $886 = ($$0295$i$i|0)==(31);
        $887 = $$0295$i$i >>> 1;
        $888 = (25 - ($887))|0;
        $889 = $886 ? 0 : $888;
        $890 = $$0286$i$i << $889;
        $$0287$i$i = $890;$$0288$i$i = $885;
        while(1) {
         $891 = ((($$0288$i$i)) + 4|0);
         $892 = HEAP32[$891>>2]|0;
         $893 = $892 & -8;
         $894 = ($893|0)==($$0286$i$i|0);
         if ($894) {
          label = 278;
          break;
         }
         $895 = $$0287$i$i >>> 31;
         $896 = (((($$0288$i$i)) + 16|0) + ($895<<2)|0);
         $897 = $$0287$i$i << 1;
         $898 = HEAP32[$896>>2]|0;
         $899 = ($898|0)==(0|0);
         if ($899) {
          label = 275;
          break;
         } else {
          $$0287$i$i = $897;$$0288$i$i = $898;
         }
        }
        if ((label|0) == 275) {
         $900 = HEAP32[(24980)>>2]|0;
         $901 = ($896>>>0)<($900>>>0);
         if ($901) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$896>>2] = $718;
          $902 = ((($718)) + 24|0);
          HEAP32[$902>>2] = $$0288$i$i;
          $903 = ((($718)) + 12|0);
          HEAP32[$903>>2] = $718;
          $904 = ((($718)) + 8|0);
          HEAP32[$904>>2] = $718;
          break;
         }
        }
        else if ((label|0) == 278) {
         $905 = ((($$0288$i$i)) + 8|0);
         $906 = HEAP32[$905>>2]|0;
         $907 = HEAP32[(24980)>>2]|0;
         $908 = ($906>>>0)>=($907>>>0);
         $not$$i22$i = ($$0288$i$i>>>0)>=($907>>>0);
         $909 = $908 & $not$$i22$i;
         if ($909) {
          $910 = ((($906)) + 12|0);
          HEAP32[$910>>2] = $718;
          HEAP32[$905>>2] = $718;
          $911 = ((($718)) + 8|0);
          HEAP32[$911>>2] = $906;
          $912 = ((($718)) + 12|0);
          HEAP32[$912>>2] = $$0288$i$i;
          $913 = ((($718)) + 24|0);
          HEAP32[$913>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1044 = ((($706)) + 8|0);
      $$0 = $1044;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0$i$i$i = (25412);
     }
    }
    while(1) {
     $914 = HEAP32[$$0$i$i$i>>2]|0;
     $915 = ($914>>>0)>($627>>>0);
     if (!($915)) {
      $916 = ((($$0$i$i$i)) + 4|0);
      $917 = HEAP32[$916>>2]|0;
      $918 = (($914) + ($917)|0);
      $919 = ($918>>>0)>($627>>>0);
      if ($919) {
       break;
      }
     }
     $920 = ((($$0$i$i$i)) + 8|0);
     $921 = HEAP32[$920>>2]|0;
     $$0$i$i$i = $921;
    }
    $922 = ((($918)) + -47|0);
    $923 = ((($922)) + 8|0);
    $924 = $923;
    $925 = $924 & 7;
    $926 = ($925|0)==(0);
    $927 = (0 - ($924))|0;
    $928 = $927 & 7;
    $929 = $926 ? 0 : $928;
    $930 = (($922) + ($929)|0);
    $931 = ((($627)) + 16|0);
    $932 = ($930>>>0)<($931>>>0);
    $933 = $932 ? $627 : $930;
    $934 = ((($933)) + 8|0);
    $935 = ((($933)) + 24|0);
    $936 = (($$723947$i) + -40)|0;
    $937 = ((($$748$i)) + 8|0);
    $938 = $937;
    $939 = $938 & 7;
    $940 = ($939|0)==(0);
    $941 = (0 - ($938))|0;
    $942 = $941 & 7;
    $943 = $940 ? 0 : $942;
    $944 = (($$748$i) + ($943)|0);
    $945 = (($936) - ($943))|0;
    HEAP32[(24988)>>2] = $944;
    HEAP32[(24976)>>2] = $945;
    $946 = $945 | 1;
    $947 = ((($944)) + 4|0);
    HEAP32[$947>>2] = $946;
    $948 = (($944) + ($945)|0);
    $949 = ((($948)) + 4|0);
    HEAP32[$949>>2] = 40;
    $950 = HEAP32[(25452)>>2]|0;
    HEAP32[(24992)>>2] = $950;
    $951 = ((($933)) + 4|0);
    HEAP32[$951>>2] = 27;
    ;HEAP32[$934>>2]=HEAP32[(25412)>>2]|0;HEAP32[$934+4>>2]=HEAP32[(25412)+4>>2]|0;HEAP32[$934+8>>2]=HEAP32[(25412)+8>>2]|0;HEAP32[$934+12>>2]=HEAP32[(25412)+12>>2]|0;
    HEAP32[(25412)>>2] = $$748$i;
    HEAP32[(25416)>>2] = $$723947$i;
    HEAP32[(25424)>>2] = 0;
    HEAP32[(25420)>>2] = $934;
    $$0$i$i = $935;
    while(1) {
     $952 = ((($$0$i$i)) + 4|0);
     HEAP32[$952>>2] = 7;
     $953 = ((($952)) + 4|0);
     $954 = ($953>>>0)<($918>>>0);
     if ($954) {
      $$0$i$i = $952;
     } else {
      break;
     }
    }
    $955 = ($933|0)==($627|0);
    if (!($955)) {
     $956 = $933;
     $957 = $627;
     $958 = (($956) - ($957))|0;
     $959 = HEAP32[$951>>2]|0;
     $960 = $959 & -2;
     HEAP32[$951>>2] = $960;
     $961 = $958 | 1;
     $962 = ((($627)) + 4|0);
     HEAP32[$962>>2] = $961;
     HEAP32[$933>>2] = $958;
     $963 = $958 >>> 3;
     $964 = ($958>>>0)<(256);
     if ($964) {
      $965 = $963 << 1;
      $966 = (25004 + ($965<<2)|0);
      $967 = HEAP32[6241]|0;
      $968 = 1 << $963;
      $969 = $967 & $968;
      $970 = ($969|0)==(0);
      if ($970) {
       $971 = $967 | $968;
       HEAP32[6241] = $971;
       $$pre$i$i = ((($966)) + 8|0);
       $$0211$i$i = $966;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $972 = ((($966)) + 8|0);
       $973 = HEAP32[$972>>2]|0;
       $974 = HEAP32[(24980)>>2]|0;
       $975 = ($973>>>0)<($974>>>0);
       if ($975) {
        _abort();
        // unreachable;
       } else {
        $$0211$i$i = $973;$$pre$phi$i$iZ2D = $972;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $627;
      $976 = ((($$0211$i$i)) + 12|0);
      HEAP32[$976>>2] = $627;
      $977 = ((($627)) + 8|0);
      HEAP32[$977>>2] = $$0211$i$i;
      $978 = ((($627)) + 12|0);
      HEAP32[$978>>2] = $966;
      break;
     }
     $979 = $958 >>> 8;
     $980 = ($979|0)==(0);
     if ($980) {
      $$0212$i$i = 0;
     } else {
      $981 = ($958>>>0)>(16777215);
      if ($981) {
       $$0212$i$i = 31;
      } else {
       $982 = (($979) + 1048320)|0;
       $983 = $982 >>> 16;
       $984 = $983 & 8;
       $985 = $979 << $984;
       $986 = (($985) + 520192)|0;
       $987 = $986 >>> 16;
       $988 = $987 & 4;
       $989 = $988 | $984;
       $990 = $985 << $988;
       $991 = (($990) + 245760)|0;
       $992 = $991 >>> 16;
       $993 = $992 & 2;
       $994 = $989 | $993;
       $995 = (14 - ($994))|0;
       $996 = $990 << $993;
       $997 = $996 >>> 15;
       $998 = (($995) + ($997))|0;
       $999 = $998 << 1;
       $1000 = (($998) + 7)|0;
       $1001 = $958 >>> $1000;
       $1002 = $1001 & 1;
       $1003 = $1002 | $999;
       $$0212$i$i = $1003;
      }
     }
     $1004 = (25268 + ($$0212$i$i<<2)|0);
     $1005 = ((($627)) + 28|0);
     HEAP32[$1005>>2] = $$0212$i$i;
     $1006 = ((($627)) + 20|0);
     HEAP32[$1006>>2] = 0;
     HEAP32[$931>>2] = 0;
     $1007 = HEAP32[(24968)>>2]|0;
     $1008 = 1 << $$0212$i$i;
     $1009 = $1007 & $1008;
     $1010 = ($1009|0)==(0);
     if ($1010) {
      $1011 = $1007 | $1008;
      HEAP32[(24968)>>2] = $1011;
      HEAP32[$1004>>2] = $627;
      $1012 = ((($627)) + 24|0);
      HEAP32[$1012>>2] = $1004;
      $1013 = ((($627)) + 12|0);
      HEAP32[$1013>>2] = $627;
      $1014 = ((($627)) + 8|0);
      HEAP32[$1014>>2] = $627;
      break;
     }
     $1015 = HEAP32[$1004>>2]|0;
     $1016 = ($$0212$i$i|0)==(31);
     $1017 = $$0212$i$i >>> 1;
     $1018 = (25 - ($1017))|0;
     $1019 = $1016 ? 0 : $1018;
     $1020 = $958 << $1019;
     $$0206$i$i = $1020;$$0207$i$i = $1015;
     while(1) {
      $1021 = ((($$0207$i$i)) + 4|0);
      $1022 = HEAP32[$1021>>2]|0;
      $1023 = $1022 & -8;
      $1024 = ($1023|0)==($958|0);
      if ($1024) {
       label = 304;
       break;
      }
      $1025 = $$0206$i$i >>> 31;
      $1026 = (((($$0207$i$i)) + 16|0) + ($1025<<2)|0);
      $1027 = $$0206$i$i << 1;
      $1028 = HEAP32[$1026>>2]|0;
      $1029 = ($1028|0)==(0|0);
      if ($1029) {
       label = 301;
       break;
      } else {
       $$0206$i$i = $1027;$$0207$i$i = $1028;
      }
     }
     if ((label|0) == 301) {
      $1030 = HEAP32[(24980)>>2]|0;
      $1031 = ($1026>>>0)<($1030>>>0);
      if ($1031) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$1026>>2] = $627;
       $1032 = ((($627)) + 24|0);
       HEAP32[$1032>>2] = $$0207$i$i;
       $1033 = ((($627)) + 12|0);
       HEAP32[$1033>>2] = $627;
       $1034 = ((($627)) + 8|0);
       HEAP32[$1034>>2] = $627;
       break;
      }
     }
     else if ((label|0) == 304) {
      $1035 = ((($$0207$i$i)) + 8|0);
      $1036 = HEAP32[$1035>>2]|0;
      $1037 = HEAP32[(24980)>>2]|0;
      $1038 = ($1036>>>0)>=($1037>>>0);
      $not$$i$i = ($$0207$i$i>>>0)>=($1037>>>0);
      $1039 = $1038 & $not$$i$i;
      if ($1039) {
       $1040 = ((($1036)) + 12|0);
       HEAP32[$1040>>2] = $627;
       HEAP32[$1035>>2] = $627;
       $1041 = ((($627)) + 8|0);
       HEAP32[$1041>>2] = $1036;
       $1042 = ((($627)) + 12|0);
       HEAP32[$1042>>2] = $$0207$i$i;
       $1043 = ((($627)) + 24|0);
       HEAP32[$1043>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1045 = HEAP32[(24976)>>2]|0;
  $1046 = ($1045>>>0)>($$0197>>>0);
  if ($1046) {
   $1047 = (($1045) - ($$0197))|0;
   HEAP32[(24976)>>2] = $1047;
   $1048 = HEAP32[(24988)>>2]|0;
   $1049 = (($1048) + ($$0197)|0);
   HEAP32[(24988)>>2] = $1049;
   $1050 = $1047 | 1;
   $1051 = ((($1049)) + 4|0);
   HEAP32[$1051>>2] = $1050;
   $1052 = $$0197 | 3;
   $1053 = ((($1048)) + 4|0);
   HEAP32[$1053>>2] = $1052;
   $1054 = ((($1048)) + 8|0);
   $$0 = $1054;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1055 = (___errno_location()|0);
 HEAP32[$1055>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381 = 0, $$0382 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1388 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre = 0, $$pre$phi439Z2D = 0, $$pre$phi441Z2D = 0, $$pre$phiZ2D = 0, $$pre438 = 0;
 var $$pre440 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $cond418 = 0, $cond419 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(24980)>>2]|0;
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  _abort();
  // unreachable;
 }
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 3;
 $8 = ($7|0)==(1);
 if ($8) {
  _abort();
  // unreachable;
 }
 $9 = $6 & -8;
 $10 = (($2) + ($9)|0);
 $11 = $6 & 1;
 $12 = ($11|0)==(0);
 do {
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   $14 = ($7|0)==(0);
   if ($14) {
    return;
   }
   $15 = (0 - ($13))|0;
   $16 = (($2) + ($15)|0);
   $17 = (($13) + ($9))|0;
   $18 = ($16>>>0)<($3>>>0);
   if ($18) {
    _abort();
    // unreachable;
   }
   $19 = HEAP32[(24984)>>2]|0;
   $20 = ($16|0)==($19|0);
   if ($20) {
    $105 = ((($10)) + 4|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = $106 & 3;
    $108 = ($107|0)==(3);
    if (!($108)) {
     $$1 = $16;$$1380 = $17;
     break;
    }
    HEAP32[(24972)>>2] = $17;
    $109 = $106 & -2;
    HEAP32[$105>>2] = $109;
    $110 = $17 | 1;
    $111 = ((($16)) + 4|0);
    HEAP32[$111>>2] = $110;
    $112 = (($16) + ($17)|0);
    HEAP32[$112>>2] = $17;
    return;
   }
   $21 = $13 >>> 3;
   $22 = ($13>>>0)<(256);
   if ($22) {
    $23 = ((($16)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($16)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $21 << 1;
    $28 = (25004 + ($27<<2)|0);
    $29 = ($24|0)==($28|0);
    if (!($29)) {
     $30 = ($24>>>0)<($3>>>0);
     if ($30) {
      _abort();
      // unreachable;
     }
     $31 = ((($24)) + 12|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==($16|0);
     if (!($33)) {
      _abort();
      // unreachable;
     }
    }
    $34 = ($26|0)==($24|0);
    if ($34) {
     $35 = 1 << $21;
     $36 = $35 ^ -1;
     $37 = HEAP32[6241]|0;
     $38 = $37 & $36;
     HEAP32[6241] = $38;
     $$1 = $16;$$1380 = $17;
     break;
    }
    $39 = ($26|0)==($28|0);
    if ($39) {
     $$pre440 = ((($26)) + 8|0);
     $$pre$phi441Z2D = $$pre440;
    } else {
     $40 = ($26>>>0)<($3>>>0);
     if ($40) {
      _abort();
      // unreachable;
     }
     $41 = ((($26)) + 8|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = ($42|0)==($16|0);
     if ($43) {
      $$pre$phi441Z2D = $41;
     } else {
      _abort();
      // unreachable;
     }
    }
    $44 = ((($24)) + 12|0);
    HEAP32[$44>>2] = $26;
    HEAP32[$$pre$phi441Z2D>>2] = $24;
    $$1 = $16;$$1380 = $17;
    break;
   }
   $45 = ((($16)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($16)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==($16|0);
   do {
    if ($49) {
     $59 = ((($16)) + 16|0);
     $60 = ((($59)) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61|0)==(0|0);
     if ($62) {
      $63 = HEAP32[$59>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $$3 = 0;
       break;
      } else {
       $$1385 = $63;$$1388 = $59;
      }
     } else {
      $$1385 = $61;$$1388 = $60;
     }
     while(1) {
      $65 = ((($$1385)) + 20|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66|0)==(0|0);
      if (!($67)) {
       $$1385 = $66;$$1388 = $65;
       continue;
      }
      $68 = ((($$1385)) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break;
      } else {
       $$1385 = $69;$$1388 = $68;
      }
     }
     $71 = ($$1388>>>0)<($3>>>0);
     if ($71) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1388>>2] = 0;
      $$3 = $$1385;
      break;
     }
    } else {
     $50 = ((($16)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51>>>0)<($3>>>0);
     if ($52) {
      _abort();
      // unreachable;
     }
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==($16|0);
     if (!($55)) {
      _abort();
      // unreachable;
     }
     $56 = ((($48)) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==($16|0);
     if ($58) {
      HEAP32[$53>>2] = $48;
      HEAP32[$56>>2] = $51;
      $$3 = $48;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $72 = ($46|0)==(0|0);
   if ($72) {
    $$1 = $16;$$1380 = $17;
   } else {
    $73 = ((($16)) + 28|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (25268 + ($74<<2)|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ($16|0)==($76|0);
    if ($77) {
     HEAP32[$75>>2] = $$3;
     $cond418 = ($$3|0)==(0|0);
     if ($cond418) {
      $78 = 1 << $74;
      $79 = $78 ^ -1;
      $80 = HEAP32[(24968)>>2]|0;
      $81 = $80 & $79;
      HEAP32[(24968)>>2] = $81;
      $$1 = $16;$$1380 = $17;
      break;
     }
    } else {
     $82 = HEAP32[(24980)>>2]|0;
     $83 = ($46>>>0)<($82>>>0);
     if ($83) {
      _abort();
      // unreachable;
     }
     $84 = ((($46)) + 16|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ($85|0)==($16|0);
     if ($86) {
      HEAP32[$84>>2] = $$3;
     } else {
      $87 = ((($46)) + 20|0);
      HEAP32[$87>>2] = $$3;
     }
     $88 = ($$3|0)==(0|0);
     if ($88) {
      $$1 = $16;$$1380 = $17;
      break;
     }
    }
    $89 = HEAP32[(24980)>>2]|0;
    $90 = ($$3>>>0)<($89>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($$3)) + 24|0);
    HEAP32[$91>>2] = $46;
    $92 = ((($16)) + 16|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    do {
     if (!($94)) {
      $95 = ($93>>>0)<($89>>>0);
      if ($95) {
       _abort();
       // unreachable;
      } else {
       $96 = ((($$3)) + 16|0);
       HEAP32[$96>>2] = $93;
       $97 = ((($93)) + 24|0);
       HEAP32[$97>>2] = $$3;
       break;
      }
     }
    } while(0);
    $98 = ((($92)) + 4|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = ($99|0)==(0|0);
    if ($100) {
     $$1 = $16;$$1380 = $17;
    } else {
     $101 = HEAP32[(24980)>>2]|0;
     $102 = ($99>>>0)<($101>>>0);
     if ($102) {
      _abort();
      // unreachable;
     } else {
      $103 = ((($$3)) + 20|0);
      HEAP32[$103>>2] = $99;
      $104 = ((($99)) + 24|0);
      HEAP32[$104>>2] = $$3;
      $$1 = $16;$$1380 = $17;
      break;
     }
    }
   }
  } else {
   $$1 = $2;$$1380 = $9;
  }
 } while(0);
 $113 = ($$1>>>0)<($10>>>0);
 if (!($113)) {
  _abort();
  // unreachable;
 }
 $114 = ((($10)) + 4|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = $115 & 1;
 $117 = ($116|0)==(0);
 if ($117) {
  _abort();
  // unreachable;
 }
 $118 = $115 & 2;
 $119 = ($118|0)==(0);
 if ($119) {
  $120 = HEAP32[(24988)>>2]|0;
  $121 = ($10|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(24976)>>2]|0;
   $123 = (($122) + ($$1380))|0;
   HEAP32[(24976)>>2] = $123;
   HEAP32[(24988)>>2] = $$1;
   $124 = $123 | 1;
   $125 = ((($$1)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = HEAP32[(24984)>>2]|0;
   $127 = ($$1|0)==($126|0);
   if (!($127)) {
    return;
   }
   HEAP32[(24984)>>2] = 0;
   HEAP32[(24972)>>2] = 0;
   return;
  }
  $128 = HEAP32[(24984)>>2]|0;
  $129 = ($10|0)==($128|0);
  if ($129) {
   $130 = HEAP32[(24972)>>2]|0;
   $131 = (($130) + ($$1380))|0;
   HEAP32[(24972)>>2] = $131;
   HEAP32[(24984)>>2] = $$1;
   $132 = $131 | 1;
   $133 = ((($$1)) + 4|0);
   HEAP32[$133>>2] = $132;
   $134 = (($$1) + ($131)|0);
   HEAP32[$134>>2] = $131;
   return;
  }
  $135 = $115 & -8;
  $136 = (($135) + ($$1380))|0;
  $137 = $115 >>> 3;
  $138 = ($115>>>0)<(256);
  do {
   if ($138) {
    $139 = ((($10)) + 8|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ((($10)) + 12|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = $137 << 1;
    $144 = (25004 + ($143<<2)|0);
    $145 = ($140|0)==($144|0);
    if (!($145)) {
     $146 = HEAP32[(24980)>>2]|0;
     $147 = ($140>>>0)<($146>>>0);
     if ($147) {
      _abort();
      // unreachable;
     }
     $148 = ((($140)) + 12|0);
     $149 = HEAP32[$148>>2]|0;
     $150 = ($149|0)==($10|0);
     if (!($150)) {
      _abort();
      // unreachable;
     }
    }
    $151 = ($142|0)==($140|0);
    if ($151) {
     $152 = 1 << $137;
     $153 = $152 ^ -1;
     $154 = HEAP32[6241]|0;
     $155 = $154 & $153;
     HEAP32[6241] = $155;
     break;
    }
    $156 = ($142|0)==($144|0);
    if ($156) {
     $$pre438 = ((($142)) + 8|0);
     $$pre$phi439Z2D = $$pre438;
    } else {
     $157 = HEAP32[(24980)>>2]|0;
     $158 = ($142>>>0)<($157>>>0);
     if ($158) {
      _abort();
      // unreachable;
     }
     $159 = ((($142)) + 8|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ($160|0)==($10|0);
     if ($161) {
      $$pre$phi439Z2D = $159;
     } else {
      _abort();
      // unreachable;
     }
    }
    $162 = ((($140)) + 12|0);
    HEAP32[$162>>2] = $142;
    HEAP32[$$pre$phi439Z2D>>2] = $140;
   } else {
    $163 = ((($10)) + 24|0);
    $164 = HEAP32[$163>>2]|0;
    $165 = ((($10)) + 12|0);
    $166 = HEAP32[$165>>2]|0;
    $167 = ($166|0)==($10|0);
    do {
     if ($167) {
      $178 = ((($10)) + 16|0);
      $179 = ((($178)) + 4|0);
      $180 = HEAP32[$179>>2]|0;
      $181 = ($180|0)==(0|0);
      if ($181) {
       $182 = HEAP32[$178>>2]|0;
       $183 = ($182|0)==(0|0);
       if ($183) {
        $$3398 = 0;
        break;
       } else {
        $$1396 = $182;$$1400 = $178;
       }
      } else {
       $$1396 = $180;$$1400 = $179;
      }
      while(1) {
       $184 = ((($$1396)) + 20|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if (!($186)) {
        $$1396 = $185;$$1400 = $184;
        continue;
       }
       $187 = ((($$1396)) + 16|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = ($188|0)==(0|0);
       if ($189) {
        break;
       } else {
        $$1396 = $188;$$1400 = $187;
       }
      }
      $190 = HEAP32[(24980)>>2]|0;
      $191 = ($$1400>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1400>>2] = 0;
       $$3398 = $$1396;
       break;
      }
     } else {
      $168 = ((($10)) + 8|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = HEAP32[(24980)>>2]|0;
      $171 = ($169>>>0)<($170>>>0);
      if ($171) {
       _abort();
       // unreachable;
      }
      $172 = ((($169)) + 12|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($10|0);
      if (!($174)) {
       _abort();
       // unreachable;
      }
      $175 = ((($166)) + 8|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==($10|0);
      if ($177) {
       HEAP32[$172>>2] = $166;
       HEAP32[$175>>2] = $169;
       $$3398 = $166;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $192 = ($164|0)==(0|0);
    if (!($192)) {
     $193 = ((($10)) + 28|0);
     $194 = HEAP32[$193>>2]|0;
     $195 = (25268 + ($194<<2)|0);
     $196 = HEAP32[$195>>2]|0;
     $197 = ($10|0)==($196|0);
     if ($197) {
      HEAP32[$195>>2] = $$3398;
      $cond419 = ($$3398|0)==(0|0);
      if ($cond419) {
       $198 = 1 << $194;
       $199 = $198 ^ -1;
       $200 = HEAP32[(24968)>>2]|0;
       $201 = $200 & $199;
       HEAP32[(24968)>>2] = $201;
       break;
      }
     } else {
      $202 = HEAP32[(24980)>>2]|0;
      $203 = ($164>>>0)<($202>>>0);
      if ($203) {
       _abort();
       // unreachable;
      }
      $204 = ((($164)) + 16|0);
      $205 = HEAP32[$204>>2]|0;
      $206 = ($205|0)==($10|0);
      if ($206) {
       HEAP32[$204>>2] = $$3398;
      } else {
       $207 = ((($164)) + 20|0);
       HEAP32[$207>>2] = $$3398;
      }
      $208 = ($$3398|0)==(0|0);
      if ($208) {
       break;
      }
     }
     $209 = HEAP32[(24980)>>2]|0;
     $210 = ($$3398>>>0)<($209>>>0);
     if ($210) {
      _abort();
      // unreachable;
     }
     $211 = ((($$3398)) + 24|0);
     HEAP32[$211>>2] = $164;
     $212 = ((($10)) + 16|0);
     $213 = HEAP32[$212>>2]|0;
     $214 = ($213|0)==(0|0);
     do {
      if (!($214)) {
       $215 = ($213>>>0)<($209>>>0);
       if ($215) {
        _abort();
        // unreachable;
       } else {
        $216 = ((($$3398)) + 16|0);
        HEAP32[$216>>2] = $213;
        $217 = ((($213)) + 24|0);
        HEAP32[$217>>2] = $$3398;
        break;
       }
      }
     } while(0);
     $218 = ((($212)) + 4|0);
     $219 = HEAP32[$218>>2]|0;
     $220 = ($219|0)==(0|0);
     if (!($220)) {
      $221 = HEAP32[(24980)>>2]|0;
      $222 = ($219>>>0)<($221>>>0);
      if ($222) {
       _abort();
       // unreachable;
      } else {
       $223 = ((($$3398)) + 20|0);
       HEAP32[$223>>2] = $219;
       $224 = ((($219)) + 24|0);
       HEAP32[$224>>2] = $$3398;
       break;
      }
     }
    }
   }
  } while(0);
  $225 = $136 | 1;
  $226 = ((($$1)) + 4|0);
  HEAP32[$226>>2] = $225;
  $227 = (($$1) + ($136)|0);
  HEAP32[$227>>2] = $136;
  $228 = HEAP32[(24984)>>2]|0;
  $229 = ($$1|0)==($228|0);
  if ($229) {
   HEAP32[(24972)>>2] = $136;
   return;
  } else {
   $$2 = $136;
  }
 } else {
  $230 = $115 & -2;
  HEAP32[$114>>2] = $230;
  $231 = $$1380 | 1;
  $232 = ((($$1)) + 4|0);
  HEAP32[$232>>2] = $231;
  $233 = (($$1) + ($$1380)|0);
  HEAP32[$233>>2] = $$1380;
  $$2 = $$1380;
 }
 $234 = $$2 >>> 3;
 $235 = ($$2>>>0)<(256);
 if ($235) {
  $236 = $234 << 1;
  $237 = (25004 + ($236<<2)|0);
  $238 = HEAP32[6241]|0;
  $239 = 1 << $234;
  $240 = $238 & $239;
  $241 = ($240|0)==(0);
  if ($241) {
   $242 = $238 | $239;
   HEAP32[6241] = $242;
   $$pre = ((($237)) + 8|0);
   $$0401 = $237;$$pre$phiZ2D = $$pre;
  } else {
   $243 = ((($237)) + 8|0);
   $244 = HEAP32[$243>>2]|0;
   $245 = HEAP32[(24980)>>2]|0;
   $246 = ($244>>>0)<($245>>>0);
   if ($246) {
    _abort();
    // unreachable;
   } else {
    $$0401 = $244;$$pre$phiZ2D = $243;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $247 = ((($$0401)) + 12|0);
  HEAP32[$247>>2] = $$1;
  $248 = ((($$1)) + 8|0);
  HEAP32[$248>>2] = $$0401;
  $249 = ((($$1)) + 12|0);
  HEAP32[$249>>2] = $237;
  return;
 }
 $250 = $$2 >>> 8;
 $251 = ($250|0)==(0);
 if ($251) {
  $$0394 = 0;
 } else {
  $252 = ($$2>>>0)>(16777215);
  if ($252) {
   $$0394 = 31;
  } else {
   $253 = (($250) + 1048320)|0;
   $254 = $253 >>> 16;
   $255 = $254 & 8;
   $256 = $250 << $255;
   $257 = (($256) + 520192)|0;
   $258 = $257 >>> 16;
   $259 = $258 & 4;
   $260 = $259 | $255;
   $261 = $256 << $259;
   $262 = (($261) + 245760)|0;
   $263 = $262 >>> 16;
   $264 = $263 & 2;
   $265 = $260 | $264;
   $266 = (14 - ($265))|0;
   $267 = $261 << $264;
   $268 = $267 >>> 15;
   $269 = (($266) + ($268))|0;
   $270 = $269 << 1;
   $271 = (($269) + 7)|0;
   $272 = $$2 >>> $271;
   $273 = $272 & 1;
   $274 = $273 | $270;
   $$0394 = $274;
  }
 }
 $275 = (25268 + ($$0394<<2)|0);
 $276 = ((($$1)) + 28|0);
 HEAP32[$276>>2] = $$0394;
 $277 = ((($$1)) + 16|0);
 $278 = ((($$1)) + 20|0);
 HEAP32[$278>>2] = 0;
 HEAP32[$277>>2] = 0;
 $279 = HEAP32[(24968)>>2]|0;
 $280 = 1 << $$0394;
 $281 = $279 & $280;
 $282 = ($281|0)==(0);
 do {
  if ($282) {
   $283 = $279 | $280;
   HEAP32[(24968)>>2] = $283;
   HEAP32[$275>>2] = $$1;
   $284 = ((($$1)) + 24|0);
   HEAP32[$284>>2] = $275;
   $285 = ((($$1)) + 12|0);
   HEAP32[$285>>2] = $$1;
   $286 = ((($$1)) + 8|0);
   HEAP32[$286>>2] = $$1;
  } else {
   $287 = HEAP32[$275>>2]|0;
   $288 = ($$0394|0)==(31);
   $289 = $$0394 >>> 1;
   $290 = (25 - ($289))|0;
   $291 = $288 ? 0 : $290;
   $292 = $$2 << $291;
   $$0381 = $292;$$0382 = $287;
   while(1) {
    $293 = ((($$0382)) + 4|0);
    $294 = HEAP32[$293>>2]|0;
    $295 = $294 & -8;
    $296 = ($295|0)==($$2|0);
    if ($296) {
     label = 130;
     break;
    }
    $297 = $$0381 >>> 31;
    $298 = (((($$0382)) + 16|0) + ($297<<2)|0);
    $299 = $$0381 << 1;
    $300 = HEAP32[$298>>2]|0;
    $301 = ($300|0)==(0|0);
    if ($301) {
     label = 127;
     break;
    } else {
     $$0381 = $299;$$0382 = $300;
    }
   }
   if ((label|0) == 127) {
    $302 = HEAP32[(24980)>>2]|0;
    $303 = ($298>>>0)<($302>>>0);
    if ($303) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$298>>2] = $$1;
     $304 = ((($$1)) + 24|0);
     HEAP32[$304>>2] = $$0382;
     $305 = ((($$1)) + 12|0);
     HEAP32[$305>>2] = $$1;
     $306 = ((($$1)) + 8|0);
     HEAP32[$306>>2] = $$1;
     break;
    }
   }
   else if ((label|0) == 130) {
    $307 = ((($$0382)) + 8|0);
    $308 = HEAP32[$307>>2]|0;
    $309 = HEAP32[(24980)>>2]|0;
    $310 = ($308>>>0)>=($309>>>0);
    $not$ = ($$0382>>>0)>=($309>>>0);
    $311 = $310 & $not$;
    if ($311) {
     $312 = ((($308)) + 12|0);
     HEAP32[$312>>2] = $$1;
     HEAP32[$307>>2] = $$1;
     $313 = ((($$1)) + 8|0);
     HEAP32[$313>>2] = $308;
     $314 = ((($$1)) + 12|0);
     HEAP32[$314>>2] = $$0382;
     $315 = ((($$1)) + 24|0);
     HEAP32[$315>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $316 = HEAP32[(24996)>>2]|0;
 $317 = (($316) + -1)|0;
 HEAP32[(24996)>>2] = $317;
 $318 = ($317|0)==(0);
 if ($318) {
  $$0211$in$i = (25420);
 } else {
  return;
 }
 while(1) {
  $$0211$i = HEAP32[$$0211$in$i>>2]|0;
  $319 = ($$0211$i|0)==(0|0);
  $320 = ((($$0211$i)) + 8|0);
  if ($319) {
   break;
  } else {
   $$0211$in$i = $320;
  }
 }
 HEAP32[(24996)>>2] = -1;
 return;
}
function _calloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = Math_imul($1, $0)|0;
  $4 = $1 | $0;
  $5 = ($4>>>0)>(65535);
  if ($5) {
   $6 = (($3>>>0) / ($0>>>0))&-1;
   $7 = ($6|0)==($1|0);
   $$ = $7 ? $3 : -1;
   $$0 = $$;
  } else {
   $$0 = $3;
  }
 }
 $8 = (_malloc($$0)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  return ($8|0);
 }
 $10 = ((($8)) + -4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & 3;
 $13 = ($12|0)==(0);
 if ($13) {
  return ($8|0);
 }
 _memset(($8|0),0,($$0|0))|0;
 return ($8|0);
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 _memcpy(($14|0),($0|0),($24|0))|0;
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1271 = 0, $$1274 = 0, $$2 = 0, $$3 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $cond = 0, $notlhs = 0, $notrhs = 0, $or$cond$not = 0, $or$cond3 = 0, $storemerge = 0, $storemerge1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = HEAP32[(24980)>>2]|0;
 $7 = $3 & 3;
 $notlhs = ($0>>>0)>=($6>>>0);
 $notrhs = ($7|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $8 = ($0>>>0)<($5>>>0);
 $or$cond3 = $or$cond$not & $8;
 if (!($or$cond3)) {
  _abort();
  // unreachable;
 }
 $9 = ((($5)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 1;
 $12 = ($11|0)==(0);
 if ($12) {
  _abort();
  // unreachable;
 }
 $13 = ($7|0)==(0);
 if ($13) {
  $14 = ($1>>>0)<(256);
  if ($14) {
   $$2 = 0;
   return ($$2|0);
  }
  $15 = (($1) + 4)|0;
  $16 = ($4>>>0)<($15>>>0);
  if (!($16)) {
   $17 = (($4) - ($1))|0;
   $18 = HEAP32[(25444)>>2]|0;
   $19 = $18 << 1;
   $20 = ($17>>>0)>($19>>>0);
   if (!($20)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $21 = ($4>>>0)<($1>>>0);
 if (!($21)) {
  $22 = (($4) - ($1))|0;
  $23 = ($22>>>0)>(15);
  if (!($23)) {
   $$2 = $0;
   return ($$2|0);
  }
  $24 = (($0) + ($1)|0);
  $25 = $3 & 1;
  $26 = $25 | $1;
  $27 = $26 | 2;
  HEAP32[$2>>2] = $27;
  $28 = ((($24)) + 4|0);
  $29 = $22 | 3;
  HEAP32[$28>>2] = $29;
  $30 = (($24) + ($22)|0);
  $31 = ((($30)) + 4|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = $32 | 1;
  HEAP32[$31>>2] = $33;
  _dispose_chunk($24,$22);
  $$2 = $0;
  return ($$2|0);
 }
 $34 = HEAP32[(24988)>>2]|0;
 $35 = ($5|0)==($34|0);
 if ($35) {
  $36 = HEAP32[(24976)>>2]|0;
  $37 = (($36) + ($4))|0;
  $38 = ($37>>>0)>($1>>>0);
  if (!($38)) {
   $$2 = 0;
   return ($$2|0);
  }
  $39 = (($37) - ($1))|0;
  $40 = (($0) + ($1)|0);
  $41 = $3 & 1;
  $42 = $41 | $1;
  $43 = $42 | 2;
  HEAP32[$2>>2] = $43;
  $44 = ((($40)) + 4|0);
  $45 = $39 | 1;
  HEAP32[$44>>2] = $45;
  HEAP32[(24988)>>2] = $40;
  HEAP32[(24976)>>2] = $39;
  $$2 = $0;
  return ($$2|0);
 }
 $46 = HEAP32[(24984)>>2]|0;
 $47 = ($5|0)==($46|0);
 if ($47) {
  $48 = HEAP32[(24972)>>2]|0;
  $49 = (($48) + ($4))|0;
  $50 = ($49>>>0)<($1>>>0);
  if ($50) {
   $$2 = 0;
   return ($$2|0);
  }
  $51 = (($49) - ($1))|0;
  $52 = ($51>>>0)>(15);
  if ($52) {
   $53 = (($0) + ($1)|0);
   $54 = (($53) + ($51)|0);
   $55 = $3 & 1;
   $56 = $55 | $1;
   $57 = $56 | 2;
   HEAP32[$2>>2] = $57;
   $58 = ((($53)) + 4|0);
   $59 = $51 | 1;
   HEAP32[$58>>2] = $59;
   HEAP32[$54>>2] = $51;
   $60 = ((($54)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 & -2;
   HEAP32[$60>>2] = $62;
   $storemerge = $53;$storemerge1 = $51;
  } else {
   $63 = $3 & 1;
   $64 = $63 | $49;
   $65 = $64 | 2;
   HEAP32[$2>>2] = $65;
   $66 = (($0) + ($49)|0);
   $67 = ((($66)) + 4|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = $68 | 1;
   HEAP32[$67>>2] = $69;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(24972)>>2] = $storemerge1;
  HEAP32[(24984)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $70 = $10 & 2;
 $71 = ($70|0)==(0);
 if (!($71)) {
  $$2 = 0;
  return ($$2|0);
 }
 $72 = $10 & -8;
 $73 = (($72) + ($4))|0;
 $74 = ($73>>>0)<($1>>>0);
 if ($74) {
  $$2 = 0;
  return ($$2|0);
 }
 $75 = (($73) - ($1))|0;
 $76 = $10 >>> 3;
 $77 = ($10>>>0)<(256);
 do {
  if ($77) {
   $78 = ((($5)) + 8|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = ((($5)) + 12|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = $76 << 1;
   $83 = (25004 + ($82<<2)|0);
   $84 = ($79|0)==($83|0);
   if (!($84)) {
    $85 = ($79>>>0)<($6>>>0);
    if ($85) {
     _abort();
     // unreachable;
    }
    $86 = ((($79)) + 12|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==($5|0);
    if (!($88)) {
     _abort();
     // unreachable;
    }
   }
   $89 = ($81|0)==($79|0);
   if ($89) {
    $90 = 1 << $76;
    $91 = $90 ^ -1;
    $92 = HEAP32[6241]|0;
    $93 = $92 & $91;
    HEAP32[6241] = $93;
    break;
   }
   $94 = ($81|0)==($83|0);
   if ($94) {
    $$pre = ((($81)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $95 = ($81>>>0)<($6>>>0);
    if ($95) {
     _abort();
     // unreachable;
    }
    $96 = ((($81)) + 8|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==($5|0);
    if ($98) {
     $$pre$phiZ2D = $96;
    } else {
     _abort();
     // unreachable;
    }
   }
   $99 = ((($79)) + 12|0);
   HEAP32[$99>>2] = $81;
   HEAP32[$$pre$phiZ2D>>2] = $79;
  } else {
   $100 = ((($5)) + 24|0);
   $101 = HEAP32[$100>>2]|0;
   $102 = ((($5)) + 12|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ($103|0)==($5|0);
   do {
    if ($104) {
     $114 = ((($5)) + 16|0);
     $115 = ((($114)) + 4|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==(0|0);
     if ($117) {
      $118 = HEAP32[$114>>2]|0;
      $119 = ($118|0)==(0|0);
      if ($119) {
       $$3 = 0;
       break;
      } else {
       $$1271 = $118;$$1274 = $114;
      }
     } else {
      $$1271 = $116;$$1274 = $115;
     }
     while(1) {
      $120 = ((($$1271)) + 20|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = ($121|0)==(0|0);
      if (!($122)) {
       $$1271 = $121;$$1274 = $120;
       continue;
      }
      $123 = ((($$1271)) + 16|0);
      $124 = HEAP32[$123>>2]|0;
      $125 = ($124|0)==(0|0);
      if ($125) {
       break;
      } else {
       $$1271 = $124;$$1274 = $123;
      }
     }
     $126 = ($$1274>>>0)<($6>>>0);
     if ($126) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1274>>2] = 0;
      $$3 = $$1271;
      break;
     }
    } else {
     $105 = ((($5)) + 8|0);
     $106 = HEAP32[$105>>2]|0;
     $107 = ($106>>>0)<($6>>>0);
     if ($107) {
      _abort();
      // unreachable;
     }
     $108 = ((($106)) + 12|0);
     $109 = HEAP32[$108>>2]|0;
     $110 = ($109|0)==($5|0);
     if (!($110)) {
      _abort();
      // unreachable;
     }
     $111 = ((($103)) + 8|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = ($112|0)==($5|0);
     if ($113) {
      HEAP32[$108>>2] = $103;
      HEAP32[$111>>2] = $106;
      $$3 = $103;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $127 = ($101|0)==(0|0);
   if (!($127)) {
    $128 = ((($5)) + 28|0);
    $129 = HEAP32[$128>>2]|0;
    $130 = (25268 + ($129<<2)|0);
    $131 = HEAP32[$130>>2]|0;
    $132 = ($5|0)==($131|0);
    if ($132) {
     HEAP32[$130>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $133 = 1 << $129;
      $134 = $133 ^ -1;
      $135 = HEAP32[(24968)>>2]|0;
      $136 = $135 & $134;
      HEAP32[(24968)>>2] = $136;
      break;
     }
    } else {
     $137 = HEAP32[(24980)>>2]|0;
     $138 = ($101>>>0)<($137>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($101)) + 16|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($5|0);
     if ($141) {
      HEAP32[$139>>2] = $$3;
     } else {
      $142 = ((($101)) + 20|0);
      HEAP32[$142>>2] = $$3;
     }
     $143 = ($$3|0)==(0|0);
     if ($143) {
      break;
     }
    }
    $144 = HEAP32[(24980)>>2]|0;
    $145 = ($$3>>>0)<($144>>>0);
    if ($145) {
     _abort();
     // unreachable;
    }
    $146 = ((($$3)) + 24|0);
    HEAP32[$146>>2] = $101;
    $147 = ((($5)) + 16|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = ($148|0)==(0|0);
    do {
     if (!($149)) {
      $150 = ($148>>>0)<($144>>>0);
      if ($150) {
       _abort();
       // unreachable;
      } else {
       $151 = ((($$3)) + 16|0);
       HEAP32[$151>>2] = $148;
       $152 = ((($148)) + 24|0);
       HEAP32[$152>>2] = $$3;
       break;
      }
     }
    } while(0);
    $153 = ((($147)) + 4|0);
    $154 = HEAP32[$153>>2]|0;
    $155 = ($154|0)==(0|0);
    if (!($155)) {
     $156 = HEAP32[(24980)>>2]|0;
     $157 = ($154>>>0)<($156>>>0);
     if ($157) {
      _abort();
      // unreachable;
     } else {
      $158 = ((($$3)) + 20|0);
      HEAP32[$158>>2] = $154;
      $159 = ((($154)) + 24|0);
      HEAP32[$159>>2] = $$3;
      break;
     }
    }
   }
  }
 } while(0);
 $160 = ($75>>>0)<(16);
 if ($160) {
  $161 = $3 & 1;
  $162 = $73 | $161;
  $163 = $162 | 2;
  HEAP32[$2>>2] = $163;
  $164 = (($0) + ($73)|0);
  $165 = ((($164)) + 4|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = $166 | 1;
  HEAP32[$165>>2] = $167;
  $$2 = $0;
  return ($$2|0);
 } else {
  $168 = (($0) + ($1)|0);
  $169 = $3 & 1;
  $170 = $169 | $1;
  $171 = $170 | 2;
  HEAP32[$2>>2] = $171;
  $172 = ((($168)) + 4|0);
  $173 = $75 | 3;
  HEAP32[$172>>2] = $173;
  $174 = (($168) + ($75)|0);
  $175 = ((($174)) + 4|0);
  $176 = HEAP32[$175>>2]|0;
  $177 = $176 | 1;
  HEAP32[$175>>2] = $177;
  _dispose_chunk($168,$75);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0417 = 0, $$0418 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1427 = 0, $$1431 = 0, $$1435 = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre = 0, $$pre$phi22Z2D = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $$pre21 = 0, $$pre23 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond16 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(24980)>>2]|0;
   $14 = ($11>>>0)<($13>>>0);
   if ($14) {
    _abort();
    // unreachable;
   }
   $15 = HEAP32[(24984)>>2]|0;
   $16 = ($11|0)==($15|0);
   if ($16) {
    $101 = ((($2)) + 4|0);
    $102 = HEAP32[$101>>2]|0;
    $103 = $102 & 3;
    $104 = ($103|0)==(3);
    if (!($104)) {
     $$1 = $11;$$1416 = $12;
     break;
    }
    HEAP32[(24972)>>2] = $12;
    $105 = $102 & -2;
    HEAP32[$101>>2] = $105;
    $106 = $12 | 1;
    $107 = ((($11)) + 4|0);
    HEAP32[$107>>2] = $106;
    $108 = (($11) + ($12)|0);
    HEAP32[$108>>2] = $12;
    return;
   }
   $17 = $7 >>> 3;
   $18 = ($7>>>0)<(256);
   if ($18) {
    $19 = ((($11)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($11)) + 12|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = $17 << 1;
    $24 = (25004 + ($23<<2)|0);
    $25 = ($20|0)==($24|0);
    if (!($25)) {
     $26 = ($20>>>0)<($13>>>0);
     if ($26) {
      _abort();
      // unreachable;
     }
     $27 = ((($20)) + 12|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ($28|0)==($11|0);
     if (!($29)) {
      _abort();
      // unreachable;
     }
    }
    $30 = ($22|0)==($20|0);
    if ($30) {
     $31 = 1 << $17;
     $32 = $31 ^ -1;
     $33 = HEAP32[6241]|0;
     $34 = $33 & $32;
     HEAP32[6241] = $34;
     $$1 = $11;$$1416 = $12;
     break;
    }
    $35 = ($22|0)==($24|0);
    if ($35) {
     $$pre23 = ((($22)) + 8|0);
     $$pre$phi24Z2D = $$pre23;
    } else {
     $36 = ($22>>>0)<($13>>>0);
     if ($36) {
      _abort();
      // unreachable;
     }
     $37 = ((($22)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ($38|0)==($11|0);
     if ($39) {
      $$pre$phi24Z2D = $37;
     } else {
      _abort();
      // unreachable;
     }
    }
    $40 = ((($20)) + 12|0);
    HEAP32[$40>>2] = $22;
    HEAP32[$$pre$phi24Z2D>>2] = $20;
    $$1 = $11;$$1416 = $12;
    break;
   }
   $41 = ((($11)) + 24|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ((($11)) + 12|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ($44|0)==($11|0);
   do {
    if ($45) {
     $55 = ((($11)) + 16|0);
     $56 = ((($55)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==(0|0);
     if ($58) {
      $59 = HEAP32[$55>>2]|0;
      $60 = ($59|0)==(0|0);
      if ($60) {
       $$3 = 0;
       break;
      } else {
       $$1424 = $59;$$1427 = $55;
      }
     } else {
      $$1424 = $57;$$1427 = $56;
     }
     while(1) {
      $61 = ((($$1424)) + 20|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ($62|0)==(0|0);
      if (!($63)) {
       $$1424 = $62;$$1427 = $61;
       continue;
      }
      $64 = ((($$1424)) + 16|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = ($65|0)==(0|0);
      if ($66) {
       break;
      } else {
       $$1424 = $65;$$1427 = $64;
      }
     }
     $67 = ($$1427>>>0)<($13>>>0);
     if ($67) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1427>>2] = 0;
      $$3 = $$1424;
      break;
     }
    } else {
     $46 = ((($11)) + 8|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = ($47>>>0)<($13>>>0);
     if ($48) {
      _abort();
      // unreachable;
     }
     $49 = ((($47)) + 12|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = ($50|0)==($11|0);
     if (!($51)) {
      _abort();
      // unreachable;
     }
     $52 = ((($44)) + 8|0);
     $53 = HEAP32[$52>>2]|0;
     $54 = ($53|0)==($11|0);
     if ($54) {
      HEAP32[$49>>2] = $44;
      HEAP32[$52>>2] = $47;
      $$3 = $44;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $68 = ($42|0)==(0|0);
   if ($68) {
    $$1 = $11;$$1416 = $12;
   } else {
    $69 = ((($11)) + 28|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (25268 + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($11|0)==($72|0);
    if ($73) {
     HEAP32[$71>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $74 = 1 << $70;
      $75 = $74 ^ -1;
      $76 = HEAP32[(24968)>>2]|0;
      $77 = $76 & $75;
      HEAP32[(24968)>>2] = $77;
      $$1 = $11;$$1416 = $12;
      break;
     }
    } else {
     $78 = HEAP32[(24980)>>2]|0;
     $79 = ($42>>>0)<($78>>>0);
     if ($79) {
      _abort();
      // unreachable;
     }
     $80 = ((($42)) + 16|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = ($81|0)==($11|0);
     if ($82) {
      HEAP32[$80>>2] = $$3;
     } else {
      $83 = ((($42)) + 20|0);
      HEAP32[$83>>2] = $$3;
     }
     $84 = ($$3|0)==(0|0);
     if ($84) {
      $$1 = $11;$$1416 = $12;
      break;
     }
    }
    $85 = HEAP32[(24980)>>2]|0;
    $86 = ($$3>>>0)<($85>>>0);
    if ($86) {
     _abort();
     // unreachable;
    }
    $87 = ((($$3)) + 24|0);
    HEAP32[$87>>2] = $42;
    $88 = ((($11)) + 16|0);
    $89 = HEAP32[$88>>2]|0;
    $90 = ($89|0)==(0|0);
    do {
     if (!($90)) {
      $91 = ($89>>>0)<($85>>>0);
      if ($91) {
       _abort();
       // unreachable;
      } else {
       $92 = ((($$3)) + 16|0);
       HEAP32[$92>>2] = $89;
       $93 = ((($89)) + 24|0);
       HEAP32[$93>>2] = $$3;
       break;
      }
     }
    } while(0);
    $94 = ((($88)) + 4|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = ($95|0)==(0|0);
    if ($96) {
     $$1 = $11;$$1416 = $12;
    } else {
     $97 = HEAP32[(24980)>>2]|0;
     $98 = ($95>>>0)<($97>>>0);
     if ($98) {
      _abort();
      // unreachable;
     } else {
      $99 = ((($$3)) + 20|0);
      HEAP32[$99>>2] = $95;
      $100 = ((($95)) + 24|0);
      HEAP32[$100>>2] = $$3;
      $$1 = $11;$$1416 = $12;
      break;
     }
    }
   }
  } else {
   $$1 = $0;$$1416 = $1;
  }
 } while(0);
 $109 = HEAP32[(24980)>>2]|0;
 $110 = ($2>>>0)<($109>>>0);
 if ($110) {
  _abort();
  // unreachable;
 }
 $111 = ((($2)) + 4|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 2;
 $114 = ($113|0)==(0);
 if ($114) {
  $115 = HEAP32[(24988)>>2]|0;
  $116 = ($2|0)==($115|0);
  if ($116) {
   $117 = HEAP32[(24976)>>2]|0;
   $118 = (($117) + ($$1416))|0;
   HEAP32[(24976)>>2] = $118;
   HEAP32[(24988)>>2] = $$1;
   $119 = $118 | 1;
   $120 = ((($$1)) + 4|0);
   HEAP32[$120>>2] = $119;
   $121 = HEAP32[(24984)>>2]|0;
   $122 = ($$1|0)==($121|0);
   if (!($122)) {
    return;
   }
   HEAP32[(24984)>>2] = 0;
   HEAP32[(24972)>>2] = 0;
   return;
  }
  $123 = HEAP32[(24984)>>2]|0;
  $124 = ($2|0)==($123|0);
  if ($124) {
   $125 = HEAP32[(24972)>>2]|0;
   $126 = (($125) + ($$1416))|0;
   HEAP32[(24972)>>2] = $126;
   HEAP32[(24984)>>2] = $$1;
   $127 = $126 | 1;
   $128 = ((($$1)) + 4|0);
   HEAP32[$128>>2] = $127;
   $129 = (($$1) + ($126)|0);
   HEAP32[$129>>2] = $126;
   return;
  }
  $130 = $112 & -8;
  $131 = (($130) + ($$1416))|0;
  $132 = $112 >>> 3;
  $133 = ($112>>>0)<(256);
  do {
   if ($133) {
    $134 = ((($2)) + 8|0);
    $135 = HEAP32[$134>>2]|0;
    $136 = ((($2)) + 12|0);
    $137 = HEAP32[$136>>2]|0;
    $138 = $132 << 1;
    $139 = (25004 + ($138<<2)|0);
    $140 = ($135|0)==($139|0);
    if (!($140)) {
     $141 = ($135>>>0)<($109>>>0);
     if ($141) {
      _abort();
      // unreachable;
     }
     $142 = ((($135)) + 12|0);
     $143 = HEAP32[$142>>2]|0;
     $144 = ($143|0)==($2|0);
     if (!($144)) {
      _abort();
      // unreachable;
     }
    }
    $145 = ($137|0)==($135|0);
    if ($145) {
     $146 = 1 << $132;
     $147 = $146 ^ -1;
     $148 = HEAP32[6241]|0;
     $149 = $148 & $147;
     HEAP32[6241] = $149;
     break;
    }
    $150 = ($137|0)==($139|0);
    if ($150) {
     $$pre21 = ((($137)) + 8|0);
     $$pre$phi22Z2D = $$pre21;
    } else {
     $151 = ($137>>>0)<($109>>>0);
     if ($151) {
      _abort();
      // unreachable;
     }
     $152 = ((($137)) + 8|0);
     $153 = HEAP32[$152>>2]|0;
     $154 = ($153|0)==($2|0);
     if ($154) {
      $$pre$phi22Z2D = $152;
     } else {
      _abort();
      // unreachable;
     }
    }
    $155 = ((($135)) + 12|0);
    HEAP32[$155>>2] = $137;
    HEAP32[$$pre$phi22Z2D>>2] = $135;
   } else {
    $156 = ((($2)) + 24|0);
    $157 = HEAP32[$156>>2]|0;
    $158 = ((($2)) + 12|0);
    $159 = HEAP32[$158>>2]|0;
    $160 = ($159|0)==($2|0);
    do {
     if ($160) {
      $170 = ((($2)) + 16|0);
      $171 = ((($170)) + 4|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = ($172|0)==(0|0);
      if ($173) {
       $174 = HEAP32[$170>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $$3433 = 0;
        break;
       } else {
        $$1431 = $174;$$1435 = $170;
       }
      } else {
       $$1431 = $172;$$1435 = $171;
      }
      while(1) {
       $176 = ((($$1431)) + 20|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if (!($178)) {
        $$1431 = $177;$$1435 = $176;
        continue;
       }
       $179 = ((($$1431)) + 16|0);
       $180 = HEAP32[$179>>2]|0;
       $181 = ($180|0)==(0|0);
       if ($181) {
        break;
       } else {
        $$1431 = $180;$$1435 = $179;
       }
      }
      $182 = ($$1435>>>0)<($109>>>0);
      if ($182) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1435>>2] = 0;
       $$3433 = $$1431;
       break;
      }
     } else {
      $161 = ((($2)) + 8|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162>>>0)<($109>>>0);
      if ($163) {
       _abort();
       // unreachable;
      }
      $164 = ((($162)) + 12|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($2|0);
      if (!($166)) {
       _abort();
       // unreachable;
      }
      $167 = ((($159)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==($2|0);
      if ($169) {
       HEAP32[$164>>2] = $159;
       HEAP32[$167>>2] = $162;
       $$3433 = $159;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $183 = ($157|0)==(0|0);
    if (!($183)) {
     $184 = ((($2)) + 28|0);
     $185 = HEAP32[$184>>2]|0;
     $186 = (25268 + ($185<<2)|0);
     $187 = HEAP32[$186>>2]|0;
     $188 = ($2|0)==($187|0);
     if ($188) {
      HEAP32[$186>>2] = $$3433;
      $cond16 = ($$3433|0)==(0|0);
      if ($cond16) {
       $189 = 1 << $185;
       $190 = $189 ^ -1;
       $191 = HEAP32[(24968)>>2]|0;
       $192 = $191 & $190;
       HEAP32[(24968)>>2] = $192;
       break;
      }
     } else {
      $193 = HEAP32[(24980)>>2]|0;
      $194 = ($157>>>0)<($193>>>0);
      if ($194) {
       _abort();
       // unreachable;
      }
      $195 = ((($157)) + 16|0);
      $196 = HEAP32[$195>>2]|0;
      $197 = ($196|0)==($2|0);
      if ($197) {
       HEAP32[$195>>2] = $$3433;
      } else {
       $198 = ((($157)) + 20|0);
       HEAP32[$198>>2] = $$3433;
      }
      $199 = ($$3433|0)==(0|0);
      if ($199) {
       break;
      }
     }
     $200 = HEAP32[(24980)>>2]|0;
     $201 = ($$3433>>>0)<($200>>>0);
     if ($201) {
      _abort();
      // unreachable;
     }
     $202 = ((($$3433)) + 24|0);
     HEAP32[$202>>2] = $157;
     $203 = ((($2)) + 16|0);
     $204 = HEAP32[$203>>2]|0;
     $205 = ($204|0)==(0|0);
     do {
      if (!($205)) {
       $206 = ($204>>>0)<($200>>>0);
       if ($206) {
        _abort();
        // unreachable;
       } else {
        $207 = ((($$3433)) + 16|0);
        HEAP32[$207>>2] = $204;
        $208 = ((($204)) + 24|0);
        HEAP32[$208>>2] = $$3433;
        break;
       }
      }
     } while(0);
     $209 = ((($203)) + 4|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     if (!($211)) {
      $212 = HEAP32[(24980)>>2]|0;
      $213 = ($210>>>0)<($212>>>0);
      if ($213) {
       _abort();
       // unreachable;
      } else {
       $214 = ((($$3433)) + 20|0);
       HEAP32[$214>>2] = $210;
       $215 = ((($210)) + 24|0);
       HEAP32[$215>>2] = $$3433;
       break;
      }
     }
    }
   }
  } while(0);
  $216 = $131 | 1;
  $217 = ((($$1)) + 4|0);
  HEAP32[$217>>2] = $216;
  $218 = (($$1) + ($131)|0);
  HEAP32[$218>>2] = $131;
  $219 = HEAP32[(24984)>>2]|0;
  $220 = ($$1|0)==($219|0);
  if ($220) {
   HEAP32[(24972)>>2] = $131;
   return;
  } else {
   $$2 = $131;
  }
 } else {
  $221 = $112 & -2;
  HEAP32[$111>>2] = $221;
  $222 = $$1416 | 1;
  $223 = ((($$1)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($$1) + ($$1416)|0);
  HEAP32[$224>>2] = $$1416;
  $$2 = $$1416;
 }
 $225 = $$2 >>> 3;
 $226 = ($$2>>>0)<(256);
 if ($226) {
  $227 = $225 << 1;
  $228 = (25004 + ($227<<2)|0);
  $229 = HEAP32[6241]|0;
  $230 = 1 << $225;
  $231 = $229 & $230;
  $232 = ($231|0)==(0);
  if ($232) {
   $233 = $229 | $230;
   HEAP32[6241] = $233;
   $$pre = ((($228)) + 8|0);
   $$0436 = $228;$$pre$phiZ2D = $$pre;
  } else {
   $234 = ((($228)) + 8|0);
   $235 = HEAP32[$234>>2]|0;
   $236 = HEAP32[(24980)>>2]|0;
   $237 = ($235>>>0)<($236>>>0);
   if ($237) {
    _abort();
    // unreachable;
   } else {
    $$0436 = $235;$$pre$phiZ2D = $234;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $238 = ((($$0436)) + 12|0);
  HEAP32[$238>>2] = $$1;
  $239 = ((($$1)) + 8|0);
  HEAP32[$239>>2] = $$0436;
  $240 = ((($$1)) + 12|0);
  HEAP32[$240>>2] = $228;
  return;
 }
 $241 = $$2 >>> 8;
 $242 = ($241|0)==(0);
 if ($242) {
  $$0429 = 0;
 } else {
  $243 = ($$2>>>0)>(16777215);
  if ($243) {
   $$0429 = 31;
  } else {
   $244 = (($241) + 1048320)|0;
   $245 = $244 >>> 16;
   $246 = $245 & 8;
   $247 = $241 << $246;
   $248 = (($247) + 520192)|0;
   $249 = $248 >>> 16;
   $250 = $249 & 4;
   $251 = $250 | $246;
   $252 = $247 << $250;
   $253 = (($252) + 245760)|0;
   $254 = $253 >>> 16;
   $255 = $254 & 2;
   $256 = $251 | $255;
   $257 = (14 - ($256))|0;
   $258 = $252 << $255;
   $259 = $258 >>> 15;
   $260 = (($257) + ($259))|0;
   $261 = $260 << 1;
   $262 = (($260) + 7)|0;
   $263 = $$2 >>> $262;
   $264 = $263 & 1;
   $265 = $264 | $261;
   $$0429 = $265;
  }
 }
 $266 = (25268 + ($$0429<<2)|0);
 $267 = ((($$1)) + 28|0);
 HEAP32[$267>>2] = $$0429;
 $268 = ((($$1)) + 16|0);
 $269 = ((($$1)) + 20|0);
 HEAP32[$269>>2] = 0;
 HEAP32[$268>>2] = 0;
 $270 = HEAP32[(24968)>>2]|0;
 $271 = 1 << $$0429;
 $272 = $270 & $271;
 $273 = ($272|0)==(0);
 if ($273) {
  $274 = $270 | $271;
  HEAP32[(24968)>>2] = $274;
  HEAP32[$266>>2] = $$1;
  $275 = ((($$1)) + 24|0);
  HEAP32[$275>>2] = $266;
  $276 = ((($$1)) + 12|0);
  HEAP32[$276>>2] = $$1;
  $277 = ((($$1)) + 8|0);
  HEAP32[$277>>2] = $$1;
  return;
 }
 $278 = HEAP32[$266>>2]|0;
 $279 = ($$0429|0)==(31);
 $280 = $$0429 >>> 1;
 $281 = (25 - ($280))|0;
 $282 = $279 ? 0 : $281;
 $283 = $$2 << $282;
 $$0417 = $283;$$0418 = $278;
 while(1) {
  $284 = ((($$0418)) + 4|0);
  $285 = HEAP32[$284>>2]|0;
  $286 = $285 & -8;
  $287 = ($286|0)==($$2|0);
  if ($287) {
   label = 127;
   break;
  }
  $288 = $$0417 >>> 31;
  $289 = (((($$0418)) + 16|0) + ($288<<2)|0);
  $290 = $$0417 << 1;
  $291 = HEAP32[$289>>2]|0;
  $292 = ($291|0)==(0|0);
  if ($292) {
   label = 124;
   break;
  } else {
   $$0417 = $290;$$0418 = $291;
  }
 }
 if ((label|0) == 124) {
  $293 = HEAP32[(24980)>>2]|0;
  $294 = ($289>>>0)<($293>>>0);
  if ($294) {
   _abort();
   // unreachable;
  }
  HEAP32[$289>>2] = $$1;
  $295 = ((($$1)) + 24|0);
  HEAP32[$295>>2] = $$0418;
  $296 = ((($$1)) + 12|0);
  HEAP32[$296>>2] = $$1;
  $297 = ((($$1)) + 8|0);
  HEAP32[$297>>2] = $$1;
  return;
 }
 else if ((label|0) == 127) {
  $298 = ((($$0418)) + 8|0);
  $299 = HEAP32[$298>>2]|0;
  $300 = HEAP32[(24980)>>2]|0;
  $301 = ($299>>>0)>=($300>>>0);
  $not$ = ($$0418>>>0)>=($300>>>0);
  $302 = $301 & $not$;
  if (!($302)) {
   _abort();
   // unreachable;
  }
  $303 = ((($299)) + 12|0);
  HEAP32[$303>>2] = $$1;
  HEAP32[$298>>2] = $$1;
  $304 = ((($$1)) + 8|0);
  HEAP32[$304>>2] = $299;
  $305 = ((($$1)) + 12|0);
  HEAP32[$305>>2] = $$0418;
  $306 = ((($$1)) + 24|0);
  HEAP32[$306>>2] = 0;
  return;
 }
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _saveSetjmp(env, label, table, size) {
    // Not particularly fast: slow table lookup of setjmpId to label. But setjmp
    // prevents relooping anyhow, so slowness is to be expected. And typical case
    // is 1 setjmp per invocation, or less.
    env = env|0;
    label = label|0;
    table = table|0;
    size = size|0;
    var i = 0;
    setjmpId = (setjmpId+1)|0;
    HEAP32[((env)>>2)]=setjmpId;
    while ((i|0) < (size|0)) {
      if (((HEAP32[(((table)+((i<<3)))>>2)])|0) == 0) {
        HEAP32[(((table)+((i<<3)))>>2)]=setjmpId;
        HEAP32[(((table)+((i<<3)+4))>>2)]=label;
        // prepare next slot
        HEAP32[(((table)+((i<<3)+8))>>2)]=0;
        tempRet0 = size;
        return table | 0;
      }
      i = i+1|0;
    }
    // grow the table
    size = (size*2)|0;
    table = _realloc(table|0, 8*(size+1|0)|0) | 0;
    table = _saveSetjmp(env|0, label|0, table|0, size|0) | 0;
    tempRet0 = size;
    return table | 0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _testSetjmp(id, table, size) {
    id = id|0;
    table = table|0;
    size = size|0;
    var i = 0, curr = 0;
    while ((i|0) < (size|0)) {
      curr = ((HEAP32[(((table)+((i<<3)))>>2)])|0);
      if ((curr|0) == 0) break;
      if ((curr|0) == (id|0)) {
        return ((HEAP32[(((table)+((i<<3)+4))>>2)])|0);
      }
      i = i+1|0;
    }
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $rem = 0, __stackBase__ = 0;
    __stackBase__ = STACKTOP;
    STACKTOP = STACKTOP + 16 | 0;
    $rem = __stackBase__ | 0;
    ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
    STACKTOP = __stackBase__;
    return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function _pthread_self() {
    return 0;
}

  
function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0;
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&1023]()|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&1023](a1|0);
}


function dynCall_iiidd(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=+a3; a4=+a4;
  return FUNCTION_TABLE_iiidd[index&511](a1|0,a2|0,+a3,+a4)|0;
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&1023](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&1023](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0);
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  FUNCTION_TABLE_viiiiii[index&511](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0);
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&0](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&1023](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(0);return 0;
}
function b1() {
 ; nullFunc_i(1);return 0;
}
function b2(p0) {
 p0 = p0|0; nullFunc_vi(2);
}
function b3(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = +p2;p3 = +p3; nullFunc_iiidd(3);return 0;
}
function b4(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(4);
}
function b5(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(5);return 0;
}
function b6(p0) {
 p0 = p0|0; nullFunc_ii(6);return 0;
}
function b7(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(7);
}
function b8(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(8);return 0;
}
function b9(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_viiiiii(9);
}
function b10(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(10);return 0;
}
function b11(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(11);return 0;
}
function b12(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(12);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,___stdio_write,___stdio_seek,___stdout_write,_sn_write,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,_iListSetInsertItemAttrib,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,_iListDragBegin_CB,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,_iTreeSetAddLeafAttrib,_iTreeSetAddBranchAttrib,_iTreeSetInsertLeafAttrib,_iTreeSetInsertBranchAttrib,b0,b0,_iTreeSetUserDataAttrib,_iTreeDragBegin_CB,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,_do_read_533,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_i = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupBackgroundBoxNewClass,b1,b1,b1,b1,b1,b1,b1,b1,_iupBoxNewClassBase,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupButtonNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupCanvasNewClass,b1,b1,b1,_iupCboxNewClass
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupColorDlgNewClass,_iupDetachBoxNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,_iupDialogNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupExpanderNewClass,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupFileDlgNewClass,_iupFillNewClass,b1,b1,b1,b1,b1,b1,b1,_iupFlatButtonNewClass,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupFontDlgNewClass,_iupFrameNewClass,b1,b1,b1,b1,b1,b1,_iupGridBoxNewClass,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,_iupHboxNewClass,b1,b1,b1,b1,b1,b1,b1,_iupImageNewClass,b1,b1,b1,b1,_iupImageRGBNewClass,b1,_iupImageRGBANewClass,b1,_iupLabelNewClass,b1,b1,b1,b1
,_iupLinkNewClass,b1,b1,b1,b1,b1,_iupListNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupSeparatorNewClass,_iupItemNewClass,b1,_iupSubmenuNewClass,b1,_iupMenuNewClass,b1,_iupMessageDlgNewClass,_iupNormalizerNewClass,b1,b1,b1,b1,b1,b1
,_iupProgressBarNewClass,b1,b1,b1,b1,b1,b1,_iupProgressDlgNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupRadioNewClass,b1,b1,b1,b1,b1,b1,b1
,b1,_iupSboxNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupScrollBoxNewClass,b1,b1,b1,b1,b1,b1,b1,b1,_iupSpinNewClass,b1,b1,b1,b1,b1,b1,_iupSpinboxNewClass,b1
,b1,b1,b1,b1,_iupSplitNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupTabsNewClass,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupTextNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,_iupTimerNewClass,b1,b1,b1,b1,_iupToggleNewClass,b1,b1,b1,b1,b1,_iupTreeNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupUserNewClass,b1,_iupValNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupVboxNewClass,b1,b1,b1,b1
,b1,b1,b1,_iupZboxNewClass,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_iupClipboardNewClass,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_vi = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iupdrvBaseLayoutUpdateMethod,_iupdrvBaseUnMapMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,_iDialogDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iExpanderDestroyMethod,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iFillUnMapMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iImageDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,_iListDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_free,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iNormalizerDestroy,b2,b2,b2
,b2,b2,_iProgressBarDestroyMethod,b2,b2,b2,b2,b2,b2,_iProgressDlgDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iTextDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,_iTimerDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_iTreeDestroyMethod,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_emscriptenButtonUnMapMethod,b2,b2,_emscriptenDialogUnMapMethod,_emscriptenDialogLayoutUpdateMethod,b2,b2,_emscriptenFrameUnMapMethod,b2,b2
,b2,b2,b2,_emscriptenTextUnMapMethod,_cocoaTimerDestroy,b2,_emscriptenToggleUnMapMethod,b2,b2,b2,_cleanup_612,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_iiidd = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_iScrollBoxScroll_CB,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iBackgroundBoxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,_iCboxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iDetachBoxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,_iDialogSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iExpanderChildAddedMethod,b4,_iExpanderSetChildrenCurrentSizeMethod,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iFrameSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,_iGridBoxSetChildrenCurrentSizeMethod
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iHboxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iRadioSetChildrenCurrentSizeMethod,b4,b4,b4,b4
,b4,b4,b4,b4,_iSboxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iScrollBoxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,_iSpinboxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,_iSplitSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,_iTabsSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_iVboxSetChildrenCurrentSizeMethod,b4,b4
,b4,b4,b4,b4,b4,_iZboxChildAddedMethod,b4,b4,_iZboxSetChildrenCurrentSizeMethod,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_iiiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,_iDetachBoxButton_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,_iExpanderExtraButtonButton_CB,b5,b5,b5,b5,_iExpanderExpandButtonButton_CB,b5,b5,_iExpanderTitleButton_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_iFlatButtonButton_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,_iLinkButton_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_iListDropData_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,_iSboxButton_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,_iScrollBoxButton_CB,b5,b5,b5,b5,_iSpinButtonCB,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_iSplitButton_CB,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_iTreeDropData_CB,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,_testCallback,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_ii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,___stdio_close,b6,b6,b6,b6,b6,b6,b6,b6,b6,_iupBaseContainerGetExpandAttrib,_iBackgroundBoxGetClientOffsetAttrib,_iBackgroundBoxGetBgColorAttrib,b6,b6,b6,_iupBaseTypeVoidMapMethod,_iBoxGetClientSizeAttrib,_iupBaseGetClientOffsetAttrib
,_iBoxGetGapAttrib,b6,_iBoxGetCGapAttrib,b6,_iBoxGetMarginAttrib,b6,_iBoxGetCMarginAttrib,b6,_iBoxGetExpandChildrenAttrib,b6,_iBoxGetHomogeneousAttrib,b6,_iBoxGetNormalizeSizeAttrib,b6,_iBoxUpdateAttribFromFont,b6,b6,b6,b6,b6,_iButtonGetSpacingAttrib,b6,_iButtonGetImagePositionAttrib,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,_iupBaseGetCurrentSizeAttrib,_iupBaseGetWidAttrib,b6,_iBaseGetFloatingAttrib,b6,_iBaseGetExpandAttrib,b6,b6,_iupBaseGetSizeAttrib,b6,_iupBaseGetRasterSizeAttrib,b6,_iupBaseGetCharSizeAttrib,_iBaseGetNaturalSizeAttrib,_iBaseGetUserSizeAttrib,_iBaseGetPositionAttrib,b6,b6,b6,b6,_iupGetFontAttrib,b6,_iupGetFontStyleAttrib,b6,_iupGetFontSizeAttrib,b6
,_iupGetFontFaceAttrib,b6,_iupBaseGetVisibleAttrib,b6,_iupBaseGetActiveAttrib,b6,b6,_iBaseGetXAttrib,_iBaseGetYAttrib,_iBaseGetScreenPositionAttrib,b6,_iupdrvBaseGetTipVisibleAttrib,b6,b6,b6,b6,b6,b6,b6,_iDetachBoxGetClientSizeAttrib,b6,b6,_iDetachBoxGetBarSizeAttrib,b6,_iDetachBoxGetShowGripAttrib,b6,_iDetachBoxGetOldParentHandleAttrib,_iDetachBoxGetOldBrotherHandleAttrib,b6,b6
,b6,b6,_iDetachBoxAction_CB,b6,b6,b6,b6,b6,b6,b6,_iDialogGetSizeAttrib,b6,_iDialogGetRasterSizeAttrib,b6,b6,b6,_iDialogGetXAttrib,_iDialogGetYAttrib,_iDialogGetScreenPositionAttrib,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_iExpanderGetClientSizeAttrib
,_iExpanderGetPositionAttrib,b6,_iExpanderGetBarSizeAttrib,b6,_iExpanderGetStateAttrib,b6,b6,b6,b6,b6,b6,b6,b6,_iExpanderGetTitleExpandAttrib,b6,_iExpanderGetAutoShowAttrib,b6,_iExpanderGetExtraButtonsAttrib,b6,_iExpanderGetAnimationAttrib,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,_iExpanderTimer_cb,b6,_iExpanderExtraButtonEnterWindow_cb,_iExpanderExtraButtonLeaveWindow_cb,b6,_iExpanderAnimateTimer_CB,b6,_iExpanderExpandButtonEnterWindow_cb,_iExpanderExpandButtonLeaveWindow_cb,b6,_iExpanderTitleEnterWindow_cb,_iExpanderTitleLeaveWindow_cb,b6,b6,b6,_iFillMapMethod,b6,b6,b6,b6,_iFillGetExpandAttrib,b6,b6,b6,_iFlatButtonMapMethod,b6,b6,_iFlatButtonGetRadioAttrib
,_iFlatButtonGetAlignmentAttrib,b6,_iFlatButtonGetPaddingAttrib,b6,_iFlatButtonGetSpacingAttrib,b6,_iFlatButtonGetBorderWidthAttrib,b6,_iFlatButtonGetBgColorAttrib,b6,_iFlatButtonGetImagePositionAttrib,b6,_iFlatButtonRedraw_CB,b6,b6,_iFlatButtonLeaveWindow_CB,_iFlatButtonEnterWindow_CB,_iFlatButtonActivate_CB,b6,b6,b6,b6,b6,b6,_iFrameGetClientSizeAttrib,_iFrameGetClientOffsetAttrib,b6,b6,b6,b6
,b6,_iGridBoxGetClientSizeAttrib,_iGridBoxGetMarginAttrib,b6,_iGridBoxGetCMarginAttrib,b6,_iGridBoxGetExpandChildrenAttrib,b6,_iGridBoxGetHomogeneousLinAttrib,b6,_iGridBoxGetHomogeneousColAttrib,b6,_iGridBoxGetNormalizeSizeAttrib,b6,_iGridBoxGetGapLinAttrib,b6,_iGridBoxGetCGapLinAttrib,b6,_iGridBoxGetGapColAttrib,b6,_iGridBoxGetCGapColAttrib,b6,_iGridBoxGetAlignmentLinAttrib,b6,_iGridBoxGetAlignmentColAttrib,b6,_iGridBoxGetOrientationAttrib,b6,_iGridBoxGetNumDivAttrib,b6
,_iGridBoxGetNumColAttrib,_iGridBoxGetNumLinAttrib,_iGridBoxGetSizeLinAttrib,b6,_iGridBoxGetSizeColAttrib,b6,b6,_iGridBoxUpdateAttribFromFont,b6,b6,b6,b6,b6,b6,_iHboxGetAlignmentAttrib,b6,b6,b6,b6,_iImageGetWidthAttrib,_iImageGetHeightAttrib,b6,b6,b6,b6,b6,b6,b6,_iLabelGetSeparatorAttrib,b6
,b6,b6,_iLinkMapMethod,b6,_iLinkEnterWindow_CB,_iLinkLeaveWindow_CB,b6,b6,b6,b6,_iListGetScrollbarAttrib,b6,_iListGetMultipleAttrib,b6,_iListGetDropdownAttrib,b6,_iListGetEditboxAttrib,b6,_iListGetCountAttrib,_iListGetValueStringAttrib,b6,b6,b6,b6,b6,_iListGetMaskAttrib,b6,b6,b6,b6
,_iListGetMaskDataAttrib,_iListGetShowImageAttrib,b6,_iListGetShowDragDropAttrib,b6,b6,b6,b6,b6,b6,b6,_malloc,_iMaskParseExpression,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,_iProgressBarGetMinAttrib,b6,_iProgressBarGetMaxAttrib,b6,b6,b6,b6,_iProgressDlgGetTotalCountAttrib,b6,_iProgressDlgGetCountAttrib,b6,b6,_iProgressDlgGetPercentAttrib,b6,_iProgressDlgGetStateAttrib,b6,_iProgressDlgGetDescriptionAttrib,b6,_iProgressDlgCancel_CB,b6,b6,b6,b6,b6,_iRadioGetValueAttrib,b6,_iRadioGetValueHandleAttrib
,b6,b6,b6,b6,b6,b6,_iSboxGetClientSizeAttrib,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_iupBaseNativeParentGetBgColorAttrib,b6,b6,b6,b6,b6,_iSpinTimerCB,b6,_iSpinK_SP,_iSpinK_sSP,_iSpinK_cSP,b6,b6
,b6,b6,b6,_iSpinboxGetClientSizeAttrib,b6,b6,b6,b6,b6,_iSplitGetClientSizeAttrib,b6,b6,_iSplitGetValueAttrib,b6,_iSplitGetLayoutDragAttrib,b6,_iSplitGetShowGripAttrib,b6,_iSplitGetAutoHideAttrib,b6,_iSplitGetBarSizeAttrib,b6,_iSplitGetMinMaxAttrib,b6,b6,b6,b6,_iSplitAction_CB,b6,b6
,b6,b6,b6,b6,_iTabsGetValueAttrib,b6,_iTabsGetValuePosAttrib,b6,_iTabsGetValueHandleAttrib,b6,_iTabsGetCountAttrib,_iTabsGetShowCloseAttrib,b6,_iTabsGetClientSizeAttrib,_iTabsGetClientOffsetAttrib,b6,b6,b6,b6,_iTextGetScrollbarAttrib,b6,_iTextGetMultilineAttrib,b6,_iTextGetAppendNewlineAttrib,b6,b6,_iTextGetMaskAttrib,b6,b6,b6
,b6,_iTextGetMaskDataAttrib,b6,b6,b6,_iTimerGetWidAttrib,_iTimerGetRunAttrib,b6,b6,b6,b6,_iToggleGetRadioAttrib,_iToggleGetFlatAttrib,b6,b6,b6,b6,b6,_iTreeGetShowDragDropAttrib,b6,_iTreeGetShowRenameAttrib,b6,_iTreeGetShowToggleAttrib,b6,_iTreeGetAddExpandedAttrib,b6,_iTreeGetCountAttrib,b6,b6,_iTreeGetMarkModeAttrib
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,_iValGetMaxAttrib,b6,_iValGetMinAttrib,b6,_iValGetOrientationAttrib,b6,_iValGetInvertedAttrib,b6,b6,b6,b6,b6,b6
,b6,_iVboxGetAlignmentAttrib,b6,b6,b6,b6,b6,b6,b6,b6,_iZboxGetAlignmentAttrib,b6,_iZboxGetValueAttrib,b6,_iZboxGetValuePosAttrib,b6,_iZboxGetValueHandleAttrib,b6,b6,_emscriptenButtonMapMethod,b6,b6,_emscriptenDialogMapMethod,b6,b6,b6,_emscriptenFrameMapMethod,b6,_emscriptenLabelMapMethod,b6
,b6,b6,_emscriptenTextMapMethod,b6,b6,_emscriptenToggleMapMethod,b6,_OnButtonCallback,b6,_IupEntryPoint,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_viii = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iBackgroundBoxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,_iCboxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iDetachBoxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iDialogSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iExpanderSetChildrenPositionMethod,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iFrameSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7
,_iGridBoxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iHboxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iRadioSetChildrenPositionMethod,b7,b7,b7
,b7,b7,b7,b7,b7,_iSboxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iScrollBoxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,_iSpinboxSetChildrenPositionMethod,b7,b7,b7,b7,b7,_iSplitSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,_iTabsSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,_iVboxSetChildrenPositionMethod,b7
,b7,b7,b7,b7,b7,b7,_iZboxChildRemovedMethod,b7,b7,_iZboxSetChildrenPositionMethod,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,_iListDragData_CB,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_iSboxMotion_CB,b8,b8,b8,b8,b8,b8,b8,b8,_iScrollBoxMotion_CB,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_iSplitMotion_CB,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,_iTreeDragData_CB,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viiiiii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,_iMaskParseSetState,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_iii = [b10,_match_alphanum,_match_non_alphanum,_match_digit,_match_non_digit,_match_non_blanks,_match_blanks,_match_word_boundary,_match_alpha,_match_non_alpha,b10,b10,b10,b10,b10,b10,_iBackgroundBoxCreateMethod,b10,b10,b10,b10,b10,b10,_iBackgroundBoxSetBgColorAttrib,b10,_iBoxCreateMethod,b10,b10,b10
,b10,_iBoxSetGapAttrib,b10,_iBoxSetCGapAttrib,b10,_iBoxSetMarginAttrib,b10,_iBoxSetCMarginAttrib,b10,_iBoxSetExpandChildrenAttrib,b10,_iBoxSetHomogeneousAttrib,b10,_iBoxSetNormalizeSizeAttrib,b10,b10,_iButtonCreateMethod,b10,b10,b10,b10,_iButtonSetSpacingAttrib,b10,_iButtonSetImagePositionAttrib,_iButtonSetFocusOnClickAttrib,b10,_iCanvasCreateMethod,b10,_iupdrvBaseSetCursorAttrib,b10
,_iCboxCreateMethod,b10,b10,b10,b10,b10,_iupBaseSetNameAttrib,b10,_iBaseSetFloatingAttrib,b10,_iBaseSetExpandAttrib,_iBaseSetNormalizerGroupAttrib,b10,_iupBaseSetSizeAttrib,b10,_iupBaseSetRasterSizeAttrib,b10,b10,b10,b10,_iBaseSetPositionAttrib,_iupBaseSetMinSizeAttrib,_iupBaseSetMaxSizeAttrib,_iupdrvSetStandardFontAttrib,b10,_iupSetFontAttrib,b10,_iupSetFontStyleAttrib,b10,_iupSetFontSizeAttrib
,b10,_iupSetFontFaceAttrib,b10,_iupBaseSetVisibleAttrib,b10,_iupBaseSetActiveAttrib,_iupdrvBaseSetZorderAttrib,b10,b10,b10,_iupdrvBaseSetTipAttrib,b10,_iupdrvBaseSetTipVisibleAttrib,b10,b10,_iDetachBoxCreateMethod,b10,b10,b10,b10,_iDetachBoxSetColorAttrib,_iDetachBoxSetOrientationAttrib,b10,_iDetachBoxSetBarSizeAttrib,b10,_iDetachBoxSetShowGripAttrib,b10,b10,_iDetachBoxSetRestoreAttrib,_iDetachBoxSetDetachAttrib
,b10,_iDetachBoxFocus_CB,b10,_iDetachBoxK_Any_CB,b10,_iDialogCreateMethod,b10,b10,b10,b10,b10,_iDialogSetSizeAttrib,b10,_iDialogSetRasterSizeAttrib,_iDialogSetNActiveAttrib,_iDialogSetVisibleAttrib,b10,b10,b10,_iDialogSetMenuAttrib,_iDialogSetHideTaskbarAttrib,_iDialogSetDialogFrameAttrib,b10,_iExpanderCreateMethod,b10,b10,b10,b10,b10,b10
,b10,_iExpanderSetPositionAttrib,b10,_iExpanderSetBarSizeAttrib,b10,_iExpanderSetStateAttrib,_iExpanderSetForeColorAttrib,_iExpanderSetHighColorAttrib,_iExpanderSetOpenColorAttrib,_iExpanderSetBackColorAttrib,_iExpanderSetTitleAttrib,_iExpanderSetTitleImageAttrib,_iExpanderSetTitleImageOpenAttrib,b10,_iExpanderSetTitleExpandAttrib,b10,_iExpanderSetAutoShowAttrib,b10,_iExpanderSetExtraButtonsAttrib,b10,_iExpanderSetAnimationAttrib,_iExpanderSetImageAttrib,_iExpanderSetImageOpenAttrib,_iExpanderSetImageExtra1Attrib,_iExpanderSetImageExtraPress1Attrib,_iExpanderSetImageExtraHighlight1Attrib,_iExpanderSetImageExtra2Attrib,_iExpanderSetImageExtraPress2Attrib,_iExpanderSetImageExtraHighlight2Attrib,_iExpanderSetImageExtra3Attrib
,_iExpanderSetImageExtraPress3Attrib,_iExpanderSetImageExtraHighlight3Attrib,b10,b10,b10,b10,_iExpanderGlobalMotion_cb,b10,b10,b10,b10,b10,b10,b10,b10,b10,_iFillCreateMethod,b10,b10,b10,_iFillSetSizeAttrib,_iFillSetRasterSizeAttrib,b10,b10,_iFlatButtonCreateMethod,b10,b10,_iFlatButtonSetActiveAttrib,_iFlatButtonSetValueAttrib,b10
,b10,_iFlatButtonSetAlignmentAttrib,b10,_iFlatButtonSetPaddingAttrib,b10,_iFlatButtonSetSpacingAttrib,b10,_iFlatButtonSetBorderWidthAttrib,b10,_iFlatButtonSetBgColorAttrib,b10,_iFlatButtonSetImagePositionAttrib,b10,b10,_iFlatButtonFocus_CB,b10,b10,b10,b10,b10,_iFrameCreateMethod,b10,b10,b10,b10,b10,b10,_iGridBoxCreateMethod,b10,b10
,b10,b10,b10,_iGridBoxSetMarginAttrib,b10,_iGridBoxSetCMarginAttrib,b10,_iGridBoxSetExpandChildrenAttrib,b10,_iGridBoxSetHomogeneousLinAttrib,b10,_iGridBoxSetHomogeneousColAttrib,b10,_iGridBoxSetNormalizeSizeAttrib,b10,_iGridBoxSetGapLinAttrib,b10,_iGridBoxSetCGapLinAttrib,b10,_iGridBoxSetGapColAttrib,b10,_iGridBoxSetCGapColAttrib,b10,_iGridBoxSetAlignmentLinAttrib,b10,_iGridBoxSetAlignmentColAttrib,b10,_iGridBoxSetOrientationAttrib,b10,_iGridBoxSetNumDivAttrib
,b10,b10,b10,_iGridBoxSetSizeLinAttrib,b10,_iGridBoxSetSizeColAttrib,_iGridBoxSetFitToChildrenAttrib,b10,b10,b10,b10,b10,_iHboxSetSizeAttrib,_iHboxSetRasterSizeAttrib,b10,_iHboxSetAlignmentAttrib,b10,_iImageCreateMethod,b10,b10,b10,b10,_iImageRGBCreateMethod,b10,_iImageRGBACreateMethod,b10,_iLabelCreateMethod,b10,b10,_iLabelSetSeparatorAttrib
,b10,_iLinkCreateMethod,b10,b10,b10,b10,b10,_iListCreateMethod,b10,b10,b10,_iListSetScrollbarAttrib,b10,_iListSetMultipleAttrib,b10,_iListSetDropdownAttrib,b10,_iListSetEditboxAttrib,b10,b10,_iListSetValueStringAttrib,b10,_iListSetAppendItemAttrib,_iListSetRemoveItemAttrib,_iListSetValueMaskedAttrib,b10,_iListSetMaskAttrib,_iListSetMaskIntAttrib,_iListSetMaskFloatAttrib,_iListSetMaskRealAttrib
,b10,b10,_iListSetShowImageAttrib,b10,_iListSetShowDragDropAttrib,_iListSetDragDropListAttrib,b10,_iListDragDataSize_CB,b10,_iListDragEnd_CB,b10,b10,b10,b10,b10,b10,b10,_iItemCreateMethod,b10,_iSubmenuCreateMethod,b10,_iMenuCreateMethod,b10,b10,_iNormalizerCreateMethod,b10,b10,_iNormalizerSetNormalizeAttrib,_iNormalizerSetAddControlHandleAttrib,_iNormalizerSetAddControlAttrib
,b10,_iProgressBarCreateMethod,b10,b10,_iProgressBarSetMinAttrib,b10,_iProgressBarSetMaxAttrib,b10,_iProgressDlgCreateMethod,b10,b10,_iProgressDlgSetTotalCountAttrib,b10,_iProgressDlgSetCountAttrib,_iProgressDlgSetIncAttrib,b10,_iProgressDlgSetPercentAttrib,b10,_iProgressDlgSetStateAttrib,b10,_iProgressDlgSetDescriptionAttrib,b10,b10,_iRadioCreateMethod,b10,b10,b10,b10,_iRadioSetValueAttrib,b10
,_iRadioSetValueHandleAttrib,b10,_iSboxCreateMethod,b10,b10,b10,b10,_iSboxSetColorAttrib,_iSboxSetDirectionAttrib,b10,_iSboxFocus_CB,b10,b10,_iScrollBoxCreateMethod,b10,b10,b10,b10,b10,b10,b10,b10,_iSpinCreateMethod,b10,b10,b10,b10,b10,b10,_iSpinboxCreateMethod
,b10,b10,b10,b10,b10,_iSplitCreateMethod,b10,b10,b10,b10,_iSplitSetColorAttrib,_iSplitSetOrientationAttrib,b10,_iSplitSetValueAttrib,b10,_iSplitSetLayoutDragAttrib,b10,_iSplitSetShowGripAttrib,b10,_iSplitSetAutoHideAttrib,b10,_iSplitSetBarSizeAttrib,b10,_iSplitSetMinMaxAttrib,b10,_iSplitFocus_CB,b10,b10,b10,_iTabsCreateMethod
,_iTabsGetInnerNativeContainerHandleMethod,b10,b10,b10,b10,_iTabsSetValueAttrib,b10,_iTabsSetValuePosAttrib,b10,_iTabsSetValueHandleAttrib,b10,b10,_iTabsSetShowCloseAttrib,b10,b10,b10,_iTextCreateMethod,b10,b10,b10,_iTextSetScrollbarAttrib,b10,_iTextSetMultilineAttrib,b10,_iTextSetAppendNewlineAttrib,_iTextSetValueMaskedAttrib,b10,_iTextSetMaskAttrib,_iTextSetMaskIntAttrib,_iTextSetMaskFloatAttrib
,_iTextSetMaskRealAttrib,b10,_iMultilineCreateMethod,b10,b10,b10,b10,_iTimerSetRunAttrib,b10,_iToggleCreateMethod,b10,b10,b10,_iToggleSetFlatAttrib,b10,_iTreeCreateMethod,b10,_iTreeSetDragDropTreeAttrib,b10,_iTreeSetShowDragDropAttrib,b10,_iTreeSetShowRenameAttrib,b10,_iTreeSetShowToggleAttrib,b10,_iTreeSetAddExpandedAttrib,b10,_iTreeSetCtrlAttrib,_iTreeSetShiftAttrib,b10
,_iTreeSetMarkModeAttrib,b10,b10,b10,b10,_iTreeGetTotalChildCountAttrib,_iTreeGetUserDataAttrib,b10,b10,_iTreeDragDataSize_CB,b10,_iTreeDragEnd_CB,b10,b10,_iUserSetClearAttributesAttrib,b10,_iValCreateMethod,b10,_iValSetMaxAttrib,b10,_iValSetMinAttrib,b10,_iValSetOrientationAttrib,b10,_iValSetInvertedAttrib,b10,b10,b10,b10,_iVboxSetSizeAttrib
,_iVboxSetRasterSizeAttrib,b10,_iVboxSetAlignmentAttrib,b10,_iZboxCreateMethod,b10,b10,b10,b10,b10,b10,_iZboxSetAlignmentAttrib,b10,_iZboxSetValueAttrib,b10,_iZboxSetValuePosAttrib,b10,_iZboxSetValueHandleAttrib,_iZboxSetVisibleAttrib,b10,b10,b10,b10,b10,b10,_emscriptenDialogSetTitleAttrib,b10,b10,b10,_emscriptenLabelSetBgColorAttrib
,_emscriptenLabelSetFgColorAttrib,_emscriptenLabelSetTitleAttrib,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_iiiiii = [b11];
var FUNCTION_TABLE_viiii = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iBackgroundBoxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iButtonComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iCanvasComputeNaturalSizeMethod,b12,b12
,b12,_iCboxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iDetachBoxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,_iDialogComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iExpanderComputeNaturalSizeMethod,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iFillComputeNaturalSizeMethod,b12,b12,b12,b12,b12,_iFlatButtonComputeNaturalSizeMethod,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iFrameComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,_iGridBoxComputeNaturalSizeMethod,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iHboxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iLabelComputeNaturalSizeMethod,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iListComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iNormalizerComputeNaturalSizeMethod,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iRadioComputeNaturalSizeMethod,b12,b12,b12,b12,b12
,b12,b12,b12,_iSboxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iScrollBoxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,_iSpinboxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,_iSplitComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,_iTabsComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iTextComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iToggleComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,_iVboxComputeNaturalSizeMethod,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,_iZboxComputeNaturalSizeMethod,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
,b12,b12,b12,b12,b12];

  return { _main: _main, _llvm_cttz_i32: _llvm_cttz_i32, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _memset: _memset, _sbrk: _sbrk, _memcpy: _memcpy, ___muldi3: ___muldi3, ___uremdi3: ___uremdi3, _i64Subtract: _i64Subtract, ___udivmoddi4: ___udivmoddi4, _emscriptenButtonCallbackTrampoline: _emscriptenButtonCallbackTrampoline, _realloc: _realloc, _i64Add: _i64Add, _pthread_self: _pthread_self, ___udivdi3: ___udivdi3, ___errno_location: ___errno_location, ___muldsi3: ___muldsi3, _testSetjmp: _testSetjmp, _saveSetjmp: _saveSetjmp, _free: _free, _malloc: _malloc, _emscriptenButtonCallbackTrampoline_Cb: _emscriptenButtonCallbackTrampoline_Cb, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_iiidd: dynCall_iiidd, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real__llvm_cttz_i32 = asm["_llvm_cttz_i32"]; asm["_llvm_cttz_i32"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__llvm_cttz_i32.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__sbrk.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____muldi3.apply(null, arguments);
};

var real____uremdi3 = asm["___uremdi3"]; asm["___uremdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____uremdi3.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real____udivmoddi4 = asm["___udivmoddi4"]; asm["___udivmoddi4"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivmoddi4.apply(null, arguments);
};

var real__emscriptenButtonCallbackTrampoline = asm["_emscriptenButtonCallbackTrampoline"]; asm["_emscriptenButtonCallbackTrampoline"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__emscriptenButtonCallbackTrampoline.apply(null, arguments);
};

var real__realloc = asm["_realloc"]; asm["_realloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__realloc.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__pthread_self = asm["_pthread_self"]; asm["_pthread_self"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__pthread_self.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____udivdi3.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real____muldsi3 = asm["___muldsi3"]; asm["___muldsi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____muldsi3.apply(null, arguments);
};

var real__testSetjmp = asm["_testSetjmp"]; asm["_testSetjmp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__testSetjmp.apply(null, arguments);
};

var real__saveSetjmp = asm["_saveSetjmp"]; asm["_saveSetjmp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__saveSetjmp.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real__emscriptenButtonCallbackTrampoline_Cb = asm["_emscriptenButtonCallbackTrampoline_Cb"]; asm["_emscriptenButtonCallbackTrampoline_Cb"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__emscriptenButtonCallbackTrampoline_Cb.apply(null, arguments);
};
var _main = Module["_main"] = asm["_main"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var _emscriptenButtonCallbackTrampoline = Module["_emscriptenButtonCallbackTrampoline"] = asm["_emscriptenButtonCallbackTrampoline"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _emscriptenButtonCallbackTrampoline_Cb = Module["_emscriptenButtonCallbackTrampoline_Cb"] = asm["_emscriptenButtonCallbackTrampoline_Cb"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_iiidd = Module["dynCall_iiidd"] = asm["dynCall_iiidd"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===





function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



//# sourceMappingURL=hello.html.map